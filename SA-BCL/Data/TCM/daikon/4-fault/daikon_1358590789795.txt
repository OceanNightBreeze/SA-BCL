#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V ERROR utilMDE.Assert$AssertionException (143,913) (143,913) 
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR utilMDE.Assert$AssertionException (143,913) 793 985 231 639 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ProglangType:isScalar()Z
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.VarInfo:esc_name(Ljava.lang.String;)Ljava.lang.String;
jtb.Token:newToken(I)Ljtb.Token;
daikon.Quant:pairwiseLT([I[I)Z
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
jtb.JavaCharStream:getBeginLine()I
daikon.Quant:subsetOf([B[I)Z
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
jtb.JavaParser:generateParseException()Ljtb.ParseException;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.Quant:eltsLTE([II)Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.Debug:logDetail()Z
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.Quant:eltsGteIndex([I)Z
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfo:old_var_names(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.PptSlice0:initInvariantsSeen()V
jtb.JavaCharStream:BeginToken()C
utilMDE.MathMDE:gcd(II)I
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:intersection([I[I)[I
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
utilMDE.MathMDE:missing_numbers([I)[I
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.Quant:lexGTE([I[I)Z
daikon.Debug:logOn()Z
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:pairwiseGT([I[I)Z
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:eltwiseNotEqual([I)Z
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.Quant:slice([III)[I
utilMDE.FuzzyFloat:ne(DD)Z
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.diff.Node:Node(LutilMDE.Pair;)V
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.Quant:memberOf(D[F)Z
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.ProglangType:isPointerFileRep()Z
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.inv.ValueSet:ValueSet(I)V
jtb.JavaParserTokenManager:jjStopAtPos(II)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE:pow_fast(II)I
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.Quant:memberOf(F[D)Z
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
utilMDE.Intern:numIntArrays()I
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.Assert:assertTrue(Z)V
utilMDE.ArraysMDE:sum([D)D
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.Quant:lte(II)Z
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.Quant:eltwiseGTE([I)Z
daikon.ProglangType:baseIsIntegral()Z
daikon.inv.filter.ParentFilter:ParentFilter()V
utilMDE.MathMDE:gcd([I)I
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.Quant:pairwiseGTE([I[I)Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.Quant:concat([I[I)[I
utilMDE.Options.OptionInfo:argument_required()Z
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.EntrySet:size()I
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.PptName:isEnterPoint()Z
daikon.Quant:memberOf(S[S)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaCharStream:backup(I)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:subsetOf([I[I)Z
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.inv.Invariant:prob_or(DD)D
daikon.diff.Node:children()Ljava.util.Iterator;
jtb.JavaCharStream:getEndColumn()I
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
utilMDE.LimitedSizeIntSet:add(I)V
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:union([I[I)[I
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
utilMDE.MathMDE:mod_positive(JJ)J
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.Quant:subsetOf([D[F)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
daikon.ModBitTracker:num_sets()I
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:isReverse([I[I)Z
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.Quant:subsetOf([D[D)Z
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.diff.InvMap:InvMap()V
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.test.FormatTestCase:passes()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.ModBitTracker:split(I)I
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern:internSubsequence([III)[I | RETURN | 22902 | return null
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.Quant:lexLT([I[I)Z
daikon.Quant:eltwiseGT([I)Z
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
jtb.JavaCharStream:getBeginColumn()I
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.UpperBoundCore:computeProbability()D
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.inv.Invariants:Invariants()V
jtb.JavaParser:jj_3_16()Z
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:sum([[D)D
daikon.inv.OutputFormat:isJavaFamily()Z
utilMDE.ArraysMDE:concat([I[I)[I
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.Ppt:Ppt()V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
utilMDE.MathMDE:negate(I)I
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.ValueTuple:isMissing(I)Z
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.Quant:eq(JJ)Z
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_ntk()I
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.Quant:eq(FF)Z
jtb.JavaCharStream:getEndLine()I
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:noDups([I)Z
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.VarInfoName:isLiteralConstant()Z
jtb.JavaParser:jj_scan_token(I)Z
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.Quant:memberOf(F[F)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.inv.Invariant:prob_and(DD)D
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.Quant:sameLength([I[I)Z
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaCharStream:ReadByte()C
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.Quant:eq(II)Z
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.Quant:ne(II)Z
utilMDE.ArraysMDE:sorted([I)Z
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.Quant:eltsGtIndex([I)Z
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.scalar.NonModulus:updateResults()V
jtb.ParseException:getMessage()Ljava.lang.String;
utilMDE.ArraysMDE:sum([I)I
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ProglangType:dimensions()I
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.diff.PrintAllVisitor:bufPrintln()V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.inv.unary.scalar.UpperBound:enabled()Z
utilMDE.Intern:intern([J)[J
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
utilMDE.Intern:intern([I)[I
daikon.inv.unary.UpperBoundCore:calc_modulus()J
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_2_16(I)Z
daikon.Quant:eltsLteIndex([I)Z
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.RootNode:RootNode()V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.inv.Invariant:getConfidence()D
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.Add:amount()Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:eltwiseLTE([I)Z
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.VarInfoName:name()Ljava.lang.String;
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:max([I)I
utilMDE.ArraysMDE:indexOf([II)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.PptSlice1:arity()I
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.ArraysMDE:min([I)I
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.Quant:eltsLT([II)Z
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.Quant:eltwiseLT([I)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.Quant:eltsNotEqual([II)Z
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.VarInfo:new_ppt()V
daikon.PptSlice2:arity()I
utilMDE.FuzzyFloat:lte(DD)Z
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfo:relate_var()V
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.test.TestQuant:assert_arrays_equals([I[I)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.Quant:subsetOf([S[S)Z
utilMDE.ArraysMDE:sum([[I)I
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.VarInfo:name()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
utilMDE.MathMDE:pow(II)I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
utilMDE.ArraysMDE:element_range([I)I
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ProglangType:isPseudoArray()Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.ProglangType:baseIsFloat()Z
daikon.Quant:lexEqual([I[I)Z
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
jtb.syntaxtree.NodeOptional:NodeOptional()V
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.Invariant:logOn()Z
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.Quant:setDiff([I[I)[I
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.ProglangType:isArray()Z
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.config.Configuration:apply(Ljava.lang.String;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.Quant:lexGT([I[I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.diff.Node:Node()V
daikon.ProglangType:elementType()Ldaikon.ProglangType;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.Quant:eltsLtIndex([I)Z
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.ModBitTracker:num_samples()I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
utilMDE.MathMDE:mod_positive(II)I
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:min_max([I)[I
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.InvariantFormatTester:execute()Z
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
utilMDE.OrderedPairIterator:setnext2()V
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eq(DD)Z
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.inv.Invariant:logDetail()Z
daikon.ValueTuple:isMissingFlow(I)Z
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.Quant:lt(II)Z
daikon.inv.Invariant:justified()Z
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.Quant:subsetOf([F[D)Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.ValueTuple:size()I
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.Quant:memberOf(I[I)Z
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
jtb.JavaCharStream:FillBuff()V
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.Quant:eltsEqualIndex([I)Z
daikon.Quant:pairwiseDivides([I[I)Z
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:eltsEqual([II)Z
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
utilMDE.WeakHasherMap:processQueue()V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
utilMDE.FuzzyFloat:gt(DD)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
utilMDE.MathMDE:gcd_differences([I)I
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ModBitTracker:ModBitTracker(I)V
utilMDE.MathMDE:nonmodulus_strict([I)[I
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfo:jml_name(Ljava.lang.String;)Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.PptName:isCombinedExitPoint()Z
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.Quant:subsetOf([J[J)Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.ProglangType:isFloat()Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.FuzzyFloat:gte(DD)Z
daikon.Quant:gte(II)Z
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:pairwiseLTE([I[I)Z
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
utilMDE.WeakHasherMap:size()I
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.inv.unary.scalar.Modulus:enabled()Z
utilMDE.FuzzyFloat:eq(DD)Z
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:hashCode()I
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
utilMDE.LimitedSizeIntSet:size()I
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:subsetOf([F[F)Z
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
utilMDE.MathMDE:sign(I)I
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType; | STATEMENT | 24560 | stmt -> ;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.PptSlice1:num_samples()I
daikon.inv.Invariant:prob_and(DDD)D
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
jtb.JavaCharStream:readChar()C
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:lt(DD)Z
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.Invariant:isWorthPrinting()Z
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.VarInfo:simplify_name()Ljava.lang.String;
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.inv.unary.scalar.Positive:enabled()Z
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.Quant:eltsGT([II)Z
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.Quant:pairwiseEqual([I[I)Z
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.Quant:gt(II)Z
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.OrderedPairIterator:hasNext()Z
utilMDE.ArraysMDE:fn_is_permutation([I)Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.ModBitTracker:num_vars()I
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token; | CONSTANT | 64756 | 0 -> -1
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.Quant:eltsGTE([II)Z
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.ProglangType:isIntegral()Z
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
utilMDE.Intern:intern([D)[D
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.Quant:eltwiseEqual([I)Z
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:subarray([III)[I
daikon.Quant:memberOf(J[J)Z
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.Quant:pairwiseSquare([I[I)Z
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.ProglangType:baseIsScalar()Z
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:setEqual([I[I)Z
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.PptSlice0:arity()I
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:lexNotEqual([I[I)Z
daikon.VarInfoName.ElementsFinder:inPre()Z
utilMDE.MathMDE:gcd(JJ)J
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoAux:hashCode()I
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.Quant:lexLTE([I[I)Z
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
utilMDE.MathMDE:modulus([I)[I
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfo:isPointer()Z
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoName:hashCode()I
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.OrderedPairIterator:setnext1()V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
jtb.ParseException:ParseException(Ljava.lang.String;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
542 2 573 2 257 2 897 2 785 4 232 2 312 2 913 2 143 2 
543 6 158 2 617 2 845 2 344 2 1008 6 80 2 486 2 754 2 148 2 641 6 
875 6 78 4 913 2 96 2 286 6 593 6 735 2 253 6 831 2 861 4 71 2 143 2 691 2 
742 2 198 8 890 8 434 2 780 4 500 4 809 6 504 2 895 2 609 4 844 8 343 10 473 16 902 6 690 6 406 2 143 4 410 6 114 8 283 2 913 4 383 2 921 6 560 6 958 14 
172 6 265 4 
492 2 
134 2 198 2 890 2 936 2 809 2 97 2 400 2 609 2 202 2 844 2 343 4 902 2 473 6 690 2 410 2 178 2 114 2 765 2 921 2 560 2 834 2 958 4 88 2 
198 8 890 8 781 4 114 5 809 4 797 2 920 6 844 8 921 4 220 4 902 4 187 2 958 12 473 14 690 4 406 2 740 6 
496 4 297 62 3 2 746 4 631 4 8 2 508 2 611 2 576 4 369 2 544 4 613 2 445 2 272 4 995 2 509 4 41 10 548 2 550 2 847 2 512 4 789 2 693 10 316 2 851 8 877 2 615 6 620 14 153 2 977 2 702 4 830 4 326 4 52 2 707 2 124 2 291 4 926 2 528 2 293 4 
536 2 9 2 174 2 520 2 492 2 524 2 424 2 929 2 191 2 31 2 
193 2 56 2 531 2 393 2 463 2 662 2 398 2 542 2 204 2 545 2 722 2 846 2 143 4 144 2 550 2 851 2 351 2 913 4 915 4 358 2 161 2 564 2 802 4 163 2 989 2 631 4 503 2 686 2 688 2 306 2 102 2 816 2 512 2 635 2 695 2 454 2 1000 2 455 4 379 2 764 2 53 2 957 2 959 2 708 2 
965 4 888 4 229 2 198 32 934 2 890 32 781 4 809 16 442 6 609 2 664 4 844 32 343 6 402 2 902 16 273 4 473 53 690 16 68 8 143 4 408 4 108 6 410 4 725 6 824 2 729 6 913 4 114 22 217 2 491 2 920 6 921 16 560 18 645 2 220 4 958 48 292 6 740 6 565 4 
851 2 615 2 847 2 
163 2 777 22 804 2 79 2 377 2 538 2 517 2 490 2 736 2 385 2 692 2 678 2 494 2 90 10 
532 3 656 2 389 24 4 2 5 2 6 2 399 2 663 3 401 2 11 2 901 2 898 1 277 2 788 2 904 16 143 32 147 2 905 2 409 1 279 2 552 3 909 3 18 2 911 6 151 32 675 2 556 4 913 34 914 2 677 1 24 2 798 2 927 2 562 2 160 1 295 2 298 2 932 1 567 16 805 1 935 5 683 1 300 4 35 2 167 2 437 2 811 2 942 2 687 3 575 2 814 2 945 2 39 2 312 2 821 8 314 6 449 1 584 2 694 2 177 3 46 2 698 2 453 1 586 1 587 2 320 2 321 2 325 1 703 2 51 2 955 1 706 2 460 3 462 1 963 1 714 2 57 2 716 3 967 2 968 2 60 2 465 2 61 2 200 2 718 2 608 2 612 2 67 2 206 2 208 8 75 2 215 2 619 2 485 2 81 4 353 2 731 2 980 2 355 2 488 2 489 2 356 3 85 2 359 3 626 2 493 2 628 2 866 2 986 2 363 1 499 32 870 2 505 12 236 6 238 2 506 2 507 4 101 6 992 4 371 16 239 1 994 2 374 2 104 3 510 2 105 24 997 2 111 2 878 4 879 2 638 8 1001 4 522 2 882 2 119 2 884 16 768 2 1006 4 1011 2 1010 2 255 2 1014 2 772 2 773 2 887 3 886 2 130 2 
226 2 
594 2 913 2 
361 2 913 4 796 2 
2 4 392 2 892 2 336 2 467 4 64 2 340 6 843 2 347 2 666 2 474 4 275 2 13 6 549 2 848 2 670 4 479 2 149 30 19 6 211 6 412 2 853 6 852 6 23 2 216 6 416 4 417 6 421 2 224 2 801 30 294 6 744 4 228 6 498 2 301 2 366 4 810 2 98 2 943 2 372 30 40 6 578 2 581 2 315 2 248 2 179 2 456 2 183 6 382 4 120 2 767 2 121 6 188 2 771 6 1016 2 530 6 131 2 
755 1 268 2 365 2 375 2 
103 2 375 2 
895 2 851 2 49 2 429 2 661 2 375 2 495 2 
924 2 661 2 375 2 
218 2 661 2 375 2 
254 2 365 2 378 2 
661 2 375 2 
681 2 378 2 
484 2 375 2 
832 2 365 2 378 2 
365 2 14 2 737 2 
840 2 365 2 760 2 
76 2 365 2 146 2 
157 2 651 2 365 2 
893 2 378 2 
86 2 375 2 
737 2 478 2 
840 2 443 2 
289 2 146 2 
150 2 651 2 
378 2 668 2 
33 2 651 2 
146 2 388 2 
840 2 422 2 
737 2 582 2 
832 2 526 2 365 2 378 2 
832 2 526 2 365 2 378 2 947 2 
365 2 378 2 669 2 
900 2 365 2 378 2 
45 2 602 2 444 2 753 2 
851 2 308 2 173 2 495 2 
851 2 308 2 429 2 173 2 235 2 495 2 
895 2 851 2 559 2 661 2 375 2 495 2 
342 2 53 2 
895 2 851 2 89 2 495 2 
826 2 146 2 
651 2 856 2 
471 2 737 2 
840 2 25 2 
840 2 288 2 651 2 
840 2 972 2 651 2 
840 2 577 2 651 2 
840 2 59 2 651 2 
933 6 261 2 822 2 851 2 381 2 384 2 190 6 495 2 
378 2 749 2 
655 2 210 2 777 6 247 2 260 2 20 2 728 4 502 2 354 2 339 2 115 2 99 2 896 2 66 2 787 2 646 4 329 2 128 2 
970 2 365 2 
167 2 
259 2 4 2 137 2 659 2 6 6 788 2 143 26 147 2 907 2 790 2 18 2 911 2 151 6 675 2 556 2 913 26 677 2 927 2 295 4 298 2 683 2 300 4 35 2 307 2 814 2 39 2 446 2 312 2 314 6 46 2 698 2 828 2 322 2 457 2 706 2 54 2 57 2 60 2 968 2 465 2 337 2 839 4 612 2 67 2 69 2 81 4 353 2 488 2 863 2 626 2 493 2 866 2 499 4 870 2 236 4 505 8 872 2 101 2 992 4 374 2 996 4 997 2 878 2 638 2 1001 4 1003 2 119 2 884 6 1006 2 768 2 255 2 772 2 886 2 130 2 
259 2 4 2 137 2 659 2 6 6 788 2 143 26 147 2 790 2 18 2 414 2 911 2 151 6 675 2 556 2 913 26 677 2 927 2 679 2 295 4 298 2 683 2 300 4 35 2 307 2 814 2 39 2 446 2 312 2 314 6 46 2 698 2 828 2 322 2 457 2 706 2 57 2 60 2 968 2 465 2 337 2 839 4 200 2 610 2 612 2 67 2 619 2 81 4 353 2 488 2 863 2 626 2 493 2 866 2 499 4 870 2 236 6 505 8 872 2 101 2 992 4 374 2 996 4 997 2 878 2 638 2 1001 4 1003 2 882 2 119 2 884 6 1006 2 768 2 255 2 772 2 886 2 130 2 
984 2 
305 2 469 2 
551 2 227 2 195 2 617 2 806 2 395 2 699 2 606 2 641 2 287 2 266 2 28 2 845 2 1008 2 579 4 710 2 17 2 426 4 
195 2 395 2 465 2 541 2 784 2 606 2 266 2 543 6 845 4 67 2 788 2 143 6 148 2 207 2 17 2 906 2 724 2 551 2 209 2 617 4 482 4 280 2 913 12 979 2 287 2 28 2 158 2 927 2 563 2 426 4 227 4 165 2 430 2 806 2 300 2 95 4 169 2 440 2 632 2 170 2 574 2 368 4 814 2 751 2 817 4 579 4 313 4 314 4 758 2 1001 2 699 2 112 6 640 2 641 6 185 2 706 2 1008 4 189 2 710 2 886 2 
195 2 395 2 465 2 541 2 784 2 606 2 266 2 543 6 845 4 67 2 788 2 143 6 148 2 207 2 17 2 906 2 724 2 551 2 209 2 617 4 482 4 280 2 80 2 913 12 979 2 287 2 28 2 927 2 563 2 426 4 227 4 165 2 430 2 806 2 300 2 95 4 169 2 440 2 632 2 170 2 574 2 368 4 814 2 751 2 817 4 579 4 313 4 314 4 758 2 1001 2 699 2 112 6 640 2 641 4 185 2 706 2 1008 6 189 2 710 2 886 2 
195 2 395 2 465 2 541 2 784 2 606 2 266 2 543 6 845 4 67 2 788 2 143 6 148 2 207 2 17 2 906 2 724 2 551 2 209 2 617 4 482 4 280 2 913 12 979 2 287 2 28 2 927 2 563 2 426 4 227 4 165 2 430 2 806 2 300 2 95 4 169 2 440 2 632 2 170 2 574 2 368 8 814 2 751 2 817 4 579 4 313 4 754 2 314 4 758 2 1001 2 699 2 112 6 640 2 641 6 185 2 706 2 1008 6 189 2 710 2 886 2 
195 2 395 2 465 2 541 2 784 2 606 2 266 2 543 8 845 4 67 2 788 2 143 6 148 2 207 2 17 2 906 2 724 2 551 2 209 2 617 4 482 8 280 2 80 2 913 12 979 2 287 2 28 2 927 2 563 2 426 4 227 4 165 2 430 2 806 2 300 2 95 4 169 2 440 2 632 2 170 2 574 2 368 8 814 2 751 2 817 4 579 4 313 4 754 2 314 4 758 2 1001 2 699 2 112 10 640 2 641 6 185 2 706 2 1008 8 189 2 710 2 886 2 
195 2 395 2 465 2 541 2 784 2 606 2 266 2 543 6 845 4 67 2 788 2 143 6 148 2 207 2 17 2 906 2 724 2 551 2 209 2 617 4 482 8 280 2 913 12 979 2 287 2 28 2 927 2 563 2 426 4 227 4 165 2 430 2 806 2 300 2 95 4 169 2 440 2 632 2 170 2 574 2 368 8 814 2 751 2 817 4 579 4 313 4 754 2 314 4 758 2 1001 2 699 2 112 10 640 2 641 6 185 2 706 2 1008 6 189 2 710 2 886 2 
778 1 537 6 6 6 541 2 784 2 266 2 543 12 274 2 788 2 17 2 551 2 555 10 280 2 556 2 285 8 795 6 287 2 28 2 799 2 561 2 563 4 30 2 806 2 300 4 574 2 813 2 814 2 817 6 579 4 313 4 312 2 314 6 46 2 588 7 322 2 594 6 57 2 600 1 60 12 337 2 839 4 606 2 65 1 612 2 845 4 67 2 617 4 80 4 353 2 81 4 622 6 624 2 361 6 626 2 866 2 629 2 364 1 95 8 868 2 632 2 368 2 101 2 374 2 878 2 638 2 376 6 640 2 112 2 881 2 641 4 380 2 117 2 882 2 642 6 119 2 883 2 884 6 648 2 652 4 886 2 130 2 395 2 405 2 143 24 148 4 147 2 906 2 908 6 911 2 151 8 675 2 152 1 913 46 159 2 927 2 928 2 426 4 428 6 430 2 165 4 941 6 440 2 169 2 170 2 944 6 171 2 175 6 450 2 699 2 457 4 185 2 706 2 189 2 461 2 710 2 960 2 195 2 196 6 199 2 715 1 465 2 200 2 721 4 205 2 472 1 974 7 207 2 209 2 483 2 979 2 488 2 493 2 739 2 225 6 227 4 226 6 497 2 499 2 236 6 505 4 750 2 237 2 992 4 751 2 752 2 997 2 757 2 516 1 758 2 1001 4 1003 2 1005 2 763 2 1006 2 1008 8 770 2 255 2 529 6 775 1 
395 2 537 6 541 2 6 6 784 2 894 2 266 2 543 12 274 2 405 2 788 2 143 26 147 2 148 4 17 2 906 2 908 6 551 2 555 10 413 2 911 2 280 2 151 8 675 2 556 4 913 48 285 8 795 6 287 2 28 2 799 2 159 2 561 2 927 2 928 2 30 2 563 4 295 2 426 4 428 6 165 4 430 2 806 2 300 4 941 6 169 2 440 2 170 2 813 2 574 2 944 6 814 2 171 2 817 6 579 4 312 2 313 4 314 6 450 2 175 6 46 2 699 2 322 2 457 4 594 6 185 2 706 2 461 2 189 2 960 2 710 2 57 2 195 2 196 6 199 2 60 12 465 2 839 4 337 2 200 2 606 2 721 4 205 2 845 4 612 2 67 2 207 2 209 2 617 4 483 2 81 4 353 2 622 6 979 2 488 2 624 2 361 6 626 2 493 2 739 2 225 6 629 2 866 2 226 6 227 4 497 2 499 2 95 8 868 2 632 2 505 8 236 6 237 2 750 2 368 6 101 2 992 4 751 2 752 2 374 2 754 4 997 2 757 2 878 4 758 2 638 2 1001 4 376 6 112 2 1003 2 640 2 881 2 380 2 641 8 117 2 763 2 1005 2 642 6 882 2 119 2 883 2 884 6 1006 4 1008 8 770 2 648 2 255 2 529 6 652 4 886 2 130 2 
395 2 537 6 541 2 6 6 784 2 894 2 266 2 543 12 274 2 405 2 788 2 143 26 147 2 148 4 17 2 906 2 908 6 551 2 555 10 413 2 911 2 280 2 151 8 675 2 556 4 913 48 285 8 795 6 287 2 28 2 799 2 159 2 561 2 927 2 928 2 30 2 563 4 295 2 426 4 428 6 165 4 430 2 806 2 300 4 941 6 169 2 440 2 170 2 813 2 574 2 944 6 814 2 171 2 817 6 579 4 312 2 313 4 314 6 450 2 175 6 46 2 699 2 322 2 457 4 594 6 185 2 706 2 461 2 189 2 960 2 710 2 57 2 195 2 196 6 199 2 60 12 465 2 839 4 337 2 200 2 606 2 721 4 205 2 845 4 612 2 67 2 207 2 209 2 617 4 482 4 483 2 81 4 353 2 622 6 979 2 488 2 624 2 361 6 626 2 493 2 739 2 225 6 629 2 866 2 226 6 227 4 497 2 499 2 95 8 868 2 632 2 505 8 236 6 237 2 750 2 368 6 101 2 992 4 751 2 752 2 374 2 754 4 997 2 757 2 878 4 758 2 638 2 1001 4 376 6 1003 2 112 6 640 2 881 2 380 2 641 8 117 2 763 2 1005 2 642 6 882 2 119 2 883 2 884 6 1006 4 1008 8 770 2 648 2 255 2 529 6 652 4 886 2 130 2 
537 6 541 2 6 8 784 2 266 2 543 16 274 2 788 2 17 2 551 2 554 2 555 8 280 2 556 4 285 8 795 12 287 2 28 2 799 2 561 2 563 4 30 2 295 2 296 6 806 2 300 4 574 2 813 2 814 2 817 6 579 4 313 4 312 2 314 6 46 2 322 2 594 12 597 6 57 2 60 10 337 2 839 6 606 2 612 2 845 4 67 2 617 4 80 2 353 2 81 4 622 12 624 2 361 12 626 2 865 6 866 2 629 2 95 8 868 2 632 2 368 6 101 4 374 2 878 4 638 4 376 6 640 2 112 6 881 2 641 10 380 2 117 2 882 2 642 12 119 2 883 2 884 8 647 2 648 2 652 4 886 2 130 2 395 2 894 2 405 2 143 24 148 4 147 2 407 2 906 2 908 6 411 6 413 2 911 4 151 12 675 2 913 52 418 6 158 2 923 2 159 2 423 6 927 2 928 2 426 4 428 6 164 2 430 2 165 4 941 6 440 2 169 2 170 2 944 6 171 2 175 6 450 2 699 2 457 4 185 2 458 6 186 6 706 2 189 2 461 2 710 2 960 2 195 2 196 6 199 2 465 2 200 2 720 2 721 4 205 2 207 2 209 2 482 4 483 2 979 2 488 2 493 2 738 2 225 6 227 4 226 12 497 2 499 4 990 2 236 6 505 10 237 2 750 2 992 4 751 2 752 2 754 4 997 2 757 2 998 6 758 2 1001 4 1003 4 1005 2 763 2 1006 4 1008 10 770 2 255 2 529 6 
195 2 430 2 395 2 95 2 632 2 784 2 440 2 606 2 266 2 574 2 543 4 368 6 845 4 817 2 579 2 313 2 754 2 148 2 906 2 551 2 209 2 617 4 482 4 758 2 699 2 913 4 112 4 640 2 979 2 641 6 185 2 28 2 1008 6 189 2 426 2 
395 2 6 6 784 2 266 2 543 4 788 2 143 24 148 2 147 2 906 2 551 2 555 2 911 3 151 8 675 2 913 28 28 2 927 2 426 2 431 2 430 2 300 4 167 2 440 2 574 2 814 2 817 2 579 2 313 2 312 2 314 6 583 2 46 2 699 2 322 2 457 2 185 2 706 2 189 2 711 2 57 2 195 2 60 4 465 2 337 2 839 4 200 2 606 2 845 4 612 2 67 2 209 2 617 4 81 4 353 2 979 2 488 2 626 2 223 3 864 2 493 2 628 2 739 2 866 2 986 2 499 3 95 2 632 2 871 2 236 6 368 6 101 3 992 4 751 2 374 2 754 2 758 2 1001 4 112 2 640 2 641 6 882 2 119 2 884 6 1008 6 255 2 773 2 886 2 130 2 
195 2 395 2 465 2 541 2 784 2 606 2 266 2 543 6 845 4 67 2 788 2 143 6 148 2 207 2 17 2 906 2 724 2 551 2 209 2 617 4 482 8 280 2 913 12 979 2 287 2 28 2 927 2 563 2 426 4 227 4 165 2 430 2 806 2 300 2 95 4 169 2 440 2 632 2 170 2 574 2 368 8 814 2 751 2 817 4 579 4 313 4 754 2 314 4 758 2 1001 2 699 2 112 10 640 2 641 6 185 2 706 2 1008 6 189 2 710 2 886 2 
195 2 395 2 465 2 541 2 784 2 606 2 266 2 543 8 845 4 67 2 788 2 143 6 148 2 207 2 17 2 906 2 551 2 617 4 482 8 280 2 913 12 979 2 287 2 28 2 158 2 221 4 927 2 563 2 426 4 227 4 165 2 430 2 806 2 300 2 95 4 169 2 440 2 632 2 170 2 574 2 368 8 814 2 751 2 817 4 579 4 313 4 754 2 314 4 513 2 758 2 1001 2 699 2 112 10 640 2 641 8 118 2 185 2 706 2 1008 6 189 2 710 2 886 2 
979 2 632 2 156 2 
979 2 632 2 156 2 
541 2 6 2 784 2 266 4 543 16 899 2 547 4 788 2 143 16 147 2 148 4 17 2 906 2 671 2 672 2 555 2 280 2 151 2 675 2 556 4 913 24 156 2 287 2 158 4 927 2 563 4 426 2 428 2 165 2 435 2 300 4 169 2 812 2 814 2 817 4 579 2 312 2 313 2 448 2 314 6 42 2 317 4 589 2 699 2 590 2 591 2 322 2 457 6 954 2 706 2 960 2 57 2 195 2 60 4 465 2 337 2 200 2 721 2 841 2 470 2 612 2 345 2 845 4 67 2 70 2 617 4 482 4 80 4 81 4 353 2 979 4 488 2 626 2 493 2 866 2 227 4 497 2 499 2 95 4 632 6 505 4 236 6 368 6 872 4 992 4 374 2 754 4 997 4 878 4 1001 4 113 2 112 6 641 12 763 2 882 2 119 2 884 2 1006 4 1008 12 527 2 255 2 652 2 886 2 130 2 
428 2 837 2 555 2 806 2 589 2 60 2 113 2 913 4 954 2 237 2 469 2 309 2 171 2 927 2 634 2 652 2 143 2 
541 2 6 2 784 2 266 4 543 16 899 2 547 4 788 2 143 16 147 2 148 4 17 2 906 2 671 2 672 2 280 2 151 2 675 2 556 4 913 24 156 2 287 2 158 4 927 2 563 4 426 2 428 2 165 4 300 4 169 2 170 2 814 2 817 4 579 2 313 2 312 2 314 6 42 2 317 4 589 2 699 2 591 2 322 2 457 6 954 2 706 2 835 2 960 2 57 2 195 2 60 2 465 2 337 2 200 2 721 2 841 2 470 4 612 2 345 2 845 4 67 2 70 2 617 4 482 4 80 4 81 4 353 2 979 4 488 2 222 2 626 2 493 2 866 2 227 4 497 2 499 4 95 4 747 2 632 6 505 4 236 6 368 6 872 4 992 4 374 2 754 4 109 2 997 4 878 4 1001 4 113 2 112 6 641 12 763 2 882 2 119 2 884 2 1006 4 1009 2 1008 12 527 2 255 2 886 2 130 2 
541 2 6 2 784 2 266 4 543 16 899 2 142 2 547 4 788 2 143 16 147 2 148 4 17 2 906 2 671 2 672 2 555 2 280 2 151 2 675 2 556 4 913 24 156 2 287 2 26 2 158 4 925 2 927 2 563 4 426 2 428 2 165 4 300 4 169 2 170 2 814 2 817 4 579 2 312 2 313 2 314 6 42 2 317 4 180 2 589 2 699 2 591 2 322 2 457 6 954 2 706 2 960 2 57 2 195 2 60 4 465 2 337 2 200 2 721 2 841 2 470 2 612 2 345 2 845 4 67 2 70 2 349 2 617 4 482 4 80 4 81 4 353 2 979 4 488 2 626 2 493 2 866 2 227 4 497 2 499 2 95 4 632 6 505 4 236 6 368 6 872 4 992 4 374 2 754 4 997 4 878 4 1001 4 113 2 112 6 641 12 763 2 882 2 119 2 884 2 1006 4 1008 12 527 2 255 2 652 2 886 2 130 2 
776 2 259 2 535 10 781 4 262 2 782 2 6 14 7 4 10 4 269 2 270 12 544 2 271 2 12 12 788 2 278 2 790 2 554 2 553 2 793 2 284 2 558 2 560 4 300 4 807 2 808 2 303 2 304 4 809 2 37 2 307 12 576 2 814 2 815 16 312 2 818 2 819 2 314 6 43 2 46 2 585 2 825 2 319 2 828 2 323 2 324 2 829 2 48 2 326 2 328 2 57 2 836 4 58 2 332 4 334 2 335 2 60 2 839 12 337 2 605 2 338 2 844 4 612 2 67 2 73 2 74 2 855 2 618 2 81 2 621 2 353 2 623 2 357 2 360 10 862 2 863 2 626 2 864 2 629 2 630 3 867 2 871 2 633 2 100 3 101 16 374 2 110 6 637 4 638 18 639 2 114 4 881 2 116 4 882 2 119 2 883 2 884 14 644 2 650 24 387 2 886 2 133 2 889 2 391 4 890 4 137 2 396 10 659 2 902 2 143 24 147 2 407 2 911 16 151 22 912 2 154 2 913 32 677 2 917 2 918 2 921 2 923 2 159 2 927 2 164 2 431 2 934 4 683 2 433 2 434 2 168 2 446 2 690 2 697 4 451 2 949 2 950 2 182 2 457 2 706 2 956 2 704 10 958 6 711 2 192 2 712 36 713 2 966 2 198 4 465 2 969 2 200 2 720 2 473 8 723 2 475 2 726 14 214 2 727 12 978 2 730 4 488 2 223 2 493 2 738 2 740 6 496 2 985 2 743 1 499 16 988 4 231 2 501 36 990 2 748 2 236 4 505 36 750 2 992 2 240 4 752 2 509 2 511 2 997 4 245 6 757 2 759 2 1001 4 1003 46 1004 2 762 2 251 16 525 4 1013 12 774 10 256 2 
535 4 499 2 334 2 396 2 867 2 262 2 782 2 6 2 839 2 100 2 101 2 723 2 143 2 46 2 553 2 911 2 151 2 913 2 1003 6 324 2 557 2 884 2 360 2 192 2 
535 4 499 2 334 2 396 2 867 2 262 2 782 2 6 2 839 2 100 2 101 2 723 2 143 2 46 2 553 2 911 2 151 2 913 2 1003 6 324 2 557 2 884 2 360 2 192 2 
535 4 499 2 334 2 396 2 867 2 262 2 782 2 6 2 839 2 100 2 101 2 723 2 143 2 46 2 553 2 911 2 151 2 913 2 1003 6 324 2 557 2 884 2 360 2 192 2 
162 2 194 2 534 2 567 2 432 4 198 2 499 3 890 2 891 2 140 6 439 4 809 2 844 2 267 2 311 4 403 4 902 2 473 5 903 2 690 2 580 4 904 2 143 4 408 2 46 2 318 3 911 3 151 2 729 4 82 2 913 10 523 2 921 2 459 3 958 4 126 2 192 2 596 2 962 3 741 2 
194 2 534 2 198 2 890 2 891 2 140 6 844 2 267 2 473 4 902 2 403 4 903 2 143 4 904 2 408 2 911 2 151 2 729 4 913 10 82 2 921 2 560 2 741 2 162 2 567 2 229 2 432 4 499 2 439 4 809 2 311 4 690 2 580 4 46 2 318 2 114 2 523 2 459 2 958 4 126 2 596 2 192 2 962 2 
194 2 534 2 198 2 890 2 891 2 140 6 844 2 267 2 473 4 902 2 403 4 903 2 143 4 904 2 408 2 911 2 151 2 729 4 913 10 82 2 921 2 560 2 741 2 162 2 567 2 229 2 432 4 499 2 439 4 809 2 311 4 690 2 580 4 46 2 318 2 114 2 523 2 459 2 958 4 126 2 596 2 192 2 962 2 
194 2 534 2 198 2 890 2 891 2 140 6 844 2 267 2 473 4 902 2 403 4 903 2 143 4 904 2 408 2 911 2 151 2 729 4 913 10 82 2 921 2 560 2 741 2 162 2 567 2 229 2 432 4 499 2 439 4 809 2 311 4 690 2 580 4 46 2 318 2 114 2 523 2 459 2 958 4 126 2 596 2 192 2 962 2 
194 2 534 2 198 2 890 2 891 2 140 6 844 2 267 2 473 4 902 2 403 4 903 2 143 4 904 2 408 2 911 2 151 2 729 4 913 10 82 2 921 2 560 4 741 2 162 2 567 2 229 4 432 4 499 2 439 4 809 2 311 4 690 2 580 4 46 2 318 2 114 4 523 2 459 2 958 4 126 2 596 2 192 2 962 2 
643 2 949 2 684 2 676 2 181 2 733 2 
307 2 860 2 310 2 794 2 476 2 827 2 733 2 
427 2 533 2 93 2 658 2 570 1 233 2 783 2 508 1 973 1 143 8 849 2 246 1 910 2 616 2 281 2 250 2 913 10 622 2 885 2 706 2 124 1 327 2 1012 2 649 2 55 2 931 2 
331 2 332 2 229 2 198 6 333 2 890 6 781 2 807 2 809 6 664 2 844 6 204 2 665 2 473 15 902 6 68 2 690 6 143 6 106 2 408 2 635 2 725 4 729 4 913 6 114 5 921 6 560 3 645 1 958 12 387 2 740 4 
598 2 823 2 432 2 136 2 604 2 913 1 415 7 540 2 519 1 184 4 311 2 689 2 403 2 477 2 143 1 874 2 129 2 44 2 
598 4 823 4 432 2 136 2 604 2 415 6 540 2 184 4 311 2 689 2 403 2 477 2 874 2 129 2 44 4 
598 8 823 8 432 2 136 2 604 2 913 1 415 10 540 2 519 1 184 4 311 2 689 6 403 2 477 2 143 1 874 8 129 2 44 8 
598 2 823 2 432 2 136 2 604 2 415 2 540 2 184 2 311 2 403 2 477 2 129 2 44 2 
132 30 258 4 654 4 390 32 657 2 135 4 139 2 539 10 263 2 397 4 264 2 786 2 546 24 404 4 16 4 143 70 667 24 791 2 792 10 673 10 674 1 22 8 155 8 913 78 27 4 922 16 420 2 800 2 34 4 566 4 166 10 299 10 569 4 436 6 940 16 438 4 939 4 36 2 441 2 38 8 447 16 948 6 820 4 696 10 176 4 952 2 592 4 953 6 700 8 701 4 50 11 833 4 961 2 709 4 330 4 601 4 838 8 464 4 466 4 200 28 719 8 607 2 842 4 612 6 346 4 72 4 614 4 975 4 850 2 350 2 481 4 212 4 976 4 213 24 77 4 81 36 858 4 857 8 732 2 981 4 859 4 626 6 982 4 983 4 92 2 362 4 987 4 94 8 234 2 991 2 236 102 367 4 992 44 873 4 373 2 374 2 242 2 107 2 514 10 876 2 1002 2 880 4 761 6 882 26 252 4 766 4 122 14 769 4 125 4 1015 16 
132 6 0 2 657 2 779 2 263 2 539 6 200 12 397 2 62 2 842 2 612 2 143 26 791 2 481 2 212 4 213 8 854 2 77 4 81 14 913 28 487 2 858 4 857 6 732 2 919 10 420 2 626 2 92 2 987 2 566 4 682 2 299 6 166 2 938 2 436 4 685 2 441 2 991 2 236 40 992 14 873 2 374 2 946 2 447 14 948 2 696 6 176 4 876 2 999 2 1002 2 951 2 592 4 953 2 882 12 50 2 833 4 709 2 961 2 330 2 
132 34 0 8 258 4 654 6 1 10 657 8 779 2 138 12 539 16 263 8 264 2 397 4 546 92 276 6 15 4 16 6 143 134 667 84 791 5 21 4 155 24 913 150 919 22 27 6 290 26 420 2 800 2 803 8 34 4 566 6 682 2 166 18 299 16 569 6 937 8 302 2 938 2 436 8 685 11 940 42 572 2 441 2 36 2 447 28 948 10 820 6 696 16 176 6 951 4 592 6 953 36 700 50 701 6 50 16 833 6 330 10 961 8 709 10 964 4 601 4 838 42 464 6 466 6 717 26 200 58 63 6 607 4 62 4 842 10 203 24 341 4 612 14 614 4 975 6 480 4 481 10 212 6 213 124 854 2 77 6 81 88 487 2 858 8 857 16 732 4 981 4 84 4 859 4 626 14 982 6 983 4 91 24 362 4 987 6 745 4 869 90 991 2 236 248 367 4 992 112 370 10 873 4 993 2 374 8 241 10 243 8 242 2 244 4 636 2 756 24 999 2 876 2 515 24 249 2 1002 2 880 4 761 5 518 24 521 18 882 58 252 6 766 6 122 12 769 6 386 90 125 6 653 4 
599 2 1 2 197 2 657 2 394 2 603 2 139 2 263 2 539 4 200 6 201 2 842 2 468 2 203 2 971 2 141 2 612 2 145 2 143 44 850 2 791 2 792 2 348 4 481 2 673 2 212 2 213 6 21 2 352 2 77 2 282 2 81 20 913 46 487 2 83 2 916 2 734 2 419 2 420 2 219 2 625 2 87 2 626 2 29 4 425 6 627 2 930 2 680 2 91 2 803 2 92 2 32 2 987 2 566 2 166 2 568 2 299 4 230 2 436 6 571 2 441 2 991 2 236 48 992 20 370 2 374 2 946 2 241 2 447 36 948 2 514 2 696 4 176 2 876 2 515 2 452 2 1002 2 592 2 953 2 47 4 882 6 50 2 1007 2 705 2 123 2 595 4 833 2 330 2 709 2 961 2 127 2 
660 2 

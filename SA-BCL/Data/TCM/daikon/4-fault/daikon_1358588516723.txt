#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V ERROR utilMDE.Assert$AssertionException (443,1039) (443,1039) 453 
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V ERROR utilMDE.Assert$AssertionException (443,1039) (443,1039) 453 
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR utilMDE.Assert$AssertionException (443,1039) (443,1039) 453 1043 1067 1031 740 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_0()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_1()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_2()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_3()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_4()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_5()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_6()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_7()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_8()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_9()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_10()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_11()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_12()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_13()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_14()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_15()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_16()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_17()V PASSED
daikon.test.split.SplitterFactoryTest:testmisc_Fib_main_18()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_19()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_20()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_21()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_22()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_23()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_24()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_25()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_26()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_27()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_28()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_29()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_30()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_31()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_32()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__33()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__34()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__35()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__36()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__37()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__38()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__39()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__40()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__41()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__42()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__43()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
jtb.JavaParser:jj_3R_96()Z
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.Quant:eltwiseNotEqual([I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
jtb.JavaCharStream:ReadByte()C
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaCharStream:UpdateLineColumn(C)V
utilMDE.MathMDE:missing_numbers([I)[I
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.simplify.SimpUtil:formatInteger(J)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([ZZ)I
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
daikon.Quant:subsetOf([F[F)Z
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
jtb.syntaxtree.TypeArgument:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.VarInfoName:toString()Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.Quant:eltsLteIndex([I)Z
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
jtb.JavaParser:jj_3R_92()Z
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant; | RETURN | 2461 | return null
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.PptTopLevel:name()Ljava.lang.String;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
jtb.JavaParser:jj_3_13()Z
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
jtb.JavaParser:jj_2_17(I)Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
jtb.JavaParser:jj_3R_119()Z
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_118()Z
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
utilMDE.ArraysMDE:sorted([I)Z
daikon.Quant:lexLTE([I[I)Z
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.Quant:eq(II)Z
daikon.Quant:eltwiseEqual([I)Z
jtb.syntaxtree.TypeArguments:TypeArguments(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeArgument;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
utilMDE.WeakHasherMap:size()I
daikon.ProglangType:dimensions()I
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.JavaCharStream:readChar()C
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.Quant:lexEqual([I[I)Z
daikon.diff.InvMap:InvMap()V
utilMDE.Intern:intern([I)[I
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
utilMDE.MathMDE:modulus([I)[I
daikon.Quant:eltsGteIndex([I)Z
daikon.PptName:isEnterPoint()Z
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.diff.Node:Node()V
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String; | CONDITION | 29684 | if (x) -> if (!x)
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
jtb.JavaParser:jj_3R_123()Z
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
utilMDE.ArraysMDE:fn_is_total([I)Z
jtb.JavaParser:jj_3R_128()Z
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.ProglangType:elementType()Ldaikon.ProglangType;
jtb.JavaParser:jj_3R_67()Z
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
jtb.JavaParser:jj_3R_51()Z
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice1:arity()I
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.ProglangType:baseIsScalar()Z
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_121()Z
jtb.JavaParser:jj_3R_108()Z
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_149()Z
utilMDE.ArraysMDE:sum([[I)I
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.Quant:subsetOf([D[D)Z
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_177()Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quant:eltsLTE([II)Z
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:isScalar()Z
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
utilMDE.FuzzyFloat:lte(DD)Z
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eltsGtIndex([I)Z
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.Quant:pairwiseNotEqual([I[I)Z
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
utilMDE.ArraysMDE:element_range([I)I
jtb.JavaParser:jj_3_21()Z
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_2_25(I)Z
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.Quant:eltsNotEqual([II)Z
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_53()Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:subarray([III)[I
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
jtb.JavaParser:jj_3R_116()Z
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.inv.unary.LowerBoundCore:computeProbability()D
jtb.JavaParser:jj_3_20()Z
daikon.Quant:subsetOf([F[D)Z
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.test.FormatTestCase:passes()Z
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eq(DD)Z
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.JavaParser:jj_3_36()Z
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:indexOf([II)I
daikon.Debug:logOn()Z
jtb.JavaParser:ConstructorDeclaration()Ljtb.syntaxtree.ConstructorDeclaration;
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
daikon.ProglangType:isArray()Z
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
utilMDE.MathMDE:gcd_differences([I)I
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3_31()Z
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
utilMDE.MathMDE:bitwiseComplement(I)I
utilMDE.WeakHasherMap:processQueue()V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.inv.Invariant:justified()Z
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:enabled()Z
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
jtb.JavaParser:jj_3R_66()Z
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:name()Ljava.lang.String;
jtb.JavaCharStream:GetImage()Ljava.lang.String;
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3_27()Z
daikon.Quant:lexGTE([I[I)Z
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
jtb.JavaParser:jj_3R_82()Z
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.Quant:lexGT([I[I)Z
jtb.JavaParser:jj_3R_68()Z
daikon.PptName:PptName(Ljava.lang.String;)V
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
utilMDE.MathMDE:pow(II)I
daikon.VarInfo:relate_var()V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Ppt:Ppt()V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.Quant:pairwiseSquare([I[I)Z
jtb.JavaParser:jj_3R_85()Z
daikon.PptSlice1:num_samples()I
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_73()Z
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
jtb.JavaParser:jj_3R_210()Z
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.MathMDE:gcd(JJ)J
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaCharStream:getEndLine()I
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
jtb.JavaParser:jj_3R_114()Z
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:jj_3R_103()Z
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_60()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_2_10(I)Z
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:eltwiseLTE([I)Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_120()Z
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.OrderedPairIterator:setnext2()V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.FormatTestCase.SingleOutputTestCase:getDiffString()Ljava.lang.String;
jtb.JavaCharStream:FillBuff()V
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
utilMDE.FuzzyFloat:gte(DD)Z
daikon.ModBitTracker:ModBitTracker(I)V
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.diff.RootNode:RootNode()V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
daikon.ModBitTracker:num_vars()I
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Options.OptionInfo:argument_required()Z
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
jtb.JavaParser:jj_3R_52()Z
jtb.JavaCharStream:backup(I)V
utilMDE.LimitedSizeIntSet:add(I)V
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.VarInfoName.NodeFinder:inPre()Z
utilMDE.ArraysMDE:noDuplicates([J)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.Quant:eltsLtIndex([I)Z
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
jtb.JavaParser:jj_2_7(I)Z
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.JavaParser:jj_3R_133()Z
daikon.Quant:setEqual([I[I)Z
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.VarInfo:dbc_name()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict([I)[I
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.Quant:pairwiseLT([I[I)Z
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.inv.Invariant:prob_and(DDD)D
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:concat([I[I)[I
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
utilMDE.FuzzyFloat:gt(DD)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
jtb.JavaParser:jj_3R_86()Z
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
jtb.JavaCharStream:getBeginColumn()I
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
jtb.JavaParser:jj_2_21(I)Z
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_163()Z
jtb.JavaParser:jj_3R_93()Z
utilMDE.ArraysMDE:sum([I)I
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.Quant:ne(II)Z
daikon.ValueTuple:isMissing(I)Z
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.PptMap:asCollection()Ljava.util.Collection;
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_scan_token(I)Z
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_50()Z
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
jtb.JavaParser:jj_3R_54()Z
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
utilMDE.Intern:numIntArrays()I
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
jtb.JavaParser:jj_3R_125()Z
jtb.JavaParser:jj_3R_58()Z
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_22()Z
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:prob_or(DD)D
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:mod_positive(JJ)J
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
jtb.JavaParser:jj_2_15(I)Z
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ConstructorDeclaration:ConstructorDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3_19()Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.FuzzyFloat:lt(DD)Z
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.Token:newToken(I)Ljtb.Token;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:subsetOf([S[S)Z
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.Quant:eltwiseGTE([I)Z
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.VarInfoName:isLiteralConstant()Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaCharStream:BeginToken()C
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.Quant:sameLength([I[I)Z
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
utilMDE.ArraysMDE:indexOf([I[I)I
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_56()Z
daikon.Quant:gte(II)Z
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_106()Z
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_77()Z
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.ModBitTracker:num_samples()I
utilMDE.MathMDE:negate(I)I
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.ConstructorDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarComparabilityImplicit:alwaysComparable()Z
utilMDE.TestUtilMDE:lsis_test(I)V
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.ValueTuple:size()I
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
utilMDE.Intern:intern([J)[J
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
jtb.JavaParser:jj_3R_94()Z
daikon.VarInfoName.Simple:isLiteralConstant()Z
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.Quant:slice([III)[I
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.test.TestQuant:removeAdjacentDups([I)[I
jtb.JavaParser:jj_3R_99()Z
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
jtb.JavaParser:jj_3R_173()Z
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.Debug:logDetail()Z
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.PptSlice0:initInvariantsSeen()V
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
jtb.JavaParser:jj_3R_69()Z
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_1()Z
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.Quant:intersection([I[I)[I
jtb.JavaParser:jj_3R_207()Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
jtb.JavaParser:jj_3_12()Z
jtb.JavaParser:jj_3R_80()Z
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.ArraysMDE:min([I)I
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
utilMDE.UtilMDE:lineNumberFileReader(Ljava.lang.String;)Ljava.io.LineNumberReader;
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_142()Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.Quant:eltsEqualIndex([I)Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE:pow_fast(II)I
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
utilMDE.SimpleLog:SimpleLog(Z)V
utilMDE.WeakHasherMap.EntrySet:size()I
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;Z)Z
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
jtb.JavaParser:jj_3_28()Z
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.inv.Invariant:isWorthPrinting()Z
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.Invariant:logOn()Z
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_100()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.Quant:lte(II)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.inv.unary.scalar.Modulus:enabled()Z
jtb.JavaParser:jj_ntk()I
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.ParseException:ParseException(Ljava.lang.String;)V
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.Quant:setDiff([I[I)[I
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.ProglangType:baseIsIntegral()Z
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.OrderedPairIterator:hasNext()Z
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
jtb.JavaParser:jj_3R_115()Z
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_2_13(I)Z
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_135()Z
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
jtb.JavaParser:getToken(I)Ljtb.Token;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:lexNotEqual([I[I)Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.JavaParser:jj_3R_63()Z
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.Node:Node(LutilMDE.Pair;)V
jtb.JavaParser:jj_3_14()Z
jtb.JavaParser:jj_3R_143()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
jtb.ParseException:getMessage()Ljava.lang.String;
utilMDE.Intern:internSubsequence([JII)[J
daikon.Quant:memberOf(F[D)Z
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.inv.Invariant:format()Ljava.lang.String;
jtb.JavaParser:jj_3R_57()Z
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.InvariantFormatTester:execute()Z
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.Quant:concat([I[I)[I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
jtb.JavaParser:jj_3R_72()Z
daikon.Quant:noDups([I)Z
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
jtb.syntaxtree.NodeList:NodeList()V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
utilMDE.ArraysMDE:subarray([JII)[J
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.Quant:lexLT([I[I)Z
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_166()Z
jtb.JavaParser:jj_3R_175()Z
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_161()Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.Quant:pairwiseEqual([I[I)Z
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:eltwiseGT([I)Z
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
jtb.JavaParser:generateParseException()Ljtb.ParseException;
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.VarInfoName:ioa_name()Ljava.lang.String;
jtb.JavaParser:jj_3_7()Z
jtb.JavaParser:jj_3R_98()Z
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
jtb.JavaParser:jj_3R_107()Z
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
jtb.JavaParser:jj_3_8()Z
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_144()Z
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_75()Z
jtb.JavaParser:jj_3R_134()Z
jtb.JavaParser:jj_2_18(I)Z
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.Quant:subsetOf([B[I)Z
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_78()Z
utilMDE.Intern:intern([D)[D
jtb.syntaxtree.TypeArguments:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_206()Z
daikon.Quant:eltwiseLT([I)Z
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.Quant:isReverse([I[I)Z
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_81()Z
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:subsetOf([D[F)Z
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.inv.Invariant:prob_and(DD)D
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
jtb.JavaParser:jj_3R_88()Z
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments;
jtb.JavaParser:jj_3R_174()Z
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
jtb.JavaParser:jj_3_5()Z
daikon.Quant:memberOf(F[F)Z
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_2_5(I)Z
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_2_4(I)Z
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.ModBitTracker:num_sets()I
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3_10()Z
jtb.JavaParser:jj_3R_122()Z
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.Quant:pairwiseLTE([I[I)Z
utilMDE.MathMDE:gcd(II)I
daikon.inv.Invariant:logDetail()Z
jtb.JavaParserTokenManager:jjStopAtPos(II)I
jtb.JavaParser:jj_3R_140()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:sum([D)D
daikon.Quant:pairwiseGTE([I[I)Z
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_2_16(I)Z
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.Quant:memberOf(D[F)Z
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_49()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.PptTopLevel.CondIterator:hasNext()Z
jtb.JavaParser:jj_3R_126()Z
daikon.Quant:gt(II)Z
daikon.test.FormatTestCase:getDiffString()Ljava.lang.String;
jtb.JavaParser:jj_3R_74()Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_124()Z
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.JavaParser:jj_3R_65()Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
utilMDE.FuzzyFloat:ne(DD)Z
jtb.JavaParser:jj_3_16()Z
jtb.JavaParser:jj_3R_70()Z
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.ProglangType:isIntegral()Z
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
utilMDE.ArraysMDE:noDuplicates([D)Z
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:min_max([I)[I
daikon.inv.Invariant:getConfidence()D
utilMDE.UtilMDE:lineNumberFileReader(Ljava.io.File;)Ljava.io.LineNumberReader;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.JavaParser:jj_3R_145()Z
jtb.JavaCharStream:getEndColumn()I
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.Quant:eltsGT([II)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
jtb.JavaParser:jj_3R_61()Z
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:internSubsequence([III)[I
daikon.Quant:memberOf(S[S)Z
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.Quant:memberOf(J[J)Z
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
jtb.JavaParser:jj_3_29()Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
jtb.JavaParser:jj_3R_127()Z
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_141()Z
jtb.JavaParser:jj_2_36(I)Z
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
jtb.JavaParser:jj_3R_146()Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.ProglangType:isFloat()Z
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.inv.Invariants:Invariants()V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.JavaParser:jj_3_35()Z
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.Quant:eltsEqual([II)Z
daikon.inv.ValueSet:ValueSet(I)V
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
jtb.JavaParser:jj_3R_76()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
jtb.JavaParser:jj_3R_176()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3_18()Z
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext1()V
jtb.JavaParser:jj_3R_79()Z
jtb.JavaParser:jj_3R_102()Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
jtb.JavaParser:jj_2_14(I)Z
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
daikon.ModBitTracker:split(I)I
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice0:arity()I
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:lt(II)Z
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.Quant:memberOf(I[I)Z
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.diff.PrintAllVisitor:bufPrintln()V
jtb.JavaParser:jj_2_1(I)Z
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_2_12(I)Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.Assert:assertTrue(Z)V
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
jtb.JavaParser:jj_3R_105()Z
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.PptName:isCombinedExitPoint()Z
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.ArraysMDE:max([I)I
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_129()Z
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.UpperBoundCore:calc_range()J
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_97()Z
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.JavaParser:jj_3R_162()Z
utilMDE.ArraysMDE:sum([[D)D
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.UpperBoundCore:calc_modulus()J
jtb.JavaParser:jj_3R_48()Z
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
utilMDE.LimitedSizeIntSet:size()I
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:subsetOf([I[I)Z
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.inv.unary.scalar.NonModulus:enabled()Z
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.ProglangType:baseIsFloat()Z
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_109()Z
jtb.JavaParser:jj_3R_184()Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;)Z
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
jtb.JavaParser:jj_3_30()Z
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:eltsGTE([II)Z
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.PptSlice2:arity()I
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:fn_compose([I[I)[I
jtb.JavaParser:jj_3_25()Z
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_148()Z
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
jtb.JavaParser:jj_3_4()Z
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
jtb.JavaParser:jj_3R_110()Z
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_87()Z
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:gcd([I)I
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.Quant:subsetOf([J[J)Z
jtb.JavaCharStream:getBeginLine()I
daikon.Quant:eltsLT([II)Z
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:eq(JJ)Z
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
jtb.JavaParser:jj_3_3()Z
daikon.VarInfoName:hashCode()I
jtb.JavaParser:jj_3R_47()Z
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.FuzzyFloat:indexOf([D[D)I
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
utilMDE.MathMDE:mod_positive(II)I
utilMDE.MathMDE:sign(I)I
daikon.VarInfo:name()Ljava.lang.String;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
jtb.JavaParser:jj_3R_101()Z
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I | CONSTANT | 43224 | 74 -> 75
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.Quant:pairwiseDivides([I[I)Z
utilMDE.FuzzyFloat:set_rel_diff(D)V
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.Quant:union([I[I)[I
daikon.VarInfo:new_ppt()V
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_178()Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.Quant:eq(FF)Z
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
jtb.JavaParser:jj_2_35(I)Z
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
jtb.JavaParser:jj_2_3(I)Z
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
jtb.JavaParser:jj_3_15()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.JavaParser:jj_3_17()Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
jtb.JavaParser:jj_3R_117()Z
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:eq(DD)Z
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.ProglangType:isPseudoArray()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
jtb.JavaParser:jj_3R_89()Z
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;)V
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:pairwiseGT([I[I)Z
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_104()Z
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
jtb.JavaParser:jj_3R_185()Z
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.ValueTuple:isMissingFlow(I)Z
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_55()Z
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:eltsNotEqualIndex([I)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
1039 2 930 2 611 2 624 2 411 2 585 2 443 2 1037 2 1088 4 
181 2 391 6 1007 6 245 2 1103 2 784 2 700 2 77 2 228 2 1131 2 792 6 
1039 2 498 6 455 6 708 4 20 2 851 2 353 2 991 6 255 6 476 4 443 2 858 2 671 2 
1040 2 198 8 1039 6 960 2 1079 10 730 2 1081 10 1193 16 734 12 1164 8 615 29 60 10 617 6 1171 10 216 16 386 4 1020 8 220 4 757 2 519 2 403 4 118 2 189 4 762 16 273 8 953 2 278 10 1071 26 443 6 123 6 
256 4 1196 6 
236 2 
449 2 1079 2 1081 4 1193 2 734 2 60 2 615 6 789 2 664 2 1171 2 510 2 216 2 669 2 587 2 109 2 400 2 403 2 762 2 273 2 278 2 1071 4 123 2 238 2 
386 2 1079 4 1193 8 1212 2 962 4 734 5 60 4 783 2 615 15 599 4 762 8 278 4 1171 4 1071 12 216 8 11 6 101 6 
647 4 1189 4 283 4 607 2 1000 10 133 2 570 2 534 4 202 4 890 10 1161 14 1162 2 292 2 173 4 174 2 1130 2 666 2 13 2 1135 2 513 4 588 2 17 2 947 4 310 2 802 62 1211 4 593 8 849 2 319 2 1142 2 272 4 486 2 439 2 955 4 277 2 529 6 1219 4 40 4 1119 2 125 2 
865 2 296 2 1169 2 668 2 1094 2 1062 2 710 2 713 2 404 2 236 2 
1039 4 888 2 649 2 653 2 89 2 1125 2 249 2 414 2 900 2 662 2 1053 2 583 2 584 2 585 2 259 4 178 2 346 2 105 2 107 2 17 2 755 2 593 2 31 2 34 2 443 4 281 2 130 2 1077 2 1157 2 202 2 1085 4 141 2 1013 2 869 2 944 2 218 2 947 4 804 2 485 2 408 2 492 2 953 2 1184 4 412 2 
773 6 1039 4 1079 16 1081 6 1193 32 962 4 539 6 540 4 734 22 60 16 614 2 1164 6 615 54 417 4 1010 4 617 4 936 2 834 4 381 2 1201 2 1171 16 216 32 11 6 101 6 223 6 596 8 403 2 118 2 599 4 762 32 273 18 360 4 278 16 1069 2 1071 48 443 4 123 4 722 6 530 2 
486 2 593 2 529 2 
876 2 1223 22 555 2 1175 2 1158 2 931 10 457 2 396 2 267 2 351 2 523 2 854 2 190 2 583 2 
166 2 656 2 334 2 333 2 504 2 832 2 1128 2 509 2 9 2 971 2 345 2 182 1 981 2 349 1 1137 1 184 2 520 2 25 2 985 4 989 4 1139 16 852 3 188 2 526 1 357 2 853 2 528 2 856 2 362 2 995 2 999 2 691 2 367 2 693 2 1154 4 862 3 1001 2 1004 1 49 3 57 6 542 2 541 2 1163 12 374 3 698 32 1011 2 546 2 380 2 64 2 701 1 384 1 553 2 69 2 70 8 389 3 392 2 1022 2 712 4 398 2 397 2 714 2 1178 3 1180 2 407 1 231 2 1030 1 237 2 884 4 1039 32 246 2 895 1 735 2 418 2 899 2 93 2 582 4 739 2 95 2 743 2 424 2 1058 1 260 2 1205 2 1206 2 427 2 266 16 756 2 113 2 436 2 595 6 1068 2 766 2 922 3 1216 1 443 34 124 32 447 2 1222 2 605 1 925 1 450 4 776 2 927 2 453 2 1225 2 1224 3 935 2 1086 3 295 24 138 3 787 1 465 2 938 6 468 2 942 16 298 12 472 2 624 2 943 2 1234 2 477 24 946 2 304 5 478 8 796 2 151 2 1242 2 1244 2 1247 3 805 2 316 2 950 4 637 2 159 16 638 2 1254 3 320 2 818 2 321 8 1111 2 819 2 641 1 642 1 956 2 644 2 496 2 1259 2 1120 2 327 6 
521 2 
877 2 443 2 
864 2 443 4 444 2 
650 8 330 4 651 2 0 12 1 6 659 2 335 2 660 4 966 2 661 2 340 2 339 2 6 158 342 2 969 2 8 32 10 2 972 2 973 2 12 158 975 2 976 2 672 26 978 2 673 2 18 2 674 2 21 2 23 2 352 2 677 2 988 2 28 2 359 2 679 2 358 52 30 2 682 2 683 2 363 2 37 2 688 16 998 16 692 2 690 28 366 2 45 2 46 2 694 2 1003 2 1002 2 370 2 1005 2 51 2 54 2 373 2 1008 2 1009 2 699 4 61 12 375 2 382 4 383 2 704 2 67 2 1016 6 387 16 71 2 707 6 394 2 1019 2 709 4 711 4 74 2 1023 14 1024 2 401 2 716 2 715 2 409 4 1029 18 410 52 78 2 1033 4 79 16 721 2 1035 4 724 10 725 2 726 8 81 4 1041 2 83 16 729 2 85 10 1047 2 87 32 732 26 1050 2 415 2 1052 2 736 4 422 2 738 6 741 2 423 2 99 2 1059 2 102 2 745 2 103 6 746 2 426 2 1063 52 753 4 429 2 431 4 433 2 435 2 114 4 116 162 763 6 440 2 442 4 771 38 1072 12 448 26 774 2 775 2 129 2 1076 4 777 20 778 2 779 2 1083 4 780 2 459 2 782 4 136 16 137 2 786 2 466 52 140 2 790 2 142 2 474 2 1091 2 475 12 1093 2 479 2 148 2 150 2 152 4 798 2 1096 2 799 4 800 2 803 2 481 2 483 4 1101 2 808 30 1102 2 809 2 810 2 812 2 484 2 1108 2 489 2 1113 2 162 2 821 2 1116 2 822 2 495 2 823 2 497 2 824 4 825 2 500 2 826 2 501 326 828 18 167 2 1126 2 503 4 505 4 169 2 1127 2 833 2 170 16 835 2 171 2 508 2 1129 12 840 2 1132 2 842 2 1133 4 177 4 843 2 511 2 1134 2 845 2 514 2 183 2 515 4 518 2 517 2 847 2 1140 4 1141 48 1144 52 1146 52 1148 4 195 2 1153 2 1155 4 201 2 1159 2 535 2 536 2 203 2 538 2 543 2 544 2 208 2 209 18 866 2 867 2 1168 2 868 2 213 2 549 38 870 26 872 2 1172 56 873 2 552 2 215 4 554 2 1173 30 1176 26 225 2 879 2 881 2 561 54 230 16 233 2 565 52 1183 2 1186 2 885 8 886 16 887 48 1191 2 243 2 244 52 892 24 894 52 575 52 893 2 250 2 1199 2 1200 2 903 2 257 2 905 2 907 40 261 2 1207 2 262 2 908 4 909 4 1210 2 591 4 912 2 914 2 915 4 601 2 918 2 602 2 1215 2 921 2 275 2 279 2 924 2 604 2 1220 16 926 2 282 4 928 2 609 2 932 4 612 2 933 2 1229 2 293 2 940 2 618 2 622 2 300 2 299 22 945 2 1235 2 306 2 628 2 632 2 309 2 1245 2 1246 2 1249 2 315 12 636 2 318 2 317 2 951 2 952 52 640 14 1256 2 1255 4 643 4 324 4 957 6 646 2 
200 2 580 2 830 1 97 2 
97 2 1263 2 
1027 2 1080 2 220 2 593 2 97 2 627 2 645 2 
1027 2 432 2 97 2 
1027 2 97 2 1092 2 
580 2 487 2 844 2 
1027 2 97 2 
487 2 994 2 
212 2 97 2 
580 2 487 2 785 2 
580 2 441 2 592 2 
919 2 580 2 889 2 
580 2 1243 2 687 2 
580 2 901 2 1025 2 
487 2 98 2 
4 2 97 2 
841 2 592 2 
919 2 379 2 
788 2 687 2 
569 2 1025 2 
487 2 663 2 
126 2 1025 2 
687 2 194 2 
41 2 919 2 
421 2 592 2 
580 2 487 2 121 2 785 2 
580 2 487 2 717 2 121 2 785 2 
580 2 487 2 1174 2 
329 2 580 2 487 2 
979 2 929 2 754 2 297 2 
454 2 1080 2 593 2 742 2 
454 2 1080 2 593 2 742 2 627 2 1179 2 
1027 2 1080 2 220 2 696 2 593 2 97 2 
747 2 492 2 
1080 2 220 2 625 2 593 2 
954 2 687 2 
1118 2 1025 2 
1147 2 592 2 
919 2 186 2 
919 2 765 2 1025 2 
919 2 90 2 1025 2 
919 2 314 2 1025 2 
919 2 1025 2 307 2 
1080 2 460 2 65 2 1203 2 68 2 593 2 27 6 229 6 
487 2 1192 2 
1223 6 19 2 961 2 911 2 731 2 247 4 829 2 963 2 1177 2 1145 4 839 2 234 2 874 2 567 2 859 2 1187 2 180 2 1151 2 
580 2 104 2 
943 2 
1039 16 1045 2 418 2 95 2 345 2 424 2 743 2 260 2 427 2 430 2 985 4 436 2 188 6 443 16 995 2 447 2 1154 4 453 2 47 2 50 2 53 2 56 4 57 5 541 2 291 2 698 6 465 2 701 2 942 6 624 2 946 2 796 2 156 2 1022 2 805 2 316 2 397 2 950 4 638 1 1180 2 320 2 956 1 644 2 884 4 1121 2 327 6 
1039 16 1045 2 418 2 95 2 345 2 424 2 743 2 260 2 427 2 430 2 985 4 436 2 188 6 443 16 995 2 447 2 1154 4 453 2 47 2 50 2 53 2 56 4 57 6 541 2 291 2 698 6 465 2 701 2 942 6 624 2 946 2 796 2 156 2 1022 2 805 2 316 2 397 2 950 4 638 2 1180 2 320 2 956 2 644 2 884 4 1121 2 327 6 
633 2 
706 2 143 2 
285 2 1241 2 132 4 391 2 1046 2 350 2 1007 2 462 2 522 2 399 4 784 2 158 2 700 2 764 2 718 2 122 2 494 2 977 2 
1039 6 827 2 2 4 654 2 1046 2 245 2 332 2 1049 2 506 2 418 2 968 2 253 4 904 2 977 2 350 2 983 2 434 2 984 2 985 2 522 2 764 2 276 2 122 2 443 12 445 4 127 2 285 4 132 4 1156 2 1007 4 59 6 541 2 462 2 205 2 784 4 700 4 465 2 621 2 469 2 792 6 1238 2 1241 2 391 6 222 2 1022 2 316 2 397 2 399 4 950 2 158 2 559 2 77 2 322 2 718 2 494 2 644 2 1257 4 1036 2 723 4 327 4 
1039 6 827 2 2 4 654 2 1046 2 245 2 332 2 1049 2 506 2 418 2 968 2 253 4 904 2 977 2 350 2 983 2 434 2 984 2 985 2 522 2 764 2 276 2 122 2 443 12 445 4 127 2 285 4 132 4 1156 2 1007 6 59 6 541 2 462 2 205 2 784 4 700 4 465 2 621 2 469 2 792 6 1238 2 1241 2 391 4 222 2 1022 2 316 2 397 2 399 4 950 2 158 2 559 2 228 2 322 2 718 2 494 2 644 2 1257 4 1036 2 723 4 327 4 
1039 6 827 2 2 4 654 2 1046 2 245 2 332 2 1049 2 506 2 418 2 968 2 253 8 904 2 977 2 350 2 983 2 434 2 984 2 985 2 522 2 764 2 276 2 122 2 443 12 445 4 127 2 285 4 132 4 1156 2 1007 6 59 6 541 2 462 2 205 2 784 4 700 4 465 2 621 2 469 2 792 6 1238 2 1241 2 391 6 222 2 1022 2 316 2 1103 2 397 2 399 4 950 2 158 2 559 2 322 2 718 2 494 2 644 2 1257 4 1036 2 723 4 327 4 
1039 6 827 2 2 4 654 2 1046 2 245 2 332 2 1049 2 506 2 418 2 968 2 253 8 904 2 977 2 350 2 983 2 434 2 985 2 984 2 522 2 764 2 276 2 122 2 443 12 445 8 127 2 285 4 132 4 1156 2 1007 8 59 10 541 2 462 2 205 2 784 4 700 4 465 2 621 2 469 2 792 8 1238 2 1241 2 391 6 222 2 1022 2 316 2 1103 2 397 2 399 4 950 2 158 2 559 2 228 2 322 2 718 2 494 2 644 2 1257 4 1036 2 723 4 327 4 
1039 6 827 2 2 4 654 2 1046 2 245 2 332 2 1049 2 506 2 418 2 968 2 253 8 904 2 977 2 350 2 983 2 434 2 984 2 985 2 522 2 764 2 276 2 122 2 443 12 445 8 127 2 285 4 132 4 1156 2 1007 6 59 10 541 2 462 2 205 2 784 4 700 4 465 2 621 2 469 2 792 6 1238 2 1241 2 391 6 222 2 1022 2 316 2 1103 2 397 2 399 4 950 2 158 2 559 2 322 2 718 2 494 2 644 2 1257 4 1036 2 723 4 327 4 
331 6 2 4 654 2 332 2 3 6 968 2 345 2 977 2 348 2 350 2 983 2 22 2 676 2 985 4 984 2 678 10 354 2 989 2 33 6 995 2 42 6 1007 8 50 2 57 6 56 4 59 2 698 8 700 4 376 6 702 1 1014 6 391 4 1022 2 712 2 397 2 399 4 718 2 1032 2 723 8 1036 2 1039 24 84 1 1046 2 735 2 418 2 419 4 737 2 95 2 743 2 424 2 427 2 428 2 750 1 430 2 434 2 759 6 436 2 115 2 117 1 764 2 120 2 767 2 122 2 443 46 124 2 447 2 127 2 450 2 1075 2 132 4 453 2 1078 2 131 2 135 6 462 2 784 4 465 2 469 2 470 2 791 2 471 2 792 12 145 1 147 8 480 6 796 2 794 1 801 2 153 2 156 4 805 2 158 2 157 2 1107 6 493 2 494 2 827 2 506 2 172 2 175 2 516 2 521 6 522 2 188 6 857 2 1154 4 861 2 1156 2 863 2 864 6 541 2 206 1 205 2 1163 4 211 7 877 6 222 2 559 2 228 4 1180 2 232 6 235 7 884 4 1185 2 568 2 241 1 245 4 891 2 252 6 253 2 904 4 260 12 913 2 595 2 268 2 271 1 276 2 285 4 288 4 938 2 621 2 942 6 298 4 624 2 946 2 1238 4 1241 2 948 6 635 2 316 2 950 4 1252 2 638 2 320 2 322 2 321 2 956 2 644 2 1257 6 327 6 
331 6 2 4 827 2 654 2 332 2 333 2 506 2 3 6 172 2 968 2 175 2 345 2 977 2 348 2 983 2 350 2 516 2 22 2 676 2 521 6 678 10 984 2 985 4 354 2 522 2 989 4 188 6 33 6 857 2 995 2 42 6 1154 4 861 2 863 2 1156 2 864 6 50 2 1007 8 56 4 57 6 59 2 541 2 698 8 1163 8 205 2 376 6 700 4 1014 6 550 2 391 8 877 6 222 2 1022 2 712 4 397 2 399 4 559 2 1180 2 1032 2 718 2 232 6 1185 2 884 4 1036 2 723 8 1039 26 568 2 1046 2 891 2 245 4 735 2 419 4 418 2 252 6 737 2 253 6 95 2 904 4 424 2 743 2 260 12 427 2 428 2 430 2 913 2 434 2 759 6 115 2 436 2 268 2 595 2 764 2 276 2 120 2 767 2 122 2 443 48 124 2 447 2 1075 2 450 4 127 2 285 4 131 2 1078 2 453 2 132 4 135 6 288 4 462 2 784 4 465 2 938 2 619 2 621 2 470 2 469 2 942 6 471 2 791 2 298 8 624 2 792 12 946 2 480 6 147 8 1238 4 796 2 1241 2 801 2 948 6 153 2 156 4 805 2 635 2 1103 4 316 2 950 4 157 2 158 2 1252 2 638 2 1107 6 320 2 321 2 322 2 956 2 493 2 494 2 644 2 1257 6 327 6 
331 6 2 4 827 2 654 2 332 2 333 2 506 2 3 6 172 2 968 2 175 2 345 2 977 2 348 2 983 2 350 2 516 2 22 2 676 2 521 6 678 10 984 2 985 4 354 2 522 2 989 4 188 6 33 6 857 2 995 2 42 6 1154 4 861 2 863 2 1156 2 864 6 50 2 1007 8 56 4 57 6 59 6 541 2 698 8 1163 8 205 2 376 6 700 4 1014 6 550 2 391 8 877 6 222 2 1022 2 712 4 397 2 399 4 559 2 1180 2 1032 2 718 2 232 6 1185 2 884 4 1036 2 723 8 1039 26 568 2 1046 2 891 2 245 4 735 2 419 4 418 2 252 6 737 2 253 6 95 2 904 4 424 2 743 2 260 12 427 2 428 2 430 2 913 2 434 2 759 6 115 2 436 2 268 2 595 2 764 2 276 2 120 2 767 2 122 2 443 48 124 2 445 4 447 2 1075 2 450 4 127 2 285 4 131 2 1078 2 453 2 132 4 135 6 288 4 462 2 784 4 465 2 938 2 619 2 621 2 470 2 469 2 942 6 471 2 791 2 298 8 624 2 792 12 946 2 480 6 147 8 1238 4 796 2 1241 2 801 2 948 6 153 2 156 4 805 2 635 2 1103 4 316 2 950 4 157 2 158 2 1252 2 638 2 1107 6 320 2 321 2 322 2 956 2 493 2 494 2 644 2 1257 6 327 6 
331 12 2 4 654 2 332 2 333 2 3 12 968 2 345 2 977 2 348 2 350 2 983 2 675 2 22 2 676 2 985 4 984 2 678 8 354 2 989 4 33 6 364 2 995 2 42 6 50 2 1007 10 57 6 56 6 59 6 698 12 700 4 376 6 1014 6 391 10 1022 2 712 4 397 2 399 4 77 2 1032 2 718 2 723 8 1036 2 1039 24 1046 2 1048 6 735 2 418 2 419 4 95 2 96 6 743 2 424 2 427 2 428 4 111 2 430 2 434 2 759 6 436 2 1065 6 115 2 764 2 120 2 767 2 122 2 1070 6 443 52 445 4 124 4 447 2 127 2 450 4 1075 2 132 4 453 2 1078 2 131 2 1082 6 135 6 462 2 784 4 465 2 469 2 470 2 791 2 471 2 792 16 147 8 480 12 796 2 801 2 153 2 156 4 805 2 807 6 1103 4 158 2 157 2 1107 6 493 2 494 2 827 2 506 2 172 2 175 2 516 2 521 12 522 2 188 8 525 6 857 2 1152 6 1154 4 861 2 1156 2 863 2 864 12 541 2 205 2 1163 10 547 6 550 2 877 12 222 2 559 2 228 2 1180 2 232 6 884 4 1185 2 568 2 245 4 891 2 1197 2 252 6 253 6 904 4 260 10 910 2 913 2 595 4 268 2 276 2 923 2 285 4 288 4 938 4 619 2 621 2 942 8 298 10 624 2 301 2 946 2 305 2 1238 4 1241 2 948 6 635 2 316 2 950 4 1252 2 638 2 320 2 322 2 321 4 956 2 644 2 1257 6 327 6 
127 2 1156 2 132 2 2 2 827 2 654 2 1046 2 1007 6 245 2 332 2 59 4 205 2 784 4 700 4 968 2 253 6 621 2 792 4 977 2 391 6 983 2 350 2 222 2 984 2 1103 2 522 2 399 2 322 2 718 2 494 2 122 2 443 4 1257 2 445 4 723 2 
2 2 827 2 654 2 168 2 332 2 968 2 345 2 14 3 977 2 983 2 350 2 984 2 985 4 678 2 522 2 188 6 995 2 1154 4 1156 2 1007 6 50 2 57 6 56 4 59 2 541 2 205 2 698 8 700 4 69 2 217 2 391 6 1022 2 222 2 397 2 399 2 1180 2 718 2 884 4 723 2 1039 24 1046 2 245 2 418 2 737 2 253 6 95 2 743 2 424 2 260 4 427 2 430 2 434 2 113 2 436 2 595 3 122 2 443 28 770 2 124 3 447 2 127 2 132 2 453 2 784 4 465 2 938 3 621 2 942 6 943 2 624 2 302 2 792 4 946 2 796 2 151 2 1095 2 156 2 805 2 1103 2 316 2 950 4 638 2 320 2 322 2 956 2 644 2 494 2 1257 2 327 6 
1039 6 827 2 2 4 654 2 1046 2 245 2 332 2 1049 2 506 2 418 2 968 2 253 8 904 2 977 2 350 2 983 2 434 2 984 2 985 2 522 2 764 2 276 2 122 2 443 12 445 8 127 2 285 4 132 4 1156 2 1007 6 59 10 541 2 462 2 205 2 784 4 700 4 465 2 621 2 469 2 792 6 1238 2 1241 2 391 6 222 2 1022 2 316 2 1103 2 397 2 399 4 950 2 158 2 559 2 322 2 718 2 494 2 644 2 1257 4 1036 2 723 4 327 4 
1039 6 827 2 2 4 654 2 1046 2 245 2 332 2 897 2 506 2 418 2 968 2 253 8 904 2 977 2 350 2 983 2 434 2 985 2 984 2 522 2 917 4 764 2 276 2 122 2 443 12 445 8 285 4 1156 2 132 4 1007 6 59 10 541 2 462 2 205 2 784 4 700 4 465 2 621 2 469 2 792 8 1238 2 631 2 1241 2 391 8 1022 2 222 2 316 2 1103 2 397 2 950 2 399 4 158 2 559 2 77 2 322 2 718 2 494 2 644 2 1257 4 1036 2 723 4 327 4 
328 2 621 2 984 2 
328 2 621 2 984 2 
328 2 2 2 506 2 341 2 345 2 512 2 977 2 983 2 678 2 984 6 985 4 989 4 355 4 188 2 680 2 35 2 995 2 1154 4 50 2 1007 12 57 6 59 6 541 2 1163 4 698 2 205 2 1165 2 700 4 1012 2 391 12 1022 2 712 4 397 2 399 2 77 4 228 4 1180 2 718 2 1034 2 1185 2 884 4 1036 2 723 4 1039 16 568 2 1044 2 245 4 1194 2 735 4 419 2 418 2 578 2 1198 2 253 6 95 2 904 4 743 2 424 2 1058 2 260 4 427 2 430 2 436 2 268 2 761 2 764 2 280 2 122 4 443 24 124 2 445 4 447 2 772 4 450 4 285 4 286 2 132 2 1227 2 461 2 288 2 784 4 465 2 621 4 469 2 942 2 298 4 624 2 946 2 792 16 1238 2 796 2 308 2 948 2 155 4 156 6 805 2 316 2 1103 4 950 4 158 2 638 2 320 2 956 2 644 2 1257 4 327 6 
1039 2 1241 2 801 2 948 2 1022 2 288 2 678 2 761 2 837 2 143 2 665 2 767 2 1034 2 443 4 146 2 260 2 512 2 
328 2 2 2 506 2 345 2 512 2 977 2 983 2 984 6 985 4 989 4 355 4 188 2 524 2 35 2 995 2 1154 4 50 2 1007 12 57 6 59 6 541 2 1163 4 698 2 205 2 1165 2 700 4 1012 2 391 12 1022 2 712 4 397 2 399 2 77 4 228 4 1180 2 718 2 1034 2 1185 2 884 4 1036 2 723 4 1039 16 568 2 245 4 1194 2 735 4 419 2 418 2 578 2 1198 2 253 6 95 2 904 4 743 2 424 2 260 2 427 2 430 2 436 2 268 2 761 2 764 2 276 2 122 4 769 2 443 24 124 4 445 4 447 2 772 4 450 4 285 4 286 2 132 2 456 2 1227 4 461 2 784 4 465 2 621 4 469 2 942 2 298 4 624 2 946 2 792 16 1238 4 796 2 308 2 948 2 155 4 1097 2 156 6 805 2 316 2 1103 4 950 4 158 2 638 2 320 2 163 2 956 2 644 2 1257 4 327 6 
328 2 2 2 506 2 345 2 512 2 977 2 983 2 678 2 984 6 985 4 989 4 355 4 188 2 35 2 995 2 1154 4 50 2 1007 12 57 6 59 6 541 2 1163 4 698 2 205 2 1165 2 700 4 1012 2 548 2 391 12 1022 2 712 4 75 2 397 2 399 2 77 4 228 4 1180 2 718 2 1034 2 720 2 1185 2 884 4 1036 2 723 4 1039 16 568 2 245 4 1194 2 735 4 419 2 418 2 578 2 251 2 1198 2 253 6 95 2 904 4 743 2 424 2 1058 1 260 4 427 2 430 2 436 2 268 2 761 2 764 2 276 2 122 4 443 24 124 2 445 4 447 2 772 4 450 4 285 4 286 2 132 2 1227 2 461 2 288 2 784 4 465 2 621 4 469 2 942 2 298 4 624 2 946 2 792 16 1238 4 796 2 308 2 948 2 155 4 156 6 805 2 316 2 1103 4 950 4 158 2 638 2 320 2 956 2 644 2 1257 4 958 2 327 6 
648 2 655 2 338 10 343 2 344 10 345 2 14 2 15 2 16 6 982 4 24 2 985 4 354 2 990 2 356 2 29 2 684 6 995 2 689 2 47 2 53 2 52 6 56 10 57 6 698 18 60 2 701 2 381 4 66 2 72 2 393 2 1022 2 397 2 1026 1 1031 2 719 2 1039 22 1043 2 1042 2 1045 2 734 4 735 4 418 2 420 2 740 2 95 2 1056 6 743 2 424 2 1060 2 101 6 427 2 748 2 428 10 1064 2 430 2 436 2 762 4 438 6 1067 2 119 2 443 28 1071 6 770 2 124 6 447 2 1074 2 1078 2 453 2 1079 2 134 6 463 4 465 2 1090 2 467 2 473 4 796 2 795 6 797 8 1095 2 153 2 156 2 805 2 1099 6 1098 4 161 2 1114 10 493 2 1121 2 164 10 168 2 172 2 173 2 175 2 188 12 855 1 193 2 196 2 532 6 1154 4 861 2 541 2 1163 14 207 6 210 4 545 24 1170 2 1171 2 216 4 556 2 560 2 1180 2 562 6 563 2 884 4 239 2 1189 2 240 2 571 2 1193 4 574 6 581 2 1202 8 258 2 906 2 260 2 1209 6 1211 2 595 6 1214 2 597 4 599 4 273 4 920 2 278 2 1218 2 1219 2 284 4 289 1 1230 6 290 4 291 2 615 7 937 2 938 6 942 12 623 1 298 14 624 2 302 2 626 2 946 2 629 2 1248 1 313 2 316 2 950 4 638 2 320 2 321 10 956 2 955 2 323 4 644 2 1258 2 326 2 327 6 959 4 
165 3 1039 2 860 2 1190 4 1123 2 453 2 608 2 56 2 698 2 938 3 942 2 108 2 749 2 428 6 848 2 187 2 595 3 188 2 815 2 443 2 1073 2 1117 2 124 3 1221 2 
165 2 1039 2 860 2 1190 4 1123 2 453 2 608 2 56 2 698 2 938 2 942 2 108 2 749 2 428 6 848 2 187 2 595 2 188 2 815 2 443 2 1073 2 1117 2 124 2 1221 2 
165 2 1039 2 860 2 1190 4 1123 2 453 2 608 2 56 2 698 2 938 2 942 2 108 2 749 2 428 6 848 2 187 2 595 2 188 2 815 2 443 2 1073 2 1117 2 124 2 1221 2 
1039 4 1123 2 1193 2 1124 2 965 2 425 4 980 6 110 4 266 2 846 3 595 3 269 4 762 2 278 2 443 10 1071 4 124 3 446 2 453 2 1079 2 1226 2 537 3 372 2 698 2 1164 4 615 4 60 2 617 2 62 2 1171 2 216 2 1237 3 149 4 221 2 73 4 159 2 227 2 814 2 816 2 564 2 
1039 4 1123 2 1193 2 1124 2 734 2 965 2 425 4 980 6 110 4 266 2 846 2 595 2 269 4 118 2 762 2 273 2 278 2 443 10 1071 4 124 2 446 2 453 2 1079 2 1226 2 537 2 372 2 698 2 1164 4 615 4 60 2 617 2 62 2 1171 2 216 2 1237 2 149 4 221 2 73 4 159 2 227 2 814 2 816 2 564 2 
1039 4 1123 2 1193 2 1124 2 734 2 965 2 425 4 980 6 110 4 266 2 846 2 595 2 269 4 118 2 762 2 273 2 278 2 443 10 1071 4 124 2 446 2 453 2 1079 2 1226 2 537 2 372 2 698 2 1164 4 615 4 60 2 617 2 62 2 1171 2 216 2 1237 2 149 4 221 2 73 4 159 2 227 2 814 2 816 2 564 2 
1039 4 1123 2 1193 2 1124 2 734 2 965 2 425 4 980 6 110 4 266 2 846 2 595 2 269 4 118 2 762 2 273 2 278 2 443 10 1071 4 124 2 446 2 453 2 1079 2 1226 2 537 2 372 2 698 2 1164 4 615 4 60 2 617 2 62 2 1171 2 216 2 1237 2 149 4 221 2 73 4 159 2 227 2 814 2 816 2 564 2 
1039 4 1123 2 1193 2 1124 2 734 4 965 2 425 4 980 6 110 4 266 2 846 2 595 2 269 4 118 4 762 2 273 4 278 2 443 10 1071 4 124 2 446 2 453 2 1079 2 1226 2 537 2 372 2 698 2 1164 4 615 4 60 2 617 2 62 2 1171 2 216 2 1237 2 149 4 221 2 73 4 159 2 227 2 814 2 816 2 564 2 
437 2 356 2 5 2 361 2 768 2 1195 2 
527 2 5 2 589 2 1110 2 1104 2 1230 2 916 2 
1039 8 606 2 573 1 613 2 294 2 898 2 1232 2 703 2 666 1 970 2 480 2 1061 2 106 2 1018 2 634 2 397 2 402 2 760 1 319 1 1253 2 639 1 488 2 1112 2 443 10 883 2 997 2 
1039 6 1079 6 1193 6 734 5 615 15 60 6 1164 4 1010 2 617 2 579 2 1167 2 1201 1 473 2 1171 6 216 6 101 4 107 2 223 4 596 2 990 2 598 2 599 2 118 2 762 6 273 3 31 2 278 6 443 6 1071 12 1258 2 531 2 
110 2 458 2 610 2 73 2 986 2 987 2 269 2 1087 2 600 2 1143 2 967 2 838 2 325 2 
1039 1 110 2 728 2 458 2 610 2 73 2 986 2 987 2 269 2 1087 2 226 1 1143 2 600 4 967 2 838 2 443 1 325 6 744 2 
110 2 728 2 458 2 610 4 73 2 986 4 987 2 269 2 1087 2 600 4 1143 4 967 2 838 2 325 6 744 2 
1039 1 110 2 728 8 458 2 610 8 73 2 986 8 987 2 269 2 1087 2 226 1 600 4 1143 8 967 2 838 2 443 1 325 10 744 6 
502 10 658 4 964 4 337 4 7 6 667 8 176 2 347 11 1136 2 185 24 850 4 1138 16 32 4 191 8 685 2 686 4 993 4 36 4 38 16 39 2 43 2 533 8 365 4 44 8 1154 44 369 8 48 1 55 10 57 102 1166 6 63 4 551 2 214 4 705 4 1015 4 388 2 219 2 1021 4 557 4 878 4 1026 6 1028 10 562 30 882 4 1181 16 1182 2 884 36 566 2 413 4 1188 4 80 2 1038 2 1039 70 727 8 242 24 572 4 88 24 86 4 248 4 896 2 577 6 1051 4 91 4 254 4 1054 2 94 2 1055 4 100 10 1058 2 1208 4 112 4 1213 8 594 2 436 6 1066 4 603 2 1217 4 443 78 452 4 1228 4 287 4 781 4 1084 4 1089 10 464 2 620 2 939 4 623 8 298 16 946 6 303 4 1236 32 793 4 1239 4 482 4 154 4 312 4 805 2 806 4 1251 10 811 4 638 26 160 2 1109 10 490 4 820 14 956 28 1115 2 1261 2 1262 2 
1039 26 242 8 502 2 86 4 248 2 1051 4 577 2 337 4 338 2 836 2 254 2 7 2 94 2 1058 2 176 2 100 6 179 2 347 2 590 2 112 4 436 2 274 2 855 2 443 28 36 2 686 2 39 2 43 2 1154 14 368 2 1228 4 57 40 1084 2 289 2 1231 2 1166 4 464 2 139 2 298 14 623 6 214 4 946 2 705 2 388 2 219 2 312 4 805 2 806 2 76 2 1251 6 638 12 1109 6 562 6 1114 10 956 12 884 14 1261 2 1262 2 1038 2 
499 2 652 24 502 18 658 4 831 6 336 4 337 6 507 8 338 4 836 4 7 36 176 2 179 2 347 16 185 92 850 6 855 11 191 24 685 2 36 10 686 4 993 6 38 42 39 8 43 2 533 42 365 4 199 12 1154 112 368 2 1006 24 57 248 695 24 58 26 697 10 1166 8 377 24 63 6 214 8 1015 6 705 4 388 8 219 2 1017 4 1021 4 558 2 878 6 76 2 1026 5 405 2 880 24 562 34 882 6 884 88 413 6 1188 4 1038 2 1039 134 727 50 82 90 242 124 88 84 86 6 733 4 248 6 576 4 1051 6 577 10 91 6 92 10 254 10 94 2 1055 6 902 90 1058 4 100 16 263 4 752 8 265 4 264 4 590 2 112 6 758 6 594 2 436 14 1066 4 274 2 443 150 128 2 452 4 451 26 1228 6 287 6 781 6 1084 10 289 8 934 2 616 18 464 4 139 2 620 2 939 6 941 10 298 28 623 16 946 14 303 6 1239 4 630 4 482 4 154 4 312 6 805 8 1100 4 806 10 1105 8 1251 16 811 6 638 58 160 4 1109 16 490 4 820 12 956 58 1114 22 1115 2 1261 8 
1039 44 1122 2 242 6 502 2 86 2 574 6 733 2 248 2 577 2 1051 2 416 2 337 2 507 2 92 2 7 2 254 2 94 2 974 2 1057 2 1058 2 176 2 100 4 1204 2 586 2 179 2 347 2 1136 2 751 2 112 2 436 2 270 2 603 2 192 2 681 2 36 2 992 2 443 46 1149 2 39 2 996 2 1150 2 197 2 43 2 1154 20 1006 2 371 2 1160 4 1228 2 55 2 695 2 57 48 1084 2 1231 2 697 2 204 2 1166 6 1089 2 378 2 941 2 298 36 144 2 871 2 946 2 875 2 385 4 388 2 72 4 390 2 219 2 395 4 311 2 312 2 805 2 806 2 224 2 1250 2 1251 4 406 2 813 2 638 6 880 2 1028 2 817 2 1109 4 491 2 956 6 884 20 1260 2 1261 2 1038 2 1262 2 
26 2 
1240 1 657 1 949 1 1233 1 670 1 1106 1 
1240 1 657 1 949 1 1233 1 670 1 1106 1 
1240 1 657 1 949 1 1233 1 670 1 1106 1 
1240 1 657 1 949 1 1233 1 670 1 1106 1 
1240 1 657 1 949 1 1233 1 670 1 1106 1 
1240 1 657 1 949 1 1233 1 670 1 1106 1 
1240 1 657 1 949 1 1233 1 670 1 1106 1 
1240 1 657 1 949 1 1233 1 670 1 1106 1 
1240 1 657 1 949 1 1233 1 670 1 1106 1 
1240 1 657 1 949 1 1233 1 670 1 1106 1 
1240 1 657 1 949 1 1233 1 670 1 1106 1 
1240 1 657 1 949 1 1233 1 670 1 1106 1 
1240 1 657 1 949 1 1233 1 670 1 1106 1 
1240 1 657 1 949 1 1233 1 670 1 1106 1 
1240 1 657 1 949 1 1233 1 670 1 1106 1 
1240 1 657 1 949 1 1233 1 670 1 1106 1 
1240 1 657 1 949 1 1233 1 670 1 1106 1 
1240 1 657 1 949 1 1233 1 670 1 1106 1 
1240 1 657 1 949 1 1233 1 670 1 1106 1 
1240 1 657 1 949 1 1233 1 670 1 1106 1 
1240 1 657 1 949 1 1233 1 670 1 1106 1 
1240 1 657 1 949 1 1233 1 670 1 1106 1 
1240 1 657 1 949 1 1233 1 670 1 1106 1 
1240 1 657 1 949 1 1233 1 670 1 1106 1 
1240 1 657 1 949 1 1233 1 670 1 1106 1 
1240 1 657 1 949 1 1233 1 670 1 1106 1 
1240 1 657 1 949 1 1233 1 670 1 1106 1 
1240 1 657 1 949 1 1233 1 670 1 1106 1 
1240 1 657 1 949 1 1233 1 670 1 1106 1 
1240 1 657 1 949 1 1233 1 670 1 1106 1 
1240 1 657 1 949 1 1233 1 670 1 1106 1 
1240 1 657 1 949 1 1233 1 670 1 1106 1 
1240 1 657 1 949 1 1233 1 670 1 1106 1 
1240 1 657 1 949 1 1233 1 670 1 1106 1 
1240 1 657 1 949 1 1233 1 670 1 1106 1 
1240 1 657 1 949 1 1233 1 670 1 1106 1 
1240 1 657 1 949 1 1233 1 670 1 1106 1 
1240 1 657 1 949 1 1233 1 670 1 1106 1 
1240 1 657 1 949 1 1233 1 670 1 1106 1 
1240 1 657 1 949 1 1233 1 670 1 1106 1 
1240 1 657 1 949 1 1233 1 670 1 1106 1 
1240 1 657 1 949 1 1233 1 670 1 1106 1 
1240 1 657 1 949 1 1233 1 670 1 1106 1 
1240 1 657 1 949 1 1233 1 670 1 1106 1 

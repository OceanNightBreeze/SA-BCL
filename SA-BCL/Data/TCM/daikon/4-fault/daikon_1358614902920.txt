#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V PASSED
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V ERROR java.lang.NullPointerException 
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 1444 1569 1138 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_0()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_1()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_2()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_3()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_4()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_5()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_6()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_7()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_8()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_9()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_10()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_11()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_12()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_13()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_14()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_15()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_16()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_17()V PASSED
daikon.test.split.SplitterFactoryTest:testmisc_Fib_main_18()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_19()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_20()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_21()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_22()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_23()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_24()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_25()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_26()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_27()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_28()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_29()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_30()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_31()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_32()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__33()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__34()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__35()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__36()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__37()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__38()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__39()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__40()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__41()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__42()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__43()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.inv.unary.stringsequence.EltOneOfString:format_ioa()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
utilMDE.UtilMDE:escapeNonASCII(Ljava.lang.String;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.RelationalExpression;)V
daikon.tools.jtb.Ast:getPackage(Ljtb.syntaxtree.CompilationUnit;)Ljava.lang.String;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.binary.sequenceScalar.Member:add_modified([JJI)Ldaikon.inv.InvariantStatus;
utilMDE.LimitedSizeIntSet:size()I
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:lexLT([I[I)Z
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
jtb.syntaxtree.TypeParameter:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InclusiveOrExpression;)V
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.PptSlice0:initInvariantsSeen()V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.Quant:setDiff([I[I)[I
jtb.syntaxtree.Modifiers:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Expression;)V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.inv.unary.sequence.EltOneOf:format_simplify()Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:sign(I)I
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.Quant:eltsLtIndex([I)Z
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:getToken(I)Ljtb.Token;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.Quantify.IOAQuantification:getFreeVar(I)Ldaikon.Quantify.Term;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.BlockStatement;)V
daikon.VarInfoName.InorderFlattener:InorderFlattener(Ldaikon.VarInfoName;)V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
jtb.JavaParser:jj_3_10()Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.unary.stringsequence.EltOneOfString:format_esc()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
jtb.JavaParser:jj_2_16(I)Z
daikon.Quant:eq(II)Z
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.Quant:eltsLteIndex([I)Z
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_76()Z
jtb.syntaxtree.ClassOrInterfaceBody:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.binary.twoString.StringEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.inv.binary.twoScalar.IntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:sum([D)D
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.NodeToken:numSpecials()I
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.inv.unary.string.OneOfString:sort_rep()V
jtb.JavaParser:jj_3R_56()Z
daikon.Quant:eq(DD)Z
daikon.Quant:lte(II)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ShiftExpression;)V
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
jtb.syntaxtree.ImportDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.TwoScalar:get_swap()Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfo:get_simplify_free_index([Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName:isLiteralConstant()Z
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.visitor.TreeDumper:printToken(Ljava.lang.String;)V
daikon.inv.binary.sequenceScalar.Member:enabled()Z
daikon.inv.unary.string.OneOfString:format_daikon()Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat()V
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.FuzzyFloat:ne(DD)Z
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_19()Z
daikon.VarInfoName.InorderFlattener:nodes()Ljava.util.List;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_daikon()Ljava.lang.String;
jtb.Token:newToken(I)Ljtb.Token;
daikon.ValueTuple:isMissing(I)Z
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
jtb.JavaParser:jj_2_15(I)Z
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.FuzzyFloat:FuzzyFloat(D)V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.inv.unary.scalar.Positive:enabled()Z
daikon.inv.unary.stringsequence.SingleStringSequence:SingleStringSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.Ppt:Ppt()V
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:jj_3R_122()Z
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.Quantify.IOAQuantification:getFreeVarName(I)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_ioa()Ljava.lang.String;
jtb.JavaCharStream:getEndLine()I
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_96()Z
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljtb.syntaxtree.Node;)Z
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.MethodDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:lte(DD)Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.inv.binary.sequenceScalar.SeqIntLessThan:SeqIntLessThan(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual(Ldaikon.PptSlice;)V
daikon.VarInfo:apply_subscript(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.inv.binary.twoString.StringEqual:StringEqual(Ldaikon.PptSlice;)V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
jtb.syntaxtree.NodeOptional:accept(Ljtb.visitor.Visitor;)V
daikon.ModBitTracker:num_sets()I
daikon.inv.Invariant:logDetail()Z
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ProglangType:isScalar()Z
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameters;)V
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
utilMDE.ArraysMDE:indexOf([II)I
utilMDE.WeakHasherMap:processQueue()V
utilMDE.ArraysMDE:indexOf([J[J)I
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ClassOrInterfaceBody:accept(Ljtb.visitor.Visitor;)V
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
jtb.JavaParser:jj_2_14(I)Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.Quant:memberOf(D[F)Z
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan(Ldaikon.PptSlice;)V
daikon.Quant:subsetOf([F[F)Z
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
daikon.ProglangType:baseIsFloat()Z
daikon.inv.Invariants:Invariants()V
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.ConditionalExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.inv.binary.twoScalar.NumericInt.Divides:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quantify.QuantFlags:distinct()Ljava.util.EnumSet;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.unary.sequence.EltNonZero:EltNonZero(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeSequence;)V
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameter;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:get_proto()Ldaikon.inv.Invariant;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_2_3(I)Z
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.VarComparabilityNone:indexType(I)Ldaikon.VarComparability;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.config.Configuration:apply(Ljava.lang.String;)V
jtb.JavaParserTokenManager:MoreLexicalActions()V
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
jtb.syntaxtree.PrimaryPrefix:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.ClassOrInterfaceBody:getParent()Ljtb.syntaxtree.Node;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:enabled()Z
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.inv.binary.twoSequence.Reverse:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.ExclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.EqualityExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PackageDeclaration;)V
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
jtb.JavaParser:jj_3R_164()Z
jtb.JavaParser:jj_3_22()Z
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
jtb.syntaxtree.TypeArguments:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.CompilationUnit;)V
jtb.JavaCharStream:backup(I)V
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArgument;)V
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
daikon.inv.binary.twoString.TwoString:TwoString(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Modifiers;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
jtb.syntaxtree.FormalParameters:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
utilMDE.OrderedPairIterator:hasNext()Z
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
daikon.inv.unary.string.OneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.visitor.TreeFormatter:space(I)Ljtb.visitor.FormatCommand;
daikon.inv.binary.twoSequence.PairwiseIntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_67()Z
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:base()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.VarInfo:is_direct_non_slice_array()Z
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.PptMap:asCollection()Ljava.util.Collection;
utilMDE.ArraysMDE:subarray([III)[I
daikon.VarInfoName.Elements:ioa_name_impl()Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
jtb.visitor.TreeFormatter:add(Ljtb.visitor.FormatCommand;)V
daikon.inv.unary.sequence.NoDuplicates:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Statement;)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:get_proto()Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.inv.unary.sequence.EltNonZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.VarInfo:isIOAArray()Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:PairwiseIntGreaterThan(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
jtb.JavaParser:jj_3R_68()Z
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.inv.unary.stringsequence.EltOneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.SequenceScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeChoice:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:noDuplicates([D)Z
jtb.syntaxtree.NodeSequence:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:VariableDeclaratorId()Ljtb.syntaxtree.VariableDeclaratorId;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.tools.jtb.Ast:getName(Ljtb.syntaxtree.MethodDeclaration;)Ljava.lang.String;
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.Quant:lexNotEqual([I[I)Z
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.FormalParameter;)V
jtb.JavaParser:jj_3R_136()Z
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.binary.twoScalar.IntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ExclusiveOrExpression;)V
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
jtb.JavaParser:jj_3R_163()Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_ioa()Ljava.lang.String;
jtb.JavaParser:jj_3R_125()Z
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.EltUpperBound:format_daikon()Ljava.lang.String;
jtb.visitor.FormatCommand:getCommand()I
daikon.inv.unary.string.OneOfString:OneOfString(Ldaikon.PptSlice;)V
utilMDE.Stopwatch:Stopwatch(Z)V
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.stringsequence.EltOneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext2()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Name;)V
daikon.Quantify.QuantFlags:include_index()Ljava.util.EnumSet;
daikon.Quant:memberOf(I[I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReferenceType;)V
daikon.inv.unary.sequence.EltwiseIntComparison:EltwiseIntComparison(Ldaikon.PptSlice;)V
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:eltwiseGTE([I)Z
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
jtb.syntaxtree.VariableDeclaratorId:VariableDeclaratorId(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:enabled()Z
daikon.tools.jtb.PptNameMatcher:PptNameMatcher(Ljtb.syntaxtree.Node;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ReferenceType;)V
daikon.inv.unary.scalar.NonModulus:updateResults()V
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.Quant:eltsLTE([II)Z
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_61()Z
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.inv.unary.sequence.EltUpperBound:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Elements:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.inv.unary.sequence.EltOneOf:enabled()Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
utilMDE.ArraysMDE:sorted([I)Z
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.inv.binary.sequenceScalar.SeqIntEqual:get_proto()Ldaikon.inv.Invariant;
utilMDE.LimitedSizeIntSet:add(I)V
daikon.suppress.NISuppressionSet:NISuppressionSet([Ldaikon.suppress.NISuppression;)V
daikon.inv.binary.twoSequence.Reverse:format_simplify()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.Ppt:find_var_by_name(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:ne(II)Z
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.tools.jtb.PptNameMatcher:extractPptArgs(Ldaikon.PptName;)Ljava.util.List;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
jtb.syntaxtree.NodeToken:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:eltwiseLTE([I)Z
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.Quant:subsetOf([I[I)Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.Quant:lexGTE([I[I)Z
utilMDE.MathMDE:mod_positive(JJ)J
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameters;)V
daikon.inv.unary.stringsequence.EltOneOfString:format_simplify()Ljava.lang.String;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
jtb.JavaParser:jj_3R_52()Z
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
jtb.syntaxtree.ResultType:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoSequence.TwoSequence:var2()Ldaikon.VarInfo;
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
jtb.syntaxtree.TypeDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:subsetOf([J[J)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBody;)V
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltwiseIntLessThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.LinearBinary:add_modified(JJI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_daikon()Ljava.lang.String;
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:slice([III)[I
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
jtb.JavaParser:jj_2_18(I)Z
daikon.inv.binary.twoSequence.Reverse:format_ioa()Ljava.lang.String;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.inv.binary.twoScalar.NumericInt.Divides:Divides(Ldaikon.PptSlice;Z)V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
jtb.visitor.TreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
jtb.syntaxtree.ConditionalOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_simplify(Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;II)V
utilMDE.MathMDE:gcd([I)I
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryExpression;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_simplify()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_ioa()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:enabled()Z
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Elements:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
jtb.syntaxtree.TypeArguments:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.VariableDeclaratorId:accept(Ljtb.visitor.Visitor;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor.1:visit(Ljtb.syntaxtree.TypeParameter;)V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.inv.unary.sequence.EltNonZero:format_simplify()Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_116()Z
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.suppress.NISuppressor:swap()Ldaikon.suppress.NISuppressor;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.inv.unary.sequence.EltUpperBound:format_ioa()Ljava.lang.String;
daikon.tools.jtb.PptNameMatcher:getUngenerifiedType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
daikon.inv.binary.twoSequence.Reverse:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_134()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalOrExpression;)V
jtb.syntaxtree.NodeListOptional:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.VarInfoName.Elements:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_simplify()Ljava.lang.String;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.EltOneOf:sort_rep()V
daikon.inv.binary.twoString.StringEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_daikon()Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
daikon.inv.unary.sequence.EltNonZero:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Node:Node()V
utilMDE.ArraysMDE:noDuplicates([J)Z
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfo:get_enclosing_var()Ldaikon.VarInfo;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.NumericInt.Divides:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
jtb.JavaParser:jj_3R_105()Z
jtb.syntaxtree.TypeDeclaration:TypeDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.LowerBoundCore:computeProbability()D
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.ProglangType:isPseudoArray()Z
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:hasTypeOf()Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_117()Z
jtb.JavaParser:jj_3_28()Z
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_simplify()Ljava.lang.String;
daikon.tools.jtb.SimpleTreeDumper:printToken(Ljava.lang.String;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
utilMDE.MathMDE:modulus([I)[I
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
utilMDE.ArraysMDE:concat([I[I)[I
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.tools.jtb.Ast.1GetParametersVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
jtb.JavaParser:jj_3R_97()Z
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljava.lang.String;Ljava.lang.String;Ljava.util.List;)Z
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.binary.twoSequence.SubSequence:format_ioa()Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_ioa()Ljava.lang.String;
jtb.syntaxtree.InclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptName:isEnterPoint()Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.EltOneOf:is_hashcode()Z
jtb.JavaParser:jj_3R_121()Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoSequence.SubSequence:enabled()Z
daikon.inv.unary.string.OneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.PptName:getSignature()Ljava.lang.String;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
jtb.JavaParser:JavaParser(Ljava.io.Reader;)V
jtb.syntaxtree.BlockStatement:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
jtb.JavaParser:jj_3R_100()Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.Quant:eltsGTE([II)Z
jtb.syntaxtree.PackageDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
daikon.Quant:pairwiseDivides([I[I)Z
jtb.JavaParser:jj_3_12()Z
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:intersection([I[I)[I
jtb.JavaParser:jj_3R_85()Z
daikon.inv.binary.sequenceScalar.Member:format_esc()Ljava.lang.String;
jtb.syntaxtree.FormalParameter:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:subsetOf([F[D)Z
daikon.diff.RootNode:RootNode()V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.inv.unary.string.OneOfString:is_type()Z
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;Ljava.lang.String;)V
daikon.ProglangType:isPointerFileRep()Z
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_esc()Ljava.lang.String;
daikon.ProglangType:baseIsIntegral()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AndExpression;)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_simplify()Ljava.lang.String;
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarComparabilityNone:comparable(Ldaikon.VarComparabilityNone;Ldaikon.VarComparabilityNone;)Z
jtb.syntaxtree.NodeSequence:getParent()Ljtb.syntaxtree.Node;
daikon.Quant:pairwiseEqual([I[I)Z
daikon.inv.ValueSet:ValueSet(I)V
jtb.JavaParser:jj_2_17(I)Z
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
daikon.VarInfo:isPointer()Z
daikon.ProglangType:isFloat()Z
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_ioa()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_simplify()Ljava.lang.String;
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.unary.sequence.NoDuplicates:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeSequence:elements()Ljava.util.Enumeration;
jtb.JavaCharStream:getBeginLine()I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.inv.binary.sequenceScalar.Member:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:gte(DD)Z
utilMDE.ArraysMDE:sum([[I)I
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_137()Z
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:has_typeof()Z
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_daikon()Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:indexFor(II)I
jtb.JavaParser:jj_3R_118()Z
daikon.Quant:sameLength([I[I)Z
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:SeqIntGreaterEqual(Ldaikon.PptSlice;)V
daikon.Quant:subsetOf([S[S)Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.inv.ValueSet.ValueSetString:ValueSetString(I)V
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoString.TwoString:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Type;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:PairwiseIntGreaterEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
jtb.visitor.TreeFormatter:TreeFormatter(II)V
jtb.JavaCharStream:UpdateLineColumn(C)V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltLowerBound:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:maxsep_point([J[J)[I
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.inv.unary.string.SingleString:valid_types([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:isSubarray([J[JI)Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.string.OneOfString:format_esc()Ljava.lang.String;
jtb.JavaParser:jj_2_5(I)Z
daikon.Quant:eltwiseLT([I)Z
daikon.PptName:isCombinedExitPoint()Z
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.sequence.EltOneOf:is_boolean()Z
jtb.syntaxtree.UnaryExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ReturnStatement:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoSequence.SubSequence:SubSequence(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:esc_name()Ljava.lang.String;
jtb.JavaCharStream:ReadByte()C
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:PairwiseIntLessEqual(Ldaikon.PptSlice;)V
jtb.syntaxtree.CompilationUnit:CompilationUnit(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.Quant:eltwiseGT([I)Z
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;)Z
utilMDE.Intern:internStrings([Ljava.lang.String;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeBound;)V
daikon.Quant:lexEqual([I[I)Z
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoSequence.SubSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_esc()Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
jtb.visitor.TreeFormatter:TreeFormatter()V
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.inv.unary.stringsequence.EltOneOfString:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.Member:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:name()Ljava.lang.String;
daikon.tools.jtb.Ast:create(Ljava.lang.String;Ljava.lang.String;)Ljtb.syntaxtree.Node;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
jtb.JavaParser:jj_3_36()Z
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
jtb.JavaParser:jj_3R_55()Z
jtb.syntaxtree.NodeListOptional:elements()Ljava.util.Enumeration;
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.EltOneOf:format_ioa()Ljava.lang.String;
daikon.inv.Invariant:getConfidence()D
jtb.JavaParser:jj_3R_162()Z
daikon.inv.binary.twoString.StringEqual:get_proto()Ldaikon.inv.binary.twoString.StringEqual;
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:inOrderTraversal()Ljava.util.Collection;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.ProglangType:dimensions()I
daikon.inv.unary.sequence.NoDuplicates:NoDuplicates(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_2_1(I)Z
daikon.inv.unary.stringsequence.SingleStringSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.NumericInt.Divides:get_proto(Z)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:min([I)I
jtb.JavaParser:jj_3R_148()Z
daikon.Quant:lt(II)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NullLiteral;)V
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
jtb.JavaParser:jj_3R_49()Z
jtb.JavaParser:jj_3R_107()Z
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_esc()Ljava.lang.String;
daikon.inv.binary.twoSequence.SubSequence:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
jtb.syntaxtree.CompilationUnit:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:subsetOf([D[D)Z
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_simplify()Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_98()Z
daikon.inv.binary.sequenceScalar.SequenceScalar:SequenceScalar(Ldaikon.PptSlice;)V
daikon.Quant:lexLTE([I[I)Z
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_133()Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
utilMDE.Intern:intern([J)[J
daikon.Quant:eltsGT([II)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InstanceOfExpression;)V
daikon.VarInfo:simplify_quantify(Ljava.util.EnumSet;[Ldaikon.VarInfo;)[Ljava.lang.String;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.Quant:eq(JJ)Z
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
jtb.syntaxtree.AndExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual()V
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.inv.unary.sequence.EltNonZero:format_ioa()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.inv.binary.twoSequence.Reverse:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_63()Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_esc()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
jtb.JavaParser:jj_3R_81()Z
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.inv.binary.sequenceScalar.SequenceScalar:seq_first()Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
utilMDE.MathMDE:pow_fast(II)I
jtb.syntaxtree.TypeArgument:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoSequence.TwoSequence:TwoSequence(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
daikon.VarInfo:simplify_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:enabled()Z
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.VarInfoName.Simple:isLiteralConstant()Z
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
jtb.syntaxtree.TypeBound:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.NodeOptional:present()Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String; | ASSIGN | 19680 | = null
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.sequenceScalar.Member:format_daikon()Ljava.lang.String;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.inv.binary.twoSequence.SeqSeqIntEqual:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfo:new_ppt()V
daikon.inv.unary.stringsequence.EltOneOfString:enabled()Z
daikon.suppress.NISuppressionSet:swap()Ldaikon.suppress.NISuppressionSet;
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_1()Z
daikon.suppress.NISuppressee:NISuppressee(Ljava.lang.Class;I)V
daikon.Quantify.QuantFlags:element_wise()Ljava.util.EnumSet;
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.diff.InvMap:InvMap()V
daikon.inv.binary.twoSequence.Reverse:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MultiplicativeExpression;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
jtb.JavaParser:jj_3R_103()Z
daikon.inv.binary.twoSequence.SubSequence:get_proto()Ldaikon.inv.Invariant;
daikon.diff.Node:Node(LutilMDE.Pair;)V
jtb.visitor.TreeDumper:TreeDumper(Ljava.io.Writer;)V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.suppress.NISuppression:NISuppression([Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
utilMDE.ArraysMDE:fn_compose([I[I)[I
jtb.JavaParser:jj_3R_89()Z
daikon.inv.binary.sequenceScalar.Member:Member(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.Quant:union([I[I)[I
daikon.inv.unary.sequence.NoDuplicates:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:concat([I[I)[I
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.VarInfoName:esc_name()Ljava.lang.String;
jtb.JavaParser:jj_3_3()Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.tools.jtb.Ast:getParameters(Ljtb.syntaxtree.MethodDeclaration;)Ljava.util.List;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
jtb.syntaxtree.ReferenceType:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaCharStream:BeginToken()C
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeDeclaration;)V
utilMDE.UtilMDE:removeWhitespaceAfter(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.FormalParameter:FormalParameter(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Type;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.VariableDeclaratorId;)V
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.Quant:pairwiseLT([I[I)Z
jtb.JavaParser:jj_3R_108()Z
daikon.ModBitTracker:ModBitTracker(I)V
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
daikon.inv.binary.twoString.StringEqual:add_modified(Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltOneOf:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
utilMDE.UtilMDE:escapeNonASCII(C)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeChoice:getParent()Ljtb.syntaxtree.Node;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:hashCode()I
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.VarComparabilityNone:elementType()Ldaikon.VarComparability;
jtb.JavaParser:jj_3R_80()Z
daikon.Quant:memberOf(F[D)Z
utilMDE.UtilMDE:splitLines(Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:jj_scan_token(I)Z
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:fn_identity(I)[I
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.IntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.FormatCommand:getNumCommands()I
utilMDE.ArraysMDE:indexOf([I[I)I
jtb.JavaParser:jj_3R_58()Z
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_simplify()Ljava.lang.String;
jtb.JavaParser:jj_3_18()Z
daikon.inv.unary.scalar.LowerBound:enabled()Z
utilMDE.OrderedPairIterator:setnext1()V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.inv.unary.stringsequence.EltOneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.Literal:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.syntaxtree.PrimaryExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.Quant:gt(II)Z
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.tools.jtb.Ast:getType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:getFreeIndex([Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.inv.binary.sequenceScalar.Member:format_ioa()Ljava.lang.String;
daikon.Quant:setEqual([I[I)Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_daikon()Ljava.lang.String;
jtb.JavaParser:jj_3R_104()Z
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
jtb.JavaParser:jj_3R_135()Z
jtb.JavaParser:jj_3R_99()Z
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_50()Z
daikon.inv.unary.scalar.NonZero:enabled()Z
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;Ldaikon.VarInfo;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:isDerived()Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
utilMDE.MathMDE:gcd(JJ)J
jtb.JavaCharStream:FillBuff()V
utilMDE.UtilMDE:lineNumberFileReader(Ljava.io.File;)Ljava.io.LineNumberReader;
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
jtb.JavaParser:jj_3R_75()Z
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Quantify:quantify([Ldaikon.VarInfo;)[Ldaikon.Quantify.QuantifyReturn;
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.PptSlice1:num_samples()I
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;)V
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeOptional;)V
jtb.syntaxtree.RelationalExpression:accept(Ljtb.visitor.Visitor;)V
daikon.tools.jtb.Ast:getParent(Ljava.lang.Class;Ljtb.syntaxtree.Node;)Ljtb.syntaxtree.Node;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeSequence:elementAt(I)Ljtb.syntaxtree.Node;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoSequence.Reverse:format_daikon()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
jtb.JavaParser:jj_3_35()Z
daikon.inv.binary.twoSequence.TwoSequence:var1()Ldaikon.VarInfo;
jtb.visitor.TreeFormatter:processList(Ljtb.syntaxtree.NodeListInterface;)V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.BinaryInvariant:is_symmetric()Z
jtb.JavaCharStream:readChar()C
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE:mod_positive(II)I
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:element_range([I)I
jtb.JavaParser:jj_2_12(I)Z
utilMDE.UtilMDE:removeWhitespaceAround(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_ioa()Ljava.lang.String;
jtb.JavaParser:jj_3_13()Z
daikon.inv.unary.sequence.EltwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfo:isDerivedSubSequenceOf()Ldaikon.VarInfo;
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
jtb.JavaParser:jj_3_17()Z
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.PostfixExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_149()Z
jtb.JavaParser:jj_3R_53()Z
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_ioa()Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:runValue([Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
utilMDE.FuzzyFloat:lt(DD)Z
daikon.inv.binary.twoSequence.TwoSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:enabled()Z
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_esc()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
jtb.JavaParser:jj_3_25()Z
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.stringsequence.EltOneOfString:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant:simplify_format_string(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.MethodDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalExpression;)V
jtb.JavaParser:jj_3R_126()Z
jtb.JavaParser:jj_3_15()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ModBitTracker:num_samples()I
daikon.inv.unary.stringsequence.EltOneOfString:sort_rep()V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.inv.Invariant:logOn()Z
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
jtb.syntaxtree.ConditionalAndExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.string.OneOfString:format_simplify()Ljava.lang.String;
daikon.inv.Invariant:prob_and(DDD)D
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_210()Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclarator;)V
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AdditiveExpression;)V
jtb.JavaParser:jj_3R_48()Z
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.inv.unary.string.OneOfString:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltOneOf:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.InvariantFormatTester:execute()Z
daikon.inv.binary.sequenceScalar.SequenceScalar:scl_index()I
daikon.VarInfoName.Add:amount()Ljava.lang.String;
utilMDE.Intern:numIntArrays()I
daikon.PptName:toString()Ljava.lang.String;
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
jtb.JavaParser:jj_3R_114()Z
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
jtb.syntaxtree.VariableDeclaratorId:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.Quant:isReverse([I[I)Z
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.Quant:eltsLT([II)Z
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
jtb.JavaParser:jj_3R_47()Z
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.inv.unary.sequence.EltNonZero:enabled()Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
jtb.JavaParser:jj_2_4(I)Z
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3_5()Z
jtb.syntaxtree.NodeListOptional:getParent()Ljtb.syntaxtree.Node;
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.tools.jtb.Ast:typeMatch(Ljava.lang.String;Ljava.lang.String;)Z
jtb.syntaxtree.ShiftExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.EltUpperBound:format_simplify()Ljava.lang.String;
daikon.Quant:eltwiseEqual([I)Z
daikon.inv.unary.UpperBoundCore:calc_range()J
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.JavaParser:jj_3R_72()Z
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_daikon()Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.Invariant:prob_and(DD)D
jtb.JavaParser:jj_3R_123()Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
jtb.syntaxtree.FormalParameter:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.TypeDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:min_max([I)[I
daikon.inv.unary.sequence.EltNonZero:format_esc()Ljava.lang.String;
utilMDE.Options.OptionInfo:argument_required()Z
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.Quant:lexGT([I[I)Z
daikon.test.TestAst:checkMatch(Ljava.lang.String;Ljtb.syntaxtree.MethodDeclaration;Ldaikon.tools.jtb.PptNameMatcher;)V
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.tools.jtb.Ast:removeWhitespace(Ljava.lang.String;)Ljava.lang.String;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.inv.unary.sequence.EltOneOf:subarray_rep()Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.MathMDE:gcd(II)I
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.tools.jtb.Ast:create(Ljava.lang.String;[Ljava.lang.Class;[Ljava.lang.Object;Ljava.lang.String;)Ljtb.syntaxtree.Node;
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
jtb.visitor.FormatCommand:FormatCommand(II)V
utilMDE.MathMDE:negate(I)I
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
jtb.syntaxtree.ClassOrInterfaceDeclaration:ClassOrInterfaceDeclaration(Ljtb.syntaxtree.NodeChoice;Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ClassOrInterfaceBody;)V
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_169()Z
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.sequence.NoDuplicates:format_ioa()Ljava.lang.String;
jtb.JavaParser:jj_3R_115()Z
daikon.inv.unary.sequence.EltNonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.ClassOrInterfaceDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:SeqIntGreaterThan(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3_14()Z
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltUpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoSequence.Reverse:enabled()Z
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_124()Z
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_esc()Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([I[II)Z
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
jtb.visitor.TreeFormatter:placeToken(Ljtb.syntaxtree.NodeToken;II)V
daikon.inv.binary.twoString.StringEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_esc()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.Quantify.Term:ioa_name()Ljava.lang.String;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String; | ASSIGN | 279238 | = null
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.suppress.NISuppression:NISuppression(Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
daikon.inv.unary.string.SingleString:SingleString(Ldaikon.PptSlice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.EqualityExpression;)V
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_119()Z
jtb.visitor.TreeFormatter:processList(Ljtb.syntaxtree.NodeListInterface;Ljtb.visitor.FormatCommand;)V
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltNonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalAndExpression;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_esc()Ljava.lang.String;
jtb.JavaParser:jj_2_35(I)Z
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.MultiplicativeExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3_30()Z
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:calc_range()J
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.NoDuplicates:enabled()Z
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
utilMDE.MathMDE:missing_numbers([I)[I
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.inv.unary.sequence.EltUpperBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
jtb.JavaParser:jj_3_4()Z
daikon.inv.binary.twoString.StringEqual:check_modified(Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.LinearBinaryCore:maxsep_indices()[I
daikon.Quantify.IOAQuantification:getClosingExp()Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:add_modified(JJI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_180()Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.VarInfo:simplifyNameAndBounds()[Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.Reverse:format_simplify_explicit()Ljava.lang.String;
daikon.VarInfoName.InorderFlattener:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
jtb.syntaxtree.NullLiteral:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:max([I)I
daikon.inv.binary.sequenceScalar.SequenceScalar:sclvar()Ldaikon.VarInfo;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.PairwiseIntEqual:PairwiseIntEqual(Ldaikon.PptSlice;)V
daikon.ValueTuple:isMissingNonsensical(I)Z
utilMDE.Intern:intern([I)[I
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.NodeList:NodeList()V
jtb.JavaParser:jj_3R_120()Z
utilMDE.UtilMDE.NullableStringComparator:compare(Ljava.lang.String;Ljava.lang.String;)I
daikon.inv.binary.twoScalar.LinearBinaryCore:find_bi_linear(JJJJ[D)Z
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.OutputFormat:isJavaFamily()Z
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_esc()Ljava.lang.String;
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
jtb.syntaxtree.TypeArguments:TypeArguments(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeArgument;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.inv.binary.twoSequence.SubSequence:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.inv.unary.stringsequence.EltOneOfString:EltOneOfString(Ldaikon.PptSlice;)V
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_60()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:enabled()Z
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltsNotEqual([II)Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:enabled()Z
daikon.tools.jtb.Ast:format(Ljtb.syntaxtree.Node;)Ljava.lang.String;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.ProglangType:baseIsScalar()Z
jtb.JavaParser:jj_3R_74()Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeListOptional;)V
daikon.tools.jtb.SimpleTreeDumper:SimpleTreeDumper(Ljava.io.Writer;)V
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.Ppt:indexOf(Ljava.lang.String;)I
daikon.inv.unary.sequence.EltUpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.NoDuplicates:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpression;)V
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.string.OneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.Quant:eltsGtIndex([I)Z
daikon.test.TestAst.MethodDeclarationHarvester:visit(Ljtb.syntaxtree.MethodDeclaration;)V
jtb.JavaParser:jj_3R_70()Z
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:apply_subscript(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.VarInfo:isPrestate()Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:calc_modulus()J
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_62()Z
daikon.inv.unary.string.OneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.EltOneOf:format_daikon()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
jtb.JavaParser:jj_3_16()Z
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.inv.Invariant:prob_or(DD)D
daikon.tools.jtb.Ast:print(Ljtb.syntaxtree.Node;)Ljava.lang.String;
jtb.JavaParser:jj_3R_161()Z
daikon.inv.unary.UpperBoundCore:wouldChange(J)Z
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_ioa()Ljava.lang.String;
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
jtb.JavaParser:jj_3_20()Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.Debug:logOn()Z
daikon.inv.unary.sequence.EltUpperBound:format_esc()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SequenceScalar:seqvar()Ldaikon.VarInfo;
utilMDE.ArraysMDE:sum([[D)D
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:get_proto()Ldaikon.inv.Invariant;
daikon.PptName:getFullClassName()Ljava.lang.String;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.sequenceScalar.SequenceScalar:seq_index()I
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.inv.unary.string.OneOfString:enabled()Z
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.test.FormatTestCase:passes()Z
utilMDE.Intern:internSubsequence([JII)[J
jtb.syntaxtree.TypeArgument:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.unary.stringsequence.EltOneOfString:subarray_rep()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.Quant:eq(FF)Z
daikon.suppress.NISuppression:NISuppression(Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:EltwiseIntLessThan(Ldaikon.PptSlice;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:ungenerify(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.PptSlice0:arity()I
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceScalar.Member:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.Quant:memberOf(J[J)Z
daikon.Quant:subsetOf([B[I)Z
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfo:dbc_name()Ljava.lang.String;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.sequence.EltOneOf:EltOneOf(Ldaikon.PptSlice;)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.inv.binary.twoString.TwoString:var2()Ldaikon.VarInfo;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.Quantify.QuantFlags:adjacent()Ljava.util.EnumSet;
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
daikon.VarInfoName:ioa_name()Ljava.lang.String;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.Invariant:isWorthPrinting()Z
jtb.JavaParser:jj_2_13(I)Z
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.stringsequence.EltOneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
daikon.inv.binary.twoSequence.SubSequence:format_simplify_explicit()Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quantify.IOAQuantification:getQuantifierExp()Ljava.lang.String;
jtb.syntaxtree.AdditiveExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.FuzzyFloat:gt(DD)Z
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.inv.binary.twoSequence.PairwiseIntEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PostfixExpression;)V
jtb.JavaParser:jj_3R_109()Z
daikon.inv.unary.sequence.EltwiseIntLessThan:format_daikon()Ljava.lang.String;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.binary.twoSequence.SeqSeqIntEqual:SeqSeqIntEqual(Ldaikon.PptSlice;Z)V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.Quant:eltwiseNotEqual([I)Z
daikon.inv.unary.sequence.EltOneOf:get_proto()Ldaikon.inv.Invariant;
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.ModBitTracker:num_vars()I
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
utilMDE.MathMDE:gcd_differences([I)I
daikon.inv.ValueSet.ValueSetStringArray:ValueSetStringArray(I)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.Type;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_simplify()Ljava.lang.String;
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments;
jtb.JavaParser:jj_3R_86()Z
jtb.syntaxtree.TypeParameters:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ClassOrInterfaceType:accept(Ljtb.visitor.Visitor;)V
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.ProglangType:isIntegral()Z
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.Quant:noDups([I)Z
daikon.Quant:memberOf(S[S)Z
daikon.suppress.NISuppressee:NISuppressee(Ljava.lang.Class;Z)V
utilMDE.ArraysMDE:sum([I)I
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_77()Z
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.tools.jtb.PptNameMatcher:typeMatch(Ljava.lang.String;Ljtb.syntaxtree.FormalParameter;)Z
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.diff.Node:getUserRight()Ljava.lang.Object;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.inv.unary.sequence.EltwiseIntLessThan:enabled()Z
daikon.Quantify.IOAQuantification:getVarIndexedString(I)Ljava.lang.String;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.string.SingleString:var()Ldaikon.VarInfo;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.stringsequence.EltOneOfString:is_type()Z
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.inv.binary.sequenceScalar.Member:format_simplify()Ljava.lang.String;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.suppress.NISuppressee:swap()Ldaikon.suppress.NISuppressee;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.PptSlice1:arity()I
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.tools.jtb.Ast:getClassName(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.Quant:pairwiseLTE([I[I)Z
daikon.inv.binary.twoSequence.Reverse:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Debug:logDetail()Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
jtb.JavaParser:jj_3R_101()Z
daikon.inv.unary.sequence.NoDuplicates:check_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameters;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.inv.unary.string.OneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:runValue([JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.ProglangType:elementIsIntegral()Z
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:isIOASet()Z
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:simplifyNameAndBounds(Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_54()Z
jtb.syntaxtree.Statement:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.string.OneOfString:add_modified(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.binary.sequenceScalar.SeqIntEqual:SeqIntEqual(Ldaikon.PptSlice;)V
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.inv.binary.twoString.TwoString:var1()Ldaikon.VarInfo;
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.Quant:pairwiseGTE([I[I)Z
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
jtb.syntaxtree.Type:accept(Ljtb.visitor.Visitor;)V
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.VarInfo:relate_var()V
jtb.JavaParser:jj_3R_87()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.Invariant:justified()Z
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.inv.binary.twoSequence.PairwiseIntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.visitor.TreeFormatter:space()Ljtb.visitor.FormatCommand;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.Quantify.FreeVar:name()Ljava.lang.String;
daikon.Quant:subsetOf([D[F)Z
jtb.JavaParser:jj_3R_57()Z
jtb.syntaxtree.CompilationUnit:getParent()Ljtb.syntaxtree.Node;
jtb.JavaParser:FormalParameter()Ljtb.syntaxtree.FormalParameter;
daikon.ProglangType:baseIsString()Z
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaCharStream:getEndColumn()I
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.VarInfoName:hasNodeOfType(Ljava.lang.Class;)Z
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_102()Z
daikon.Quantify.QuantifyReturn:QuantifyReturn(Ldaikon.VarInfo;)V
daikon.ValueTuple:size()I
daikon.Quant:gte(II)Z
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3_21()Z
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
utilMDE.SimpleLog.LongVal:LongVal(J)V
jtb.JavaParser:jj_3R_69()Z
daikon.inv.unary.sequence.EltNonZero:format_daikon()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:pairwiseSquare([I[I)Z
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.InorderFlattener:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:jj_2_36(I)Z
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
daikon.inv.unary.stringsequence.EltOneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice2:arity()I
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
utilMDE.UtilMDE:removeWhitespaceBefore(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.test.TestAst.ClassOrInterfaceDeclarationHarvester:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.inv.binary.sequenceScalar.Member:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltOneOf:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;Z)Z
utilMDE.FuzzyFloat:eq(DD)Z
utilMDE.UtilMDE:split(Ljava.lang.String;Ljava.lang.String;)[Ljava.lang.String;
jtb.syntaxtree.Expression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.string.OneOfString:format_ioa()Ljava.lang.String;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Block;)V
daikon.inv.binary.twoSequence.SubSequence:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:memberOf(F[F)Z
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameter;)V
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.string.OneOfString:runValue(Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan()V
daikon.VarInfoName.QuantHelper:freshDistinctFrom(Ljava.util.Set;)Ljava.lang.String;
jtb.JavaParser:jj_3R_51()Z
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptTopLevel:getInvariants()Ljava.util.List;
jtb.JavaParser:jj_ntk()I
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArguments;)V
utilMDE.UtilMDE:lineNumberFileReader(Ljava.lang.String;)Ljava.io.LineNumberReader;
daikon.Quantify.IOAQuantification:IOAQuantification([Ldaikon.VarInfo;)V
daikon.simplify.LemmaStack:noticeInt(J)V
jtb.syntaxtree.Block:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:enabled()Z
daikon.ProglangType:isString()Z
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ImportDeclaration;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:copy(Ljava.util.HashMap;)Ljava.util.HashMap;
daikon.VarInfo:domainTypeIOA()Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:accept(Ljtb.visitor.Visitor;)V
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ResultType;)V
jtb.JavaParser:jj_3_27()Z
jtb.JavaCharStream:getBeginColumn()I
daikon.inv.binary.twoSequence.PairwiseIntLessThan:PairwiseIntLessThan(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_2_21(I)Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_ioa()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_daikon()Ljava.lang.String;
jtb.syntaxtree.TypeDeclaration:getParent()Ljtb.syntaxtree.Node;
utilMDE.ArraysMDE:indexOf([ZZ)I
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.PptName:getMethodName()Ljava.lang.String;
utilMDE.WeakHasherMap:size()I
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.Quant:eltsEqualIndex([I)Z
jtb.syntaxtree.InstanceOfExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
utilMDE.ArraysMDE:subarray([JII)[J
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | RETURN | 4986 | return null
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:enabled()Z
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.stringsequence.SingleStringSequence:var()Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.LinearBinaryCore:set_bi_linear(JJJJ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
jtb.JavaParser:jj_2_10(I)Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoString.StringEqual:enabled()Z
daikon.tools.jtb.SimpleTreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.sequence.EltOneOf:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.inv.unary.sequence.EltUpperBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:pow(II)I
jtb.JavaParser:jj_3_29()Z
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:enabled()Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
jtb.JavaParser:jj_3R_73()Z
jtb.JavaParser:jj_3R_110()Z
daikon.Quant:eltsGteIndex([I)Z
daikon.VarInfo:get_all_simple_names()Ljava.util.List;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.inv.binary.twoSequence.SubSequence:format_simplify()Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:add_modified([Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:indexOf([JJ)I
daikon.ValueTuple:isMissingFlow(I)Z
daikon.Quant:pairwiseGT([I[I)Z
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
daikon.ModBitTracker:split(I)I
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.syntaxtree.MethodDeclarator:accept(Ljtb.visitor.Visitor;)V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
utilMDE.Intern:internSubsequence([III)[I
daikon.inv.binary.twoSequence.PairwiseIntLessThan:enabled()Z
daikon.inv.binary.sequenceScalar.Member:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.tools.jtb.Ast:quickFixForInternalComment(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoSequence.Reverse:Reverse(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:eltsEqual([II)Z
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.inv.unary.sequence.EltUpperBound:EltUpperBound(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:indexOf([D[D)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReturnStatement;)V
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quantify.IOAQuantification:getMembershipRestriction(I)Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryPrefix;)V
utilMDE.TestUtilMDE.1InternTest:test(Z)V
jtb.syntaxtree.ClassOrInterfaceBody:ClassOrInterfaceBody(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_88()Z
daikon.inv.unary.sequence.EltNonZero:is_pointer()Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Literal;)V
daikon.inv.binary.twoSequence.SubSequence:format_daikon()Ljava.lang.String;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.sequence.EltOneOf:format_esc()Ljava.lang.String;
jtb.syntaxtree.Name:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfo:name()Ljava.lang.String;
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_2_25(I)Z
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_106()Z
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ProglangType:isArray()Z
daikon.inv.Invariant:prob_is_ge(DD)D
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
utilMDE.Assert:assertTrue(Z)V
jtb.syntaxtree.NodeListOptional:present()Z
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
1557 2 12 4 524 2 376 2 1478 2 1839 2 230 2 462 2 1231 2 
720 6 1795 2 767 2 580 2 992 6 337 6 471 2 1548 2 499 2 488 2 260 2 
1557 2 273 2 1194 6 776 6 582 4 162 2 1081 2 1839 2 1663 6 176 2 249 2 701 6 153 4 
1557 6 61 16 516 16 467 10 280 4 501 10 432 8 344 4 836 6 934 4 589 8 938 26 1823 16 329 2 810 8 1325 6 1258 4 1051 8 1752 2 224 2 736 10 1797 2 1262 2 506 12 160 10 1445 2 357 10 1335 2 1839 6 922 29 
1040 6 1049 4 
1728 2 
1557 4 985 2 1431 2 803 2 372 2 1493 4 687 2 1145 2 1320 2 65 2 756 2 1205 4 320 2 1723 2 20 2 1567 2 594 2 1684 2 1262 2 768 2 1447 2 1391 2 655 2 1738 2 544 2 275 2 1743 2 1640 2 1065 2 345 2 840 2 1597 2 1538 2 1178 4 1478 2 159 4 917 2 302 2 307 2 980 2 511 2 169 2 1135 2 1839 4 
1557 4 467 4 736 4 506 4 1509 4 160 4 821 2 501 4 888 4 207 2 1839 4 938 4 810 2 922 5 700 8 
47 2 1135 2 915 2 
1808 2 397 2 1743 2 94 10 1655 2 278 2 1492 2 686 2 109 2 1084 2 134 2 858 2 1689 22 1841 2 
61 2 467 2 516 2 184 2 1742 2 1141 2 522 2 1815 2 501 2 1500 2 728 2 938 4 1823 2 810 2 1325 2 1258 2 736 2 506 2 160 2 357 4 1004 2 773 2 922 6 
61 8 467 4 516 8 1580 4 736 4 506 5 160 4 1155 2 501 4 1218 2 110 4 934 2 938 12 981 6 1823 8 922 15 1110 6 
864 2 1521 4 35 2 1011 2 1063 14 581 2 584 4 1463 2 1065 4 1674 2 1205 4 663 10 1698 4 475 2 807 4 1230 2 843 62 379 2 1751 4 47 2 482 2 1053 2 1263 2 1300 2 915 6 819 2 709 2 1765 4 978 4 1767 2 232 4 1221 10 171 2 797 4 1135 8 1424 4 55 2 1738 2 237 4 32 2 
1668 2 1207 2 148 2 346 2 1532 2 1728 2 567 2 355 2 648 2 417 2 
925 2 1374 16 114 6 4 2 1380 2 931 1 1498 2 1256 2 1722 2 476 1 477 32 21 2 593 2 381 2 812 1 384 2 25 2 707 2 708 2 711 2 953 2 713 8 823 2 131 3 26 2 1630 3 393 2 133 3 958 2 1157 2 135 2 721 3 1161 1 137 4 1636 2 399 2 277 2 1273 2 606 8 1281 16 967 4 286 1 405 5 1530 16 45 2 1750 2 1410 2 1534 2 154 2 505 24 1756 1 294 1 158 2 619 2 1415 1 1301 2 412 2 1077 2 298 3 508 6 1181 1 165 2 168 2 414 1 415 3 1551 2 744 2 419 2 1089 1 1090 2 1428 2 1776 2 747 2 860 2 60 2 1557 34 628 2 1313 2 181 4 1665 4 426 2 1200 2 187 2 1667 3 1432 1 433 2 1675 2 1565 2 639 2 871 2 437 6 70 3 71 2 873 2 1680 2 641 2 1682 4 1102 2 996 24 1104 2 880 1 1442 4 533 2 1331 2 651 32 1451 2 205 2 893 2 1577 2 660 2 1112 2 1458 2 214 2 1226 2 1459 3 1343 2 1345 2 1116 2 1344 1 1584 2 1228 8 1462 2 778 12 551 3 457 6 219 2 1819 2 1231 2 1232 2 1019 2 1021 2 1826 12 1359 2 564 1 1024 2 1127 2 680 3 106 3 1240 4 108 4 464 1 361 2 1029 2 569 2 233 2 1836 16 1033 2 1839 32 366 1 
1557 2 1837 2 
1123 2 1557 4 1197 2 
1416 2 
1375 2 928 2 468 6 930 2 8 4 7 6 1378 8 1377 328 932 2 936 2 18 4 478 28 939 54 19 22 480 4 1384 60 23 6 481 26 484 6 1385 6 943 2 945 198 946 2 947 4 948 8 1389 4 949 6 952 2 1393 2 491 6 955 2 29 10 30 2 494 10 31 6 1394 2 496 26 497 22 498 6 36 46 965 4 40 4 1402 2 1403 4 43 6 1408 2 1405 10 46 12 971 2 504 30 973 8 1412 2 1413 4 974 566 1417 6 509 2 510 12 1418 4 51 132 52 4 1422 2 1423 2 1426 84 513 2 983 24 58 30 984 4 59 2 986 4 518 4 519 6 520 328 990 2 1435 2 68 98 1437 2 72 2 995 6 75 4 998 6 78 6 1446 12 80 4 535 2 1002 2 1452 4 88 48 1456 18 541 20 1008 2 545 4 92 2 1010 2 549 2 1012 4 1013 2 554 118 96 132 1015 4 1468 20 1470 4 1017 2 560 2 1473 6 561 2 97 2 562 2 99 64 1476 2 100 2 103 198 107 12 1481 46 1031 112 1483 2 1034 2 1037 112 574 30 576 2 575 2 1487 2 116 30 115 2 579 30 1491 6 1042 6 1044 204 1497 4 122 4 1045 6 1046 4 1499 64 587 4 588 26 1048 8 1503 18 1504 6 124 198 595 2 1505 2 1511 2 128 26 1054 2 1056 8 597 2 129 2 130 2 132 6 1058 2 602 6 136 2 142 2 1523 4 1061 432 145 2 1525 12 1526 2 1527 14 1528 86 1066 20 610 30 1067 8 1531 182 615 2 150 204 1071 60 617 26 618 6 157 14 1075 2 1540 2 1541 2 1542 2 1078 6 620 2 1079 14 163 2 164 6 1080 4 166 46 623 4 624 2 1552 198 626 32 1091 2 1092 2 1557 10 179 2 1562 2 630 4 186 6 632 22 1097 20 1101 2 643 18 200 244 202 4 1106 6 1576 2 1107 2 652 6 1108 14 658 4 1109 6 210 2 1581 4 215 6 661 2 216 4 218 6 664 8 1591 2 1121 6 221 2 1593 4 667 2 1594 8 1595 2 671 2 676 4 1125 2 227 8 1128 8 229 6 228 6 681 244 682 198 1132 6 1603 198 1133 4 1605 2 1606 2 235 4 1608 2 238 2 239 2 241 12 242 4 243 228 1142 2 1615 4 1616 6 1144 2 1618 28 692 2 245 26 246 2 694 2 695 2 1151 8 248 52 250 10 702 30 252 8 1625 2 253 4 1154 6 254 2 258 2 259 2 715 24 263 112 718 4 1632 2 1157 2 265 2 267 4 719 376 1634 28 1162 10 271 94 269 2 270 2 1637 4 1165 2 1170 2 1643 4 1172 2 1173 6 1174 4 1648 4 1647 4 284 4 1649 6 287 6 731 2 296 2 297 26 1654 198 738 6 739 6 1180 2 1658 2 740 16 741 16 1183 2 304 192 308 244 1184 4 310 6 1186 2 1187 6 1662 46 746 432 313 2 1193 2 314 2 749 2 315 2 750 12 1198 30 1666 2 751 2 755 2 1669 74 1202 2 1203 2 1671 12 318 4 319 2 757 4 1677 2 322 6 323 2 1678 2 1210 2 326 4 328 2 760 14 331 4 1211 2 1683 16 762 2 335 2 1215 2 1685 2 1216 8 1220 46 338 12 772 4 1690 10 1691 6 1694 6 341 50 343 2 1227 26 779 26 1229 4 1697 2 782 2 1699 16 348 82 349 6 1233 2 784 4 785 140 352 2 787 20 353 4 1238 2 1705 4 358 2 791 4 360 4 793 66 1707 2 1708 2 1710 68 1242 2 364 2 800 4 1244 2 1248 60 1713 26 1717 6 804 28 373 106 806 6 1255 2 1720 2 808 4 1724 4 809 2 1725 4 1259 2 1727 6 383 2 1260 2 386 160 385 2 1729 6 817 4 1730 2 1264 20 1731 198 1266 2 822 2 1733 2 1737 4 395 2 826 14 396 112 829 2 1739 2 1741 2 1740 2 1272 2 832 4 401 2 1278 12 1280 6 402 28 1747 6 1283 30 1284 8 403 386 838 6 1749 2 842 70 844 6 1287 2 1289 6 845 6 846 2 1291 2 1293 6 1294 2 410 4 1297 2 1760 8 1299 4 1763 30 854 2 856 182 1768 2 413 4 1304 2 857 2 1772 2 1773 2 1777 192 421 6 1310 2 423 2 428 4 1317 6 865 26 867 6 430 6 431 2 1786 88 1789 2 1794 8 879 106 1796 2 1327 20 883 4 1328 30 885 14 1801 8 887 224 442 2 447 2 1809 6 450 2 1338 4 898 4 1813 2 1814 6 1346 12 1347 22 906 60 459 2 1816 2 1817 2 908 6 1821 6 1358 2 1825 12 911 2 1360 2 1828 2 1829 2 914 20 1361 2 1830 2 1362 290 1363 6 1831 92 918 2 1368 2 1834 2 1369 2 1839 10 465 48 1372 8 1838 2 1840 336 466 4 
91 1 703 2 674 2 53 2 
196 2 53 2 
1103 2 629 2 53 2 340 2 1135 2 325 2 280 2 
53 2 340 2 1006 2 
53 2 340 2 406 2 
703 2 387 2 1158 2 
53 2 340 2 
387 2 1805 2 
1370 2 53 2 
703 2 387 2 659 2 
951 2 1661 2 703 2 
703 2 1000 2 1586 2 
1784 2 703 2 77 2 
703 2 1631 2 805 2 
387 2 1189 2 
53 2 1514 2 
1661 2 732 2 
404 2 1000 2 
77 2 753 2 
805 2 347 2 
387 2 1746 2 
805 2 1774 2 
1392 2 77 2 
1000 2 56 2 
1661 2 37 2 
703 2 387 2 659 2 761 2 
703 2 317 2 387 2 659 2 761 2 
703 2 387 2 625 2 
1673 2 703 2 387 2 
1357 2 1545 2 362 2 1119 2 
585 2 926 2 1135 2 325 2 
585 2 1103 2 926 2 1135 2 325 2 923 2 
53 2 340 2 1135 2 28 2 325 2 280 2 
1535 2 169 2 
1135 2 325 2 280 2 456 2 
77 2 837 2 
622 2 805 2 
1163 2 1661 2 
1000 2 356 2 
17 2 1000 2 805 2 
828 2 1000 2 805 2 
1209 2 1000 2 805 2 
1000 2 805 2 408 2 
1270 2 325 2 783 6 1652 2 1800 2 82 2 1135 2 
387 2 222 2 
1536 2 76 4 706 2 818 2 429 4 633 2 9 2 1646 2 1464 2 1465 2 1453 2 170 2 1696 2 174 2 503 2 1689 6 841 2 972 2 
933 2 703 2 
1232 2 
114 6 4 2 1256 2 1722 2 477 4 476 4 593 2 25 2 708 2 953 2 713 2 393 2 1157 2 1636 2 138 2 1168 2 1395 2 967 4 1282 4 1404 2 286 2 1530 6 1534 2 154 6 735 2 412 2 508 2 165 2 168 2 414 2 1428 2 1192 2 1557 26 181 4 1313 2 1665 2 426 2 1200 2 433 2 1564 2 639 2 871 2 437 4 1682 4 1102 2 1442 2 999 2 199 2 1572 2 651 6 1334 2 205 4 656 2 893 2 1577 2 660 2 1458 2 1226 2 1583 2 455 2 1116 2 1345 2 457 2 778 8 1016 2 1231 2 670 2 1021 2 1359 2 1826 8 1127 2 1240 4 108 2 361 2 1134 4 1839 26 
114 6 4 2 1256 2 1722 2 477 4 476 2 21 2 593 2 25 2 708 2 953 2 713 2 393 2 1157 2 1059 2 1636 2 138 2 1168 2 1395 2 967 4 1282 4 1404 2 286 2 1530 6 1534 2 154 6 735 2 412 2 508 2 165 2 168 2 414 2 1428 2 1192 2 1557 26 181 4 1313 2 1665 2 426 2 1200 2 433 2 639 2 871 2 437 6 1682 4 1102 2 1442 2 765 2 999 2 1572 2 533 2 651 6 1334 2 205 4 656 2 893 2 1577 2 660 2 1458 2 1226 2 1583 2 1116 2 1345 2 457 2 778 8 1016 2 1231 2 910 2 670 2 1021 2 1359 2 1826 8 1127 2 1240 4 108 2 361 2 233 2 1134 4 1839 26 
1601 2 
1806 2 93 2 
1557 12 114 4 181 2 992 6 471 4 10 2 634 4 811 10 1792 2 531 8 1102 2 704 2 1795 2 881 2 645 2 201 2 337 6 953 2 204 4 83 2 260 4 1057 2 1156 2 1518 2 1157 2 1633 2 211 4 543 4 720 6 604 2 495 2 1458 2 902 2 279 2 548 2 1116 2 1585 2 1397 2 1348 2 834 2 1590 2 1175 2 1529 2 733 2 1472 2 1700 2 734 8 1359 2 1177 2 913 4 1547 2 1129 4 1027 2 1548 2 1240 2 361 2 796 2 1709 2 1839 6 1711 2 
1557 12 114 4 181 2 992 6 471 4 10 2 634 4 811 10 1792 2 531 8 1102 2 704 2 1795 2 881 2 388 2 767 2 645 2 201 2 337 8 953 2 204 4 83 2 260 4 1057 2 1156 2 1518 2 1157 2 1633 2 211 4 543 4 720 8 1457 4 495 2 1458 2 902 2 279 2 548 2 1116 2 1585 2 1397 2 1348 2 834 2 1590 2 1175 2 1529 2 1472 2 461 2 1700 2 734 8 1359 2 1177 2 913 4 1547 2 1129 4 1027 2 1240 2 1548 2 361 2 796 2 1709 2 1839 6 1711 2 
211 2 543 4 1177 2 495 2 902 2 279 2 201 2 992 2 337 2 1027 2 471 2 1397 2 634 4 83 2 260 2 1590 2 1529 2 1518 2 
1557 12 114 4 181 2 992 4 471 4 10 2 634 4 811 6 1792 2 531 4 1102 2 704 2 1795 2 881 2 767 2 645 2 201 2 337 6 953 2 204 4 83 2 260 4 1057 2 1156 2 1518 2 1157 2 1633 2 211 4 543 4 720 6 604 2 495 2 1458 2 902 2 279 2 548 2 1116 2 1585 2 1397 2 1348 2 834 2 1590 2 1175 2 1529 2 733 2 1472 2 1700 2 734 4 1359 2 1177 2 913 4 1547 2 1129 4 1027 2 1240 2 361 2 796 2 1709 2 1839 6 1711 2 
1557 12 114 4 181 2 992 6 471 4 10 2 634 4 811 6 1792 2 531 4 1102 2 704 2 1795 2 881 2 645 2 201 2 337 4 953 2 204 4 83 2 260 4 1057 2 1156 2 1518 2 1157 2 1633 2 211 4 543 4 720 6 604 2 495 2 1458 2 902 2 279 2 548 2 1116 2 1585 2 1397 2 499 2 1348 2 834 2 1590 2 1175 2 1529 2 733 2 1472 2 1700 2 734 4 1359 2 1177 2 913 4 1547 2 1129 4 1027 2 1240 2 361 2 796 2 1709 2 1839 6 1711 2 
1557 12 114 4 181 2 992 6 471 4 10 2 634 4 811 6 1792 2 531 4 1102 2 704 2 1795 2 881 2 645 2 201 2 337 6 953 2 204 4 83 2 260 4 1057 2 1156 2 1518 2 1157 2 1633 2 211 4 543 4 720 6 604 2 495 2 1458 2 902 2 279 2 548 2 1116 2 1585 2 1397 2 1348 2 834 2 1590 2 1175 2 1529 2 733 2 1472 2 1700 2 734 8 1359 2 1177 2 913 4 1547 2 1129 4 1027 2 1548 2 1240 2 361 2 796 2 1709 2 1839 6 1711 2 
1557 12 114 4 181 2 992 8 471 4 10 2 634 4 811 10 1792 2 531 8 1102 2 704 2 1795 2 881 2 645 2 201 2 337 6 953 2 204 4 83 2 260 4 1057 2 1156 2 1518 2 1157 2 1633 2 211 4 543 4 720 8 604 2 495 2 1458 2 902 2 279 2 548 2 1116 2 1585 2 1397 2 499 2 1348 2 834 2 1590 2 1175 2 1529 2 733 2 1472 2 1700 2 734 8 1359 2 1177 2 913 4 1547 2 1129 4 1027 2 1548 2 1240 2 361 2 796 2 1709 2 1839 6 1711 2 
1557 12 114 4 181 2 992 6 471 4 10 2 634 4 811 10 1792 2 531 8 1102 2 704 2 1795 2 881 2 645 2 201 2 337 6 953 2 204 4 83 2 260 4 1057 2 1156 2 1518 2 1157 2 1633 2 211 4 543 4 720 6 604 2 495 2 1458 2 902 2 279 2 548 2 1116 2 1585 2 1397 2 1348 2 834 2 1590 2 1175 2 1529 2 733 2 1472 2 1700 2 734 8 1359 2 1177 2 913 4 1547 2 1129 4 1027 2 1548 2 1240 2 361 2 796 2 1709 2 1839 6 1711 2 
471 4 10 2 1619 2 477 2 22 1 24 6 704 2 942 4 1386 2 708 2 953 2 260 4 713 2 714 6 1156 2 1157 2 1633 2 493 6 720 12 959 2 960 2 495 2 1636 2 1164 2 962 2 1639 4 279 2 725 1 1397 2 499 4 1401 6 282 2 967 4 1175 2 283 2 734 2 1177 2 48 6 1416 6 508 2 299 2 1428 12 1192 2 1664 2 987 1 1665 2 1197 6 1199 2 991 2 1200 2 992 8 525 2 1682 4 1213 2 1442 2 999 2 533 2 337 4 83 2 87 2 543 4 1224 2 1458 2 548 4 778 4 781 7 1472 2 559 2 1700 2 1231 2 563 6 1021 2 1020 2 1027 2 1706 1 1240 4 790 6 1239 6 359 2 568 1 108 2 361 2 1480 2 796 2 1709 2 573 2 1711 2 114 6 1249 1 1039 6 577 2 120 2 121 6 1256 2 811 2 390 2 1513 6 1057 2 393 2 1518 2 604 2 1520 2 834 2 1282 4 1529 2 1530 6 152 2 154 6 1296 6 412 2 1543 6 1547 4 165 2 168 2 416 7 177 2 1557 46 181 4 426 2 1095 2 634 4 433 2 1785 2 639 2 871 2 437 6 1792 2 1102 2 877 2 1795 4 881 2 1572 4 645 2 201 2 204 4 651 8 893 2 660 2 211 4 902 2 1583 2 904 2 1116 2 1585 2 1117 10 1589 2 1348 2 457 2 1590 2 1118 8 1359 2 1826 4 673 1 913 8 1129 6 1131 1 233 2 921 1 1837 6 1839 24 
114 6 1039 6 577 2 120 2 121 6 471 4 10 2 1619 2 1256 2 477 2 811 2 704 2 24 6 1386 2 942 4 390 2 708 2 1513 6 953 2 713 2 260 4 714 6 1057 2 1156 2 393 2 1518 2 1157 2 493 6 1633 2 720 12 604 2 960 2 959 2 1636 2 495 2 1164 2 1520 2 962 2 831 2 1639 4 279 2 1397 2 834 2 282 2 1401 6 1175 2 967 4 283 2 1282 4 1529 2 1530 6 152 2 734 6 154 6 48 6 1296 6 1177 2 1759 2 1416 6 412 2 1543 6 508 2 1547 4 299 2 1548 4 165 2 168 2 1428 12 177 2 1192 2 1557 48 1664 2 181 4 1095 2 426 2 1665 4 1197 6 1199 2 991 2 992 8 1200 2 634 4 1785 2 433 2 639 2 525 2 871 2 437 6 1792 2 1682 4 877 2 1102 2 1795 4 881 2 1213 2 1442 4 999 2 1572 4 645 2 533 2 201 2 337 8 204 4 83 2 651 8 205 2 87 2 893 2 660 2 211 4 543 4 1224 2 1458 2 902 2 904 2 548 4 1583 2 1116 2 1585 2 1589 2 1117 10 1348 2 457 2 778 8 1590 2 1118 8 559 2 1472 2 1700 2 1231 2 563 6 1020 2 1021 2 1826 8 1359 2 913 8 1129 6 1027 2 359 2 1239 6 790 6 1240 4 108 4 361 2 1480 2 233 2 796 2 1709 2 1837 6 1839 26 573 2 1711 2 
114 6 1039 6 577 2 120 2 121 6 471 4 10 2 1619 2 1256 2 477 2 811 6 704 2 24 6 1386 2 942 4 390 2 708 2 1513 6 953 2 713 2 260 4 714 6 1057 2 1156 2 393 2 1518 2 1157 2 493 6 1633 2 720 12 604 2 960 2 959 2 1636 2 495 2 1164 2 1520 2 962 2 831 2 1639 4 279 2 1397 2 834 2 282 2 1401 6 1175 2 967 4 283 2 1282 4 1529 2 1530 6 152 2 734 6 154 6 48 6 1296 6 1177 2 1759 2 1416 6 412 2 1543 6 508 2 1547 4 299 2 1548 4 165 2 168 2 1428 12 177 2 1192 2 1557 48 1664 2 181 4 1095 2 1665 4 426 2 1197 6 1199 2 991 2 992 8 1200 2 634 4 1785 2 433 2 639 2 525 2 871 2 437 6 1792 2 1682 4 877 2 531 4 1102 2 1795 4 881 2 1213 2 1442 4 999 2 1572 4 645 2 533 2 201 2 337 8 204 4 83 2 651 8 205 2 87 2 893 2 660 2 211 4 543 4 1224 2 1458 2 902 2 904 2 548 4 1583 2 1116 2 1585 2 1589 2 1117 10 1348 2 457 2 778 8 1590 2 1118 8 559 2 1472 2 1700 2 1231 2 563 6 1020 2 1021 2 1826 8 1359 2 913 8 1129 6 1027 2 359 2 1239 6 790 6 1240 4 108 4 361 2 1480 2 233 2 796 2 1709 2 1837 6 1839 26 573 2 1711 2 
471 4 10 2 1619 2 477 4 704 2 24 6 942 4 708 2 953 2 260 4 713 4 714 12 1156 2 1157 2 1633 2 493 12 720 16 959 2 960 2 495 2 1636 2 1164 2 962 2 1639 4 964 2 279 2 1397 2 499 2 282 2 1401 6 967 4 1175 2 283 2 734 6 1177 2 48 6 1416 12 508 4 299 2 1190 6 1427 6 1428 10 1192 2 1664 2 1665 4 1197 12 1199 2 991 2 1200 2 992 10 525 2 1682 4 531 4 1213 2 1442 4 999 4 767 2 533 2 337 10 769 2 83 2 87 2 543 4 1224 2 1458 2 548 4 778 10 1472 2 559 2 1700 2 1231 2 563 6 1234 6 1021 2 1020 2 1027 2 1240 4 790 6 1239 6 359 2 108 4 361 2 1480 2 796 2 1709 2 573 2 1711 2 114 6 1039 12 117 2 577 2 371 6 120 2 121 6 1256 2 811 6 390 2 1513 6 1057 2 1268 6 393 2 1518 2 604 2 1520 2 831 2 834 2 1282 6 1529 2 1530 8 152 2 154 8 1296 6 851 6 1759 2 412 2 1543 6 1547 4 1548 4 165 2 168 2 177 2 1557 52 181 4 1559 2 426 2 1095 2 634 4 433 2 1785 2 639 2 871 2 437 6 1792 2 877 2 1102 2 1795 4 881 2 1572 4 645 2 201 2 886 2 1332 2 204 4 651 12 205 2 893 2 1578 2 660 2 211 4 452 6 902 2 1583 2 904 2 1116 2 1585 2 1117 8 1589 2 1348 2 457 4 1590 2 1118 8 1826 10 1359 2 913 8 677 6 678 6 1129 6 233 2 1604 2 1837 12 1839 24 
1557 4 720 4 543 2 604 2 495 2 902 2 279 2 992 6 1585 2 471 4 634 2 834 2 1590 2 1175 2 1529 2 1700 2 811 4 734 6 531 4 1795 2 1177 2 881 2 913 2 645 2 1129 2 337 6 1027 2 1548 2 204 2 260 4 1057 2 1156 2 1709 2 1633 2 1711 2 
114 6 471 4 10 2 1256 2 477 3 811 2 1386 2 708 2 487 2 953 2 260 4 1057 2 1156 2 393 2 717 2 958 2 1157 2 1633 2 720 4 604 2 1636 2 495 2 398 2 279 2 834 2 1175 2 967 4 1282 4 1529 2 1530 6 734 6 154 6 1177 2 412 2 508 3 1548 2 1182 3 165 2 168 2 1428 4 1192 2 1557 28 181 4 426 2 992 6 1200 2 634 2 433 2 871 2 437 6 873 2 528 2 1682 4 1102 2 1795 2 881 2 1572 2 533 2 645 2 337 6 204 2 651 8 893 2 660 2 543 2 1458 2 453 2 902 2 1583 2 1116 2 1585 2 1117 2 457 3 1590 2 1700 2 1232 2 1231 2 1021 2 1359 2 913 2 1129 2 1027 2 1240 4 361 2 569 2 233 2 1709 2 1839 24 1711 2 
1057 2 547 2 1700 2 
1057 2 547 2 1700 2 
114 6 471 4 1254 2 1256 2 1257 4 476 2 477 2 811 6 942 2 389 2 708 2 953 2 260 4 1629 2 1057 6 393 2 1157 2 1735 4 1633 2 720 16 959 2 1636 2 1166 2 1168 4 1639 2 400 2 1397 2 499 4 967 4 283 2 1529 2 1530 2 289 2 1288 2 734 6 847 2 154 2 1414 2 412 2 1547 2 299 2 1548 4 979 2 165 2 168 2 1553 2 1428 4 1192 2 1557 24 182 2 181 4 1665 4 426 2 63 2 1200 2 992 12 634 2 639 4 871 2 437 6 529 2 1682 4 1102 2 531 4 1795 4 881 2 1442 4 767 4 1572 6 533 2 201 2 337 12 1574 2 204 2 651 2 893 2 660 2 211 4 543 2 1458 2 547 2 902 4 548 4 1583 2 1116 2 1117 2 1461 2 1348 2 778 4 1590 2 1472 2 1700 4 1231 2 1021 2 1826 4 1359 2 913 4 1129 4 790 2 1240 4 108 4 361 2 683 2 233 2 796 2 1839 16 
1806 2 1557 4 1414 2 182 2 1237 2 1458 2 1639 2 1461 2 1117 2 790 2 282 2 146 2 87 2 935 2 1518 2 1839 2 1428 2 
114 6 471 4 1254 2 1256 2 1257 4 477 4 811 6 704 2 942 2 389 2 708 2 953 2 260 4 1629 2 598 2 1057 6 393 2 1157 2 1735 4 1633 2 720 16 959 2 1636 2 1168 4 400 2 1397 2 499 4 967 4 283 2 1529 2 1530 2 289 2 1533 2 734 6 847 2 154 2 1414 2 412 2 299 2 1547 4 1548 4 979 2 165 2 168 2 1428 2 1192 2 1557 24 182 2 181 4 1665 4 426 2 63 2 1200 2 992 12 634 2 639 4 871 2 437 6 1682 4 1102 2 531 4 1795 4 881 2 1442 4 767 4 1572 6 533 2 201 2 337 12 1574 2 1450 2 204 2 651 2 893 2 660 2 211 4 543 2 1458 2 547 2 902 4 548 4 1583 2 1116 2 1461 2 1348 2 778 4 458 2 1590 2 1472 2 1700 4 1231 2 1021 2 1826 4 1359 2 1236 2 913 4 1129 4 790 2 1240 4 108 4 361 2 683 4 233 2 796 2 1839 16 
114 6 471 4 1254 2 1256 2 1257 4 476 1 477 2 811 6 704 2 942 2 389 2 708 2 257 2 953 2 260 4 1629 2 1057 6 393 2 1157 2 1735 4 1633 2 720 16 959 2 1636 2 1168 4 1639 2 400 2 1397 2 499 4 967 4 283 2 1529 2 1530 2 289 2 734 6 847 2 154 2 1414 2 412 2 299 2 1547 4 1548 4 979 2 165 2 168 2 1428 4 1192 2 1557 24 182 2 181 4 1665 4 426 2 63 2 1200 2 992 12 634 2 1672 2 639 4 871 2 437 6 1682 4 1102 2 531 4 1795 4 881 2 1442 4 767 4 1572 6 533 2 201 2 337 12 1574 2 204 2 536 2 651 2 208 2 893 2 660 2 211 4 543 2 1458 2 547 2 902 4 548 4 1583 2 1116 2 1588 2 1117 2 1461 2 1348 2 778 4 1590 2 1472 2 1700 4 1231 2 1021 2 1826 4 1359 2 913 4 1129 4 790 2 1240 4 108 4 361 2 683 2 233 2 796 2 1839 16 
924 2 0 62 925 2 927 2 1 2 2 2 3 60 929 138 6 16 11 2 15 2 14 122 16 2 938 16 940 28 941 2 944 2 950 2 953 2 26 2 956 2 957 2 33 2 34 2 961 16 964 2 966 2 38 68 41 2 967 372 42 18 44 24 970 4 45 13 975 62 49 2 977 4 978 2 50 2 54 2 982 2 57 2 60 2 61 8 62 2 988 60 989 2 64 2 991 2 66 26 993 1 70 3 71 2 994 2 73 60 996 51 74 10 999 46 79 122 81 1 84 2 1003 2 85 2 1005 2 89 2 90 4 1007 2 1009 85 1014 34 1016 2 1018 4 98 24 1019 2 1021 2 1023 2 1022 64 101 60 102 2 1025 2 1026 30 1028 2 106 2 1030 4 1029 2 110 4 1033 2 1035 2 111 2 1036 30 112 3 114 8 1038 2 117 2 118 40 119 2 120 2 1047 2 123 2 1052 6 125 120 126 2 1055 66 127 2 131 2 137 30 139 1 138 2 140 2 1060 1 143 2 1062 94 144 30 147 3 1068 4 149 2 1070 2 152 16 1072 2 1073 4 154 14 156 120 1074 2 158 2 160 8 161 2 1077 2 165 2 1082 2 167 2 168 2 1083 2 1086 2 1085 14 173 2 1088 2 175 9 177 2 180 4 183 2 181 6 185 2 188 2 190 2 1098 4 192 62 1099 3 194 3 1100 4 195 2 1102 2 1104 2 198 3 203 3 206 26 1110 6 212 4 1112 2 213 24 1115 14 1116 2 1117 2 217 2 219 2 220 2 1122 2 223 2 225 2 226 2 1126 7 231 2 1130 2 232 2 233 252 1136 2 1137 2 1138 2 237 2 1140 65 1139 22 1143 18 244 2 1146 2 247 3 1147 2 1148 2 1150 2 1152 2 1153 60 255 34 256 2 262 2 1157 2 264 28 1160 62 268 2 1161 1 272 46 1167 4 1169 60 276 2 277 2 281 4 285 2 286 3 288 10 290 2 291 58 1176 2 292 32 293 3 295 2 298 3 1181 1 1182 2 300 2 301 6 305 4 303 4 306 2 311 2 1188 2 1192 2 1195 2 1196 62 1199 2 316 12 1200 2 1204 60 1206 2 1208 24 321 2 324 60 327 2 329 2 330 2 332 3 1212 28 333 1 336 4 1219 2 339 4 1222 2 1223 2 1224 2 342 3 1228 14 1231 8 1235 2 351 2 350 60 354 4 1240 6 359 2 361 2 1241 2 363 2 1243 2 366 12 365 4 1247 3 368 2 369 2 370 2 1252 2 374 62 375 5 1253 2 1256 2 377 7 378 2 380 10 381 15 382 2 1261 2 390 2 1265 2 1267 2 393 64 392 60 394 2 1269 88 398 2 1276 1 1275 2 1277 18 1279 3 1281 14 1282 12 407 2 1286 2 1290 2 409 6 1295 28 1298 2 411 2 1301 2 412 66 1302 2 1303 2 414 2 415 2 419 2 418 4 1306 2 1305 2 1307 30 1308 2 420 2 1309 2 422 66 1312 2 1314 2 424 4 426 2 425 10 1316 8 427 3 1315 2 432 6 434 2 433 2 1321 22 1322 2 1323 3 435 2 437 860 438 2 1326 2 439 28 440 2 1329 14 441 5 1330 2 1332 2 443 2 1334 74 444 2 446 28 448 60 449 2 1337 2 1340 2 451 3 1339 3 1341 3 453 2 1343 2 454 6 1344 1 457 16 1349 62 1350 2 460 2 1352 4 1354 3 1356 2 1359 2 463 3 1366 2 1367 2 1371 2 1373 2 1374 46 467 8 469 6 1376 2 470 7 1379 4 1382 2 1381 2 472 62 474 2 473 2 1383 4 477 97 476 1 483 10 485 2 486 2 487 2 489 2 1390 2 490 4 492 2 1395 2 1396 30 1398 30 500 2 501 8 502 2 1404 2 1406 20 1410 2 1409 2 1411 2 505 15 506 10 507 1 508 46 1419 2 1421 2 512 2 1428 6 514 2 1429 2 515 2 516 8 1430 22 517 24 521 62 523 2 1432 1 1433 2 1434 2 1436 6 526 10 1438 22 527 2 1439 28 532 4 1440 2 1444 2 533 242 1449 2 534 2 1448 4 1451 13 537 10 1454 6 1455 3 538 2 540 6 539 2 542 2 1458 2 546 2 1459 2 1460 2 1462 2 551 2 552 2 555 26 556 432 1467 64 1469 3 558 2 1471 2 1474 2 564 14 566 2 565 4 1477 62 1479 2 570 2 571 22 1482 62 572 2 1484 2 1486 68 577 2 578 2 1488 2 1490 30 1494 2 1495 122 1496 2 1498 2 583 2 586 2 1501 2 1502 2 590 2 591 10 592 28 596 2 1507 20 1506 2 1508 1 1509 4 1510 2 1512 28 1515 2 1516 14 599 2 601 2 1519 3 1520 2 1522 2 605 8 1524 2 606 14 607 60 609 8 611 2 612 2 613 2 1530 26 614 2 1537 2 619 2 1546 62 1549 2 1550 26 1551 2 1554 2 1555 24 1556 4 627 60 1557 927 628 2 1558 68 1559 2 1560 6 1561 130 631 2 1563 2 635 2 636 10 637 102 1565 2 638 2 639 16 1566 32 640 12 641 2 1569 2 1568 2 1570 1 644 4 1572 2 647 18 649 8 1575 120 650 2 651 110 653 2 657 4 656 2 1578 2 660 8 1579 68 1584 2 1589 16 1587 6 665 18 1592 2 666 4 668 62 1596 2 669 2 670 2 672 2 1598 4 1599 2 1600 2 679 2 680 2 684 2 1607 12 1609 28 1610 14 685 2 1613 60 1612 2 1614 2 688 2 689 2 690 2 1617 2 691 2 1619 4 1620 1 1621 64 696 22 698 2 699 2 1622 2 700 8 1623 4 1624 4 705 3 707 2 1626 2 708 4 1627 2 710 2 711 2 712 4 713 72 716 3 1630 2 717 2 1635 2 1636 2 722 2 723 2 724 2 1642 2 726 2 1645 88 727 2 729 4 730 2 1650 8 735 4 736 8 737 8 1656 22 1657 3 1659 30 743 3 745 30 747 2 748 3 752 2 1667 2 1670 2 759 2 1676 24 1679 2 1680 2 1681 2 1682 312 764 2 766 2 769 2 1686 2 770 2 1687 2 774 2 775 2 1692 2 1693 3 1695 2 778 155 780 8 1701 2 1702 2 1703 1 786 2 1704 2 789 2 792 2 795 22 794 2 798 20 797 2 799 3 1712 2 801 2 802 4 1715 30 1716 18 1718 2 1719 2 1721 28 810 6 1726 30 813 2 814 2 816 2 820 2 1732 3 821 2 825 62 1734 2 1736 2 827 11 1744 4 1745 2 833 2 835 3 836 4 1748 2 839 32 1750 2 1751 2 1754 2 848 1 1756 1 1755 2 1757 20 849 30 1758 2 850 2 1761 2 1762 2 853 2 852 20 1764 2 855 2 1766 2 1770 2 859 44 860 2 1775 30 1776 2 861 60 1778 2 1779 2 1780 60 862 2 1781 3 866 22 868 4 1782 2 1787 68 869 14 870 4 871 2 872 2 1788 162 875 2 1791 14 874 2 876 2 1793 4 878 20 882 2 1798 2 884 2 1799 2 886 4 888 4 889 70 1802 3 1803 2 890 2 891 3 892 2 893 2 894 2 895 1 897 2 896 2 1807 3 899 11 1811 18 900 10 1812 2 903 2 905 2 907 162 1818 8 1819 2 1820 2 1823 8 1822 4 1824 2 1826 150 912 3 916 8 919 3 920 2 1835 2 1836 84 1839 756 922 22 
1557 2 380 2 154 2 225 2 1223 2 1701 2 483 2 999 6 1657 2 508 2 966 2 583 2 457 2 433 2 651 2 1769 2 50 2 1282 2 570 2 1839 2 477 2 1530 2 1150 2 591 4 
1557 2 380 2 154 2 225 2 1223 2 1701 2 483 2 999 6 1657 2 508 2 966 2 583 2 457 2 433 2 651 2 1769 2 50 2 1282 2 570 2 1839 2 477 2 1530 2 1150 2 591 4 
1557 2 380 2 154 2 225 2 1223 2 1701 2 483 2 999 6 1657 2 508 2 966 2 583 2 457 2 433 2 651 2 1769 2 50 2 1282 2 570 2 1839 2 477 2 1530 2 1150 2 591 4 
1557 10 1374 2 61 2 467 2 516 2 517 3 213 3 316 2 662 4 1644 2 501 2 39 2 432 4 191 3 1400 2 433 2 637 6 836 2 1406 4 938 4 477 3 697 2 1150 2 1823 2 1653 2 736 2 1507 4 1124 2 565 2 1443 2 160 2 508 3 852 4 651 2 1804 2 798 4 1836 2 1425 2 1839 4 922 5 
1557 10 1374 2 61 2 467 2 516 2 517 2 213 2 316 2 662 4 1644 2 501 2 39 2 432 4 191 2 1400 2 433 2 637 6 836 2 1406 4 938 4 477 2 697 2 1150 2 1823 2 329 2 810 2 1653 2 736 2 1507 4 1124 2 506 2 565 2 1443 2 160 2 508 2 852 4 651 2 1804 2 798 4 1836 2 1425 2 1839 4 922 4 
1557 10 1374 2 61 2 467 2 516 2 517 2 213 2 316 2 662 4 1644 2 501 2 39 2 432 4 191 2 1400 2 433 2 637 6 836 2 1406 4 938 4 477 2 697 2 1150 2 1823 2 329 2 810 2 1653 2 736 2 1507 4 1124 2 506 2 565 2 1443 2 160 2 508 2 852 4 651 2 1804 2 798 4 1836 2 1425 2 1839 4 922 4 
1557 10 1374 2 61 2 467 2 516 2 517 2 213 2 316 2 662 4 1644 2 501 2 39 2 432 4 191 2 1400 2 433 2 637 6 836 2 1406 4 938 4 477 2 697 2 1150 2 1823 2 329 2 810 2 1653 2 736 2 1507 4 1124 2 506 2 565 2 1443 2 160 2 508 2 852 4 651 2 1804 2 798 4 1836 2 1425 2 1839 4 922 4 
1557 10 1374 2 61 2 467 2 516 2 517 2 213 2 316 2 662 4 1644 2 501 2 39 2 432 4 191 2 1400 2 433 2 637 6 836 2 1406 4 938 4 477 2 697 2 1150 2 1823 2 329 4 810 4 1653 2 736 2 1507 4 1124 2 506 4 565 2 1443 2 160 2 508 2 852 4 651 2 1804 2 798 4 1836 2 1425 2 1839 4 922 4 
1753 2 1030 2 763 2 963 2 1342 2 909 2 
1334 2 67 2 763 2 1638 2 1502 2 754 2 1365 2 
1311 1 1557 10 864 1 95 2 1274 2 1114 2 1641 2 1201 2 1783 2 1399 2 1324 2 1120 2 937 2 1790 2 151 2 642 1 1217 2 104 2 1767 1 953 2 1660 2 714 2 1185 1 1771 2 1517 2 1839 8 
1557 6 1093 2 61 4 516 4 467 6 275 2 501 6 1145 2 432 4 691 2 836 2 759 2 938 10 872 2 1823 4 700 2 810 2 329 2 736 6 506 3 1509 2 160 6 888 2 824 2 110 2 1839 6 922 14 1373 2 1110 4 1556 2 
1557 1 1793 2 251 2 815 2 1507 2 1041 2 1571 1 105 2 621 6 1832 2 798 2 27 2 1839 1 1406 2 1149 2 616 2 193 2 1355 4 
1793 4 251 2 815 2 1507 2 1041 2 105 2 621 6 1832 2 798 2 27 4 1406 2 1149 4 616 2 193 2 1355 4 
1557 1 1793 8 251 2 815 8 1507 2 1041 6 1571 1 105 2 621 10 1832 2 798 2 27 8 1839 1 1406 2 1149 8 616 2 193 2 1355 4 
1793 2 251 2 1507 2 105 2 621 2 1832 2 798 2 27 2 1406 2 1149 2 616 2 193 2 1355 2 
1140 8 0 6 240 10 1611 4 3 10 469 4 1613 6 929 34 374 6 1495 16 470 7 472 6 14 16 693 90 1721 4 476 4 479 24 940 4 592 4 125 18 1153 10 1624 4 1387 2 1388 4 708 8 489 8 261 4 392 6 393 14 264 4 600 12 825 6 1160 6 603 2 1519 2 830 4 1271 4 141 90 1169 6 1062 12 1171 18 607 6 967 112 1069 2 1651 24 155 2 1295 4 156 36 975 6 1076 4 412 14 1179 2 1546 6 175 11 57 8 861 6 627 6 1557 150 1780 6 1094 2 1561 50 425 8 988 24 427 2 1196 24 1319 10 521 6 636 7 1204 6 1787 4 436 1 1566 2 192 6 870 4 69 4 324 10 437 248 1788 84 73 10 1212 4 1439 4 1682 88 997 24 878 15 197 4 439 4 198 2 334 2 1214 8 1573 26 533 58 79 16 1575 17 889 42 446 4 891 4 1336 2 540 2 448 24 209 2 1579 42 1009 22 1810 26 1339 2 451 6 1693 2 454 4 777 2 778 28 1466 2 907 92 1349 6 556 124 557 8 1351 2 668 6 350 10 101 6 1028 8 788 10 233 58 1482 6 1839 134 1245 4 1246 8 1609 4 113 6 367 2 
178 2 1557 46 1140 6 0 2 240 2 1094 2 3 2 863 2 374 2 5 2 1043 2 1495 4 1319 2 189 2 472 2 13 2 14 4 192 2 324 2 476 2 437 45 479 2 1050 2 73 2 530 2 1682 20 125 2 1153 2 997 2 644 4 1441 2 1214 2 1001 2 533 3 708 2 79 4 1575 2 1628 2 489 2 1333 2 445 2 393 2 654 2 891 1 1336 2 1159 2 266 2 209 2 1111 2 830 2 274 4 1225 2 451 3 1113 2 901 2 1582 2 38 6 778 37 608 2 553 2 967 20 556 6 968 2 969 2 1351 2 1069 2 668 2 1651 2 1292 2 156 2 350 2 1475 2 1827 2 1539 2 412 2 976 4 1544 2 1028 2 788 2 742 2 1420 2 233 3 309 2 1482 2 1087 2 172 2 1839 44 234 2 1191 4 57 2 1485 2 367 2 
1140 6 0 4 3 4 469 2 1613 4 1489 8 929 30 1251 4 374 4 470 3 1495 10 472 4 14 10 1721 4 940 4 592 4 125 10 1153 4 1624 4 708 2 391 2 489 2 954 2 393 6 392 4 264 4 825 4 1160 4 1519 2 1169 4 1062 14 607 4 1064 4 967 44 969 10 1407 2 1069 2 1285 8 1295 4 156 6 975 4 412 6 1179 2 1546 4 312 4 57 2 861 4 627 4 178 2 1557 78 1094 2 1780 4 1561 8 425 4 1196 8 1096 2 1318 4 1204 4 870 4 192 4 526 2 324 6 437 104 1788 24 73 4 1212 4 1439 4 1682 36 878 8 439 4 334 2 1441 10 533 28 1105 16 79 10 1575 10 445 2 889 16 446 4 86 4 771 8 209 2 1579 8 1111 2 451 2 1693 2 550 32 778 14 907 24 1349 4 556 24 1351 2 1353 4 668 4 350 4 675 4 101 4 1364 8 1028 2 1833 16 233 30 1482 4 1839 70 234 10 1609 4 236 2 367 2 
1140 4 1557 28 0 4 1094 2 3 2 469 2 929 6 425 4 427 2 374 4 1495 6 472 4 636 1 1787 2 14 6 870 2 192 4 476 2 437 40 324 2 73 2 1682 14 1153 2 125 2 878 5 1624 2 198 2 533 12 708 2 79 6 1575 2 489 2 393 2 1336 2 209 2 1111 2 1009 9 1339 1 451 2 454 2 777 2 778 14 1466 2 967 14 556 8 1351 2 1069 2 668 4 156 2 350 2 1539 2 412 2 1028 2 233 12 1482 4 1839 26 175 1 57 2 367 2 
1250 2 
1714 1 1602 1 1032 1 758 1 1688 1 646 1 
1714 1 1602 1 1032 1 758 1 1688 1 646 1 
1714 1 1602 1 1032 1 758 1 1688 1 646 1 
1714 1 1602 1 1032 1 758 1 1688 1 646 1 
1714 1 1602 1 1032 1 758 1 1688 1 646 1 
1714 1 1602 1 1032 1 758 1 1688 1 646 1 
1714 1 1602 1 1032 1 758 1 1688 1 646 1 
1714 1 1602 1 1032 1 758 1 1688 1 646 1 
1714 1 1602 1 1032 1 758 1 1688 1 646 1 
1714 1 1602 1 1032 1 758 1 1688 1 646 1 
1714 1 1602 1 1032 1 758 1 1688 1 646 1 
1714 1 1602 1 1032 1 758 1 1688 1 646 1 
1714 1 1602 1 1032 1 758 1 1688 1 646 1 
1714 1 1602 1 1032 1 758 1 1688 1 646 1 
1714 1 1602 1 1032 1 758 1 1688 1 646 1 
1714 1 1602 1 1032 1 758 1 1688 1 646 1 
1714 1 1602 1 1032 1 758 1 1688 1 646 1 
1714 1 1602 1 1032 1 758 1 1688 1 646 1 
1714 1 1602 1 1032 1 758 1 1688 1 646 1 
1714 1 1602 1 1032 1 758 1 1688 1 646 1 
1714 1 1602 1 1032 1 758 1 1688 1 646 1 
1714 1 1602 1 1032 1 758 1 1688 1 646 1 
1714 1 1602 1 1032 1 758 1 1688 1 646 1 
1714 1 1602 1 1032 1 758 1 1688 1 646 1 
1714 1 1602 1 1032 1 758 1 1688 1 646 1 
1714 1 1602 1 1032 1 758 1 1688 1 646 1 
1714 1 1602 1 1032 1 758 1 1688 1 646 1 
1714 1 1602 1 1032 1 758 1 1688 1 646 1 
1714 1 1602 1 1032 1 758 1 1688 1 646 1 
1714 1 1602 1 1032 1 758 1 1688 1 646 1 
1714 1 1602 1 1032 1 758 1 1688 1 646 1 
1714 1 1602 1 1032 1 758 1 1688 1 646 1 
1714 1 1602 1 1032 1 758 1 1688 1 646 1 
1714 1 1602 1 1032 1 758 1 1688 1 646 1 
1714 1 1602 1 1032 1 758 1 1688 1 646 1 
1714 1 1602 1 1032 1 758 1 1688 1 646 1 
1714 1 1602 1 1032 1 758 1 1688 1 646 1 
1714 1 1602 1 1032 1 758 1 1688 1 646 1 
1714 1 1602 1 1032 1 758 1 1688 1 646 1 
1714 1 1602 1 1032 1 758 1 1688 1 646 1 
1714 1 1602 1 1032 1 758 1 1688 1 646 1 
1714 1 1602 1 1032 1 758 1 1688 1 646 1 
1714 1 1602 1 1032 1 758 1 1688 1 646 1 
1714 1 1602 1 1032 1 758 1 1688 1 646 1 

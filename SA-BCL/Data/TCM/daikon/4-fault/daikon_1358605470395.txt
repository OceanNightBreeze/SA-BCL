#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V ERROR java.lang.NullPointerException 340 644 707 
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 716 731 37 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 884 8 840 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
utilMDE.Intern:intern([I)[I
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.Quant:eltwiseNotEqual([I)Z
daikon.ModBitTracker:num_sets()I
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.PptSlice0:initInvariantsSeen()V
utilMDE.Options.OptionInfo:argument_required()Z
daikon.Quant:eltwiseLT([I)Z
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.Quant:memberOf(S[S)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.Quant:pairwiseLT([I[I)Z
daikon.test.InvariantFormatTester:execute()Z
daikon.diff.Node:Node()V
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.Quant:pairwiseGT([I[I)Z
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:max([I)I
daikon.Quant:subsetOf([D[F)Z
daikon.Quant:lte(II)Z
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.Debug:logDetail()Z
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:memberOf(D[F)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:lt(II)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.ProglangType:isIntegral()Z
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.Intern:intern([D)[D
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant:isWorthPrinting()Z
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
utilMDE.FuzzyFloat:ne(DD)Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.diff.Node:add(Ljava.lang.Object;)V
utilMDE.MathMDE:gcd(II)I
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.Quant:eltsGtIndex([I)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.ValueTuple:size()I
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
jtb.Token:newToken(I)Ljtb.Token;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.PptSlice0:arity()I
jtb.JavaParser:jj_scan_token(I)Z
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Quant:eltsLtIndex([I)Z
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
daikon.PptSlice1:num_samples()I
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.diff.PrintAllVisitor:bufPrintln()V
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.InvMap:InvMap()V
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.Quant:eltsGTE([II)Z
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.inv.Invariants:Invariants()V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.VarInfoName:hashCode()I
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.Invariant:prob_and(DDD)D
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eltsGteIndex([I)Z
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
utilMDE.MathMDE:pow_fast(II)I
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.inv.Invariant:justified()Z
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
utilMDE.Intern:internSubsequence([JII)[J
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.inv.unary.scalar.NonModulus:enabled()Z
utilMDE.FuzzyFloat:gte(DD)Z
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.Quant:lexLT([I[I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakHasherMap:size()I
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
utilMDE.FuzzyFloat:gt(DD)Z
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eq(JJ)Z
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
jtb.JavaCharStream:backup(I)V | OPERATOR | 8274 | -= -> |=
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.Debug:logOn()Z
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.Quant:eq(FF)Z
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:toString()Ljava.lang.String;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:pairwiseDivides([I[I)Z
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
utilMDE.OrderedPairIterator:hasNext()Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_ntk()I
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
jtb.JavaCharStream:getBeginColumn()I
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.Quant:subsetOf([D[D)Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.Quant:lexEqual([I[I)Z
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.Quant:lexGT([I[I)Z
daikon.Quant:eq(DD)Z
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.ValueTuple:isMissing(I)Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.Quant:pairwiseLTE([I[I)Z
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:computeConfidence()D
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
utilMDE.ArraysMDE:sum([[D)D
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.OrderedPairIterator:setnext1()V
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.Quant:subsetOf([F[D)Z
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
utilMDE.FuzzyFloat:eq(DD)Z
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.Ppt:Ppt()V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:subsetOf([J[J)Z
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.ModBitTracker:num_samples()I
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
utilMDE.SimpleLog.LongVal:LongVal(J)V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaCharStream:BeginToken()C
daikon.Quant:eltwiseGT([I)Z
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.ProglangType:isArray()Z
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.Quant:isReverse([I[I)Z
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:sum([I)I
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.ModBitTracker:num_vars()I
daikon.diff.DetailedStatisticsVisitor:freq(II)D
jtb.JavaCharStream:getEndLine()I
daikon.ProglangType:baseIsScalar()Z
daikon.PptSlice1:arity()I
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.Quant:eltsEqual([II)Z
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.Quant:ne(II)Z
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.FuzzyFloat:lt(DD)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
utilMDE.Assert:assertTrue(Z)V
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.ParseException:getMessage()Ljava.lang.String;
daikon.VarInfoName:name()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
utilMDE.MathMDE:missing_numbers([I)[I
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
jtb.syntaxtree.NodeToken:trimSpecials()V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.Quant:eltwiseGTE([I)Z
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
utilMDE.MathMDE:sign(I)I
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.inv.ValueSet:ValueSet(I)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.inv.unary.UpperBoundCore:calc_modulus()J
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:subsetOf([B[I)Z
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.MathMDE:gcd(JJ)J
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.Quant:setEqual([I[I)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.Quant:memberOf(J[J)Z
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:subarray([JII)[J
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:getConfidence()D
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaCharStream:UpdateLineColumn(C)V
utilMDE.ArraysMDE:sorted([I)Z
daikon.Quant:memberOf(F[D)Z
daikon.Quant:eltsGT([II)Z
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.OrderedPairIterator:setnext2()V
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.Quant:slice([III)[I
utilMDE.MathMDE:gcd_differences([I)I
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.Quant:subsetOf([S[S)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
utilMDE.LimitedSizeIntSet:add(I)V
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.RootNode:RootNode()V
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.ValueTuple:isMissingFlow(I)Z
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 9283 | = null
utilMDE.ArraysMDE:indexOf([II)I
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
jtb.ParseException:ParseException(Ljava.lang.String;)V
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.Quant:pairwiseNotEqual([I[I)Z
utilMDE.ArraysMDE:min_max([I)[I
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.NonZero:is_pointer()Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
utilMDE.Intern:internSubsequence([III)[I
daikon.Quant:gte(II)Z
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:fn_identity(I)[I
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:lexGTE([I[I)Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:generateParseException()Ljtb.ParseException;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.inv.Invariant:logDetail()Z
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:eltwiseLTE([I)Z
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.inv.Invariant:prob_or(DD)D
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_2_16(I)Z
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.PptName:isEnterPoint()Z
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:isSubarray([I[II)Z
jtb.JavaCharStream:FillBuff()V
daikon.Quant:eq(II)Z
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
utilMDE.MathMDE:modulus([I)[I
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
jtb.JavaParserTokenManager:MoreLexicalActions()V
utilMDE.ArraysMDE:min([I)I
daikon.Quant:pairwiseEqual([I[I)Z
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:lexNotEqual([I[I)Z
jtb.JavaParser:jj_3_16()Z
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ProglangType:elementType()Ldaikon.ProglangType;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
utilMDE.ArraysMDE:fn_is_permutation([I)Z
utilMDE.MathMDE:gcd([I)I
daikon.Quant:memberOf(F[F)Z
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.Quant:memberOf(I[I)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I | ASSIGN | 23529 | = null
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
utilMDE.MathMDE:negate(I)I
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:sum([D)D
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.ProglangType:isScalar()Z
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
daikon.Quant:eltsNotEqual([II)Z
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase; | STATEMENT | 17277 | stmt -> ;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
jtb.JavaCharStream:getBeginLine()I
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.Intern.SequenceAndIndices:hashCode()I
utilMDE.MathMDE:mod_positive(II)I
daikon.Quant:subsetOf([I[I)Z
daikon.inv.Invariant:logOn()Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:concat([I[I)[I
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.PptName:isCombinedExitPoint()Z
daikon.Quant:lexLTE([I[I)Z
daikon.Quant:eltsLteIndex([I)Z
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.Quant:pairwiseGTE([I[I)Z
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.test.FormatTestCase:passes()Z
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.PptSlice2:arity()I
daikon.ModBitTracker:split(I)I
utilMDE.ArraysMDE:element_range([I)I
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
utilMDE.LimitedSizeIntSet:size()I
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.Invariant:prob_and(DD)D
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfo:relate_var()V
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
daikon.VarInfoName.NodeFinder:inPre()Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.TestQuant:removeAdjacentDups([I)[I
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.VarInfoName:isLiteralConstant()Z
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:subarray([III)[I
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
utilMDE.ArraysMDE:sum([[I)I
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.test.TestQuant:assert_arrays_equals([I[I)V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.VarInfoAux:hashCode()I
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.Quant:gt(II)Z
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
jtb.JavaCharStream:getEndColumn()I
daikon.ProglangType:isPseudoArray()Z
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.Quant:subsetOf([F[F)Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.Intern:numIntArrays()I
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
jtb.JavaCharStream:ReadByte()C
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.Quant:setDiff([I[I)[I
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.Quant:eltsLT([II)Z
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.Quant:eltsLTE([II)Z
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.PptMap:asCollection()Ljava.util.Collection;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.ModBitTracker:ModBitTracker(I)V
utilMDE.MathMDE:pow(II)I
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:noDups([I)Z
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.PptSlice0.ImplicationWrapper:hashCode()I
jtb.JavaCharStream:readChar()C
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.ProglangType:dimensions()I
daikon.VarInfo:name()Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
utilMDE.FuzzyFloat:lte(DD)Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfo:new_ppt()V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.inv.unary.scalar.NonZero:enabled()Z
utilMDE.Intern:intern([J)[J
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.Quant:intersection([I[I)[I
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:pairwiseSquare([I[I)Z
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.Quant:eltsEqualIndex([I)Z
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:concat([I[I)[I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:baseIsIntegral()Z
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap:processQueue()V
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.Quant:sameLength([I[I)Z
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.Quant:union([I[I)[I
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.Quant:eltwiseEqual([I)Z
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
304 2 775 2 536 4 483 2 7 2 650 2 487 2 241 4 493 2 721 2 722 2 429 2 550 2 727 2 612 2 797 2 730 2 556 2 35 2 100 2 450 2 811 4 809 2 43 2 160 2 520 2 52 2 463 2 400 4 523 2 466 2 890 2 757 4 354 2 528 4 635 2 636 2 829 2 227 2 359 2 595 2 178 2 767 2 600 2 
149 6 772 8 516 2 3 4 879 4 777 22 481 2 849 16 392 2 107 4 750 16 242 6 905 6 753 32 400 4 87 4 686 2 138 2 916 16 757 4 633 2 944 4 469 32 172 4 531 4 833 6 558 48 31 4 264 6 506 32 616 6 949 6 923 56 736 6 639 18 620 2 233 2 928 16 668 4 
684 2 466 2 740 2 
127 2 624 2 322 2 91 10 190 2 326 2 393 2 868 2 160 2 314 22 315 2 375 2 579 2 206 2 
3 2 777 2 849 2 750 2 460 2 242 4 753 2 199 2 138 2 916 2 201 2 469 2 763 2 226 2 558 4 835 2 506 2 804 2 923 6 639 2 207 2 899 2 928 2 
349 2 916 4 943 2 777 4 747 2 849 4 172 4 469 8 750 4 833 6 558 12 31 4 506 8 923 16 753 8 736 6 928 4 
0 2 622 2 846 2 420 14 707 2 536 2 673 4 421 2 644 2 340 2 647 2 604 2 343 2 310 2 457 2 820 2 721 2 466 6 346 2 683 2 684 2 432 2 501 4 167 2 589 2 408 2 637 2 94 10 97 2 740 4 
341 2 342 2 677 2 542 2 85 2 488 2 110 2 21 2 803 2 839 2 
757 2 563 2 862 2 814 2 400 2 619 2 729 4 523 2 513 2 
203 2 250 2 13 2 434 2 439 2 489 6 578 2 826 2 383 6 306 6 841 2 
181 6 757 2 502 2 551 2 694 6 554 2 472 2 396 6 278 6 509 2 400 2 924 4 285 4 
270 4 3 6 184 2 879 6 672 8 777 12 747 4 849 10 392 2 540 8 242 10 750 10 426 2 544 2 753 16 400 6 138 4 916 10 757 6 469 16 558 26 264 8 506 16 923 30 475 2 595 2 765 4 639 8 951 2 928 10 
151 6 453 4 
110 2 
379 2 757 2 
150 2 757 4 735 2 
584 2 
1 2 362 2 845 2 363 2 128 2 850 3 710 2 853 2 240 4 243 2 714 2 715 2 855 2 371 16 719 2 376 3 18 4 134 1 248 2 496 1 20 2 610 2 255 6 861 12 726 2 728 24 381 2 504 1 382 1 142 2 863 2 29 1 261 2 870 2 615 2 872 2 33 2 265 2 144 8 874 2 145 4 387 3 619 2 737 2 146 2 147 2 742 2 148 4 269 2 274 2 626 2 153 2 155 2 156 2 158 3 50 2 519 2 48 2 883 3 280 1 400 32 55 2 56 4 58 1 164 6 288 2 63 2 757 34 406 1 168 32 759 2 171 3 530 2 173 2 174 2 72 16 300 2 642 2 419 2 778 4 645 1 307 24 902 2 539 2 425 4 424 2 193 1 781 2 780 4 904 32 195 2 653 1 785 2 911 2 790 2 319 2 548 2 657 2 913 2 662 2 796 2 324 6 325 2 559 2 332 3 204 3 99 1 333 2 806 1 566 2 208 2 210 2 211 2 568 2 337 2 216 5 676 2 934 2 219 2 936 2 108 2 679 2 678 16 817 1 581 2 348 8 682 2 825 2 941 3 689 2 690 2 467 8 468 3 691 3 827 2 355 16 118 2 470 1 471 2 834 2 594 2 120 2 474 1 836 3 704 2 705 6 124 2 
125 2 482 30 538 6 370 6 782 4 907 2 856 30 912 2 197 2 791 6 609 2 914 6 794 6 611 2 257 2 918 2 260 6 866 4 557 2 871 2 386 6 873 6 618 2 565 2 266 2 743 2 669 4 670 6 933 2 815 30 217 6 277 2 628 2 576 2 461 6 397 2 522 2 823 4 402 2 756 4 114 2 588 2 351 6 832 2 762 6 946 2 119 6 414 2 898 6 294 4 947 2 297 2 596 2 532 2 76 4 415 2 843 4 
776 2 746 2 74 1 765 2 597 2 466 2 641 2 881 2 
597 2 641 2 456 2 
674 2 597 2 641 2 
385 2 920 2 357 2 
597 2 641 2 
385 2 378 2 
661 2 597 2 
385 2 920 2 613 2 
920 2 36 2 545 2 
920 2 789 2 293 2 
920 2 41 2 45 2 
69 2 712 2 920 2 
385 2 929 2 
14 2 597 2 
22 2 545 2 
574 2 789 2 
352 2 45 2 
69 2 416 2 
385 2 891 2 
69 2 157 2 
98 2 45 2 
699 2 789 2 
545 2 129 2 
385 2 267 2 920 2 613 2 
385 2 267 2 920 2 617 2 613 2 
385 2 920 2 245 2 
385 2 920 2 887 2 
931 2 441 2 875 2 318 2 
897 2 776 2 692 2 466 2 
897 2 776 2 746 2 692 2 926 2 466 2 
818 2 776 2 765 2 597 2 466 2 641 2 
797 2 852 2 
500 2 776 2 765 2 466 2 
485 2 45 2 
69 2 143 2 
824 2 545 2 
789 2 838 2 
69 2 196 2 789 2 
69 2 698 2 789 2 
69 2 272 2 789 2 
69 2 560 2 789 2 
776 2 81 2 466 2 284 2 60 2 252 6 413 6 512 2 
385 2 223 2 
221 2 335 4 688 2 214 2 273 4 484 2 44 2 444 2 309 2 882 2 505 2 801 2 263 2 32 2 314 6 638 2 465 2 57 2 
920 2 205 2 
920 2 535 2 597 2 
366 2 597 2 
913 2 
845 2 362 2 602 2 128 2 710 2 240 2 714 2 243 2 715 2 855 2 372 2 492 4 20 2 139 2 255 2 861 8 726 2 27 2 869 2 870 2 733 2 265 2 145 4 619 2 737 2 148 4 878 2 400 26 56 2 164 2 63 2 757 26 168 4 759 2 530 2 173 2 72 6 295 2 419 2 774 2 778 4 425 2 424 2 649 4 311 2 193 2 781 2 780 4 541 2 904 6 195 2 653 2 783 2 911 2 319 2 548 2 657 6 324 6 448 2 208 2 212 2 219 2 936 2 108 4 581 2 348 2 682 2 825 2 693 2 118 2 594 2 121 2 705 4 124 2 
362 2 845 2 602 2 128 2 710 2 240 2 714 2 243 2 715 2 12 2 855 2 372 2 492 4 20 2 139 2 255 2 861 8 726 2 27 2 869 2 870 2 733 2 265 2 145 4 619 2 737 2 148 4 878 2 752 2 400 26 56 2 164 2 63 2 757 26 168 4 759 2 530 2 173 2 72 6 295 2 73 2 419 2 774 2 778 4 425 2 424 2 649 4 311 2 193 2 781 2 780 4 541 2 904 6 195 2 653 2 911 2 319 2 548 2 657 6 796 2 324 6 208 2 568 2 212 2 219 2 936 2 108 4 679 2 581 2 348 2 682 2 825 2 118 2 594 2 121 2 705 6 124 2 
369 2 
816 2 350 2 
250 2 251 2 237 2 880 2 141 2 188 2 186 2 169 2 306 2 25 2 518 4 802 2 885 2 489 2 909 2 38 4 842 2 841 2 
418 2 845 2 237 2 365 4 188 4 186 2 306 4 714 2 780 2 13 2 717 2 313 2 16 2 489 6 909 2 251 2 250 4 499 2 141 2 323 2 383 6 553 2 25 2 324 4 93 4 802 2 330 4 145 2 38 4 208 2 514 4 807 4 454 2 880 2 215 2 518 4 391 2 936 2 751 2 680 2 885 2 54 2 400 6 889 2 222 2 757 12 634 2 826 2 169 2 759 2 894 2 830 2 530 2 697 2 593 2 177 2 299 6 841 4 842 2 124 2 
418 2 845 2 237 2 365 4 188 4 186 2 306 6 714 2 780 2 717 2 313 2 16 2 489 4 909 2 251 2 250 4 499 2 141 2 323 2 383 6 553 2 25 2 324 4 203 2 93 4 802 2 330 4 145 2 38 4 208 2 514 4 807 4 454 2 880 2 215 2 518 4 391 2 936 2 751 2 680 2 885 2 54 2 400 6 889 2 222 2 757 12 634 2 826 2 169 2 759 2 894 2 830 2 530 2 697 2 593 2 177 2 299 6 841 4 842 2 124 2 
418 2 845 2 237 2 365 4 188 4 186 2 306 6 714 2 780 2 717 2 313 2 16 2 489 6 909 2 251 2 250 4 499 2 439 2 141 2 323 2 383 6 553 2 25 2 324 4 93 4 802 2 330 4 145 2 38 4 208 2 514 8 807 4 454 2 880 2 215 2 518 4 391 2 936 2 751 2 680 2 885 2 54 2 400 6 889 2 222 2 757 12 634 2 826 2 169 2 759 2 894 2 830 2 530 2 697 2 593 2 177 2 299 6 841 4 842 2 124 2 
418 2 845 2 237 2 365 4 188 4 186 2 306 8 714 2 780 2 717 2 313 2 16 2 489 6 909 2 251 2 250 4 499 2 439 2 141 2 323 2 383 8 553 2 25 2 324 4 203 2 93 4 802 2 330 8 145 2 38 4 208 2 514 8 807 4 454 2 880 2 215 2 518 4 391 2 936 2 751 2 680 2 885 2 54 2 400 6 889 2 222 2 757 12 634 2 826 2 169 2 759 2 894 2 830 2 530 2 697 2 593 2 177 2 299 10 841 4 842 2 124 2 
418 2 845 2 237 2 365 4 188 4 186 2 306 6 714 2 780 2 717 2 313 2 16 2 489 6 909 2 251 2 250 4 499 2 439 2 141 2 323 2 383 6 553 2 25 2 324 4 93 4 802 2 330 8 145 2 38 4 208 2 514 8 807 4 454 2 880 2 215 2 518 4 391 2 936 2 751 2 680 2 885 2 54 2 400 6 889 2 222 2 757 12 634 2 826 2 169 2 759 2 894 2 830 2 530 2 697 2 593 2 177 2 299 10 841 4 842 2 124 2 
2 2 237 2 480 6 4 2 710 2 240 2 714 2 243 2 715 2 717 2 244 2 489 4 16 4 718 2 247 8 251 2 250 4 724 2 499 2 255 2 726 2 25 2 38 4 735 6 737 2 514 2 275 2 518 4 751 2 53 2 54 2 283 4 56 2 757 46 759 2 526 2 761 2 530 2 72 6 296 6 299 2 534 2 78 7 778 4 306 8 780 4 781 2 543 2 313 2 316 2 784 6 546 1 319 2 89 2 323 2 796 2 553 2 324 6 93 6 802 2 800 2 567 2 568 2 807 8 336 1 570 6 810 2 572 2 821 2 581 2 348 2 584 6 826 4 118 2 830 2 831 2 593 2 361 2 124 2 841 4 842 2 126 6 845 2 362 2 365 4 851 2 372 4 130 6 132 6 607 2 379 6 137 2 139 2 858 1 380 2 861 4 141 2 383 12 384 1 864 2 869 2 870 2 145 4 619 2 148 4 880 2 391 2 885 2 399 1 400 24 164 2 889 2 168 2 634 2 169 2 411 6 894 2 412 1 177 2 640 6 179 4 418 2 186 2 188 4 425 2 424 2 649 4 192 6 904 8 195 2 652 2 906 6 909 2 911 2 656 1 657 6 435 7 437 6 443 2 203 4 666 2 667 1 925 1 208 2 212 2 454 2 215 2 675 10 219 12 936 2 459 2 458 2 680 4 938 6 682 2 222 2 224 2 948 2 705 6 
126 6 2 2 362 2 845 2 237 2 480 6 365 4 4 2 710 2 851 2 240 4 243 2 714 2 715 2 244 2 717 2 372 4 130 6 16 4 489 8 132 6 718 2 247 8 607 2 250 4 251 2 379 6 137 2 724 2 139 2 499 2 380 2 255 2 861 8 726 2 141 2 383 12 25 2 864 2 869 2 870 2 145 4 735 6 38 4 737 2 619 2 148 4 514 6 880 2 275 2 391 2 518 4 751 2 53 2 885 2 400 26 54 2 283 4 56 4 59 2 889 2 164 2 757 48 168 2 525 2 634 2 411 6 526 2 169 2 759 2 894 2 761 2 530 2 296 6 72 6 640 6 177 2 299 2 179 4 534 2 418 2 188 4 186 2 778 4 306 8 192 6 649 4 424 2 425 4 781 2 780 4 904 8 652 2 195 2 543 2 313 2 906 6 316 2 784 6 909 2 911 2 319 2 657 6 89 2 437 6 439 4 323 2 796 2 443 2 553 2 324 6 666 2 93 6 800 2 802 2 567 2 208 2 568 2 212 2 807 8 454 2 570 6 572 2 810 2 215 2 675 10 219 12 936 2 108 2 458 2 459 2 680 4 938 6 821 2 581 2 348 2 682 2 584 6 222 2 224 2 826 4 831 2 830 2 118 2 593 2 948 2 361 2 705 6 842 2 841 4 124 2 
126 6 2 2 362 2 845 2 237 2 480 6 365 4 4 2 710 2 851 2 240 4 243 2 714 2 715 2 244 2 717 2 372 4 130 6 16 4 489 8 132 6 718 2 247 8 607 2 250 4 251 2 379 6 137 2 724 2 139 2 499 2 380 2 255 2 861 8 726 2 141 2 383 12 25 2 864 2 869 2 870 2 145 4 735 6 38 4 737 2 619 2 148 4 514 6 880 2 275 2 391 2 518 4 751 2 53 2 885 2 400 26 54 2 283 4 56 4 59 2 889 2 164 2 757 48 168 2 525 2 634 2 411 6 526 2 169 2 759 2 894 2 761 2 530 2 296 6 72 6 640 6 177 2 179 4 299 6 534 2 418 2 188 4 186 2 778 4 306 8 192 6 649 4 424 2 425 4 781 2 780 4 904 8 652 2 195 2 543 2 313 2 906 6 316 2 784 6 909 2 911 2 319 2 657 6 89 2 437 6 439 4 323 2 796 2 443 2 553 2 324 6 666 2 93 6 800 2 802 2 330 4 567 2 208 2 568 2 212 2 807 8 454 2 570 6 572 2 810 2 215 2 675 10 219 12 936 2 108 2 458 2 459 2 680 4 938 6 821 2 581 2 348 2 682 2 584 6 222 2 224 2 826 4 831 2 830 2 118 2 593 2 948 2 361 2 705 6 842 2 841 4 124 2 
706 2 479 2 237 2 480 6 4 2 710 2 240 4 714 2 243 2 715 2 717 2 13 2 244 2 489 10 16 4 718 2 247 8 251 2 250 4 724 2 499 2 255 4 726 2 25 2 38 4 735 12 737 2 514 6 275 2 748 2 518 4 751 2 49 2 53 2 54 2 283 4 56 4 59 2 289 6 757 52 525 2 759 2 526 2 761 2 530 2 72 8 296 6 299 6 534 2 778 4 306 10 780 4 781 2 543 2 313 2 316 2 784 6 319 2 89 2 323 2 796 2 553 2 324 6 93 6 802 2 800 2 330 4 567 2 568 2 807 8 570 6 810 2 572 2 108 2 821 2 581 2 348 4 584 12 826 4 118 2 830 2 831 2 593 2 361 2 124 2 841 4 842 2 126 6 362 2 845 2 365 4 851 2 372 4 130 6 132 12 607 2 379 12 137 2 139 2 380 2 861 10 141 2 383 16 864 2 869 2 870 2 145 4 619 2 148 4 880 2 627 6 391 2 885 2 400 24 164 4 889 2 168 4 634 2 169 2 411 6 894 2 177 2 640 6 179 4 417 6 418 2 186 2 188 4 423 2 425 4 424 2 649 6 192 12 904 12 651 2 195 2 652 2 906 6 909 2 911 2 910 6 428 6 657 8 431 6 437 6 439 4 443 2 446 6 203 2 666 2 208 2 212 4 213 2 452 6 454 2 671 2 215 2 932 6 675 8 219 10 936 2 459 2 458 2 680 4 938 12 682 2 222 2 224 2 948 2 705 6 
514 6 807 2 418 2 365 2 215 2 186 2 306 6 391 2 518 2 751 2 717 2 313 2 885 2 489 6 251 2 250 4 222 2 499 2 757 4 439 2 141 2 826 2 634 2 383 4 894 2 25 2 830 2 93 2 802 2 593 2 330 4 38 2 299 4 842 2 841 4 
362 2 845 2 2 2 365 2 710 2 714 2 715 2 717 2 372 2 489 6 250 4 251 2 499 2 139 2 255 3 726 2 141 2 383 4 25 2 869 2 870 2 145 4 38 2 619 2 737 2 148 4 514 6 518 2 155 2 391 2 751 2 519 2 48 2 885 2 400 24 54 2 282 2 164 3 757 28 168 3 634 2 759 2 894 2 68 2 530 2 72 6 299 2 418 2 186 2 778 4 79 2 306 6 189 2 424 2 649 4 780 4 781 2 904 8 195 2 313 2 911 2 319 2 657 6 658 3 913 2 439 2 796 2 324 6 798 2 93 2 802 2 208 2 568 2 807 2 215 2 675 2 219 4 936 2 581 2 682 2 222 2 826 2 118 2 830 2 593 2 705 6 841 4 124 2 842 2 
418 2 845 2 237 2 365 4 188 4 186 2 306 6 714 2 780 2 717 2 313 2 16 2 489 6 909 2 251 2 250 4 499 2 439 2 141 2 323 2 383 6 553 2 25 2 324 4 93 4 802 2 330 8 145 2 38 4 208 2 514 8 807 4 454 2 880 2 215 2 518 4 391 2 936 2 751 2 680 2 885 2 54 2 400 6 889 2 222 2 757 12 634 2 826 2 169 2 759 2 894 2 830 2 530 2 697 2 593 2 177 2 299 10 841 4 842 2 124 2 
418 2 845 2 77 2 237 2 365 4 188 4 186 2 306 6 714 2 780 2 13 2 717 2 313 2 16 2 489 8 909 2 251 2 250 4 499 2 439 2 141 2 323 2 383 8 553 2 25 2 324 4 93 4 802 2 330 8 145 2 38 4 208 2 514 8 807 4 744 2 454 2 880 2 215 2 391 2 518 4 936 2 751 2 680 2 885 2 220 4 400 6 54 2 889 2 222 2 757 12 634 2 826 2 169 2 759 2 894 2 830 2 530 2 177 2 299 10 124 2 842 2 841 4 
751 2 515 2 499 2 
751 2 515 2 499 2 
362 2 845 2 847 2 480 2 365 2 710 2 240 4 243 4 714 2 715 2 13 4 717 2 372 6 16 4 489 12 606 2 250 4 724 2 139 2 499 4 861 4 141 4 24 2 383 16 869 2 614 2 870 2 30 2 145 4 38 2 619 2 737 2 148 4 514 6 515 2 518 2 751 6 394 2 395 2 885 2 400 16 521 2 283 2 56 4 755 2 889 2 757 24 168 2 169 2 759 2 530 2 71 4 72 2 177 2 179 2 299 6 188 4 778 4 186 2 305 2 306 12 80 2 425 4 424 2 311 4 781 2 780 4 904 2 195 2 313 2 909 2 317 2 911 2 198 4 319 2 657 2 439 4 796 2 324 6 445 2 799 2 203 4 93 4 328 2 330 4 208 2 568 2 807 4 454 2 810 2 675 2 219 4 935 2 936 2 458 2 680 2 345 2 581 2 682 2 826 4 118 2 705 6 124 2 841 4 
237 2 757 4 480 2 812 2 675 2 367 2 443 2 445 2 219 2 816 2 614 2 606 2 298 2 400 2 607 2 179 2 124 2 
362 2 845 2 847 2 480 2 365 2 710 2 240 4 243 4 714 2 715 2 13 4 717 2 372 6 16 4 489 12 606 2 250 4 724 2 139 2 499 4 861 4 141 4 24 2 383 16 869 2 614 2 870 2 34 2 145 4 38 2 619 2 737 2 148 4 514 6 515 2 518 2 751 6 394 4 395 2 885 2 398 2 400 16 521 2 283 2 56 4 755 2 889 2 757 24 168 4 410 2 169 2 759 2 530 2 71 4 72 2 177 2 299 6 183 2 188 4 778 4 186 2 306 12 80 2 425 4 424 2 311 4 781 2 780 4 904 2 195 2 313 2 909 2 911 2 198 4 319 2 657 2 439 4 323 2 796 2 324 6 445 2 799 2 203 4 93 4 328 2 330 4 208 2 568 2 807 4 454 2 810 2 219 2 935 2 936 2 458 2 680 4 581 2 940 2 682 2 826 4 118 2 705 6 124 2 841 4 
362 2 845 2 847 2 364 2 480 2 365 2 710 2 240 4 243 4 714 2 715 2 13 4 717 2 372 6 16 4 489 12 374 2 606 2 250 4 724 2 139 2 499 4 861 4 141 4 24 2 383 16 869 2 614 2 870 2 145 4 38 2 619 2 737 2 148 4 514 6 515 2 518 2 751 6 394 2 395 2 885 2 400 16 521 2 283 2 56 4 755 2 889 2 62 2 757 24 168 2 760 2 169 2 759 2 530 2 71 4 72 2 177 2 179 2 299 6 188 4 778 4 186 2 306 12 80 2 425 4 424 2 311 4 781 2 780 4 904 2 195 2 313 2 909 2 911 2 198 4 319 2 657 2 439 4 323 2 796 2 324 6 445 2 799 2 203 4 92 2 93 4 328 2 330 4 208 2 568 2 807 4 454 2 810 2 675 2 219 4 935 2 936 2 458 2 680 4 581 2 682 2 826 4 118 2 705 6 124 2 841 4 
362 2 845 2 849 2 713 2 714 2 605 2 716 2 244 2 372 2 490 2 133 2 139 2 254 2 380 2 859 2 255 2 726 2 731 2 870 2 31 2 506 2 145 4 37 2 619 2 737 2 389 2 148 2 46 2 750 2 753 2 400 20 629 2 754 2 286 2 164 2 631 2 757 26 168 2 292 2 759 2 67 2 530 2 764 2 72 6 176 2 643 2 185 1 778 2 779 2 646 1 424 2 649 4 780 4 904 8 195 2 911 2 319 2 430 6 657 6 90 2 916 2 917 2 796 1 442 2 324 6 202 2 665 2 558 4 923 6 96 2 208 2 928 2 209 2 568 1 571 4 219 2 936 2 459 2 109 2 821 2 581 2 224 2 115 2 469 2 118 2 833 4 229 2 473 2 948 2 837 1 705 3 599 2 124 2 234 2 
601 2 212 6 235 2 271 2 106 4 152 2 6 3 649 2 904 2 819 2 654 2 491 2 86 2 400 2 681 2 657 2 164 3 433 2 255 3 757 2 168 3 726 2 896 2 72 2 
601 2 212 6 235 2 271 2 106 4 152 2 6 2 649 2 904 2 819 2 654 2 491 2 86 2 400 2 681 2 657 2 164 2 433 2 255 2 757 2 168 2 726 2 896 2 72 2 
601 2 212 6 235 2 271 2 106 4 152 2 6 2 649 2 904 2 819 2 654 2 491 2 86 2 400 2 681 2 657 2 164 2 433 2 255 2 757 2 168 2 726 2 896 2 72 2 
301 2 182 2 879 2 187 2 849 2 813 2 708 6 854 3 750 2 903 2 904 2 371 2 400 4 753 2 88 2 320 3 608 3 164 3 860 4 916 2 757 10 168 3 795 2 726 2 290 2 409 4 355 2 469 2 732 2 896 2 447 2 558 4 228 2 264 4 506 2 562 4 923 5 476 4 621 4 928 2 
301 2 182 2 777 2 879 2 187 2 849 2 813 2 708 6 392 2 854 2 750 2 903 2 904 2 371 2 400 4 753 2 88 2 320 2 608 2 164 2 860 4 916 2 757 10 168 2 795 2 726 2 290 2 409 4 355 2 469 2 732 2 896 2 447 2 558 4 228 2 264 4 506 2 562 4 923 4 639 2 476 4 621 4 928 2 
301 2 182 2 777 2 879 2 187 2 849 2 813 2 708 6 392 2 854 2 750 2 903 2 904 2 371 2 400 4 753 2 88 2 320 2 608 2 164 2 860 4 916 2 757 10 168 2 795 2 726 2 290 2 409 4 355 2 469 2 732 2 896 2 447 2 558 4 228 2 264 4 506 2 562 4 923 4 639 2 476 4 621 4 928 2 
301 2 182 2 777 2 879 2 187 2 849 2 813 2 708 6 392 2 854 2 750 2 903 2 904 2 371 2 400 4 753 2 88 2 320 2 608 2 164 2 860 4 916 2 757 10 168 2 795 2 726 2 290 2 409 4 355 2 469 2 732 2 896 2 447 2 558 4 228 2 264 4 506 2 562 4 923 4 639 2 476 4 621 4 928 2 
301 2 182 2 777 4 879 2 187 2 849 2 813 2 708 6 392 4 854 2 750 2 903 2 904 2 371 2 400 4 753 2 88 2 320 2 608 2 164 2 860 4 916 2 757 10 168 2 795 2 726 2 290 2 409 4 355 2 469 2 732 2 896 2 447 2 558 4 228 2 264 4 506 2 562 4 923 4 639 4 476 4 621 4 928 2 
303 2 194 2 405 2 449 2 788 2 494 2 
900 2 733 2 70 2 331 2 360 2 788 2 170 2 
769 2 846 1 845 2 5 2 339 2 368 2 192 2 11 2 15 2 939 2 279 2 400 8 17 2 720 2 792 2 524 2 498 2 167 1 757 10 116 2 291 2 356 2 945 1 230 1 101 2 598 1 
772 2 775 2 879 2 777 4 849 6 392 2 750 6 400 6 753 6 754 2 757 6 916 6 942 2 292 2 590 2 469 6 833 4 696 2 558 12 227 2 31 2 506 6 264 4 616 4 473 2 923 16 639 2 876 2 668 2 928 6 
136 2 583 2 436 2 860 2 757 1 603 2 632 2 409 2 338 4 711 2 84 2 592 2 161 2 562 2 344 1 400 1 104 2 877 7 
136 2 583 4 860 2 436 4 603 2 632 2 409 2 338 4 711 2 84 2 592 2 161 2 562 2 104 4 877 6 
136 8 583 8 860 2 436 8 757 1 603 2 632 6 409 2 338 4 711 2 84 2 592 2 161 2 562 2 344 1 400 1 104 8 877 10 
583 2 860 2 436 2 603 2 409 2 338 2 711 2 84 2 592 2 161 2 562 2 104 2 877 2 
844 4 236 4 848 4 709 4 8 2 10 4 246 10 377 4 857 4 723 2 19 10 253 4 256 4 503 4 258 8 26 6 259 4 867 4 262 24 507 4 508 2 510 4 739 4 511 16 741 24 148 44 623 10 268 4 745 2 390 2 42 4 625 4 276 4 159 8 884 2 886 4 400 70 287 1 630 10 165 2 61 2 166 4 403 16 404 2 64 4 66 2 757 78 758 4 892 2 529 4 175 2 533 6 75 4 771 10 302 8 901 4 778 36 648 6 308 4 82 10 83 2 195 6 908 16 786 4 547 2 438 2 552 8 796 26 664 4 919 5 329 8 561 4 921 8 102 4 927 2 568 28 930 16 451 6 334 4 808 4 105 14 569 24 575 4 455 4 218 2 937 4 577 4 580 2 822 2 581 2 582 8 347 4 685 2 112 31 585 2 587 11 113 2 353 8 117 4 591 4 225 4 118 6 358 4 950 2 703 4 231 10 705 102 840 2 123 32 477 4 
768 2 773 2 236 4 901 2 778 14 239 2 8 2 10 4 82 6 195 2 312 2 246 2 377 2 135 2 857 2 19 6 253 4 321 2 23 2 796 12 26 2 327 2 867 4 329 6 508 2 102 4 927 2 741 8 568 12 148 14 623 6 451 4 745 2 276 2 455 4 884 2 400 26 888 2 822 2 581 2 685 2 112 6 61 2 65 2 404 2 403 14 587 2 687 10 757 28 407 2 892 2 117 4 591 2 225 2 118 2 533 2 75 2 705 40 840 2 
478 24 236 8 848 6 709 6 239 2 8 2 10 6 246 18 131 26 377 10 135 4 857 4 495 26 19 16 253 6 725 4 256 6 23 2 503 6 258 50 26 36 259 6 28 24 867 6 262 84 508 8 738 4 739 6 741 124 148 112 623 16 268 6 40 8 745 2 42 6 390 4 517 2 625 4 154 24 276 10 749 4 51 12 884 2 886 4 400 134 162 4 888 2 401 90 61 8 65 2 166 4 403 28 64 6 757 150 892 8 407 4 893 2 895 90 529 6 175 2 75 6 533 10 180 6 768 8 770 10 773 2 901 10 537 10 778 88 648 5 191 18 82 16 195 14 312 2 427 2 908 42 786 6 549 4 660 2 321 11 796 58 664 4 555 24 329 16 561 4 921 24 805 10 102 6 103 4 927 2 568 58 451 8 334 4 808 6 105 12 569 92 575 4 455 6 218 2 937 6 577 6 462 8 464 2 822 5 581 8 347 4 111 6 685 4 112 34 585 2 586 8 587 16 687 22 353 42 117 6 225 10 591 4 118 14 358 4 700 4 701 24 950 2 703 4 122 4 232 4 705 248 840 2 
771 2 770 2 537 2 422 2 778 16 238 2 486 2 9 4 8 2 10 2 82 2 195 2 655 2 373 2 787 2 249 2 723 2 497 4 659 2 19 2 793 4 915 4 253 2 200 2 140 2 663 2 440 4 796 6 865 2 555 2 28 2 922 2 508 2 734 2 805 2 95 2 564 2 103 2 388 2 39 2 741 2 568 6 148 16 623 2 40 2 745 2 573 2 154 2 455 2 47 2 884 2 281 2 400 36 163 2 822 2 581 2 630 2 61 2 403 26 404 2 113 2 757 36 892 2 527 2 828 2 695 2 118 2 702 2 231 2 705 38 840 2 
766 2 

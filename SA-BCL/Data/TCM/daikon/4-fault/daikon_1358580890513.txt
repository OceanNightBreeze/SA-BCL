#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V PASSED
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 428 767 1135 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_0()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_1()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_2()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_3()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_4()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_5()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_6()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_7()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_8()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_9()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_10()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_11()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_12()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_13()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_14()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_15()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_16()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_17()V PASSED
daikon.test.split.SplitterFactoryTest:testmisc_Fib_main_18()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_19()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_20()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_21()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_22()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_23()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_24()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_25()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_26()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_27()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_28()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_29()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_30()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_31()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_32()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__33()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__34()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__35()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__36()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__37()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__38()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__39()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__40()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__41()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__42()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__43()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_210()Z
jtb.JavaParser:jj_3_25()Z
utilMDE.Intern:intern([I)[I
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.Quant:setDiff([I[I)[I
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeToken;)V
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
jtb.JavaParser:jj_3R_51()Z
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameter;)V
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
jtb.JavaParser:jj_3R_109()Z
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.BlockStatement;)V
utilMDE.WeakIdentityHashMap:indexFor(II)I
jtb.syntaxtree.NodeSequence:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
jtb.syntaxtree.ReturnStatement:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_114()Z
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.FormalParameter:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.tools.jtb.PptNameMatcher:extractPptArgs(Ldaikon.PptName;)Ljava.util.List;
utilMDE.ArraysMDE:sorted([I)Z
utilMDE.UtilMDE:lineNumberFileReader(Ljava.lang.String;)Ljava.io.LineNumberReader;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
jtb.syntaxtree.NodeOptional:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.ElementsFinder:inPre()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeBound;)V
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.tools.jtb.Ast:format(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.ModBitTracker:num_sets()I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_99()Z
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:memberOf(F[F)Z
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
jtb.syntaxtree.NodeChoice:getParent()Ljtb.syntaxtree.Node;
jtb.JavaParser:jj_3_21()Z
jtb.syntaxtree.VariableDeclaratorId:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalOrExpression;)V
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaCharStream:getBeginColumn()I
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
utilMDE.WeakHasherMap:size()I
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
jtb.syntaxtree.TypeDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
jtb.JavaCharStream:getEndColumn()I
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
jtb.JavaParser:jj_3R_85()Z
jtb.JavaParser:jj_3_28()Z
daikon.Quant:eq(JJ)Z
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.FormatCommand:FormatCommand(II)V
utilMDE.Intern:internSubsequence([III)[I
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:missing_numbers([I)[I
jtb.JavaParser:jj_3R_69()Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_73()Z
jtb.JavaParser:jj_3R_115()Z
jtb.syntaxtree.InclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_180()Z
jtb.syntaxtree.Modifiers:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.ValueTuple:isMissingFlow(I)Z
daikon.tools.jtb.Ast.1GetParametersVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;)Z
daikon.Quant:subsetOf([S[S)Z
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
jtb.JavaParser:jj_3R_163()Z
daikon.Quant:eltwiseGT([I)Z
utilMDE.ArraysMDE:sum([[I)I
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ImportDeclaration;)V
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
jtb.syntaxtree.ConditionalAndExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalExpression;)V
jtb.syntaxtree.CompilationUnit:accept(Ljtb.visitor.Visitor;)V
daikon.ValueTuple:size()I
jtb.syntaxtree.NodeSequence:getParent()Ljtb.syntaxtree.Node;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.AndExpression:accept(Ljtb.visitor.Visitor;)V
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.TypeDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.Quant:intersection([I[I)[I
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
jtb.JavaParser:jj_3_4()Z
daikon.PptName:getSignature()Ljava.lang.String;
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
utilMDE.UtilMDE:removeWhitespaceAround(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
jtb.JavaParser:jj_3R_123()Z
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
daikon.Quant:lexGTE([I[I)Z
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.MultiplicativeExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.PostfixExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
jtb.JavaParserTokenManager:jjStopAtPos(II)I
jtb.JavaParser:jj_3R_61()Z
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.inv.Invariant:prob_and(DDD)D
jtb.syntaxtree.NodeListOptional:getParent()Ljtb.syntaxtree.Node;
jtb.syntaxtree.ShiftExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_2_13(I)Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
utilMDE.WeakHasherMap:processQueue()V
jtb.syntaxtree.NodeSequence:elements()Ljava.util.Enumeration;
daikon.tools.jtb.SimpleTreeDumper:SimpleTreeDumper(Ljava.io.Writer;)V
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
jtb.visitor.FormatCommand:getCommand()I
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.syntaxtree.TypeBound:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Invariant:prob_and(DD)D
jtb.syntaxtree.MethodDeclaration:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
jtb.syntaxtree.VariableDeclaratorId:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
jtb.JavaParser:jj_3R_86()Z
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
jtb.JavaParser:jj_3R_117()Z
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.tools.jtb.PptNameMatcher:typeMatch(Ljava.lang.String;Ljtb.syntaxtree.FormalParameter;)Z
jtb.JavaParser:jj_3R_104()Z
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
jtb.syntaxtree.NodeToken:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:eq(FF)Z
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.VarInfoName.Simple:isLiteralConstant()Z
jtb.JavaParser:JavaParser(Ljava.io.Reader;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.LimitedSizeIntSet:size()I
jtb.JavaCharStream:getBeginLine()I
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.syntaxtree.TypeDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.syntaxtree.TypeArguments:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_29()Z
daikon.tools.jtb.Ast:getParameters(Ljtb.syntaxtree.MethodDeclaration;)Ljava.util.List;
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_2_17(I)Z
jtb.syntaxtree.TypeArguments:accept(Ljtb.visitor.Visitor;)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryExpression;)V
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.NodeOptional:present()Z
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.JavaCharStream:readChar()C
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MultiplicativeExpression;)V
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
utilMDE.MathMDE:mod_positive(II)I
daikon.PptName:toString()Ljava.lang.String;
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclarator;)V
jtb.JavaParser:jj_3R_54()Z
jtb.JavaParser:VariableDeclaratorId()Ljtb.syntaxtree.VariableDeclaratorId;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3_5()Z
jtb.JavaParser:jj_2_16(I)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.ModBitTracker:num_samples()I
daikon.test.TestAst.ClassOrInterfaceDeclarationHarvester:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_35()Z
daikon.Quant:eltsLtIndex([I)Z
daikon.inv.Invariant:prob_or(DD)D
jtb.JavaParser:jj_3R_77()Z
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3R_49()Z
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:gt(II)Z
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
jtb.syntaxtree.TypeArgument:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_108()Z
jtb.JavaParser:jj_ntk()I
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
jtb.JavaParser:jj_3R_50()Z
daikon.Quant:eltsGT([II)Z
jtb.syntaxtree.ClassOrInterfaceType:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
jtb.JavaParser:jj_3R_74()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InstanceOfExpression;)V
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
utilMDE.OrderedPairIterator:hasNext()Z
jtb.JavaParser:jj_3R_137()Z
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceBody:getParent()Ljtb.syntaxtree.Node;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:eltsGtIndex([I)Z
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:isLiteralConstant()Z
daikon.Quant:eltwiseEqual([I)Z
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.Quant:lt(II)Z
jtb.Token:newToken(I)Ljtb.Token;
utilMDE.Intern:numIntArrays()I
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.Literal:accept(Ljtb.visitor.Visitor;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
utilMDE.ArraysMDE:indexOf([II)I
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.tools.jtb.Ast:typeMatch(Ljava.lang.String;Ljava.lang.String;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeSequence;)V
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.ProglangType:dimensions()I
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.inv.unary.UpperBoundCore:calc_range()J
jtb.syntaxtree.RelationalExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_125()Z
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
jtb.JavaParser:jj_3R_134()Z
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Debug:logDetail()Z
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
jtb.syntaxtree.Name:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_2_36(I)Z
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
jtb.syntaxtree.FormalParameters:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.Quant:lexLTE([I[I)Z
daikon.Quant:noDups([I)Z
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
jtb.JavaParser:jj_2_1(I)Z
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Literal;)V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
jtb.JavaParser:jj_3R_136()Z
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.Quant:pairwiseDivides([I[I)Z
daikon.ProglangType:isScalar()Z
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:ungenerify(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
utilMDE.WeakHasherMap.EntrySet:size()I
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
daikon.ValueTuple:isMissing(I)Z
utilMDE.Intern:internStrings([Ljava.lang.String;)V
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
jtb.syntaxtree.BlockStatement:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
jtb.JavaParser:jj_3_10()Z
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.tools.jtb.SimpleTreeDumper:printToken(Ljava.lang.String;)V
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_2_35(I)Z
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaCharStream:UpdateLineColumn(C)V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.LowerBound:enabled()Z
utilMDE.Intern:intern([J)[J
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.VarInfoName:toString()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PackageDeclaration;)V
jtb.syntaxtree.ConditionalExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.Quant:lexLT([I[I)Z
jtb.JavaParser:jj_3R_58()Z
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase; | ASSIGN | 12386 | = null
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpression;)V
daikon.tools.jtb.Ast:create(Ljava.lang.String;Ljava.lang.String;)Ljtb.syntaxtree.Node;
jtb.JavaParser:jj_3R_81()Z
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
jtb.JavaCharStream:ReadByte()C
daikon.inv.unary.LowerBoundCore:calc_modulus()J
jtb.JavaCharStream:FillBuff()V
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.inv.Invariant:prob_is_ge(DD)D
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
jtb.JavaParser:jj_3R_60()Z
jtb.JavaParser:jj_3_17()Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.Quant:subsetOf([D[F)Z
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AndExpression;)V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
jtb.syntaxtree.PrimaryExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:lexEqual([I[I)Z
daikon.test.TestAst:checkMatch(Ljava.lang.String;Ljtb.syntaxtree.MethodDeclaration;Ldaikon.tools.jtb.PptNameMatcher;)V
jtb.visitor.TreeFormatter:space()Ljtb.visitor.FormatCommand;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
utilMDE.LimitedSizeIntSet:add(I)V
jtb.JavaParser:jj_3_1()Z
jtb.syntaxtree.TypeArguments:TypeArguments(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeArgument;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
jtb.JavaParser:jj_3R_47()Z
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ReferenceType;)V
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaCharStream:getEndLine()I
daikon.Quant:gte(II)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
jtb.JavaParser:jj_3R_67()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AdditiveExpression;)V
daikon.diff.InvMap:InvMap()V
utilMDE.MathMDE:gcd_differences([I)I
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ImportDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3_18()Z
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.RelationalExpression;)V
daikon.diff.Node:Node(LutilMDE.Pair;)V
jtb.syntaxtree.NullLiteral:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.ModBitTracker:split(I)I
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptName:isCombinedExitPoint()Z
daikon.Quant:pairwiseSquare([I[I)Z
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ExclusiveOrExpression;)V
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.visitor.FormatCommand:getNumCommands()I
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.VarInfoName:name()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.RootNode:RootNode()V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
jtb.JavaParser:jj_3R_88()Z
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBody;)V
jtb.visitor.TreeFormatter:TreeFormatter()V
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
jtb.syntaxtree.Statement:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Modifiers;)V
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
jtb.syntaxtree.MethodDeclarator:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
jtb.JavaParser:jj_3R_87()Z
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:noDuplicates([I)Z
jtb.syntaxtree.NodeOptional:NodeOptional()V
jtb.JavaParser:jj_3R_133()Z
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;Z)Z
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_72()Z
jtb.JavaParser:FormalParameter()Ljtb.syntaxtree.FormalParameter;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.tools.jtb.Ast:getType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
jtb.syntaxtree.PrimaryPrefix:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
jtb.syntaxtree.ReferenceType:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeDeclaration;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
jtb.JavaParser:jj_3R_126()Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.JavaParser:jj_3R_68()Z
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaCharStream:BeginToken()C
daikon.Quant:eltwiseNotEqual([I)Z
jtb.JavaParser:jj_2_4(I)Z
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_101()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Statement;)V
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
utilMDE.ArraysMDE:element_range([I)I
utilMDE.FuzzyFloat:lt(DD)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameters;)V
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.PptSlice0:initInvariantsSeen()V
jtb.JavaParser:jj_3_15()Z
jtb.visitor.TreeFormatter:TreeFormatter(II)V
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.FuzzyFloat:gte(DD)Z
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_2_14(I)Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:eltwiseLT([I)Z
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:subarray([III)[I
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.VarInfo:relate_var()V
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameter;)V
jtb.JavaParser:jj_3_22()Z
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.ModBitTracker:ModBitTracker(I)V
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_120()Z
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.FuzzyFloat:indexOf([D[D)I
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NullLiteral;)V
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
jtb.JavaParser:jj_2_3(I)Z
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
jtb.JavaParser:jj_3R_97()Z
jtb.syntaxtree.NodeListOptional:present()Z
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
jtb.JavaParser:jj_3R_135()Z
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_75()Z
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments;
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:copy(Ljava.util.HashMap;)Ljava.util.HashMap;
jtb.JavaParser:jj_3_14()Z
jtb.syntaxtree.NodeList:NodeList()V
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_3()Z
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfo:new_ppt()V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;)V
utilMDE.MathMDE:gcd([I)I
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.Intern:intern([D)[D
jtb.JavaParser:jj_2_21(I)Z
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.Quant:subsetOf([D[D)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.CompilationUnit:CompilationUnit(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.PptName:isEnterPoint()Z
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReturnStatement;)V
jtb.JavaParser:jj_3R_52()Z
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.NodeChoice:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
utilMDE.FuzzyFloat:gt(DD)Z
jtb.syntaxtree.UnaryExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Ppt:Ppt()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalAndExpression;)V
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.ArraysMDE:sum([[D)D
utilMDE.Assert:assertTrue(Z)V
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
jtb.syntaxtree.TypeArgument:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.ModBitTracker:num_vars()I
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljtb.syntaxtree.Node;)Z
daikon.VarInfoName:hashCode()I
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljava.lang.String;Ljava.lang.String;Ljava.util.List;)Z
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.TypeParameters:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:fn_inverse([II)[I
jtb.syntaxtree.ResultType:accept(Ljtb.visitor.Visitor;)V
daikon.diff.Node:Node()V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArguments;)V
utilMDE.MathMDE:pow_fast(II)I
daikon.Quant:eltsLT([II)Z
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
jtb.JavaParser:jj_3_13()Z
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.FormalParameter;)V
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:getToken(I)Ljtb.Token;
daikon.Quant:subsetOf([F[F)Z
daikon.Quant:eltwiseLTE([I)Z
jtb.visitor.TreeFormatter:processList(Ljtb.syntaxtree.NodeListInterface;Ljtb.visitor.FormatCommand;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.Quant:memberOf(S[S)Z
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:getParent()Ljtb.syntaxtree.Node;
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.Quant:eltsLteIndex([I)Z
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.TreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
jtb.syntaxtree.MethodDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.JavaParser:jj_3R_63()Z
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.inv.Invariant:logDetail()Z
jtb.syntaxtree.Expression:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.Quant:lexNotEqual([I[I)Z
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InclusiveOrExpression;)V
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfo:name()Ljava.lang.String;
utilMDE.FuzzyFloat:ne(DD)Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.tools.jtb.Ast:getPackage(Ljtb.syntaxtree.CompilationUnit;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.tools.jtb.SimpleTreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.tools.jtb.Ast:print(Ljtb.syntaxtree.Node;)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
utilMDE.FuzzyFloat:lte(DD)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.ProglangType:isPseudoArray()Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:max([I)I
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.PptName:getFullClassName()Ljava.lang.String;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.Quant:subsetOf([J[J)Z
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
jtb.visitor.TreeDumper:TreeDumper(Ljava.io.Writer;)V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.Quant:eltwiseGTE([I)Z
jtb.visitor.TreeFormatter:processList(Ljtb.syntaxtree.NodeListInterface;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_119()Z
utilMDE.ArraysMDE:min_max([I)[I
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:jj_3_30()Z
jtb.JavaParser:jj_3_12()Z
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Block;)V
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:bufPrintln()V
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArgument;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
jtb.JavaParser:jj_3R_107()Z
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
jtb.visitor.TreeFormatter:placeToken(Ljtb.syntaxtree.NodeToken;II)V
utilMDE.Options.OptionInfo:argument_required()Z
daikon.inv.OutputFormat:isJavaFamily()Z
jtb.JavaParser:jj_2_10(I)Z
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.ProglangType:isArray()Z
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.test.TestAst.MethodDeclarationHarvester:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.Quant:pairwiseEqual([I[I)Z
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.NodeToken:trimSpecials()V
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
jtb.JavaParser:jj_3R_148()Z
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
jtb.JavaParser:jj_3R_103()Z
jtb.syntaxtree.UnaryExpressionNotPlusMinus:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.EqualityExpression:accept(Ljtb.visitor.Visitor;)V
daikon.ProglangType:baseIsScalar()Z
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
utilMDE.ArraysMDE:subarray([JII)[J
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3_19()Z
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.config.Configuration:apply(Ljava.lang.String;)V
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_2_5(I)Z
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:gcd(JJ)J
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.Quant:union([I[I)[I
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
jtb.syntaxtree.NodeSequence:elementAt(I)Ljtb.syntaxtree.Node;
jtb.JavaCharStream:backup(I)V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_100()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.tools.jtb.Ast:getName(Ljtb.syntaxtree.MethodDeclaration;)Ljava.lang.String;
jtb.JavaParser:jj_3R_89()Z
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_105()Z
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_70()Z
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
utilMDE.UtilMDE:split(Ljava.lang.String;Ljava.lang.String;)[Ljava.lang.String;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.ProglangType:baseIsIntegral()Z
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.inv.Invariant:isWorthPrinting()Z
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.ArraysMDE:concat([I[I)[I
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
utilMDE.UtilMDE:lineNumberFileReader(Ljava.io.File;)Ljava.io.LineNumberReader;
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:pairwiseGT([I[I)Z
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ResultType;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;II)V
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.FormalParameter:FormalParameter(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Type;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.VariableDeclaratorId;)V
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
jtb.syntaxtree.TypeDeclaration:TypeDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.Invariant:getConfidence()D
jtb.syntaxtree.ClassOrInterfaceDeclaration:ClassOrInterfaceDeclaration(Ljtb.syntaxtree.NodeChoice;Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ClassOrInterfaceBody;)V
daikon.tools.jtb.PptNameMatcher:PptNameMatcher(Ljtb.syntaxtree.Node;)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
jtb.syntaxtree.NodeListOptional:elements()Ljava.util.Enumeration;
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_56()Z
jtb.JavaParser:jj_3R_55()Z
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:sameLength([I[I)Z
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
jtb.JavaParser:jj_3R_149()Z
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReferenceType;)V
jtb.JavaParser:jj_3R_162()Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor.1:visit(Ljtb.syntaxtree.TypeParameter;)V
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.Type;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_53()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
jtb.syntaxtree.ExclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.MathMDE:negate(I)I
jtb.JavaParser:jj_3R_98()Z
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.visitor.TreeFormatter:space(I)Ljtb.visitor.FormatCommand;
utilMDE.ArraysMDE:sum([I)I
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.Quant:memberOf(F[D)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
jtb.JavaParser:jj_3R_169()Z
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
jtb.JavaParser:jj_3R_62()Z
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.PptName:getMethodName()Ljava.lang.String;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
jtb.JavaParser:jj_2_15(I)Z
daikon.diff.InvMap:toString()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Expression;)V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.MathMDE:bitwiseComplement(I)I
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.Quant:eq(DD)Z
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:pairwiseLT([I[I)Z
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
daikon.Quant:lte(II)Z
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.EqualityExpression;)V
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
jtb.syntaxtree.InstanceOfExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.CompilationUnit;)V
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_2_12(I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;)V
jtb.syntaxtree.FormalParameter:accept(Ljtb.visitor.Visitor;)V
daikon.inv.Invariant:logOn()Z
daikon.ValueTuple:tuplemodHasModified(I)Z
utilMDE.MathMDE:modulus([I)[I
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Type;)V
utilMDE.OrderedPairIterator:setnext2()V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.Quant:setEqual([I[I)Z
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.ValueTuple:isMissingNonsensical(I)Z
jtb.JavaParser:jj_scan_token(I)Z
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameters;)V
daikon.Quant:subsetOf([I[I)Z
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
utilMDE.ArraysMDE:min([I)I
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:justified()Z
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.Quant:pairwiseGTE([I[I)Z
jtb.syntaxtree.PackageDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
jtb.syntaxtree.Type:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_2_25(I)Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Name;)V
utilMDE.ArraysMDE:sum([D)D
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
jtb.syntaxtree.ClassOrInterfaceBody:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.PptMap:asCollection()Ljava.util.Collection;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ShiftExpression;)V
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:slice([III)[I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryPrefix;)V
utilMDE.ArraysMDE:fn_is_permutation([I)Z
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
jtb.JavaParser:jj_2_18(I)Z
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.Quant:memberOf(J[J)Z
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_102()Z
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_48()Z
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_76()Z
daikon.test.InvariantFormatTester:execute()Z
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
utilMDE.MathMDE:pow(II)I
jtb.syntaxtree.NodeListOptional:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;)V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
utilMDE.UtilMDE:removeWhitespaceAfter(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParserTokenManager:MoreLexicalActions()V
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.visitor.TreeDumper:printToken(Ljava.lang.String;)V
jtb.syntaxtree.AdditiveExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_110()Z
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.PptTopLevel:getInvariants()Ljava.util.List;
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.Invariants:Invariants()V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
daikon.Quant:eltsLTE([II)Z
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.Quant:eltsNotEqual([II)Z
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.syntaxtree.ClassOrInterfaceDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:concat([I[I)[I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.Debug:logOn()Z
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.Quant:memberOf(I[I)Z
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.OrderedPairIterator:setnext1()V
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.MathMDE:sign(I)I
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.Quant:isReverse([I[I)Z
jtb.JavaParser:jj_3R_122()Z
daikon.Quant:subsetOf([F[D)Z
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
jtb.JavaParser:jj_3R_118()Z
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.ArraysMDE:noDuplicates([D)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.Quant:lexGT([I[I)Z
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.TypeParameter:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:subsetOf([B[I)Z
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.PptSlice2:arity()I
daikon.tools.jtb.Ast:removeWhitespace(Ljava.lang.String;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameters;)V
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.NodeToken:numSpecials()I
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.tools.jtb.Ast:getClassName(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.Quant:eq(II)Z
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_106()Z
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_36()Z
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.tools.jtb.PptNameMatcher:getUngenerifiedType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Quant:pairwiseLTE([I[I)Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
jtb.JavaParser:jj_3R_164()Z
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.Quant:eltsEqualIndex([I)Z
jtb.JavaParser:jj_3R_80()Z
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.tools.jtb.Ast:create(Ljava.lang.String;[Ljava.lang.Class;[Ljava.lang.Object;Ljava.lang.String;)Ljtb.syntaxtree.Node;
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ClassOrInterfaceBody:ClassOrInterfaceBody(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:memberOf(D[F)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_27()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PostfixExpression;)V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
jtb.JavaParser:jj_3R_121()Z
daikon.ProglangType:isIntegral()Z
jtb.syntaxtree.Block:accept(Ljtb.visitor.Visitor;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.Quant:eltsGteIndex([I)Z
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
jtb.JavaParser:jj_3_16()Z
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.ClassOrInterfaceBody:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.inv.ValueSet:ValueSet(I)V
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
utilMDE.MathMDE:gcd(II)I
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
jtb.syntaxtree.VariableDeclaratorId:VariableDeclaratorId(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:ne(II)Z
jtb.syntaxtree.ConditionalOrExpression:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.tools.jtb.Ast:getParent(Ljava.lang.Class;Ljtb.syntaxtree.Node;)Ljtb.syntaxtree.Node;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
jtb.syntaxtree.CompilationUnit:getParent()Ljtb.syntaxtree.Node;
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.PptSlice1:num_samples()I
utilMDE.FuzzyFloat:indexOf([DD)I
jtb.JavaParser:jj_3R_161()Z
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.Quant:pairwiseNotEqual([I[I)Z
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.diff.Node:add(Ljava.lang.Object;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3_20()Z
jtb.JavaParser:jj_3R_124()Z
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:computeProbability()D
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
utilMDE.UtilMDE:removeWhitespaceBefore(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
jtb.JavaParser:jj_3R_57()Z
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.PptSlice1:arity()I
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.Quant:eltsEqual([II)Z
utilMDE.Intern:internSubsequence([JII)[J
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.PptSlice0:arity()I
jtb.JavaParser:jj_3R_116()Z
jtb.JavaParser:jj_3R_96()Z
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.visitor.TreeFormatter:add(Ljtb.visitor.FormatCommand;)V
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.PptTopLevel:name()Ljava.lang.String;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.Quant:eltsGTE([II)Z
utilMDE.ArraysMDE:fn_is_total([I)Z
utilMDE.FuzzyFloat:eq(DD)Z
daikon.tools.jtb.Ast:quickFixForInternalComment(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.UtilMDE:splitLines(Ljava.lang.String;)[Ljava.lang.String;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
752 2 866 2 359 2 173 2 220 4 462 2 705 2 216 2 647 2 
247 6 878 2 746 2 1065 6 656 2 1003 2 856 2 1198 6 1125 2 930 2 291 2 
88 6 705 2 346 6 1231 2 58 6 216 2 503 2 31 6 187 4 1184 2 1123 2 52 4 977 2 
410 6 992 10 1031 4 1282 10 801 12 701 16 1366 2 273 8 705 6 3 6 296 10 1037 2 216 6 805 16 99 2 1155 8 38 4 419 2 757 8 125 4 258 8 182 10 854 2 1141 29 617 4 535 16 887 2 82 26 1390 10 269 2 
826 6 121 4 
399 2 
992 2 619 2 87 2 231 2 1282 2 801 2 701 2 802 2 296 2 3 2 805 2 1155 2 1181 2 1325 2 365 2 125 2 182 2 1141 6 307 2 14 2 535 2 82 4 1390 4 
992 4 1282 4 182 4 801 5 701 8 1141 15 1161 4 296 4 805 8 861 2 38 2 535 8 1136 4 82 12 1363 6 1381 2 408 6 
1314 6 725 2 727 2 1201 2 1346 4 16 2 480 4 4 4 1322 10 19 4 1073 2 101 2 1156 4 1038 2 892 8 578 4 710 2 1137 2 441 62 740 2 256 2 257 2 1327 2 1353 2 694 4 548 10 809 4 487 4 1142 2 1062 2 672 2 1121 2 1006 4 243 14 1215 4 311 2 1009 2 513 2 594 4 471 4 
916 2 293 2 889 2 776 2 850 2 607 2 399 2 904 2 1216 2 1169 2 
1222 2 411 2 314 4 704 2 194 2 413 2 1013 2 355 2 1343 2 705 4 1089 2 752 2 892 2 419 2 120 2 12 2 809 4 1302 4 721 4 1101 2 513 2 594 2 556 2 1197 2 870 2 959 2 1071 2 216 4 49 2 387 2 481 2 737 2 1039 2 785 2 1382 2 1384 2 788 2 1119 2 611 2 973 2 837 2 494 2 1278 2 841 2 
992 16 410 4 1070 4 1282 16 701 32 801 22 774 8 705 4 296 16 3 4 1037 2 216 4 805 32 1155 18 1324 6 1235 2 1136 4 278 2 122 2 894 4 369 6 161 4 125 2 182 16 258 6 1141 54 1023 6 610 2 1161 4 375 6 1214 4 674 4 864 2 535 32 82 48 1363 6 989 2 1390 6 408 6 
1314 2 725 2 892 2 
318 2 574 2 1071 2 1385 22 762 10 779 2 635 2 603 2 811 2 391 2 1338 2 595 2 1048 2 691 2 
1011 2 935 2 500 2 937 2 1171 8 415 2 666 2 10 24 1020 1 72 2 238 2 1095 1 421 3 160 2 589 1 1189 2 670 2 855 16 761 12 424 2 1192 4 1194 6 953 1 510 2 511 2 1299 16 332 2 860 5 166 2 1102 2 954 2 768 2 512 16 429 2 1196 2 170 2 1311 2 514 1 599 2 867 2 86 3 1199 2 1319 2 439 2 1202 2 178 2 1112 2 780 2 1203 2 782 2 683 2 340 2 967 2 527 12 103 2 1041 4 1211 2 695 2 696 6 1332 3 613 2 262 2 614 1 886 2 885 16 536 1 1220 2 1340 2 618 2 979 2 620 2 455 1 196 2 1131 3 622 3 705 32 706 3 707 2 544 32 361 2 39 2 1351 1 628 2 1056 2 895 2 1355 2 712 1 41 2 1237 2 715 4 634 2 42 2 377 8 810 2 637 1 812 2 1360 2 43 3 210 2 46 2 1248 3 473 2 911 2 913 2 1364 2 993 2 477 2 994 1 1369 2 213 1 386 2 216 34 1151 2 1072 1 1370 4 647 2 1371 2 824 4 140 2 1257 2 1258 2 302 1 1261 3 650 24 1074 3 1262 6 1379 2 1377 2 1075 4 654 2 1160 4 929 2 829 8 1004 2 569 6 402 2 932 1 404 2 489 2 834 2 933 32 1269 4 1388 2 1271 2 491 2 838 3 839 2 573 3 843 1 
265 2 
440 2 216 2 
174 2 192 2 216 4 
313 20 664 2 0 4 1012 4 1 2 316 2 2 2 319 2 320 244 6 10 1017 64 1018 2 7 2 1019 4 11 46 13 290 329 6 667 6 1024 2 330 2 1025 2 333 4 1027 2 1028 2 1029 12 675 2 676 2 678 4 336 4 1035 6 1034 2 681 2 338 12 18 4 339 2 20 4 685 6 686 4 688 192 342 8 22 4 343 4 692 6 26 2 27 12 348 4 28 2 1043 112 697 6 1044 2 30 6 32 244 1047 2 699 4 349 2 350 6 352 2 702 2 1050 6 34 6 1052 6 705 10 1053 24 1054 4 357 82 358 2 1055 182 35 2 37 2 708 26 362 2 363 18 709 2 366 2 711 2 1058 6 1057 20 1059 22 714 2 371 6 716 2 373 12 717 2 374 4 718 8 719 14 1064 24 722 6 381 30 1066 2 1067 12 48 2 726 26 730 60 731 4 732 2 733 4 736 8 53 204 739 2 392 2 393 2 55 92 1077 2 57 14 398 2 401 6 400 376 403 20 405 2 1083 566 744 48 61 4 745 2 1085 2 747 2 1086 4 748 2 414 2 62 8 749 20 1090 84 417 4 754 6 69 4 68 2 418 6 70 2 1094 4 73 4 74 2 75 6 1096 28 759 6 76 6 426 4 763 2 1097 328 1098 2 79 6 1100 12 770 4 84 198 431 6 432 26 1106 2 433 2 1107 2 435 432 772 30 773 6 437 112 90 2 438 2 92 198 94 4 778 2 95 2 98 4 97 2 1110 6 783 106 100 2 442 2 1116 2 102 74 443 2 1118 6 106 2 107 2 1120 66 108 6 109 2 1122 2 792 2 449 2 795 2 450 6 111 112 110 10 799 2 453 6 112 22 454 2 1129 2 800 20 114 4 1130 2 1132 4 458 2 1134 30 459 4 804 8 118 4 463 4 1138 328 123 4 124 4 808 30 126 2 1140 6 464 12 465 16 128 6 466 2 129 182 469 2 130 6 131 4 470 2 133 4 814 32 813 2 1146 2 472 4 816 2 475 4 135 6 474 2 818 6 1148 8 820 2 138 2 478 198 139 4 1149 6 1150 88 1152 48 1153 6 1154 2 482 28 484 2 1159 2 145 94 827 2 485 6 828 4 147 28 488 2 1164 2 149 2 150 2 492 6 495 4 1166 2 496 4 151 2 497 2 840 26 1172 2 501 2 847 2 1173 2 153 8 849 20 154 2 155 30 156 2 1180 70 1182 46 1183 4 505 6 158 2 1186 2 507 6 852 8 1188 52 163 6 1193 2 508 2 164 6 857 2 167 2 515 2 171 64 172 4 865 10 175 4 869 28 176 6 874 20 523 6 524 2 177 46 875 10 525 4 180 2 877 2 879 2 880 6 1206 30 529 46 532 2 183 244 184 8 884 6 186 4 1217 2 1218 30 538 6 189 14 1225 198 1223 2 190 2 539 4 193 6 195 22 543 10 542 6 199 2 1232 22 201 12 890 2 203 30 891 2 204 60 547 8 205 2 206 2 207 132 896 2 897 2 898 2 1238 8 549 4 208 386 552 2 1240 4 1239 14 1243 98 906 2 905 2 553 2 1246 4 907 8 908 228 910 2 1249 2 914 2 915 2 1252 2 557 106 212 26 558 4 1254 2 921 2 560 2 561 2 923 2 216 10 215 4 562 6 563 2 1260 8 564 2 565 2 566 6 567 8 1264 2 221 198 568 54 931 10 223 4 570 2 224 12 225 2 226 2 1273 2 1277 2 571 6 229 2 572 4 230 26 1281 2 937 2 232 112 1284 26 1285 160 1286 2 233 6 576 192 235 224 236 2 579 2 944 2 581 26 582 2 239 4 1292 198 585 198 1294 2 587 2 590 2 591 6 1295 6 592 16 949 2 240 432 1298 30 593 2 241 6 242 118 1300 6 244 2 1305 4 955 6 1308 132 596 8 956 26 1310 2 958 2 600 14 601 4 250 8 251 4 1316 6 961 6 962 2 1317 18 963 2 252 6 966 2 965 2 254 2 605 46 255 4 1326 2 1328 6 969 140 609 2 1330 6 970 2 1331 204 260 2 1333 4 975 4 1335 4 263 2 266 2 976 4 1339 4 267 2 268 4 978 2 271 60 272 12 274 2 623 12 624 16 275 2 276 68 625 2 279 2 1349 2 1350 2 280 2 1354 16 630 30 282 4 1356 4 633 18 284 86 1357 28 988 14 286 2 287 2 1359 2 636 2 288 6 640 6 990 50 991 4 643 2 292 2 294 2 1368 6 645 26 298 4 646 336 996 6 1372 30 1373 26 648 4 301 2 651 2 1378 4 1000 4 306 198 310 6 657 12 1005 4 660 4 1386 8 1007 6 661 60 1389 8 1010 14 1391 2 662 20 
1342 2 980 2 1247 2 831 1 
1247 2 1268 2 
862 2 148 2 617 2 892 2 1191 2 1247 2 383 2 
1191 2 1080 2 1247 2 
1087 2 1191 2 1247 2 
1329 2 1205 2 980 2 
1191 2 1247 2 
1329 2 1365 2 
1247 2 1176 2 
1329 2 863 2 980 2 
980 2 479 2 1042 2 
270 2 1270 2 980 2 
980 2 1045 2 952 2 
305 2 980 2 1093 2 
1329 2 300 2 
586 2 1247 2 
608 2 479 2 
270 2 735 2 
119 2 1045 2 
305 2 803 2 
1329 2 1276 2 
305 2 1303 2 
1045 2 297 2 
270 2 742 2 
264 2 479 2 
1329 2 863 2 980 2 457 2 
1329 2 863 2 980 2 457 2 756 2 
360 2 1329 2 980 2 
517 2 1329 2 980 2 
315 2 960 2 198 2 575 2 
1187 2 892 2 383 2 945 2 
1187 2 862 2 892 2 902 2 383 2 945 2 
617 2 892 2 8 2 1191 2 1247 2 383 2 
345 2 556 2 
617 2 1117 2 892 2 383 2 
283 2 1045 2 
1383 2 305 2 
728 2 479 2 
270 2 1167 2 
270 2 305 2 425 2 
270 2 305 2 344 2 
270 2 1228 2 305 2 
159 2 270 2 305 2 
351 6 917 2 871 2 892 2 606 2 383 2 452 6 842 2 
1329 2 200 2 
1040 4 679 2 116 2 1287 2 1385 6 447 2 96 2 1016 2 734 2 209 2 1234 2 1207 2 71 2 797 4 738 2 1126 2 395 2 583 2 
755 2 980 2 
1364 2 
1011 2 500 2 937 2 1171 2 845 2 666 2 851 2 72 2 584 2 238 2 160 2 1189 2 670 2 761 8 1192 2 1194 4 953 2 1299 6 332 2 166 2 954 2 429 2 1311 2 599 2 1315 4 1200 2 1319 2 439 2 1202 2 1203 2 967 2 527 8 528 2 1041 2 696 6 615 2 886 2 1220 2 1340 2 618 2 620 2 354 2 196 2 455 4 705 26 1233 2 544 4 707 2 361 6 628 2 712 2 41 2 715 4 1245 2 1361 2 1145 2 473 2 913 4 918 2 922 4 216 26 1370 4 647 2 1371 2 1258 2 1262 2 143 2 1075 2 999 2 1160 4 569 2 402 2 933 6 1269 4 934 2 1280 2 
1011 2 500 2 937 2 1171 2 415 2 666 2 851 2 72 2 584 2 238 2 160 2 1189 2 670 2 761 8 1192 2 1194 6 953 2 1299 6 332 2 166 2 954 2 429 2 1311 2 599 2 1315 4 1033 2 1200 2 1319 2 439 2 1202 2 1203 2 967 2 527 8 528 2 1041 2 445 2 696 6 262 2 886 2 1220 2 1340 2 618 2 620 2 354 2 196 2 455 2 705 26 1233 2 544 4 707 2 361 6 628 2 712 2 41 2 715 4 42 2 1245 2 1361 2 1145 2 473 2 913 4 295 2 922 4 216 26 1370 4 647 2 1371 2 1258 2 1262 2 143 2 1075 2 999 2 1160 4 569 2 402 2 933 6 1269 4 934 2 1280 2 
832 2 
378 2 946 2 
618 2 1226 2 1341 2 937 2 746 2 353 4 981 4 1345 4 705 6 848 2 750 8 461 2 1015 2 506 4 420 2 628 2 1291 2 41 2 281 2 1022 2 1297 2 859 2 1065 6 1306 2 429 2 45 2 81 2 641 2 639 2 723 4 291 4 516 2 247 6 872 2 1109 2 1198 6 682 2 93 2 1036 2 216 12 1111 2 1371 2 526 2 926 2 304 2 1158 2 1380 10 1001 2 397 2 1160 2 1003 4 530 4 656 2 486 2 531 2 696 4 402 2 448 8 1213 2 1269 2 
618 2 1226 2 1341 2 937 2 846 2 746 2 353 4 981 4 1345 4 705 6 848 2 750 8 461 2 1015 2 9 4 506 4 420 2 628 2 1291 2 41 2 281 2 1022 2 1297 2 859 2 1065 8 1306 2 429 2 45 2 81 2 641 2 639 2 723 4 291 4 247 8 872 2 1109 2 1198 6 93 2 1036 2 216 12 1371 2 1111 2 878 2 926 2 526 2 304 2 1158 2 1380 10 1001 2 1160 2 397 2 530 4 1003 4 656 2 486 2 531 2 696 4 347 2 402 2 448 8 1213 2 1269 2 
1341 2 353 2 530 4 1003 2 1022 2 486 2 1109 2 872 2 531 2 1297 2 1198 2 848 2 1065 2 1306 2 526 2 420 2 723 4 291 2 
618 2 1226 2 1341 2 937 2 746 2 353 4 981 4 1345 4 705 6 848 2 750 4 461 2 1015 2 506 4 420 2 628 2 1291 2 41 2 281 2 1022 2 1297 2 859 2 1065 6 1306 2 429 2 45 2 81 2 641 2 639 2 723 4 291 4 516 2 247 6 872 2 1109 2 1198 4 682 2 93 2 1036 2 216 12 1111 2 1371 2 878 2 526 2 926 2 304 2 1158 2 1380 6 1001 2 397 2 1160 2 1003 4 530 4 486 2 531 2 696 4 402 2 448 4 1213 2 1269 2 
618 2 1226 2 1341 2 937 2 746 2 353 4 981 4 1345 4 705 6 848 2 750 4 461 2 1015 2 506 4 420 2 628 2 1291 2 41 2 281 2 1022 2 1297 2 859 2 1065 4 1306 2 429 2 45 2 81 2 641 2 639 2 723 4 291 4 516 2 247 6 872 2 1109 2 1198 6 682 2 93 2 1036 2 216 12 1111 2 1371 2 526 2 926 2 304 2 1158 2 1380 6 1001 2 397 2 1160 2 1003 4 530 4 486 2 531 2 696 4 402 2 448 4 1213 2 1269 2 1125 2 
618 2 1226 2 1341 2 937 2 746 2 353 4 981 4 1345 4 705 6 848 2 750 4 461 2 1015 2 506 4 420 2 628 2 1291 2 41 2 281 2 1022 2 1297 2 859 2 1065 6 1306 2 429 2 45 2 81 2 641 2 639 2 723 4 291 4 516 2 247 6 872 2 1109 2 1198 6 682 2 93 2 1036 2 216 12 1111 2 1371 2 526 2 926 2 304 2 1158 2 1380 6 1001 2 397 2 1160 2 1003 4 530 4 656 2 486 2 531 2 696 4 402 2 448 8 1213 2 1269 2 
618 2 1226 2 1341 2 937 2 746 2 353 4 981 4 1345 4 705 6 848 2 750 8 461 2 1015 2 506 4 420 2 628 2 1291 2 41 2 281 2 1022 2 1297 2 859 2 1065 6 1306 2 429 2 45 2 81 2 641 2 639 2 723 4 291 4 516 2 247 8 872 2 1109 2 1198 8 682 2 93 2 1036 2 216 12 1111 2 1371 2 526 2 926 2 304 2 1158 2 1380 10 1001 2 1160 2 397 2 1003 4 530 4 656 2 486 2 531 2 696 4 402 2 448 8 1213 2 1269 2 1125 2 
618 2 1226 2 1341 2 937 2 746 2 353 4 981 4 1345 4 705 6 848 2 750 8 461 2 1015 2 506 4 420 2 628 2 1291 2 41 2 281 2 1022 2 1297 2 859 2 1065 6 1306 2 429 2 45 2 81 2 641 2 639 2 723 4 291 4 516 2 247 6 872 2 1109 2 1198 6 682 2 93 2 1036 2 216 12 1111 2 1371 2 526 2 926 2 304 2 1158 2 1380 10 1001 2 397 2 1160 2 1003 4 530 4 656 2 486 2 531 2 696 4 402 2 448 8 1213 2 1269 2 
500 2 1171 2 848 2 1015 2 1178 2 322 4 504 2 666 2 323 2 157 2 506 8 1021 2 160 2 1189 12 1022 2 1192 2 1194 6 332 2 859 2 166 2 168 7 169 7 335 2 677 2 872 2 1198 8 1200 2 682 2 1036 2 179 6 526 2 684 1 527 4 689 6 1041 2 530 4 693 2 531 2 696 6 533 1 185 1 1213 2 1220 2 1226 2 192 6 353 4 196 2 1229 1 1051 1 705 24 202 6 544 2 361 6 41 2 715 4 1060 10 42 2 380 2 554 2 1065 4 45 4 723 4 214 1 729 2 922 4 216 46 926 2 1258 2 1262 2 1075 2 218 6 56 2 1263 1 397 2 569 2 402 2 933 8 1269 4 409 2 1280 2 1084 2 937 2 746 4 938 2 415 2 753 2 1091 4 942 2 420 2 72 2 1291 2 1293 2 761 4 1297 2 764 2 1299 6 1099 2 954 2 1306 2 429 2 81 2 597 6 1311 2 957 6 246 2 247 12 771 2 1312 2 1108 2 436 6 1109 2 93 2 1319 2 1111 2 440 6 964 6 789 2 446 1 448 2 1334 2 265 6 1337 6 1125 4 1124 6 1127 2 618 2 1340 2 620 2 1341 2 981 4 1345 6 1133 2 461 2 626 2 628 2 1352 6 1139 2 281 4 1361 4 289 1 639 2 641 2 290 6 291 4 473 2 1370 4 647 2 1371 2 825 2 304 2 303 6 1158 2 1380 2 999 2 1160 4 1001 2 1003 4 486 2 1170 2 152 8 
1084 2 500 2 937 2 1171 2 746 4 938 2 415 2 848 2 1015 2 1178 2 753 2 322 4 1091 4 504 2 323 2 666 2 942 2 157 2 506 8 420 2 1291 2 1021 2 72 2 1293 2 160 2 1022 2 1189 12 761 8 1297 2 1192 4 1194 6 764 2 1299 6 1099 2 332 2 859 2 166 2 1306 2 954 2 429 2 81 2 597 6 1311 2 957 6 246 2 335 2 1312 2 771 2 247 12 248 2 436 6 1108 2 677 2 1109 2 872 2 1198 8 1200 2 682 2 1319 2 1036 2 93 2 440 6 179 6 1111 2 964 6 526 2 527 8 689 6 1041 4 693 2 530 4 531 2 25 2 789 2 696 6 1213 2 448 6 1334 2 265 6 1337 6 1124 6 1220 2 1127 2 1340 2 618 2 1226 2 1341 2 620 2 192 6 353 4 981 4 196 2 1345 6 1133 2 705 26 461 2 202 6 544 2 361 6 626 2 1352 6 628 2 1139 2 41 2 281 4 715 4 1060 10 42 2 380 2 554 2 1065 8 1361 4 45 4 641 2 639 2 290 6 723 4 473 2 291 4 913 2 729 2 922 4 216 48 647 2 1370 4 1371 2 926 2 825 2 1258 2 303 6 304 2 1262 2 1158 2 1380 2 1075 4 56 2 218 6 999 2 1001 2 397 2 1160 4 656 4 1003 4 486 2 569 2 402 2 933 8 1269 4 1170 2 1280 2 409 2 152 8 
1084 2 500 2 937 2 1171 2 746 4 938 2 415 2 848 2 750 4 1015 2 1178 2 753 2 322 4 1091 4 504 2 323 2 666 2 942 2 157 2 506 8 420 2 1291 2 1021 2 72 2 1293 2 160 2 1022 2 1189 12 761 8 1297 2 1192 4 1194 6 764 2 1299 6 1099 2 332 2 859 2 166 2 1306 2 954 2 429 2 81 2 597 6 1311 2 957 6 246 2 335 2 1312 2 771 2 247 12 248 2 436 6 1108 2 677 2 1109 2 872 2 1198 8 1200 2 682 2 1319 2 1036 2 93 2 440 6 179 6 1111 2 964 6 526 2 527 8 689 6 1041 4 693 2 530 4 531 2 25 2 789 2 696 6 1213 2 448 6 1334 2 265 6 1337 6 1124 6 1220 2 1127 2 1340 2 618 2 1226 2 1341 2 620 2 192 6 353 4 981 4 196 2 1345 6 1133 2 705 26 461 2 202 6 544 2 361 6 626 2 1352 6 628 2 1139 2 41 2 281 4 715 4 1060 10 42 2 380 2 554 2 1065 8 1361 4 45 4 641 2 639 2 290 6 723 4 473 2 291 4 913 2 729 2 922 4 216 48 647 2 1370 4 1371 2 926 2 825 2 1258 2 303 6 304 2 1262 2 1158 2 1380 6 1075 4 56 2 218 6 999 2 1001 2 397 2 1160 4 656 4 1003 4 486 2 569 2 402 2 933 8 1269 4 1170 2 1280 2 409 2 152 8 
500 2 1171 4 848 2 1177 2 1015 2 1178 2 322 4 504 2 666 2 323 2 157 2 506 8 327 6 328 6 1021 2 160 2 1189 10 1022 2 1192 4 1194 6 332 2 165 6 859 2 166 2 335 2 520 6 677 2 872 2 1198 10 1200 2 682 2 1036 2 179 6 878 2 526 2 527 10 689 6 1041 4 530 4 693 2 531 2 883 2 25 2 696 6 1213 2 1220 2 1226 2 192 12 353 4 196 2 705 24 197 6 202 6 544 4 361 8 41 2 715 4 1060 8 42 2 380 2 379 2 554 2 1065 10 45 4 723 4 913 2 729 2 922 6 216 52 388 2 926 2 1258 2 1262 4 1075 4 218 6 56 2 397 2 1266 2 569 4 402 2 933 12 1269 4 409 2 1280 4 1084 2 937 2 746 4 938 2 415 2 750 4 753 2 1091 4 942 2 420 2 72 2 1291 2 1293 2 761 10 1297 2 764 2 766 2 1299 8 1099 2 954 2 1306 2 429 2 81 2 597 6 1311 2 957 6 246 2 247 16 771 2 1312 2 248 2 436 6 1109 2 93 2 1319 2 1111 2 440 12 964 6 789 2 448 6 1334 2 616 2 265 12 1337 12 1125 2 1124 12 1127 2 618 2 1340 2 620 2 1341 2 981 4 1345 6 1133 2 460 2 461 2 626 2 628 2 1352 6 1139 2 281 4 1361 4 641 2 639 2 290 12 291 4 473 2 644 6 1370 4 647 2 1371 2 825 2 304 2 303 6 1158 2 1380 6 999 2 653 6 1160 4 1001 2 1003 4 656 4 486 2 658 6 1163 6 1170 2 152 8 
247 4 1226 2 746 2 981 2 1109 2 872 2 1345 2 1198 6 682 2 848 2 1036 2 750 4 93 2 216 4 1015 2 926 2 526 2 506 2 304 2 420 2 1158 2 1380 4 397 2 656 2 530 2 1003 4 486 2 531 2 1213 2 448 6 1065 6 81 2 639 2 723 2 291 4 
500 2 665 2 937 2 746 2 415 2 848 2 1015 2 666 2 506 2 420 2 72 2 160 2 1189 4 1194 6 510 2 1299 6 332 2 166 2 954 2 429 2 81 2 1104 2 1311 2 247 4 1108 2 872 2 1109 2 1198 6 1200 2 682 2 1036 2 1319 2 93 2 1111 2 526 2 882 3 530 2 531 2 696 6 448 6 1213 2 618 2 1340 2 798 2 1226 2 979 2 620 2 981 2 196 2 1345 2 705 24 544 3 361 6 628 2 41 2 715 4 1060 2 42 2 1065 6 1361 2 639 2 723 2 291 4 473 2 1364 2 1253 2 922 4 216 28 1370 4 647 2 1371 2 926 2 1258 2 304 2 1157 2 1262 3 1158 2 1380 2 999 2 397 2 1160 4 656 2 1003 4 486 2 569 3 402 2 404 2 933 8 1269 4 
1226 2 1036 2 47 2 
1226 2 1036 2 47 2 
500 2 937 2 746 4 415 2 64 2 940 2 750 4 1178 2 322 2 1091 2 666 2 506 4 1291 2 758 4 72 2 422 2 160 2 1189 4 761 4 1297 2 1192 4 1194 6 1299 2 332 2 166 2 1304 2 954 2 429 2 1103 2 1311 2 247 16 1030 2 872 2 1198 12 1200 2 1036 6 1319 2 964 2 878 4 526 2 1114 2 527 4 968 2 1041 4 530 2 696 6 448 6 1125 4 1220 4 698 2 1340 2 618 2 1226 4 1341 2 620 2 353 4 455 2 354 4 196 2 981 2 1345 4 1133 2 705 16 544 2 361 2 546 2 40 2 985 4 628 2 41 2 281 4 715 4 1060 2 42 2 1358 2 554 2 1065 12 1361 6 45 2 641 2 639 2 723 2 47 2 291 4 216 24 1370 4 647 2 1371 2 997 2 1258 2 1380 6 1075 4 999 2 1001 2 1160 4 397 2 1003 4 656 4 486 4 659 2 833 2 402 2 933 2 1269 4 836 2 1008 2 
422 2 1189 2 677 2 1060 2 789 2 705 2 1212 2 1321 2 216 4 378 2 253 2 1371 2 1091 2 964 2 1304 2 1306 2 40 2 
500 2 937 2 746 4 415 2 64 2 940 2 750 4 1178 2 322 2 666 2 506 4 580 2 1291 2 758 4 72 2 422 2 160 2 1189 2 761 4 1297 2 1192 4 1194 6 1299 2 332 2 166 2 1304 2 954 2 429 2 1103 4 83 2 1311 2 247 16 1030 2 872 2 1198 12 1200 2 1036 6 1319 2 964 2 878 4 526 2 1114 2 527 4 968 2 1041 4 530 2 696 6 448 6 793 2 1125 4 1220 4 698 2 1340 2 618 2 1226 4 1341 2 620 2 353 4 354 4 981 2 196 2 1345 4 1133 2 705 16 461 2 544 4 361 2 546 2 40 2 985 4 628 2 41 2 281 4 715 4 42 2 554 2 1065 12 1144 2 1361 6 45 4 641 2 639 2 723 2 47 2 291 4 384 2 216 24 1370 4 647 2 1371 2 997 2 1258 2 1380 6 1075 4 999 2 1001 2 1160 4 397 2 1003 4 656 4 486 4 402 2 933 2 1269 4 836 2 
500 2 937 2 746 4 415 2 64 2 940 2 750 4 1178 2 322 2 1091 2 666 2 67 2 506 4 1291 2 758 4 72 2 422 2 160 2 1189 4 761 4 1297 2 1192 4 1194 6 1299 2 332 2 166 2 1304 2 954 2 429 2 1103 2 1311 2 247 16 1030 2 872 2 1198 12 1200 2 1036 6 1319 2 964 2 878 4 526 2 1114 2 527 4 968 2 1041 4 530 2 696 6 448 6 1125 4 1220 4 698 2 1340 2 618 2 1226 4 1341 2 620 2 353 4 455 1 354 4 196 2 981 2 1345 4 1133 2 705 16 461 2 544 2 361 2 546 2 40 2 985 4 628 2 807 2 41 2 281 4 715 4 1060 2 42 2 554 2 1065 12 1361 6 45 4 641 2 639 2 723 2 47 2 291 4 216 24 1370 4 647 2 1371 2 997 2 1258 2 1380 6 1075 4 999 2 219 2 1001 2 1160 4 397 2 1003 4 656 4 486 4 222 2 402 2 933 2 1387 2 1269 4 836 2 
1340 2 618 2 499 2 500 2 888 2 620 2 937 2 196 2 705 18 415 2 1014 2 502 2 1135 2 544 2 666 2 361 6 984 2 628 2 1021 2 72 2 41 2 1293 2 160 2 1189 2 715 4 1194 6 42 2 764 2 428 2 1299 6 380 2 332 2 166 2 954 2 767 2 1361 2 429 2 598 2 1311 2 85 4 473 2 771 2 1147 2 136 2 137 2 1200 2 922 4 1319 2 216 24 647 2 1370 4 1371 2 1113 2 1374 2 1258 2 1262 2 21 2 1160 4 308 2 696 6 569 2 402 2 933 8 1269 4 1279 2 451 2 409 2 
1227 4 317 2 705 2 337 1 922 2 216 2 36 2 5 2 544 3 361 2 1262 3 326 2 1290 3 787 2 569 3 903 2 1241 2 1299 2 933 2 1026 2 1143 2 663 2 1393 2 473 2 1280 6 
1227 4 787 2 317 2 705 2 569 2 1241 2 903 2 922 2 216 2 1299 2 5 2 36 2 933 2 544 2 1143 2 361 2 1026 2 326 2 1262 2 1393 2 663 2 1280 6 473 2 1290 2 
1227 4 787 2 317 2 705 2 569 2 1241 2 903 2 922 2 216 2 1299 2 5 2 36 2 933 2 544 2 1143 2 361 2 1026 2 326 2 1262 2 1393 2 663 2 1280 6 473 2 1290 2 
498 2 992 2 410 2 1224 2 1282 2 1032 2 703 4 701 2 317 2 775 4 705 4 296 2 777 2 822 2 216 10 751 2 805 2 544 3 781 2 1289 4 649 4 325 4 144 3 998 2 182 2 258 4 1141 5 855 2 830 6 951 2 569 3 933 2 555 3 885 2 1165 2 535 2 82 4 1219 3 1195 2 473 2 
498 2 992 2 410 2 1224 2 1282 2 1032 2 703 4 801 2 701 2 317 2 775 4 705 4 296 2 777 2 1037 2 822 2 216 10 751 2 805 2 544 2 781 2 1155 2 1289 4 649 4 325 4 144 2 998 2 182 2 258 4 1141 4 855 2 830 6 951 2 569 2 933 2 555 2 885 2 1165 2 535 2 82 4 1219 2 1195 2 473 2 
498 2 992 2 410 2 1224 2 1282 2 1032 2 703 4 801 2 701 2 317 2 775 4 705 4 296 2 777 2 1037 2 822 2 216 10 751 2 805 2 544 2 781 2 1155 2 1289 4 649 4 325 4 144 2 998 2 182 2 258 4 1141 4 855 2 830 6 951 2 569 2 933 2 555 2 885 2 1165 2 535 2 82 4 1219 2 1195 2 473 2 
498 2 992 2 410 2 1224 2 1282 2 1032 2 703 4 801 2 701 2 317 2 775 4 705 4 296 2 777 2 1037 2 822 2 216 10 751 2 805 2 544 2 781 2 1155 2 1289 4 649 4 325 4 144 2 998 2 182 2 258 4 1141 4 855 2 830 6 951 2 569 2 933 2 555 2 885 2 1165 2 535 2 82 4 1219 2 1195 2 473 2 
498 2 992 2 410 2 1224 2 1282 2 1032 2 703 4 801 4 701 2 317 2 775 4 705 4 296 2 777 2 1037 4 822 2 216 10 751 2 805 2 544 2 781 2 1155 4 1289 4 649 4 325 4 144 2 998 2 182 2 258 4 1141 4 855 2 830 6 951 2 569 2 933 2 555 2 885 2 1165 2 535 2 82 4 1219 2 1195 2 473 2 
534 2 899 2 127 2 1362 2 237 2 680 2 
876 2 1301 2 1265 2 456 2 851 2 680 2 217 2 
89 2 113 2 727 1 1256 2 705 8 63 2 941 1 216 10 390 2 1323 2 141 2 1137 1 628 2 947 1 367 2 713 2 259 2 444 2 550 2 1061 1 1082 2 509 2 406 2 132 2 290 2 700 2 
992 6 410 2 1282 6 701 6 801 4 774 2 355 2 705 6 296 6 983 2 216 6 1037 2 387 2 805 6 1155 3 142 2 1236 2 1115 2 368 2 182 6 258 4 1141 15 1161 2 375 4 1214 2 864 1 535 6 493 2 82 12 228 2 408 4 
703 2 668 2 104 6 775 2 705 1 91 2 1288 2 1162 2 117 2 216 1 261 4 483 1 51 2 325 2 1185 2 690 2 394 2 1105 2 
703 2 668 2 104 6 775 2 91 2 1288 2 1162 2 117 2 261 4 51 2 325 2 1185 4 690 4 394 4 1105 2 
703 2 668 2 104 10 775 2 705 1 91 6 1288 2 1162 2 117 2 216 1 261 4 483 1 51 8 325 2 1185 8 690 8 394 8 1105 2 
703 2 668 2 104 2 775 2 1288 2 1162 2 117 2 261 2 325 2 1185 2 690 2 394 2 1105 2 
312 4 936 22 412 6 1088 16 1174 2 939 16 415 58 416 10 321 6 324 24 66 34 423 2 162 4 1296 2 669 4 760 4 950 8 1194 248 77 6 78 4 331 6 332 14 80 8 1307 50 769 8 15 4 1309 2 430 124 1311 8 334 24 1313 2 434 4 518 2 868 2 519 6 873 24 522 8 1318 10 1204 10 181 24 687 18 784 6 527 28 881 6 786 6 23 2 1208 4 1210 24 790 6 972 26 612 10 974 4 794 4 537 1 796 8 188 26 1046 2 33 90 1049 4 1340 14 1128 36 455 4 541 6 1230 6 982 90 705 134 1347 6 356 2 364 16 893 4 627 11 629 6 631 2 632 6 715 112 900 12 901 10 372 2 285 6 551 6 42 58 376 2 1063 6 467 2 1244 6 44 2 134 4 382 84 815 2 1250 4 211 16 1251 2 476 6 642 4 817 6 724 17 819 24 385 8 920 4 821 10 1255 92 823 10 216 150 1370 88 925 4 1375 8 1259 4 927 2 54 10 652 2 928 6 1076 6 396 4 655 6 741 18 1079 8 309 4 146 42 1267 4 743 4 59 42 490 12 1272 2 1274 4 407 8 227 4 60 4 844 8 
1340 2 1128 2 412 2 191 2 1283 2 455 2 1088 4 1174 2 939 4 1175 2 415 2 705 44 416 2 65 2 577 2 234 4 806 4 277 2 943 2 545 2 364 4 1092 2 986 2 370 2 423 2 631 2 987 4 853 2 632 2 588 2 1296 2 715 20 669 2 901 2 1242 2 42 2 1194 44 427 2 468 2 331 2 720 2 332 2 245 2 638 2 769 2 909 2 430 6 815 2 1311 2 1068 2 1069 2 249 2 817 2 724 2 519 4 873 2 919 2 521 4 602 2 821 2 1367 2 995 2 1318 2 1320 2 823 2 216 46 1370 20 924 2 604 2 1204 2 1375 2 181 2 687 2 527 38 54 2 1076 2 786 2 1209 2 1210 2 24 2 105 6 971 2 1079 6 612 2 791 2 974 2 29 2 1272 2 796 2 1275 2 407 2 1392 2 
312 4 412 4 1088 10 1174 2 939 10 415 30 416 4 321 4 1179 16 577 10 324 8 66 30 943 2 423 2 162 4 588 10 1296 2 1190 8 950 4 1194 104 673 2 77 4 78 4 858 4 331 4 332 6 1307 8 769 2 430 24 1311 2 519 2 522 4 1318 4 17 32 1204 4 341 8 687 10 784 4 527 14 881 4 786 4 1208 4 790 4 612 4 29 10 1336 4 794 2 796 2 1340 6 1221 8 1128 6 621 4 540 4 1344 4 541 4 1230 4 705 70 1347 4 1348 2 364 10 986 2 632 4 715 44 372 2 285 4 551 4 42 28 1063 4 1244 4 134 4 382 24 909 2 815 2 1250 4 211 8 1251 2 642 4 817 4 724 10 1255 24 216 78 1370 36 389 2 299 4 925 4 1376 4 927 2 54 6 652 2 928 4 1076 4 655 4 396 4 1002 2 1078 16 1079 6 309 4 1081 2 146 16 743 4 835 2 59 8 490 14 1272 2 1274 4 407 2 1168 8 
1340 2 1128 2 936 10 412 4 455 2 1088 6 939 6 1174 2 415 12 705 26 416 2 66 6 364 6 627 2 423 2 631 2 632 4 1296 2 715 14 760 2 42 12 1194 40 376 2 467 2 78 2 331 4 332 2 44 2 134 2 769 2 15 2 909 2 430 8 815 2 1311 2 211 6 1313 2 817 4 724 2 519 2 522 4 1318 2 216 28 1370 14 1204 2 687 2 527 14 54 2 1076 4 786 4 1079 4 612 2 791 2 1272 2 794 2 796 2 1046 2 407 2 844 2 
912 2 
948 1 50 1 559 1 115 1 671 1 765 1 
948 1 50 1 559 1 115 1 671 1 765 1 
948 1 50 1 559 1 115 1 671 1 765 1 
948 1 50 1 559 1 115 1 671 1 765 1 
948 1 50 1 559 1 115 1 671 1 765 1 
948 1 50 1 559 1 115 1 671 1 765 1 
948 1 50 1 559 1 115 1 671 1 765 1 
948 1 50 1 559 1 115 1 671 1 765 1 
948 1 50 1 559 1 115 1 671 1 765 1 
948 1 50 1 559 1 115 1 671 1 765 1 
948 1 50 1 559 1 115 1 671 1 765 1 
948 1 50 1 559 1 115 1 671 1 765 1 
948 1 50 1 559 1 115 1 671 1 765 1 
948 1 50 1 559 1 115 1 671 1 765 1 
948 1 50 1 559 1 115 1 671 1 765 1 
948 1 50 1 559 1 115 1 671 1 765 1 
948 1 50 1 559 1 115 1 671 1 765 1 
948 1 50 1 559 1 115 1 671 1 765 1 
948 1 50 1 559 1 115 1 671 1 765 1 
948 1 50 1 559 1 115 1 671 1 765 1 
948 1 50 1 559 1 115 1 671 1 765 1 
948 1 50 1 559 1 115 1 671 1 765 1 
948 1 50 1 559 1 115 1 671 1 765 1 
948 1 50 1 559 1 115 1 671 1 765 1 
948 1 50 1 559 1 115 1 671 1 765 1 
948 1 50 1 559 1 115 1 671 1 765 1 
948 1 50 1 559 1 115 1 671 1 765 1 
948 1 50 1 559 1 115 1 671 1 765 1 
948 1 50 1 559 1 115 1 671 1 765 1 
948 1 50 1 559 1 115 1 671 1 765 1 
948 1 50 1 559 1 115 1 671 1 765 1 
948 1 50 1 559 1 115 1 671 1 765 1 
948 1 50 1 559 1 115 1 671 1 765 1 
948 1 50 1 559 1 115 1 671 1 765 1 
948 1 50 1 559 1 115 1 671 1 765 1 
948 1 50 1 559 1 115 1 671 1 765 1 
948 1 50 1 559 1 115 1 671 1 765 1 
948 1 50 1 559 1 115 1 671 1 765 1 
948 1 50 1 559 1 115 1 671 1 765 1 
948 1 50 1 559 1 115 1 671 1 765 1 
948 1 50 1 559 1 115 1 671 1 765 1 
948 1 50 1 559 1 115 1 671 1 765 1 
948 1 50 1 559 1 115 1 671 1 765 1 
948 1 50 1 559 1 115 1 671 1 765 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 676 663 519 
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.Quant:lte(II)Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
utilMDE.ArraysMDE:subarray([III)[I
jtb.JavaCharStream:readChar()C
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:SeqIntLessEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_esc()Ljava.lang.String;
utilMDE.Intern:intern([D)[D
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoString.StringEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.EltwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:is_direct_non_slice_array()Z
daikon.inv.binary.sequenceScalar.Member:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ModBitTracker:num_vars()I
daikon.inv.binary.sequenceString.SequenceString:SequenceString(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.NumericInt.Divides:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltwiseIntLessThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.ValueSet.ValueSetString:ValueSetString(I)V
daikon.test.FormatTestCase:passes()Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.Quant:eltsNotEqual([II)Z
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.VarInfo:name()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.TwoSequence:var1()Ldaikon.VarInfo;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.binary.BinaryInvariant:is_symmetric()Z
daikon.inv.unary.sequence.EltUpperBound:format_daikon()Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.binary.sequenceScalar.SeqIntEqual:add_modified([JJI)Ldaikon.inv.InvariantStatus;
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.Quant:eltsLT([II)Z
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.inv.unary.string.OneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_daikon()Ljava.lang.String;
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.NoDuplicates:format_simplify()Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.inv.filter.InvariantFilters:InvariantFilters()V
utilMDE.MathMDE:gcd(II)I
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfo:isDerived()Z
daikon.inv.unary.stringsequence.EltOneOfString:format_ioa()Ljava.lang.String;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:element_range([I)I
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan()V
daikon.VarInfo:get_base_array_hashcode()Ldaikon.VarInfo;
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String;
daikon.Quantify.SimplifyQuantification:get_closer()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.sequenceScalar.Member:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoSequence.SubSequence:format_simplify_explicit()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:get_base_array()Ldaikon.VarInfo;
daikon.PptSlice0:initInvariantsSeen()V
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
jtb.JavaParser:jj_scan_token(I)Z
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:enabled()Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_ioa()Ljava.lang.String;
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual()V
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.inv.binary.sequenceString.MemberString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:sorted([I)Z
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:PairwiseIntLessThan(Ldaikon.PptSlice;)V
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:indexOf([JJ)I
daikon.inv.unary.stringsequence.EltOneOfString:enabled()Z
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.VarInfo:get_upper_bound()Ldaikon.Quantify.Term;
daikon.suppress.NISuppressor:swap()Ldaikon.suppress.NISuppressor;
jtb.JavaCharStream:getBeginColumn()I
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_simplify(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_daikon()Ljava.lang.String;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:try_points_linear(DDD)Z
daikon.ProglangType:isPointerFileRep()Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_esc()Ljava.lang.String;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.inv.unary.stringsequence.SingleStringSequence:SingleStringSequence(Ldaikon.PptSlice;)V
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoString.TwoString:var1()Ldaikon.VarInfo;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:format_esc()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_simplify()Ljava.lang.String;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.inv.unary.sequence.SeqIndexIntNonEqual:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.inv.unary.stringsequence.EltOneOfString:get_proto()Ldaikon.inv.Invariant;
daikon.Quantify:quantify([Ldaikon.VarInfo;)[Ldaikon.Quantify.QuantifyReturn;
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.Quant:subsetOf([D[F)Z
jtb.JavaCharStream:getBeginLine()I
daikon.inv.unary.sequence.EltNonZero:EltNonZero(Ldaikon.PptSlice;)V
daikon.inv.ValueSet.ValueSetStringArray:ValueSetStringArray(I)V
daikon.ModBitTracker:num_sets()I
daikon.Quantify.Length:simplify_name()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_ioa()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.inv.unary.string.OneOfString:runValue(Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
utilMDE.MathMDE:sign(I)I
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:check_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.inv.unary.sequence.EltNonZero:is_pointer()Z
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.inv.binary.sequenceScalar.SequenceScalar:scl_index()I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltUpperBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.OrderedPairIterator:setnext1()V
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.VarInfoName:hashCode()I
utilMDE.ArraysMDE:indexOf([J[J)I
jtb.JavaParser:jj_ntk()I
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_esc()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.ProglangType:isArray()Z
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.inv.unary.string.SingleString:SingleString(Ldaikon.PptSlice;)V
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.Quant:memberOf(D[F)Z
daikon.inv.binary.sequenceScalar.SequenceScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.inv.Invariant:prob_and(DDD)D
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.Quant:pairwiseLTE([I[I)Z
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
daikon.ValueTuple:size()I
daikon.PptTopLevel:name()Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_simplify()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_simplify()Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([I[II)Z
utilMDE.ArraysMDE:max([I)I
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;Ldaikon.VarInfo;)V
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.VarInfo:has_typeof()Z
daikon.inv.binary.twoString.StringEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.OrderedPairIterator:hasNext()Z
daikon.VarInfo:jml_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.ProglangType:isString()Z
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltUpperBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.SequenceScalar:seq_index()I
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quantify.QuantFlags:distinct()Ljava.util.EnumSet;
daikon.inv.unary.sequence.EltNonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.ParseException:ParseException(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.TwoScalar:get_swap()Z
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.inv.binary.twoString.TwoString:TwoString(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceScalar.Member:format_ioa()Ljava.lang.String;
daikon.Quant:subsetOf([J[J)Z
daikon.Quant:gt(II)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_ioa()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:wouldChange(J)Z
daikon.inv.binary.twoSequence.Reverse:Reverse(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:find_bi_linear(JJJJ[D)Z
daikon.Quant:eltsEqual([II)Z
daikon.ModBitTracker:split(I)I
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:get_proto()Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
utilMDE.MathMDE:pow(II)I
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:enabled()Z
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.Quant:memberOf(I[I)Z
daikon.diff.Node:Node()V
daikon.Quantify.FreeVar:name()Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:separation(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)D
jtb.JavaCharStream:ReadByte()C
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:lt(II)Z
daikon.VarInfo:simplify_quantify(Ljava.util.EnumSet;[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.binary.sequenceString.MemberString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Stopwatch:Stopwatch(Z)V
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:min([I)I
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltNonZero:format_esc()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:check_modified([JJI)Ldaikon.inv.InvariantStatus;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.Divides:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_simplify()Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.Quantify:get_flags(Z)Ljava.util.EnumSet;
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.ThreeScalar:var1()Ldaikon.VarInfo;
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.sequence.EltOneOf:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.inv.unary.sequence.EltOneOf:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaCharStream:getEndLine()I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.binary.twoString.StringEqual:get_proto()Ldaikon.inv.binary.twoString.StringEqual;
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_esc()Ljava.lang.String;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
utilMDE.MathMDE:pow_fast(II)I
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.Quantify.Term:name_with_offset(Ljava.lang.String;I)Ljava.lang.String;
daikon.Quantify.Term:ioa_name()Ljava.lang.String;
utilMDE.Options.OptionInfo:argument_required()Z
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceString.MemberString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:get_lower_bound()Ldaikon.Quantify.Term;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.inv.unary.stringsequence.EltOneOfString:sort_rep()V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.Quant:memberOf(F[F)Z
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.Quant:lexLT([I[I)Z
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.Quant:sameLength([I[I)Z
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.inv.unary.sequence.EltNonZero:format_ioa()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:equals(JJJ)Z
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.inv.unary.string.OneOfString:format_ioa()Ljava.lang.String;
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.inv.binary.twoSequence.Reverse:format_daikon()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.unary.scalar.Positive:enabled()Z
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:isWorthPrinting()Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_simplify()Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.NoDuplicates:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.ProglangType:baseIsScalar()Z
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.inv.ternary.TernaryInvariant:TernaryInvariant(Ldaikon.PptSlice;)V
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.inv.unary.stringsequence.EltOneOfString:is_type()Z
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.Quant:lexNotEqual([I[I)Z
daikon.inv.unary.sequence.EltwiseIntLessThan:format_daikon()Ljava.lang.String;
jtb.JavaParser:jj_2_16(I)Z
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.inv.binary.twoSequence.SubSequence:format_ioa()Ljava.lang.String;
daikon.Quant:lexEqual([I[I)Z
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:enabled()Z
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
utilMDE.MathMDE:gcd_differences([I)I
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.Quant:memberOf(S[S)Z
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:runValue([Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
daikon.Quant:lexLTE([I[I)Z
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.LimitedSizeIntSet:add(I)V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.VarInfo:domainTypeIOA()Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quantify.IOAQuantification:getQuantifierExp()Ljava.lang.String;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.inv.binary.twoString.StringEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.suppress.NISuppression:NISuppression(Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
daikon.inv.unary.sequence.NoDuplicates:format_ioa()Ljava.lang.String;
daikon.VarInfo:get_all_simple_names()Ljava.util.List;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.inv.ternary.threeScalar.LinearTernary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SequenceScalar:SequenceScalar(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.Quantify.IOAQuantification:getMembershipRestriction(I)Ljava.lang.String;
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.EltOneOf:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.Member:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.inv.Invariant:prob_and(DD)D
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.inv.binary.sequenceScalar.Member:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:enabled()Z
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.string.OneOfString:OneOfString(Ldaikon.PptSlice;)V
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_ioa()Ljava.lang.String;
utilMDE.MathMDE:negate(I)I
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoString.StringEqual:StringEqual(Ldaikon.PptSlice;)V
daikon.inv.ternary.threeScalar.ThreeScalar:var2()Ldaikon.VarInfo;
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
daikon.Quant:intersection([I[I)[I
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.Quantify.ESCQuantification:bld_quant(Ldaikon.VarInfo;Ldaikon.Quantify.Term;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:isPseudoArray()Z
daikon.inv.unary.sequence.EltNonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.ThreeScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.Quantify.Constant:name()Ljava.lang.String;
daikon.inv.Invariant:justified()Z
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.inv.binary.twoSequence.PairwiseIntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoSequence.SubSequence:format_simplify()Ljava.lang.String;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.VarInfoAux:hashCode()I
utilMDE.Intern:intern([J)[J
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_simplify()Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.Quantify.IOAQuantification:getClosingExp()Ljava.lang.String;
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.Quant:lexGTE([I[I)Z
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.VarInfoName:isLiteralConstant()Z
daikon.VarInfo:simplify_name()Ljava.lang.String;
jtb.JavaParser:jj_3_16()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.string.OneOfString:add_modified(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_ioa()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
jtb.Token:newToken(I)Ljtb.Token;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.NoDuplicates:NoDuplicates(Ldaikon.PptSlice;)V
daikon.inv.ternary.threeScalar.LinearTernary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:format_esc()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.FuzzyFloat:eq(DD)Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:sum([D)D
daikon.PptSlice1:num_samples()I
daikon.inv.unary.stringsequence.SingleStringSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.Quantify.IOAQuantification:getFreeVarName(I)Ljava.lang.String;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.inv.binary.sequenceScalar.SeqIntEqual:SeqIntEqual(Ldaikon.PptSlice;)V
daikon.VarInfo:isPrestate()Z
daikon.inv.binary.sequenceString.MemberString:check_modified([Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
jtb.JavaCharStream:BeginToken()C
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_ioa()Ljava.lang.String;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.PptTopLevel:is_constant(Ldaikon.VarInfo;)Z
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.inv.binary.sequenceString.MemberString:MemberString(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:subarray([JII)[J
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.ProglangType:elementIsIntegral()Z
daikon.Quant:eltsEqualIndex([I)Z
daikon.inv.binary.sequenceScalar.SeqIntEqual:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltUpperBound:EltUpperBound(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_simplify()Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.inv.unary.sequence.EltUpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.inv.binary.twoSequence.SubSequence:enabled()Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ProglangType:isIntegral()Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptSlice1:arity()I
daikon.Quantify.SimplifyQuantification:get_index(I)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.inv.binary.sequenceScalar.SeqIntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.FuzzyFloat:gt(DD)Z
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernary:get_proto()Ldaikon.inv.Invariant;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.sequenceString.SequenceString:scl_index()I
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfo:isIOASet()Z
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.EltNonZero:get_proto()Ldaikon.inv.Invariant;
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V
daikon.Quant:eltwiseEqual([I)Z
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.inv.binary.twoSequence.SubSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
jtb.ParseException:getMessage()Ljava.lang.String;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.Quant:subsetOf([S[S)Z
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_simplify()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:gte(II)Z
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.ArraysMDE:min_max([I)[I
daikon.inv.Invariant:prob_or(DD)D
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParser:generateParseException()Ljtb.ParseException;
daikon.Quantify.Term:simplify_name()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
utilMDE.ArraysMDE:sum([[I)I
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.inv.unary.sequence.NoDuplicates:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:enabled()Z
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.test.InvariantFormatTester:execute()Z
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:is_boolean()Z
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:enabled()Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_daikon()Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.Quantify.Term:esc_name()Ljava.lang.String;
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:enabled()Z
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:lexGT([I[I)Z
daikon.inv.binary.sequenceScalar.Member:get_proto()Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore:linearIntervention([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.VarInfo:is_typeof()Z
daikon.VarInfo:relate_var()V
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceString.SequenceString:seq_index()I
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoSequence.TwoSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:PairwiseIntLessEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.SubSequence:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ProglangType:baseIsFloat()Z
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName; | ASSIGN | 4622 | = null
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.inv.Invariant:is_false()Z
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.binary.sequenceString.MemberString:format_daikon()Ljava.lang.String;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:SeqIntLessThan(Ldaikon.PptSlice;)V
daikon.Quant:eq(JJ)Z
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.VarInfo:get_array_var()Ldaikon.VarInfo;
daikon.inv.binary.twoSequence.SubSequence:SubSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.inv.unary.stringsequence.EltOneOfString:EltOneOfString(Ldaikon.PptSlice;)V
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.ProglangType:isScalar()Z
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_esc()Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.Quant:subsetOf([F[D)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.sequenceScalar.Member:enabled()Z
daikon.inv.unary.string.OneOfString:is_type()Z
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.OrderedPairIterator:setnext2()V
daikon.Quant:eltsGteIndex([I)Z
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.Quant:pairwiseGT([I[I)Z
daikon.Quant:eltsLteIndex([I)Z
daikon.inv.unary.stringsequence.EltOneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.inv.unary.stringsequence.EltOneOfString:format_simplify()Ljava.lang.String;
daikon.Quant:ne(II)Z
daikon.inv.binary.sequenceString.MemberString:enabled()Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.Quant:subsetOf([D[D)Z
daikon.inv.binary.sequenceScalar.Member:format_esc()Ljava.lang.String;
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
utilMDE.MathMDE:missing_numbers([I)[I
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_ioa()Ljava.lang.String;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:subsetOf([B[I)Z
daikon.VarInfo:simplify_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.binary.twoSequence.Reverse:format_simplify()Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfo:get_simplify_free_index([Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.inv.binary.sequenceScalar.SequenceScalar:seqvar()Ldaikon.VarInfo;
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE:escapeNonASCII(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.Quant:eq(FF)Z
daikon.inv.unary.sequence.NoDuplicates:enabled()Z
daikon.Quantify.SimplifyQuantification:SimplifyQuantification(Ljava.util.EnumSet;[Ldaikon.VarInfo;)V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.inv.binary.sequenceScalar.SequenceScalar:seq_first()Z
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.inv.binary.twoScalar.NumericInt.Divides:Divides(Ldaikon.PptSlice;Z)V
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarComparabilityNone:comparable(Ldaikon.VarComparabilityNone;Ldaikon.VarComparabilityNone;)Z
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.inv.unary.string.OneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.ternary.threeScalar.LinearTernaryCore:planarIntervention([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.ternary.threeScalar.ThreeScalar:ThreeScalar(Ldaikon.PptSlice;)V
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
jtb.JavaCharStream:UpdateLineColumn(C)V
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quantify.IOAQuantification:IOAQuantification([Ldaikon.VarInfo;)V
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:add_modified(JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant:logOn()Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quantify.ESCQuantification:get_quantification()Ljava.lang.String;
utilMDE.LimitedSizeIntSet:size()I
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:enabled()Z
utilMDE.Intern:internSubsequence([JII)[J
daikon.inv.binary.sequenceScalar.Member:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.unary.sequence.EltOneOf:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.Quant:noDups([I)Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.inv.binary.twoSequence.SubSequence:get_proto()Ldaikon.inv.Invariant;
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.Ppt:Ppt()V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.Quantify.Length:esc_name()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_esc()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.Quant:eq(DD)Z
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.inv.unary.scalar.Modulus:enabled()Z
utilMDE.ArraysMDE:sum([I)I
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.inv.unary.sequence.EltOneOf:enabled()Z
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.inv.ternary.threeScalar.LinearTernary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.suppress.NISuppression:NISuppression(Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
utilMDE.WeakHasherMap:size()I
daikon.Quant:eltwiseLTE([I)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.inv.unary.sequence.NoDuplicates:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.inv.binary.sequenceScalar.SequenceScalar:sclvar()Ldaikon.VarInfo;
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.Quantify.ESCQuantification:get_arr_vars_indexed(I)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:PairwiseIntGreaterEqual(Ldaikon.PptSlice;)V
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
utilMDE.UtilMDE:escapeNonASCII(C)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.inv.unary.stringsequence.SingleStringSequence:var()Ldaikon.VarInfo;
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.string.OneOfString:sort_rep()V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.inv.unary.sequence.EltOneOf:sort_rep()V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
jtb.JavaCharStream:backup(I)V
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
jtb.JavaCharStream:FillBuff()V
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.inv.binary.twoSequence.SeqSeqIntEqual:SeqSeqIntEqual(Ldaikon.PptSlice;Z)V
daikon.inv.binary.sequenceString.MemberString:format_esc()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:is_hashcode()Z
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoSequence.Reverse:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.SubSequence:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_ioa()Ljava.lang.String;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.inv.unary.string.OneOfString:format_simplify()Ljava.lang.String;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ModBitTracker:ModBitTracker(I)V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.suppress.NISuppressionSet:swap()Ldaikon.suppress.NISuppressionSet;
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.inv.unary.sequence.EltOneOf:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.ArraysMDE:sum([[D)D
daikon.suppress.NISuppression:NISuppression([Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.inv.binary.twoSequence.TwoSequence:TwoSequence(Ldaikon.PptSlice;)V
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.inv.binary.sequenceScalar.Member:format_simplify()Ljava.lang.String;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoSequence.SubSequence:format_daikon()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.stringsequence.EltOneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaCharStream:getEndColumn()I
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.inv.unary.string.OneOfString:format_daikon()Ljava.lang.String;
daikon.VarComparabilityNone:elementType()Ldaikon.VarComparability;
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_esc()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.inv.unary.sequence.EltNonZero:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:add_modified(JJJI)Ldaikon.inv.InvariantStatus;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.sequence.EltOneOf:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:gcd([I)I
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoSequence.Reverse:enabled()Z
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltUpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.sequenceScalar.Member:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_ioa()Ljava.lang.String;
daikon.Quant:pairwiseEqual([I[I)Z
daikon.inv.binary.twoSequence.TwoSequence:var2()Ldaikon.VarInfo;
daikon.inv.unary.string.OneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.sequenceString.SequenceString:valid_types([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
utilMDE.Intern:numIntArrays()I
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoString.TwoString:valid_types([Ldaikon.VarInfo;)Z
daikon.Quant:eltwiseGT([I)Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:get_proto()Ldaikon.inv.Invariant;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.Quantify.SimplifyQuantification:get_arr_vars_indexed(I)Ljava.lang.String;
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.PptSlice3:arity()I
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_daikon()Ljava.lang.String;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.PptName:isEnterPoint()Z
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.inv.unary.sequence.EltOneOf:EltOneOf(Ldaikon.PptSlice;)V
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.inv.binary.twoSequence.Reverse:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
utilMDE.FuzzyFloat:gte(DD)Z
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.inv.unary.string.OneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.PptMap:asCollection()Ljava.util.Collection;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.ValueSet:ValueSet(I)V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.Debug:logDetail()Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_daikon()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.sequence.EltNonZero:format_simplify()Ljava.lang.String;
daikon.Quant:subsetOf([I[I)Z
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_ioa()Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:subsetOf([F[F)Z
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_bi_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)V
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.inv.binary.twoSequence.PairwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:setEqual([I[I)Z
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.Quant:slice([III)[I
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.ValueTuple:isMissingFlow(I)Z
daikon.Quant:eltsGTE([II)Z
utilMDE.Intern:intern([I)[I
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
utilMDE.MathMDE:mod_positive(II)I
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntEqual:PairwiseIntEqual(Ldaikon.PptSlice;)V
daikon.Quantify.SimplifyQuantification:get_quantification()Ljava.lang.String;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:updateResults()V
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_ioa()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:hashCode()I
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_simplify()Ljava.lang.String;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.ProglangType:baseIsIntegral()Z
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.ValueTuple:isMissing(I)Z
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceString.SequenceString:seqvar()Ldaikon.VarInfo;
daikon.Quant:union([I[I)[I
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.VarInfo:esc_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant:simplify_format_string(Ljava.lang.String;)Ljava.lang.String;
daikon.Quantify.ESCQuantification:ESCQuantification(Ljava.util.EnumSet;[Ldaikon.VarInfo;)V
daikon.Quant:eltwiseNotEqual([I)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Quant:eq(II)Z
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_ioa()Ljava.lang.String;
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String; | ASSIGN | 121018 | = null
daikon.inv.unary.stringsequence.EltOneOfString:subarray_rep()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I | CONSTANT | 21933 | 99 -> 1
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.Reverse:format_simplify_explicit()Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoSequence.SubSequence:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_simplify()Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:format_esc()Ljava.lang.String;
daikon.Ppt:find_var_by_name(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.diff.RootNode:RootNode()V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.suppress.NISuppressee:NISuppressee(Ljava.lang.Class;Z)V
daikon.inv.binary.sequenceString.MemberString:format_ioa()Ljava.lang.String;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.inv.unary.string.SingleString:valid_types([Ldaikon.VarInfo;)Z
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.inv.binary.sequenceScalar.SeqIntLessThan:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.SeqIntEqual:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Quant:pairwiseLT([I[I)Z
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptSlice2:arity()I
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.inv.binary.twoString.StringEqual:enabled()Z
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.PptName:PptName(Ljava.lang.String;)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.LinearBinaryCore:maxsep_point([J[J)[I
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.Quantify.FreeVar:simplify_name()Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:format_simplify()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernary:LinearTernary(Ldaikon.PptSlice;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:maxsep_doubles([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)D
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Quant:pairwiseSquare([I[I)Z
daikon.inv.binary.twoScalar.IntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:isIOAArray()Z
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.inv.binary.twoSequence.Reverse:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
utilMDE.FuzzyFloat:indexOf([D[D)I
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.inv.unary.stringsequence.EltOneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.inv.unary.string.SingleString:var()Ldaikon.VarInfo;
daikon.Quant:memberOf(F[D)Z
daikon.ModBitTracker:num_samples()I
daikon.inv.unary.sequence.EltOneOf:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.Reverse:format_ioa()Ljava.lang.String;
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.inv.binary.sequenceScalar.SeqIntEqual:enabled()Z
utilMDE.WeakHasherMap:processQueue()V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:SeqIntGreaterEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.string.OneOfString:enabled()Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:get_proto()Ldaikon.inv.Invariant;
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.inv.binary.sequenceScalar.SeqIntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.NodeOptional:NodeOptional()V
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan(Ldaikon.PptSlice;)V
daikon.suppress.NISuppressee:swap()Ldaikon.suppress.NISuppressee;
daikon.inv.ternary.threeScalar.LinearTernary:add_modified(JJJI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_esc()Ljava.lang.String;
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:lte(DD)Z
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.PptSlice0:arity()I
daikon.Ppt:indexOf(Ljava.lang.String;)I
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.inv.unary.sequence.EltNonZero:enabled()Z
daikon.VarInfo:new_ppt()V
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.PptTopLevel.CondIterator:hasNext()Z
utilMDE.MathMDE:modulus([I)[I
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_daikon()Ljava.lang.String;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quantify.IOAQuantification:getFreeVar(I)Ldaikon.Quantify.Term;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.inv.unary.stringsequence.EltOneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.Quant:pairwiseDivides([I[I)Z
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.ProglangType:dimensions()I
daikon.ProglangType:baseIsString()Z
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_daikon()Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([J)Z
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.Quant:eltsLTE([II)Z
daikon.PptSlice3:PptSlice3(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.inv.Invariant:prob_is_ge(DD)D
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:SeqIntGreaterThan(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.inv.binary.twoString.StringEqual:add_modified(Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.NoDuplicates:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltOneOf:format_daikon()Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore:maxsep_triples([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)D
daikon.Quant:eltwiseGTE([I)Z
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.Quant:setDiff([I[I)[I
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.inv.binary.sequenceString.SequenceString:sclvar()Ldaikon.VarInfo;
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarComparabilityNone:indexType(I)Ldaikon.VarComparability;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.Quantify.QuantFlags:include_index()Ljava.util.EnumSet;
daikon.Quant:eltsLtIndex([I)Z
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.inv.binary.twoSequence.PairwiseIntLessThan:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern:internSubsequence([III)[I
daikon.inv.binary.twoScalar.NumericInt.Divides:get_proto(Z)Ldaikon.inv.Invariant;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Invariant:getConfidence()D
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.inv.Invariant:logDetail()Z
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.diff.InvMap:InvMap()V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.inv.unary.sequence.EltwiseIntLessThan:format_esc()Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:EltwiseIntLessThan(Ldaikon.PptSlice;)V
daikon.inv.unary.stringsequence.EltOneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_simplify()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoString.StringEqual:check_modified(Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.string.OneOfString:format_esc()Ljava.lang.String;
daikon.Quantify.QuantFlags:element_wise()Ljava.util.EnumSet;
daikon.inv.binary.sequenceString.MemberString:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_simplify()Ljava.lang.String;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.Quantify.IOAQuantification:getVarIndexedString(I)Ljava.lang.String;
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.suppress.NISuppressee:NISuppressee(Ljava.lang.Class;I)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_daikon()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.inv.binary.sequenceScalar.Member:Member(Ldaikon.PptSlice;)V
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltOneOf:subarray_rep()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_simplify()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:set_bi_linear(JJJJ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.Reverse:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.Quant:eltwiseLT([I)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfo:apply_subscript(Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfo:simplifyNameAndBounds()[Ljava.lang.String;
daikon.Quant:eltsGT([II)Z
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.inv.unary.stringsequence.EltOneOfString:add_modified([Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.ArraysMDE:fn_compose([I[I)[I
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.PptName:isCombinedExitPoint()Z
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.inv.unary.string.OneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.inv.unary.sequence.EltUpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_esc()Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:enabled()Z
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.inv.binary.sequenceString.MemberString:add_modified([Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_simplify(Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.Quantify.Length:Length(Ldaikon.VarInfo;I)V
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.inv.binary.twoSequence.PairwiseIntEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:isPointer()Z
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.SeqSeqIntEqual:get_proto()Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:lt(DD)Z
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.Quant:isReverse([I[I)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_ioa()Ljava.lang.String;
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:maxsep_indices()[I
daikon.VarInfo:get_enclosing_var()Ldaikon.VarInfo;
daikon.inv.unary.stringsequence.EltOneOfString:format_daikon()Ljava.lang.String;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quantify.QuantifyReturn:QuantifyReturn(Ldaikon.VarInfo;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_simplify()Ljava.lang.String;
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([J[JI)Z
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.inv.binary.twoScalar.LinearBinary:add_modified(JJI)Ldaikon.inv.InvariantStatus;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.VarInfoName:name()Ljava.lang.String;
utilMDE.ArraysMDE:concat([I[I)[I
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.inv.binary.sequenceString.SequenceString:seq_first()Z
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
utilMDE.ArraysMDE:fn_inverse([II)[I
utilMDE.FuzzyFloat:ne(DD)Z
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.inv.Invariants:Invariants()V
utilMDE.ArraysMDE:indexOf([II)I
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.inv.binary.twoSequence.Reverse:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.inv.unary.sequence.EltUpperBound:enabled()Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:PairwiseIntGreaterThan(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.ThreeScalar:var3()Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.inv.unary.sequence.EltwiseIntLessThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.Debug:logOn()Z
daikon.inv.unary.sequence.EltOneOf:format_simplify()Ljava.lang.String;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.Quantify.Constant:Constant(I)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_esc()Ljava.lang.String;
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:get_proto()Ldaikon.inv.Invariant;
daikon.ProglangType:isFloat()Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.EltwiseIntComparison:EltwiseIntComparison(Ldaikon.PptSlice;)V
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernary:enabled()Z
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I | CONDITION | 910 | if (x) -> if (!x)
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.ProglangType:base()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE:gcd(JJ)J
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:memberOf(J[J)Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.inv.unary.string.OneOfString:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltUpperBound:format_ioa()Ljava.lang.String;
daikon.suppress.NISuppressionSet:NISuppressionSet([Ldaikon.suppress.NISuppression;)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:enabled()Z
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoString.TwoString:var2()Ldaikon.VarInfo;
daikon.inv.unary.sequence.EltOneOf:format_ioa()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
utilMDE.UtilMDE.NullableStringComparator:compare(Ljava.lang.String;Ljava.lang.String;)I
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_esc()Ljava.lang.String;
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.VarInfo:old_var_names(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.Quant:concat([I[I)[I
daikon.Quantify.QuantFlags:adjacent()Ljava.util.EnumSet;
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:isDerivedSubSequenceOf()Ldaikon.VarInfo;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_esc()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:enabled()Z
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.MathMDE:mod_positive(JJ)J
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eltsGtIndex([I)Z
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:enabled()Z
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
utilMDE.Assert:assertTrue(Z)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
768 4 381 2 863 2 91 2 1136 2 1498 2 1245 2 803 2 860 2 
1104 2 693 6 1 2 242 2 600 6 746 2 1390 2 1346 2 159 6 765 2 205 2 
863 2 396 2 755 2 785 2 1040 6 575 6 1371 4 1498 2 577 6 636 6 535 4 1129 2 555 2 
1022 6 741 8 1004 10 387 4 744 10 2 4 486 2 1393 16 856 26 805 2 637 4 466 10 1283 2 772 2 863 6 516 2 1039 8 1493 2 943 29 708 12 923 10 382 8 426 16 58 4 1498 6 196 2 1169 10 974 16 456 6 1222 8 
1033 4 1388 6 
1069 2 
89 2 832 2 91 2 1469 2 1239 2 620 2 1085 2 994 2 99 2 1188 2 293 2 196 2 197 2 61 2 1146 2 481 2 580 4 1336 2 801 2 1253 2 802 2 1295 2 1340 2 65 2 1256 2 345 2 207 2 589 4 1110 2 1398 4 863 4 730 2 1154 2 1402 4 815 2 497 2 922 2 599 2 870 2 1498 4 602 2 927 2 128 2 268 2 
22 6 1225 4 1022 4 741 6 1004 6 744 16 43 2 45 4 908 6 751 2 6 4 1393 32 856 48 1488 4 466 16 752 6 534 8 863 4 1240 4 1211 4 1379 6 240 2 328 2 920 6 1493 2 10 6 943 54 360 4 1120 2 923 16 708 22 426 32 58 2 1498 4 872 2 1169 16 974 32 456 4 1222 18 
922 2 1082 2 650 2 
1224 2 1399 10 825 2 664 2 495 22 968 2 1368 2 956 2 1201 2 549 2 939 2 128 2 429 2 1153 2 
605 2 1022 2 930 2 1004 4 744 2 369 2 1393 2 856 4 466 2 1010 2 511 2 812 2 357 2 943 6 1307 2 1452 2 923 2 708 2 426 2 58 2 1169 2 974 2 1222 2 
22 6 1225 4 387 2 744 4 908 6 943 16 360 4 520 2 708 4 923 4 1393 8 856 12 426 8 466 4 897 2 1169 4 974 8 
824 4 247 2 1024 14 907 2 371 4 1198 4 273 2 344 4 435 62 207 2 437 4 143 2 589 4 1082 2 839 2 1210 2 1115 2 153 4 540 4 311 4 54 10 814 2 241 4 1293 10 156 4 1403 2 922 8 298 2 1193 2 383 2 244 4 650 6 178 2 898 2 714 2 428 2 899 2 61 4 246 2 1147 2 
608 2 1278 2 1078 2 1369 2 614 2 307 2 1086 2 1068 2 1069 2 38 2 
557 2 653 2 560 16 931 2 1025 2 563 4 654 1 1026 2 933 1 274 2 1417 3 1230 3 461 1 462 8 463 2 278 2 374 24 1035 2 1234 2 1420 2 94 4 191 4 287 2 1038 2 661 1 665 2 292 1 100 2 1426 2 380 2 842 2 1249 6 195 2 17 2 198 2 301 3 582 1 1337 2 1254 2 952 2 677 2 1047 32 678 2 485 3 1048 2 1341 4 1050 3 855 8 769 2 115 2 1345 2 682 2 490 1 491 2 862 2 863 34 961 1 1263 2 30 12 1448 1 1062 2 686 8 400 1 687 2 221 3 975 2 406 2 131 2 318 5 1272 2 1273 24 1175 2 695 2 44 1 1176 2 696 1 1074 3 877 2 1077 1 982 2 49 2 1180 2 786 2 611 6 140 2 983 2 1279 2 1280 2 142 6 1468 4 144 2 236 1 148 2 416 2 887 2 990 2 790 2 791 6 157 3 1097 2 60 2 1099 2 1101 2 630 2 803 2 160 32 161 2 723 3 346 16 68 2 69 2 1203 2 165 4 640 2 808 2 1113 2 1207 2 76 2 1490 2 1012 1 536 16 1401 4 919 2 542 2 170 2 171 16 445 2 543 2 173 2 448 1 1122 2 1121 2 1124 2 361 3 450 2 1405 2 261 2 1212 2 1498 32 452 4 85 2 451 3 1127 2 454 2 1128 2 554 3 1221 2 
863 2 1244 2 
863 4 183 2 410 2 
590 2 
365 12 315 2 874 8 366 2 457 4 559 2 977 2 745 6 133 12 749 6 878 6 3 40 507 12 1079 10 1080 2 233 8 1081 4 567 2 146 12 192 2 52 2 514 2 886 12 288 12 754 40 840 12 707 2 572 2 291 12 1424 2 1187 4 892 2 843 2 894 8 474 4 475 2 476 6 715 2 1195 6 627 2 949 2 524 18 105 12 482 12 1255 2 1105 16 1439 10 1152 10 962 12 167 4 78 4 355 4 594 2 79 10 258 40 1014 2 1066 2 869 4 817 4 218 2 1310 4 1406 2 972 2 40 2 266 4 1459 6 179 8 976 2 269 10 
47 1 1063 2 321 2 809 2 
1106 2 1063 2 
922 2 332 2 253 2 655 2 1063 2 2 2 434 2 
1013 2 253 2 1063 2 
253 2 992 2 1063 2 
1372 2 321 2 703 2 
253 2 1063 2 
703 2 231 2 
1063 2 26 2 
916 2 321 2 703 2 
321 2 587 2 1114 2 
186 2 321 2 225 2 
0 2 321 2 697 2 
532 2 262 2 321 2 
566 2 703 2 
1060 2 1063 2 
1327 2 587 2 
813 2 225 2 
0 2 936 2 
262 2 1259 2 
703 2 522 2 
694 2 262 2 
0 2 1494 2 
698 2 225 2 
1275 2 587 2 
916 2 359 2 321 2 703 2 
353 2 916 2 359 2 321 2 703 2 
321 2 703 2 1228 2 
1142 2 321 2 703 2 
1365 2 390 2 1235 2 836 2 
316 2 132 2 731 2 718 2 1449 2 1005 2 1158 2 495 6 425 2 667 2 709 2 574 2 681 2 176 2 796 4 224 4 1217 2 375 2 
321 2 1055 2 
922 2 332 2 1479 2 1392 2 
922 2 332 2 655 2 1479 2 1054 2 1392 2 
922 2 332 2 253 2 1063 2 2 2 1261 2 
1110 2 787 2 
922 2 332 2 2 2 1018 2 
0 2 1332 2 
1021 2 262 2 
42 2 587 2 
1241 2 225 2 
319 2 262 2 225 2 
378 2 262 2 225 2 
262 2 225 2 632 2 
262 2 467 2 225 2 
738 6 1108 2 986 2 393 6 1288 2 922 2 332 2 1220 2 
668 2 703 2 
678 2 
557 2 653 2 563 2 933 2 90 2 372 2 463 2 1035 2 1420 2 94 4 658 4 1426 2 842 2 1249 2 195 2 198 2 761 2 1254 2 677 6 1047 6 1341 4 1048 2 855 2 769 2 490 2 862 2 863 26 30 8 308 2 1062 2 1265 2 687 2 975 2 1271 2 611 4 49 2 1280 2 983 2 142 2 1468 2 1183 2 1374 2 1375 2 791 6 1099 2 717 2 902 2 905 2 1101 2 343 2 803 2 160 4 1486 2 1203 2 165 4 640 2 808 2 1113 2 1207 2 76 2 536 6 1401 4 538 2 173 2 450 2 924 4 261 2 1498 26 452 2 85 2 1127 2 1128 2 1019 2 1221 4 
557 2 653 2 563 2 933 2 372 2 463 2 1035 2 1420 2 94 4 658 4 1426 2 842 2 1249 2 195 2 198 2 300 2 761 2 1254 2 677 6 1047 6 1341 4 1048 2 855 2 769 2 490 2 862 2 863 26 30 8 308 2 1062 2 1265 2 687 2 975 2 1271 2 1176 2 611 6 49 2 1280 2 983 2 142 2 1468 2 1374 2 1375 2 1285 2 791 6 1099 2 902 2 905 2 1101 2 343 2 803 2 160 4 1486 2 1203 2 165 4 640 2 808 2 1113 2 1207 2 76 2 536 6 1401 4 538 2 543 2 173 2 921 2 450 2 924 4 261 2 1498 26 452 2 85 2 1127 2 1128 2 454 2 1019 2 1221 4 
1119 2 
36 2 896 2 
86 2 557 2 693 6 87 2 606 4 876 2 1231 2 938 2 234 2 322 2 190 10 788 2 285 2 154 2 791 4 1291 2 756 4 573 8 842 2 242 2 1098 4 102 2 999 4 159 6 337 2 1333 2 201 2 525 2 797 2 1100 4 248 2 1390 4 1438 2 1339 2 205 4 765 2 1341 2 1342 2 769 2 1440 2 958 2 1203 2 27 2 254 4 210 2 1205 2 862 2 863 12 1401 2 1450 2 687 2 600 6 314 2 1311 2 1498 6 649 2 973 2 39 8 1128 2 1223 2 
86 2 557 2 693 8 1 2 87 2 606 4 978 2 876 2 1231 2 938 2 234 2 322 2 190 10 788 2 285 2 154 2 791 4 1291 2 756 4 573 8 842 2 242 2 1098 4 102 2 999 4 159 6 337 2 1333 2 201 2 525 2 797 2 799 2 1100 4 248 2 1390 4 1438 2 1341 2 205 4 765 2 1342 2 769 2 1440 2 1203 2 27 2 254 4 210 2 1205 2 1209 4 862 2 863 12 1401 2 1450 2 687 2 600 8 314 2 1311 2 1498 6 649 2 973 2 39 8 1128 2 1223 2 
1333 2 693 2 797 2 87 2 1100 4 1390 2 1291 2 1438 2 205 2 1231 2 1098 2 938 2 1440 2 234 2 973 2 254 4 159 2 788 2 
86 2 557 2 693 6 1 2 87 2 606 4 876 2 1231 2 938 2 234 2 322 2 190 6 788 2 285 2 154 2 791 4 1291 2 756 4 573 4 842 2 1098 4 102 2 999 4 159 4 337 2 1333 2 201 2 525 2 797 2 1100 4 248 2 1390 4 1438 2 1339 2 205 4 765 2 1341 2 1342 2 769 2 1440 2 958 2 1203 2 27 2 254 4 210 2 1205 2 862 2 863 12 1401 2 1450 2 687 2 600 6 314 2 1311 2 1498 6 649 2 973 2 39 4 1128 2 1223 2 
86 2 557 2 693 4 87 2 606 4 876 2 1231 2 938 2 234 2 322 2 190 6 788 2 285 2 154 2 791 4 1291 2 756 4 573 4 842 2 1098 4 102 2 999 4 159 6 337 2 1333 2 201 2 525 2 797 2 1100 4 248 2 1390 4 1438 2 1339 2 205 4 765 2 1341 2 1342 2 1104 2 769 2 1440 2 958 2 1203 2 27 2 254 4 210 2 1205 2 862 2 863 12 1401 2 1450 2 687 2 600 6 314 2 1311 2 1498 6 649 2 973 2 39 4 1128 2 1223 2 
86 2 557 2 693 6 87 2 606 4 876 2 1231 2 938 2 234 2 322 2 190 6 788 2 285 2 154 2 791 4 1291 2 756 4 573 8 842 2 242 2 1098 4 102 2 999 4 159 6 337 2 1333 2 201 2 525 2 797 2 1100 4 248 2 1390 4 1438 2 1339 2 205 4 765 2 1341 2 1342 2 769 2 1440 2 958 2 1203 2 27 2 254 4 210 2 1205 2 862 2 863 12 1401 2 1450 2 687 2 600 6 314 2 1311 2 1498 6 649 2 973 2 39 4 1128 2 1223 2 
86 2 557 2 693 6 87 2 606 4 876 2 1231 2 938 2 234 2 322 2 190 10 788 2 285 2 154 2 791 4 1291 2 756 4 573 8 842 2 242 2 1098 4 102 2 999 4 159 8 337 2 1333 2 201 2 525 2 797 2 1100 4 248 2 1390 4 1438 2 1339 2 205 4 765 2 1341 2 1342 2 1104 2 769 2 1440 2 958 2 1203 2 27 2 254 4 210 2 1205 2 862 2 863 12 1401 2 1450 2 687 2 600 8 314 2 1311 2 1498 6 649 2 973 2 39 8 1128 2 1223 2 
86 2 557 2 693 6 87 2 606 4 876 2 1231 2 938 2 234 2 322 2 190 10 788 2 285 2 154 2 791 4 1291 2 756 4 573 8 842 2 242 2 1098 4 102 2 999 4 159 6 337 2 1333 2 201 2 525 2 797 2 1100 4 248 2 1390 4 1438 2 1339 2 205 4 765 2 1341 2 1342 2 769 2 1440 2 958 2 1203 2 27 2 254 4 210 2 1205 2 862 2 863 12 1401 2 1450 2 687 2 600 6 314 2 1311 2 1498 6 649 2 973 2 39 8 1128 2 1223 2 
557 2 182 2 563 2 938 2 190 2 1134 1 753 1 1323 2 756 4 573 2 384 6 948 2 385 1 198 2 20 2 1333 2 201 2 1335 2 1338 6 1149 2 1341 4 205 4 765 4 764 10 1342 2 955 2 769 2 1344 1 958 2 27 2 210 2 963 2 590 6 30 4 600 12 973 2 1362 2 975 2 606 8 410 6 979 1 981 2 784 2 611 6 49 2 234 2 788 2 988 2 791 6 53 1 795 6 999 6 797 2 248 2 1390 4 803 2 1203 2 254 4 806 2 71 2 640 2 808 2 1205 2 1207 2 810 7 1401 4 444 4 1015 6 450 2 452 2 85 2 649 4 454 2 1019 2 1410 2 1223 2 823 6 86 2 653 2 87 2 1231 2 1029 2 1034 2 465 2 1420 12 282 6 94 4 285 4 1236 2 658 4 470 8 1244 6 1426 2 842 2 297 2 1249 2 102 2 1432 4 852 6 675 1 1254 2 1438 2 677 6 1047 8 855 2 1440 2 1052 2 1260 1 862 2 863 46 1450 2 1264 2 687 2 314 2 498 6 693 4 692 2 876 2 1276 2 1280 2 142 2 1281 6 1468 2 880 2 322 2 1286 6 1287 7 154 2 1289 2 1291 2 1093 6 893 2 1098 4 1099 2 712 2 159 8 337 2 339 2 525 2 1100 4 902 2 905 2 1101 2 160 2 1294 1 721 2 1104 4 347 2 165 4 352 6 536 6 538 4 543 2 173 2 1311 2 1498 24 553 6 1128 2 1130 2 
86 2 557 2 182 2 87 2 653 2 563 4 934 2 1029 2 1231 2 938 2 465 2 1034 2 190 2 1420 12 282 6 94 4 285 4 1236 2 658 4 1244 6 470 8 1323 2 1426 2 756 4 573 6 842 2 297 2 1249 2 384 6 102 2 948 2 1432 4 198 2 20 2 1333 2 201 2 1335 2 852 6 1254 2 1338 6 1438 2 1149 2 1047 8 677 6 764 10 765 4 205 4 1341 4 955 2 1342 2 855 2 769 2 1440 2 958 2 1052 2 27 2 210 2 862 2 863 48 590 6 963 2 30 8 1264 2 1450 2 687 2 600 12 314 2 498 6 973 2 1362 2 975 2 692 2 693 8 606 8 410 6 876 2 981 2 1276 2 784 2 49 2 611 6 1280 2 142 2 1281 6 1468 4 880 2 234 2 322 2 788 2 988 2 1286 6 1289 2 154 2 791 6 1291 2 1093 6 893 2 242 4 1098 4 795 6 712 2 999 6 1099 2 159 8 337 2 339 2 525 2 797 2 1100 4 902 2 248 2 905 2 1101 2 1390 4 160 2 803 2 721 2 347 2 1203 2 806 2 254 4 71 2 640 2 165 4 808 2 1205 2 1207 2 352 6 536 6 1116 2 538 4 1401 4 444 4 1015 6 543 2 173 2 450 2 1311 2 1498 26 553 6 85 2 452 4 649 4 454 2 1128 2 1019 2 1130 2 1410 2 1221 2 823 6 1223 2 
86 2 557 2 182 2 87 2 653 2 563 4 934 2 1029 2 1231 2 938 2 465 2 1034 2 1420 12 190 6 282 6 94 4 285 4 1236 2 658 4 1244 6 470 8 1323 2 1426 2 756 4 573 6 842 2 297 2 1249 2 384 6 102 2 948 2 1432 4 198 2 20 2 1333 2 201 2 1335 2 852 6 1254 2 1338 6 1438 2 1149 2 1047 8 677 6 764 10 765 4 205 4 1341 4 955 2 1342 2 855 2 769 2 1440 2 958 2 1052 2 27 2 210 2 862 2 863 48 590 6 963 2 30 8 1264 2 1450 2 687 2 600 12 314 2 498 6 39 4 973 2 1362 2 975 2 692 2 693 8 606 8 410 6 876 2 981 2 1276 2 784 2 49 2 611 6 1280 2 142 2 1281 6 1468 4 880 2 234 2 322 2 788 2 988 2 1286 6 1289 2 154 2 791 6 1291 2 1093 6 893 2 242 4 1098 4 795 6 712 2 999 6 1099 2 159 8 337 2 339 2 525 2 797 2 1100 4 902 2 248 2 905 2 1390 4 1101 2 160 2 803 2 721 2 347 2 1203 2 806 2 254 4 71 2 640 2 165 4 808 2 1205 2 1207 2 352 6 536 6 1116 2 538 4 1401 4 444 4 1015 6 543 2 173 2 450 2 1311 2 1498 26 553 6 85 2 452 4 649 4 454 2 1128 2 1019 2 1130 2 1410 2 1221 2 823 6 1223 2 
557 2 1 2 182 2 563 4 934 2 938 2 1316 6 190 6 940 6 1323 2 756 4 573 6 384 6 948 2 198 2 20 2 1333 2 201 2 1335 2 1338 6 1149 2 1341 4 205 4 765 4 764 8 1342 2 955 2 769 2 958 2 27 2 210 2 963 2 590 12 30 10 1352 6 1355 2 600 16 973 2 39 4 1362 2 975 2 41 2 606 8 410 12 981 2 784 2 611 6 49 2 234 2 788 2 988 2 791 6 242 4 795 6 999 6 797 2 248 2 1390 4 803 2 1203 2 254 4 806 2 71 2 640 2 808 2 1205 2 1207 2 1400 6 1401 4 444 4 1015 6 450 2 452 4 85 2 649 4 454 2 1019 2 1410 2 1221 2 1223 2 823 12 86 2 653 2 87 2 830 6 1231 2 1029 2 1034 2 465 2 1420 10 282 6 94 4 285 4 1236 2 658 6 470 8 1244 12 1426 2 842 2 297 2 1249 4 1042 6 102 2 1432 4 480 2 852 6 1254 2 1438 2 677 8 1047 12 855 4 1440 2 1052 2 862 2 863 52 1450 2 1264 2 125 6 687 2 127 2 314 2 498 12 693 10 692 2 1465 6 876 2 1276 2 1280 2 142 4 1281 6 1468 4 322 2 1470 2 151 6 1286 6 154 2 1289 2 1291 2 1093 6 893 2 1098 4 1099 2 712 2 159 10 337 2 1481 2 339 2 525 2 1100 4 902 4 905 2 1101 2 160 4 721 2 1104 2 911 2 347 2 165 4 352 6 536 8 1116 2 538 4 543 2 173 2 1311 2 1498 24 737 2 553 12 1128 2 1130 2 
1333 2 693 6 201 2 525 2 606 2 87 2 1100 2 1390 4 765 2 205 4 1342 2 1231 2 1440 2 958 2 322 2 190 4 254 2 210 2 788 2 1205 2 863 4 154 2 1291 2 756 2 573 6 242 2 600 4 314 2 1311 2 102 2 999 2 39 4 973 2 159 6 1223 2 
557 2 653 2 87 2 1231 2 1418 2 1234 2 1420 4 190 2 94 4 1422 2 658 4 1426 2 756 2 573 6 842 2 1249 3 102 2 198 2 1333 2 201 2 673 3 1254 2 678 2 677 6 1047 8 765 2 205 4 1341 4 764 2 1342 2 769 2 1440 2 1151 2 958 2 210 2 862 2 863 28 687 2 1358 2 600 4 314 2 973 2 975 2 693 6 606 2 611 6 1280 2 142 3 880 2 322 2 788 2 154 2 791 6 1291 2 242 2 999 2 1099 2 159 6 337 2 525 2 1100 2 905 2 1390 4 1101 2 803 2 160 3 1203 2 1301 2 254 2 165 4 640 2 808 2 1205 2 1207 2 1490 2 536 6 1401 4 538 2 445 2 543 2 173 2 450 2 1311 2 1498 24 85 2 454 2 1128 2 1019 2 1223 2 
314 2 729 2 1342 2 
314 2 729 2 1342 2 
86 2 557 2 1 4 653 2 563 4 1227 2 1420 4 190 6 94 4 285 2 571 2 1426 2 756 2 573 6 842 2 297 2 1432 2 198 2 1433 2 1333 2 1254 2 1438 2 677 2 1047 2 764 2 1341 4 205 4 765 4 1342 4 769 2 1440 2 1052 2 27 2 959 2 862 2 863 24 1156 2 30 4 1450 2 1265 4 687 2 868 2 600 16 1359 4 314 6 601 2 39 4 975 2 692 2 693 12 1270 2 606 4 49 4 611 6 1280 2 1468 4 413 2 234 2 414 2 885 2 1286 2 154 2 791 6 1291 4 55 2 242 4 1098 4 1477 2 999 4 1099 2 159 12 1100 2 905 2 1101 2 1390 4 803 2 160 2 1104 4 724 2 163 2 1299 4 1203 2 254 2 165 4 640 2 808 2 729 2 1207 2 536 2 1401 4 538 6 444 2 543 2 173 2 1017 2 546 2 450 2 1311 2 1498 16 452 4 649 4 1128 2 454 2 1019 2 
863 4 1286 2 444 2 571 2 792 2 764 2 868 2 1141 2 893 2 938 2 896 2 1203 2 1498 2 1420 2 1433 2 1208 2 1236 2 
86 2 557 2 367 2 1 4 653 2 563 4 1227 4 1420 2 190 6 94 4 285 4 289 2 570 2 571 2 1426 2 756 2 573 6 842 2 297 2 1432 2 198 2 1433 2 1333 2 1254 2 1438 2 677 2 1047 2 1341 4 205 4 765 4 1342 4 769 2 1440 2 1052 2 27 2 959 2 862 2 863 24 1156 2 30 4 1450 2 1265 4 687 2 868 2 600 16 1359 4 314 6 601 2 39 4 975 2 692 2 693 12 606 4 876 2 49 4 611 6 1280 2 1468 4 413 2 234 2 414 2 1286 2 154 2 791 6 1291 4 242 4 1098 4 999 4 1099 2 159 12 1100 2 905 2 1101 2 1390 4 803 2 160 4 1104 4 724 2 163 2 1299 4 1203 2 254 2 165 4 640 2 808 2 729 2 1207 2 536 2 1401 4 538 6 543 2 173 2 1017 2 546 2 450 2 818 2 1311 2 175 2 1498 16 452 4 649 4 1128 2 454 2 1019 2 
86 2 557 2 1 4 653 2 563 4 1227 2 1420 4 190 6 94 4 1135 2 285 4 571 2 1426 2 756 2 573 6 842 2 297 2 1432 2 198 2 1433 2 1333 2 302 2 1254 2 1438 2 677 2 1047 2 764 2 1341 4 205 4 765 4 1342 4 769 2 1440 2 1052 2 27 2 959 2 117 2 862 2 863 24 1156 2 593 2 30 4 1450 2 1265 4 687 2 868 2 600 16 1359 4 314 6 601 2 39 4 975 2 692 2 693 12 606 4 876 2 49 4 611 6 1280 2 1468 4 413 2 234 2 414 2 1286 2 154 2 1290 2 791 6 1291 4 242 4 1098 4 999 4 1099 2 159 12 1100 2 905 2 1101 2 1390 4 803 2 160 2 1104 4 724 2 163 2 1299 4 1203 2 254 2 165 4 640 2 808 2 729 2 1207 2 536 2 1401 4 538 6 444 2 543 2 173 2 1017 2 546 2 450 2 1311 2 1498 16 452 4 649 4 1128 2 454 2 1019 2 
739 3 741 6 742 2 744 6 743 4 747 2 748 2 750 3 4 3 5 2 7 2 8 2 9 2 11 2 12 4 758 38 13 2 15 3 16 2 17 2 19 2 18 2 759 2 760 2 761 2 22 6 762 2 23 2 763 2 24 2 764 2 769 2 767 38 28 4 771 2 773 2 774 4 30 298 775 2 31 2 776 16 32 66 777 2 34 1 778 2 35 2 37 2 780 2 781 2 782 172 41 2 44 1 46 2 49 18 48 2 51 2 789 3 791 10 56 318 57 2 793 38 794 2 60 2 63 1 800 2 64 82 803 8 804 2 66 2 67 40 68 2 69 2 807 2 70 2 72 2 73 2 808 2 811 1 74 2 75 82 77 2 81 2 816 2 83 86 82 2 84 1 819 60 85 2 820 2 821 38 822 3 827 2 88 2 828 2 829 16 831 20 92 3 834 10 835 2 94 6 838 10 96 2 97 2 100 2 842 2 844 2 845 1 846 2 847 8 103 80 104 1 850 2 849 6 848 2 106 2 107 2 108 2 853 2 110 2 854 2 111 18 855 84 112 2 114 2 856 18 115 2 857 2 858 2 116 3 859 2 862 2 863 154 118 2 864 1 120 2 119 2 122 2 866 2 867 2 126 2 871 9 872 2 129 2 131 2 130 80 875 22 134 3 135 2 877 2 137 42 879 2 139 2 140 2 142 46 141 2 144 2 882 2 881 4 883 2 145 2 148 2 147 8 152 4 887 2 888 4 889 4 890 2 891 2 155 60 156 2 157 2 158 2 900 2 902 46 903 2 905 2 904 2 906 2 160 110 909 2 911 2 913 2 914 2 165 6 166 2 915 2 917 66 918 4 168 2 919 2 169 2 170 2 171 194 923 6 174 3 926 2 177 12 928 2 180 4 929 4 931 2 933 3 935 4 188 2 937 10 191 32 941 40 942 20 193 2 943 24 945 2 194 2 947 2 948 8 198 2 199 4 200 78 950 2 951 2 203 22 952 14 954 2 204 2 206 360 957 18 208 2 212 2 213 60 960 3 214 24 961 1 215 2 963 2 216 2 965 2 966 3 217 2 969 76 219 1 220 8 221 2 970 2 222 3 223 2 974 12 975 8 226 2 227 2 980 2 228 3 229 2 981 22 230 2 982 2 985 228 236 13 235 2 989 2 988 2 987 2 238 3 239 3 990 2 240 4 991 2 993 2 241 2 997 2 243 2 244 2 998 2 245 2 1000 2 249 2 250 2 1006 2 1007 2 1009 8 1011 2 255 188 257 4 259 2 260 2 264 4 263 40 265 2 267 3 1023 2 270 2 271 2 1025 16 272 2 1027 3 275 2 276 2 277 2 1028 40 1030 2 1032 4 1031 38 279 38 281 2 280 2 284 2 286 2 287 2 1037 2 290 2 1038 2 294 2 295 2 296 2 299 2 301 2 303 2 305 38 1044 2 1047 126 1050 2 1051 2 306 112 1053 10 1056 24 1057 162 1059 38 1058 4 308 2 1061 2 309 2 311 2 310 80 1064 2 1065 2 1067 2 312 4 313 14 1071 2 317 2 1073 2 1074 2 1076 4 323 2 324 2 1084 10 326 2 327 2 1085 2 1087 2 1088 2 1090 2 1089 2 1091 4 1094 2 330 6 1095 2 1096 2 1097 2 333 22 334 22 335 2 1099 4 338 2 340 2 341 2 343 2 342 2 1102 2 1103 2 344 2 346 52 1107 2 347 2 1109 22 348 3 1111 2 1112 2 351 6 354 2 1117 2 358 2 1122 2 1121 2 361 2 362 2 1125 3 1126 2 1128 2 363 2 1130 2 1131 2 368 10 372 2 374 15 1133 2 376 2 1137 42 377 2 1139 3 1138 2 1140 2 380 2 1143 2 1144 40 388 38 1148 2 1149 4 391 2 1150 4 392 38 1151 2 395 2 1155 2 1157 24 397 7 398 2 399 80 401 2 1160 2 402 18 1164 2 403 2 1167 2 1168 2 1169 6 1170 3 404 26 405 2 1172 2 1173 2 406 2 407 2 408 2 1175 2 1177 2 1178 3 412 2 1182 2 1184 2 415 76 416 2 418 2 1186 2 420 3 421 2 424 2 423 2 1189 2 1190 1 1191 2 1192 2 426 12 427 2 1194 2 1196 2 431 3 1197 2 432 2 433 2 1199 2 436 4 1202 2 1203 2 1204 2 439 2 438 38 440 4 441 2 442 4 1206 2 1207 2 1211 4 443 80 447 2 449 2 450 2 1212 2 1215 34 451 3 453 2 454 6 455 2 1216 2 1219 26 456 4 1222 6 1225 4 458 2 1226 4 1229 3 460 10 1230 2 461 1 462 14 1232 22 1233 10 464 38 465 8 466 6 1237 2 1238 2 1242 2 1247 2 1248 3 473 132 1249 16 1250 2 1251 2 1252 2 478 2 479 2 480 2 483 24 487 3 488 2 1257 2 1258 2 490 2 1263 2 492 2 1264 8 493 2 496 2 495 6 1267 10 499 2 1269 4 502 48 1272 2 1271 4 1273 61 1274 4 504 3 505 162 506 2 1276 2 1279 2 1280 4 1282 2 508 2 510 2 1284 4 513 2 515 3 517 1 1289 16 518 2 1292 8 521 16 523 8 526 2 527 3 528 2 1296 2 529 2 531 2 1297 3 1298 2 1300 2 1301 2 534 8 533 2 1302 2 1303 2 536 32 537 2 538 2 1304 10 1305 2 1306 2 539 4 542 2 544 2 543 6 1308 2 1309 2 545 2 547 2 1312 34 1314 12 552 2 554 2 556 10 1315 2 557 2 558 2 560 14 562 14 564 2 565 34 1317 3 568 2 1319 2 569 3 1320 2 1322 2 1325 2 1324 2 1328 2 578 2 1329 38 1331 2 1334 2 581 12 582 1 584 2 1337 2 1341 8 1343 2 1345 2 1347 2 1348 2 1349 2 592 4 1350 2 1351 2 595 42 1354 2 1355 2 596 2 1356 2 598 6 1357 2 1358 2 1360 2 1361 80 1363 2 604 4 1364 18 607 2 609 2 1366 2 1367 2 611 14 612 8 1370 2 1373 2 1374 86 1375 2 615 2 1376 2 616 2 618 2 1377 2 1379 6 619 2 1378 4 1380 80 621 4 1381 2 622 2 1384 36 1385 2 623 2 1386 2 1387 2 626 76 629 2 1389 2 630 14 1393 12 633 2 634 2 1394 20 1396 2 1395 2 639 22 640 2 1397 2 641 2 642 10 1401 8 644 2 645 14 1404 2 646 3 647 2 1409 3 1408 2 1410 2 1411 2 1412 2 652 4 653 4 1413 2 654 15 1416 2 1415 2 1418 2 1419 2 1420 10 656 2 1421 2 1423 80 659 4 658 12 661 1 662 2 666 3 1427 2 670 3 1428 20 669 78 1429 2 1431 2 1430 4 671 2 672 2 1434 3 1436 2 673 2 674 3 1437 118 677 18 679 2 1441 54 1442 8 683 2 684 2 685 12 1443 6 1444 2 686 14 687 2 1454 2 1453 2 1457 8 1456 2 690 2 691 2 1458 2 1460 2 1462 2 1463 2 1464 2 1466 2 699 2 700 2 701 2 702 2 704 2 1470 2 705 8 1471 102 1472 14 706 2 1473 2 1474 2 708 10 1475 2 1476 2 710 2 1478 2 1480 2 1481 2 716 2 719 22 1482 4 1483 2 720 2 1484 16 722 2 1485 2 723 3 1486 2 1487 2 1489 6 726 60 727 2 728 16 732 2 733 40 1493 2 734 2 735 2 1495 2 736 120 1496 2 1498 100 737 4 1497 2 
368 4 526 2 902 6 585 2 160 2 1047 2 677 2 460 2 142 2 1202 2 1349 2 863 2 618 2 536 2 658 2 1084 2 1088 2 1087 2 596 2 1476 2 1249 2 1125 2 1498 2 85 2 
368 4 526 2 902 6 585 2 160 2 1047 2 677 2 460 2 142 2 1202 2 1349 2 863 2 618 2 536 2 658 2 1084 2 1088 2 1087 2 596 2 1476 2 1249 2 1125 2 1498 2 85 2 
368 4 526 2 902 6 585 2 160 2 1047 2 677 2 460 2 142 2 1202 2 1349 2 863 2 618 2 536 2 658 2 1084 2 1088 2 1087 2 596 2 1476 2 1249 2 1125 2 1498 2 85 2 
628 2 741 4 581 2 744 2 430 2 826 4 561 2 483 3 160 3 1047 2 1393 2 1232 4 856 4 346 2 142 3 1109 4 466 2 440 2 837 2 861 2 214 3 863 10 618 2 1471 6 171 2 943 6 331 2 1016 2 923 2 1163 3 333 4 334 4 426 2 1498 4 85 2 779 2 1171 2 1169 2 974 2 456 2 
741 4 744 2 561 2 826 4 142 2 1232 4 466 2 837 2 1471 6 618 2 943 4 331 2 708 2 333 4 426 2 334 4 628 2 581 2 430 2 483 2 160 2 1047 2 1393 2 346 2 856 4 1109 4 440 2 861 2 863 10 214 2 1493 2 171 2 1016 2 923 2 1163 2 1498 4 85 2 779 2 1169 2 1171 2 974 2 456 2 1222 2 
741 4 744 2 561 2 826 4 142 2 1232 4 466 2 837 2 1471 6 618 2 943 4 331 2 708 2 333 4 426 2 334 4 628 2 581 2 430 2 483 2 160 2 1047 2 1393 2 346 2 856 4 1109 4 440 2 861 2 863 10 214 2 1493 2 171 2 1016 2 923 2 1163 2 1498 4 85 2 779 2 1169 2 1171 2 974 2 456 2 1222 2 
741 4 744 2 561 2 826 4 142 2 1232 4 466 2 837 2 1471 6 618 2 943 4 331 2 708 2 333 4 426 2 334 4 628 2 581 2 430 2 483 2 160 2 1047 2 1393 2 346 2 856 4 1109 4 440 2 861 2 863 10 214 2 1493 2 171 2 1016 2 923 2 1163 2 1498 4 85 2 779 2 1169 2 1171 2 974 2 456 2 1222 2 
741 4 744 2 561 2 826 4 142 2 1232 4 466 2 837 2 1471 6 618 2 943 4 331 2 708 4 333 4 426 2 334 4 628 2 581 2 430 2 483 2 160 2 1047 2 1393 2 346 2 856 4 1109 4 440 2 861 2 863 10 214 2 1493 4 171 2 1016 2 923 2 1163 2 1498 4 85 2 779 2 1169 2 1171 2 974 2 456 2 1222 4 
239 2 1167 2 1447 2 1407 2 1443 2 891 2 
592 2 1464 2 239 2 1374 2 713 2 1444 2 672 2 
1020 2 247 1 798 1 583 2 136 2 25 2 411 2 1049 2 232 2 189 2 1083 2 256 1 862 2 863 10 1036 1 356 2 123 2 1159 2 1092 2 1266 2 688 2 298 1 576 2 1498 8 14 2 553 2 
481 2 22 4 1225 2 741 4 744 6 436 2 1393 6 856 12 93 2 466 6 534 2 1347 2 469 2 863 6 1211 2 1379 4 1493 2 734 2 943 16 778 2 923 6 708 3 426 6 1498 6 780 2 1169 6 974 6 1146 2 456 2 1222 2 
863 1 184 2 621 2 370 2 471 2 932 7 1246 1 1179 2 113 2 1232 2 635 2 334 2 1109 2 1498 1 252 4 1185 2 1145 2 603 2 
184 4 370 2 621 4 471 2 932 6 1179 4 113 2 1232 2 635 2 334 2 1109 2 252 4 1185 2 1145 2 603 2 
863 1 184 8 370 2 621 8 471 8 932 10 1246 1 1179 8 113 6 1232 2 635 2 334 2 1109 2 1498 1 252 4 1185 2 1145 2 603 2 
184 2 370 2 621 2 932 2 1179 2 1232 2 635 2 334 2 1109 2 252 2 1185 2 1145 2 603 2 
653 4 185 6 827 2 459 2 373 4 833 12 1318 2 283 6 94 36 468 4 9 2 657 6 1321 4 663 2 379 6 1425 4 841 12 944 6 1041 6 101 42 946 12 1043 3 1330 2 21 2 851 5 304 2 389 12 1045 2 109 6 676 2 953 2 484 4 680 6 588 6 209 8 211 6 29 1 863 90 591 13 964 22 1262 2 1446 6 121 2 1353 2 33 6 124 6 967 4 1451 12 597 12 1455 6 1165 6 971 4 500 6 783 12 1075 2 1277 2 611 88 1280 10 509 2 884 6 50 2 512 12 329 6 422 2 995 6 519 2 625 1 895 6 711 6 59 4 336 6 1099 10 1001 4 901 6 250 2 1391 4 1200 6 910 6 162 2 530 12 165 42 1118 6 1491 6 643 4 80 4 446 6 543 20 1123 6 550 6 925 2 1498 78 648 6 1214 4 551 4 454 20 1218 3 
364 2 740 2 181 2 1461 2 409 2 1072 2 653 2 1174 2 827 2 1414 2 610 4 187 2 1277 2 1467 2 611 44 138 2 1280 2 984 2 884 2 94 20 149 4 95 2 512 2 417 2 237 2 325 2 9 2 657 2 1243 2 660 2 663 2 98 2 1382 2 1383 2 519 2 841 4 944 2 1326 4 101 6 946 2 336 2 1099 2 62 2 579 2 1435 2 1003 2 901 2 202 2 250 2 1391 38 109 2 586 2 676 2 953 4 766 2 251 2 770 2 912 2 530 4 209 6 638 2 211 2 164 2 165 20 350 2 1445 2 29 2 394 2 863 46 591 2 541 2 33 2 865 2 1353 2 172 2 1451 4 543 2 1162 2 1123 2 1268 2 1165 2 1166 6 1498 44 648 2 1313 2 689 2 873 2 454 2 1070 4 501 2 503 2 651 2 
653 2 185 4 827 2 1414 10 373 4 1132 16 833 24 1318 2 94 36 283 8 468 4 9 2 657 4 1321 4 663 2 1425 4 379 4 472 4 841 10 944 4 1041 4 101 24 757 32 946 10 579 10 21 2 1435 2 851 8 304 4 1045 4 389 8 1046 8 109 4 676 2 484 4 953 2 680 4 209 6 489 8 211 4 863 78 591 10 964 30 1262 4 1446 4 494 2 1353 2 33 4 967 4 1451 10 597 24 1161 4 1455 4 971 4 1165 4 500 8 503 2 783 14 320 2 611 104 138 2 1280 6 509 2 884 4 613 4 512 6 150 16 329 4 995 16 519 2 996 2 624 2 895 4 59 4 711 4 336 6 1099 6 1002 4 901 4 250 2 1391 14 631 8 1200 4 910 4 1008 4 162 2 530 10 725 4 165 44 349 4 350 10 1118 4 1491 4 1492 2 80 4 446 4 543 30 1123 4 548 8 1213 2 925 2 551 4 1214 4 1498 70 648 4 454 28 651 2 
653 2 827 2 138 2 611 40 1467 2 1280 2 1181 2 1318 2 884 2 50 2 94 14 512 2 617 2 419 2 9 2 657 4 663 2 519 2 841 6 944 2 101 8 946 2 336 2 1099 2 477 2 1043 2 1330 2 1001 10 851 6 901 4 304 2 250 2 1391 14 1045 4 109 2 676 2 953 2 766 2 530 6 209 4 211 4 165 14 29 2 863 28 591 2 964 6 1262 2 643 2 33 2 1353 2 1451 6 543 12 1123 4 1165 4 1498 26 648 4 454 12 1218 2 503 2 
386 2 

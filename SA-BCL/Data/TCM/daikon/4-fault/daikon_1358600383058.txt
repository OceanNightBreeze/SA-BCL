#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.NullPointerException (104,1396) (104,1396) (509,611) 463 629 (2,55,144,149,172,245,252,317,340,341,361,369,418,439,458,477,496,520,545,580,622,623,639,641,661,669,686,728,741,744,775,814,815,832,839,850,851,857,894,903,922,1208,1220,1372,1415,1439,1460,1534,1568,1620,1623) 556 629 (2,55,144,149,172,245,252,317,340,341,361,369,418,439,458,477,496,520,545,580,622,623,639,641,661,669,686,728,741,744,775,814,815,832,839,850,851,857,894,903,922,1208,1220,1372,1415,1439,1460,1534,1568,1620,1623) 501 (2,55,144,149,172,245,252,317,340,341,361,369,418,439,458,477,496,520,545,580,622,623,639,641,661,669,686,728,741,744,775,814,815,832,839,850,851,857,894,903,922,1208,1220,1372,1415,1439,1460,1534,1568,1620,1623) 91 (2,55,144,149,172,245,252,317,340,341,361,369,418,439,458,477,496,520,545,580,622,623,639,641,661,669,686,728,741,744,775,814,815,832,839,850,851,857,894,903,922,1208,1220,1372,1415,1439,1460,1534,1568,1620,1623) 919 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 466 747 352 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 1325 895 791 
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_0()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_1()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_2()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_3()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_4()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_5()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_6()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_7()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_8()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_9()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_10()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_11()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_12()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_13()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_14()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_15()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_16()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_17()V PASSED
daikon.test.split.SplitterFactoryTest:testmisc_Fib_main_18()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_19()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_20()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_21()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_22()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_23()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_24()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_25()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_26()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_27()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_28()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_29()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_30()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_31()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_32()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__33()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__34()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__35()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__36()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__37()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__38()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__39()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__40()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__41()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__42()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__43()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.VarInfoName:hashCode()I
daikon.VarInfo:java_name()Ljava.lang.String;
jtb.JavaParser:jj_3R_126()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.diff.RootNode:RootNode()V
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:jj_3R_109()Z
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltsLteIndex([I)Z
daikon.VarInfoName:hasNodeOfType(Ljava.lang.Class;)Z
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.JavaParser:jj_3R_61()Z
jtb.JavaParser:jj_3_17()Z
jtb.JavaParser:jj_3R_57()Z
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:eltsGTE([II)Z
utilMDE.WeakHasherMap:processQueue()V
utilMDE.UtilMDE:escapeNonASCII(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltsGtIndex([I)Z
daikon.inv.unary.stringsequence.EltOneOfString:sort_rep()V
jtb.syntaxtree.TypeArgument:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
utilMDE.UtilMDE.NullableStringComparator:compare(Ljava.lang.String;Ljava.lang.String;)I
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:missing_numbers([I)[I
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.VariableDeclaratorId:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_115()Z
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:format_daikon()Ljava.lang.String;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryPrefix;)V
daikon.ProglangType:dimensions()I
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.Debug:logDetail()Z
daikon.inv.unary.stringsequence.EltOneOfString:enabled()Z
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.ModBitTracker:num_samples()I
utilMDE.FuzzyFloat:gt(DD)Z
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.NoDuplicates:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern:internSubsequence([JII)[J
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3_1()Z
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
jtb.syntaxtree.NodeListOptional:present()Z
daikon.Quant:memberOf(J[J)Z
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.stringsequence.EltOneOfString:get_proto()Ldaikon.inv.Invariant;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.VarInfo:apply_subscript(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:VariableDeclaratorId()Ljtb.syntaxtree.VariableDeclaratorId;
daikon.inv.unary.sequence.NoDuplicates:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.ProglangType:isIntegral()Z
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.NodeListOptional:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
jtb.syntaxtree.FormalParameter:FormalParameter(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Type;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.VariableDeclaratorId;)V
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.InclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:max([I)I
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eltsGteIndex([I)Z
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameters;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.simplify.LemmaStack:noticeInt(J)V
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:isString()Z
daikon.PptTopLevel:getInvariants()Ljava.util.List;
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:gcd(JJ)J
daikon.Quantify.QuantFlags:distinct()Ljava.util.EnumSet;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.Quant:eq(II)Z
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:enabled()Z
jtb.JavaParser:jj_3_15()Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
jtb.syntaxtree.ClassOrInterfaceBody:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:modulus([I)[I
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
jtb.syntaxtree.Block:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_149()Z
daikon.Quant:pairwiseDivides([I[I)Z
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:isDerived()Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeBound;)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
jtb.JavaParser:jj_3R_210()Z
jtb.JavaParser:jj_2_25(I)Z
jtb.syntaxtree.VariableDeclaratorId:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.BlockStatement;)V
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3_29()Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeToken:numSpecials()I
daikon.VarInfoName:inOrderTraversal()Ljava.util.Collection;
daikon.Quantify:quantify([Ldaikon.VarInfo;)[Ldaikon.Quantify.QuantifyReturn;
daikon.ProglangType:baseIsIntegral()Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
jtb.syntaxtree.TypeDeclaration:TypeDeclaration(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.ArraysMDE:subarray([III)[I
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.LimitedSizeIntSet:size()I
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.CompilationUnit;)V
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
jtb.JavaParser:jj_3R_80()Z
jtb.JavaCharStream:getBeginLine()I
jtb.JavaParser:jj_3R_100()Z
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:enabled()Z
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
jtb.JavaCharStream:getBeginColumn()I
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
daikon.ModBitTracker:num_vars()I
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.Quant:subsetOf([D[D)Z
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
jtb.JavaParser:jj_2_14(I)Z
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
jtb.syntaxtree.ImportDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.Quant:eq(JJ)Z
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_97()Z
daikon.PptName:isEnterPoint()Z
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.OrderedPairIterator:setnext2()V
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
jtb.syntaxtree.TypeBound:accept(Ljtb.visitor.Visitor;)V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.EltNonZero:is_pointer()Z
daikon.Quantify.IOAQuantification:getQuantifierExp()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
jtb.syntaxtree.TypeDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.JavaParser:jj_3R_163()Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.Assert:assertTrue(Z)V
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.inv.unary.sequence.EltUpperBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:isReverse([I[I)Z
daikon.VarInfoName.Elements:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.unary.stringsequence.EltOneOfString:format_esc()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.UnaryExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.EltNonZero:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.tools.jtb.SimpleTreeDumper:printToken(Ljava.lang.String;)V
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.inv.unary.sequence.EltOneOf:format_ioa()Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.Quantify.QuantFlags:adjacent()Ljava.util.EnumSet;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.ProglangType:isScalar()Z
jtb.JavaParser:jj_3R_88()Z
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InclusiveOrExpression;)V
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.PptSlice1:num_samples()I
daikon.inv.unary.sequence.EltOneOf:format_daikon()Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclarator;)V
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;II)V
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:min([I)I
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.TypeParameter:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_2_1(I)Z
daikon.inv.Invariant:logOn()Z
jtb.JavaParser:jj_3R_68()Z
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
jtb.syntaxtree.Expression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:eltwiseGT([I)Z
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.Quant:lexEqual([I[I)Z
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:lexGTE([I[I)Z
jtb.JavaParser:jj_3R_55()Z
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.inv.unary.string.OneOfString:OneOfString(Ldaikon.PptSlice;)V
daikon.Quant:eltwiseEqual([I)Z
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltsNotEqual([II)Z
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.Quant:pairwiseLT([I[I)Z
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
utilMDE.MathMDE:mod_positive(II)I
jtb.syntaxtree.NodeListOptional:getParent()Ljtb.syntaxtree.Node;
daikon.inv.unary.stringsequence.EltOneOfString:EltOneOfString(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.Invariant:prob_is_ge(DD)D
jtb.JavaParser:jj_3R_63()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.EqualityExpression;)V
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.Quant:subsetOf([F[F)Z
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
utilMDE.MathMDE:negate(I)I
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Elements:ioa_name_impl()Ljava.lang.String;
jtb.visitor.TreeDumper:TreeDumper(Ljava.io.Writer;)V
daikon.inv.unary.sequence.EltOneOf:EltOneOf(Ldaikon.PptSlice;)V
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.OrderedPairIterator:setnext1()V
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:ungenerify(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
daikon.tools.jtb.PptNameMatcher:PptNameMatcher(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:enabled()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AndExpression;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AdditiveExpression;)V
jtb.syntaxtree.NodeOptional:present()Z
jtb.JavaParser:jj_3R_49()Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:subsetOf([J[J)Z
daikon.ModBitTracker:ModBitTracker(I)V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltOneOf:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_daikon()Ljava.lang.String;
daikon.test.InvariantFormatTester:execute()Z
utilMDE.FuzzyFloat:ne(DD)Z
daikon.PptSlice0:initInvariantsSeen()V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
utilMDE.ArraysMDE:sorted([I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ResultType;)V
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.Quant:lexGT([I[I)Z
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.ValueTuple:size()I
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArguments;)V
jtb.syntaxtree.ClassOrInterfaceType:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:EltwiseIntLessThan(Ldaikon.PptSlice;)V
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.BlockStatement:accept(Ljtb.visitor.Visitor;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.ValueTuple:tuplemodHasModified(I)Z
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3_27()Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_simplify()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.tools.jtb.Ast:print(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
utilMDE.MathMDE:pow(II)I
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
jtb.syntaxtree.ClassOrInterfaceBody:ClassOrInterfaceBody(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_51()Z
daikon.tools.jtb.Ast:getClassName(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_2_15(I)Z
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_117()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Modifiers;)V
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.MathMDE:gcd([I)I
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
utilMDE.MathMDE:mod_positive(JJ)J
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;)Z
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:base()Ljava.lang.String;
daikon.inv.unary.string.SingleString:SingleString(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.test.TestAst.MethodDeclarationHarvester:visit(Ljtb.syntaxtree.MethodDeclaration;)V
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.Quantify.IOAQuantification:getClosingExp()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quantify.IOAQuantification:IOAQuantification([Ldaikon.VarInfo;)V
jtb.JavaParser:jj_3R_137()Z
jtb.JavaParser:jj_scan_token(I)Z
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
jtb.syntaxtree.AdditiveExpression:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameters;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
daikon.inv.unary.stringsequence.SingleStringSequence:valid_types([Ldaikon.VarInfo;)Z
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.PptName:PptName(Ljava.lang.String;)V
jtb.syntaxtree.NodeToken:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
jtb.syntaxtree.TypeArguments:TypeArguments(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeArgument;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.LowerBound:enabled()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.NodeSequence:getParent()Ljtb.syntaxtree.Node;
jtb.syntaxtree.ClassOrInterfaceDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.sequence.NoDuplicates:enabled()Z
daikon.test.FormatTestCase:passes()Z
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.ProglangType:isPseudoArray()Z
jtb.syntaxtree.NodeListOptional:elements()Ljava.util.Enumeration;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfo:isIOASet()Z
jtb.JavaCharStream:UpdateLineColumn(C)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Expression;)V
daikon.Quant:memberOf(I[I)Z
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
jtb.JavaParser:jj_3R_53()Z
jtb.syntaxtree.ReturnStatement:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.unary.sequence.EltOneOf:is_hashcode()Z
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
utilMDE.UtilMDE:lineNumberFileReader(Ljava.io.File;)Ljava.io.LineNumberReader;
daikon.Quant:subsetOf([B[I)Z
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;)V
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_esc()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_ioa()Ljava.lang.String;
jtb.syntaxtree.TypeDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.stringsequence.EltOneOfString:format_daikon()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParser:jj_3R_107()Z
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.NoDuplicates:format_simplify()Ljava.lang.String;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.inv.unary.sequence.EltUpperBound:EltUpperBound(Ldaikon.PptSlice;)V
daikon.inv.unary.UpperBoundCore:wouldChange(J)Z
jtb.syntaxtree.ExclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.Quant:memberOf(F[D)Z
daikon.inv.unary.sequence.EltwiseIntLessThan:format_simplify()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalExpression;)V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
utilMDE.Intern:intern([J)[J
daikon.inv.unary.sequence.EltNonZero:EltNonZero(Ldaikon.PptSlice;)V
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3_30()Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
jtb.JavaParser:jj_3_18()Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Name;)V
utilMDE.Intern:intern([I)[I
daikon.Quant:eltsLTE([II)Z
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;Ljava.lang.String;)V
jtb.syntaxtree.ResultType:accept(Ljtb.visitor.Visitor;)V
daikon.inv.Invariant:simplify_format_string(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:sameLength([I[I)Z
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_56()Z
jtb.syntaxtree.ReferenceType:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.NodeSequence:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3_22()Z
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
utilMDE.Intern:internSubsequence([III)[I
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.sequence.NoDuplicates:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltsLtIndex([I)Z
jtb.JavaParser:jj_3R_133()Z
jtb.JavaParser:jj_3R_47()Z
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpression;)V
jtb.JavaParser:jj_3_10()Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.inv.unary.sequence.EltUpperBound:format_esc()Ljava.lang.String;
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
jtb.syntaxtree.Modifiers:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.Quant:eltwiseLT([I)Z
jtb.JavaParser:jj_3R_180()Z
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
jtb.JavaParser:jj_3_20()Z
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.Quantify.Term:ioa_name()Ljava.lang.String;
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.inv.unary.sequence.EltwiseIntLessThan:format_ioa()Ljava.lang.String;
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.Quant:eltwiseLTE([I)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:memberOf(S[S)Z
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_81()Z
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.VarInfo:simplify_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.Quant:memberOf(F[F)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Literal;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBody;)V
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeChoice:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_72()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameter;)V
jtb.JavaParser:jj_3R_114()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeSequence;)V
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
utilMDE.LimitedSizeIntSet:add(I)V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfo:isIOAArray()Z
daikon.tools.jtb.Ast:format(Ljtb.syntaxtree.Node;)Ljava.lang.String;
jtb.JavaParser:jj_3R_120()Z
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.VarInfo:isDerivedSubSequenceOf()Ldaikon.VarInfo;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
jtb.JavaParser:jj_3R_58()Z
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.inv.unary.sequence.EltOneOf:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltNonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Type;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.ConditionalAndExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
jtb.syntaxtree.Type:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:subsetOf([S[S)Z
daikon.inv.unary.stringsequence.EltOneOfString:format_ioa()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MultiplicativeExpression;)V
daikon.Quant:lexLT([I[I)Z
jtb.JavaParser:jj_2_12(I)Z
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.JavaParser:jj_3R_74()Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_2_16(I)Z
jtb.JavaParser:jj_2_21(I)Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_125()Z
daikon.inv.unary.sequence.EltOneOf:enabled()Z
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.inv.ValueSet:ValueSet(I)V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PackageDeclaration;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:copy(Ljava.util.HashMap;)Ljava.util.HashMap;
jtb.JavaParser:jj_3R_134()Z
daikon.tools.jtb.Ast:create(Ljava.lang.String;[Ljava.lang.Class;[Ljava.lang.Object;Ljava.lang.String;)Ljtb.syntaxtree.Node;
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
utilMDE.Intern:intern([D)[D
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
daikon.Quant:ne(II)Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:gt(II)Z
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.EltNonZero:format_simplify()Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:name()Ljava.lang.String;
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.Token:newToken(I)Ljtb.Token;
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarComparabilityNone:elementType()Ldaikon.VarComparability;
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
jtb.JavaParser:jj_2_5(I)Z
daikon.inv.unary.string.OneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalOrExpression;)V
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
jtb.syntaxtree.TypeArgument:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
jtb.JavaParser:jj_3_4()Z
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParser:jj_3R_98()Z
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Block;)V
jtb.syntaxtree.RelationalExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.stringsequence.EltOneOfString:add_modified([Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalAndExpression;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:enabled()Z
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
jtb.syntaxtree.CompilationUnit:CompilationUnit(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.FormalParameter:accept(Ljtb.visitor.Visitor;)V
utilMDE.OrderedPairIterator:hasNext()Z
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
utilMDE.ArraysMDE:sum([I)I
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
jtb.JavaCharStream:getEndColumn()I
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
daikon.inv.unary.stringsequence.SingleStringSequence:SingleStringSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:jj_2_3(I)Z
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.ArraysMDE:fn_identity(I)[I
jtb.syntaxtree.EqualityExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
utilMDE.UtilMDE:removeWhitespaceBefore(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.Quant:concat([I[I)[I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NullLiteral;)V
jtb.JavaParser:jj_3_14()Z
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments;
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:sum([[D)D
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
jtb.JavaParser:jj_3R_122()Z
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
daikon.inv.unary.sequence.NoDuplicates:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.EltNonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.inv.ValueSet.ValueSetStringArray:ValueSetStringArray(I)V
daikon.diff.InvMap:InvMap()V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_simplify()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.VarInfo:has_typeof()Z
utilMDE.ArraysMDE:concat([I[I)[I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:subarray_rep()Ljava.lang.String;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.inv.unary.sequence.NoDuplicates:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.TypeArguments:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.string.OneOfString:add_modified(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeListOptional;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.Quant:lt(II)Z
jtb.JavaParser:jj_3_3()Z
daikon.tools.jtb.Ast:removeWhitespace(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.inv.unary.string.OneOfString:sort_rep()V
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
jtb.JavaParser:jj_3R_162()Z
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.Quant:eltsGT([II)Z
daikon.ValueTuple:isMissingFlow(I)Z
daikon.Quantify.QuantifyReturn:QuantifyReturn(Ldaikon.VarInfo;)V
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ExclusiveOrExpression;)V
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.stringsequence.EltOneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InstanceOfExpression;)V
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
jtb.JavaParser:FormalParameter()Ljtb.syntaxtree.FormalParameter;
jtb.JavaParser:jj_3R_118()Z
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryExpression;)V
daikon.inv.unary.sequence.EltOneOf:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
jtb.syntaxtree.InstanceOfExpression:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.RelationalExpression;)V
jtb.JavaParser:jj_3R_96()Z
jtb.JavaParser:jj_2_36(I)Z
daikon.inv.unary.sequence.EltUpperBound:format_ioa()Ljava.lang.String;
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.syntaxtree.PostfixExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
jtb.visitor.TreeDumper:printToken(Ljava.lang.String;)V
daikon.inv.unary.string.OneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
jtb.JavaParser:jj_3R_70()Z
daikon.Quantify.IOAQuantification:getFreeVarName(I)Ljava.lang.String;
jtb.syntaxtree.MethodDeclarator:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.NonModulus:enabled()Z
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.Quant:eq(DD)Z
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.ProglangType:baseIsString()Z
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.tools.jtb.Ast:quickFixForInternalComment(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.ValueSet.ValueSetString:ValueSetString(I)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfo:isPrestate()Z
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.inv.unary.stringsequence.EltOneOfString:subarray_rep()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReferenceType;)V
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_50()Z
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.string.OneOfString:runValue(Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;)V
daikon.inv.unary.UpperBoundCore:computeProbability()D
utilMDE.UtilMDE:split(Ljava.lang.String;Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfo:esc_name()Ljava.lang.String;
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.PptMap:asCollection()Ljava.util.Collection;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
jtb.syntaxtree.CompilationUnit:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:noDups([I)Z
daikon.ProglangType:baseIsFloat()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameters;)V
daikon.VarInfoName:isLiteralConstant()Z
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
jtb.JavaParser:jj_3_21()Z
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE.1InternTest:test(Z)V
jtb.JavaParser:jj_3R_69()Z
jtb.JavaParser:jj_3R_62()Z
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.Ppt:Ppt()V
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_85()Z
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.syntaxtree.NodeSequence:elements()Ljava.util.Enumeration;
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
daikon.inv.Invariant:prob_and(DD)D
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltUpperBound:enabled()Z
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.ShiftExpression:accept(Ljtb.visitor.Visitor;)V
daikon.ProglangType:isFloat()Z
daikon.VarInfoName.ElementsFinder:inPre()Z
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.VarInfoName.InorderFlattener:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:jj_3R_99()Z
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
jtb.JavaParser:jj_3R_86()Z
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_119()Z
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.ProglangType:isArray()Z
jtb.syntaxtree.ClassOrInterfaceBody:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.inv.unary.sequence.EltUpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_esc()Ljava.lang.String;
daikon.inv.unary.string.OneOfString:enabled()Z
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:sum([[I)I
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_48()Z
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.PptName:isCombinedExitPoint()Z
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaCharStream:getEndLine()I
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.Quant:setDiff([I[I)[I
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.Quant:eq(FF)Z
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_ioa()Ljava.lang.String;
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:eltwiseNotEqual([I)Z
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
jtb.JavaParser:JavaParser(Ljava.io.Reader;)V
utilMDE.MathMDE:bitwiseComplement(I)I
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
jtb.syntaxtree.TypeParameters:accept(Ljtb.visitor.Visitor;)V
daikon.PptSlice0:arity()I
daikon.VarInfo:new_ppt()V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.Quant:intersection([I[I)[I
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.inv.unary.scalar.UpperBound:enabled()Z
jtb.syntaxtree.PrimaryPrefix:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.inv.OutputFormat:isJavaFamily()Z
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_110()Z
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.PptSlice0.ImplicationWrapper:hashCode()I
utilMDE.FuzzyFloat:gte(DD)Z
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.VarInfo:jml_name()Ljava.lang.String; | RETURN | 102411 | return null
utilMDE.WeakHasherMap:size()I
jtb.JavaParser:jj_3_5()Z
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.unary.string.OneOfString:is_type()Z
daikon.inv.unary.stringsequence.EltOneOfString:format_simplify()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
jtb.JavaParser:jj_2_17(I)Z
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
jtb.JavaParser:jj_3R_161()Z
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
jtb.JavaParser:jj_3R_136()Z
jtb.syntaxtree.NullLiteral:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfo:simplify_name()Ljava.lang.String;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:is_direct_non_slice_array()Z
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.Quant:eltsNotEqualIndex([I)Z
jtb.syntaxtree.ClassOrInterfaceDeclaration:getParent()Ljtb.syntaxtree.Node;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:enabled()Z
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.PptSlice1:arity()I
utilMDE.FuzzyFloat:eq(DD)Z
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
jtb.JavaParser:jj_2_10(I)Z
jtb.JavaCharStream:backup(I)V
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_89()Z
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:pairwiseSquare([I[I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltOneOf:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.UtilMDE:lineNumberFileReader(Ljava.lang.String;)Ljava.io.LineNumberReader;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
utilMDE.MathMDE:gcd(II)I
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.UtilMDE:splitLines(Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarComparabilityNone:indexType(I)Ldaikon.VarComparability;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
utilMDE.FuzzyFloat:set_rel_diff(D)V
jtb.JavaParser:jj_3R_75()Z
daikon.inv.unary.stringsequence.EltOneOfString:is_type()Z
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_123()Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.ModBitTracker:num_sets()I
jtb.syntaxtree.ConditionalOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
daikon.Quant:eltsEqual([II)Z
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual()V
jtb.JavaParser:jj_3R_60()Z
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
jtb.JavaParser:getToken(I)Ljtb.Token;
daikon.VarInfo:isPointer()Z
daikon.Quant:lexLTE([I[I)Z
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.inv.unary.LowerBoundCore:calc_range()J
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
jtb.syntaxtree.MultiplicativeExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.MethodDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_87()Z
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.tools.jtb.SimpleTreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.string.OneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3_35()Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_esc()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
utilMDE.UtilMDE:removeWhitespaceAfter(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.VarInfo:simplify_quantify(Ljava.util.EnumSet;[Ldaikon.VarInfo;)[Ljava.lang.String;
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.sequence.EltNonZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant:logDetail()Z
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quantify.QuantFlags:include_index()Ljava.util.EnumSet;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:subsetOf([F[D)Z
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;Z)Z
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
jtb.syntaxtree.FormalParameters:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
jtb.syntaxtree.Name:accept(Ljtb.visitor.Visitor;)V
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.EltOneOf:sort_rep()V
daikon.Quant:pairwiseGT([I[I)Z
daikon.tools.jtb.Ast:create(Ljava.lang.String;Ljava.lang.String;)Ljtb.syntaxtree.Node;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
jtb.JavaParser:jj_3R_148()Z
jtb.syntaxtree.FormalParameter:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_2_13(I)Z
utilMDE.MathMDE:pow_fast(II)I
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.ValueTuple:isMissing(I)Z
jtb.syntaxtree.ClassOrInterfaceDeclaration:ClassOrInterfaceDeclaration(Ljtb.syntaxtree.NodeChoice;Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ClassOrInterfaceBody;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_164()Z
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
jtb.JavaParser:jj_3R_135()Z
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.VarInfo:domainTypeIOA()Ljava.lang.String;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.test.TestAst.ClassOrInterfaceDeclarationHarvester:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.inv.Invariants:Invariants()V
daikon.diff.InvMap:toString()Ljava.lang.String;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArgument;)V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
utilMDE.ArraysMDE:subarray([JII)[J
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;)V
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.inv.unary.sequence.EltNonZero:format_esc()Ljava.lang.String;
daikon.Quant:lexNotEqual([I[I)Z
daikon.Quantify.IOAQuantification:getVarIndexedString(I)Ljava.lang.String;
daikon.VarInfo:get_all_simple_names()Ljava.util.List;
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:element_range([I)I
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;Ldaikon.VarInfo;)V
jtb.syntaxtree.TypeDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.stringsequence.EltOneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:sum([D)D
jtb.JavaParser:jj_3_28()Z
jtb.syntaxtree.NodeChoice:getParent()Ljtb.syntaxtree.Node;
daikon.Quant:lte(II)Z
jtb.syntaxtree.AndExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarComparabilityNone:comparable(Ldaikon.VarComparabilityNone;Ldaikon.VarComparabilityNone;)Z
jtb.JavaParser:jj_3R_102()Z
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.inv.unary.string.OneOfString:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant:getConfidence()D
jtb.JavaParser:jj_3R_104()Z
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:lt(DD)Z
jtb.JavaParser:jj_3R_54()Z
utilMDE.ArraysMDE:indexOf([II)I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.Quantify.FreeVar:name()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltUpperBound:format_simplify()Ljava.lang.String;
daikon.Quant:eltwiseGTE([I)Z
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Invariant:justified()Z
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
jtb.JavaCharStream:readChar()C
jtb.syntaxtree.NodeList:NodeList()V
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object; | RETURN | 76740 | return null
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.VarInfoName.InorderFlattener:InorderFlattener(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.inv.unary.sequence.NoDuplicates:NoDuplicates(Ldaikon.PptSlice;)V
daikon.VarInfoName:name()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.inv.unary.LowerBoundCore:computeProbability()D
utilMDE.MathMDE:sign(I)I
daikon.inv.unary.string.SingleString:valid_types([Ldaikon.VarInfo;)Z
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.Quant:pairwiseEqual([I[I)Z
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor.1:visit(Ljtb.syntaxtree.TypeParameter;)V
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:is_boolean()Z
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:min_max([I)[I
daikon.inv.unary.sequence.EltUpperBound:format_daikon()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.string.OneOfString:format_simplify()Ljava.lang.String;
jtb.JavaParser:jj_3R_108()Z
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.Quant:pairwiseLTE([I[I)Z
daikon.inv.unary.sequence.EltwiseIntLessThan:format_daikon()Ljava.lang.String;
daikon.inv.unary.string.OneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
jtb.JavaCharStream:FillBuff()V
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.inv.unary.sequence.NoDuplicates:format_ioa()Ljava.lang.String;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
jtb.JavaCharStream:GetImage()Ljava.lang.String;
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.inv.unary.string.OneOfString:format_esc()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.inv.unary.string.OneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltwiseIntComparison:EltwiseIntComparison(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltUpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.VarInfo:ioa_name()Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParser:jj_3R_52()Z
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ImportDeclaration;)V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.VarInfoName:hasTypeOf()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.diff.Node:Node()V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
daikon.tools.jtb.Ast:getPackage(Ljtb.syntaxtree.CompilationUnit;)Ljava.lang.String;
daikon.VarInfoName:ioa_name()Ljava.lang.String;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.UtilMDE:escapeNonASCII(C)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.JavaParser:jj_3R_76()Z
jtb.JavaParser:jj_3R_67()Z
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_ntk()I
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.stringsequence.EltOneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:lte(DD)Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameter;)V | ASSIGN | 4429 | = null
jtb.JavaParser:jj_3R_106()Z
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.VarInfo:apply_subscript(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V
daikon.Quantify.IOAQuantification:getFreeVar(I)Ldaikon.Quantify.Term;
daikon.VarInfoName.InorderFlattener:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:jj_3R_103()Z
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.ProglangType:isPointerFileRep()Z
jtb.JavaParser:jj_3R_73()Z
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ShiftExpression;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.sequence.EltLowerBound:format_simplify()Ljava.lang.String;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltUpperBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.Statement:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_2_35(I)Z
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.Quant:setEqual([I[I)Z
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
jtb.syntaxtree.PrimaryExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan()V
daikon.inv.unary.string.OneOfString:format_ioa()Ljava.lang.String;
daikon.Quant:eltsLT([II)Z
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
utilMDE.Options.OptionInfo:argument_required()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeOptional;)V
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
jtb.JavaCharStream:ReadByte()C
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.EltOneOf:runValue([JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.VarInfoName.Elements:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.string.SingleString:var()Ldaikon.VarInfo;
jtb.JavaParser:jj_3_16()Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_77()Z
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getDiffString()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.Invariant:prob_or(DD)D
jtb.syntaxtree.TypeArguments:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.stringsequence.EltOneOfString:runValue([Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.PackageDeclaration:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.ProglangType:baseIsScalar()Z
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.Literal:accept(Ljtb.visitor.Visitor;)V
daikon.inv.Invariant:isWorthPrinting()Z
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.Intern:numIntArrays()I
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.Quant:subsetOf([D[F)Z
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.Quant:eltsEqualIndex([I)Z
daikon.Quantify.IOAQuantification:getMembershipRestriction(I)Ljava.lang.String;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.NodeOptional:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.VarInfoName.InorderFlattener:nodes()Ljava.util.List;
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.tools.jtb.Ast:getParent(Ljava.lang.Class;Ljtb.syntaxtree.Node;)Ljtb.syntaxtree.Node;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3_25()Z
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.stringsequence.EltOneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfo:get_enclosing_var()Ldaikon.VarInfo;
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.unary.stringsequence.SingleStringSequence:var()Ldaikon.VarInfo;
daikon.inv.unary.string.OneOfString:format_daikon()Ljava.lang.String;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
jtb.JavaParser:jj_3R_169()Z
jtb.syntaxtree.ClassOrInterfaceDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.Positive:enabled()Z
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.tools.jtb.SimpleTreeDumper:SimpleTreeDumper(Ljava.io.Writer;)V
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
jtb.JavaCharStream:BeginToken()C
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.Quant:subsetOf([I[I)Z
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.EltOneOf:format_esc()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.EltOneOf:format_simplify()Ljava.lang.String;
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PostfixExpression;)V
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:union([I[I)[I
daikon.inv.unary.sequence.EltOneOf:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.Quant:gte(II)Z
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
jtb.JavaParser:jj_3R_101()Z
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.inv.Invariant:prob_and(DDD)D
utilMDE.MathMDE:gcd_differences([I)I
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_2_18(I)Z
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.Quant:slice([III)[I
daikon.PptSlice2:arity()I
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.Debug:logOn()Z
daikon.VarInfo:relate_var()V
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_2_4(I)Z
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeDeclaration;)V
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
jtb.JavaParser:jj_3_19()Z
utilMDE.UtilMDE:removeWhitespaceAround(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3_13()Z
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.sequence.EltUpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
jtb.JavaParser:jj_3R_124()Z
jtb.visitor.TreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
jtb.JavaParser:jj_3R_121()Z
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.Quant:memberOf(D[F)Z
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3_12()Z
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.inv.unary.sequence.EltUpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.FuzzyFloat:FuzzyFloat(D)V
jtb.JavaParser:jj_3R_105()Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
jtb.syntaxtree.CompilationUnit:getParent()Ljtb.syntaxtree.Node;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.test.FormatTestCase.SingleOutputTestCase:getDiffString()Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.ModBitTracker:split(I)I
jtb.JavaParser:jj_3_36()Z
jtb.syntaxtree.ConditionalExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.inv.unary.sequence.EltNonZero:format_ioa()Ljava.lang.String;
daikon.PptTopLevel.CondIterator:hasNext()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReturnStatement;)V
jtb.JavaParser:jj_3R_116()Z
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Statement;)V
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
jtb.syntaxtree.VariableDeclaratorId:VariableDeclaratorId(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
189 2 218 2 1554 2 643 2 390 2 53 2 1602 2 1512 2 168 4 
1009 2 202 6 1450 2 331 6 1064 2 751 2 1617 2 644 2 207 6 1419 2 1101 2 
1461 2 1363 6 1508 2 189 2 523 2 218 2 474 6 112 2 20 6 244 4 1594 2 1373 6 100 4 
555 10 30 10 557 8 308 28 1223 2 132 8 993 2 1342 2 1308 2 1061 10 1468 4 564 2 349 4 263 12 166 4 1585 26 1072 2 700 4 1525 16 546 6 1206 10 189 6 525 6 41 16 885 10 218 6 75 2 1294 8 382 16 1595 8 
182 6 272 4 
1225 2 
767 2 926 2 384 2 771 2 1 2 102 2 1031 2 1252 2 993 2 260 2 780 2 1309 4 113 2 995 2 1588 2 218 4 1005 2 1477 2 1384 2 444 2 357 4 635 2 320 2 1154 2 360 2 76 4 1265 2 1602 2 1096 2 606 2 1540 2 1270 4 1013 2 1610 2 88 2 1170 2 754 2 189 4 1446 2 758 2 1239 2 1181 2 98 2 979 2 
1600 4 769 6 450 6 555 6 30 15 1507 5 1058 6 691 4 557 6 308 52 899 2 1061 15 461 2 1418 3 1515 2 1399 4 263 22 1585 47 1072 2 700 2 883 4 1525 32 843 2 1206 15 189 4 1622 2 546 4 885 15 971 4 525 4 41 32 218 4 42 8 406 6 1531 4 382 32 1294 19 1455 6 892 4 
1577 2 320 2 804 2 
1268 2 1079 22 773 2 1030 2 353 10 805 2 1288 2 1607 2 1395 2 1063 2 65 2 1181 2 1109 2 1597 2 
531 2 555 4 30 2 1301 2 308 6 1034 2 933 2 1061 2 1001 2 789 2 263 2 1475 2 1585 4 700 2 170 2 1525 2 1206 2 546 2 885 2 41 2 1294 2 382 2 616 2 
942 2 349 2 263 4 1585 12 883 4 30 4 1058 6 1525 8 1206 4 308 16 885 4 117 2 41 8 1061 4 1455 6 382 8 892 4 
1213 4 408 2 1502 2 322 62 1299 2 409 2 129 2 323 2 1271 4 305 14 1132 4 1100 10 804 2 988 2 1013 2 1577 6 8 2 1224 4 874 2 1309 4 1195 2 1550 4 421 2 998 2 285 4 908 4 1312 2 910 4 1586 4 653 4 1004 2 1401 2 683 4 40 2 355 10 1480 2 1239 4 320 8 126 2 1358 2 
582 2 984 2 871 2 1217 2 959 2 777 2 1438 2 1225 2 398 2 721 2 
766 2 0 32 770 3 664 2 1501 3 1503 2 1077 8 4 2 103 1 5 4 105 2 1412 4 389 1 1413 3 200 2 672 2 1085 2 1197 2 593 2 400 2 313 1 880 2 1314 1 493 2 596 6 1423 2 215 1 793 2 884 2 216 2 218 32 318 2 1319 2 498 2 1007 2 1008 2 602 2 22 2 1432 3 685 2 684 2 603 1 1215 4 225 2 1335 2 1221 8 324 3 898 2 693 2 1014 2 231 2 233 2 138 1 1112 4 1350 2 36 2 1115 8 517 5 1232 1 1351 2 1560 2 917 24 1118 2 143 4 332 2 613 2 522 2 238 2 39 2 524 2 1353 2 1562 2 1563 2 1029 2 150 3 242 2 703 12 48 2 50 2 250 2 52 3 1243 2 1244 2 53 2 1360 3 929 2 1574 2 533 2 1365 1 160 32 57 2 1032 2 537 1 538 2 259 1 938 6 346 2 541 3 1469 16 164 2 1141 2 1471 2 264 2 1474 2 167 1 265 2 1146 2 717 2 719 2 1045 2 169 6 354 2 1589 2 1050 2 73 1 1152 1 723 3 1054 2 727 2 1264 2 174 2 1267 2 451 2 1485 2 853 1 1487 4 278 2 1273 6 1165 4 371 2 282 2 284 2 645 2 1398 1 966 2 89 16 1167 2 748 2 374 1 1073 3 655 2 189 34 969 16 1496 3 471 2 1291 12 383 24 1629 4 1407 16 
189 2 315 2 
189 4 1549 2 949 2 
1462 2 
768 4 386 2 2 204 1183 16 3 48 772 4 387 78 1184 10 1188 4 775 4 776 26 7 2 1190 2 778 4 1191 16 779 4 1192 2 781 4 394 2 1194 16 1193 78 782 18 1198 2 11 2 783 2 397 2 12 2 1199 36 399 2 790 2 1201 2 1202 2 14 48 1204 2 1208 2 1209 4 1211 2 1210 4 1214 2 23 4 24 2 800 6 25 4 801 2 410 98 1220 12 1222 6 412 4 411 2 413 2 415 4 417 18 420 2 418 8 808 4 810 12 34 4 35 98 814 182 815 2 817 2 818 2 43 8 44 2 426 2 429 30 823 4 1242 94 51 2 430 2 1245 2 1247 2 431 2 55 4 824 30 435 2 828 2 436 366 438 4 832 4 833 4 1253 2 1254 2 439 4 66 2 839 4 1256 4 840 4 841 2 1258 2 842 18 1263 2 850 34 78 4 1266 2 1269 4 80 182 851 4 453 2 452 210 454 30 456 4 82 4 856 4 86 2 857 4 458 8 462 2 858 14 463 4 859 2 464 4 1281 2 1282 258 470 72 862 4 1283 8 91 182 92 2 864 2 95 2 867 2 96 8 97 4 869 4 476 254 477 4 1296 46 104 2 107 4 1304 4 1303 2 110 2 482 4 484 4 114 2 877 2 485 4 486 2 488 2 1316 2 118 2 886 4 120 48 496 4 123 6 1320 102 125 2 1326 102 891 4 1328 14 501 4 894 24 896 4 897 2 128 2 1337 56 506 2 131 4 507 2 1338 2 509 2 134 6 133 2 512 4 901 2 903 4 136 20 1348 6 905 2 907 2 140 2 515 2 142 4 911 2 916 2 144 10 520 4 146 2 147 2 148 2 919 4 149 4 1357 4 922 10 927 2 155 2 157 6 536 2 1366 4 932 2 934 32 935 2 539 2 1372 4 940 4 1375 12 941 2 944 116 945 4 165 2 1379 2 544 2 948 2 172 4 545 10 549 4 1388 18 1389 2 1390 2 1391 44 1392 66 175 2 553 4 176 102 956 4 177 2 554 24 556 116 180 2 559 2 561 2 961 2 963 42 1396 2 964 2 181 102 1397 2 567 2 967 18 184 2 568 8 187 4 190 16 970 4 573 6 574 2 192 4 576 4 577 4 1405 2 579 4 981 4 580 4 581 8 983 2 1409 2 986 2 1410 2 583 2 198 14 987 102 1414 2 587 8 588 16 1415 4 204 2 206 10 590 2 997 2 1422 4 594 2 1003 4 213 2 214 4 1424 2 1426 2 217 4 219 2 1006 10 600 2 1430 4 223 2 1010 4 226 4 1436 44 228 4 1016 66 1439 106 1017 108 1019 4 608 2 611 2 1024 2 1025 4 1443 258 1026 2 1444 2 1445 66 239 2 243 2 615 2 1454 4 1456 2 245 4 617 2 618 2 252 4 1460 8 255 4 1463 4 1035 2 1467 4 622 4 1041 10 623 4 1042 2 625 8 624 2 1472 4 1044 4 266 16 1047 2 629 110 1048 4 630 2 632 2 268 2 269 2 271 16 634 22 275 4 636 2 638 2 639 12 1057 4 640 2 277 14 1484 2 641 116 1488 106 1059 4 1060 2 279 4 281 2 1490 2 286 2 648 2 649 18 1071 2 654 4 1494 2 1495 2 295 4 1497 2 661 12 663 4 665 4 666 12 1082 4 306 2 669 4 671 8 309 2 310 2 1083 102 1513 2 674 2 1086 2 1514 2 1087 2 676 4 1518 46 677 2 1088 44 1089 8 1521 2 679 2 1522 2 316 2 1523 102 317 4 1530 60 1533 8 1534 4 686 4 687 2 689 4 688 4 1546 4 1547 2 327 2 1103 2 1106 2 1110 2 1556 2 1113 18 1117 4 333 2 1120 4 1119 2 702 12 335 2 336 2 1566 2 1124 2 1126 4 338 50 704 2 340 4 1568 4 341 4 342 112 343 4 705 2 1572 2 1571 2 1573 26 1576 2 1133 4 1579 2 709 102 1136 2 1580 2 1581 2 1137 4 1582 18 1138 4 1583 2 1139 2 1142 4 1144 2 1151 2 1593 16 725 2 1598 2 359 2 361 4 728 4 730 12 1605 2 363 2 735 2 1157 2 739 6 741 4 742 4 744 4 369 12 1164 4 370 36 372 2 373 2 1615 4 1614 2 1616 2 749 2 750 8 1172 2 1620 4 1621 18 378 2 1623 4 759 102 760 2 379 4 765 2 1625 2 1182 4 
1447 2 119 2 288 1 551 2 
1070 2 119 2 
692 2 119 2 478 2 1015 2 45 2 166 2 320 2 
119 2 478 2 1428 2 
119 2 478 2 1526 2 
695 2 221 2 551 2 
119 2 478 2 
1121 2 695 2 
119 2 300 2 
695 2 551 2 1302 2 
1545 2 302 2 551 2 
1321 2 699 2 551 2 
1255 2 551 2 1187 2 
1330 2 816 2 551 2 
695 2 298 2 
119 2 1000 2 
1545 2 589 2 
699 2 612 2 
287 2 1255 2 
816 2 1277 2 
695 2 1481 2 
101 2 816 2 
1255 2 32 2 
699 2 17 2 
1545 2 575 2 
695 2 551 2 1302 2 290 2 
695 2 551 2 1235 2 1302 2 290 2 
695 2 135 2 551 2 
1092 2 695 2 551 2 
402 2 1176 2 1606 2 1293 2 
692 2 799 2 320 2 774 2 
692 2 1538 2 799 2 45 2 320 2 774 2 
990 2 692 2 119 2 478 2 166 2 320 2 
102 2 920 2 
692 2 1559 2 166 2 320 2 
1255 2 825 2 
816 2 29 2 
1545 2 1435 2 
547 2 699 2 
670 2 816 2 699 2 
816 2 699 2 1128 2 
816 2 699 2 365 2 
294 2 816 2 699 2 
740 2 692 2 162 6 1161 2 1135 2 697 6 1313 2 320 2 
441 2 695 2 
196 2 667 2 491 2 1079 6 81 2 1173 2 518 2 873 4 188 2 319 2 1591 2 614 2 992 2 1479 2 345 4 1567 2 675 2 621 2 
551 2 145 2 
471 2 
766 2 0 4 1503 2 1078 2 103 2 5 4 584 2 200 2 1084 2 1420 2 593 2 209 4 596 5 1203 2 216 2 404 4 218 26 318 2 121 2 498 2 1007 2 1008 2 22 2 685 2 684 2 603 2 1215 4 1335 2 1221 2 1014 2 610 2 1023 2 1112 4 1350 4 1351 2 143 2 522 2 524 2 1353 2 1562 2 1563 2 1029 2 242 6 703 8 48 2 1243 2 250 2 53 2 533 1 1130 2 160 6 1032 2 708 2 346 2 938 6 718 2 169 2 442 2 354 2 1152 4 727 2 1267 2 451 2 1156 2 1487 2 1273 2 1165 2 282 2 645 2 1278 2 966 2 89 6 748 1 189 26 292 2 1291 8 1292 2 1629 4 
766 2 982 2 0 4 664 2 1503 2 1078 2 103 2 5 4 584 2 200 2 1084 2 1420 2 593 2 209 4 596 6 216 2 404 4 218 26 318 2 121 2 498 2 1007 2 1008 2 22 2 685 2 684 2 603 2 27 2 1215 4 1335 2 1221 2 1014 2 610 2 1023 2 1112 4 1350 4 1351 2 143 2 522 2 524 2 1353 2 1562 2 1563 2 1029 2 242 6 703 8 48 2 1243 2 250 2 53 2 533 2 160 6 1032 2 708 2 938 6 346 2 718 2 1381 2 169 2 442 2 354 2 1152 2 727 2 1267 2 451 2 1156 2 1487 2 1273 2 1165 2 282 2 645 2 966 2 89 6 748 2 189 26 292 2 1291 8 1292 2 1629 4 
658 2 
249 2 273 2 
251 2 1297 2 985 2 1081 2 304 4 1250 8 1189 2 109 2 199 2 200 2 111 2 202 6 9 4 937 2 311 2 346 2 938 4 710 4 483 2 1419 2 207 6 1376 4 593 2 946 2 1090 4 1046 2 69 10 1318 4 318 2 218 6 1007 2 795 2 1215 2 451 2 1333 2 505 2 1486 2 1101 2 419 2 460 2 1064 4 1108 2 565 2 467 2 139 2 1230 2 909 2 329 2 914 2 331 6 751 4 570 2 189 12 1353 2 761 2 1028 2 1626 2 1125 2 1628 8 1629 2 
251 2 1297 2 1081 2 304 4 1250 8 1189 2 109 2 200 2 111 2 202 8 9 4 937 2 311 2 346 2 938 4 710 4 483 2 1419 2 207 8 208 2 1376 4 593 2 946 2 1090 4 1046 2 69 10 1318 4 218 6 318 2 1007 2 795 2 849 2 1215 2 451 2 1333 2 505 2 1486 2 1101 2 460 2 419 2 1064 4 1108 2 565 2 467 2 139 2 1230 2 909 2 329 2 914 2 331 6 751 4 1617 2 1619 4 570 2 189 12 1353 2 761 2 1028 2 1626 2 1125 2 1628 8 1629 2 
909 2 1376 4 1333 2 331 2 751 2 1081 2 1486 2 111 2 202 2 9 4 311 2 460 2 419 2 710 2 1064 2 1626 2 483 2 795 2 
251 2 1297 2 985 2 1081 2 304 4 1250 4 1189 2 109 2 199 2 200 2 111 2 202 6 9 4 937 2 311 2 346 2 938 4 710 4 483 2 1419 2 207 6 1376 4 593 2 946 2 1090 4 1046 2 69 6 1318 4 318 2 218 6 1007 2 795 2 1215 2 451 2 1333 2 505 2 1486 2 419 2 460 2 1064 4 1108 2 565 2 467 2 139 2 1230 2 909 2 329 2 914 2 331 4 751 4 1617 2 570 2 189 12 1353 2 761 2 1028 2 1626 2 1125 2 1628 4 1629 2 
251 2 1297 2 985 2 1081 2 304 4 1250 4 1189 2 109 2 199 2 200 2 111 2 202 4 9 4 937 2 311 2 346 2 938 4 710 4 483 2 1419 2 207 6 1376 4 593 2 946 2 1090 4 1046 2 69 6 1318 4 318 2 218 6 1007 2 795 2 1215 2 451 2 1333 2 505 2 1486 2 419 2 460 2 1064 4 1108 2 644 2 565 2 467 2 139 2 1230 2 909 2 329 2 914 2 331 6 751 4 570 2 189 12 1353 2 761 2 1028 2 1626 2 1125 2 1628 4 1629 2 
251 2 1297 2 985 2 1081 2 304 4 1250 8 1189 2 109 2 199 2 200 2 111 2 202 6 9 4 937 2 311 2 346 2 938 4 710 4 483 2 1419 2 207 6 1376 4 593 2 946 2 1090 4 1046 2 69 6 1318 4 318 2 218 6 1007 2 795 2 1215 2 451 2 1333 2 505 2 1486 2 1101 2 419 2 460 2 1064 4 1108 2 565 2 467 2 139 2 1230 2 909 2 329 2 914 2 331 6 751 4 570 2 189 12 1353 2 761 2 1028 2 1626 2 1125 2 1628 4 1629 2 
251 2 1297 2 985 2 1081 2 304 4 1250 8 1189 2 109 2 199 2 200 2 111 2 202 6 9 4 937 2 311 2 346 2 938 4 710 4 483 2 1419 2 207 8 1376 4 593 2 946 2 1090 4 1046 2 69 10 1318 4 318 2 218 6 1007 2 795 2 1215 2 451 2 1333 2 505 2 1486 2 1101 2 419 2 460 2 1064 4 1108 2 644 2 565 2 467 2 139 2 1230 2 909 2 329 2 914 2 331 8 751 4 570 2 189 12 1353 2 761 2 1028 2 1626 2 1125 2 1628 8 1629 2 
251 2 1297 2 985 2 1081 2 304 4 1250 8 1189 2 109 2 199 2 200 2 111 2 202 6 9 4 937 2 311 2 346 2 938 4 710 4 483 2 1419 2 207 6 1376 4 593 2 946 2 1090 4 1046 2 69 10 1318 4 318 2 218 6 1007 2 795 2 1215 2 451 2 1333 2 505 2 1486 2 1101 2 419 2 460 2 1064 4 1108 2 565 2 467 2 139 2 1230 2 909 2 329 2 914 2 331 6 751 4 570 2 189 12 1353 2 761 2 1028 2 1626 2 1125 2 1628 8 1629 2 
766 2 0 2 385 6 197 2 5 4 584 2 1411 6 1189 2 199 2 200 2 202 4 991 1 9 4 1196 2 1419 4 207 12 593 2 595 6 596 6 403 2 216 2 404 4 1427 1 218 24 1429 6 1007 2 795 2 1008 2 22 2 1215 4 26 6 1218 2 1221 2 419 2 1021 2 1230 2 1233 1 1027 1 1028 2 242 6 47 1 48 2 247 6 1243 2 250 2 251 2 53 2 1250 2 1462 6 619 2 1032 2 59 2 830 1 835 2 1040 2 1473 2 1046 2 1259 1 69 2 844 2 71 2 443 1 1262 6 276 10 1267 2 451 2 1486 2 1487 2 457 2 1273 2 84 2 460 2 1064 4 282 2 644 4 645 2 1279 4 467 2 89 6 651 7 1291 4 1297 2 1298 6 1078 4 301 1 1506 2 1081 2 304 4 109 2 479 2 111 2 481 6 311 2 673 2 483 2 489 2 315 6 1520 6 882 2 1090 8 1318 6 318 2 889 6 685 2 684 2 1333 2 505 2 1108 2 139 2 909 2 1112 4 1558 7 329 2 914 4 331 8 143 2 524 2 1353 2 1562 12 1563 2 703 4 1125 2 925 2 533 2 1131 6 160 8 707 2 708 2 937 2 346 2 938 6 710 4 712 8 943 2 1376 4 946 2 947 2 169 2 949 6 1387 2 955 2 1156 2 1159 2 560 2 1165 2 565 2 746 6 1169 2 748 2 1171 2 751 4 1175 2 753 2 757 2 570 4 189 46 761 2 1626 2 1629 4 1406 4 
766 2 0 2 1298 6 1297 2 385 6 197 2 1078 4 5 4 1506 2 584 2 1411 6 1081 2 304 4 1189 2 109 2 199 2 479 2 200 2 111 2 481 6 202 8 9 4 311 2 673 2 1196 2 207 12 1419 4 483 2 489 2 593 2 315 6 595 6 882 2 1520 6 596 6 1090 8 403 2 216 2 404 4 1318 6 218 26 318 2 1429 6 889 6 1007 2 1008 2 795 2 22 2 684 2 685 2 26 6 1215 4 1333 2 505 2 1218 2 1221 2 1101 4 419 2 1108 2 1021 2 1230 2 139 2 235 2 909 2 1112 4 1350 2 329 2 914 4 331 8 143 4 524 2 1562 12 1353 2 1563 2 1028 2 242 6 703 8 1125 2 48 2 247 6 925 2 250 2 1243 2 251 2 1359 2 53 2 533 2 1131 6 1462 6 1250 6 160 8 619 2 1032 2 707 2 59 2 708 2 937 2 938 6 346 2 835 2 710 4 712 8 1040 2 943 2 1376 4 1473 2 946 2 947 2 169 2 1046 2 69 2 844 2 71 2 949 6 1387 2 1262 6 276 10 1267 2 955 2 451 2 1156 2 1486 2 1487 4 457 2 1159 2 84 2 1273 2 560 2 460 2 1064 4 282 2 1165 4 645 2 1279 4 565 2 89 6 467 2 746 6 1169 2 748 2 1171 2 751 4 753 2 1175 2 570 4 757 2 189 48 761 2 1291 8 1626 2 1406 4 1629 4 
766 2 0 2 1298 6 1297 2 385 6 197 2 1078 4 5 4 1506 2 584 2 1411 6 1081 2 304 4 1189 2 109 2 199 2 479 2 200 2 111 2 481 6 202 8 9 4 311 2 673 2 1196 2 207 12 1419 4 483 2 489 2 593 2 315 6 595 6 882 2 1520 6 596 6 1090 8 403 2 216 2 404 4 1318 6 218 26 318 2 1429 6 889 6 1007 2 1008 2 795 2 22 2 684 2 685 2 26 6 1215 4 1333 2 505 2 1218 2 1221 2 1101 4 419 2 1108 2 1021 2 1230 2 139 2 235 2 909 2 1112 4 1350 2 329 2 914 4 331 8 143 4 524 2 1562 12 1353 2 1563 2 1028 2 242 6 703 8 1125 2 48 2 247 6 925 2 250 2 1243 2 251 2 1359 2 53 2 533 2 1131 6 1462 6 1250 6 160 8 619 2 1032 2 707 2 59 2 708 2 937 2 346 2 938 6 835 2 710 4 712 8 1040 2 943 2 1376 4 1473 2 946 2 947 2 169 2 1046 2 69 6 844 2 71 2 949 6 1387 2 1262 6 276 10 1267 2 955 2 451 2 1156 2 1486 2 1487 4 457 2 1159 2 84 2 1273 2 560 2 460 2 1064 4 1165 4 282 2 645 2 1279 4 565 2 89 6 467 2 746 6 1169 2 748 2 1171 2 751 4 753 2 1175 2 570 4 757 2 189 48 761 2 1291 8 1626 2 1628 4 1406 4 1629 4 
766 2 0 4 385 6 197 2 5 4 584 4 1411 12 1189 2 199 2 200 2 202 10 9 4 1196 2 1419 4 207 16 593 2 595 6 596 6 403 2 216 2 404 6 218 24 1429 6 1007 2 795 2 1008 2 22 2 1431 6 797 6 1215 4 26 6 1218 2 1221 4 419 2 1018 2 1021 2 1230 2 235 2 1441 2 819 2 1028 2 242 8 48 2 247 12 1243 2 250 2 251 2 53 2 1250 6 1462 12 619 2 1032 2 59 2 835 2 1040 2 261 6 1473 2 1046 2 69 6 844 2 71 2 1053 2 1262 6 276 8 1267 2 451 2 1486 2 1487 4 457 2 1273 4 84 2 460 2 1064 4 282 2 644 2 645 2 1279 4 467 2 89 8 1291 10 1297 2 1298 6 1078 4 1506 2 1081 2 304 4 109 2 479 2 480 6 111 2 481 6 311 2 673 2 483 2 489 2 315 12 882 2 1520 12 1090 8 1318 6 318 2 889 6 685 2 684 2 1537 2 1333 2 505 2 1101 4 1543 2 1108 2 904 6 139 2 909 2 1112 4 1350 2 329 2 912 6 914 4 331 10 143 4 524 2 1353 2 1562 10 1563 2 703 10 1125 2 925 2 1359 2 530 2 533 2 1131 6 160 12 707 2 708 2 937 2 936 6 938 6 346 2 710 4 712 8 943 2 1376 4 946 2 947 2 169 4 1382 6 949 12 1387 2 955 2 1156 2 1393 2 1159 2 560 2 1165 4 565 2 746 6 1169 2 748 2 1171 2 751 4 1617 2 1175 2 753 2 570 4 189 52 1624 6 761 2 1626 2 1628 4 1629 4 1406 4 
1297 2 1333 2 304 2 1189 2 1250 6 1486 2 1101 2 109 2 199 2 202 6 9 2 460 2 419 2 1064 4 1108 2 207 4 1419 2 483 2 467 2 1230 2 139 2 909 2 1376 2 329 2 331 6 946 2 751 4 1090 2 69 4 189 4 1318 2 761 2 1125 2 1628 4 795 2 
766 2 0 3 1297 2 870 2 1078 2 5 4 304 2 1189 2 109 2 199 2 200 2 202 6 9 2 207 4 1419 2 483 2 1516 2 593 2 212 3 596 6 1090 2 216 2 1318 2 404 4 218 24 318 2 1007 2 1008 2 795 2 22 2 685 2 684 2 1215 4 1333 2 1101 2 419 2 1226 2 1108 2 1230 2 139 2 909 2 1112 4 329 2 331 6 238 2 524 2 1353 2 1562 4 1563 2 242 6 1125 2 1243 2 250 2 53 2 533 2 1250 6 160 8 1032 2 708 2 938 6 346 2 164 2 1376 2 946 2 1046 2 169 3 171 2 69 2 1264 2 276 2 552 2 1267 2 451 2 1156 2 1486 2 1273 3 460 2 1064 4 282 2 645 2 467 2 89 6 748 2 751 4 757 2 189 28 761 2 471 2 1629 4 
467 2 1230 2 1470 2 
467 2 1230 2 1470 2 
980 2 766 2 0 2 1078 6 5 4 1081 2 304 2 200 2 202 12 9 2 311 2 1416 2 1419 4 207 16 593 2 596 6 1090 4 1524 2 403 2 216 2 1318 4 218 16 318 2 19 4 1207 2 407 2 1007 2 1008 2 795 4 22 2 685 2 684 2 1215 4 1216 2 1101 4 419 2 696 2 513 2 1551 4 610 4 1230 6 1349 2 234 2 1112 4 914 2 331 12 143 4 521 2 524 2 1353 2 1562 4 1563 2 1028 2 242 2 703 4 151 2 48 4 924 2 1243 2 251 2 53 2 533 2 1250 6 160 2 1032 2 707 2 1369 2 708 2 938 6 346 2 710 4 1470 2 1376 2 946 2 69 6 1152 2 270 2 1262 2 276 2 1267 2 451 2 1156 2 1486 2 1487 4 560 2 1064 4 1165 4 282 2 644 4 645 2 1065 2 565 2 1279 2 89 2 467 4 748 2 751 4 1617 4 570 4 189 24 761 2 1291 4 193 2 1628 4 1406 2 1629 4 
276 2 924 2 882 2 521 2 1465 2 571 2 189 4 1562 2 479 2 218 2 270 2 273 2 1626 2 1227 2 1262 2 1007 2 1279 2 
766 2 0 4 1078 6 5 4 1081 2 304 2 200 2 202 12 9 2 311 2 1419 4 207 16 593 2 596 6 1090 4 1524 4 403 2 216 2 1318 4 218 16 318 2 19 4 1207 2 887 2 407 2 1007 2 1008 2 795 4 22 2 685 2 684 2 1215 4 1216 2 1101 4 419 2 513 2 1551 4 610 4 1230 6 1349 2 234 2 1112 4 914 4 915 2 331 12 143 4 521 2 524 2 1353 2 1562 2 1563 2 1028 2 242 2 703 4 151 2 48 4 924 2 1243 2 251 2 53 2 533 2 1250 6 160 2 1032 2 707 2 1578 2 1369 2 708 2 937 2 938 6 346 2 710 4 1470 2 1376 2 946 2 69 6 270 2 1262 2 1267 2 451 2 1156 2 1486 2 1487 4 560 2 1064 4 1165 4 282 2 644 4 645 2 1065 2 565 2 89 2 467 4 748 2 1285 2 751 4 1617 4 570 4 189 24 761 2 1291 4 380 2 1628 4 1406 2 1629 4 
766 2 0 2 1078 6 5 4 1081 2 304 2 200 2 202 12 9 2 311 2 1419 4 207 16 593 2 596 6 1090 4 1524 2 403 2 216 2 1318 4 218 16 318 2 19 4 1207 2 407 2 1007 2 1008 2 795 4 22 2 685 2 684 2 1215 4 1216 2 1101 4 414 2 419 2 609 2 513 2 1551 4 610 4 1230 6 1349 2 234 2 1112 4 914 4 331 12 143 4 521 2 524 2 1353 2 1562 4 1563 2 1028 2 242 2 703 4 151 2 48 4 924 2 1243 2 251 2 53 2 533 2 1250 6 160 2 1032 2 707 2 1369 2 708 2 937 2 938 6 346 2 710 4 1470 2 1376 2 946 2 69 6 1152 1 270 2 1262 2 276 2 1267 2 451 2 1156 2 738 2 1486 2 1487 4 560 2 1611 2 1064 4 1165 4 282 2 644 4 645 2 1065 2 565 2 1279 2 89 2 467 4 748 2 751 4 1617 4 756 2 570 4 189 24 761 2 1291 4 1628 4 1406 2 1629 4 
766 2 0 48 5 200 6 34 1186 10 393 2 395 2 1196 2 396 10 784 4 13 1 787 2 792 1 16 2 1206 6 1205 32 404 12 18 18 794 2 405 2 1212 18 796 2 22 2 798 18 28 4 1215 6 802 2 1218 2 803 2 30 6 1219 12 1221 42 806 2 416 2 807 32 1226 2 31 16 33 14 811 2 422 2 1229 32 812 2 36 2 37 14 819 2 1234 2 820 10 1236 14 1237 18 41 12 423 6 42 8 424 4 46 2 427 22 428 3 1241 2 49 2 48 10 1243 36 53 8 1246 4 1248 2 54 32 432 18 56 20 433 2 434 18 827 18 58 32 60 2 829 10 59 4 61 2 831 2 437 2 63 12 834 2 836 2 440 2 838 32 67 32 1257 4 68 2 442 2 70 64 1260 14 71 2 846 2 445 2 1261 2 446 2 449 2 448 3 77 4 1267 4 451 2 852 2 1271 2 1272 64 457 2 83 2 855 32 85 18 1273 16 459 4 1274 62 461 4 1276 2 1275 2 87 2 860 2 465 2 466 2 89 14 468 32 90 2 1280 32 469 4 1284 72 863 24 1286 20 1287 2 865 2 1290 3 472 4 1291 85 866 14 475 4 1292 2 868 28 1294 6 1295 2 99 4 870 2 103 2 106 16 1300 2 872 4 108 2 1305 2 1306 2 1307 8 875 4 876 14 1310 2 1311 2 878 2 487 8 879 2 881 2 115 2 1315 2 492 2 494 4 116 2 885 6 1319 2 121 2 122 2 1322 2 888 18 1323 2 1324 10 499 2 127 6 500 2 1327 2 892 4 893 4 1329 32 1331 2 1332 43 503 4 504 14 508 2 1339 14 900 2 1341 2 1340 32 510 3 1343 4 511 2 1344 2 1345 2 902 2 137 18 1346 3 1347 2 514 2 906 16 908 2 516 2 913 3 917 2 519 2 1352 2 524 2 1353 2 918 1 525 4 526 3 1355 32 527 18 921 4 152 64 528 2 529 32 156 2 530 2 1361 2 532 2 533 130 1362 2 158 18 159 18 1364 36 535 14 160 56 1367 14 161 24 1368 4 1370 2 938 8 540 2 939 2 1374 18 1377 2 1378 2 1380 38 169 46 1383 36 550 4 1385 2 951 4 1386 16 952 2 953 32 954 2 552 2 957 4 958 32 179 2 557 6 1394 2 1393 4 960 8 962 12 563 8 566 2 183 102 968 1 1400 18 569 2 1402 14 1403 16 189 510 969 38 974 2 973 2 975 2 976 18 977 232 978 42 1404 12 194 2 578 2 1407 4 1408 6 197 4 584 46 585 2 586 32 989 2 1413 2 201 2 200 2 203 2 205 2 1417 2 591 32 996 2 1420 2 999 2 1421 2 592 64 593 2 210 8 211 18 212 2 1002 3 596 460 216 2 218 408 598 2 220 2 222 2 1007 2 601 64 1008 2 224 2 603 2 1433 1 605 62 607 2 1434 2 1012 32 227 2 1437 32 229 2 1018 2 1020 14 1440 2 232 2 1023 38 237 2 236 2 1441 2 1448 32 240 2 1449 2 241 32 242 14 1453 24 1452 2 1455 6 1457 4 248 2 246 64 1458 2 250 2 1459 2 256 2 1464 2 620 10 1032 36 1033 34 1037 20 1036 2 258 2 1039 2 1038 12 1469 16 1040 2 1043 4 627 2 626 2 263 10 628 2 1476 34 1049 2 1478 12 1051 2 274 32 1054 2 1482 16 1055 32 1489 1 1061 6 1062 18 282 2 283 2 284 2 645 2 1067 2 1066 4 1068 2 647 18 1069 3 1493 20 285 2 650 12 652 4 1072 2 656 2 1074 2 657 2 291 36 659 16 292 2 1075 2 1496 2 1498 2 1499 4 1500 2 297 3 299 14 662 2 1504 2 1505 11 1077 2 1078 2 1080 2 1507 6 668 2 307 3 1509 2 308 23 1510 20 1084 2 1511 4 312 32 1516 2 678 2 314 1 1519 2 680 2 1091 2 681 2 1525 12 683 2 1528 2 318 2 1529 2 1532 2 1094 2 1535 6 685 2 684 8 1095 2 1537 2 321 2 1539 2 690 2 1097 20 1541 2 1099 20 1543 2 326 2 694 14 1105 2 328 3 1107 4 1111 6 1553 32 1552 2 1555 2 1557 32 1112 168 1115 2 330 2 1560 2 701 2 334 2 1562 4 1563 2 1123 1 1565 4 337 5 703 84 339 2 1127 6 1570 32 1574 2 1575 2 1134 4 344 2 346 2 347 24 1140 10 348 2 1143 2 1145 2 715 33 351 2 352 2 1585 18 1586 2 1147 64 718 2 720 4 1148 2 1149 2 1152 2 1592 1 356 6 1153 18 1596 2 726 2 358 14 729 2 1600 4 362 2 733 1 1603 2 734 2 1156 2 737 2 1158 2 366 2 1608 2 1160 32 1159 4 1609 2 743 2 368 18 1162 14 745 2 1163 2 1166 4 1612 32 747 2 748 130 376 2 1171 2 752 6 1618 2 377 3 1179 2 1622 2 762 2 763 3 382 12 1627 2 383 2 1629 6 
0 2 250 2 734 2 1603 2 584 6 160 2 1305 2 1273 2 829 2 396 4 1069 2 89 2 1552 2 90 2 169 2 189 2 404 2 218 2 473 2 46 2 242 2 1385 2 1324 2 578 2 
0 2 250 2 734 2 1603 2 584 6 160 2 1305 2 1273 2 829 2 396 4 1069 2 89 2 1552 2 90 2 169 2 189 2 404 2 218 2 473 2 46 2 242 2 1385 2 1324 2 578 2 
0 2 250 2 734 2 1603 2 584 6 160 2 1305 2 1273 2 829 2 396 4 1069 2 89 2 1552 2 90 2 169 2 189 2 404 2 218 2 473 2 46 2 242 2 1385 2 1324 2 578 2 
1536 2 0 3 250 2 1056 3 604 2 1097 4 30 2 534 2 56 4 1099 4 557 4 160 2 308 6 1037 4 161 3 1061 2 1469 2 347 3 183 6 469 2 542 2 650 2 543 2 1585 4 1587 2 169 3 1525 2 267 2 1206 2 189 10 885 2 969 2 218 4 525 2 41 2 631 4 848 2 46 2 1356 2 382 2 
1536 2 0 2 250 2 1056 2 604 2 1097 4 30 2 534 2 56 4 1099 4 557 4 160 2 308 4 1037 4 161 2 1061 2 1469 2 347 2 183 6 469 2 263 2 542 2 650 2 543 2 1585 4 1072 2 1587 2 169 2 1525 2 267 2 1206 2 189 10 885 2 969 2 218 4 525 2 41 2 631 4 848 2 46 2 1356 2 1294 2 382 2 
1536 2 0 2 250 2 1056 2 604 2 1097 4 30 2 534 2 56 4 1099 4 557 4 160 2 308 4 1037 4 161 2 1061 2 1469 2 347 2 183 6 469 2 263 2 542 2 650 2 543 2 1585 4 1072 2 1587 2 169 2 1525 2 267 2 1206 2 189 10 885 2 969 2 218 4 525 2 41 2 631 4 848 2 46 2 1356 2 1294 2 382 2 
1536 2 0 2 250 2 1056 2 604 2 1097 4 30 2 534 2 56 4 1099 4 557 4 160 2 308 4 1037 4 161 2 1061 2 1469 2 347 2 183 6 469 2 263 2 542 2 650 2 543 2 1585 4 1072 2 1587 2 169 2 1525 2 267 2 1206 2 189 10 885 2 969 2 218 4 525 2 41 2 631 4 848 2 46 2 1356 2 1294 2 382 2 
1536 2 0 2 250 2 1056 2 604 2 1097 4 30 2 534 2 56 4 1099 4 557 4 160 2 308 4 1037 4 161 2 1061 2 1469 2 347 2 183 6 469 2 263 4 542 2 650 2 543 2 1585 4 1072 4 1587 2 169 2 1525 2 267 2 1206 2 189 10 885 2 969 2 218 4 525 2 41 2 631 4 848 2 46 2 1356 2 1294 4 382 2 
1076 2 1517 2 115 2 1584 2 1451 2 1371 2 
1023 2 637 2 1093 2 1371 2 447 2 809 2 388 2 
408 1 1601 2 253 2 1604 1 1336 1 364 2 1411 2 1011 2 826 2 367 2 346 2 64 2 1195 1 1613 2 1022 2 1200 2 1116 2 185 2 38 2 189 10 1150 2 218 8 1564 2 381 1 821 2 822 2 
1600 2 30 6 1507 4 872 2 557 4 308 16 1509 2 258 2 1061 6 205 2 263 5 1585 12 1072 2 1525 6 1446 2 189 6 1206 6 218 6 41 6 885 6 525 2 42 2 598 2 660 2 444 2 296 2 1455 4 382 6 1294 2 892 2 
1168 6 262 2 1483 2 1114 1 716 2 1097 2 930 2 706 2 56 2 189 1 218 1 1289 2 1037 2 972 2 230 4 124 2 99 2 1599 2 
1168 6 262 2 1483 2 716 4 1097 2 930 2 706 2 56 2 1289 4 1037 2 972 2 124 2 230 4 99 4 1599 2 
1168 10 262 2 1483 2 1114 1 716 8 1097 2 930 6 706 2 56 2 189 1 218 1 1289 8 1037 2 972 2 124 8 230 4 99 8 1599 2 
1168 2 262 2 1483 2 716 2 1097 2 706 2 56 2 1289 2 1037 2 972 2 230 2 99 2 1599 2 
299 4 1505 8 5 100 586 6 876 4 591 24 312 6 13 2 592 13 401 2 314 2 791 2 596 216 792 2 1205 6 1317 4 1527 2 218 118 495 20 1325 2 601 32 1329 24 895 2 1332 20 28 2 504 4 130 2 1012 6 1544 12 1339 4 1548 10 1437 6 1340 6 807 6 1020 4 1553 6 141 10 1557 6 1112 76 1231 20 913 2 1122 20 1448 6 241 6 337 4 1355 6 1240 8 152 12 246 30 529 6 1243 14 1570 6 54 6 533 54 535 4 257 2 1032 14 58 6 1251 2 1367 4 1134 8 61 6 63 2 939 2 838 6 715 8 67 6 1147 12 70 12 1260 4 722 4 847 2 72 6 1049 6 1592 2 356 4 1052 4 950 18 724 1 446 4 274 24 358 4 1155 4 953 6 1055 6 362 2 1267 8 731 2 733 2 958 6 736 2 455 54 1272 14 855 6 854 2 1489 2 642 26 1160 6 368 2 280 4 1162 4 1612 6 646 2 861 26 468 6 748 54 1280 6 1284 50 968 2 752 4 186 4 1178 2 189 130 93 2 291 4 94 10 1180 2 1291 16 764 54 977 116 978 12 1295 6 
1569 2 1243 2 928 2 5 20 1249 2 533 2 1185 2 931 2 58 2 1466 2 1032 2 1251 2 61 2 391 2 392 2 994 2 10 2 711 6 713 2 785 4 786 2 312 2 837 2 13 1 592 2 788 2 714 2 715 6 67 2 791 2 596 44 1147 4 15 2 682 2 70 4 845 2 218 44 1049 2 495 2 173 2 633 2 1590 2 497 2 1152 2 1052 2 1325 2 890 2 21 2 601 2 1055 2 79 4 895 2 1267 2 502 2 178 4 958 2 1542 4 325 2 1272 2 1102 2 1489 3 280 2 1548 2 1104 2 1437 2 1340 2 807 2 1491 2 1492 2 698 2 468 2 141 2 748 2 1112 20 375 2 1231 2 1442 2 1174 2 1561 2 189 46 94 2 1122 2 572 2 1448 2 293 2 1238 2 1291 37 977 6 1355 2 152 4 1295 2 195 2 
299 4 1505 8 5 44 303 4 876 4 591 8 312 4 592 10 791 2 596 104 15 2 682 10 597 4 1425 2 1205 4 1527 2 218 70 1325 2 601 6 895 2 502 2 1334 2 504 4 1012 4 1339 4 1437 4 1340 4 807 4 1020 4 1553 4 1557 4 1112 36 813 16 1448 4 241 4 1354 2 1355 4 152 10 154 4 153 4 246 30 923 4 529 4 1243 6 1570 4 54 4 1249 2 254 8 533 30 1129 16 535 4 257 2 1032 6 58 4 1251 2 1367 4 61 2 63 16 62 8 163 2 939 4 713 2 838 4 350 4 715 6 67 4 1147 10 70 10 1260 4 1049 2 633 10 1592 2 356 3 74 2 446 2 358 4 953 4 1055 4 362 4 1267 2 732 8 958 6 558 8 1272 10 1489 2 855 4 1160 4 1162 4 562 8 962 16 1612 4 965 8 468 4 748 28 1280 4 1284 8 968 2 752 4 289 2 755 32 189 78 191 4 1291 14 977 24 978 14 1295 2 195 10 
246 6 1243 2 1505 5 5 14 1249 2 533 12 1185 2 58 4 1032 2 1251 2 1134 1 61 2 939 2 312 4 592 2 715 4 314 2 791 2 67 4 596 40 1147 6 792 1 70 6 218 26 847 2 1049 2 1152 2 446 2 1325 2 601 2 1055 4 362 2 895 2 1267 2 1332 9 28 2 502 2 733 2 958 2 1272 2 854 2 1489 2 1104 2 1437 4 1340 2 807 4 468 2 748 12 1112 14 752 4 189 28 291 2 1448 2 1291 14 977 8 337 1 1355 2 152 6 1295 2 
599 2 
1228 1 490 1 425 1 548 1 1098 1 1177 1 
1228 1 490 1 425 1 548 1 1098 1 1177 1 
1228 1 490 1 425 1 548 1 1098 1 1177 1 
1228 1 490 1 425 1 548 1 1098 1 1177 1 
1228 1 490 1 425 1 548 1 1098 1 1177 1 
1228 1 490 1 425 1 548 1 1098 1 1177 1 
1228 1 490 1 425 1 548 1 1098 1 1177 1 
1228 1 490 1 425 1 548 1 1098 1 1177 1 
1228 1 490 1 425 1 548 1 1098 1 1177 1 
1228 1 490 1 425 1 548 1 1098 1 1177 1 
1228 1 490 1 425 1 548 1 1098 1 1177 1 
1228 1 490 1 425 1 548 1 1098 1 1177 1 
1228 1 490 1 425 1 548 1 1098 1 1177 1 
1228 1 490 1 425 1 548 1 1098 1 1177 1 
1228 1 490 1 425 1 548 1 1098 1 1177 1 
1228 1 490 1 425 1 548 1 1098 1 1177 1 
1228 1 490 1 425 1 548 1 1098 1 1177 1 
1228 1 490 1 425 1 548 1 1098 1 1177 1 
1228 1 490 1 425 1 548 1 1098 1 1177 1 
1228 1 490 1 425 1 548 1 1098 1 1177 1 
1228 1 490 1 425 1 548 1 1098 1 1177 1 
1228 1 490 1 425 1 548 1 1098 1 1177 1 
1228 1 490 1 425 1 548 1 1098 1 1177 1 
1228 1 490 1 425 1 548 1 1098 1 1177 1 
1228 1 490 1 425 1 548 1 1098 1 1177 1 
1228 1 490 1 425 1 548 1 1098 1 1177 1 
1228 1 490 1 425 1 548 1 1098 1 1177 1 
1228 1 490 1 425 1 548 1 1098 1 1177 1 
1228 1 490 1 425 1 548 1 1098 1 1177 1 
1228 1 490 1 425 1 548 1 1098 1 1177 1 
1228 1 490 1 425 1 548 1 1098 1 1177 1 
1228 1 490 1 425 1 548 1 1098 1 1177 1 
1228 1 490 1 425 1 548 1 1098 1 1177 1 
1228 1 490 1 425 1 548 1 1098 1 1177 1 
1228 1 490 1 425 1 548 1 1098 1 1177 1 
1228 1 490 1 425 1 548 1 1098 1 1177 1 
1228 1 490 1 425 1 548 1 1098 1 1177 1 
1228 1 490 1 425 1 548 1 1098 1 1177 1 
1228 1 490 1 425 1 548 1 1098 1 1177 1 
1228 1 490 1 425 1 548 1 1098 1 1177 1 
1228 1 490 1 425 1 548 1 1098 1 1177 1 
1228 1 490 1 425 1 548 1 1098 1 1177 1 
1228 1 490 1 425 1 548 1 1098 1 1177 1 
1228 1 490 1 425 1 548 1 1098 1 1177 1 

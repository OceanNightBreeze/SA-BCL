#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR jtb.TokenMgrError 715 16 854 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V FAILED junit.framework.AssertionFailedError 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V ERROR utilMDE.Assert$AssertionException (387,1364) (387,1364) 531 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V ERROR utilMDE.Assert$AssertionException (387,1364) (387,1364) 531 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V ERROR utilMDE.Assert$AssertionException (387,1364) (387,1364) 531 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V ERROR utilMDE.Assert$AssertionException (387,1364) (387,1364) 531 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V ERROR utilMDE.Assert$AssertionException (387,1364) (387,1364) 531 
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_0()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_1()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_2()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_3()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_4()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_5()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_6()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_7()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_8()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_9()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_10()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_11()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_12()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_13()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_14()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_15()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_16()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_17()V PASSED
daikon.test.split.SplitterFactoryTest:testmisc_Fib_main_18()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_19()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_20()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_21()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_22()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_23()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_24()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_25()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_26()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_27()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_28()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_29()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_30()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_31()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_32()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__33()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__34()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__35()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__36()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__37()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__38()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__39()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__40()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__41()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__42()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__43()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_daikon()Ljava.lang.String;
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.PptSlice0:arity()I
daikon.inv.binary.twoScalar.LinearBinaryCore:format_simplify(Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.Quant:eltwiseGT([I)Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:gt(DD)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntEqual:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_ntk()I
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.inv.unary.sequence.EltwiseIntLessThan:format_simplify()Ljava.lang.String;
daikon.inv.binary.sequenceString.MemberString:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptName:isCombinedExitPoint()Z
daikon.inv.unary.sequence.EltNonZero:format_esc()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:format_ioa()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.inv.Invariant:prob_and(DD)D
daikon.Ppt:find_var_by_name(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.EltNonZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_simplify()Ljava.lang.String;
daikon.Quant:eltwiseNotEqual([I)Z
daikon.VarInfo:isPrestate()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.sequenceString.MemberString:check_modified([Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.VarInfoName.Elements:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.inv.binary.twoScalar.NumericInt.Divides:Divides(Ldaikon.PptSlice;Z)V
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.VarInfo:simplify_quantify(Ljava.util.EnumSet;[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.Member:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_esc()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext1()V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.inv.binary.sequenceString.SequenceString:seq_index()I
daikon.Quant:lexLTE([I[I)Z
daikon.inv.unary.sequence.EltUpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceString.SequenceString:sclvar()Ldaikon.VarInfo;
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.NumericInt.Divides:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
utilMDE.MathMDE:modulus([I)[I
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoString.StringEqual:enabled()Z
daikon.inv.binary.sequenceScalar.Member:format_esc()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:subsetOf([S[S)Z
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfo:isPointer()Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfo:get_all_simple_names()Ljava.util.List;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
utilMDE.ArraysMDE:min([I)I
daikon.Quant:eltsLtIndex([I)Z
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.ValueTuple:isMissing(I)Z
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
daikon.inv.binary.sequenceString.MemberString:format_daikon()Ljava.lang.String;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.Quant:gte(II)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SequenceScalar:scl_index()I
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_esc()Ljava.lang.String;
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaCharStream:backup(I)V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.Ppt:Ppt()V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_simplify()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.binary.sequenceScalar.Member:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.unary.sequence.EltNonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.NumericInt.Divides:get_proto(Z)Ldaikon.inv.Invariant;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoString.TwoString:var1()Ldaikon.VarInfo;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.test.InvariantFormatTester:execute()Z
daikon.Quant:pairwiseLTE([I[I)Z
daikon.inv.binary.twoSequence.SeqSeqIntEqual:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Stopwatch:Stopwatch(Z)V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
utilMDE.ArraysMDE:concat([I[I)[I
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.unary.stringsequence.EltOneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltwiseIntLessThan:EltwiseIntLessThan(Ldaikon.PptSlice;)V
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.inv.binary.twoSequence.SeqSeqIntEqual:SeqSeqIntEqual(Ldaikon.PptSlice;Z)V
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.stringsequence.EltOneOfString:add_modified([Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.Invariant:logOn()Z
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.string.OneOfString:sort_rep()V
daikon.inv.unary.string.OneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.ProglangType:elementType()Ldaikon.ProglangType;
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.inv.unary.sequence.EltUpperBound:format_ioa()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quantify:quantify([Ldaikon.VarInfo;)[Ldaikon.Quantify.QuantifyReturn;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.Quant:pairwiseEqual([I[I)Z
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.ArraysMDE:sum([I)I
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.diff.InvMap:toString()Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([J[JI)Z
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I | OPERATOR | 51862 | != -> <
daikon.test.FormatTestCase.SingleOutputTestCase:getDiffString()Ljava.lang.String;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.inv.unary.sequence.EltNonZero:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_daikon()Ljava.lang.String;
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:subsetOf([F[D)Z
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.inv.unary.string.SingleString:var()Ldaikon.VarInfo;
daikon.inv.unary.sequence.NoDuplicates:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_esc()Ljava.lang.String;
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.Quant:eltsEqual([II)Z
daikon.inv.unary.UpperBoundCore:wouldChange(J)Z
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfo:get_enclosing_var()Ldaikon.VarInfo;
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.Quant:ne(II)Z
daikon.Debug:logDetail()Z
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName:hasNodeOfType(Ljava.lang.Class;)Z
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfoName.Elements:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_daikon()Ljava.lang.String;
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.Quant:lt(II)Z
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.Quant:memberOf(I[I)Z
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.inv.binary.twoSequence.SubSequence:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
jtb.TokenMgrError:TokenMgrError(ZIIILjava.lang.String;CI)V
daikon.VarInfoName:name()Ljava.lang.String;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.test.FormatTestCase:passes()Z
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.binary.sequenceString.SequenceString:seq_first()Z
utilMDE.ArraysMDE:sum([D)D
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.inv.binary.sequenceString.MemberString:MemberString(Ldaikon.PptSlice;)V
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.binary.twoSequence.Reverse:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.inv.unary.sequence.NoDuplicates:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat:lte(DD)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:logDetail()Z
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.ValueSet.ValueSetStringArray:ValueSetStringArray(I)V
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.string.OneOfString:OneOfString(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.Reverse:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfo:apply_subscript(Ljava.lang.String;)Ljava.lang.String;
jtb.TokenMgrError:TokenMgrError(Ljava.lang.String;I)V
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:format_ioa()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.inv.unary.sequence.EltOneOf:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.FuzzyFloat:lt(DD)Z
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quant:eltsEqualIndex([I)Z
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.suppress.NISuppressee:swap()Ldaikon.suppress.NISuppressee;
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.inv.binary.sequenceScalar.SeqIntEqual:enabled()Z
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.stringsequence.EltOneOfString:sort_rep()V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_daikon()Ljava.lang.String;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_daikon()Ljava.lang.String;
daikon.Quant:memberOf(F[D)Z
daikon.inv.binary.sequenceString.MemberString:add_modified([Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.inv.binary.sequenceScalar.SequenceScalar:sclvar()Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.inv.unary.string.SingleString:SingleString(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:is_boolean()Z
daikon.Quant:lexGT([I[I)Z
daikon.VarInfo:isDerived()Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan(Ldaikon.PptSlice;)V
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_simplify()Ljava.lang.String;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.EltUpperBound:format_simplify()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
jtb.JavaCharStream:FillBuff()V
daikon.ProglangType:isScalar()Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.inv.unary.stringsequence.EltOneOfString:subarray_rep()Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([II)I
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:enabled()Z
daikon.inv.binary.twoSequence.Reverse:enabled()Z
utilMDE.MathMDE:gcd(II)I
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.inv.ternary.threeScalar.ThreeScalar:var2()Ldaikon.VarInfo;
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.sequence.EltUpperBound:EltUpperBound(Ldaikon.PptSlice;)V
daikon.VarInfoName.InorderFlattener:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:eltsGTE([II)Z
daikon.inv.ternary.threeScalar.LinearTernary:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.inv.unary.stringsequence.SingleStringSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_simplify()Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:runValue([Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Ppt:indexOf(Ljava.lang.String;)I
daikon.diff.InvMap:InvMap()V
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_ioa()Ljava.lang.String;
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.BinaryInvariant:is_symmetric()Z
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
utilMDE.MathMDE:sign(I)I
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.stringsequence.SingleStringSequence:SingleStringSequence(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceScalar.Member:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;Ldaikon.VarInfo;)V
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoString.StringEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Invariant:getConfidence()D
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.inv.unary.sequence.EltUpperBound:format_daikon()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
utilMDE.MathMDE:gcd([I)I
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.inv.unary.scalar.NonZero:is_pointer()Z
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_ioa()Ljava.lang.String;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName:inOrderTraversal()Ljava.util.Collection;
daikon.inv.unary.sequence.EltOneOf:format_esc()Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([I)Z | CONDITION | 57307 | if (x) -> if (!x)
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.inv.unary.string.OneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SequenceScalar:SequenceScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltUpperBound:format_esc()Ljava.lang.String;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.sequenceString.MemberString:enabled()Z
daikon.inv.unary.UpperBoundCore:computeConfidence()D
utilMDE.ArraysMDE:element_range([I)I
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.UtilMDE:lineNumberFileReader(Ljava.io.File;)Ljava.io.LineNumberReader;
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:get_swap()Z
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.UpperBoundCore:computeProbability()D
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:PairwiseIntLessEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_esc()Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.Quantify.IOAQuantification:getFreeVarName(I)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.inv.ternary.threeScalar.LinearTernary:enabled()Z
daikon.inv.binary.twoSequence.SubSequence:SubSequence(Ldaikon.PptSlice;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.Quantify.Term:ioa_name()Ljava.lang.String;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:gte(DD)Z
daikon.inv.unary.stringsequence.EltOneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.binary.sequenceScalar.SeqIntEqual:SeqIntEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_ioa()Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:internSubsequence([III)[I
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_daikon()Ljava.lang.String;
daikon.Quant:sameLength([I[I)Z
utilMDE.FuzzyFloat:ne(DD)Z
daikon.PptTopLevel:is_constant(Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.inv.binary.twoString.StringEqual:StringEqual(Ldaikon.PptSlice;)V
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.VarInfoName:hasTypeOf()Z
daikon.inv.unary.string.OneOfString:format_esc()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.VarInfo:simplify_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.inv.binary.twoScalar.LinearBinaryCore:maxsep_indices()[I
daikon.Quant:noDups([I)Z
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_ioa()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:PairwiseIntEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.VarInfo:new_ppt()V
utilMDE.OrderedPairIterator:hasNext()Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:enabled()Z
daikon.inv.binary.sequenceString.MemberString:format_ioa()Ljava.lang.String;
daikon.inv.ternary.TernaryInvariant:TernaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.VarInfo:relate_var()V
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_esc()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:enabled()Z
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.sequenceScalar.SeqIntLessThan:enabled()Z
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:SeqIntGreaterEqual(Ldaikon.PptSlice;)V
daikon.Quant:memberOf(S[S)Z
daikon.inv.binary.twoSequence.SubSequence:format_daikon()Ljava.lang.String;
daikon.PptSlice1:arity()I
utilMDE.Options.OptionInfo:argument_required()Z
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.Quant:eltsLT([II)Z
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.Quant:intersection([I[I)[I
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.stringsequence.EltOneOfString:format_daikon()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_daikon()Ljava.lang.String;
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.inv.ternary.threeScalar.LinearTernaryCore:maxsep_triples([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)D
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
utilMDE.UtilMDE:escapeNonASCII(C)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltNonZero:format_ioa()Ljava.lang.String;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:enabled()Z
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.inv.binary.sequenceScalar.Member:Member(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.inv.ternary.threeScalar.ThreeScalar:var1()Ldaikon.VarInfo;
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | CONDITION | 3895 | if (x) -> if (!x)
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:ioa_name()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoSequence.SubSequence:format_ioa()Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:format_esc()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.ProglangType:baseIsFloat()Z
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:SeqIntGreaterThan(Ldaikon.PptSlice;)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:separation(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)D
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:check_modified([JJI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:gcd(JJ)J
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SequenceScalar:seqvar()Ldaikon.VarInfo;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.VarComparabilityNone:comparable(Ldaikon.VarComparabilityNone;Ldaikon.VarComparabilityNone;)Z
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
utilMDE.Intern:internSubsequence([JII)[J
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
utilMDE.FuzzyFloat:eq(DD)Z
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
utilMDE.Intern:numIntArrays()I
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
jtb.JavaCharStream:readChar()C
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ValueTuple:size()I
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.inv.binary.sequenceScalar.SequenceScalar:seq_first()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:try_points_linear(DDD)Z
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:subarray([JII)[J
daikon.diff.RootNode:RootNode()V
daikon.VarComparabilityNone:elementType()Ldaikon.VarComparability;
daikon.inv.unary.sequence.EltOneOf:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:enabled()Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.NoDuplicates:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:lexLT([I[I)Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_simplify()Ljava.lang.String;
utilMDE.UtilMDE:escapeNonASCII(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.QuantHelper:simplifyNameAndBounds(Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.TokenMgrError:LexicalError(ZIIILjava.lang.String;C)Ljava.lang.String;
daikon.inv.binary.twoSequence.Reverse:format_simplify_explicit()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:enabled()Z
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:enabled()Z
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.ModBitTracker:num_samples()I
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
utilMDE.Intern:intern([D)[D
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.Quant:lexEqual([I[I)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.Quant:pairwiseGT([I[I)Z
daikon.VarInfoName.Elements:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:format_simplify()Ljava.lang.String;
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfo:has_typeof()Z
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.inv.binary.twoSequence.TwoSequence:var2()Ldaikon.VarInfo;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:get_proto()Ldaikon.inv.Invariant;
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.VarInfoName:hashCode()I
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_simplify()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:enabled()Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.inv.binary.twoSequence.Reverse:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.ModBitTracker:ModBitTracker(I)V
utilMDE.ArraysMDE:sum([[D)D
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_esc()Ljava.lang.String;
daikon.Quant:eltsLteIndex([I)Z
daikon.VarInfo:name()Ljava.lang.String;
daikon.VarInfo:isIOAArray()Z
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_simplify()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.inv.binary.sequenceString.SequenceString:scl_index()I
daikon.inv.binary.twoScalar.LinearBinaryCore:add_modified(JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:memberOf(D[F)Z
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.inv.binary.twoString.StringEqual:check_modified(Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.inv.binary.twoString.StringEqual:add_modified(Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan()V
daikon.inv.binary.twoString.TwoString:TwoString(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.inv.binary.twoSequence.PairwiseIntLessThan:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.Quantify.QuantifyReturn:QuantifyReturn(Ldaikon.VarInfo;)V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;Z)Z
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.Quantify.IOAQuantification:getClosingExp()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_esc()Ljava.lang.String;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_ioa()Ljava.lang.String;
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.InorderFlattener:InorderFlattener(Ldaikon.VarInfoName;)V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.VarInfoName.QuantHelper:getFreeIndex([Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:PairwiseIntGreaterThan(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceString.SequenceString:valid_types([Ldaikon.VarInfo;)Z
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.inv.unary.string.OneOfString:runValue(Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_ioa()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_ioa()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.VarInfo:isDerivedSubSequenceOf()Ldaikon.VarInfo;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:subsetOf([D[F)Z
daikon.inv.binary.twoSequence.TwoSequence:var1()Ldaikon.VarInfo;
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.Quant:concat([I[I)[I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.suppress.NISuppressionSet:NISuppressionSet([Ldaikon.suppress.NISuppression;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_ioa()Ljava.lang.String;
daikon.ProglangType:baseIsIntegral()Z
daikon.Quant:eltsGtIndex([I)Z
daikon.inv.ValueSet.ValueSetString:ValueSetString(I)V
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.NoDuplicates:NoDuplicates(Ldaikon.PptSlice;)V
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.inv.binary.twoSequence.SubSequence:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.Debug:logOn()Z
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.inv.unary.string.OneOfString:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:add_modified([JJI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:pow_fast(II)I
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.Quant:lte(II)Z
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.inv.unary.sequence.EltwiseIntComparison:EltwiseIntComparison(Ldaikon.PptSlice;)V
daikon.Quant:subsetOf([F[F)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_bi_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)V
daikon.inv.binary.sequenceString.MemberString:format_esc()Ljava.lang.String;
daikon.inv.binary.twoString.TwoString:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.inv.binary.sequenceScalar.Member:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:SeqIntLessEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_daikon()Ljava.lang.String;
daikon.inv.Invariant:prob_or(DD)D
utilMDE.MathMDE:negate(I)I
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.MathMDE:gcd_differences([I)I
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.Quant:pairwiseDivides([I[I)Z
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.UtilMDE:lineNumberFileReader(Ljava.lang.String;)Ljava.io.LineNumberReader;
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.inv.ternary.threeScalar.LinearTernary:add_modified(JJJI)Ldaikon.inv.InvariantStatus;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:isArray()Z
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern:intern([J)[J
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:enabled()Z
daikon.inv.unary.sequence.NoDuplicates:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eq(JJ)Z
daikon.Quant:setEqual([I[I)Z
daikon.inv.binary.sequenceScalar.SeqIntEqual:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.inv.unary.string.SingleString:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.inv.binary.twoSequence.Reverse:format_ioa()Ljava.lang.String;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:lexGTE([I[I)Z
daikon.Quantify.IOAQuantification:getQuantifierExp()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.inv.unary.sequence.EltOneOf:format_daikon()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:get_proto()Ldaikon.inv.Invariant;
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;)Z
daikon.inv.unary.sequence.EltOneOf:EltOneOf(Ldaikon.PptSlice;)V
daikon.PptTopLevel.CondIterator:hasNext()Z
utilMDE.ArraysMDE:sum([[I)I
daikon.inv.binary.sequenceString.MemberString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_daikon()Ljava.lang.String;
daikon.PptName:isEnterPoint()Z
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.inv.binary.twoSequence.Reverse:format_daikon()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.PptSlice3:arity()I
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_esc()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.string.OneOfString:format_daikon()Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.string.OneOfString:enabled()Z
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.LimitedSizeIntSet:size()I
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Quant:pairwiseLT([I[I)Z
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_esc()Ljava.lang.String;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_simplify()Ljava.lang.String;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.Quant:lexNotEqual([I[I)Z
daikon.inv.binary.twoSequence.SubSequence:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltNonZero:is_pointer()Z
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptSlice0:initInvariantsSeen()V
utilMDE.OrderedPairIterator:setnext2()V
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.inv.unary.sequence.EltUpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_esc()Ljava.lang.String;
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceString.MemberString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
utilMDE.WeakHasherMap:processQueue()V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
daikon.inv.Invariant:simplify_format_string(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;)V
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarComparabilityNone:indexType(I)Ldaikon.VarComparability;
daikon.diff.Node:Node()V
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.ternary.threeScalar.LinearTernary:LinearTernary(Ldaikon.PptSlice;)V
daikon.ProglangType:isFloat()Z
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.Quant:eltsGT([II)Z
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:enabled()Z
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_ioa()Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.suppress.NISuppressionSet:swap()Ldaikon.suppress.NISuppressionSet;
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.ternary.threeScalar.LinearTernary:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaCharStream:BeginToken()C
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.binary.twoSequence.Reverse:format_simplify()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual()V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.inv.unary.string.OneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.inv.binary.twoScalar.LinearBinary:add_modified(JJI)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:enabled()Z
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:PairwiseIntGreaterEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.inv.unary.stringsequence.EltOneOfString:is_type()Z
utilMDE.ArraysMDE:max([I)I
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.string.OneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.inv.binary.twoScalar.LinearBinaryCore:set_bi_linear(JJJJ)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:slice([III)[I
daikon.suppress.NISuppression:NISuppression(Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.suppress.NISuppressee:NISuppressee(Ljava.lang.Class;I)V
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.NumericInt.Divides:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.inv.binary.sequenceString.SequenceString:seqvar()Ldaikon.VarInfo;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:equals(JJJ)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.inv.ternary.threeScalar.ThreeScalar:ThreeScalar(Ldaikon.PptSlice;)V
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
jtb.JavaCharStream:getEndLine()I
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SequenceScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:linearIntervention([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:mod_positive(JJ)J
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_simplify(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.Quantify.QuantFlags:distinct()Ljava.util.EnumSet;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.SubSequence:format_simplify()Ljava.lang.String;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.inv.binary.sequenceString.SequenceString:SequenceString(Ldaikon.PptSlice;)V
utilMDE.UtilMDE.NullableStringComparator:compare(Ljava.lang.String;Ljava.lang.String;)I
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:freshDistinctFrom(Ljava.util.Set;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.VarInfo:get_simplify_free_index([Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:planarIntervention([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltNonZero:EltNonZero(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.NoDuplicates:format_simplify()Ljava.lang.String;
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltwiseIntLessThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.inv.unary.string.OneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.inv.Invariant:prob_and(DDD)D
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.inv.binary.twoSequence.PairwiseIntEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_ioa()Ljava.lang.String;
daikon.inv.unary.string.OneOfString:format_ioa()Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:isIOASet()Z
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_simplify()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.inv.binary.twoScalar.LinearBinaryCore:find_bi_linear(JJJJ[D)Z
daikon.VarInfo:is_direct_non_slice_array()Z
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Elements:ioa_name_impl()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:get_proto()Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_daikon()Ljava.lang.String;
utilMDE.MathMDE:pow(II)I
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.inv.ternary.threeScalar.LinearTernaryCore:maxsep_doubles([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)D
utilMDE.MathMDE:mod_positive(II)I
daikon.inv.unary.string.OneOfString:is_type()Z
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.inv.unary.sequence.EltOneOf:format_simplify()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ValueTuple:isMissingFlow(I)Z
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.VarInfo:apply_subscript(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.Quant:eltsLTE([II)Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_daikon()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:SeqIntLessThan(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.Reverse:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
utilMDE.MathMDE:missing_numbers([I)[I
daikon.suppress.NISuppression:NISuppression(Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
daikon.ProglangType:baseIsScalar()Z
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant; | RETURN | 3656 | return null
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quantify.IOAQuantification:getMembershipRestriction(I)Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_ioa()Ljava.lang.String;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:sorted([I)Z
utilMDE.ArraysMDE:min_max([I)[I
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:subarray([III)[I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.Quant:eltwiseEqual([I)Z
daikon.inv.unary.sequence.EltUpperBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:simplify_name()Ljava.lang.String;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.Invariant:is_false()Z
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.inv.unary.sequence.EltOneOf:subarray_rep()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.VarInfo:domainTypeIOA()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:hashCode()I
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.Invariants:Invariants()V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.Quant:isReverse([I[I)Z
daikon.inv.binary.twoSequence.SubSequence:enabled()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:add_modified(JJJI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.Quantify.IOAQuantification:getVarIndexedString(I)Ljava.lang.String;
daikon.inv.binary.twoSequence.TwoSequence:TwoSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.inv.binary.sequenceScalar.Member:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltwiseLT([I)Z
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_esc()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quantify.FreeVar:name()Ljava.lang.String;
daikon.inv.binary.sequenceString.MemberString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ProglangType:isString()Z
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoString.StringEqual:get_proto()Ldaikon.inv.binary.twoString.StringEqual;
daikon.ProglangType:baseIsString()Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.ProglangType:isIntegral()Z
daikon.ModBitTracker:num_sets()I
daikon.Quant:eltsNotEqual([II)Z
daikon.Quant:subsetOf([D[D)Z
daikon.inv.unary.stringsequence.EltOneOfString:format_simplify()Ljava.lang.String;
daikon.suppress.NISuppression:NISuppression([Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_esc()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.Member:format_simplify()Ljava.lang.String;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltOneOf:sort_rep()V
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.inv.unary.sequence.NoDuplicates:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.string.OneOfString:add_modified(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.ProglangType:elementIsIntegral()Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakHasherMap:size()I
daikon.Quant:memberOf(J[J)Z
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.ModBitTracker:num_vars()I
daikon.Quant:eltwiseGTE([I)Z
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:eltsGteIndex([I)Z
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.Quant:union([I[I)[I
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.ProglangType:base()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.Quant:subsetOf([I[I)Z
daikon.suppress.NISuppressor:swap()Ldaikon.suppress.NISuppressor;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.Quant:subsetOf([J[J)Z
daikon.Quant:pairwiseGTE([I[I)Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_daikon()Ljava.lang.String;
daikon.Quantify.IOAQuantification:getFreeVar(I)Ldaikon.Quantify.Term;
daikon.inv.binary.twoScalar.LinearBinaryCore:maxsep_point([J[J)[I
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltOneOf:is_hashcode()Z
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eq(FF)Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoString.StringEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.Quantify.QuantFlags:element_wise()Ljava.util.EnumSet;
daikon.inv.unary.sequence.EltNonZero:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
jtb.JavaCharStream:getEndColumn()I
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.inv.unary.stringsequence.EltOneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:simplifyNameAndBounds()[Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:calc_modulus()J
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:enabled()Z
daikon.test.FormatTestCase:getDiffString()Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.binary.twoSequence.Reverse:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.inv.binary.twoSequence.Reverse:Reverse(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.SubSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
jtb.TokenMgrError:addEscapes(Ljava.lang.String;)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.Quant:eltwiseLTE([I)Z
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.inv.unary.sequence.EltUpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoSequence.TwoSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.inv.Invariant:isWorthPrinting()Z
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_ioa()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.Member:enabled()Z
daikon.Quant:eq(II)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_ioa()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quantify.IOAQuantification:IOAQuantification([Ldaikon.VarInfo;)V
daikon.Quant:eq(DD)Z
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.inv.unary.string.OneOfString:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.Invariant:justified()Z
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.Quantify.QuantFlags:include_index()Ljava.util.EnumSet;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoString.StringEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
utilMDE.ArraysMDE:indexOf([JJ)I
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.stringsequence.SingleStringSequence:var()Ldaikon.VarInfo;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([J[J)I
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.VarInfoName.InorderFlattener:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.ProglangType:dimensions()I
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
utilMDE.Intern:intern([I)[I
daikon.inv.ternary.threeScalar.ThreeScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.ternary.threeScalar.ThreeScalar:var3()Ldaikon.VarInfo;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.ModBitTracker:split(I)I
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:enabled()Z
daikon.PptSlice2:arity()I
daikon.inv.binary.twoSequence.PairwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.inv.unary.stringsequence.EltOneOfString:EltOneOfString(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.ValueSet:ValueSet(I)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.Positive:enabled()Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceScalar.SeqIntEqual:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltOneOf:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.Member:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.twoSequence.SubSequence:format_simplify_explicit()Ljava.lang.String;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.VarInfoName.InorderFlattener:nodes()Ljava.util.List;
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.sequence.EltNonZero:enabled()Z
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
utilMDE.Assert:assertTrue(Z)V
daikon.inv.binary.sequenceScalar.SequenceScalar:seq_index()I
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltOneOf:format_ioa()Ljava.lang.String;
daikon.VarInfoName:isLiteralConstant()Z
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.binary.twoSequence.SubSequence:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.stringsequence.EltOneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice1:num_samples()I
daikon.PptSlice3:PptSlice3(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceScalar.Member:format_daikon()Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:setDiff([I[I)[I
daikon.inv.unary.sequence.EltNonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_simplify()Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltUpperBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoString.TwoString:var2()Ldaikon.VarInfo;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.Quant:pairwiseSquare([I[I)Z
utilMDE.FuzzyFloat:set_rel_diff(D)V
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.binary.sequenceScalar.SeqIntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.Member:format_ioa()Ljava.lang.String;
daikon.ProglangType:isPseudoArray()Z
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:PairwiseIntLessThan(Ldaikon.PptSlice;)V
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.inv.unary.sequence.EltUpperBound:enabled()Z
daikon.Quant:memberOf(F[F)Z
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.suppress.NISuppressee:NISuppressee(Ljava.lang.Class;Z)V
utilMDE.ArraysMDE:indexOf([ZZ)I
utilMDE.LimitedSizeIntSet:add(I)V
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:enabled()Z
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_esc()Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_daikon()Ljava.lang.String;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:subsetOf([B[I)Z
daikon.Quant:gt(II)Z
utilMDE.ArraysMDE:isSubarray([I[II)Z
jtb.JavaCharStream:ReadByte()C
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quantify.QuantFlags:adjacent()Ljava.util.EnumSet;
daikon.inv.unary.sequence.NoDuplicates:enabled()Z
daikon.ProglangType:isPointerFileRep()Z
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
1425 2 722 2 387 2 1095 2 1045 2 1364 2 1097 2 1285 2 886 4 
93 6 615 2 906 2 128 2 505 2 1166 2 67 6 912 6 663 2 810 2 712 2 
172 6 387 2 364 2 1360 2 0 4 696 6 1404 6 1123 4 1096 6 1364 2 665 2 557 2 488 2 
999 10 387 6 626 2 951 16 1321 6 1201 8 76 2 881 10 607 2 1430 8 1143 12 889 4 958 16 701 2 1292 4 566 8 1104 10 1437 2 551 16 530 29 841 6 201 10 121 26 20 4 475 2 1364 6 923 10 1136 8 578 2 1116 4 
1077 4 560 6 
63 2 
432 2 828 2 343 2 718 2 974 2 1095 2 867 2 438 2 170 2 1011 2 94 2 748 2 1401 2 1437 2 420 2 260 2 181 2 1113 2 690 2 1114 4 1137 2 1424 2 
651 4 1388 6 999 16 387 4 951 32 1321 4 76 2 881 16 78 2 657 4 1430 18 1143 22 371 2 638 6 889 2 958 32 57 6 1398 2 1434 6 566 6 983 2 1315 4 304 4 944 4 1104 6 551 32 530 55 1379 2 841 4 146 4 201 16 966 4 121 48 1364 4 923 16 101 6 1346 8 825 6 1225 2 
707 2 1068 2 718 2 
244 2 545 2 349 2 480 10 13 2 1403 2 295 2 466 2 1042 2 745 2 610 22 861 2 273 2 1375 2 
50 2 999 2 1321 2 951 2 881 2 907 2 1430 2 1143 2 485 2 889 2 1240 2 958 2 612 2 614 2 1104 4 1192 2 551 2 530 6 1176 2 422 2 201 2 121 4 923 2 
1434 6 999 4 951 8 881 4 944 4 551 8 657 4 530 16 1143 4 899 2 201 4 20 2 121 12 923 4 958 8 57 6 1212 2 
1034 2 829 4 908 4 1286 4 408 2 407 2 718 8 1092 2 80 2 1237 2 661 2 1008 2 251 4 1068 6 346 10 438 4 1070 2 39 62 136 2 155 2 1261 4 192 4 374 4 1074 14 116 4 550 2 667 4 380 2 532 2 668 2 1055 4 707 2 401 2 1114 4 1082 2 824 2 1424 2 801 2 1279 10 1367 4 
537 2 1039 2 891 2 414 2 613 2 489 2 1149 2 63 2 772 2 819 2 
625 8 362 1 805 2 882 2 1 3 1371 2 268 3 1186 2 1187 2 368 4 975 2 370 2 1094 16 1188 2 1372 2 1099 2 111 2 468 2 544 2 7 2 722 2 471 2 724 2 279 3 893 2 726 2 115 2 12 1 378 2 1103 2 1105 2 118 6 285 4 1109 2 647 24 473 6 1111 3 199 2 18 2 988 2 1197 2 649 2 1383 1 994 2 1386 2 739 2 1117 2 387 34 1200 2 826 1 28 2 483 16 1203 3 388 2 1390 3 129 2 208 2 659 2 1006 2 910 2 911 2 660 1 1396 1 216 2 135 4 1009 1 1400 1 40 2 41 2 1016 2 839 16 569 2 44 2 147 8 924 2 760 6 1226 2 847 1 761 2 1324 1 1138 4 1231 1 583 2 848 1 1236 2 936 2 1329 6 682 2 412 2 322 2 1333 2 1048 2 683 4 587 4 325 2 59 2 416 2 504 2 157 1 1151 2 159 2 506 3 1248 3 331 2 1340 2 1343 2 1344 2 689 2 239 24 1060 2 693 12 513 3 1349 3 338 2 514 2 780 32 608 2 433 1 783 2 250 2 435 2 609 3 519 1 1355 2 611 3 1256 2 86 2 1257 2 791 2 1167 16 91 1 1358 8 525 2 793 1 1263 2 254 12 795 32 963 2 529 2 449 2 531 2 1439 2 709 2 1364 32 456 5 968 2 264 4 1444 2 802 4 
387 2 323 2 
387 4 1046 2 30 2 
823 2 
950 2 337 4 715 2 1122 2 766 2 1241 2 190 2 939 2 854 2 1260 2 1010 2 253 2 616 6 114 6 642 2 816 2 920 2 1438 6 1378 2 1272 2 16 2 287 2 922 2 1274 6 991 2 1408 2 901 2 311 2 
479 2 1278 2 572 1 1177 2 
1278 2 1338 2 
243 2 320 2 541 2 631 2 1278 2 718 2 1116 2 
243 2 845 2 1278 2 
243 2 1209 2 1278 2 
479 2 232 2 1140 2 
243 2 1278 2 
232 2 210 2 
1278 2 1169 2 
479 2 232 2 179 2 
479 2 104 2 888 2 
479 2 1436 2 142 2 
803 2 479 2 670 2 
1214 2 479 2 240 2 
232 2 1119 2 
1278 2 37 2 
1155 2 104 2 
1262 2 1436 2 
803 2 10 2 
1196 2 240 2 
298 2 232 2 
1202 2 240 2 
803 2 781 2 
1436 2 692 2 
95 2 104 2 
479 2 232 2 179 2 658 2 
479 2 232 2 896 2 179 2 658 2 
831 2 479 2 232 2 
479 2 232 2 1402 2 
463 2 1152 2 972 2 236 2 
776 2 148 2 631 2 718 2 
1205 2 776 2 320 2 148 2 631 2 718 2 
243 2 631 2 1278 2 1392 2 718 2 1116 2 
496 2 420 2 
631 2 984 2 718 2 1116 2 
803 2 937 2 
355 2 240 2 
539 2 104 2 
1086 2 1436 2 
635 2 1436 2 240 2 
1436 2 72 2 240 2 
327 2 1436 2 240 2 
858 2 1436 2 240 2 
631 2 718 2 786 2 252 2 347 6 66 6 261 2 902 2 
232 2 1356 2 
1242 2 1227 2 1170 2 1435 2 1301 2 1193 2 198 2 317 2 1421 2 844 2 610 6 700 2 768 2 812 2 87 2 1290 4 534 2 1213 4 
479 2 1298 2 
331 2 
536 2 625 2 805 2 632 2 887 2 368 4 370 2 1372 1 468 2 544 1 7 2 722 2 726 2 115 2 378 2 1294 2 118 6 285 2 1109 2 473 2 199 4 649 2 994 2 387 26 654 2 129 2 208 2 911 2 660 2 135 2 40 2 918 2 399 2 760 2 51 2 761 2 1033 2 1138 4 1324 4 1327 2 933 2 1044 4 1329 5 682 2 413 2 683 4 587 2 1335 2 416 2 504 2 157 2 1343 2 689 2 161 2 1060 2 693 8 338 6 514 2 780 6 608 2 783 2 250 2 81 2 522 4 1257 2 791 2 1167 6 1263 2 254 8 795 4 529 2 963 2 531 2 1439 2 709 2 1364 26 1180 2 802 4 
536 2 625 2 805 2 632 2 887 2 368 4 370 2 1372 2 468 2 544 2 7 2 722 2 726 2 115 2 378 2 1294 2 118 6 285 2 1109 2 473 2 199 4 649 2 994 2 387 26 129 2 208 2 911 2 660 2 135 2 40 2 918 2 760 2 51 2 761 2 1324 1 1033 2 1138 4 227 2 1327 2 933 2 1044 4 1329 6 682 2 413 2 683 4 587 2 416 2 504 2 157 2 1343 2 689 2 161 2 1060 2 693 8 338 6 514 2 780 6 608 2 783 2 250 2 81 2 788 2 1355 2 522 4 1257 2 791 2 1167 6 440 2 1263 2 254 8 795 4 963 2 529 2 531 2 1439 2 709 2 1364 26 1180 2 802 4 
1362 2 
849 2 807 2 
224 8 1281 8 627 4 928 2 1138 2 850 2 932 4 806 2 808 2 680 2 3 4 368 2 586 2 373 2 4 4 271 2 542 10 7 2 11 2 895 2 505 4 379 2 118 4 67 6 986 2 689 2 649 2 994 2 24 2 555 2 1385 2 387 12 604 2 126 2 340 2 128 2 129 2 389 4 1166 4 486 2 214 2 169 2 912 6 1127 2 88 2 871 2 300 4 1071 2 1132 2 917 2 93 6 567 2 177 2 529 2 751 2 621 2 709 2 710 2 1364 6 712 2 
224 8 1281 8 928 2 627 4 1138 2 850 2 806 2 932 4 808 2 680 2 3 4 368 2 586 2 373 2 4 4 271 2 542 10 7 2 11 2 895 2 505 4 379 2 118 4 67 6 986 2 689 2 649 2 994 2 555 2 1385 2 387 12 604 2 126 2 1303 2 340 2 128 2 129 2 389 4 1166 4 486 2 214 2 169 2 912 8 866 4 1127 2 663 2 88 2 300 4 1071 2 1072 2 1132 2 917 2 93 8 567 2 177 2 529 2 751 2 621 2 709 2 1364 6 710 2 712 2 
1132 2 567 2 627 4 11 2 505 2 751 2 806 2 932 4 1166 2 808 2 486 2 67 2 3 2 214 2 169 2 912 2 373 2 88 2 
224 4 1281 4 627 4 928 2 1138 2 850 2 932 4 806 2 808 2 680 2 3 4 368 2 586 2 373 2 4 4 271 2 542 6 7 2 11 2 895 2 505 4 379 2 118 4 67 4 986 2 689 2 649 2 994 2 24 2 555 2 1385 2 387 12 604 2 126 2 340 2 129 2 389 4 1166 4 486 2 214 2 169 2 912 6 1127 2 663 2 88 2 871 2 300 4 1071 2 1132 2 917 2 93 6 567 2 177 2 529 2 751 2 621 2 709 2 710 2 1364 6 712 2 
224 4 1281 4 627 4 928 2 1138 2 850 2 932 4 806 2 808 2 680 2 3 4 368 2 586 2 373 2 4 4 271 2 542 6 7 2 11 2 895 2 505 4 379 2 118 4 67 6 986 2 689 2 649 2 994 2 24 2 555 2 1385 2 387 12 604 2 126 2 340 2 129 2 389 4 1166 4 486 2 214 2 169 2 912 4 1127 2 88 2 871 2 300 4 1071 2 1132 2 917 2 93 6 615 2 567 2 177 2 529 2 751 2 621 2 709 2 710 2 1364 6 712 2 
224 4 1281 8 627 4 928 2 1138 2 850 2 932 4 806 2 808 2 680 2 3 4 368 2 586 2 373 2 4 4 271 2 542 6 7 2 11 2 895 2 505 4 379 2 118 4 67 6 986 2 689 2 649 2 994 2 24 2 555 2 1385 2 387 12 604 2 126 2 340 2 128 2 129 2 389 4 1166 4 486 2 214 2 169 2 912 6 1127 2 88 2 871 2 300 4 1071 2 1132 2 917 2 93 6 567 2 177 2 529 2 751 2 621 2 709 2 710 2 1364 6 712 2 
224 8 1281 8 627 4 928 2 1138 2 850 2 932 4 806 2 808 2 680 2 3 4 368 2 586 2 373 2 4 4 271 2 542 10 7 2 11 2 895 2 505 4 379 2 118 4 67 8 986 2 689 2 649 2 994 2 24 2 555 2 1385 2 387 12 604 2 126 2 340 2 128 2 129 2 389 4 1166 4 486 2 214 2 169 2 912 6 1127 2 88 2 871 2 300 4 1071 2 1132 2 917 2 93 8 615 2 567 2 177 2 529 2 751 2 621 2 709 2 710 2 1364 6 712 2 
224 8 1281 8 627 4 928 2 1138 2 850 2 932 4 806 2 808 2 680 2 3 4 368 2 586 2 373 2 4 4 271 2 542 10 7 2 11 2 895 2 505 4 379 2 118 4 67 6 986 2 689 2 649 2 994 2 24 2 555 2 1385 2 387 12 604 2 126 2 340 2 128 2 129 2 389 4 1166 4 486 2 214 2 169 2 912 6 1127 2 88 2 871 2 300 4 1071 2 1132 2 917 2 93 6 567 2 177 2 529 2 751 2 621 2 709 2 710 2 1364 6 712 2 
1281 2 536 4 188 2 1089 2 885 6 887 2 1287 2 368 4 3 4 373 2 4 6 542 2 7 2 544 2 722 2 193 6 546 1 726 2 11 2 895 4 379 2 553 1 200 2 203 1 903 4 737 6 555 2 1300 4 387 46 1304 2 389 8 208 2 209 2 30 6 1307 6 214 2 912 4 1127 4 917 2 1132 2 567 2 751 2 400 6 760 2 225 2 928 2 1138 4 226 1 932 4 1327 2 53 1 1329 6 586 2 587 2 416 2 1336 2 771 2 233 2 67 8 1153 6 1343 2 424 6 1348 7 604 2 780 8 608 2 1166 4 250 2 791 12 1167 6 88 2 89 2 93 12 615 4 960 2 254 4 795 2 794 2 963 2 619 2 621 2 1364 24 262 2 802 4 625 2 627 4 462 2 806 2 808 2 271 2 1372 2 110 6 468 2 276 2 980 1 278 2 115 2 118 6 285 2 473 2 986 2 1381 6 649 2 823 6 994 2 1199 1 1385 2 292 2 126 2 129 2 130 2 1003 2 1004 2 486 2 662 2 135 2 300 4 302 8 492 6 1018 2 307 2 1409 1 1025 7 149 2 1033 2 850 2 680 2 1044 4 323 6 683 4 685 2 504 2 505 4 1246 6 689 2 1060 2 1251 2 693 4 512 2 164 10 338 6 514 2 340 2 341 6 1253 1 169 2 1257 2 871 2 1071 2 1263 2 177 2 529 2 531 2 1076 2 1273 2 709 2 710 2 182 2 875 6 712 4 
1281 6 625 2 536 4 627 4 462 2 188 2 806 2 885 6 808 2 1089 2 887 2 1287 2 3 4 368 4 4 6 373 2 271 2 110 6 1372 2 542 2 468 2 544 2 7 2 276 2 722 2 193 6 278 2 726 2 11 2 115 2 895 4 379 2 118 6 285 4 473 2 199 2 986 2 200 2 1381 6 649 2 823 6 737 6 903 4 994 2 555 2 1385 2 1300 4 292 2 387 48 126 2 128 4 1304 2 129 2 130 2 389 8 208 2 1004 2 1003 2 209 2 30 6 1307 6 486 2 214 2 912 8 662 2 1208 2 1127 4 135 4 300 4 137 2 1132 2 917 2 567 2 302 8 492 6 751 2 307 2 1018 2 400 6 760 2 149 2 225 2 928 2 1033 2 1138 4 850 2 932 4 1327 2 680 2 1044 4 1329 6 586 2 323 6 683 4 587 4 416 2 685 2 1336 2 233 2 771 2 504 2 505 4 1246 6 67 8 1153 6 1343 2 689 2 424 6 1060 2 1251 2 512 2 693 8 164 10 338 6 604 2 340 2 514 2 341 6 780 8 608 2 1166 4 250 2 169 2 791 12 1257 2 1167 6 89 2 88 2 871 2 1071 2 93 12 960 2 1263 2 254 8 794 2 795 2 177 2 963 2 529 2 531 2 1076 2 1273 2 619 2 621 2 709 2 1364 26 710 2 182 2 262 2 875 6 712 4 802 4 
1281 6 625 2 536 4 627 4 462 2 188 2 806 2 885 6 808 2 1089 2 887 2 1287 2 3 4 368 4 4 6 373 2 271 2 110 6 1372 2 542 6 468 2 544 2 7 2 276 2 722 2 193 6 278 2 726 2 11 2 115 2 895 4 379 2 118 6 285 4 473 2 199 2 986 2 200 2 1381 6 649 2 823 6 737 6 903 4 994 2 555 2 1385 2 1300 4 292 2 387 48 126 2 128 4 1304 2 129 2 130 2 389 8 208 2 1004 2 1003 2 209 2 30 6 1307 6 486 2 214 2 912 8 662 2 1208 2 1127 4 135 4 300 4 137 2 1132 2 917 2 567 2 302 8 492 6 751 2 307 2 1018 2 400 6 760 2 149 2 224 4 225 2 928 2 1033 2 1138 4 850 2 932 4 1327 2 680 2 1044 4 1329 6 586 2 323 6 683 4 587 4 416 2 685 2 1336 2 233 2 771 2 504 2 505 4 1246 6 67 8 1153 6 1343 2 689 2 424 6 1060 2 1251 2 512 2 693 8 164 10 338 6 604 2 340 2 514 2 341 6 780 8 608 2 1166 4 250 2 169 2 791 12 1257 2 1167 6 89 2 88 2 871 2 1071 2 93 12 960 2 1263 2 254 8 794 2 795 2 177 2 963 2 529 2 531 2 1076 2 1273 2 619 2 621 2 709 2 1364 26 710 2 182 2 262 2 875 6 712 4 802 4 
1281 6 536 4 716 6 188 2 1089 2 885 6 887 2 1287 2 368 4 3 4 4 6 373 2 542 6 1101 6 7 2 544 2 722 2 193 6 726 2 11 2 895 4 379 2 199 2 200 2 23 2 903 4 737 6 555 2 1300 4 387 52 1304 2 389 8 208 2 30 12 1307 12 214 2 912 10 1127 4 917 2 1132 2 217 6 567 2 751 2 400 6 758 6 760 4 224 4 225 2 928 2 1138 4 932 4 1327 4 1329 6 586 2 587 4 416 2 1336 2 771 2 233 2 67 10 1153 6 1343 2 424 12 69 2 1161 2 604 2 246 6 780 12 608 2 1166 4 250 2 437 6 791 10 1167 8 439 2 88 2 89 2 93 16 615 2 960 2 254 10 445 6 795 4 794 2 963 2 619 2 621 2 1364 24 262 2 802 4 625 4 627 4 462 2 806 2 808 2 271 2 1372 2 110 6 468 2 276 2 278 2 115 2 118 6 285 4 473 4 986 2 989 2 1381 12 649 2 823 12 994 2 1385 2 292 2 126 2 128 4 129 2 130 2 1004 2 1003 2 830 2 486 2 662 2 1208 2 663 2 135 4 300 4 137 2 302 8 492 6 1018 2 307 2 309 6 149 2 1033 2 850 2 680 2 1044 6 323 12 683 4 685 2 504 2 505 4 1246 6 689 2 1060 2 1251 2 693 10 512 2 164 8 338 8 340 2 514 2 341 6 169 2 1257 2 871 2 1071 2 1259 2 1263 2 703 2 177 2 529 2 531 2 1076 2 1273 2 709 2 710 2 1275 6 182 2 875 6 712 4 
224 4 387 4 1281 6 604 2 928 2 627 2 128 2 389 2 806 2 932 2 1166 4 680 2 486 2 214 2 912 6 4 2 373 2 271 2 542 4 871 2 300 2 1071 2 93 4 917 2 567 2 11 2 177 2 505 4 379 2 751 2 986 2 67 6 555 2 1385 2 712 2 
1281 6 536 2 627 2 882 2 806 2 887 2 368 4 269 2 4 2 373 2 271 2 1372 2 542 2 468 2 7 2 544 2 722 2 726 2 11 2 115 2 548 2 379 2 118 6 731 2 473 3 986 2 988 2 649 2 994 2 555 2 1385 2 387 28 128 2 129 2 389 2 209 2 486 2 214 2 912 6 299 2 300 2 917 2 567 2 751 2 760 3 1320 3 928 2 1138 4 1033 2 932 2 680 2 1044 4 1329 6 683 4 416 2 504 2 505 4 1151 2 67 6 331 2 1343 2 689 2 1060 2 164 2 604 2 338 6 514 2 780 8 608 2 1166 4 250 2 1257 2 791 4 1167 6 871 2 1071 2 93 4 1263 2 1265 2 795 3 177 2 963 2 529 2 531 2 709 2 1364 24 710 2 712 2 802 4 
680 2 986 2 742 2 
680 2 986 2 742 2 
1281 6 536 6 627 2 808 2 887 2 809 2 3 4 368 4 4 4 373 4 1372 2 1189 2 542 6 468 2 544 2 7 2 722 2 726 2 728 2 115 2 11 2 895 2 118 6 285 4 986 6 200 2 987 4 649 2 903 2 994 2 555 2 1300 2 387 24 126 2 128 4 129 2 389 4 742 2 208 4 484 2 909 2 746 2 214 2 1124 2 912 12 1127 4 663 4 135 4 300 2 1132 2 306 2 221 2 400 2 669 2 47 2 224 4 1324 2 1033 2 1138 4 675 2 850 2 932 2 680 4 1329 6 683 4 587 4 416 2 1336 2 1337 2 504 2 1150 2 505 4 67 12 1343 2 689 2 162 2 1060 2 693 4 164 2 338 2 604 2 514 2 780 2 608 2 1166 4 250 2 81 4 1257 2 791 4 1167 2 89 2 93 16 615 4 1263 2 254 4 795 2 963 2 529 2 1173 4 621 2 709 2 1364 16 183 2 360 2 712 4 802 4 
652 2 164 2 387 4 728 2 582 2 188 2 306 2 849 2 1003 2 484 2 400 2 563 2 169 2 1364 2 791 2 7 2 1300 2 
1281 6 536 6 627 2 808 2 887 2 809 2 3 4 368 4 4 4 373 4 1372 2 1189 4 542 6 468 2 544 2 7 2 722 2 726 2 728 2 115 2 11 2 895 4 118 6 285 4 986 6 200 2 987 4 649 2 903 2 994 2 555 2 387 24 126 2 128 4 129 2 389 4 742 2 208 4 484 2 390 2 909 2 214 2 912 12 747 2 1127 4 663 4 135 4 300 2 1132 2 306 2 400 2 669 2 47 2 224 4 1033 2 1138 4 1139 2 675 2 850 2 932 2 680 4 1329 6 683 4 587 4 416 2 1336 2 1337 2 504 2 1150 2 505 4 67 12 777 2 1343 2 689 2 1060 2 693 4 338 2 604 2 340 2 514 2 780 2 608 2 1166 4 250 2 955 2 81 4 1257 2 791 2 1167 2 89 2 93 16 615 4 1263 2 254 4 795 4 963 2 529 2 1173 4 621 2 709 2 1364 16 183 2 360 2 712 4 802 4 
1281 6 536 6 627 2 808 2 887 2 809 2 3 4 368 4 4 4 373 4 1372 2 1189 2 542 6 468 2 544 2 7 2 722 2 726 2 728 2 115 2 11 2 895 4 118 6 285 4 986 6 200 2 987 4 649 2 903 2 994 2 555 2 1299 2 1300 2 1118 2 387 24 126 2 128 4 129 2 389 4 742 2 208 4 484 2 909 2 214 2 912 12 1127 4 663 4 135 4 300 2 1132 2 306 2 400 2 669 2 47 2 1019 2 312 2 224 4 1324 1 1033 2 1138 4 675 2 850 2 932 2 680 4 1329 6 683 4 587 4 416 2 1336 2 1337 2 504 2 1150 2 505 4 67 12 1343 2 689 2 1060 2 693 4 164 2 338 2 604 2 340 2 514 2 780 2 608 2 1166 4 250 2 81 4 1257 2 791 4 1167 2 89 2 93 16 615 4 1263 2 348 2 254 4 795 2 963 2 529 2 1173 4 621 2 709 2 1364 16 183 2 360 2 712 4 802 4 
714 2 717 78 1 3 719 38 720 38 5 2 6 32 7 2 8 2 9 2 722 8 724 2 723 2 725 8 726 2 14 2 15 8 731 2 732 2 17 2 18 2 22 2 21 2 23 2 734 2 738 2 26 2 25 2 27 2 740 2 741 24 28 2 29 154 743 2 31 2 744 2 34 2 36 2 38 38 748 2 749 3 41 2 750 2 42 9 43 2 752 2 753 2 754 2 44 2 45 4 755 4 756 2 46 38 757 10 48 3 760 46 51 88 52 2 762 3 763 76 764 2 765 4 55 2 54 38 56 2 58 2 769 66 59 2 60 154 61 2 770 24 62 2 64 6 773 36 774 2 65 36 778 8 69 2 71 10 73 2 74 10 779 2 76 2 77 2 780 126 78 2 782 2 79 2 784 2 785 3 83 2 82 2 787 154 789 2 84 2 85 2 791 10 790 2 90 18 91 1 792 2 92 38 795 110 794 2 96 78 98 2 796 2 99 2 100 4 797 2 798 2 799 2 800 2 802 392 102 2 105 2 106 60 107 2 108 2 109 2 811 3 112 2 111 2 813 2 814 2 815 4 115 4 116 2 818 20 820 2 118 10 120 2 121 18 122 2 821 3 123 4 822 2 124 2 125 2 127 2 129 2 131 20 832 4 132 2 134 4 133 2 834 2 835 24 138 2 836 2 837 2 141 2 838 4 839 100 143 2 841 4 144 2 145 2 146 4 842 2 147 14 843 2 846 2 847 1 151 4 152 2 852 2 153 2 154 3 853 2 855 2 156 1 856 76 857 2 157 3 859 38 158 2 159 2 860 2 161 4 862 2 863 3 163 2 164 2 166 2 167 10 865 3 168 2 868 2 869 3 171 20 870 2 174 38 173 2 175 38 176 2 872 2 178 78 873 6 874 38 877 2 876 2 184 2 185 12 878 2 879 102 880 4 881 6 187 76 883 2 884 2 887 2 890 2 191 2 892 2 194 2 894 2 893 2 195 10 196 2 197 4 897 4 898 4 201 6 900 3 202 2 904 2 905 8 204 24 206 2 205 2 207 80 208 20 910 2 211 2 913 24 914 2 216 2 915 76 916 2 918 2 919 2 219 2 923 6 924 2 222 2 223 2 926 4 930 124 931 4 933 2 934 3 935 4 230 76 938 2 940 76 231 78 941 2 942 2 233 22 943 2 944 4 945 1 947 2 235 22 948 2 238 2 237 4 239 61 949 2 241 11 951 12 245 6 952 12 248 2 953 2 250 80 954 2 249 6 956 2 957 1 958 12 959 4 960 8 254 185 257 2 962 2 258 544 963 2 965 2 964 80 259 20 967 2 263 3 968 2 264 32 969 4 970 3 265 76 266 2 971 2 267 2 973 6 268 2 976 76 978 2 977 2 270 34 272 4 274 3 979 2 275 38 276 16 277 12 981 2 280 2 281 2 985 1 283 3 284 2 286 38 989 2 993 12 994 2 992 2 289 2 290 10 995 2 996 8 997 78 998 10 999 6 1000 2 1002 3 293 2 294 2 1006 2 1007 2 299 2 1009 1 301 1 1012 2 1013 12 303 2 1015 2 1014 2 305 20 1017 6 307 8 1020 2 1021 2 1022 2 1023 8 1024 2 310 2 1026 3 1027 14 1028 2 313 14 1029 2 1032 2 314 2 1036 2 316 2 1037 3 318 2 1038 2 1040 2 1041 2 1043 2 1044 12 321 60 322 2 1047 78 1048 2 324 3 1049 76 326 8 1050 2 1051 2 328 38 329 2 1052 2 1053 2 1054 2 1055 2 330 20 1056 2 1057 14 332 2 1058 76 333 152 334 2 335 2 336 2 1059 2 1060 2 338 18 1061 2 339 2 1063 2 1062 2 1064 2 342 4 1065 78 1066 4 1067 3 344 2 345 2 1069 2 1073 2 1075 12 350 76 351 2 353 3 354 8 356 2 1078 2 357 2 1079 38 1083 38 1084 2 1085 2 361 2 363 80 1088 3 1087 2 1089 2 1090 2 1093 7 366 2 367 2 368 8 1094 52 372 2 1098 2 1099 2 375 2 376 3 1102 2 377 1 1105 2 1106 26 1107 2 1110 10 1111 2 382 2 383 3 384 2 385 2 386 7 387 1148 388 14 1120 2 1121 36 391 38 1125 2 392 2 1126 18 1128 2 1129 2 1130 2 393 4 1131 2 394 4 396 96 398 2 397 2 1133 6 1134 38 1135 38 402 2 403 2 404 76 1138 8 405 2 1141 2 406 2 1142 2 1143 10 409 8 410 76 1146 22 1145 34 413 2 415 2 416 2 417 100 1147 78 1148 102 418 22 419 2 421 1 1154 2 1156 2 1157 2 425 2 1158 2 1159 112 427 2 1160 4 1161 2 1162 2 429 18 430 2 1163 4 1164 2 431 152 1165 10 433 15 434 2 435 2 436 2 1167 32 439 2 443 1 446 4 447 78 1171 2 448 76 1172 9 449 2 1174 2 1175 2 450 3 451 2 452 2 453 2 455 2 454 48 1178 2 1179 10 1180 2 1181 78 1182 2 1183 2 459 2 460 3 461 2 462 8 464 112 465 2 1185 2 1186 16 1187 2 467 2 1188 2 1190 16 468 2 469 3 470 2 1191 2 471 2 472 2 1194 76 473 16 474 2 1197 14 476 6 1198 2 477 2 478 2 1200 2 481 2 1203 3 483 14 482 2 1204 4 1206 2 1207 54 487 3 1210 1 490 22 1215 2 491 2 1217 2 493 20 1220 4 1222 2 1221 26 495 2 497 2 1223 3 1224 8 1226 2 1228 2 1230 226 498 2 1229 2 1231 1 1233 2 1234 2 1236 2 1238 10 1239 2 501 3 1244 2 502 76 1245 2 504 2 1247 2 1248 2 1249 2 509 2 510 2 511 3 1250 2 512 4 513 2 514 2 1252 2 516 2 515 76 517 2 1254 3 518 2 1255 2 519 13 521 2 520 2 1257 2 1258 4 523 2 1259 4 1261 2 524 78 525 2 1263 82 527 2 526 76 1265 2 1267 2 1268 2 1269 14 1270 2 529 2 1271 78 530 24 531 2 533 3 1276 2 1277 2 535 4 1280 82 536 2 1282 5 1284 2 1283 2 1287 2 540 6 1288 2 1289 38 1291 34 543 2 544 306 547 3 548 2 549 4 551 12 1293 2 1294 2 1295 38 552 2 1296 2 554 2 556 16 558 2 559 2 1302 4 1305 2 1306 2 561 2 562 2 1308 2 1309 38 564 2 1310 2 1311 2 1312 20 1313 38 565 6 566 6 1314 2 570 4 571 3 1317 24 573 2 1318 20 574 4 575 2 576 2 577 82 1319 2 579 2 1320 2 580 2 1323 2 1322 4 1326 2 1324 3 584 4 1327 46 1329 1084 1332 2 1333 2 1331 18 1334 2 588 3 591 3 590 4 592 2 593 6 594 2 1339 3 595 2 596 2 597 60 1340 2 1343 8 1342 18 1345 2 1346 8 598 2 599 38 600 2 601 2 602 4 603 8 1349 2 605 78 1350 2 1351 2 1352 2 608 2 1354 2 609 2 610 6 611 2 1357 24 1359 2 1358 14 1361 2 618 2 619 2 1364 944 1365 60 1366 2 622 120 623 2 1367 2 625 84 1368 152 628 4 630 2 629 2 1369 2 632 2 633 2 634 2 1371 2 636 2 637 16 639 2 1372 316 1374 2 640 2 641 76 1376 2 1377 3 643 2 1379 4 644 2 646 2 647 15 1380 4 1382 2 649 2 650 2 1384 2 1386 2 1387 2 1388 6 1389 4 655 2 1390 2 1393 2 1394 2 659 2 660 2 662 2 1395 162 1396 1 666 2 1399 2 1397 2 667 2 1405 8 1407 226 1410 76 671 4 672 2 1411 2 674 22 1412 3 1413 2 677 2 679 66 681 2 1414 4 1415 24 1416 3 683 468 684 2 685 2 1418 10 1420 2 686 2 1422 2 687 6 688 78 689 2 691 2 1423 2 693 180 1426 5 1427 2 1429 2 694 40 697 10 695 2 1430 6 1431 174 1432 2 698 2 699 2 702 2 1433 2 1434 6 703 2 704 2 1440 2 1441 2 705 1 706 3 1442 18 709 2 708 2 711 38 1443 38 1444 2 
760 2 387 2 338 2 780 2 1327 6 1206 2 518 2 1044 2 85 2 392 2 869 2 1167 2 792 2 1418 4 795 2 531 2 729 2 473 2 1110 2 757 2 1364 2 598 2 124 2 1059 2 
760 2 387 2 338 2 780 2 1327 6 1206 2 518 2 1044 2 85 2 392 2 869 2 1167 2 792 2 1418 4 795 2 531 2 729 2 473 2 1110 2 757 2 1364 2 598 2 124 2 1059 2 
760 2 387 2 338 2 780 2 1327 6 1206 2 518 2 1044 2 85 2 392 2 869 2 1167 2 792 2 1418 4 795 2 531 2 729 2 473 2 1110 2 757 2 1364 2 598 2 124 2 1059 2 
760 1 387 2 581 2 795 1 780 2 140 2 531 2 676 2 839 2 1415 1 1094 2 1364 2 457 1 1100 2 835 1 185 2 792 2 
387 2 1094 2 1364 2 581 2 140 2 780 2 1100 2 676 2 531 2 839 2 185 2 792 2 
387 2 1094 2 1364 2 581 2 140 2 780 2 1100 2 676 2 531 2 839 2 185 2 792 2 
387 2 1094 2 1364 2 581 2 140 2 780 2 1100 2 676 2 531 2 839 2 185 2 792 2 
387 2 1094 2 1364 2 581 2 140 2 780 2 1100 2 676 2 531 2 839 2 185 2 792 2 
601 2 653 2 461 2 593 2 1218 2 274 2 
163 2 458 2 51 2 837 2 1389 2 799 2 274 2 
387 10 315 2 1325 2 1373 2 1070 1 1168 2 1243 2 961 2 1264 1 139 2 503 2 1195 2 97 2 775 1 620 2 19 2 308 2 1341 2 1080 2 648 2 1364 8 689 2 424 2 736 1 759 2 801 1 
1388 4 927 2 387 6 999 6 951 6 881 6 107 2 958 6 664 2 1434 4 566 4 1267 2 446 2 944 2 1376 2 1316 2 551 6 530 17 841 2 146 2 201 6 121 12 1364 6 923 6 1346 2 49 2 1084 2 
387 1 982 1 528 2 1001 2 817 4 851 2 151 2 131 2 1318 2 228 2 330 2 1297 2 1364 1 500 2 735 2 1330 6 291 2 1445 2 
528 2 1001 2 817 4 851 2 131 2 1318 2 151 4 228 2 330 2 1297 2 500 4 735 2 1330 6 291 4 1445 2 
387 1 982 1 528 2 1001 2 817 4 851 8 131 2 1318 2 151 8 228 2 330 2 1297 6 1364 1 500 8 735 2 1330 10 291 8 1445 2 
528 2 1001 2 817 2 131 2 1318 2 151 2 228 2 330 2 500 2 735 2 1330 2 291 2 1445 2 
265 6 1368 36 1184 4 879 42 1282 4 187 6 717 6 538 10 1091 4 189 2 465 8 1372 58 275 4 544 58 277 7 376 6 547 4 641 6 727 4 115 8 282 2 117 2 197 2 1194 6 1295 4 645 24 381 26 119 1 898 2 202 8 1115 2 997 6 125 8 386 4 387 150 29 16 1391 4 33 2 832 2 391 4 297 90 215 24 1395 50 913 15 1309 4 565 2 1313 2 1216 4 396 22 42 7 220 4 840 2 46 4 1407 84 1410 24 925 90 404 6 1324 4 1230 92 150 4 930 12 763 24 1412 2 1328 8 229 8 410 4 1144 2 585 12 1329 248 230 6 411 10 1047 6 683 112 1049 10 940 6 231 6 60 16 417 42 1147 6 502 6 856 10 234 26 423 2 688 6 508 2 333 17 1058 10 599 4 68 2 70 2 1426 4 241 11 603 4 75 18 431 18 606 4 952 8 247 6 1428 24 515 10 250 14 1065 6 1431 34 787 16 1258 2 524 6 174 4 1263 14 254 28 256 10 350 10 258 124 447 24 448 6 1271 6 178 6 1363 2 96 6 1079 4 358 2 1364 134 874 4 1081 4 1443 4 624 8 1280 8 1181 6 802 88 
1368 2 1031 2 1030 2 363 6 673 2 1324 2 1035 2 717 2 1232 2 538 2 1235 2 1091 2 365 2 189 2 465 2 229 2 499 2 1329 45 411 2 1372 3 1047 2 683 20 1049 2 721 2 544 3 113 4 231 2 60 4 376 3 856 2 1417 2 547 1 115 2 1419 2 117 2 946 2 730 2 1108 2 645 2 288 2 733 2 1112 2 507 2 333 2 1058 2 202 2 68 2 70 2 1347 2 426 2 1115 2 242 2 125 2 428 2 387 46 431 2 827 2 165 2 29 4 1428 2 515 2 656 2 250 2 1065 2 32 2 212 2 296 2 213 2 215 2 787 4 442 2 1263 2 255 2 254 37 256 2 218 2 1266 2 350 2 258 6 1133 4 1219 2 617 2 1271 2 494 4 568 4 921 2 96 2 358 2 1406 2 1364 44 1280 6 802 20 
186 2 265 4 804 32 1368 6 879 16 1282 4 717 4 187 4 1370 4 2 2 189 2 465 2 103 4 369 2 1372 30 275 4 544 28 376 2 641 4 115 2 117 2 1194 4 1295 4 1108 10 898 2 990 4 202 2 290 2 1115 2 997 4 125 2 387 78 29 10 1005 4 391 4 212 2 35 8 1395 8 913 8 1309 4 1211 2 395 2 42 3 46 4 1406 2 1407 24 404 4 1230 24 930 14 678 4 319 8 1144 2 1329 104 230 4 767 8 1047 4 683 44 940 4 1049 4 231 4 60 10 417 8 502 4 856 4 423 2 688 4 507 10 160 16 333 10 1058 4 599 4 68 2 70 2 1426 4 242 10 603 2 431 10 165 2 952 4 515 4 250 6 1353 4 1065 4 1431 30 787 10 1258 2 524 4 174 4 1263 6 254 14 444 4 350 6 258 24 447 8 448 4 1271 4 178 4 180 16 96 4 1079 4 359 8 1364 70 874 4 1443 4 1280 6 802 36 1181 4 
1368 2 1282 2 1324 2 717 4 1412 1 465 2 189 2 410 2 1329 40 1372 12 1047 4 683 14 721 2 544 12 1049 2 231 4 277 1 60 6 376 2 856 2 115 2 117 2 197 2 508 2 1058 2 202 2 333 2 68 2 70 2 1115 2 241 1 1426 2 125 2 603 2 386 2 387 28 431 2 165 2 29 6 952 4 515 2 250 2 1065 4 33 2 832 2 1431 6 787 6 913 5 396 9 1263 2 254 14 350 2 258 8 1271 4 96 4 358 2 1364 26 1280 4 802 14 
589 2 
833 1 864 1 929 1 352 1 441 1 713 1 
833 1 864 1 929 1 352 1 441 1 713 1 
833 1 864 1 929 1 352 1 441 1 713 1 
833 1 864 1 929 1 352 1 441 1 713 1 
833 1 864 1 929 1 352 1 441 1 713 1 
833 1 864 1 929 1 352 1 441 1 713 1 
833 1 864 1 929 1 352 1 441 1 713 1 
833 1 864 1 929 1 352 1 441 1 713 1 
833 1 864 1 929 1 352 1 441 1 713 1 
833 1 864 1 929 1 352 1 441 1 713 1 
833 1 864 1 929 1 352 1 441 1 713 1 
833 1 864 1 929 1 352 1 441 1 713 1 
833 1 864 1 929 1 352 1 441 1 713 1 
833 1 864 1 929 1 352 1 441 1 713 1 
833 1 864 1 929 1 352 1 441 1 713 1 
833 1 864 1 929 1 352 1 441 1 713 1 
833 1 864 1 929 1 352 1 441 1 713 1 
833 1 864 1 929 1 352 1 441 1 713 1 
833 1 864 1 929 1 352 1 441 1 713 1 
833 1 864 1 929 1 352 1 441 1 713 1 
833 1 864 1 929 1 352 1 441 1 713 1 
833 1 864 1 929 1 352 1 441 1 713 1 
833 1 864 1 929 1 352 1 441 1 713 1 
833 1 864 1 929 1 352 1 441 1 713 1 
833 1 864 1 929 1 352 1 441 1 713 1 
833 1 864 1 929 1 352 1 441 1 713 1 
833 1 864 1 929 1 352 1 441 1 713 1 
833 1 864 1 929 1 352 1 441 1 713 1 
833 1 864 1 929 1 352 1 441 1 713 1 
833 1 864 1 929 1 352 1 441 1 713 1 
833 1 864 1 929 1 352 1 441 1 713 1 
833 1 864 1 929 1 352 1 441 1 713 1 
833 1 864 1 929 1 352 1 441 1 713 1 
833 1 864 1 929 1 352 1 441 1 713 1 
833 1 864 1 929 1 352 1 441 1 713 1 
833 1 864 1 929 1 352 1 441 1 713 1 
833 1 864 1 929 1 352 1 441 1 713 1 
833 1 864 1 929 1 352 1 441 1 713 1 
833 1 864 1 929 1 352 1 441 1 713 1 
833 1 864 1 929 1 352 1 441 1 713 1 
833 1 864 1 929 1 352 1 441 1 713 1 
833 1 864 1 929 1 352 1 441 1 713 1 
833 1 864 1 929 1 352 1 441 1 713 1 
833 1 864 1 929 1 352 1 441 1 713 1 

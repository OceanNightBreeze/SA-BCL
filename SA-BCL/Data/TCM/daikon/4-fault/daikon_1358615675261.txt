#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR jtb.TokenMgrError 500 694 892 247 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V ERROR java.lang.ArrayIndexOutOfBoundsException 758 
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 935 574 373 673 90 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.ProglangType:baseIsIntegral()Z
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
utilMDE.ArraysMDE:sorted([I)Z
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.Quant:memberOf(J[J)Z
utilMDE.ArraysMDE:noDuplicates([J)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.Quant:concat([I[I)[I
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.ProglangType:baseIsScalar()Z
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
utilMDE.OrderedPairIterator:setnext2()V
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
utilMDE.WeakHasherMap:processQueue()V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eltwiseNotEqual([I)Z
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.Quant:eq(JJ)Z
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:eltsLtIndex([I)Z
daikon.Quant:subsetOf([S[S)Z
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.Quant:eltsLteIndex([I)Z
daikon.Quant:eq(FF)Z
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.ModBitTracker:split(I)I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.inv.Invariant:prob_and(DD)D
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.test.InvariantFormatTester:execute()Z
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
utilMDE.ArraysMDE:sum([[I)I
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.ProglangType:dimensions()I
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.Quant:ne(II)Z
daikon.Quant:subsetOf([B[I)Z
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.Token:newToken(I)Ljtb.Token;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
utilMDE.Intern:intern([I)[I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.VarInfoName.ElementsFinder:inPre()Z
jtb.JavaCharStream:BeginToken()C
daikon.diff.Node:getUserRight()Ljava.lang.Object;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
jtb.TokenMgrError:TokenMgrError(ZIIILjava.lang.String;CI)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:min([I)I
daikon.Quant:slice([III)[I
daikon.PptSlice1:num_samples()I
daikon.inv.unary.LowerBoundCore:computeProbability()D
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.ProglangType:isArray()Z
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.MathMDE:gcd(JJ)J
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
utilMDE.FuzzyFloat:eq(DD)Z
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.Quant:subsetOf([D[D)Z
daikon.Quant:eq(DD)Z
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.Quant:eltsNotEqual([II)Z
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.ArraysMDE:max([I)I
daikon.inv.unary.LowerBoundCore:calc_modulus()J
utilMDE.MathMDE:gcd([I)I
daikon.diff.RootNode:RootNode()V
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:sign(I)I
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.inv.unary.UpperBoundCore:calc_modulus()J
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.Quant:eltsEqual([II)Z
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.ArraysMDE:indexOf([II)I
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
utilMDE.ArraysMDE:sum([I)I
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.VarInfoName.Simple:isLiteralConstant()Z
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
jtb.JavaCharStream:getBeginLine()I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.ModBitTracker:num_sets()I
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:subsetOf([F[D)Z
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptSlice2:arity()I
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.Quant:lexLTE([I[I)Z
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:lexGTE([I[I)Z
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:memberOf(I[I)Z
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.VarInfo:name()Ljava.lang.String;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.ValueSet:ValueSet(I)V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.Debug:logOn()Z
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant:format()Ljava.lang.String;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
utilMDE.Options.OptionInfo:argument_required()Z
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
utilMDE.MathMDE:missing_numbers([I)[I
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.diff.InvMap:InvMap()V
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.Quant:lexGT([I[I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.Quant:sameLength([I[I)Z
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.MathMDE:mod_positive(II)I
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaCharStream:readChar()C
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
utilMDE.MathMDE:gcd_differences([I)I
daikon.Quant:subsetOf([D[F)Z
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.Quant:lexLT([I[I)Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quant:eq(II)Z
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:lt(II)Z
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.MathMDE:pow(II)I
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:memberOf(F[D)Z
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.inv.Invariant:getConfidence()D
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
utilMDE.LimitedSizeIntSet:size()I
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.Quant:memberOf(D[F)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.FuzzyFloat:lt(DD)Z
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.PptName:isEnterPoint()Z
daikon.Quant:lexNotEqual([I[I)Z
daikon.Quant:eltwiseLT([I)Z
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.Quant:eltsEqualIndex([I)Z
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.Quant:pairwiseSquare([I[I)Z
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.Quant:eltwiseLTE([I)Z
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaCharStream:getBeginColumn()I
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.ProglangType:isPseudoArray()Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:pairwiseLTE([I[I)Z
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.Ppt:Ppt()V
utilMDE.OrderedPairIterator:hasNext()Z
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.Quant:setDiff([I[I)[I
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:pairwiseDivides([I[I)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
utilMDE.Assert:assertTrue(Z)V
daikon.Quant:pairwiseGT([I[I)Z
daikon.VarInfo:relate_var()V
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.Quant:eltwiseEqual([I)Z
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
utilMDE.ArraysMDE:isSubarray([I[II)Z
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:subsetOf([J[J)Z
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.VarInfoName:isLiteralConstant()Z
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
utilMDE.ArraysMDE:subarray([JII)[J
daikon.PptSlice1:arity()I
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.Quant:memberOf(S[S)Z
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.inv.unary.scalar.LowerBound:enabled()Z
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
utilMDE.MathMDE:negate(I)I
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.inv.Invariant:justified()Z
daikon.ModBitTracker:num_vars()I
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.Quant:lte(II)Z
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.Quant:pairwiseLT([I[I)Z
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.PptName:isCombinedExitPoint()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3_16()Z
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:set_rel_diff(D)V
jtb.JavaParser:jj_2_16(I)Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.ValueTuple:isMissing(I)Z
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
jtb.JavaCharStream:backup(I)V
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.Intern:intern([D)[D
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.filter.InvariantFilter:InvariantFilter()V
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.Quant:eltwiseGTE([I)Z
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.ValueTuple:size()I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:pairwiseEqual([I[I)Z
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
utilMDE.Intern:internSubsequence([JII)[J
daikon.inv.unary.scalar.UpperBound:enabled()Z
jtb.syntaxtree.NodeOptional:NodeOptional()V
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
utilMDE.MathMDE:modulus([I)[I
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
utilMDE.ArraysMDE:sum([D)D
daikon.PptSlice0.ImplicationWrapper:hashCode()I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
jtb.JavaCharStream:GetSuffix(I)[C
utilMDE.Intern:intern([J)[J
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.FuzzyFloat:lte(DD)Z
utilMDE.ArraysMDE:concat([I[I)[I
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.Quant:union([I[I)[I
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
utilMDE.MathMDE:pow_fast(II)I
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eltsLTE([II)Z
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.ModBitTracker:ModBitTracker(I)V
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
utilMDE.LimitedSizeIntSet:add(I)V
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.inv.filter.InvariantFilters:InvariantFilters()V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Debug:logDetail()Z
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.PptSlice0:arity()I
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
utilMDE.MathMDE:gcd(II)I
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.ArraysMDE:isSubset([D[D)Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
jtb.JavaCharStream:getEndLine()I
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
jtb.JavaParser:jj_ntk()I
daikon.Quant:eltsLT([II)Z
daikon.VarInfo:new_ppt()V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.ArraysMDE:element_range([I)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_2()I
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.ValueTuple:isMissingFlow(I)Z
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:intersection([I[I)[I
utilMDE.FuzzyFloat:gte(DD)Z
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:isReverse([I[I)Z
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.TokenMgrError:addEscapes(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltsGteIndex([I)Z
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.ValueTuple:isMissingNonsensical(I)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
jtb.JavaCharStream:getEndColumn()I
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.ProglangType:isIntegral()Z
daikon.Quant:eltsGT([II)Z
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
utilMDE.FuzzyFloat:ne(DD)Z
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.VarInfoName:hashCode()I
daikon.Quant:eltsGtIndex([I)Z | OPERATOR | 179154 | ++ -> --
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
jtb.TokenMgrError:LexicalError(ZIIILjava.lang.String;C)Ljava.lang.String;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_2(J)I
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptSlice0:initInvariantsSeen()V
daikon.diff.Node:Node()V
utilMDE.WeakHasherMap:size()I
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.Quant:gt(II)Z
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant:prob_or(DD)D
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
jtb.TokenMgrError:TokenMgrError(Ljava.lang.String;I)V
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.PptMap:asCollection()Ljava.util.Collection;
utilMDE.FuzzyFloat:gt(DD)Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:setEqual([I[I)Z
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:subarray([III)[I
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern:numIntArrays()I
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.ModBitTracker:num_samples()I
daikon.Quant:subsetOf([F[F)Z
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:noDups([I)Z
utilMDE.OrderedPairIterator:setnext1()V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.Quant:memberOf(F[F)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.Invariants:Invariants()V
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:gte(II)Z
jtb.JavaParser:jj_scan_token(I)Z
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName:name()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
jtb.JavaCharStream:FillBuff()V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.Invariant:isWorthPrinting()Z
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
utilMDE.ArraysMDE:sum([[D)D
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
utilMDE.ArraysMDE:min_max([I)[I
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:indexOf([ZZ)I
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.inv.Invariant:logOn()Z
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.FuzzyFloat:indexOf([D[D)I
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
utilMDE.TestUtilMDE.1InternTest:test(Z)V
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.Quant:eltsGTE([II)Z
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.ProglangType:isScalar()Z
daikon.Quant:subsetOf([I[I)Z
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I | CONSTANT | 7917 | 3 -> 1
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo; | ASSIGN | 22517 | = null
daikon.inv.Invariant:prob_and(DDD)D
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
utilMDE.Intern:internSubsequence([III)[I
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.Quant:lexEqual([I[I)Z
daikon.inv.Invariant:logDetail()Z
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltwiseGT([I)Z
jtb.JavaCharStream:ReadByte()C
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
662 2 183 2 426 2 652 2 647 2 619 2 384 2 449 2 359 4 
541 2 720 6 809 2 41 6 577 2 853 6 237 2 430 2 267 2 115 2 513 2 
761 4 776 4 904 2 189 6 63 2 449 2 511 2 754 2 898 6 619 2 92 6 178 6 206 2 
187 2 588 2 346 2 831 4 489 4 109 6 767 10 67 16 627 2 655 8 945 2 744 10 838 16 839 29 412 16 466 2 43 10 950 4 715 4 449 6 753 26 144 8 614 10 721 8 235 8 617 6 697 10 619 6 475 2 698 12 
9 6 48 4 
486 2 
480 2 547 2 552 2 1 2 7 2 557 2 13 2 72 2 875 2 685 2 76 2 568 2 449 4 268 4 332 2 146 2 640 2 453 2 93 2 889 2 817 2 96 2 154 2 703 2 894 4 704 2 282 2 216 2 897 2 943 2 351 2 170 4 466 2 713 2 906 2 610 2 230 2 298 2 662 2 787 4 619 4 180 2 181 2 128 2 
424 2 29 8 584 4 915 4 428 4 109 4 8 2 67 32 767 6 768 4 627 2 655 18 744 16 745 6 531 6 257 4 445 2 15 6 838 32 839 54 412 32 840 2 356 6 43 16 607 2 950 2 449 4 753 48 637 6 614 16 49 2 721 6 723 6 617 4 697 16 619 4 546 4 56 4 698 22 
435 2 180 2 123 2 
533 2 684 2 623 2 905 2 1 2 539 2 419 2 719 2 145 22 755 10 579 2 365 2 808 2 370 2 
548 2 914 2 249 2 109 2 67 2 767 4 833 2 163 2 112 2 655 2 744 2 838 2 839 6 412 2 43 2 950 2 753 4 388 2 47 2 614 2 697 2 698 2 792 2 
839 16 412 8 428 4 356 6 43 4 798 2 489 2 753 12 67 8 614 4 89 2 697 4 698 4 531 6 744 4 257 4 838 8 
456 2 759 2 732 2 275 2 309 4 554 2 156 2 671 2 894 4 704 4 246 2 940 4 278 4 674 10 251 10 897 2 161 2 435 2 135 4 314 4 498 2 873 4 598 2 602 2 710 2 225 4 292 2 325 2 448 62 266 2 612 4 123 6 756 2 885 4 50 4 301 14 180 8 665 4 641 2 913 2 
876 2 686 2 416 2 262 2 486 2 254 2 390 2 421 2 36 2 406 2 
239 2 242 2 858 4 733 6 0 32 860 2 245 2 2 2 248 1 374 2 133 16 375 2 742 2 628 6 872 8 871 2 376 2 255 2 256 2 259 2 258 2 501 1 260 2 749 16 751 2 752 16 140 3 881 2 506 1 634 3 384 2 21 2 22 2 512 2 638 2 757 4 639 2 391 1 25 2 273 2 392 1 393 2 27 2 522 2 396 3 762 2 644 2 893 1 30 16 764 2 280 3 401 3 527 6 650 2 164 24 35 3 771 2 38 2 773 2 407 2 288 5 289 2 903 2 536 2 173 2 44 2 45 2 300 1 785 1 303 2 54 2 664 2 543 3 789 2 911 2 790 2 179 3 423 4 306 2 551 2 667 2 668 2 429 6 434 2 675 2 924 2 925 2 678 2 559 2 320 2 563 2 681 2 565 8 564 1 78 2 79 4 689 3 326 4 449 32 570 2 80 2 928 2 198 1 691 2 451 2 82 2 696 2 334 2 581 1 934 2 339 2 98 2 700 2 209 2 104 1 824 4 827 2 460 2 214 3 941 3 215 2 348 2 595 2 218 1 835 24 221 2 597 3 599 1 118 8 600 2 465 2 712 32 714 2 949 2 611 2 228 4 231 1 360 2 362 2 725 2 726 4 619 34 126 2 236 12 238 2 856 1 371 2 
849 2 619 2 
936 2 86 2 619 4 
797 2 
729 2 307 36 482 2 670 2 737 2 487 6 672 2 247 2 4 2 865 2 132 4 493 4 436 4 922 6 741 8 803 2 870 2 497 2 14 6 69 6 500 8 566 10 687 2 688 8 20 4 385 2 882 4 812 2 389 2 200 6 694 4 930 8 201 2 454 4 272 6 340 2 820 4 99 2 100 4 701 2 892 2 587 2 705 2 277 2 763 2 107 6 648 6 526 2 590 4 591 6 34 2 284 2 167 2 532 2 409 2 408 6 659 2 779 2 467 2 121 8 297 8 124 2 540 2 952 2 361 36 616 2 954 36 304 2 544 14 793 6 
748 2 516 1 287 2 317 2 
116 2 317 2 
718 2 233 2 620 2 180 2 831 2 317 2 252 2 
819 2 233 2 317 2 
926 2 233 2 317 2 
102 2 722 2 287 2 
233 2 317 2 
102 2 168 2 
151 2 317 2 
582 2 102 2 287 2 
864 2 287 2 519 2 
425 2 795 2 287 2 
514 2 287 2 450 2 
321 2 190 2 287 2 
102 2 464 2 
53 2 317 2 
864 2 379 2 
395 2 795 2 
514 2 953 2 
321 2 555 2 
102 2 383 2 
730 2 321 2 
514 2 758 2 
795 2 70 2 
864 2 64 2 
582 2 102 2 947 2 287 2 
582 2 102 2 947 2 287 2 378 2 
102 2 447 2 287 2 
102 2 287 2 387 2 
709 2 3 2 558 2 394 2 
624 2 19 2 180 2 252 2 
624 2 19 2 620 2 180 2 630 2 252 2 
233 2 437 2 180 2 831 2 317 2 252 2 
852 2 230 2 
180 2 831 2 129 2 252 2 
514 2 750 2 
321 2 916 2 
864 2 695 2 
795 2 643 2 
321 2 795 2 312 2 
321 2 795 2 213 2 
321 2 795 2 276 2 
321 2 795 2 219 2 
706 2 252 2 73 2 535 2 603 2 609 6 784 6 180 2 
102 2 250 2 
103 2 61 2 295 2 310 2 471 4 65 2 145 6 349 2 363 2 12 2 855 2 148 2 149 4 205 2 71 2 772 2 478 2 837 2 
711 2 287 2 
664 2 
858 4 733 2 0 6 734 2 485 2 245 2 863 2 2 2 628 2 376 2 255 2 256 2 258 2 260 2 749 6 506 2 384 2 635 4 22 2 143 2 757 4 25 2 273 2 642 2 522 2 762 2 764 2 281 2 527 4 529 2 650 2 773 2 289 2 775 2 903 2 417 2 303 2 790 2 423 4 551 2 667 2 429 6 313 2 440 4 925 6 681 2 563 2 74 2 78 2 810 2 79 2 326 2 449 26 80 2 928 2 451 2 82 2 693 2 696 2 824 2 827 2 345 2 830 2 595 2 218 2 118 2 600 4 712 4 714 2 611 2 726 4 619 26 236 8 476 2 
858 4 733 2 0 6 734 2 485 2 245 2 863 2 2 2 626 2 628 2 376 2 255 2 256 2 258 2 260 2 749 6 881 1 506 2 384 2 635 4 22 2 757 4 25 2 273 2 642 2 522 2 762 2 764 2 281 2 527 5 529 2 650 2 899 2 773 2 289 2 775 2 903 2 417 2 51 2 303 2 790 2 423 4 551 2 667 2 429 6 675 1 313 2 440 4 925 6 681 2 563 2 78 2 810 2 79 2 326 2 449 26 80 2 928 2 451 2 82 2 693 2 696 2 824 2 827 2 345 2 595 2 218 2 118 2 600 4 712 4 714 2 611 2 362 2 726 4 619 26 236 8 476 2 
680 2 
329 2 226 2 
549 2 481 4 731 2 667 2 858 2 669 2 62 2 429 4 430 4 800 8 6 2 433 2 11 2 868 4 442 10 807 2 315 2 255 2 377 2 560 4 258 2 747 2 682 2 681 2 809 2 264 2 386 2 449 6 267 2 928 2 513 4 578 2 271 2 335 8 518 2 336 2 891 2 938 2 157 4 525 2 279 2 650 2 773 2 169 2 534 4 39 2 414 2 41 6 415 2 296 2 122 2 418 2 951 2 720 6 724 2 853 6 854 2 619 12 791 4 423 2 
549 2 481 4 731 2 185 4 858 2 667 2 669 2 62 2 429 4 430 4 800 8 6 2 433 2 11 2 868 4 442 10 807 2 315 2 255 2 560 4 258 2 747 2 682 2 681 2 809 2 264 2 449 6 386 2 267 2 928 2 513 4 270 2 578 2 577 2 271 2 335 8 518 2 336 2 891 2 938 2 210 2 157 4 279 2 650 2 773 2 169 2 534 4 39 2 414 2 41 8 415 2 296 2 122 2 418 2 951 2 720 8 724 2 854 2 853 6 619 12 791 4 423 2 
534 2 39 2 549 2 41 2 938 2 264 2 157 4 430 2 513 2 11 2 578 2 271 2 854 2 853 2 807 2 791 4 315 2 169 2 
549 2 481 4 731 2 667 2 858 2 669 2 62 2 429 4 430 4 800 4 6 2 433 2 11 2 868 4 442 6 807 2 315 2 255 2 377 2 560 4 258 2 747 2 682 2 681 2 809 2 264 2 386 2 449 6 928 2 513 4 578 2 577 2 271 2 335 4 518 2 336 2 891 2 938 2 157 4 525 2 279 2 650 2 773 2 169 2 534 4 39 2 414 2 41 6 415 2 296 2 122 2 418 2 951 2 720 6 724 2 853 4 854 2 619 12 791 4 423 2 
549 2 481 4 731 2 667 2 858 2 669 2 62 2 429 4 430 4 800 4 6 2 433 2 11 2 868 4 442 6 807 2 315 2 255 2 377 2 560 4 258 2 747 2 682 2 681 2 809 2 264 2 386 2 449 6 928 2 513 4 578 2 271 2 335 4 518 2 336 2 891 2 938 2 157 4 525 2 279 2 650 2 773 2 169 2 534 4 39 2 414 2 41 4 415 2 296 2 122 2 418 2 951 2 720 6 724 2 853 6 854 2 619 12 237 2 791 4 423 2 
549 2 481 4 731 2 667 2 858 2 669 2 62 2 429 4 430 4 800 8 6 2 433 2 11 2 868 4 442 6 807 2 315 2 255 2 377 2 560 4 258 2 747 2 682 2 681 2 809 2 264 2 386 2 449 6 267 2 928 2 513 4 578 2 271 2 335 4 518 2 336 2 891 2 938 2 157 4 525 2 279 2 650 2 773 2 169 2 534 4 39 2 414 2 41 6 415 2 296 2 122 2 418 2 951 2 720 6 724 2 853 6 854 2 619 12 791 4 423 2 
549 2 481 4 731 2 858 2 667 2 669 2 62 2 429 4 430 4 800 8 6 2 433 2 11 2 868 4 442 10 807 2 315 2 255 2 377 2 560 4 258 2 747 2 682 2 681 2 809 2 264 2 386 2 449 6 267 2 928 2 513 4 578 2 271 2 335 8 518 2 336 2 891 2 938 2 157 4 525 2 279 2 650 2 773 2 169 2 534 4 39 2 414 2 41 6 415 2 296 2 122 2 418 2 951 2 720 8 724 2 853 8 854 2 619 12 237 2 791 4 423 2 
549 2 481 4 731 2 667 2 858 2 669 2 62 2 429 4 430 4 800 8 6 2 433 2 11 2 868 4 442 10 807 2 315 2 255 2 377 2 560 4 258 2 747 2 682 2 681 2 809 2 264 2 386 2 449 6 267 2 928 2 513 4 578 2 271 2 335 8 518 2 336 2 891 2 938 2 157 4 525 2 279 2 650 2 773 2 169 2 534 4 39 2 414 2 41 6 415 2 296 2 122 2 418 2 951 2 720 6 724 2 853 6 854 2 619 12 791 4 423 2 
481 4 731 2 733 2 0 8 485 2 245 2 2 2 488 2 6 2 739 2 11 2 255 2 256 12 258 2 747 2 260 2 502 1 749 6 503 6 263 2 264 2 22 2 509 4 513 4 757 4 23 2 271 2 273 2 518 2 521 1 764 2 524 1 279 2 766 2 527 6 529 2 285 2 773 2 39 2 534 4 41 4 291 2 294 2 296 4 786 2 303 2 791 4 549 2 551 2 553 7 62 2 797 6 800 2 313 2 807 2 315 2 560 6 809 4 78 2 79 2 326 2 811 2 80 2 571 7 86 6 578 2 333 2 94 6 336 2 338 1 97 2 823 2 342 2 824 2 585 6 826 2 827 2 595 2 354 6 118 2 604 2 122 4 849 6 615 2 848 2 853 8 854 2 619 46 858 4 130 6 131 6 868 8 628 2 376 2 377 2 380 2 881 2 384 2 386 2 884 2 887 2 891 2 155 6 645 6 157 4 895 6 650 2 165 6 654 1 656 2 169 2 410 6 902 10 414 2 415 2 418 2 663 4 909 2 423 4 184 1 667 2 669 2 429 6 430 4 433 2 675 2 676 2 440 4 193 2 925 6 442 2 443 1 681 2 682 2 449 24 196 8 928 2 690 1 451 2 696 2 932 2 933 2 455 2 458 2 938 2 702 6 212 6 942 2 707 1 712 2 948 2 951 2 720 12 724 2 726 4 237 4 236 4 728 2 476 4 
481 4 731 2 130 6 733 2 858 4 0 8 485 2 245 2 131 6 2 2 488 2 6 2 739 2 495 2 11 2 868 8 628 2 376 2 255 2 256 12 377 2 258 2 260 2 747 2 380 2 749 6 503 6 881 2 263 2 384 2 264 2 386 2 509 4 22 2 267 4 513 4 884 2 887 2 757 4 23 2 888 2 271 2 273 2 518 2 891 2 155 6 645 6 157 4 764 2 895 6 279 2 766 2 529 2 527 6 650 2 285 2 165 6 773 2 656 2 169 2 410 6 534 4 39 2 902 10 291 2 414 2 41 8 294 2 415 2 296 4 418 2 663 4 786 2 303 2 909 2 791 4 423 4 549 2 551 2 667 2 669 2 62 2 429 6 797 6 430 4 800 6 433 2 675 2 676 2 313 2 193 2 440 4 925 6 442 2 807 2 315 2 560 6 682 2 681 2 809 4 78 2 79 4 326 4 811 2 449 26 196 8 80 2 928 2 451 2 86 6 333 2 578 2 696 2 932 2 94 6 933 2 455 2 336 2 97 2 342 2 458 2 823 2 938 2 702 6 585 6 824 4 826 2 212 6 827 2 942 2 595 2 354 6 118 2 600 2 604 2 948 2 712 2 122 4 951 2 848 2 615 2 849 6 720 12 724 2 619 48 854 2 853 8 726 4 728 2 236 8 476 4 
481 4 731 2 130 6 733 2 858 4 0 8 485 2 245 2 131 6 2 2 488 2 6 2 739 2 495 2 11 2 868 8 628 2 376 2 255 2 256 12 377 2 258 2 260 2 747 2 380 2 749 6 503 6 881 2 263 2 384 2 264 2 386 2 509 4 22 2 267 4 513 4 884 2 887 2 757 4 23 2 888 2 271 2 273 2 518 2 891 2 155 6 645 6 157 4 764 2 895 6 279 2 766 2 529 2 527 6 650 2 285 2 165 6 773 2 656 2 169 2 410 6 534 4 39 2 902 10 291 2 414 2 41 8 294 2 415 2 296 4 418 2 663 4 786 2 303 2 909 2 791 4 423 4 549 2 551 2 667 2 669 2 62 2 429 6 797 6 430 4 800 6 433 2 675 2 676 2 313 2 193 2 440 4 925 6 442 6 807 2 315 2 560 6 682 2 681 2 809 4 78 2 79 4 326 4 811 2 449 26 196 8 80 2 928 2 451 2 86 6 333 2 578 2 696 2 932 2 94 6 335 4 933 2 455 2 336 2 97 2 342 2 458 2 823 2 938 2 702 6 585 6 824 4 826 2 212 6 827 2 942 2 595 2 354 6 118 2 600 2 604 2 948 2 712 2 122 4 951 2 848 2 615 2 849 6 720 12 724 2 619 48 854 2 853 8 726 4 728 2 236 8 476 4 
481 4 731 2 483 6 733 4 0 12 485 2 245 2 2 2 488 2 490 6 6 2 739 2 495 2 11 2 255 2 256 10 258 2 747 2 260 2 749 8 503 6 263 2 264 2 22 2 509 4 267 4 513 4 757 4 23 2 271 2 273 2 518 2 764 2 279 2 766 2 527 6 529 4 285 2 773 2 37 2 39 2 534 4 40 2 41 10 291 2 294 2 296 4 786 2 303 2 52 2 791 4 58 6 549 2 551 2 62 2 797 12 800 6 313 2 807 2 315 2 560 6 809 4 324 6 78 2 79 4 326 4 328 2 811 2 80 2 86 12 578 2 577 2 333 2 335 4 94 6 336 2 97 2 823 2 342 2 824 4 585 12 105 2 826 2 827 2 589 2 595 2 354 6 118 4 600 2 604 2 122 4 849 12 615 2 848 2 853 10 854 2 619 52 858 4 130 12 131 6 868 8 628 4 376 2 377 2 380 2 881 2 384 2 386 2 884 2 888 2 891 2 155 6 645 6 157 4 895 6 896 2 650 2 165 6 166 6 656 2 169 2 410 6 902 8 414 2 415 2 660 6 418 2 663 4 174 6 909 2 423 4 667 2 669 2 429 6 430 4 433 2 675 2 676 2 440 6 193 2 925 8 442 6 682 2 681 2 449 24 196 8 928 2 451 2 696 2 932 2 933 2 455 2 458 2 938 2 702 12 212 6 942 2 708 6 463 6 712 4 948 2 951 2 232 2 720 16 724 2 726 4 728 2 236 10 237 2 476 4 
481 2 731 2 938 2 62 2 157 2 430 4 800 6 6 2 868 2 442 4 807 2 315 2 377 2 560 2 747 2 809 2 41 6 415 2 264 2 386 2 267 2 418 2 513 4 951 2 720 4 578 2 271 2 724 2 619 4 854 2 853 6 335 4 791 2 891 2 336 2 
481 2 731 2 858 4 733 3 0 8 485 2 245 2 2 2 491 2 6 2 868 2 628 3 376 2 255 2 256 4 377 2 258 2 137 2 747 2 749 6 751 2 881 2 384 2 264 2 386 2 22 2 267 2 513 4 638 2 757 4 887 2 271 2 273 2 891 2 157 2 764 2 279 2 527 6 650 2 771 2 773 2 902 2 41 6 415 2 780 2 418 2 303 2 664 2 791 2 423 4 551 2 667 2 62 2 429 6 430 4 800 6 675 2 313 2 440 4 925 6 442 2 807 2 315 2 560 2 681 2 809 2 78 2 449 24 80 2 928 2 451 2 578 2 696 2 336 2 208 2 938 2 827 2 111 2 595 2 944 3 712 3 951 2 720 4 724 2 853 6 619 28 726 4 854 2 476 2 
550 2 724 2 418 2 
550 2 724 2 418 2 
481 2 731 2 858 4 0 2 485 2 245 2 862 2 863 4 2 2 867 2 868 4 376 2 255 2 256 4 258 2 260 4 17 2 380 2 749 2 18 2 879 2 881 2 384 2 508 2 509 2 22 2 267 4 513 4 269 2 757 4 271 4 273 2 518 2 397 4 399 2 764 2 157 2 159 2 527 6 650 2 773 2 169 2 534 4 39 2 902 2 41 12 777 2 296 4 418 6 783 2 663 2 909 2 791 2 423 4 550 2 551 2 667 2 669 2 62 2 429 6 430 4 800 6 433 2 675 2 313 2 925 2 442 6 560 4 194 2 681 2 683 4 809 4 78 2 79 4 326 4 449 16 80 2 928 2 451 2 85 2 333 2 578 2 577 4 696 2 335 4 821 2 938 2 824 4 827 2 461 2 110 2 595 2 354 2 712 2 122 2 720 16 724 4 726 4 619 24 853 12 236 4 237 4 476 6 956 2 
549 2 902 2 667 2 777 2 507 2 449 2 509 2 329 2 461 2 269 2 593 2 848 2 619 4 728 2 869 2 256 2 354 2 
481 2 731 2 858 4 735 2 0 2 485 2 245 2 863 4 2 2 868 4 867 2 376 2 255 2 256 2 258 2 260 4 17 2 380 2 749 2 18 2 381 2 879 2 881 2 384 2 508 2 22 2 267 4 513 4 883 2 269 2 757 4 271 4 273 2 518 2 397 4 764 2 157 2 527 6 650 2 773 2 169 2 534 4 39 2 41 12 777 2 296 4 418 6 783 4 663 2 909 2 788 2 791 2 423 4 550 2 551 2 667 2 669 2 62 2 429 6 430 4 800 6 433 2 675 2 313 2 925 2 442 6 560 4 319 2 682 2 681 2 683 4 809 4 78 2 79 4 326 4 449 16 80 2 928 2 451 2 85 2 333 2 578 2 577 4 696 2 335 4 821 2 938 2 824 4 827 2 461 2 110 2 595 2 354 2 712 4 122 4 720 16 724 4 726 4 619 24 853 12 236 4 237 4 476 6 956 2 
481 2 731 2 858 4 0 2 485 2 245 2 863 4 2 2 867 2 868 4 376 2 255 2 256 4 258 2 260 4 17 2 380 2 749 2 18 2 879 2 881 2 384 2 508 2 509 2 22 2 267 4 513 4 269 2 757 4 271 4 273 2 518 2 397 4 764 2 157 2 527 6 650 2 403 2 773 2 169 2 534 4 39 2 902 2 41 12 777 2 296 4 418 6 783 2 663 2 302 2 909 2 791 2 422 2 423 4 550 2 551 2 667 2 669 2 62 2 429 6 430 4 800 6 433 2 675 2 313 2 804 2 925 2 442 6 560 4 682 2 681 2 683 4 809 4 78 2 79 4 326 4 449 16 80 2 928 2 451 2 85 2 333 2 578 2 577 4 696 2 335 4 821 2 938 2 824 4 827 2 461 2 110 2 595 2 354 2 712 2 122 4 720 16 851 2 724 4 726 4 619 24 853 12 236 4 237 4 476 6 956 2 
935 2 322 2 138 2 523 2 31 2 373 2 673 2 844 2 452 2 574 2 595 2 90 2 177 2 619 4 912 2 222 2 
28 2 240 2 733 3 211 1 0 2 400 2 529 6 440 2 596 3 925 2 628 3 223 2 749 2 878 2 712 3 141 4 842 2 636 2 449 2 265 2 929 2 88 2 303 2 619 2 727 2 
28 2 240 2 733 2 0 2 400 2 529 6 440 2 596 2 925 2 628 2 223 2 749 2 878 2 712 2 141 4 842 2 636 2 449 2 265 2 929 2 88 2 303 2 619 2 727 2 
28 2 240 2 733 2 0 2 400 2 529 6 440 2 596 2 925 2 628 2 223 2 749 2 878 2 712 2 141 4 842 2 636 2 449 2 265 2 929 2 88 2 303 2 619 2 727 2 
794 2 733 3 0 2 484 2 244 2 796 2 738 4 133 2 67 2 191 2 744 2 75 4 505 2 449 4 753 4 697 2 95 4 586 6 343 3 30 2 347 2 400 2 765 3 350 4 838 2 290 2 839 6 412 2 119 4 413 2 712 3 43 2 843 3 614 2 721 4 303 2 617 2 55 2 619 10 127 2 
794 2 733 2 0 2 484 2 244 2 586 6 796 2 343 2 738 4 30 2 347 2 400 2 765 2 133 2 67 2 350 4 627 2 191 2 655 2 744 2 838 2 839 4 290 2 119 4 412 2 413 2 75 4 505 2 712 2 43 2 843 2 449 4 753 4 614 2 721 4 303 2 55 2 617 2 697 2 619 10 127 2 698 2 95 4 
794 2 733 2 0 2 484 2 244 2 586 6 796 2 343 2 738 4 30 2 347 2 400 2 765 2 133 2 67 2 350 4 627 2 191 2 655 2 744 2 838 2 839 4 290 2 119 4 412 2 413 2 75 4 505 2 712 2 43 2 843 2 449 4 753 4 614 2 721 4 303 2 55 2 617 2 697 2 619 10 127 2 698 2 95 4 
794 2 733 2 0 2 484 2 244 2 586 6 796 2 343 2 738 4 30 2 347 2 400 2 765 2 133 2 67 2 350 4 627 2 191 2 655 2 744 2 838 2 839 4 290 2 119 4 412 2 413 2 75 4 505 2 712 2 43 2 843 2 449 4 753 4 614 2 721 4 303 2 55 2 617 2 697 2 619 10 127 2 698 2 95 4 
794 2 733 2 0 2 484 2 244 2 586 6 796 2 343 2 738 4 30 2 347 2 400 2 765 2 133 2 67 2 350 4 627 4 191 2 655 4 744 2 838 2 839 4 290 2 119 4 412 2 413 2 75 4 505 2 712 2 43 2 843 2 449 4 753 4 614 2 721 4 303 2 55 2 617 2 697 2 619 10 127 2 698 4 95 4 
207 2 241 2 87 2 139 2 504 2 769 2 
199 2 153 2 494 2 810 2 364 2 769 2 907 2 
822 1 274 1 427 2 702 2 736 2 32 2 650 2 836 2 774 2 77 2 325 1 716 2 449 8 569 2 510 2 81 1 845 2 472 2 542 2 814 2 850 2 619 10 203 2 955 2 641 1 150 2 
547 2 29 2 67 6 627 2 655 2 745 4 531 4 744 6 257 2 631 2 838 6 839 16 261 2 412 6 171 2 43 6 449 6 753 12 358 2 331 2 614 6 721 4 517 2 617 2 453 2 619 6 697 6 477 2 56 2 698 3 
561 2 633 2 939 2 172 2 646 7 738 2 449 1 608 2 229 2 432 2 175 2 404 2 350 2 619 1 901 2 890 4 499 1 95 2 
561 2 633 4 172 2 939 4 646 6 738 2 608 2 229 2 432 2 175 4 404 2 350 2 901 2 890 4 95 2 
561 6 633 8 172 2 939 8 646 10 738 2 449 1 608 2 229 2 432 8 175 8 404 2 350 2 619 1 901 2 890 4 499 1 95 2 
633 2 172 2 939 2 646 2 738 2 608 2 229 2 175 2 404 2 350 2 901 2 890 2 95 2 
621 24 372 2 859 6 861 4 625 8 740 8 134 18 629 6 376 14 743 17 136 4 874 4 746 8 877 28 880 6 881 58 382 2 757 112 886 24 24 2 520 2 760 6 398 2 764 14 158 4 402 12 649 1 528 4 160 4 527 248 33 8 283 10 651 18 770 6 653 6 405 24 657 34 658 2 411 4 42 6 778 2 537 6 781 6 782 16 661 2 908 4 910 10 305 2 545 36 666 4 59 10 308 6 186 8 60 22 188 16 917 4 311 2 799 4 801 4 66 2 920 10 675 58 677 8 802 4 923 4 439 42 441 84 444 4 316 90 679 2 562 8 927 2 567 124 449 134 197 2 572 10 330 6 573 6 576 8 575 26 91 42 580 4 931 6 816 16 204 6 457 4 583 8 101 5 937 6 459 8 825 4 828 6 344 24 829 6 108 16 217 24 594 12 834 4 595 8 352 11 462 4 220 6 114 4 113 26 353 6 355 4 117 2 601 10 946 4 120 10 606 4 468 6 469 6 227 10 470 2 357 4 613 6 717 2 846 50 847 6 726 88 619 150 618 2 367 92 474 90 479 24 368 2 369 2 
59 2 622 2 243 2 186 2 859 2 311 2 556 2 5 2 918 2 492 2 919 2 920 2 675 2 921 2 740 2 134 2 496 2 10 2 677 2 802 2 68 2 805 2 866 2 438 2 376 2 743 2 632 2 16 2 562 2 323 2 877 38 567 6 881 2 880 4 382 2 327 2 142 2 195 2 449 44 197 2 572 2 692 2 83 2 573 2 576 6 757 20 515 2 815 4 24 2 580 2 147 2 816 4 337 2 26 2 818 6 152 2 341 2 699 4 101 2 937 2 106 2 398 2 764 2 108 4 832 2 527 44 592 2 283 2 217 2 162 2 595 2 770 2 405 2 220 2 224 2 601 2 120 2 293 4 778 2 227 2 538 2 782 4 46 2 847 2 910 2 234 2 176 4 619 46 726 20 545 2 366 2 479 2 
857 16 243 10 859 4 625 4 253 8 740 2 134 10 376 6 743 10 136 4 874 4 877 14 880 2 881 30 382 2 142 10 757 44 515 2 24 2 760 4 398 2 764 6 160 4 527 104 33 4 283 4 286 2 770 4 653 4 530 2 900 16 657 30 411 4 778 2 537 4 781 4 538 10 782 10 46 2 299 8 420 2 305 2 545 6 182 32 57 4 666 4 59 4 308 4 186 2 188 8 917 4 311 2 799 4 431 2 66 2 675 28 920 4 192 4 439 8 441 24 806 8 444 4 318 2 562 2 446 4 567 24 449 70 330 4 84 8 573 4 576 6 813 4 91 16 931 4 202 4 816 10 204 4 457 4 937 4 106 2 344 8 828 4 829 4 108 10 594 14 595 2 220 4 114 2 353 4 355 4 946 4 120 6 605 2 841 4 468 4 469 4 227 4 357 4 613 4 717 2 846 8 847 4 473 4 618 2 726 36 619 78 367 24 
59 2 60 10 186 2 859 4 188 6 311 2 675 12 920 2 740 2 134 2 923 2 805 2 376 2 743 2 679 2 746 2 562 2 877 14 567 8 881 12 880 2 382 2 449 26 197 2 573 4 576 4 757 14 24 2 816 6 101 2 937 4 106 2 398 2 764 2 108 6 527 40 33 4 283 2 595 2 352 2 770 4 462 2 220 4 114 2 657 6 411 2 120 2 778 2 227 2 470 2 782 6 661 2 357 2 847 4 619 28 726 14 545 2 368 2 369 2 
125 2 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V ERROR java.lang.NullPointerException 930 
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V ERROR java.lang.NullPointerException (425,678) (238,725) (238,725) 
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V ERROR java.lang.NullPointerException (425,678) (238,725) (238,725) 
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V ERROR java.lang.NullPointerException 579 (425,678) (238,725) (238,725) 
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NullPointerException 579 (425,678) 
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException 579 (425,678) (425,678) 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NullPointerException 579 (425,678) 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 900 960 577 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 515 253 125 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 515 253 125 
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_0()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_1()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_2()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_3()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_4()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_5()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_6()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_7()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_8()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_9()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_10()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_11()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_12()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_13()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_14()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_15()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_16()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_17()V PASSED
daikon.test.split.SplitterFactoryTest:testmisc_Fib_main_18()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_19()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_20()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_21()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_22()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_23()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_24()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_25()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_26()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_27()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_28()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_29()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_30()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_31()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_32()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__33()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__34()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__35()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__36()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__37()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__38()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__39()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__40()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__41()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__42()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__43()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.Quant:gte(II)Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
jtb.JavaCharStream:GetImage()Ljava.lang.String;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:pairwiseEqual([I[I)Z
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
utilMDE.Intern:intern([I)[I
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.Quant:lexGTE([I[I)Z
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.PptSlice0:initInvariantsSeen()V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:intersection([I[I)[I
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
jtb.JavaCharStream:BeginToken()C
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
utilMDE.ArraysMDE:concat([I[I)[I
daikon.Quant:lexEqual([I[I)Z
jtb.JavaCharStream:getEndLine()I
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.Quant:eltwiseEqual([I)Z
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.Quantify.Term:ioa_name()Ljava.lang.String;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.Quant:eq(II)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.Quant:memberOf(F[F)Z
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quantify.IOAQuantification:getVarIndexedString(I)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
utilMDE.MathMDE:gcd([I)I
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.ProglangType:baseIsScalar()Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.ValueTuple:isMissing(I)Z
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.VarInfo:new_ppt()V
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
utilMDE.ArraysMDE:sum([I)I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.inv.Invariant:prob_is_ge(DD)D
jtb.JavaCharStream:backup(I)V
daikon.Quant:lt(II)Z
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:internSubsequence([JII)[J
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
utilMDE.Intern:intern([D)[D
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
utilMDE.FuzzyFloat:lte(DD)Z
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
utilMDE.FuzzyFloat:eq(DD)Z
daikon.Quant:pairwiseDivides([I[I)Z
daikon.diff.RootNode:RootNode()V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:isSubarray([I[II)Z
jtb.JavaCharStream:FillBuff()V
daikon.VarInfoName:name()Ljava.lang.String;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.inv.filter.InvariantFilters:InvariantFilters()V
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;Ljava.lang.String;)V
utilMDE.FuzzyFloat:ne(DD)Z
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
utilMDE.ArraysMDE:subarray([III)[I
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
utilMDE.UtilMDE:lineNumberFileReader(Ljava.io.File;)Ljava.io.LineNumberReader;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.SimpleLog:SimpleLog(Z)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Ppt:Ppt()V
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
jtb.JavaCharStream:UpdateLineColumn(C)V
utilMDE.Intern:intern([J)[J
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.Quant:pairwiseGT([I[I)Z
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
jtb.syntaxtree.NodeOptional:NodeOptional()V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
utilMDE.OrderedPairIterator:hasNext()Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair; | ASSIGN | 1906 | = null
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quantify.IOAQuantification:getFreeVar(I)Ldaikon.Quantify.Term;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.ModBitTracker:num_sets()I
utilMDE.MathMDE:pow_fast(II)I
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 9283 | = null
daikon.ProglangType:isArray()Z
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
jtb.JavaCharStream:readChar()C
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:sum([[D)D
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;)Z
utilMDE.UtilMDE:lineNumberFileReader(Ljava.lang.String;)Ljava.io.LineNumberReader;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;)V
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.VarInfo:isIOAArray()Z
daikon.ModBitTracker:num_vars()I
daikon.Quant:eltsGTE([II)Z
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.diff.Node:Node()V
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.Quant:union([I[I)[I
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.ProglangType:isPointerFileRep()Z
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.VarInfo:esc_name()Ljava.lang.String;
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.inv.Invariant:prob_or(DD)D
daikon.Quant:memberOf(J[J)Z
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.Quant:eq(JJ)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
jtb.JavaCharStream:getEndColumn()I
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
utilMDE.MathMDE:negate(I)I
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:simplify_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.Quant:lexLT([I[I)Z
daikon.diff.InvMap:InvMap()V
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.VarInfo:apply_subscript(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.VarInfoName.Elements:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.Quant:eltwiseGT([I)Z
daikon.Quantify.IOAQuantification:IOAQuantification([Ldaikon.VarInfo;)V
jtb.JavaParser:jj_ntk()I
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.Quant:memberOf(I[I)Z
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ModBitTracker:num_samples()I
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.Quant:eq(FF)Z
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.inv.Invariant:prob_and(DDD)D
daikon.Quant:ne(II)Z
daikon.Quant:pairwiseLT([I[I)Z
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.Quant:eltsGteIndex([I)Z
daikon.PptName:isCombinedExitPoint()Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.Quant:isReverse([I[I)Z
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.PptSlice1:num_samples()I
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.Quant:pairwiseGTE([I[I)Z
daikon.Quant:eltwiseLT([I)Z
utilMDE.ArraysMDE:fn_inverse([II)[I
utilMDE.MathMDE:gcd_differences([I)I
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
utilMDE.WeakHasherMap:size()I
daikon.ProglangType:isScalar()Z
daikon.ProglangType:base()Ljava.lang.String;
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.Quant:eltwiseGTE([I)Z
daikon.Quant:memberOf(D[F)Z
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
utilMDE.MathMDE:modulus([I)[I
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String; | ASSIGN | 121036 | = null
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.MathMDE:missing_numbers([I)[I
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
utilMDE.OrderedPairIterator:setnext1()V
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:subsetOf([D[F)Z
utilMDE.ArraysMDE:min([I)I
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
jtb.ParseException:ParseException(Ljava.lang.String;)V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
jtb.JavaCharStream:getBeginLine()I
daikon.Quant:setDiff([I[I)[I
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eltsNotEqual([II)Z
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.PptSlice1:arity()I
daikon.ModBitTracker:split(I)I
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptName:isEnterPoint()Z
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
utilMDE.Assert:assertTrue(Z)V
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.VarInfo:simplify_name()Ljava.lang.String;
utilMDE.LimitedSizeIntSet:add(I)V
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
utilMDE.Intern:internSubsequence([III)[I
daikon.Quant:concat([I[I)[I
jtb.JavaCharStream:ReadByte()C
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:sum([[I)I
daikon.Quant:memberOf(S[S)Z
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.PptTopLevel.CondIterator:hasNext()Z
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
utilMDE.FuzzyFloat:gt(DD)Z
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.ProglangType:baseIsIntegral()Z
daikon.Quant:eltsGT([II)Z
utilMDE.WeakIdentityHashMap:indexFor(II)I
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:min_max([I)[I
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quantify.IOAQuantification:getFreeVarName(I)Ljava.lang.String;
utilMDE.ArraysMDE:fn_is_permutation([I)Z
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.Quant:eltwiseLTE([I)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.inv.Invariant:logDetail()Z
daikon.Quantify.IOAQuantification:getMembershipRestriction(I)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:subsetOf([J[J)Z
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.Quant:eltsLtIndex([I)Z
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.inv.Invariant:logOn()Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.Quantify.IOAQuantification:getClosingExp()Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.Quant:subsetOf([F[D)Z
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.VarInfoName.Elements:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE:mod_positive(JJ)J
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
utilMDE.FuzzyFloat:gte(DD)Z
daikon.Quant:memberOf(F[D)Z
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.Quant:eltsEqual([II)Z
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;Z)Z
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
daikon.VarInfoName:hashCode()I
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:eltsLteIndex([I)Z
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.VarInfo:isPointer()Z
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.test.InvariantFormatTester:execute()Z
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.Quant:eltsEqualIndex([I)Z
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.Quant:lexLTE([I[I)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
utilMDE.MathMDE:gcd(II)I
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:domainTypeIOA()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
jtb.JavaParser:generateParseException()Ljtb.ParseException;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:lexNotEqual([I[I)Z
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.OrderedPairIterator:setnext2()V
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.ValueSet:ValueSet(I)V
daikon.inv.Invariant:isWorthPrinting()Z
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.Quant:subsetOf([D[D)Z
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.ProglangType:isPseudoArray()Z
utilMDE.MathMDE:mod_positive(II)I
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.sequence.EltLowerBound:format_simplify()Ljava.lang.String;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.inv.Invariants:Invariants()V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.ProglangType:isFloat()Z
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.LimitedSizeIntSet:size()I
daikon.inv.Invariant:prob_and(DD)D
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.Quant:eltsLT([II)Z
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.Quantify:quantify([Ldaikon.VarInfo;)[Ldaikon.Quantify.QuantifyReturn;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfo:simplify_quantify(Ljava.util.EnumSet;[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
utilMDE.ArraysMDE:sum([D)D
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
utilMDE.ArraysMDE:max([I)I
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.VarInfo:isDerived()Z
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.VarInfo:isPrestate()Z
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.Quant:slice([III)[I
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.ProglangType:dimensions()I
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.Quant:subsetOf([F[F)Z
daikon.PptTopLevel:name()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfo:name()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.Quant:pairwiseLTE([I[I)Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:setEqual([I[I)Z
daikon.VarInfoName.Elements:ioa_name_impl()Ljava.lang.String;
daikon.Quant:subsetOf([I[I)Z
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Options.OptionInfo:argument_required()Z
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:lt(DD)Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ProglangType:baseIsFloat()Z
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.Quant:eltwiseNotEqual([I)Z
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.Invariant:getConfidence()D
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.Quant:subsetOf([S[S)Z
daikon.inv.unary.scalar.Positive:enabled()Z
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:element_range([I)I
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
jtb.Token:newToken(I)Ljtb.Token;
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.PptSlice2:arity()I
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.ModBitTracker:ModBitTracker(I)V
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.ValueTuple:isMissingFlow(I)Z
daikon.Quant:sameLength([I[I)Z
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.simplify.LemmaStack:noticeInt(J)V
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:subarray([JII)[J
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quant:eltsLTE([II)Z
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:processQueue()V
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.MathMDE:gcd(JJ)J
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.Quantify.IOAQuantification:getQuantifierExp()Ljava.lang.String;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quantify.FreeVar:name()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.ValueTuple:size()I
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.Debug:logOn()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.Quant:gt(II)Z
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.PptSlice0:arity()I
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern:numIntArrays()I
utilMDE.ArraysMDE:sorted([I)Z
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.Debug:logDetail()Z
daikon.VarInfo:java_name()Ljava.lang.String;
utilMDE.MathMDE:pow(II)I
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.VarInfoName.Elements:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.ProglangType:isIntegral()Z
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.VarInfo:apply_subscript(Ljava.lang.String;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:indexOf([II)I
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.inv.Invariant:justified()Z
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eq(DD)Z
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.ParseException:getMessage()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.test.FormatTestCase:passes()Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaCharStream:getBeginColumn()I
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.Quant:lexGT([I[I)Z
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
utilMDE.MathMDE:sign(I)I
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.VarInfo:get_all_simple_names()Ljava.util.List;
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfo:relate_var()V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.Quant:subsetOf([B[I)Z
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.Quant:eltsGtIndex([I)Z
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit; | OPERATOR | 4882 | == -> <
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:pairwiseSquare([I[I)Z
daikon.VarInfoName:ioa_name()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfoName:isLiteralConstant()Z
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.Quant:noDups([I)Z
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:lte(II)Z
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quantify.QuantifyReturn:QuantifyReturn(Ldaikon.VarInfo;)V
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
906 2 469 2 67 2 463 2 666 4 237 2 922 2 224 2 247 2 
200 2 201 2 486 4 613 6 824 2 419 6 384 2 53 2 136 2 776 2 930 2 
649 4 463 2 119 2 329 2 144 6 331 6 584 2 247 2 832 2 963 6 835 2 511 6 991 4 
4 29 615 10 799 2 478 2 247 6 508 10 673 2 772 4 14 16 114 2 116 26 569 10 83 16 513 8 599 4 159 4 718 2 628 10 20 6 463 6 935 16 301 8 204 8 132 2 997 2 912 8 28 12 179 6 817 10 277 4 
160 4 158 6 
788 2 
499 2 860 2 378 2 615 2 4 6 508 2 671 2 772 2 14 2 116 4 569 4 83 2 427 2 513 2 684 2 628 2 20 2 163 2 810 2 935 2 28 2 209 2 817 2 
599 2 793 2 628 4 686 6 615 4 4 15 898 4 508 4 935 8 193 2 14 8 28 5 116 12 731 6 83 8 817 4 295 4 
374 4 279 2 865 2 6 4 507 2 287 4 642 4 77 2 590 10 11 2 644 14 455 2 289 2 41 2 681 4 325 2 293 2 262 2 44 2 462 4 393 10 170 4 516 4 491 4 936 6 400 2 937 8 854 4 853 2 232 2 974 2 95 2 915 2 94 62 236 2 404 2 636 4 979 4 917 2 761 4 
819 2 73 2 348 2 195 2 169 2 722 2 692 2 788 2 408 2 732 2 
140 2 948 2 67 2 281 2 527 2 214 2 426 2 711 2 356 2 483 2 432 2 433 2 780 2 489 2 784 2 92 2 93 2 95 2 857 2 30 4 373 4 558 2 861 2 102 2 247 4 983 2 564 2 254 2 512 2 572 2 463 4 514 2 689 2 516 4 879 4 752 2 520 2 521 2 691 2 937 2 132 2 210 2 890 2 761 2 
792 6 615 16 4 54 898 4 706 6 247 4 508 16 673 2 251 2 9 4 252 2 901 4 772 2 14 32 116 48 569 6 83 32 117 4 295 4 513 18 628 16 430 2 463 4 992 8 20 4 394 6 488 2 686 6 298 4 91 4 517 6 935 32 301 6 28 22 730 2 942 2 731 6 179 4 817 16 
937 2 44 2 936 2 
967 2 121 2 126 22 504 2 983 2 494 2 587 2 495 2 553 2 743 2 555 2 157 10 762 2 308 2 
897 2 764 2 143 2 899 2 145 4 7 3 146 2 148 2 10 2 420 4 771 2 149 1 12 2 154 2 290 8 16 2 534 2 19 2 538 4 428 2 777 2 21 2 166 2 779 2 168 2 172 6 299 2 551 1 785 2 652 4 174 4 786 2 27 2 658 2 181 2 32 2 661 5 791 2 33 6 310 2 445 2 187 2 312 2 797 3 448 2 922 2 314 2 923 2 669 2 315 32 674 2 803 2 676 2 568 4 319 1 677 2 320 16 805 2 680 2 679 8 458 2 199 2 463 32 685 24 809 1 688 2 934 2 336 3 56 3 470 2 206 6 695 3 816 2 699 2 473 2 64 2 953 4 69 2 70 1 957 3 828 2 585 1 831 2 589 3 219 1 220 3 592 2 594 2 82 16 225 2 226 2 838 2 712 1 966 1 598 2 600 2 719 12 360 1 487 2 844 2 364 3 234 2 367 2 855 2 607 1 856 2 97 2 978 2 369 2 859 2 610 2 370 1 240 2 375 2 103 2 500 3 244 16 377 1 614 3 379 2 981 4 245 2 383 2 246 3 739 2 247 34 509 32 111 24 985 2 113 1 744 1 622 2 873 16 266 2 876 2 749 1 124 2 634 2 129 2 635 6 880 2 272 2 134 12 135 2 883 2 523 2 525 8 137 1 763 2 
282 2 
107 2 247 2 
353 2 667 2 247 4 
950 2 101 2 895 2 896 2 766 2 480 18 108 2 506 2 8 2 249 18 192 2 387 2 591 2 962 2 291 2 324 2 964 2 198 2 43 2 747 2 839 2 931 2 808 2 123 2 90 2 781 2 51 2 909 2 203 2 437 2 205 2 754 2 133 2 998 2 439 2 606 2 696 2 178 18 916 2 858 2 734 2 735 2 
304 2 63 2 790 2 327 1 
459 2 63 2 
612 2 892 4 716 2 68 2 431 2 980 2 544 2 630 2 956 2 283 2 126 6 286 2 346 2 755 2 389 2 554 2 535 4 484 2 
790 2 231 2 
937 2 99 2 49 2 479 2 
937 2 99 2 395 2 49 2 479 2 269 2 
937 2 99 2 159 2 440 2 338 2 63 2 
521 2 986 2 
937 2 99 2 159 2 709 2 
988 2 510 2 
265 2 109 2 
2 2 670 2 
815 2 841 2 
305 2 109 2 841 2 
588 2 109 2 841 2 
913 2 109 2 841 2 
25 2 109 2 841 2 
99 2 476 2 477 2 502 2 112 6 130 2 937 2 471 6 
354 2 701 2 
937 2 99 2 159 2 395 2 338 2 37 2 63 2 
338 2 63 2 727 2 
338 2 729 2 63 2 
361 2 354 2 790 2 
338 2 63 2 
354 2 556 2 
446 2 63 2 
354 2 17 2 790 2 
2 2 355 2 790 2 
724 2 841 2 790 2 
988 2 790 2 189 2 
109 2 371 2 790 2 
57 2 354 2 
751 2 63 2 
2 2 372 2 
522 2 841 2 
988 2 322 2 
388 2 109 2 
354 2 580 2 
358 2 109 2 
988 2 958 2 
570 2 841 2 
2 2 537 2 
354 2 50 2 17 2 790 2 
354 2 608 2 50 2 17 2 790 2 
354 2 127 2 790 2 
970 2 354 2 790 2 
81 2 759 2 357 2 227 2 
129 2 
1 2 897 2 145 2 146 2 10 2 420 4 148 2 422 2 12 2 538 4 166 1 779 2 168 2 908 2 172 6 551 2 652 4 174 2 27 2 29 2 791 2 33 2 310 2 922 2 448 2 923 2 669 2 449 2 315 4 674 2 39 2 568 4 679 2 463 26 464 4 202 2 934 2 206 5 60 2 816 2 473 2 64 2 69 2 217 2 830 2 837 2 225 2 838 2 969 2 719 8 490 4 234 2 856 2 97 2 369 2 370 2 103 2 105 2 379 6 981 2 245 2 247 26 739 2 509 6 984 2 871 2 987 2 622 2 873 6 266 2 749 4 634 2 635 2 880 2 134 8 883 2 135 4 763 1 
1 2 897 2 145 2 146 2 10 2 420 4 148 2 422 2 12 2 538 4 166 2 779 2 168 2 908 2 172 6 551 2 652 4 174 2 27 2 29 2 791 2 33 2 310 2 922 2 448 2 923 2 669 2 449 2 315 4 674 2 39 2 568 4 679 2 458 2 46 2 463 26 464 4 934 2 206 6 816 2 473 2 64 2 952 2 69 2 217 2 830 2 837 2 225 2 838 2 969 2 719 8 490 4 234 2 856 2 97 2 369 2 370 2 103 2 105 2 379 6 981 2 245 2 247 26 739 2 509 6 984 2 987 2 622 2 873 6 266 2 749 2 634 2 635 2 880 2 134 8 883 2 135 4 757 2 763 2 
441 2 
106 2 633 2 
0 4 69 2 419 6 420 2 424 8 351 2 425 2 776 2 228 4 597 2 714 4 359 2 717 10 486 6 779 2 723 2 549 2 172 4 725 2 651 2 652 2 306 2 368 2 856 2 238 2 239 2 613 6 737 2 795 2 382 2 923 2 247 12 565 2 674 2 454 2 115 2 456 2 989 2 872 8 200 4 463 6 47 2 267 4 332 2 632 2 128 4 634 2 54 2 53 2 694 4 939 2 883 2 136 4 940 2 884 2 579 2 405 2 1001 2 276 2 947 2 
239 2 0 2 613 8 795 2 419 6 247 4 424 8 351 2 115 2 425 2 989 2 872 8 776 2 597 2 714 2 200 4 201 2 486 4 717 8 846 2 267 2 723 2 128 2 725 2 493 4 53 2 54 2 651 2 694 2 939 2 136 4 940 2 579 2 306 2 275 2 276 2 238 2 947 2 
200 2 613 2 267 4 382 2 632 2 723 2 419 2 128 4 725 2 939 2 136 2 306 2 368 2 425 2 405 2 989 2 238 2 228 2 
613 4 795 2 419 2 424 4 351 2 425 2 989 2 872 4 597 2 200 2 201 2 717 4 267 2 723 2 128 2 725 2 53 2 54 2 651 2 939 2 940 2 136 2 306 2 276 2 238 2 947 2 
0 4 69 2 419 6 420 2 424 4 351 2 425 2 228 4 597 2 714 4 359 2 717 6 486 6 779 2 723 2 549 2 172 4 725 2 651 2 652 2 306 2 368 2 856 2 238 2 239 2 613 4 737 2 795 2 382 2 923 2 384 2 247 12 565 2 674 2 454 2 115 2 456 2 989 2 872 4 200 4 463 6 47 2 267 4 332 2 632 2 128 4 634 2 54 2 53 2 694 4 939 2 883 2 136 4 940 2 884 2 579 2 405 2 1001 2 276 2 947 2 
0 4 69 2 419 6 420 2 424 4 351 2 425 2 776 2 228 4 597 2 714 4 359 2 717 6 486 6 779 2 723 2 549 2 172 4 725 2 651 2 652 2 306 2 368 2 856 2 238 2 239 2 613 6 737 2 795 2 382 2 923 2 247 12 565 2 674 2 454 2 115 2 456 2 989 2 872 8 200 4 463 6 47 2 267 4 332 2 632 2 128 4 634 2 54 2 53 2 694 4 939 2 883 2 136 4 940 2 884 2 579 2 405 2 1001 2 276 2 947 2 
0 4 69 2 419 8 420 2 424 8 351 2 425 2 776 2 228 4 597 2 714 4 359 2 717 10 486 8 779 2 723 2 549 2 172 4 725 2 652 2 651 2 306 2 368 2 856 2 238 2 239 2 613 6 737 2 795 2 382 2 923 2 384 2 247 12 565 2 674 2 454 2 115 2 456 2 989 2 872 8 200 4 463 6 47 2 267 4 332 2 632 2 128 4 634 2 54 2 53 2 694 4 939 2 883 2 136 4 940 2 884 2 579 2 405 2 1001 2 276 2 947 2 
0 4 69 2 419 6 420 2 424 8 351 2 425 2 776 2 228 4 597 2 714 4 359 2 717 10 486 6 779 2 723 2 549 2 172 4 725 2 651 2 652 2 306 2 368 2 856 2 238 2 239 2 613 6 737 2 795 2 382 2 923 2 247 12 565 2 674 2 454 2 115 2 456 2 989 2 872 8 200 4 463 6 47 2 267 4 332 2 632 2 128 4 634 2 54 2 53 2 694 4 939 2 883 2 136 4 940 2 884 2 579 2 405 2 1001 2 276 2 947 2 
0 8 282 6 10 2 12 2 532 2 294 2 538 4 539 10 541 7 545 2 779 2 549 2 300 6 24 6 306 2 29 2 791 2 33 2 34 2 310 2 795 2 311 2 315 2 565 2 804 2 568 4 806 4 47 2 332 2 335 6 54 2 53 4 574 2 575 2 578 1 579 2 62 2 581 8 64 2 65 2 66 1 69 2 822 6 830 2 351 2 838 12 597 2 840 2 601 6 848 2 851 2 365 6 368 2 856 2 97 2 613 4 103 2 105 2 379 6 863 2 382 2 107 6 384 4 115 2 872 2 622 2 623 2 390 2 873 6 632 2 634 2 128 4 131 2 635 2 880 2 134 4 883 2 136 4 884 2 405 2 409 6 887 4 139 1 419 8 145 2 420 4 421 2 150 6 152 2 423 1 425 2 166 2 165 1 172 6 652 4 651 2 174 2 176 2 184 2 922 2 667 6 923 2 669 2 449 4 674 2 925 2 454 2 194 6 456 2 457 2 679 2 460 2 200 4 463 24 464 4 934 2 466 7 690 1 693 2 694 4 206 6 939 2 940 2 207 6 473 2 944 1 947 2 949 2 951 2 215 2 216 6 222 1 223 2 225 2 228 4 965 6 714 6 486 12 717 2 719 4 723 2 725 2 234 2 497 1 238 2 239 2 737 4 981 2 245 2 247 46 509 8 740 2 741 2 989 2 267 4 268 2 753 6 276 2 1001 4 763 2 
0 8 894 2 282 6 419 8 145 4 10 2 420 4 421 2 150 6 152 2 12 2 425 2 532 2 294 2 776 4 538 4 539 10 545 2 166 2 779 2 549 2 172 6 24 6 300 6 651 2 652 4 174 4 306 2 176 2 29 2 184 2 33 2 791 2 34 2 310 2 795 2 311 2 667 6 922 2 669 2 923 2 449 4 315 2 924 2 565 2 674 2 925 2 454 2 804 2 194 6 568 4 456 2 679 2 806 4 457 2 460 2 200 4 463 26 464 4 47 2 332 2 934 2 335 6 574 2 53 4 54 2 693 2 575 2 694 4 939 2 206 6 940 2 207 6 579 2 62 2 473 2 581 8 947 2 64 2 65 2 949 2 951 2 69 2 822 6 215 2 216 6 830 2 351 2 223 2 225 2 838 12 965 6 228 4 597 2 840 2 714 6 717 2 486 12 719 8 601 6 848 2 723 2 851 2 725 2 365 6 234 2 368 2 97 2 856 2 238 2 239 2 613 8 737 4 103 2 105 2 863 2 379 6 981 4 245 2 382 2 107 6 247 48 509 8 740 2 741 2 115 2 989 2 622 2 872 6 623 2 390 2 873 6 267 4 632 2 268 2 128 4 634 2 131 2 635 2 880 2 753 6 134 8 135 2 136 4 883 2 884 2 405 2 1001 4 276 2 887 4 409 6 763 2 
0 8 894 2 282 6 419 8 145 4 10 2 420 4 421 2 150 6 152 2 12 2 424 4 425 2 532 2 294 2 776 4 538 4 539 10 545 2 779 2 166 2 549 2 172 6 24 6 300 6 651 2 652 4 174 4 306 2 176 2 29 2 184 2 33 2 791 2 34 2 310 2 795 2 311 2 667 6 922 2 669 2 923 2 449 4 315 2 924 2 565 2 674 2 925 2 454 2 804 2 194 6 568 4 456 2 679 2 806 4 457 2 460 2 200 4 463 26 464 4 47 2 332 2 934 2 335 6 574 2 53 4 54 2 693 2 575 2 694 4 939 2 206 6 940 2 207 6 579 2 62 2 473 2 581 8 947 2 64 2 65 2 949 2 951 2 69 2 822 6 215 2 216 6 830 2 351 2 223 2 225 2 838 12 965 6 228 4 597 2 840 2 714 6 486 12 717 6 719 8 601 6 848 2 723 2 851 2 725 2 365 6 234 2 368 2 97 2 856 2 238 2 239 2 613 8 737 4 103 2 105 2 863 2 379 6 981 4 245 2 382 2 107 6 247 48 509 8 740 2 741 2 115 2 989 2 622 2 872 6 623 2 390 2 873 6 267 4 632 2 268 2 128 4 634 2 131 2 635 2 880 2 753 6 134 8 135 2 136 4 883 2 884 2 405 2 1001 4 276 2 887 4 409 6 763 2 
239 2 0 4 613 10 795 2 981 4 419 10 145 4 384 2 247 6 454 2 424 4 351 2 115 2 425 2 806 2 457 2 989 2 872 6 776 4 597 2 714 2 200 4 201 2 486 10 717 4 719 4 267 2 723 2 128 2 725 2 53 4 54 2 651 2 174 4 694 2 134 4 939 2 940 2 136 4 579 2 306 2 276 2 238 2 947 2 
239 2 0 2 613 6 795 2 419 6 247 4 454 2 424 4 351 2 115 2 425 2 989 2 872 6 776 2 597 2 714 2 200 4 486 4 717 4 267 2 723 2 128 2 725 2 53 2 54 2 651 2 694 2 939 2 940 2 136 4 579 2 306 2 276 2 238 2 947 2 
0 2 419 6 420 4 10 2 425 2 776 2 538 4 539 2 166 2 779 2 172 6 652 4 651 2 306 2 32 2 791 2 33 3 309 2 310 2 795 2 922 2 923 2 669 2 449 2 315 3 674 2 316 2 454 2 568 4 456 2 200 4 463 24 464 4 934 2 53 2 54 2 55 2 694 2 206 6 939 2 940 2 579 2 473 2 947 2 64 2 65 2 69 2 830 2 345 2 351 2 834 3 225 2 838 4 597 2 714 2 486 4 717 2 487 2 723 2 725 2 234 2 856 2 97 2 238 2 239 2 613 6 103 2 105 2 379 6 245 2 247 28 509 8 115 2 989 2 622 2 872 6 626 2 873 6 267 2 876 2 128 2 129 2 634 2 635 3 880 2 136 4 883 2 276 2 763 2 
239 2 778 2 940 2 
239 2 778 2 940 2 
0 4 419 10 145 4 285 2 10 2 420 4 12 2 422 4 424 2 425 2 776 4 538 4 539 2 162 2 166 2 779 2 172 6 652 4 174 4 911 2 654 2 306 2 791 2 560 2 310 2 922 2 923 2 669 2 449 4 315 2 674 2 568 4 806 2 200 4 201 2 463 16 934 2 53 4 694 2 206 6 940 2 579 2 473 2 64 2 69 2 75 2 830 2 710 2 838 4 714 2 717 2 486 10 719 4 723 2 234 2 856 2 97 2 96 2 239 2 613 10 103 2 105 2 379 2 981 4 245 2 384 2 247 24 509 2 618 2 621 2 115 2 622 2 872 6 392 2 873 2 267 2 749 2 634 2 128 2 880 2 753 2 134 4 883 2 136 4 887 2 889 2 763 2 
539 2 463 2 106 2 396 2 311 2 632 2 75 2 247 4 131 2 910 2 753 2 621 2 975 2 856 2 838 2 887 2 889 2 
0 4 419 10 145 4 285 2 10 2 420 4 12 2 422 4 424 2 425 2 776 4 538 4 162 2 166 2 779 2 23 2 172 6 652 4 174 4 911 2 654 2 306 2 791 2 560 2 310 2 922 2 923 2 669 2 449 4 315 4 674 2 568 4 806 2 678 2 200 4 201 2 463 14 934 2 53 4 694 2 206 6 940 2 579 2 473 2 64 2 69 2 830 2 710 2 838 2 714 2 717 2 486 10 719 4 723 2 234 2 856 2 97 2 96 2 239 2 613 10 103 2 105 2 379 2 981 4 245 2 384 2 247 20 509 2 618 4 621 2 115 2 622 2 872 6 392 2 873 2 267 2 634 2 128 2 880 2 134 4 883 2 136 4 889 2 763 2 
0 4 419 10 145 4 285 2 10 2 420 4 12 2 422 4 424 2 425 2 776 4 538 4 539 2 162 2 166 2 779 2 172 6 652 4 174 4 911 2 654 2 306 2 791 2 560 2 310 2 922 2 923 2 669 2 449 4 315 2 674 2 568 4 806 2 200 4 201 2 463 16 934 2 53 4 694 2 206 6 940 2 579 2 473 2 64 2 69 2 75 2 830 2 710 2 838 4 714 2 717 2 486 10 719 4 723 2 234 2 856 2 97 2 96 2 239 2 613 10 103 2 105 2 379 2 981 4 245 2 384 2 247 24 509 2 618 2 621 2 115 2 622 2 872 6 392 2 873 2 267 2 749 1 634 2 128 2 880 2 753 2 134 4 883 2 136 4 887 2 889 2 763 2 
1 2 526 2 765 4 4 14 6 2 769 2 287 2 288 1 10 2 530 2 12 4 13 2 773 4 14 8 531 2 292 2 533 2 15 6 775 2 18 4 296 4 538 28 542 2 297 2 543 8 22 4 779 2 547 2 548 6 551 2 302 4 301 6 550 10 787 3 28 6 29 46 307 2 33 19 791 2 309 2 794 12 310 8 36 2 313 2 561 2 798 2 800 2 315 19 802 2 318 2 566 2 39 2 567 2 568 32 321 6 323 2 571 10 326 2 45 2 807 2 330 16 48 2 333 2 573 4 334 2 52 4 812 4 574 2 337 4 814 28 55 2 576 3 58 4 59 2 61 6 577 2 339 2 817 4 818 4 64 2 820 2 582 2 69 2 341 4 72 1 823 2 826 6 825 2 74 2 345 2 78 4 79 2 80 2 833 2 593 2 82 4 352 3 595 2 834 2 837 2 83 8 838 2 85 4 842 2 843 2 88 2 87 2 602 4 845 4 847 5 363 4 850 1 849 2 852 3 854 2 366 4 97 2 856 2 609 10 370 2 98 4 100 8 376 2 103 2 104 2 105 2 379 14 380 2 615 4 864 14 616 2 617 2 866 4 110 2 868 2 619 2 620 2 116 12 622 4 624 2 625 14 391 2 626 2 628 4 120 2 118 2 873 14 874 2 875 2 631 4 122 2 878 3 634 2 401 2 635 16 880 2 881 2 882 2 403 4 134 29 883 2 886 4 406 4 888 2 138 2 891 2 410 2 413 1 412 4 414 4 415 2 893 2 141 8 142 2 417 4 898 4 418 4 147 2 420 4 900 2 645 2 903 4 155 4 647 2 905 2 648 8 434 4 166 17 170 2 171 2 908 2 172 6 435 2 650 2 652 4 438 1 175 2 655 4 656 2 177 2 657 4 180 1 442 8 179 4 182 6 443 2 918 4 444 2 662 8 919 16 664 3 920 2 921 8 447 2 922 4 669 2 923 2 449 2 672 2 452 2 451 12 674 2 190 1 191 2 926 14 197 2 679 20 928 2 460 2 461 4 683 4 463 74 932 2 687 2 464 12 933 2 934 2 468 16 935 8 938 2 206 67 941 24 472 1 697 2 208 4 698 2 942 4 473 2 946 2 945 4 211 18 949 4 702 16 213 2 474 2 475 16 954 4 955 2 215 2 704 2 705 2 218 2 959 2 217 2 960 2 961 1 707 4 221 2 223 2 225 2 482 3 485 2 715 2 969 2 968 4 229 2 719 28 488 2 721 4 491 2 492 2 971 18 230 2 972 2 496 2 234 8 728 2 731 6 733 2 736 2 241 2 242 2 738 22 244 6 245 4 503 8 247 90 508 4 984 14 509 28 740 2 987 2 258 2 990 2 746 4 261 10 513 4 263 2 993 2 268 2 519 2 994 4 995 18 518 2 996 2 270 2 271 2 274 4 756 2 758 1 999 2 1000 2 1002 16 1003 8 278 12 763 17 
33 2 415 2 663 2 664 2 36 2 379 2 825 2 247 2 769 2 110 2 509 2 315 2 258 2 225 2 261 2 463 2 873 2 464 2 435 2 550 4 635 2 29 6 609 2 410 2 
33 2 415 2 663 2 664 2 36 2 379 2 825 2 247 2 769 2 110 2 509 2 315 2 258 2 225 2 261 2 463 2 873 2 464 2 435 2 550 4 635 2 29 6 609 2 410 2 
33 2 415 2 663 2 664 2 36 2 379 2 825 2 247 2 769 2 110 2 509 2 315 2 258 2 225 2 261 2 463 2 873 2 464 2 435 2 550 4 635 2 29 6 609 2 410 2 
33 3 862 2 244 2 703 4 615 2 4 4 825 2 639 3 768 2 247 10 248 4 508 2 563 2 509 2 315 3 188 2 643 2 349 2 870 2 14 2 352 3 82 2 116 4 225 2 83 2 571 6 713 4 429 2 628 2 463 4 783 2 935 2 301 4 173 2 787 3 976 4 179 2 659 4 817 2 98 2 
33 2 862 2 244 2 703 4 615 2 4 4 825 2 639 2 768 2 247 10 248 4 508 2 563 2 509 2 315 2 188 2 673 2 643 2 349 2 870 2 14 2 352 2 82 2 116 4 225 2 83 2 571 6 713 4 429 2 513 2 628 2 463 4 783 2 935 2 301 4 173 2 787 2 28 2 976 4 179 2 659 4 817 2 98 2 
33 2 862 2 244 2 703 4 615 2 4 4 825 2 639 2 768 2 247 10 248 4 508 2 563 2 509 2 315 2 188 2 673 2 643 2 349 2 870 2 14 2 352 2 82 2 116 4 225 2 83 2 571 6 713 4 429 2 513 2 628 2 463 4 783 2 935 2 301 4 173 2 787 2 28 2 976 4 179 2 659 4 817 2 98 2 
33 2 862 2 244 2 703 4 615 2 4 4 825 2 639 2 768 2 247 10 248 4 508 2 563 2 509 2 315 2 188 2 673 2 643 2 349 2 870 2 14 2 352 2 82 2 116 4 225 2 83 2 571 6 713 4 429 2 513 2 628 2 463 4 783 2 935 2 301 4 173 2 787 2 28 2 976 4 179 2 659 4 817 2 98 2 
33 2 862 2 244 2 703 4 615 2 4 4 825 2 639 2 768 2 247 10 248 4 508 2 563 2 509 2 315 2 188 2 673 4 643 2 349 2 870 2 14 2 352 2 82 2 116 4 225 2 83 2 571 6 713 4 429 2 513 4 628 2 463 4 783 2 935 2 301 4 173 2 787 2 28 4 976 4 179 2 659 4 817 2 98 2 
720 2 904 2 827 2 465 2 183 2 984 2 385 2 
26 2 653 2 820 2 317 2 583 2 827 2 
821 2 865 1 216 2 829 2 247 10 342 2 450 2 350 1 84 2 42 2 328 1 540 1 86 2 463 8 264 2 779 2 605 2 546 2 436 2 813 2 303 2 235 2 236 1 789 2 943 2 340 2 
920 2 281 2 4 15 615 6 898 2 247 6 508 6 38 2 673 2 344 2 901 2 14 6 116 12 260 2 83 6 391 2 513 3 628 6 463 6 992 2 394 4 935 6 752 2 302 2 301 4 273 2 28 5 730 1 731 4 179 2 817 6 
877 2 638 2 76 2 604 2 398 2 467 2 973 2 708 2 524 2 976 2 498 2 659 2 713 2 
463 1 3 2 877 6 638 4 604 2 76 2 247 1 398 2 467 2 973 2 708 2 902 2 524 2 31 1 976 2 498 2 659 2 713 2 
3 2 877 6 638 4 76 2 604 4 398 4 467 2 973 2 902 2 708 2 524 4 976 2 498 2 659 2 713 2 
463 1 3 6 877 10 638 4 76 2 604 8 247 1 398 8 467 2 973 2 902 8 708 2 524 8 31 1 976 2 498 2 659 2 713 2 
413 2 414 6 141 12 765 6 417 6 418 6 288 2 903 6 645 4 155 6 538 36 648 12 543 12 434 6 22 5 166 20 177 4 657 6 180 2 442 12 182 12 918 6 662 12 310 10 665 2 921 12 796 2 800 4 802 2 190 2 568 42 40 2 196 2 461 6 683 6 463 78 48 3 52 6 812 6 814 42 337 6 576 3 938 4 58 6 206 88 208 6 472 2 339 4 700 1 211 4 945 6 946 4 818 6 212 2 582 4 341 6 71 2 72 2 961 2 707 6 78 6 85 6 842 2 845 6 602 6 721 6 847 8 363 6 850 2 852 3 234 10 366 6 100 12 376 4 738 22 245 4 503 12 616 4 247 90 253 2 745 2 515 2 631 6 125 2 995 4 401 2 882 2 403 6 134 4 758 2 406 6 886 6 1003 13 763 20 891 4 
280 2 637 2 141 2 640 2 770 2 586 2 347 2 13 4 153 2 774 2 155 2 836 2 596 2 536 2 538 16 842 2 161 2 89 2 164 2 362 2 726 2 233 2 234 2 914 4 180 2 442 2 185 4 186 2 310 2 243 2 245 2 381 2 501 2 503 2 505 2 247 36 867 2 801 2 453 2 250 2 802 2 190 2 869 4 386 2 742 2 675 2 253 2 257 2 40 2 568 16 927 2 682 2 627 2 515 2 463 36 629 2 330 4 748 2 749 2 811 2 750 2 125 2 397 2 812 2 399 2 814 2 882 2 58 2 134 28 206 32 885 2 
413 2 414 4 416 2 141 10 765 4 417 4 418 4 528 2 284 16 767 16 529 8 645 4 903 4 646 32 155 4 536 10 538 36 648 24 543 24 434 4 166 30 22 8 782 2 907 2 552 2 177 4 180 2 442 10 182 14 918 6 660 4 662 6 557 4 310 6 35 2 921 10 796 2 668 2 562 8 800 4 802 2 675 2 568 44 40 2 927 2 929 4 683 8 463 70 52 4 812 4 814 24 337 4 576 4 938 4 58 4 206 104 472 2 339 4 946 4 945 4 818 4 212 2 582 4 341 4 72 4 961 2 707 4 78 4 481 4 85 8 842 2 89 2 845 4 602 4 721 4 847 6 363 4 850 4 234 6 366 4 977 4 100 8 376 4 738 30 982 4 245 2 503 10 616 4 247 78 253 2 515 2 629 10 631 4 750 10 125 2 882 2 134 14 402 8 403 16 758 4 406 4 886 4 407 4 760 8 1003 10 891 4 763 28 
411 2 141 6 341 2 417 2 72 4 5 2 418 4 343 2 641 2 903 4 155 4 538 14 842 2 166 12 602 2 22 6 603 2 847 4 721 2 850 2 552 2 852 2 234 2 442 6 180 2 611 2 918 2 662 2 310 2 738 6 921 2 245 2 503 6 247 28 802 2 253 2 40 2 568 14 196 2 927 2 745 2 515 2 463 26 48 2 749 2 125 2 995 2 812 4 814 8 882 2 58 4 134 14 206 40 472 2 758 2 886 4 1003 2 211 10 763 12 
151 2 
559 1 256 1 255 1 167 1 259 1 156 1 
559 1 256 1 255 1 167 1 259 1 156 1 
559 1 256 1 255 1 167 1 259 1 156 1 
559 1 256 1 255 1 167 1 259 1 156 1 
559 1 256 1 255 1 167 1 259 1 156 1 
559 1 256 1 255 1 167 1 259 1 156 1 
559 1 256 1 255 1 167 1 259 1 156 1 
559 1 256 1 255 1 167 1 259 1 156 1 
559 1 256 1 255 1 167 1 259 1 156 1 
559 1 256 1 255 1 167 1 259 1 156 1 
559 1 256 1 255 1 167 1 259 1 156 1 
559 1 256 1 255 1 167 1 259 1 156 1 
559 1 256 1 255 1 167 1 259 1 156 1 
559 1 256 1 255 1 167 1 259 1 156 1 
559 1 256 1 255 1 167 1 259 1 156 1 
559 1 256 1 255 1 167 1 259 1 156 1 
559 1 256 1 255 1 167 1 259 1 156 1 
559 1 256 1 255 1 167 1 259 1 156 1 
559 1 256 1 255 1 167 1 259 1 156 1 
559 1 256 1 255 1 167 1 259 1 156 1 
559 1 256 1 255 1 167 1 259 1 156 1 
559 1 256 1 255 1 167 1 259 1 156 1 
559 1 256 1 255 1 167 1 259 1 156 1 
559 1 256 1 255 1 167 1 259 1 156 1 
559 1 256 1 255 1 167 1 259 1 156 1 
559 1 256 1 255 1 167 1 259 1 156 1 
559 1 256 1 255 1 167 1 259 1 156 1 
559 1 256 1 255 1 167 1 259 1 156 1 
559 1 256 1 255 1 167 1 259 1 156 1 
559 1 256 1 255 1 167 1 259 1 156 1 
559 1 256 1 255 1 167 1 259 1 156 1 
559 1 256 1 255 1 167 1 259 1 156 1 
559 1 256 1 255 1 167 1 259 1 156 1 
559 1 256 1 255 1 167 1 259 1 156 1 
559 1 256 1 255 1 167 1 259 1 156 1 
559 1 256 1 255 1 167 1 259 1 156 1 
559 1 256 1 255 1 167 1 259 1 156 1 
559 1 256 1 255 1 167 1 259 1 156 1 
559 1 256 1 255 1 167 1 259 1 156 1 
559 1 256 1 255 1 167 1 259 1 156 1 
559 1 256 1 255 1 167 1 259 1 156 1 
559 1 256 1 255 1 167 1 259 1 156 1 
559 1 256 1 255 1 167 1 259 1 156 1 
559 1 256 1 255 1 167 1 259 1 156 1 

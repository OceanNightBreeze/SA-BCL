#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V ERROR java.util.NoSuchElementException 546 635 422 
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR jtb.TokenMgrError 553 219 67 1019 458 337 571 867 768 391 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V ERROR java.lang.NullPointerException (241,577) (241,577) 
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 884 902 389 680 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
jtb.JavaCharStream:getEndLine()I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.Quant:intersection([I[I)[I
utilMDE.FuzzyFloat:lt(DD)Z
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
utilMDE.MathMDE:gcd([I)I
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.Ppt:Ppt()V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:subsetOf([D[D)Z
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.ProglangType:isScalar()Z
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
jtb.JavaParser:jj_3R_161()Z
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.Quant:subsetOf([I[I)Z
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.Quant:subsetOf([J[J)Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.Intern:internStrings([Ljava.lang.String;)V
jtb.JavaParser:jj_3R_118()Z
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.Quant:subsetOf([F[D)Z
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
utilMDE.ArraysMDE:max([I)I
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE:negate(I)I
jtb.JavaParser:jj_2_1(I)Z
jtb.JavaParser:jj_3R_62()Z
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:pairwiseLT([I[I)Z
daikon.Debug:logDetail()Z
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.Quant:slice([III)[I
utilMDE.ArraysMDE:concat([I[I)[I
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:setDiff([I[I)[I
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:eltwiseLT([I)Z
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.Quant:setEqual([I[I)Z
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
utilMDE.FuzzyFloat:eq(DD)Z
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
jtb.JavaCharStream:ReadByte()C
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.OrderedPairIterator:setnext1()V
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
utilMDE.ArraysMDE:min_max([I)[I
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_116()Z
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_85()Z
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.PptMap:asCollection()Ljava.util.Collection;
jtb.JavaParser:jj_3R_122()Z
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([I[I)I
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
utilMDE.SimpleLog.LongVal:LongVal(J)V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
utilMDE.ArraysMDE:noDuplicates([I)Z
jtb.Token:newToken(I)Ljtb.Token;
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.PptName:isEnterPoint()Z
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfo:simplify_name()Ljava.lang.String;
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.SimpleLog:SimpleLog(Z)V
jtb.JavaCharStream:GetImage()Ljava.lang.String;
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:lexNotEqual([I[I)Z
jtb.JavaParser:jj_3R_47()Z
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.ValueTuple:isMissingNonsensical(I)Z
jtb.JavaParser:jj_3R_55()Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.ProglangType:dimensions()I
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ModBitTracker:ModBitTracker(I)V
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:processQueue()V
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_89()Z
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName:hashCode()I
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
jtb.JavaParser:jj_scan_token(I)Z
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern:intern([J)[J
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
jtb.JavaParser:jj_3R_88()Z
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.Quant:pairwiseDivides([I[I)Z
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.Quant:eq(II)Z
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
jtb.JavaParser:jj_3R_123()Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
jtb.JavaParser:jj_3R_133()Z
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.Quant:eltsGT([II)Z
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:subarray([JII)[J
daikon.Quant:gte(II)Z
jtb.JavaCharStream:getBeginColumn()I
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.Invariant:prob_or(DD)D
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext2()V
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.Quant:eq(FF)Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.PptSlice1:num_samples()I
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:esc_name()Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
utilMDE.ArraysMDE:fn_is_total([I)Z
utilMDE.Intern:internSubsequence([III)[I
jtb.JavaCharStream:readChar()C
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_76()Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
utilMDE.MathMDE:missing_numbers([I)[I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.Quant:eltsNotEqual([II)Z
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern:internSubsequence([JII)[J
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:sum([[I)I
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
jtb.JavaParser:jj_3R_57()Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.ProglangType:baseIsScalar()Z
daikon.VarInfoName:name()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
jtb.TokenMgrError:addEscapes(Ljava.lang.String;)Ljava.lang.String;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.ProglangType:isArray()Z
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:memberOf(F[F)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap:size()I
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
jtb.TokenMgrError:LexicalError(ZIIILjava.lang.String;C)Ljava.lang.String;
jtb.JavaParser:jj_3_10()Z
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.inv.Invariant:getConfidence()D
daikon.Quant:memberOf(F[D)Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.Quant:subsetOf([D[F)Z
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_52()Z
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.Node:add(Ljava.lang.Object;)V
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | RETURN | 2258 | return null
utilMDE.ArraysMDE:sum([[D)D
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Node:Node()V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.Quant:memberOf(I[I)Z
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.ModBitTracker:split(I)I
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
jtb.JavaParser:jj_3R_60()Z
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:lexLTE([I[I)Z
jtb.JavaParser:jj_2_4(I)Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
jtb.JavaParser:jj_3R_61()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
utilMDE.MathMDE:pow_fast(II)I
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.VarInfo:jml_name(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.Quant:gt(II)Z
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.Invariant:prob_and(DD)D
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.Quant:isReverse([I[I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
utilMDE.LimitedSizeIntSet:add(I)V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_119()Z
daikon.inv.ValueSet:ValueSet(I)V
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3_14()Z
jtb.JavaParser:jj_3R_86()Z
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.PptSlice1:arity()I
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.ProglangType:baseIsIntegral()Z
daikon.inv.unary.LowerBoundCore:calc_range()J
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3_12()Z
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
jtb.TokenMgrError:TokenMgrError(ZIIILjava.lang.String;CI)V
utilMDE.MathMDE:gcd(II)I
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
jtb.JavaParser:jj_3R_68()Z
utilMDE.Intern:intern([I)[I
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
jtb.JavaParser:jj_3R_134()Z
jtb.TokenMgrError:TokenMgrError(Ljava.lang.String;I)V
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.VarComparabilityImplicit:alwaysComparable()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.Debug:logOn()Z
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:set_rel_diff(D)V
utilMDE.ArraysMDE:noDuplicates([J)Z
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:jj_3R_117()Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.VarInfo:esc_name(Ljava.lang.String;)Ljava.lang.String;
daikon.PptName:isCombinedExitPoint()Z
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
jtb.JavaParser:jj_3_15()Z
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE:gcd(JJ)J
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_2_16(I)Z
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.InvMap:InvMap()V
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:memberOf(D[F)Z
jtb.JavaParser:jj_3R_96()Z
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I | ASSIGN | 184000 | = null
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant:logOn()Z
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
utilMDE.MathMDE:modulus([I)[I
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
utilMDE.MathMDE:sign(I)I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:memberOf(S[S)Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.Quant:eltwiseLTE([I)Z
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_2_13(I)Z
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.ValueTuple:isMissing(I)Z
utilMDE.FuzzyFloat:gt(DD)Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.inv.Invariants:Invariants()V
utilMDE.ArraysMDE:indexOf([II)I
jtb.JavaParser:jj_2_14(I)Z
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.unary.UpperBoundCore:calc_modulus()J
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoAux:hashCode()I
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.JavaParser:jj_3R_97()Z
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.NodeToken:trimSpecials()V
utilMDE.FuzzyFloat:lte(DD)Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V | STATEMENT | 32359 | stmt -> ;
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.inv.Invariant:logDetail()Z
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.test.InvariantFormatTester:execute()Z
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_53()Z
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.LimitedSizeIntSet:size()I
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.inv.Invariant:isWorthPrinting()Z
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
jtb.JavaParser:jj_3R_135()Z
daikon.Quant:eltwiseGTE([I)Z
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.inv.Invariant:prob_and(DDD)D
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:memberOf(J[J)Z
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.PptSlice0:arity()I
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.ValueTuple:size()I
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
daikon.Quant:lexGT([I[I)Z
utilMDE.ArraysMDE:element_range([I)I
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
jtb.JavaParser:jj_3R_120()Z
daikon.diff.Node:getUserRight()Ljava.lang.Object;
jtb.JavaParser:jj_3_16()Z
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.Quant:pairwiseNotEqual([I[I)Z
jtb.JavaParser:jj_3R_54()Z
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.Quant:eltsLtIndex([I)Z
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.VarInfo:relate_var()V
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_58()Z
utilMDE.OrderedPairIterator:hasNext()Z
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.Quant:eltwiseNotEqual([I)Z
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
utilMDE.Assert:assertTrue(Z)V
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.Quant:eq(JJ)Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
jtb.JavaParser:jj_3_5()Z
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfo:name()Ljava.lang.String;
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.Quant:lexLT([I[I)Z
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
jtb.JavaParser:jj_3_1()Z
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.Quant:subsetOf([F[F)Z
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.Quant:pairwiseEqual([I[I)Z
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.ProglangType:isPseudoArray()Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant:justified()Z
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.ArraysMDE:subarray([III)[I
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.ModBitTracker:num_samples()I
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
utilMDE.ArraysMDE:sorted([I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
utilMDE.Intern:numIntArrays()I
daikon.Quant:pairwiseGT([I[I)Z
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_121()Z
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:lexGTE([I[I)Z
utilMDE.FuzzyFloat:ne(DD)Z
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.FuzzyFloat:gte(DD)Z
daikon.ValueTuple:isMissingFlow(I)Z
daikon.Quant:eltsLTE([II)Z
daikon.Quant:eltsLteIndex([I)Z
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_69()Z
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.Quant:eltsEqualIndex([I)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.Quant:eltwiseGT([I)Z
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_163()Z
daikon.ModBitTracker:num_vars()I
utilMDE.MathMDE:pow(II)I
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:sameLength([I[I)Z
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.ProglangType:isIntegral()Z
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:sum([I)I
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:subsetOf([S[S)Z
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:old_var_names(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.MathMDE:mod_positive(JJ)J
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.Quant:noDups([I)Z
jtb.JavaCharStream:getBeginLine()I
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Options.OptionInfo:argument_required()Z
jtb.JavaParser:jj_3R_48()Z
utilMDE.ArraysMDE:fn_compose([I[I)[I
jtb.JavaParser:jj_3_3()Z
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.test.FormatTestCase:passes()Z
daikon.Quant:lte(II)Z
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:lt(II)Z
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.Quant:lexEqual([I[I)Z
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_2_15(I)Z
jtb.JavaCharStream:BeginToken()C
daikon.Quant:eltsGTE([II)Z
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.config.Configuration:apply(Ljava.lang.String;)V
utilMDE.MathMDE:gcd_differences([I)I
daikon.Quant:pairwiseLTE([I[I)Z
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.LowerBound:enabled()Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.diff.InvMap:toString()Ljava.lang.String;
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaCharStream:FillBuff()V
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_51()Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.Quant:pairwiseGTE([I[I)Z
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
jtb.JavaParser:jj_3R_56()Z
daikon.Quant:eltwiseEqual([I)Z
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.Quant:eltsLT([II)Z
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.RootNode:RootNode()V
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
jtb.JavaParser:jj_2_5(I)Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.Quant:ne(II)Z
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:jj_2_3(I)Z
daikon.ModBitTracker:num_sets()I
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:subsetOf([B[I)Z
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
utilMDE.ArraysMDE:sum([D)D
daikon.PptSlice2:arity()I
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
utilMDE.Intern.SequenceAndIndices:hashCode()I
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.Quant:eq(DD)Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName:isLiteralConstant()Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:noDuplicates([D)Z
jtb.JavaParser:jj_3R_63()Z
utilMDE.MathMDE:mod_positive(II)I
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:eltsEqual([II)Z
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_50()Z
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice0:initInvariantsSeen()V
jtb.JavaParser:jj_3_4()Z
daikon.Quant:eltsGtIndex([I)Z
jtb.JavaCharStream:backup(I)V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
utilMDE.Intern:intern([D)[D
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.Quant:union([I[I)[I
daikon.inv.unary.scalar.UpperBound:enabled()Z
jtb.JavaParser:jj_3R_148()Z
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I | CONSTANT | 4877 | 40 -> 1
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_162()Z
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.Quant:pairwiseSquare([I[I)Z
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.Quant:concat([I[I)[I
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.ArraysMDE:min([I)I
jtb.JavaParser:jj_3R_49()Z
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
jtb.JavaParser:jj_3_13()Z
jtb.JavaParser:jj_ntk()I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
jtb.JavaCharStream:getEndColumn()I
daikon.VarInfo:new_ppt()V
daikon.Quant:eltsGteIndex([I)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
540 2 296 2 494 2 685 4 748 2 822 2 346 2 481 2 758 2 
51 2 108 6 754 2 561 2 319 2 686 2 189 2 593 2 14 6 324 2 303 6 
863 2 447 4 375 2 975 4 89 6 511 6 346 2 890 6 1065 2 276 2 802 6 438 2 758 2 
342 8 615 2 135 10 346 6 891 8 716 10 199 16 817 4 236 2 656 12 209 10 758 6 992 8 832 26 1060 16 245 6 993 4 213 10 524 6 288 2 361 2 335 2 1001 16 701 2 798 4 1004 8 367 10 299 4 148 30 612 2 
726 6 451 4 
572 2 
402 2 743 2 345 2 135 2 716 2 199 2 656 2 354 2 209 2 830 2 1060 2 832 4 993 2 213 2 524 2 1001 2 20 2 93 2 1004 2 217 2 298 2 367 4 148 6 
1060 8 832 12 213 4 52 2 628 4 135 4 333 4 716 4 1051 6 1001 8 798 2 199 8 148 14 656 5 209 4 901 6 960 2 
778 2 65 2 949 4 305 2 112 2 312 2 921 4 650 30 586 2 8 2 204 6 723 2 351 2 590 2 861 2 546 2 521 10 329 2 16 2 422 2 462 2 247 2 905 2 362 2 698 2 666 2 635 2 610 2 1008 6 799 2 882 2 1013 6 441 2 613 2 672 2 
747 2 783 2 892 2 454 2 174 2 835 2 180 2 871 2 147 2 572 2 
615 2 674 2 134 2 346 4 537 2 619 2 894 2 140 2 758 4 826 2 364 2 429 2 296 2 431 2 1040 2 769 2 371 2 641 4 152 2 154 4 112 4 584 4 32 2 383 2 723 2 116 2 1057 2 989 2 48 2 176 2 179 2 603 2 525 2 334 2 998 2 182 2 669 2 1006 2 255 2 878 2 61 2 1013 2 192 2 472 2 
851 2 950 2 647 6 225 4 135 16 978 2 346 4 716 16 891 6 1051 6 585 6 199 32 818 6 37 6 1024 4 656 22 205 2 209 16 758 4 901 6 1059 2 832 48 1060 32 245 4 993 2 213 16 628 4 524 4 333 4 1034 4 938 4 1001 32 1004 18 183 8 253 2 367 6 148 54 612 2 191 4 
949 2 799 2 1013 2 
262 2 663 2 536 2 679 2 412 2 365 2 1040 2 841 10 623 2 12 2 845 2 899 2 100 22 638 2 
401 2 129 2 404 2 0 2 806 1 533 1 406 2 675 1 952 2 808 2 535 2 409 3 136 2 271 1 272 3 413 2 541 2 9 3 542 2 687 2 688 6 548 2 283 2 143 2 18 8 19 6 964 3 425 4 292 2 562 1 295 2 703 2 433 2 705 3 437 2 439 2 570 2 151 2 28 2 306 8 307 2 711 2 972 2 578 4 156 1 857 2 981 2 316 2 318 1 453 2 34 2 36 1 588 2 322 3 591 2 724 1 169 2 595 2 170 2 328 1 330 2 461 2 990 2 727 2 598 2 600 4 175 4 866 2 869 2 872 2 605 2 1002 2 733 2 874 16 737 2 59 2 741 3 740 2 881 2 341 2 744 2 64 1 476 2 748 2 751 2 346 34 195 2 618 1 71 2 348 2 1018 2 206 2 897 2 78 1 898 2 79 2 758 32 624 3 491 2 83 2 626 6 1031 24 214 4 356 2 87 2 762 3 497 2 765 8 1035 3 90 4 92 2 505 2 636 1 640 4 639 2 777 12 509 32 374 2 917 2 1049 2 107 2 226 2 378 16 920 2 232 1 515 6 380 2 651 16 234 3 1055 2 926 1 927 2 660 2 933 2 390 16 120 2 664 2 250 24 251 2 940 5 254 2 397 2 1064 4 1066 3 531 2 1068 2 127 32 
294 2 
320 2 346 2 
702 2 485 2 346 4 
128 24 131 2 268 2 408 2 270 4 683 4 538 2 5 14 7 38 414 2 415 2 959 2 13 2 278 2 545 2 141 14 833 2 554 2 553 38 836 2 558 4 426 4 290 36 699 4 297 20 564 4 565 24 23 14 566 2 150 2 436 2 571 2 442 10 850 6 444 20 576 2 153 36 446 18 973 2 714 2 976 4 311 2 450 2 982 10 455 2 859 4 164 34 458 2 325 2 168 2 40 4 862 2 460 2 173 2 729 2 867 2 55 2 466 8 181 22 1000 20 731 4 336 120 185 4 736 4 1007 2 337 2 188 4 883 10 885 4 1015 4 66 4 344 2 67 2 477 8 889 36 753 4 69 2 893 4 483 8 1019 2 349 10 1021 38 895 2 896 2 352 24 1026 2 211 2 904 6 496 2 499 4 764 22 500 2 631 2 1038 2 218 14 768 2 219 102 774 2 1041 38 506 2 912 2 101 2 102 2 913 38 1044 4 642 2 643 2 103 120 1046 4 376 4 918 2 229 120 653 2 654 36 237 36 786 14 384 4 517 2 659 46 240 2 518 24 520 2 788 4 387 4 929 4 662 2 118 2 1058 4 119 2 523 2 388 2 1061 4 934 4 527 2 526 4 391 2 795 2 249 2 937 2 667 2 941 4 1062 16 124 4 1063 6 945 4 530 4 1067 38 
864 2 735 2 256 2 313 1 
104 2 256 2 
966 2 366 2 445 2 817 2 256 2 11 2 1013 2 
445 2 94 2 256 2 
445 2 46 2 256 2 
961 2 864 2 489 2 
445 2 256 2 
961 2 1012 2 
256 2 357 2 
961 2 864 2 794 2 
864 2 72 2 289 2 
922 2 864 2 471 2 
831 2 864 2 903 2 
864 2 943 2 908 2 
961 2 946 2 
756 2 256 2 
289 2 91 2 
625 2 471 2 
903 2 856 2 
700 2 908 2 
961 2 854 2 
908 2 1069 2 
903 2 1020 2 
471 2 848 2 
738 2 289 2 
961 2 864 2 794 2 910 2 
961 2 864 2 184 2 794 2 910 2 
961 2 864 2 252 2 
961 2 864 2 1048 2 
691 2 144 2 559 2 984 2 
366 2 1054 2 76 2 1013 2 
966 2 1036 2 366 2 1054 2 76 2 1013 2 
366 2 445 2 817 2 256 2 88 2 1013 2 
152 2 888 2 
366 2 817 2 75 2 1013 2 
279 2 903 2 
914 2 908 2 
953 2 289 2 
471 2 847 2 
471 2 908 2 782 2 
471 2 908 2 457 2 
471 2 722 2 908 2 
840 2 471 2 908 2 
405 2 263 2 577 6 366 2 1013 2 241 2 
961 2 629 2 
575 2 709 2 29 2 50 4 309 2 792 2 995 4 617 2 423 2 980 2 57 2 1023 2 772 2 880 2 100 6 725 2 419 2 400 2 
864 2 487 2 
866 2 
404 4 264 2 952 2 411 4 416 2 542 2 688 2 283 2 19 6 425 2 146 2 292 2 435 2 570 2 439 2 151 2 27 2 708 2 306 2 711 2 578 2 712 2 857 2 981 2 449 2 34 6 591 2 724 2 170 2 330 2 598 2 600 2 175 4 604 2 605 2 1002 2 874 6 737 2 59 2 740 2 744 2 64 2 476 2 748 2 346 26 1018 2 206 2 758 26 83 2 626 4 356 2 214 4 497 2 215 2 92 2 504 2 639 2 640 4 777 8 509 6 780 2 374 2 515 2 238 2 790 2 246 4 251 2 123 2 397 2 1064 4 257 2 531 2 1068 2 127 4 
404 4 264 2 406 2 952 2 411 4 541 2 416 2 542 2 543 2 688 2 283 2 834 2 19 6 425 2 146 2 292 2 435 2 570 2 439 2 151 2 708 2 306 2 711 2 578 2 712 2 857 2 981 2 453 2 34 6 591 2 724 2 170 2 330 2 598 2 600 2 175 4 604 2 605 2 1002 2 874 6 737 2 59 2 740 2 744 2 64 2 476 2 748 2 346 26 1018 2 206 2 758 26 83 2 626 6 214 4 356 2 497 2 215 2 92 2 504 2 639 2 640 4 777 8 509 6 374 2 515 2 238 2 661 2 790 2 246 4 251 2 123 2 397 2 1064 4 257 2 531 2 1068 2 127 4 
339 2 
359 2 315 2 
459 2 130 2 552 2 108 2 157 2 227 2 467 2 754 2 796 2 985 2 957 4 593 2 440 4 301 2 594 2 573 2 303 2 707 2 
948 2 130 2 475 2 476 2 746 4 952 2 267 2 955 2 887 2 346 12 754 4 957 4 206 2 14 6 758 6 551 2 83 2 552 2 356 2 761 2 19 4 428 4 632 2 432 4 22 2 704 2 440 4 221 2 301 2 573 2 303 6 707 2 639 2 640 2 1043 2 105 2 711 2 108 4 157 2 227 4 159 2 230 4 718 2 317 2 33 2 319 2 985 2 593 4 594 2 519 2 459 2 45 2 175 2 51 2 464 6 730 2 467 2 796 2 944 2 190 4 
948 2 130 2 475 2 476 2 746 4 952 2 267 2 955 2 887 2 346 12 754 4 957 4 206 2 14 6 758 6 551 2 83 2 552 2 356 2 761 2 19 4 428 4 632 2 432 4 22 2 704 2 440 4 221 2 301 2 573 2 303 4 707 2 639 2 640 2 1043 2 105 2 711 2 108 6 157 2 227 4 159 2 230 4 718 2 317 2 33 2 319 2 985 2 593 4 324 2 594 2 519 2 459 2 45 2 175 2 464 6 730 2 467 2 796 2 944 2 190 4 
948 2 130 2 475 2 476 2 746 4 952 2 267 2 955 2 887 2 346 12 754 4 957 4 686 2 206 2 14 6 758 6 551 2 83 2 552 2 356 2 761 2 19 4 428 4 632 2 432 8 22 2 704 2 440 4 221 2 301 2 573 2 303 6 707 2 639 2 640 2 1043 2 105 2 711 2 108 6 157 2 227 4 159 2 230 4 718 2 317 2 33 2 319 2 985 2 593 4 594 2 519 2 459 2 45 2 175 2 464 6 730 2 467 2 796 2 944 2 190 4 
948 2 130 2 475 2 476 2 746 8 952 2 267 2 955 2 887 2 346 12 754 4 957 4 686 2 206 2 14 8 758 6 551 2 83 2 552 2 356 2 761 2 19 4 428 4 632 2 432 8 22 2 704 2 440 4 221 2 301 2 573 2 303 6 640 2 707 2 639 2 1043 2 105 2 711 2 108 8 157 2 227 4 159 2 230 4 718 2 317 2 33 2 319 2 985 2 593 4 324 2 594 2 519 2 459 2 45 2 175 2 464 10 730 2 467 2 796 2 944 2 190 4 
948 2 130 2 475 2 476 2 746 8 952 2 267 2 955 2 887 2 346 12 754 4 957 4 686 2 206 2 14 6 758 6 551 2 83 2 552 2 356 2 761 2 19 4 428 4 632 2 432 8 22 2 704 2 440 4 221 2 301 2 573 2 303 6 707 2 639 2 640 2 1043 2 105 2 711 2 108 6 157 2 227 4 159 2 230 4 718 2 317 2 33 2 319 2 985 2 593 4 594 2 519 2 459 2 45 2 175 2 464 10 730 2 467 2 796 2 944 2 190 4 
804 1 264 2 534 2 267 2 809 6 813 2 815 4 274 2 542 2 14 12 824 6 283 2 552 2 17 8 285 1 19 6 286 2 292 2 21 2 294 6 22 2 570 2 573 2 303 4 301 2 306 2 578 2 580 2 582 10 314 1 317 2 319 4 33 2 34 6 320 6 321 6 591 2 593 4 324 4 594 2 45 2 598 2 600 2 331 6 606 6 874 6 873 2 616 2 887 2 346 46 621 2 73 2 83 2 626 6 356 2 630 2 632 2 369 2 640 4 639 2 372 1 374 2 105 2 108 8 925 2 658 2 932 2 122 6 394 4 668 2 396 2 944 2 126 2 127 2 671 2 403 2 130 2 948 2 406 2 952 2 955 2 684 2 957 4 688 2 418 6 689 1 962 2 696 2 425 2 428 6 146 2 432 2 704 2 440 4 439 2 151 2 970 2 707 2 710 1 711 2 712 2 713 6 157 2 159 2 981 2 160 2 718 2 453 2 162 6 985 2 459 2 175 4 464 2 996 2 730 4 467 2 1002 2 740 2 739 7 190 4 744 2 475 2 476 2 748 2 478 6 750 7 752 2 754 4 197 1 485 6 755 2 203 2 206 2 488 2 758 24 214 4 761 2 497 2 216 6 504 4 771 1 221 4 1043 2 777 4 509 8 510 6 1050 1 227 4 785 2 230 8 515 2 1053 6 519 2 246 4 796 2 797 2 1064 4 531 12 1068 2 
404 2 403 2 948 2 130 2 264 2 406 2 952 2 267 2 534 2 955 2 809 6 813 2 815 4 274 2 684 2 686 4 957 4 542 2 824 6 688 2 14 12 418 6 17 8 552 2 283 2 690 2 962 2 286 2 19 6 696 2 425 4 146 2 428 6 292 2 21 2 294 6 22 2 432 6 704 2 439 2 440 4 570 2 151 2 970 2 301 2 303 8 573 2 707 2 306 2 711 2 712 2 578 4 713 6 157 2 159 2 580 2 582 10 160 2 981 2 718 2 317 2 33 2 319 4 453 2 162 6 320 6 34 6 321 6 985 2 591 2 593 4 594 2 459 2 598 2 45 2 600 4 175 4 331 6 464 2 996 2 730 4 467 2 606 6 1002 2 873 2 874 6 740 2 190 4 744 2 475 2 476 2 616 2 748 2 478 6 887 2 752 2 346 48 754 4 621 2 73 2 485 6 203 2 755 2 206 2 488 2 758 26 83 2 626 6 84 2 214 4 356 2 761 2 497 2 630 2 632 2 216 6 504 4 369 2 221 4 639 2 640 4 777 8 1043 2 509 8 510 6 374 2 105 2 108 8 227 4 785 2 230 8 1053 6 515 2 925 2 658 2 519 2 932 2 246 4 122 6 796 2 797 2 394 4 668 2 396 2 944 2 1064 4 126 2 531 12 127 2 1068 2 671 2 
404 2 403 2 948 2 130 2 264 2 406 2 952 2 267 2 534 2 955 2 809 6 813 2 815 4 274 2 684 2 686 4 957 4 542 2 824 6 688 2 14 12 418 6 17 8 552 2 283 2 690 2 962 2 286 2 19 6 696 2 425 4 146 2 428 6 292 2 21 2 294 6 22 2 432 6 704 2 439 2 440 4 570 2 151 2 970 2 301 2 303 8 573 2 707 2 306 2 711 2 712 2 578 4 713 6 157 2 159 2 580 2 582 10 160 2 981 2 718 2 317 2 33 2 319 4 453 2 162 6 320 6 34 6 321 6 985 2 591 2 593 4 594 2 459 2 45 2 598 2 600 4 175 4 331 6 464 6 996 2 730 4 467 2 606 6 1002 2 873 2 874 6 740 2 190 4 744 2 475 2 476 2 616 2 748 2 746 4 478 6 887 2 752 2 346 48 754 4 621 2 73 2 485 6 203 2 755 2 206 2 488 2 758 26 83 2 626 6 84 2 214 4 356 2 761 2 497 2 630 2 632 2 216 6 504 4 369 2 221 4 639 2 640 4 777 8 1043 2 509 8 510 6 374 2 105 2 108 8 227 4 785 2 230 8 1053 6 515 2 925 2 658 2 519 2 932 2 246 4 122 6 796 2 797 2 394 4 668 2 396 2 944 2 1064 4 126 2 531 12 127 2 1068 2 671 2 
264 2 267 2 534 2 809 6 813 2 815 4 820 6 542 2 14 16 824 6 280 2 283 2 552 2 17 8 19 6 286 2 292 2 21 2 294 12 22 2 570 2 573 2 303 10 301 2 306 4 578 4 580 2 582 8 317 2 319 4 33 2 34 8 320 12 321 12 591 2 593 4 324 2 594 2 41 6 598 2 45 2 600 4 51 2 331 6 606 6 874 8 873 2 616 2 887 2 346 52 621 2 73 2 83 2 626 6 84 2 356 2 630 2 632 2 369 2 640 4 639 2 374 2 646 6 105 2 108 10 925 2 658 2 932 2 122 6 394 4 668 2 396 2 125 2 944 2 126 2 127 4 671 2 404 2 403 2 130 2 948 2 406 2 952 2 955 2 684 2 957 4 686 4 688 4 418 6 690 2 693 6 962 2 696 2 425 4 428 6 146 4 432 6 704 2 440 4 439 2 151 2 970 2 707 2 443 2 711 2 712 2 713 6 157 2 159 2 981 2 160 2 717 2 448 2 718 2 453 2 162 6 456 2 985 2 988 6 459 2 175 4 464 6 996 2 730 4 467 2 468 6 1002 2 1003 2 740 2 190 4 744 2 475 2 476 2 746 4 748 2 478 6 752 2 754 4 485 12 755 2 203 2 206 2 488 2 758 24 214 4 761 2 497 2 1037 2 216 12 504 4 220 6 221 4 1043 2 777 10 509 12 510 6 1047 6 227 4 784 6 785 2 230 8 515 4 1053 12 519 2 246 6 796 2 797 2 1064 4 531 10 1068 2 
1043 2 130 2 475 2 746 4 105 2 955 2 108 6 157 2 346 4 159 2 754 4 230 2 317 2 319 2 686 2 985 2 957 2 14 4 593 4 594 2 45 2 552 2 761 2 464 4 428 2 632 2 22 2 432 6 944 2 704 2 190 2 440 2 573 2 303 6 707 2 
130 2 264 2 406 2 952 2 954 2 1 2 955 2 274 2 686 2 957 2 542 2 14 4 688 3 552 2 283 2 19 6 428 2 292 2 22 2 432 6 704 2 440 2 570 2 439 2 151 2 303 6 573 2 707 2 711 2 712 2 157 2 159 2 981 2 582 2 317 2 319 2 453 2 34 6 985 2 588 2 591 2 593 4 594 2 45 2 598 2 175 4 866 2 464 2 874 6 740 2 881 2 190 2 474 3 744 2 475 2 476 2 748 2 887 2 346 28 754 4 206 2 208 2 758 24 491 2 83 2 626 6 214 4 356 2 761 2 497 2 632 2 98 2 504 2 640 4 639 2 1043 2 509 8 374 2 105 2 108 6 230 2 515 3 246 4 944 2 1064 4 398 2 531 4 1068 2 127 3 
948 2 130 2 475 2 476 2 746 8 952 2 267 2 955 2 887 2 346 12 754 4 957 4 686 2 206 2 14 6 758 6 551 2 83 2 552 2 356 2 761 2 19 4 428 4 632 2 432 8 22 2 704 2 440 4 221 2 301 2 573 2 303 6 707 2 639 2 640 2 1043 2 105 2 711 2 108 6 157 2 227 4 159 2 230 4 718 2 317 2 33 2 319 2 985 2 593 4 594 2 519 2 459 2 45 2 175 2 464 10 730 2 467 2 796 2 944 2 190 4 
948 2 130 2 475 2 476 2 746 8 952 2 267 2 955 2 887 2 346 12 754 4 957 4 686 2 206 2 14 8 758 6 355 2 83 2 552 2 356 2 761 2 19 4 428 4 632 2 432 8 22 2 704 2 440 4 221 2 301 2 573 2 303 8 640 2 707 2 639 2 1043 2 711 2 105 2 108 6 157 2 227 4 230 4 718 2 317 2 33 2 319 2 985 2 593 4 594 2 519 2 459 2 42 2 45 2 175 2 51 2 601 4 464 10 730 2 467 2 796 2 944 2 190 4 
45 2 944 2 971 2 
45 2 944 2 971 2 
948 2 264 2 406 2 952 2 534 2 813 2 815 2 273 2 417 2 957 2 686 4 542 2 14 16 418 2 142 2 283 2 552 2 19 6 425 4 428 4 292 2 432 6 22 2 570 2 440 2 151 2 573 4 303 12 971 2 711 2 578 4 712 2 310 2 977 2 582 2 981 2 33 2 453 2 319 4 34 2 985 2 592 4 591 2 593 4 324 4 459 2 44 2 45 6 598 2 600 4 175 4 51 4 464 6 730 2 467 2 1002 4 873 2 874 2 740 2 190 2 744 2 476 2 748 2 746 4 346 24 754 4 350 2 206 2 1025 2 758 16 83 2 626 6 214 4 356 2 761 2 497 2 504 6 221 4 639 2 640 4 777 4 509 2 374 2 781 2 106 2 108 12 227 4 513 2 230 4 235 2 238 4 1056 2 519 2 928 2 930 2 243 2 121 4 665 2 394 2 944 4 1064 4 531 4 1068 2 127 2 
44 2 930 2 711 2 932 2 346 4 582 2 315 2 815 2 273 2 201 2 684 2 115 2 531 2 567 2 418 2 758 2 301 2 
948 2 264 2 406 2 952 2 534 2 267 2 813 2 273 2 417 2 957 2 686 4 542 2 14 16 418 2 142 2 283 2 552 2 19 6 425 4 428 4 292 2 432 6 22 2 570 2 440 2 151 2 573 4 303 12 971 2 711 2 578 4 712 2 977 2 981 2 33 2 453 2 319 4 34 2 38 2 985 2 592 4 591 2 593 4 324 4 459 2 44 2 45 6 598 2 49 2 600 4 175 4 51 4 464 6 730 4 467 2 1002 4 873 2 874 2 740 2 190 2 744 2 476 2 748 2 746 4 346 24 754 4 200 2 350 2 206 2 1025 2 758 16 1029 2 83 2 626 6 214 4 356 2 761 2 497 2 504 6 221 4 639 2 640 4 777 4 509 2 374 2 106 2 108 12 227 4 230 4 652 2 235 4 238 4 519 2 928 2 930 2 243 2 121 4 665 2 394 2 944 4 1064 4 531 2 1068 2 127 4 
948 2 264 2 406 2 952 2 534 2 267 2 813 2 815 2 273 2 417 2 957 2 686 4 542 2 14 16 418 2 142 2 283 2 552 2 692 2 19 6 425 4 428 4 292 2 432 6 22 2 570 2 440 2 151 2 573 4 303 12 971 2 711 2 578 4 712 2 977 2 582 2 981 2 33 2 453 2 319 4 34 2 985 2 592 4 591 2 593 4 324 4 459 2 44 2 45 6 598 2 600 4 175 4 51 4 464 6 730 4 467 2 1002 4 873 2 874 2 740 2 742 2 190 2 744 2 476 2 748 2 746 4 346 24 480 2 754 4 350 2 206 2 1025 2 758 16 83 2 626 6 214 4 356 2 761 2 497 2 504 6 221 4 639 2 640 4 777 4 509 2 374 2 106 2 108 12 227 4 230 4 233 2 235 2 238 4 519 2 928 2 789 2 930 2 243 2 121 4 665 2 394 2 944 4 1064 4 531 4 1068 2 127 2 
261 2 406 2 265 6 952 2 266 4 135 2 811 2 680 2 681 2 814 2 275 2 819 2 542 2 688 4 550 2 832 4 283 2 694 2 557 2 19 6 963 2 695 2 146 4 21 2 430 2 967 2 148 6 434 2 706 2 568 2 569 2 570 2 439 2 151 2 851 2 306 4 711 2 712 2 158 2 715 2 716 2 160 2 583 2 161 2 983 2 453 2 34 8 166 2 172 2 994 2 175 4 870 2 868 2 465 6 604 2 1001 2 470 2 874 8 1004 2 608 2 877 2 186 2 611 2 60 2 740 2 884 2 744 2 886 2 476 2 748 2 616 2 752 2 346 28 621 2 199 2 74 2 755 2 206 2 209 2 758 22 80 2 901 4 902 2 83 2 626 4 213 2 214 2 356 2 628 2 497 2 633 2 634 2 504 2 775 2 640 4 639 2 777 6 222 2 509 12 644 1 374 2 916 2 228 2 110 2 648 2 231 2 649 2 515 4 655 2 925 2 656 2 386 2 522 2 1060 2 389 2 246 6 392 6 393 2 528 2 1064 2 531 2 532 2 1068 2 127 4 
947 2 805 2 509 2 373 4 346 2 482 2 515 3 34 2 35 2 688 3 165 3 758 2 282 2 421 2 246 2 627 2 146 6 874 2 96 2 843 2 260 2 439 2 127 3 911 2 
947 2 805 2 509 2 373 4 346 2 482 2 515 2 34 2 35 2 688 2 165 2 758 2 282 2 421 2 246 2 627 2 146 6 874 2 96 2 843 2 260 2 439 2 127 2 911 2 
947 2 805 2 509 2 373 4 346 2 482 2 515 2 34 2 35 2 688 2 165 2 758 2 282 2 421 2 246 2 627 2 146 6 874 2 96 2 843 2 260 2 439 2 127 2 911 2 
509 2 853 4 30 2 135 2 378 2 2 2 678 3 346 10 716 2 891 4 581 2 1052 4 196 2 198 4 816 4 199 2 202 2 688 3 209 2 758 4 420 3 759 3 832 4 1060 2 245 2 213 2 390 2 728 2 906 6 287 2 560 4 1001 2 732 2 395 2 148 5 801 2 260 2 439 2 127 3 399 2 
509 2 853 4 30 2 135 2 378 2 2 2 678 2 346 10 716 2 891 4 581 2 1052 4 196 2 198 4 816 4 199 2 202 2 656 2 688 2 209 2 758 4 420 2 759 2 832 4 1060 2 245 2 213 2 390 2 728 2 906 6 287 2 560 4 1001 2 732 2 395 2 1004 2 148 4 801 2 612 2 260 2 439 2 127 2 399 2 
509 2 853 4 30 2 135 2 378 2 2 2 678 2 346 10 716 2 891 4 581 2 1052 4 196 2 198 4 816 4 199 2 202 2 656 2 688 2 209 2 758 4 420 2 759 2 832 4 1060 2 245 2 213 2 390 2 728 2 906 6 287 2 560 4 1001 2 732 2 395 2 1004 2 148 4 801 2 612 2 260 2 439 2 127 2 399 2 
509 2 853 4 30 2 135 2 378 2 2 2 678 2 346 10 716 2 891 4 581 2 1052 4 196 2 198 4 816 4 199 2 202 2 656 2 688 2 209 2 758 4 420 2 759 2 832 4 1060 2 245 2 213 2 390 2 728 2 906 6 287 2 560 4 1001 2 732 2 395 2 1004 2 148 4 801 2 612 2 260 2 439 2 127 2 399 2 
509 2 853 4 30 2 135 2 378 2 2 2 678 2 346 10 716 2 891 4 581 2 1052 4 196 2 198 4 816 4 199 2 202 2 656 4 688 2 209 2 758 4 420 2 759 2 832 4 1060 2 245 2 213 2 390 2 728 2 906 6 287 2 560 4 1001 2 732 2 395 2 1004 4 148 4 801 2 612 4 260 2 439 2 127 2 399 2 
137 2 1022 2 97 2 557 2 999 2 827 2 
381 2 823 2 855 2 39 2 604 2 490 2 827 2 
852 2 673 2 974 2 346 10 810 2 719 2 452 2 860 2 821 2 206 2 861 1 758 8 492 2 1030 1 462 1 791 2 793 1 942 1 216 2 800 2 187 2 1010 2 773 2 846 2 637 2 473 2 
261 2 135 6 346 6 716 6 891 4 32 2 199 6 956 2 37 4 656 5 758 6 209 6 901 4 991 2 1059 1 832 12 1060 6 245 2 994 2 213 6 628 2 525 2 54 2 1001 6 634 2 1004 3 183 2 148 15 612 2 191 2 62 2 
508 2 1032 2 155 2 579 2 53 2 377 4 346 1 248 2 512 2 269 7 560 2 939 2 70 2 198 2 529 2 816 2 787 1 758 1 
508 2 1032 4 155 2 579 2 53 2 377 4 248 2 512 2 269 6 560 2 939 4 70 2 198 2 529 4 816 2 
508 8 1032 8 155 2 579 2 53 2 377 4 346 1 248 6 512 2 269 10 560 2 939 8 70 2 198 2 529 8 816 2 787 1 758 1 
1032 2 155 2 579 2 53 2 377 2 512 2 269 2 560 2 939 2 70 2 198 2 529 2 816 2 
406 26 132 4 133 4 676 2 677 4 407 2 410 4 682 4 539 4 4 2 3 4 138 2 958 4 542 2 544 8 277 14 549 4 829 4 281 4 283 6 556 2 697 2 838 2 291 4 293 6 839 2 842 2 149 4 302 4 969 4 25 8 304 4 308 6 979 4 453 28 587 4 987 2 167 10 596 2 327 30 43 4 171 4 597 10 47 4 463 2 178 4 332 2 997 4 56 4 607 4 734 4 875 4 58 1 609 8 876 16 879 2 338 2 1014 4 193 8 744 6 343 2 346 78 347 24 1017 4 620 6 622 2 757 16 77 2 353 16 758 70 900 4 210 4 82 24 493 2 626 102 86 4 214 44 495 4 358 2 1033 4 498 2 363 8 502 10 95 8 503 4 1039 4 770 6 909 4 507 8 776 32 915 10 779 2 1045 4 223 4 919 4 111 24 379 16 114 4 514 4 923 4 382 11 924 4 385 4 516 10 117 8 657 2 935 10 1064 36 258 2 670 10 
343 2 744 2 807 2 406 12 133 4 346 28 347 8 3 2 542 2 77 2 825 2 758 26 81 2 493 2 281 4 626 40 283 2 214 14 495 4 358 2 284 2 697 2 837 2 838 2 502 2 293 2 1039 2 770 4 149 4 507 6 26 2 574 2 304 4 779 2 1045 4 308 2 979 4 379 14 114 2 720 2 453 12 382 2 924 2 163 2 516 6 239 2 167 6 596 2 327 6 43 2 47 2 463 2 865 10 935 6 602 2 332 2 734 2 1064 14 879 2 
807 4 951 10 406 58 132 4 133 6 677 4 812 4 682 4 539 4 3 10 4 2 958 4 139 12 542 8 10 24 544 42 277 12 825 11 15 10 549 6 281 6 283 14 284 2 145 4 697 2 965 24 838 8 837 8 291 4 293 36 842 2 844 90 149 6 24 26 969 6 302 4 849 4 26 2 574 2 304 6 308 10 979 8 31 2 720 4 453 58 721 4 587 6 163 2 986 2 987 2 167 16 596 2 327 34 43 4 599 18 47 4 463 2 177 8 865 22 602 2 56 6 607 6 734 10 875 6 876 42 1009 24 879 2 338 4 1014 6 340 90 744 14 343 8 749 4 479 8 346 150 194 24 347 124 1017 4 620 5 484 4 77 5 758 134 1027 4 1028 6 900 6 81 2 82 92 493 4 212 8 626 248 760 24 86 4 214 112 495 6 358 2 1033 4 498 2 766 4 363 50 502 18 501 26 1039 10 503 6 770 8 1042 4 99 2 507 16 1045 6 779 8 645 6 223 6 224 2 109 2 919 6 111 84 379 28 114 6 514 6 923 6 382 16 924 10 385 6 516 16 117 24 931 10 935 16 1064 88 
614 2 63 2 744 2 343 2 951 2 406 6 133 2 745 4 68 2 1016 2 346 46 347 6 3 2 6 2 486 4 542 2 10 2 77 2 207 2 15 2 758 44 547 2 828 6 281 2 760 2 626 48 283 2 556 2 85 4 555 2 214 20 495 2 284 2 358 2 360 4 763 2 424 2 697 2 427 2 838 2 767 2 293 2 502 2 1039 2 563 2 968 2 907 2 368 2 770 6 1042 2 300 2 149 2 370 2 304 2 915 2 779 2 1045 2 308 2 858 2 379 36 113 2 114 2 453 6 382 2 924 2 323 2 516 4 239 2 167 4 326 2 596 2 597 2 242 2 244 2 931 2 463 2 177 2 935 4 332 2 936 2 734 2 469 2 1005 2 1009 2 1064 20 803 2 879 2 1011 2 258 2 259 2 670 2 
589 2 

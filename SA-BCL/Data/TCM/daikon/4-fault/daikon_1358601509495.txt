#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.NullPointerException 556 527 1570 665 995 1234 24 1411 737 706 1425 283 1574 1609 27 1283 700 1543 1306 1 380 1443 526 837 180 1148 687 124 531 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V FAILED junit.framework.AssertionFailedError 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 50 491 1037 
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_0()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_1()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_2()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_3()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_4()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_5()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_6()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_7()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_8()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_9()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_10()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_11()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_12()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_13()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_14()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_15()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_16()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_17()V PASSED
daikon.test.split.SplitterFactoryTest:testmisc_Fib_main_18()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_19()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_20()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_21()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_22()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_23()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_24()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_25()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_26()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_27()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_28()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_29()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_30()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_31()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_32()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__33()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__34()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__35()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__36()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__37()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__38()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__39()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__40()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__41()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__42()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__43()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
utilMDE.Stopwatch:Stopwatch(Z)V
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.inv.Invariant:prob_and(DDD)D
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.VarInfoName.Elements:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SequenceScalar:SequenceScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:format_esc()Ljava.lang.String;
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltwiseIntComparison:EltwiseIntComparison(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_simplify(Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.inv.binary.sequenceString.MemberString:add_modified([Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.inv.binary.twoSequence.Reverse:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_2_12(I)Z
daikon.inv.unary.sequence.EltOneOf:subarray_rep()Ljava.lang.String;
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.inv.binary.twoSequence.Reverse:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_test(I)V
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
daikon.ProglangType:baseIsString()Z
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_51()Z
daikon.inv.binary.twoString.StringEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.Member:enabled()Z
daikon.inv.unary.scalar.Positive:enabled()Z
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_ioa()Ljava.lang.String;
jtb.JavaCharStream:backup(I)V
jtb.JavaParser:jj_3R_114()Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.InorderFlattener:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.Quant:concat([I[I)[I
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakIdentityHashMap:indexFor(II)I
jtb.JavaParser:jj_2_35(I)Z
utilMDE.UtilMDE:lineNumberFileReader(Ljava.io.File;)Ljava.io.LineNumberReader;
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_ioa()Ljava.lang.String;
daikon.inv.Invariant:logDetail()Z
jtb.JavaParser:jj_scan_token(I)Z
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:check_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_48()Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.EltwiseIntLessThan:format_ioa()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:sameLength([I[I)Z
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
jtb.JavaParser:jj_3R_68()Z
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:lexLTE([I[I)Z
jtb.JavaParser:jj_3R_63()Z
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.VarInfo:get_simplify_free_index([Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.diff.InvMap:InvMap()V
daikon.suppress.NISuppression:NISuppression([Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_simplify()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfo:has_typeof()Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
utilMDE.ArraysMDE:min_max([I)[I
daikon.Quantify.IOAQuantification:IOAQuantification([Ldaikon.VarInfo;)V
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.inv.binary.sequenceScalar.SeqIntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltNonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.Member:format_ioa()Ljava.lang.String;
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.inv.binary.sequenceScalar.SeqIntLessThan:SeqIntLessThan(Ldaikon.PptSlice;)V
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
jtb.JavaCharStream:ReadByte()C
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
jtb.JavaParser:jj_3R_122()Z
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.ModBitTracker:num_vars()I
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.inv.binary.sequenceString.MemberString:format_ioa()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
utilMDE.FuzzyFloat:ne(DD)Z
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:add_modified(JJJI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.Quantify.QuantFlags:include_index()Ljava.util.EnumSet;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.inv.unary.string.OneOfString:format_ioa()Ljava.lang.String;
daikon.Quant:subsetOf([D[D)Z
daikon.Quant:pairwiseLT([I[I)Z
daikon.inv.unary.stringsequence.EltOneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernary:LinearTernary(Ldaikon.PptSlice;)V
daikon.inv.unary.string.OneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.inv.unary.sequence.EltNonZero:EltNonZero(Ldaikon.PptSlice;)V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.inv.unary.sequence.EltUpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.NumericInt.Divides:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
jtb.JavaParser:jj_3R_161()Z
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.WeakHasherMap:size()I
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V
daikon.inv.unary.sequence.EltNonZero:format_simplify()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_ioa()Ljava.lang.String;
daikon.Quant:subsetOf([F[D)Z
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
utilMDE.Intern:intern([I)[I
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.unary.sequence.EltUpperBound:format_simplify()Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:format_ioa()Ljava.lang.String;
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_ioa()Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:enabled()Z
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.inv.binary.twoString.StringEqual:StringEqual(Ldaikon.PptSlice;)V
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:sorted([I)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
jtb.JavaParser:jj_3R_81()Z
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.Quant:pairwiseSquare([I[I)Z
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.sequenceScalar.SequenceScalar:seq_first()Z
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.Quant:subsetOf([S[S)Z
daikon.inv.unary.sequence.EltwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfo:isIOAArray()Z
jtb.JavaParser:jj_3_16()Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3_35()Z
daikon.inv.Invariant:simplify_format_string(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.inv.unary.sequence.EltOneOf:format_daikon()Ljava.lang.String;
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.inv.binary.twoSequence.SeqSeqIntEqual:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:add_modified([Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.Quantify.IOAQuantification:getFreeVar(I)Ldaikon.Quantify.Term;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.Quant:subsetOf([J[J)Z
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
jtb.JavaParser:jj_3R_123()Z
daikon.Quant:memberOf(D[F)Z
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.VarInfo:jml_name()Ljava.lang.String;
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
utilMDE.ArraysMDE:subarray([JII)[J
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.inv.binary.twoScalar.LinearBinaryCore:find_bi_linear(JJJJ[D)Z
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.inv.binary.twoScalar.NumericInt.Divides:get_proto(Z)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
jtb.JavaParser:jj_3R_75()Z
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.LinearBinaryCore:maxsep_point([J[J)[I
jtb.JavaParser:jj_3R_87()Z
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_esc()Ljava.lang.String;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.inv.binary.twoSequence.SubSequence:enabled()Z
daikon.inv.unary.sequence.EltOneOf:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.inv.binary.twoScalar.IntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:numIntArrays()I
daikon.VarInfo:simplifyNameAndBounds()[Ljava.lang.String;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.binary.sequenceScalar.SequenceScalar:seqvar()Ldaikon.VarInfo;
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
jtb.Token:newToken(I)Ljtb.Token;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.inv.unary.sequence.EltOneOf:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:add_modified(JJI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltsLteIndex([I)Z
jtb.JavaParser:jj_3R_86()Z
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.Node:Node()V
jtb.JavaParser:jj_3_3()Z
daikon.inv.unary.string.SingleString:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.inv.unary.sequence.EltNonZero:is_pointer()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.inv.binary.sequenceScalar.Member:format_simplify()Ljava.lang.String;
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltUpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ProglangType:dimensions()I
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.PptSlice1:arity()I
daikon.VarInfo:simplify_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.VarInfoName.QuantHelper:freshDistinctFrom(Ljava.util.Set;)Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:sum([I)I
daikon.inv.binary.sequenceString.SequenceString:scl_index()I
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.inv.unary.scalar.NonZero:enabled()Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_esc()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_53()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.Invariant:justified()Z
daikon.inv.unary.stringsequence.SingleStringSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaCharStream:FillBuff()V
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.inv.binary.sequenceScalar.Member:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.ternary.threeScalar.ThreeScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:enabled()Z
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoSequence.Reverse:enabled()Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Elements:ioa_name_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfo:isIOASet()Z
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.MathMDE:gcd_differences([I)I
daikon.VarInfo:isDerived()Z
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.inv.binary.twoSequence.SubSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ProglangType:base()Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_ioa()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:jj_3R_96()Z
daikon.inv.binary.twoSequence.SubSequence:SubSequence(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoSequence.SubSequence:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltLowerBound:format_simplify()Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
utilMDE.FuzzyFloat:gt(DD)Z
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_daikon()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.suppress.NISuppressionSet:swap()Ldaikon.suppress.NISuppressionSet;
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_esc()Ljava.lang.String;
jtb.JavaParser:jj_3R_133()Z
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.PptTopLevel.CondIterator:hasNext()Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.inv.unary.sequence.EltOneOf:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_2_14(I)Z
daikon.Quant:eq(JJ)Z
daikon.inv.binary.twoScalar.NumericInt.Divides:Divides(Ldaikon.PptSlice;Z)V
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:getDiffString()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_115()Z
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3_12()Z
daikon.inv.unary.sequence.EltwiseIntLessThan:EltwiseIntLessThan(Ldaikon.PptSlice;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
jtb.JavaParser:jj_3R_88()Z
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltUpperBound:EltUpperBound(Ldaikon.PptSlice;)V
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
utilMDE.ArraysMDE:indexOf([ZZ)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.test.FormatTestCase:passes()Z
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:set_rel_diff(D)V
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.sequenceString.MemberString:format_daikon()Ljava.lang.String;
daikon.Quant:eltsGteIndex([I)Z
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarComparabilityNone:indexType(I)Ldaikon.VarComparability;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.TwoSequence:var1()Ldaikon.VarInfo;
daikon.inv.binary.twoString.StringEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_simplify()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_simplify()Ljava.lang.String;
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaCharStream:getBeginLine()I
daikon.inv.unary.sequence.SeqIndexIntNonEqual:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.suppress.NISuppressor:swap()Ldaikon.suppress.NISuppressor;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:pairwiseGT([I[I)Z
daikon.suppress.NISuppression:NISuppression(Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.inv.unary.stringsequence.EltOneOfString:format_ioa()Ljava.lang.String;
daikon.Quant:setEqual([I[I)Z
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:lexEqual([I[I)Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:enabled()Z
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.Ppt:find_var_by_name(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.binary.BinaryInvariant:is_symmetric()Z
daikon.inv.unary.sequence.EltwiseIntLessThan:enabled()Z
daikon.inv.unary.sequence.EltOneOf:is_hashcode()Z
daikon.inv.unary.stringsequence.EltOneOfString:enabled()Z
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoString.StringEqual:enabled()Z
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.Quantify:quantify([Ldaikon.VarInfo;)[Ldaikon.Quantify.QuantifyReturn;
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern:internSubsequence([III)[I
utilMDE.ArraysMDE:sum([D)D
daikon.inv.unary.stringsequence.EltOneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.inv.unary.string.OneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_2_36(I)Z
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:SeqIntGreaterEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceScalar.SeqIntEqual:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.inv.binary.sequenceString.MemberString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.SubSequence:format_ioa()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:pow(II)I
daikon.inv.binary.twoString.StringEqual:add_modified(Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltsNotEqual([II)Z
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.ModBitTracker:num_sets()I
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:hasTypeOf()Z
utilMDE.ArraysMDE:subarray([III)[I
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.InorderFlattener:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
utilMDE.UtilMDE:escapeNonASCII(C)Ljava.lang.String;
daikon.inv.binary.twoString.StringEqual:check_modified(Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_bi_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)V
daikon.inv.Invariant:getConfidence()D
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfo:simplify_name()Ljava.lang.String;
jtb.JavaParser:jj_3_22()Z
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
daikon.inv.binary.sequenceScalar.Member:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltsEqual([II)Z
jtb.JavaParser:jj_3R_85()Z
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.ModBitTracker:num_samples()I
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.inv.binary.sequenceString.MemberString:check_modified([Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.PptName:isCombinedExitPoint()Z
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.binary.twoSequence.SubSequence:get_proto()Ldaikon.inv.Invariant;
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_13()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.VarInfoName.QuantHelper:getFreeIndex([Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:add_modified([JJI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_2_21(I)Z
daikon.VarInfoName.QuantHelper:simplifyNameAndBounds(Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.TwoSequence:var2()Ldaikon.VarInfo;
utilMDE.LimitedSizeIntSet:size()I
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
daikon.inv.unary.sequence.EltOneOf:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([JJ)I
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.inv.binary.twoSequence.PairwiseIntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:negate(I)I
jtb.JavaCharStream:BeginToken()C
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:lte(DD)Z
daikon.inv.binary.sequenceScalar.SequenceScalar:scl_index()I
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:equals(JJJ)Z
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_76()Z
daikon.ValueTuple:tuplemodHasModified(I)Z
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_2_16(I)Z
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;Ldaikon.VarInfo;)V
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoSequence.Reverse:format_simplify_explicit()Ljava.lang.String; | CONSTANT | 4994 | 0 -> 1
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_daikon()Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.Quant:setDiff([I[I)[I
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.UpperBoundCore:calc_range()J
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_ioa()Ljava.lang.String;
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_ntk()I
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_simplify()Ljava.lang.String;
jtb.JavaParser:jj_3_1()Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:PairwiseIntLessThan(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_daikon()Ljava.lang.String;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;)Z
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_esc()Ljava.lang.String;
daikon.VarInfo:is_direct_non_slice_array()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.inv.unary.string.OneOfString:enabled()Z
daikon.inv.binary.twoSequence.Reverse:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.stringsequence.EltOneOfString:EltOneOfString(Ldaikon.PptSlice;)V
daikon.inv.ternary.threeScalar.LinearTernary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:maxsep_doubles([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)D
daikon.VarInfoName.InorderFlattener:InorderFlattener(Ldaikon.VarInfoName;)V
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
jtb.JavaParser:jj_3_14()Z
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.inv.binary.sequenceString.MemberString:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
utilMDE.FuzzyFloat:gte(DD)Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_simplify()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:gte(II)Z
daikon.inv.ValueSet.ValueSetString:ValueSetString(I)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.NoDuplicates:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:union([I[I)[I
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.SeqIntEqual:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.ProglangType:isArray()Z
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:maxsep_triples([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)D
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_daikon()Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.inv.ternary.TernaryInvariant:TernaryInvariant(Ldaikon.PptSlice;)V
daikon.Quant:eq(DD)Z
daikon.Quantify.QuantFlags:distinct()Ljava.util.EnumSet;
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
daikon.Quant:subsetOf([I[I)Z
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_61()Z
daikon.PptSlice2:arity()I
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_daikon()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:SeqIntLessEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName:inOrderTraversal()Ljava.util.Collection;
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:wouldChange(J)Z
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:add_modified([JJI)Ldaikon.inv.InvariantStatus;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
utilMDE.ArraysMDE:sum([[I)I
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.inv.unary.stringsequence.EltOneOfString:format_daikon()Ljava.lang.String;
daikon.inv.OutputFormat:isJavaFamily()Z
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.inv.binary.sequenceString.MemberString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:eltwiseGT([I)Z
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:enabled()Z
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_ioa()Ljava.lang.String;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltOneOf:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.PptSlice1:num_samples()I
daikon.ProglangType:isPointerFileRep()Z
utilMDE.ArraysMDE:sum([[D)D
utilMDE.Intern:intern([D)[D
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntEqual:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.stringsequence.EltOneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_69()Z
daikon.suppress.NISuppressee:NISuppressee(Ljava.lang.Class;Z)V
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_ioa()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.inv.binary.twoSequence.Reverse:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:noDups([I)Z
daikon.inv.ternary.threeScalar.ThreeScalar:var3()Ldaikon.VarInfo;
daikon.inv.binary.sequenceScalar.Member:format_daikon()Ljava.lang.String;
utilMDE.ArraysMDE:concat([I[I)[I
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
jtb.JavaParser:jj_3R_116()Z
daikon.inv.binary.twoString.TwoString:TwoString(Ldaikon.PptSlice;)V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.Quant:lt(II)Z
daikon.inv.unary.sequence.EltOneOf:is_boolean()Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:get_proto()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
jtb.JavaCharStream:getEndLine()I
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.inv.unary.string.OneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltwiseLT([I)Z
daikon.VarInfo:ioa_name()Ljava.lang.String;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.inv.unary.string.OneOfString:format_simplify()Ljava.lang.String;
daikon.inv.binary.sequenceString.MemberString:enabled()Z
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.NoDuplicates:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
utilMDE.ArraysMDE:indexOf([J[J)I
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.VarInfoName:hashCode()I
daikon.VarInfoName.InorderFlattener:nodes()Ljava.util.List;
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_esc()Ljava.lang.String;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.Quantify.FreeVar:name()Ljava.lang.String;
daikon.Quant:memberOf(I[I)Z
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:name()Ljava.lang.String;
daikon.Quant:ne(II)Z
daikon.inv.unary.sequence.EltwiseIntLessThan:format_esc()Ljava.lang.String;
jtb.JavaParser:jj_3R_55()Z
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.Quant:eltsGTE([II)Z
daikon.inv.unary.sequence.EltwiseIntLessThan:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoString.TwoString:var1()Ldaikon.VarInfo;
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
jtb.JavaParserTokenManager:MoreLexicalActions()V
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_daikon()Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.stringsequence.EltOneOfString:sort_rep()V
utilMDE.MathMDE:gcd([I)I
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.test.FormatTestCase:getDiffString()Ljava.lang.String;
jtb.JavaParser:jj_3R_49()Z
daikon.inv.binary.twoString.StringEqual:get_proto()Ldaikon.inv.binary.twoString.StringEqual;
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:format_ioa()Ljava.lang.String;
daikon.PptSlice3:PptSlice3(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.JavaParser:jj_3R_162()Z
daikon.Quant:lte(II)Z
daikon.inv.ternary.threeScalar.LinearTernary:enabled()Z
daikon.Quant:gt(II)Z
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_ioa()Ljava.lang.String;
daikon.inv.binary.twoString.TwoString:var2()Ldaikon.VarInfo;
daikon.inv.unary.stringsequence.EltOneOfString:format_simplify()Ljava.lang.String;
daikon.VarInfo:apply_subscript(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eq(II)Z
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_121()Z
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.inv.binary.twoString.StringEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:get_proto()Ldaikon.inv.Invariant;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_ioa()Ljava.lang.String;
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfo:relate_var()V
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.Quantify.IOAQuantification:getMembershipRestriction(I)Ljava.lang.String;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.Invariants:Invariants()V
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;)V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.Reverse:Reverse(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_simplify()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.inv.unary.sequence.NoDuplicates:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.InvariantFormatTester:execute()Z
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.inv.ternary.threeScalar.LinearTernary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_daikon()Ljava.lang.String;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.Quant:intersection([I[I)[I
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.sequenceScalar.Member:get_proto()Ldaikon.inv.Invariant;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.ProglangType:isScalar()Z
daikon.inv.binary.sequenceString.SequenceString:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.VarInfoName.Elements:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([I)Z
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_47()Z
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.simplify.LemmaStack:noticeInt(J)V
utilMDE.ArraysMDE:max([I)I
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
utilMDE.ArraysMDE:indexOf([I[I)I
jtb.JavaParser:jj_3R_60()Z
jtb.JavaParser:jj_2_1(I)Z
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:enabled()Z
daikon.Quant:eltsGtIndex([I)Z
daikon.Quant:eltsGT([II)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:set_bi_linear(JJJJ)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.Quant:memberOf(S[S)Z
daikon.VarInfo:isPrestate()Z
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.Quant:eq(FF)Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:check_modified([JJI)Ldaikon.inv.InvariantStatus;
utilMDE.OrderedPairIterator:hasNext()Z
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Assert:assertTrue(Z)V
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltOneOf:EltOneOf(Ldaikon.PptSlice;)V
daikon.Quantify.Term:ioa_name()Ljava.lang.String;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_2_3(I)Z
jtb.syntaxtree.NodeList:NodeList()V
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.LimitedSizeIntSet:add(I)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_simplify()Ljava.lang.String;
jtb.JavaParser:jj_3R_97()Z
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:enabled()Z
jtb.JavaParser:jj_3R_163()Z
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.inv.binary.sequenceString.MemberString:MemberString(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
jtb.JavaParser:jj_3R_52()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_ioa()Ljava.lang.String;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.Quant:subsetOf([D[F)Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.EntrySet:size()I
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName; | RETURN | 88903 | return null
daikon.ProglangType:baseIsScalar()Z
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:PairwiseIntEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.string.OneOfString:OneOfString(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_daikon()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore:try_points_linear(DDD)Z
utilMDE.ArraysMDE:element_range([I)I
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_esc()Ljava.lang.String;
utilMDE.MathMDE:mod_positive(JJ)J
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
utilMDE.Intern:intern([J)[J
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:planarIntervention([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_2_5(I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_simplify(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.Quant:eltwiseGTE([I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:pairwiseEqual([I[I)Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.EltUpperBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext1()V
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.VarInfo:apply_subscript(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([J[JI)Z
daikon.inv.unary.string.OneOfString:add_modified(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.inv.ValueSet.ValueSetStringArray:ValueSetStringArray(I)V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.Quant:lexLT([I[I)Z
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
utilMDE.UtilMDE:lineNumberFileReader(Ljava.lang.String;)Ljava.io.LineNumberReader;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_simplify()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Debug:logDetail()Z
daikon.inv.binary.sequenceString.MemberString:format_esc()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.ProglangType:isPseudoArray()Z
jtb.JavaParser:jj_3R_50()Z
daikon.suppress.NISuppressee:NISuppressee(Ljava.lang.Class;I)V
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptTopLevel:is_constant(Ldaikon.VarInfo;)Z
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.inv.unary.string.OneOfString:format_esc()Ljava.lang.String;
daikon.inv.Invariant:prob_is_ge(DD)D
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.inv.binary.twoSequence.Reverse:format_ioa()Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.Quant:lexGT([I[I)Z
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.inv.unary.stringsequence.SingleStringSequence:var()Ldaikon.VarInfo;
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.Quantify.IOAQuantification:getFreeVarName(I)Ljava.lang.String;
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.inv.binary.twoSequence.SubSequence:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaCharStream:getBeginColumn()I
daikon.inv.binary.sequenceString.SequenceString:seq_index()I
utilMDE.FuzzyFloat:eq(DD)Z
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
utilMDE.UtilMDE:escapeNonASCII(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_esc()Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.ValueTuple:isMissingFlow(I)Z
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_daikon()Ljava.lang.String;
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:enabled()Z
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.inv.binary.twoSequence.TwoSequence:TwoSequence(Ldaikon.PptSlice;)V
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3_4()Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.inv.binary.sequenceString.SequenceString:seqvar()Ldaikon.VarInfo;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.inv.unary.sequence.EltNonZero:enabled()Z
utilMDE.MathMDE:gcd(JJ)J
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
utilMDE.Intern:internSubsequence([JII)[J
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.Quantify.QuantifyReturn:QuantifyReturn(Ldaikon.VarInfo;)V
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_simplify()Ljava.lang.String;
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.inv.binary.sequenceString.SequenceString:seq_first()Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.inv.unary.UpperBoundCore:computeConfidence()D
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
utilMDE.Options.OptionInfo:argument_required()Z
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
utilMDE.ArraysMDE:isSubset([D[D)Z
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.binary.twoSequence.SubSequence:format_daikon()Ljava.lang.String;
jtb.JavaParser:jj_3R_54()Z
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_esc()Ljava.lang.String;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.inv.unary.sequence.NoDuplicates:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
utilMDE.MathMDE:mod_positive(II)I
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.inv.unary.string.OneOfString:format_daikon()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:sort_rep()V
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral; | RETURN | 92129 | return null
jtb.JavaParser:jj_3R_56()Z
daikon.Quant:memberOf(J[J)Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.string.OneOfString:sort_rep()V
daikon.inv.unary.stringsequence.SingleStringSequence:SingleStringSequence(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.Quant:subsetOf([B[I)Z
daikon.PptSlice0:initInvariantsSeen()V
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.Quant:eltsLtIndex([I)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_esc()Ljava.lang.String;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:enabled()Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:PairwiseIntLessEqual(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptSlice0:arity()I
daikon.Quant:lexNotEqual([I[I)Z
daikon.Quant:eltsLTE([II)Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.ternary.threeScalar.LinearTernary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_62()Z
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.inv.unary.scalar.UpperBound:enabled()Z
utilMDE.ArraysMDE:isSubarray([I[II)Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.Quant:eltwiseNotEqual([I)Z
daikon.VarInfo:get_enclosing_var()Ldaikon.VarInfo;
daikon.ProglangType:baseIsFloat()Z
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SequenceScalar:sclvar()Ldaikon.VarInfo;
daikon.inv.Invariant:isWorthPrinting()Z
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.inv.unary.sequence.EltOneOf:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:enabled()Z
utilMDE.FuzzyFloat:lt(DD)Z
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.inv.binary.sequenceScalar.SeqIntEqual:SeqIntEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaCharStream:readChar()C
daikon.inv.unary.stringsequence.EltOneOfString:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.string.SingleString:SingleString(Ldaikon.PptSlice;)V
daikon.ModBitTracker:split(I)I
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.Quant:memberOf(F[D)Z
daikon.inv.binary.twoSequence.SubSequence:format_simplify_explicit()Ljava.lang.String;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.inv.unary.sequence.EltUpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:format_simplify()Ljava.lang.String;
jtb.JavaParser:jj_3R_135()Z
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:eltwiseLTE([I)Z
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
utilMDE.FuzzyFloat:isSubset([D[D)Z
jtb.JavaParser:jj_3_10()Z
utilMDE.FuzzyFloat:FuzzyFloat(D)V
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_89()Z
daikon.inv.unary.sequence.EltUpperBound:format_esc()Ljava.lang.String;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.unary.stringsequence.EltOneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:pairwiseLTE([I[I)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
jtb.JavaParser:jj_3_21()Z
daikon.suppress.NISuppression:NISuppression(Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
daikon.Quantify.QuantFlags:adjacent()Ljava.util.EnumSet;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.inv.unary.sequence.EltNonZero:format_daikon()Ljava.lang.String;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.inv.ternary.threeScalar.ThreeScalar:var1()Ldaikon.VarInfo;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.inv.binary.sequenceScalar.SeqIntLessThan:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.Quantify.IOAQuantification:getVarIndexedString(I)Ljava.lang.String;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:min([I)I
daikon.Quant:lexGTE([I[I)Z
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:PairwiseIntGreaterEqual(Ldaikon.PptSlice;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
jtb.JavaParser:jj_3R_119()Z
jtb.JavaParser:jj_3R_148()Z
utilMDE.OrderedPairIterator:setnext2()V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.inv.unary.sequence.NoDuplicates:format_ioa()Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:format_daikon()Ljava.lang.String;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.Quant:eltsLT([II)Z
jtb.JavaParser:jj_3_15()Z
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.diff.RootNode:RootNode()V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.VarComparabilityNone:comparable(Ldaikon.VarComparabilityNone;Ldaikon.VarComparabilityNone;)Z
daikon.Quant:pairwiseGTE([I[I)Z
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.binary.twoString.TwoString:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.inv.binary.sequenceScalar.Member:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_esc()Ljava.lang.String;
daikon.inv.binary.twoSequence.Reverse:format_daikon()Ljava.lang.String;
jtb.JavaParser:jj_3R_120()Z
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.LinearBinaryCore:add_modified(JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.VarInfoName:name()Ljava.lang.String;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.inv.unary.sequence.NoDuplicates:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:isString()Z
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.Quant:eltsEqualIndex([I)Z
utilMDE.UtilMDE.NullableStringComparator:compare(Ljava.lang.String;Ljava.lang.String;)I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.JavaParser:jj_3R_118()Z
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.inv.ternary.threeScalar.LinearTernary:add_modified(JJJI)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_117()Z
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
utilMDE.MathMDE:modulus([I)[I
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.inv.unary.sequence.EltNonZero:format_esc()Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:enabled()Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.TwoScalar:get_swap()Z
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarComparabilityImplicit:alwaysComparable()Z
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.string.OneOfString:is_type()Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.ValueTuple:isMissing(I)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.ModBitTracker:ModBitTracker(I)V
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.MathMDE:pow_fast(II)I
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.string.OneOfString:get_proto()Ldaikon.inv.Invariant;
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.PptName:isEnterPoint()Z
daikon.inv.binary.twoSequence.SubSequence:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.inv.unary.sequence.EltUpperBound:enabled()Z
daikon.Debug:logOn()Z
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.inv.ternary.threeScalar.LinearTernary:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltNonZero:format_ioa()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.VarComparabilityNone:elementType()Ldaikon.VarComparability;
jtb.JavaParser:jj_3R_57()Z
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.sequenceScalar.SequenceScalar:seq_index()I
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.VarInfo:new_ppt()V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.VarInfo:isDerivedSubSequenceOf()Ldaikon.VarInfo;
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.unary.string.SingleString:var()Ldaikon.VarInfo;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan()V
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.inv.binary.sequenceScalar.Member:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
daikon.inv.unary.sequence.EltNonZero:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.inv.binary.twoScalar.NumericInt.Divides:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.Member:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.inv.binary.sequenceString.SequenceString:sclvar()Ldaikon.VarInfo;
daikon.Quant:subsetOf([F[F)Z
daikon.inv.binary.twoSequence.Reverse:format_simplify()Ljava.lang.String;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
daikon.inv.unary.sequence.EltOneOf:enabled()Z
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
jtb.JavaParser:jj_3R_134()Z
jtb.JavaParser:jj_3_36()Z
daikon.inv.unary.string.OneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.suppress.NISuppressee:swap()Ldaikon.suppress.NISuppressee;
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore:linearIntervention([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)V
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.binary.twoSequence.SeqSeqIntEqual:SeqSeqIntEqual(Ldaikon.PptSlice;Z)V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:ioa_name()Ljava.lang.String;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.ProglangType:elementIsIntegral()Z
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.Quantify.QuantFlags:element_wise()Ljava.util.EnumSet;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_daikon()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:check_modified([JJI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoSequence.TwoSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.Ppt:indexOf(Ljava.lang.String;)I
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
jtb.JavaCharStream:getEndColumn()I
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:enabled()Z
daikon.inv.unary.string.OneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:NoDuplicates(Ldaikon.PptSlice;)V
daikon.inv.Invariant:prob_and(DD)D
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:slice([III)[I
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;Z)Z
daikon.inv.binary.sequenceScalar.SeqIntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.MathMDE:sign(I)I
daikon.inv.ValueSet:ValueSet(I)V
jtb.JavaParser:jj_3R_58()Z
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.Ppt:Ppt()V
daikon.inv.Invariant:prob_or(DD)D
daikon.inv.unary.string.OneOfString:runValue(Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:format_esc()Ljava.lang.String;
daikon.inv.binary.twoSequence.SubSequence:format_simplify()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SequenceScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:enabled()Z
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:maxsep_indices()[I
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
utilMDE.WeakHasherMap:processQueue()V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:SeqIntGreaterThan(Ldaikon.PptSlice;)V
daikon.VarInfoName.Elements:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.ThreeScalar:ThreeScalar(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
jtb.JavaParser:jj_2_10(I)Z
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.Member:format_esc()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:gcd(II)I
daikon.PptSlice3:arity()I
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual()V
daikon.ProglangType:baseIsIntegral()Z
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.suppress.NISuppressionSet:NISuppressionSet([Ldaikon.suppress.NISuppression;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:isPointer()Z
daikon.inv.binary.sequenceScalar.SeqIntEqual:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.NoDuplicates:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_daikon()Ljava.lang.String;
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.Member:Member(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:subarray_rep()Ljava.lang.String;
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:logOn()Z
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.Quant:eltwiseEqual([I)Z
daikon.VarInfoName:hasNodeOfType(Ljava.lang.Class;)Z
daikon.inv.binary.sequenceScalar.SeqIntEqual:enabled()Z
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.sequenceString.MemberString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:memberOf(F[F)Z
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_simplify()Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_ioa()Ljava.lang.String;
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_esc()Ljava.lang.String;
daikon.ValueTuple:size()I
daikon.inv.binary.twoSequence.Reverse:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Invariant:is_false()Z
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.VarInfo:domainTypeIOA()Ljava.lang.String;
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:get_all_simple_names()Ljava.util.List;
daikon.Quantify.IOAQuantification:getQuantifierExp()Ljava.lang.String;
daikon.ProglangType:isFloat()Z
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.inv.unary.sequence.EltUpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.inv.unary.stringsequence.EltOneOfString:runValue([Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_2_13(I)Z
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
jtb.JavaParser:jj_3_5()Z
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
jtb.JavaParser:jj_2_15(I)Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.inv.unary.stringsequence.EltOneOfString:is_type()Z
daikon.inv.ternary.threeScalar.ThreeScalar:var2()Ldaikon.VarInfo;
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.inv.binary.sequenceString.SequenceString:SequenceString(Ldaikon.PptSlice;)V
daikon.VarInfo:simplify_quantify(Ljava.util.EnumSet;[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:PairwiseIntGreaterThan(Ldaikon.PptSlice;)V
daikon.diff.InvMap:toString()Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([II)I
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_simplify()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.Quant:isReverse([I[I)Z
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:enabled()Z
daikon.Quantify.IOAQuantification:getClosingExp()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_2_4(I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:separation(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)D
daikon.Quant:pairwiseDivides([I[I)Z
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_esc()Ljava.lang.String;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
utilMDE.MathMDE:missing_numbers([I)[I
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.unary.sequence.EltNonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:isIntegral()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
1124 2 1555 2 554 4 854 2 1087 2 946 2 880 2 933 2 26 2 
702 2 1015 6 1298 6 1300 2 858 2 1286 6 930 2 635 2 892 2 519 2 1333 2 
701 6 716 6 731 6 1327 2 171 4 1315 4 1555 2 1029 2 145 2 407 2 1397 2 933 2 52 6 
359 8 1458 12 1599 4 1195 2 507 4 74 16 1113 2 1228 2 231 2 148 30 998 6 471 2 739 4 1392 8 1259 10 1362 2 234 10 1467 8 1287 10 1509 10 349 2 1555 6 1531 10 1319 8 354 16 1448 16 1513 26 931 4 933 6 163 6 
1595 6 938 4 
621 2 
223 2 20 2 1539 2 1299 2 1458 2 372 2 74 2 148 6 1259 2 234 2 1509 2 1467 2 156 2 1287 4 255 2 976 2 1531 2 354 2 1448 2 1396 2 1513 4 931 2 163 2 
1376 2 739 2 1259 4 234 4 1458 5 368 6 6 4 1122 2 1509 4 1196 6 1531 4 354 8 1448 8 74 8 1513 12 639 4 148 15 
1348 2 1244 2 602 2 1245 4 1520 10 334 4 1457 2 1277 4 1383 4 962 2 859 2 942 2 804 10 1146 14 989 4 176 4 861 8 636 2 568 2 808 2 428 4 275 4 277 4 400 2 692 2 489 2 574 62 401 2 1150 2 253 2 157 2 1508 6 1632 2 1489 2 881 4 1372 2 89 4 1212 4 1451 2 1537 4 
1098 2 333 2 414 2 1479 2 661 2 621 2 406 2 1126 2 1238 2 1427 2 
1135 2 1593 2 912 2 197 4 1020 2 752 2 293 2 245 2 915 2 1195 2 202 2 564 2 861 2 300 2 966 2 616 4 970 2 760 2 401 2 472 2 305 2 723 2 1555 4 1322 2 933 4 482 2 885 2 1274 2 774 2 365 2 1165 2 175 2 989 2 1618 4 994 2 230 2 1062 2 1629 2 695 2 183 2 898 2 1124 2 1006 2 89 4 
359 6 751 6 888 4 857 2 1458 22 368 6 6 4 72 6 338 4 1196 6 74 32 1604 4 1524 2 968 6 639 4 1438 8 148 54 998 4 1259 16 234 16 724 4 1509 16 875 2 1467 18 1287 6 349 2 1586 2 1555 4 1531 16 1587 2 354 32 285 4 1448 32 1513 48 1560 6 1424 2 931 2 933 4 163 4 
861 2 253 2 1508 2 
1241 2 1606 2 1243 2 640 2 1593 2 413 2 1074 22 576 2 877 2 125 10 1210 2 757 2 1546 2 356 2 
91 2 1246 5 199 2 392 2 204 2 205 2 393 2 1249 2 613 2 1145 2 806 24 208 2 395 2 713 2 1253 2 1547 2 715 2 1034 2 1462 2 1364 2 1469 1 1267 3 220 2 1555 34 111 4 1370 2 408 2 309 2 933 32 1375 1 1155 1 310 24 1046 3 539 1 542 2 226 2 1051 4 228 2 1385 2 1054 2 1386 2 833 3 735 2 30 2 323 2 1059 2 232 2 431 2 1170 6 1172 2 1481 1 952 2 1581 2 741 2 841 2 839 2 953 2 1585 4 1182 2 845 2 954 2 1293 2 846 2 238 3 1490 2 444 4 1592 1 559 2 1400 8 1493 6 1401 2 853 4 1071 4 454 3 1301 2 1403 3 654 2 1598 2 461 8 1600 2 143 2 463 4 1078 2 862 2 570 2 146 1 1201 6 571 2 1408 3 1504 1 1203 2 866 1 867 1 663 2 971 2 1086 3 664 16 155 16 1418 2 1317 2 1420 2 670 3 62 2 880 2 64 2 480 1 581 2 1095 1 979 16 1615 2 1096 2 679 2 1323 2 884 2 1099 2 169 2 983 3 362 1 987 1 681 2 776 4 1328 12 173 2 485 6 1523 32 586 1 1525 2 893 2 783 3 488 2 1115 2 787 12 1117 2 282 2 1235 1 1337 2 905 2 1633 2 1127 2 1341 8 499 2 596 2 1129 2 386 32 1635 16 1130 1 287 2 598 2 1240 3 
1494 2 
1555 2 1056 2 
1555 4 1475 2 3 2 
1242 6 1 2 605 8 196 2 388 6 799 2 609 24 391 2 612 4 1026 2 5 2 800 20 1459 46 1461 16 1460 16 1251 2 1030 2 809 2 812 4 398 2 1260 2 402 10 817 4 624 28 224 8 22 2 1049 4 24 2 416 2 27 2 633 8 830 8 1057 2 32 4 1283 2 837 2 1284 8 236 46 1285 6 1485 2 843 2 438 46 1288 20 38 46 1491 4 39 2 240 4 1295 2 44 36 241 2 455 22 1072 46 244 2 462 2 49 2 464 10 659 24 1307 2 1081 2 1306 2 53 2 662 2 665 2 58 176 1091 2 1314 8 61 4 479 2 1093 4 1516 2 261 46 481 2 1100 2 266 2 680 4 67 6 70 2 1105 14 71 2 271 2 890 4 687 2 895 20 899 2 1338 8 283 2 903 4 700 2 88 4 1344 8 1351 2 1136 36 1139 4 502 46 706 2 917 4 508 2 916 2 1148 2 1357 14 1543 2 514 2 1544 2 918 4 103 146 1360 26 105 8 525 2 526 2 527 2 1552 2 530 4 531 2 308 4 112 4 932 2 1154 8 1568 4 1161 2 1162 4 315 2 732 10 940 2 941 2 543 8 1570 2 943 40 121 4 122 146 124 2 948 6 547 2 1574 2 737 2 550 2 1181 20 1394 4 129 4 1188 22 556 2 956 4 749 8 1190 2 1597 4 963 4 336 2 1601 2 1603 2 569 46 1409 48 758 46 345 6 1411 2 152 4 153 2 347 48 348 2 1609 2 765 14 977 2 578 4 355 46 579 12 1211 2 1425 2 1213 2 1428 4 1429 2 357 2 358 2 363 14 583 8 367 4 1219 146 585 46 587 4 993 36 374 4 995 2 1231 4 1626 2 180 2 181 2 1443 2 1234 2 1001 2 1003 2 380 2 790 4 381 2 382 2 1008 4 1449 2 192 4 194 2 793 14 
1334 2 826 2 533 1 65 2 
167 2 826 2 
520 2 48 2 861 2 746 2 
520 2 48 2 1108 2 861 2 650 2 746 2 
520 2 599 2 507 2 785 2 861 2 826 2 
743 2 898 2 
520 2 507 2 861 2 1478 2 
921 2 818 2 
795 2 753 2 
644 2 1294 2 
1184 2 820 2 
820 2 1028 2 753 2 
820 2 753 2 69 2 
1061 2 820 2 753 2 
820 2 1275 2 753 2 
1022 6 247 6 861 2 344 2 520 2 215 2 1207 2 1065 2 
999 2 788 2 
520 2 507 2 1108 2 785 2 861 2 826 2 889 2 
450 2 785 2 826 2 
785 2 826 2 677 2 
788 2 65 2 1621 2 
785 2 826 2 
788 2 529 2 
826 2 496 2 
788 2 65 2 1010 2 
644 2 65 2 135 2 
1258 2 820 2 65 2 
65 2 445 2 818 2 
65 2 753 2 1303 2 
1557 2 788 2 
826 2 1198 2 
644 2 763 2 
820 2 1237 2 
705 2 818 2 
1007 2 753 2 
1335 2 788 2 
422 2 753 2 
920 2 818 2 
265 2 820 2 
644 2 1175 2 
452 2 788 2 65 2 1010 2 
1183 2 452 2 788 2 65 2 1010 2 
1628 2 788 2 65 2 
788 2 65 2 184 2 
794 2 325 2 1454 2 1436 2 
1562 2 225 2 1171 2 1158 2 925 2 1074 6 1163 2 974 2 189 2 928 2 221 4 672 4 1422 2 1225 2 161 2 134 2 51 2 375 2 
1548 2 65 2 
1581 2 
295 2 505 2 1145 2 208 2 395 2 1031 2 1253 2 713 2 1547 2 715 2 304 2 1555 26 111 4 1269 2 1370 2 933 26 222 2 1051 2 228 1 1385 2 1279 2 423 2 1054 2 30 2 232 2 1059 2 1170 2 1172 2 952 2 953 1 1585 4 1182 2 1185 2 954 2 1293 2 846 2 848 4 1588 2 1490 2 444 2 1493 6 1401 2 853 4 654 2 965 2 463 2 146 4 1201 2 1203 2 1415 2 1418 2 880 2 480 2 581 2 1095 2 1096 2 1615 2 776 4 1328 8 173 2 485 5 1523 6 1525 4 893 6 77 2 787 8 1117 2 1337 2 902 4 497 2 699 2 1633 2 1341 2 1128 2 596 2 386 4 1635 6 598 2 
295 2 505 2 1145 2 805 2 208 2 395 2 1253 2 713 2 1547 2 715 2 304 2 1555 26 111 4 1269 2 1370 2 933 26 222 2 1051 2 228 2 1385 2 1279 2 423 2 1054 2 30 2 232 2 1059 2 1170 2 1172 2 952 2 953 2 1585 4 1182 2 1185 2 954 2 1293 2 846 2 848 4 1588 2 1490 2 444 2 1493 6 1401 2 853 4 1301 2 654 2 965 2 463 2 146 1 1201 2 1203 2 1415 2 1418 2 878 2 880 2 480 2 581 2 1095 2 1096 2 1615 2 776 4 68 2 1328 8 173 2 485 6 1523 6 1525 4 893 6 787 8 1117 2 1337 2 902 4 497 2 699 2 1633 2 1341 2 596 2 386 4 1635 6 598 2 
151 2 
589 2 82 2 
702 4 1015 6 1493 4 1297 4 1298 6 853 2 1300 2 566 2 709 2 711 2 250 2 467 2 1253 2 213 2 521 4 715 2 620 2 303 2 873 2 1466 2 59 2 1316 2 1555 12 930 4 1092 2 259 10 1370 2 17 2 581 2 1214 4 933 6 1096 2 410 2 164 2 934 2 537 2 1380 2 775 2 417 8 270 4 1329 8 227 2 1223 2 635 2 1111 2 1227 2 430 2 126 2 782 2 78 2 951 2 326 2 1444 4 494 4 1286 6 1585 2 1182 2 596 2 1239 2 957 2 
702 4 1015 6 1493 4 1297 4 853 2 1298 8 1300 2 1023 2 566 2 709 2 711 2 250 2 467 2 1253 2 213 2 521 4 715 2 620 2 303 2 873 2 1466 2 59 2 1316 2 1555 12 930 4 1092 2 259 10 1370 2 17 2 581 2 933 6 1214 4 1096 2 410 2 164 2 934 2 775 2 417 8 270 4 371 4 1329 8 227 2 1223 2 635 2 1111 2 1227 2 892 2 430 2 126 2 782 2 78 2 951 2 326 2 1444 4 900 2 494 4 1286 8 1182 2 1585 2 596 2 1239 2 957 2 
213 2 702 2 1015 2 78 2 1297 4 326 2 303 2 873 2 494 2 1466 2 1286 2 270 4 930 2 1092 2 17 2 1227 2 1239 2 410 2 
702 4 1015 4 1493 4 1297 4 1298 6 853 2 1300 2 566 2 709 2 711 2 250 2 467 2 1253 2 213 2 521 4 715 2 620 2 303 2 873 2 1466 2 59 2 1316 2 1555 12 930 4 1092 2 259 6 1370 2 17 2 581 2 1214 4 933 6 1096 2 410 2 164 2 934 2 537 2 1380 2 775 2 417 4 270 4 1329 4 227 2 1223 2 1111 2 1227 2 892 2 430 2 126 2 782 2 78 2 951 2 326 2 1444 4 494 4 1286 6 1585 2 1182 2 596 2 1239 2 957 2 
702 4 1015 6 1493 4 1297 4 1298 6 853 2 1300 2 566 2 709 2 711 2 250 2 467 2 1253 2 213 2 521 4 715 2 620 2 303 2 873 2 1466 2 59 2 1316 2 1555 12 930 4 1092 2 259 6 1370 2 17 2 581 2 1214 4 933 6 1096 2 410 2 164 2 934 2 537 2 1380 2 775 2 417 4 270 4 1329 4 227 2 1223 2 1111 2 1227 2 430 2 126 2 1333 2 782 2 78 2 951 2 326 2 1444 4 494 4 1286 4 1585 2 1182 2 596 2 1239 2 957 2 
702 4 1015 6 1493 4 1297 4 1298 6 853 2 1300 2 566 2 709 2 711 2 250 2 467 2 1253 2 213 2 521 4 715 2 620 2 303 2 873 2 1466 2 59 2 1316 2 1555 12 930 4 1092 2 259 6 1370 2 17 2 581 2 1214 4 933 6 1096 2 410 2 164 2 934 2 537 2 1380 2 775 2 417 4 270 4 1329 8 227 2 1223 2 635 2 1111 2 1227 2 430 2 126 2 782 2 78 2 951 2 326 2 1444 4 494 4 1286 6 1585 2 1182 2 596 2 1239 2 957 2 
702 4 1015 8 1493 4 1297 4 853 2 1298 8 1300 2 566 2 709 2 711 2 250 2 467 2 1253 2 213 2 521 4 715 2 620 2 303 2 873 2 1466 2 59 2 1316 2 1555 12 930 4 1092 2 259 10 1370 2 17 2 581 2 1214 4 933 6 1096 2 410 2 164 2 934 2 537 2 1380 2 775 2 417 8 270 4 1329 8 227 2 1223 2 635 2 1111 2 1227 2 430 2 126 2 1333 2 782 2 78 2 951 2 326 2 1444 4 494 4 1286 6 1585 2 1182 2 596 2 1239 2 957 2 
702 4 1015 6 1493 4 1297 4 1298 6 853 2 1300 2 566 2 709 2 711 2 250 2 467 2 1253 2 213 2 521 4 715 2 620 2 303 2 873 2 1466 2 59 2 1316 2 1555 12 930 4 1092 2 259 10 1370 2 17 2 581 2 1214 4 933 6 1096 2 410 2 164 2 934 2 537 2 1380 2 775 2 417 8 270 4 1329 8 227 2 1223 2 635 2 1111 2 1227 2 430 2 126 2 782 2 78 2 951 2 326 2 1444 4 494 4 1286 6 1585 2 1182 2 596 2 1239 2 957 2 
1015 8 1016 2 603 7 608 2 1253 2 213 2 620 2 218 6 1466 2 404 6 17 2 821 6 627 2 1042 6 410 2 222 2 1044 2 1047 2 828 2 227 2 1051 2 228 2 1475 6 1279 2 831 6 1056 6 30 2 430 2 642 2 1286 4 1290 2 1293 2 846 2 848 4 1488 4 1490 2 444 2 1493 6 1067 8 1296 2 1297 4 853 4 1298 12 855 2 1300 4 856 6 1494 6 1496 2 1077 2 463 2 250 2 467 2 1502 1 1082 6 865 2 57 2 873 2 872 7 59 4 1316 2 1092 2 259 2 880 2 1096 2 1328 4 270 4 1329 2 485 6 1523 8 1111 4 893 6 1333 4 78 2 1337 2 697 1 494 4 284 2 498 2 1341 2 907 2 702 4 288 2 295 4 1145 2 97 2 709 2 710 2 711 2 518 6 1547 2 715 2 521 8 303 2 721 6 1553 10 1555 46 930 4 111 4 1370 2 933 24 1374 2 1563 6 1564 2 934 2 115 2 311 4 1380 2 1379 1 1159 2 1382 2 1385 12 123 2 1388 6 126 2 1170 2 951 2 738 2 952 2 326 2 1174 1 1580 2 953 2 1182 2 1585 4 1185 2 954 2 130 1 132 1 957 2 1401 2 1192 2 1193 1 566 2 1201 2 1203 2 1206 2 1418 2 581 2 1214 6 1615 2 164 2 775 2 776 4 173 2 1223 2 1620 2 1227 2 782 2 1440 1 590 6 787 4 1232 1 1444 4 1005 6 1633 2 596 2 386 2 1239 2 1635 6 1452 2 
702 4 1015 8 288 2 1016 2 608 2 295 4 97 2 1145 2 709 2 710 2 711 2 1253 2 518 6 1547 2 213 2 521 8 715 2 104 2 620 2 1036 2 303 2 721 6 218 6 1466 2 404 6 1553 10 1555 48 930 4 111 4 1370 2 821 6 17 2 1042 6 627 2 933 26 410 2 1374 2 222 2 1564 2 1563 6 934 2 311 4 115 2 1044 2 1380 2 1382 2 1159 2 1047 2 828 2 1051 4 227 2 1475 6 1385 12 228 2 1279 2 831 6 1056 6 123 2 635 4 1388 6 30 2 430 2 126 2 1170 2 738 2 951 2 642 2 326 2 952 2 1580 2 1286 8 953 2 1585 4 1182 2 1185 2 1290 2 954 2 846 2 1293 2 848 4 1488 4 1490 2 957 2 444 4 1067 8 1493 6 1296 2 1297 4 1401 2 1298 12 853 4 855 2 856 6 1300 4 1494 6 1192 2 1496 2 566 2 1077 2 463 4 467 2 250 2 1201 2 1082 6 865 2 1203 2 1206 2 57 2 873 2 59 4 1316 2 1418 2 259 2 1092 2 880 2 1214 6 581 2 1615 2 1096 2 164 2 775 2 776 4 1328 8 173 2 270 4 1329 6 485 6 1523 8 1223 2 1620 2 1111 4 1227 2 1525 2 893 6 782 2 590 6 78 2 787 8 1444 4 1337 2 494 4 284 2 1005 6 498 2 1633 2 1341 2 907 2 596 2 386 2 1635 6 1239 2 1452 2 
702 4 1015 8 288 2 1016 2 608 2 295 4 97 2 1145 2 709 2 710 2 711 2 1253 2 518 6 1547 2 213 2 521 8 715 2 104 2 620 2 1036 2 303 2 721 6 218 6 1466 2 404 6 1553 10 1555 48 930 4 111 4 1370 2 821 6 17 2 1042 6 627 2 933 26 410 2 1374 2 222 2 1564 2 1563 6 934 2 311 4 115 2 1044 2 1380 2 1382 2 1159 2 1047 2 828 2 417 4 1051 4 227 2 1475 6 1385 12 228 2 1279 2 831 6 1056 6 123 2 635 4 1388 6 30 2 430 2 126 2 1170 2 738 2 951 2 642 2 326 2 952 2 1580 2 1286 8 953 2 1585 4 1182 2 1185 2 1290 2 954 2 846 2 1293 2 848 4 1488 4 1490 2 957 2 444 4 1067 8 1493 6 1296 2 1297 4 1401 2 1298 12 853 4 855 2 856 6 1300 4 1494 6 1192 2 1496 2 566 2 1077 2 463 4 467 2 250 2 1201 2 1082 6 865 2 1203 2 1206 2 57 2 873 2 59 4 1316 2 1418 2 1092 2 259 6 880 2 1214 6 581 2 1615 2 1096 2 164 2 775 2 776 4 1328 8 173 2 270 4 1329 6 485 6 1523 8 1223 2 1620 2 1111 4 1227 2 1525 2 893 6 782 2 590 6 78 2 787 8 1444 4 1337 2 494 4 284 2 1005 6 498 2 1633 2 1341 2 907 2 596 2 386 2 1635 6 1239 2 1452 2 
1015 10 1016 2 601 6 608 2 209 6 1253 2 213 2 620 2 1036 2 218 6 1466 2 404 6 1039 2 17 2 821 6 627 2 1042 6 410 2 222 2 1044 2 1047 2 828 2 417 4 227 2 1051 4 228 2 1475 12 1279 4 831 6 1056 12 635 4 426 6 29 6 30 2 430 2 642 2 1286 10 1290 2 1293 2 846 2 848 6 1488 4 1490 2 444 4 1493 6 1067 8 1296 2 1297 4 853 4 1298 16 855 2 1300 4 856 12 1494 12 1496 2 463 4 250 2 467 2 1082 6 865 2 57 2 873 2 59 4 1316 2 259 6 1092 2 880 2 1096 2 1328 10 270 4 1329 6 485 6 1523 12 1111 4 1525 2 892 2 893 8 1333 2 78 2 1337 2 696 2 494 4 284 2 1123 6 498 2 1341 4 907 2 702 4 288 2 1349 6 295 4 1145 2 97 2 709 2 710 2 711 2 518 6 1547 2 715 2 521 8 104 2 924 6 303 2 721 12 1553 8 1555 52 1556 2 930 4 111 4 1370 2 933 24 113 2 1374 2 1563 6 1564 2 934 2 115 2 311 4 1380 2 1159 2 1382 2 1385 10 123 2 1388 6 126 2 949 2 1170 4 951 2 738 2 1173 2 952 2 326 2 1580 2 953 2 1182 2 1585 4 1185 2 954 2 957 2 1401 2 1192 2 1194 2 566 2 141 6 1405 6 1201 4 1203 2 1206 2 1418 2 1214 6 581 2 1615 2 164 2 775 2 776 4 173 2 1223 2 1620 2 1227 2 782 2 590 6 787 10 1444 4 379 2 1005 12 1633 2 596 2 386 4 1239 2 1635 8 1452 2 
702 4 1015 6 934 2 1297 2 1380 2 1298 4 1300 2 417 4 270 2 566 2 227 2 1329 6 709 2 1223 2 635 2 467 2 250 2 1227 2 126 2 782 2 213 2 521 2 78 2 951 2 620 2 303 2 1444 2 873 2 1286 6 1555 4 930 4 259 4 1239 2 1214 2 410 2 
702 4 1015 6 295 2 1249 2 1145 2 709 2 101 3 1253 2 1547 2 213 2 521 2 715 2 620 2 303 2 1553 2 1555 28 930 4 111 4 1370 2 933 24 410 2 222 2 934 2 1380 2 227 2 228 2 1385 4 635 2 30 2 126 2 1170 3 951 2 952 2 1581 2 1286 6 953 2 1182 2 1585 4 649 2 1185 2 954 2 1293 2 846 2 955 2 848 4 1490 2 747 2 559 2 1493 6 1297 2 1401 2 1298 4 853 4 1300 2 337 2 566 2 1077 2 467 2 250 2 1201 3 1203 2 873 2 1418 2 259 2 880 2 1214 2 581 2 1615 2 1096 2 882 2 164 2 169 2 776 4 270 2 1329 6 485 6 1523 8 1223 2 1227 2 893 6 782 2 78 2 1444 2 1337 2 1633 2 596 2 386 3 1239 2 1635 6 
566 2 250 2 1112 2 
566 2 250 2 1112 2 
702 4 1015 12 1137 2 608 2 295 6 1145 2 711 2 1253 2 518 2 1547 2 715 2 521 4 717 2 720 2 1549 4 1464 2 1466 2 1263 2 1553 2 927 4 1555 24 726 2 930 4 111 4 1370 2 933 16 222 2 311 2 417 4 120 2 1051 4 228 2 1385 4 423 4 635 4 30 2 1282 2 1576 2 326 2 952 2 953 2 1286 12 1585 4 1182 2 1185 2 954 2 1293 2 846 2 1488 2 1490 2 444 4 447 2 1493 6 1296 2 1297 2 1401 2 853 4 1298 16 1300 4 566 6 463 4 1605 2 250 4 467 2 146 2 1203 2 873 2 59 4 1316 2 259 6 880 2 1214 4 581 2 1096 2 1615 2 775 2 776 4 1617 2 1328 4 173 4 270 2 1329 6 485 6 990 2 1523 2 1111 2 1112 2 893 2 892 4 1333 4 782 2 591 2 78 4 787 4 1444 2 1337 2 494 4 498 2 1633 2 596 2 386 2 1635 2 1239 2 1346 2 1012 2 1132 2 
311 2 1035 2 1464 2 82 2 1553 2 632 2 83 2 1182 2 1555 4 1385 2 1290 2 726 2 1092 2 933 2 1012 2 1452 2 518 2 
702 4 1015 12 608 2 295 6 1145 2 711 2 1253 2 518 2 1547 2 521 4 715 2 717 2 720 2 1549 4 1464 2 1466 2 1263 2 927 4 1555 24 726 2 930 4 111 4 1370 2 933 16 222 2 417 4 1051 4 228 2 1385 2 423 4 635 4 30 2 1282 2 1576 2 326 2 952 2 953 2 1286 12 1585 4 1182 2 1185 2 954 2 1293 2 846 2 1488 2 1490 2 957 2 444 4 958 2 447 2 1493 6 1296 2 1297 2 1401 2 853 4 1298 16 1300 4 566 6 463 4 1605 4 250 4 467 2 1203 2 873 2 59 4 1316 2 259 6 880 2 1214 4 581 2 1096 2 1615 2 775 2 887 2 66 2 776 4 1617 2 1328 4 173 4 270 2 1329 6 485 6 1523 2 1111 4 1112 2 893 2 892 4 1333 4 782 2 78 4 787 4 1444 2 1337 2 494 4 85 2 498 2 1633 2 1342 2 596 2 386 4 1635 2 1239 2 1346 2 1012 2 1132 2 
702 4 1015 12 608 2 295 6 1145 2 711 2 1253 2 518 2 1547 2 715 2 521 4 717 2 720 2 1549 4 1464 2 1466 2 1263 2 1553 2 927 4 1555 24 726 2 930 4 111 4 1370 2 933 16 222 2 311 2 417 4 1051 4 228 2 1385 4 423 4 635 4 30 2 1282 2 1576 2 326 2 952 2 953 2 1286 12 1585 4 1182 2 1185 2 954 2 1293 2 846 2 1488 2 1490 2 957 2 444 4 447 2 1493 6 1296 2 1297 2 1401 2 853 4 1298 16 1300 4 140 2 566 6 463 4 1605 2 250 4 467 2 146 1 1203 2 873 2 59 4 1316 2 259 6 880 2 1214 4 581 2 1096 2 1615 2 775 2 776 4 1617 2 1328 4 173 4 270 2 1329 6 1109 2 485 6 1523 2 1111 4 1112 2 893 2 892 4 276 2 1333 4 782 2 78 4 787 4 1444 2 1337 2 494 4 498 2 1633 2 596 2 286 2 386 2 1635 2 1239 2 1450 2 1346 2 1012 2 1132 2 
0 2 796 2 797 2 2 2 6 4 801 2 7 4 802 2 803 2 8 18 806 15 10 78 9 2 807 14 11 78 12 2 811 2 810 2 14 2 13 36 813 2 15 3 16 2 814 4 815 2 816 2 819 2 18 2 822 2 823 2 824 2 825 38 21 2 23 2 25 2 28 10 833 3 832 2 834 8 30 2 31 3 836 2 33 2 34 2 35 2 839 2 842 2 840 106 841 2 36 2 844 38 846 2 37 2 847 38 848 12 849 78 40 2 41 2 851 2 850 26 43 80 852 3 853 8 857 2 45 3 46 8 47 158 863 2 864 2 865 8 867 1 55 4 868 3 869 2 870 2 871 2 56 2 57 16 874 2 876 2 60 2 879 2 62 2 63 2 880 8 881 2 882 2 884 2 886 2 73 2 74 12 891 2 893 18 75 2 79 9 80 2 894 2 896 4 81 2 897 2 901 2 84 22 904 158 906 2 86 38 907 2 908 80 87 2 909 4 90 38 91 2 910 2 92 2 911 20 93 2 913 2 94 2 95 78 96 3 97 8 98 2 100 2 101 2 919 2 102 2 922 2 923 6 107 2 109 20 926 38 929 2 111 402 933 966 113 2 114 98 936 3 116 80 937 112 939 6 118 2 119 2 944 2 945 2 947 2 949 4 952 2 953 324 128 2 954 82 955 2 131 4 133 2 136 2 138 3 139 2 137 76 959 3 960 2 961 20 965 2 964 2 142 3 967 2 146 3 969 38 147 38 148 24 149 2 150 2 972 124 973 78 155 14 975 2 158 34 159 2 160 2 162 80 979 52 980 38 166 2 165 2 984 3 983 2 982 78 168 2 985 3 986 2 170 2 987 1 988 2 172 3 173 18 174 2 176 2 991 2 992 6 179 2 996 2 998 4 1000 2 182 234 1002 2 185 10 187 120 188 2 1004 2 190 2 1009 2 191 40 193 2 1013 2 1014 2 1017 38 1019 2 1018 2 195 4 198 2 1021 2 199 2 201 2 203 104 1027 78 204 2 206 2 207 2 211 2 212 2 214 26 1034 2 216 2 219 78 220 2 1038 38 1039 2 1040 2 1041 2 222 2 1043 78 1044 22 1045 2 1048 4 1050 12 226 2 228 314 1052 2 1055 2 229 76 1058 2 233 2 234 6 1063 20 237 4 1066 48 1068 2 1069 2 1070 24 1071 32 242 2 1073 10 243 2 1074 6 246 80 248 2 249 2 1076 2 1078 2 1079 2 251 2 1080 16 1083 2 1084 2 1085 2 1086 2 252 2 1090 2 254 2 256 2 257 2 258 60 263 2 1094 2 1095 2 1096 2 264 2 1097 22 1099 2 268 2 1101 2 1102 4 1103 76 1104 10 1106 2 1107 6 1110 16 272 2 274 8 1114 2 275 2 1115 2 278 2 1116 38 279 2 1119 2 280 2 281 2 282 2 1121 20 1127 2 1129 2 1131 6 287 2 290 2 1138 4 291 2 292 20 294 2 295 2 1141 2 1143 2 296 22 297 2 1145 2 1144 6 298 4 1149 4 301 10 304 2 306 2 307 2 1151 36 1152 10 1153 2 309 2 1156 2 310 61 1157 78 312 2 313 2 316 2 1164 2 318 2 1166 2 1168 3 1167 10 319 4 320 8 321 2 323 2 1169 2 324 2 1170 16 1173 2 1176 2 327 80 1178 2 1177 4 1179 3 328 2 1180 3 329 2 1182 2 1186 2 330 4 1187 2 332 14 1192 2 1191 11 1194 2 335 38 337 2 339 2 1196 6 340 54 341 2 342 2 1197 2 1199 2 1200 4 343 2 1201 46 1202 6 1203 4 1204 2 1205 60 346 3 1208 2 349 2 350 2 1209 2 352 2 351 2 354 12 1215 3 1212 2 359 6 361 2 364 1 1216 38 366 2 1217 2 369 3 1218 2 1220 2 370 32 1221 3 373 2 1224 2 1226 2 376 3 1229 2 1230 2 1233 2 377 2 1235 13 378 2 379 2 1236 80 383 26 386 110 385 78 1240 3 387 16 389 3 392 14 1248 2 394 2 1252 2 1253 2 1254 2 1255 2 396 2 397 3 399 3 1257 14 1259 6 1261 7 403 8 1262 2 1264 2 405 2 1266 24 1267 2 1268 2 1269 2 1270 2 408 2 409 8 1271 34 411 12 1273 2 1276 2 418 2 419 40 421 4 420 2 1279 46 425 2 424 4 1281 3 427 2 433 2 432 66 434 2 435 2 437 2 439 2 1289 2 440 24 1293 2 1292 2 441 1 442 2 446 1 448 2 449 2 451 2 453 2 454 2 456 2 1302 4 1304 2 457 1 458 2 460 2 459 8 461 14 465 2 466 38 1308 4 468 4 1309 10 469 38 1310 2 1311 2 1312 2 1313 6 473 2 474 3 475 158 1317 2 476 2 477 80 478 7 1320 2 1321 234 480 3 1323 2 1324 166 484 8 483 3 1326 8 1325 2 1328 183 485 1112 1330 2 486 2 1331 2 487 2 488 2 492 2 490 2 1336 14 493 2 1337 2 495 2 497 2 1340 2 1341 84 500 2 1343 80 1345 4 501 80 1350 2 1352 1 1353 2 503 178 505 2 1354 2 1356 1 506 22 1355 2 511 24 513 2 512 80 515 16 516 2 517 2 522 2 523 2 524 36 528 2 1365 12 1369 8 1370 2 534 2 535 4 1373 2 536 78 1377 78 1378 2 1381 4 1382 2 538 38 539 1 540 3 542 2 1384 2 1385 10 545 2 544 2 1386 2 546 2 1389 2 548 2 1390 156 549 78 1391 2 1393 4 551 2 552 2 1395 102 553 66 1398 60 1399 2 557 2 558 10 560 2 1400 14 1401 2 1402 2 561 2 1403 2 562 18 1404 4 563 2 567 2 570 2 1406 24 1407 1 1408 2 571 2 1410 2 572 84 1412 2 573 2 575 3 1415 4 577 60 1416 2 1417 2 1418 2 1419 80 1421 10 1423 2 580 2 581 2 1426 2 582 2 1430 2 1431 1 1434 2 588 4 1437 1 1438 8 1439 82 1441 16 592 2 593 4 594 12 1442 2 1446 2 1445 10 1447 2 1448 12 596 2 597 2 604 2 1455 14 607 2 1456 2 611 2 610 80 1458 10 613 16 615 3 617 2 1462 2 622 2 623 2 1467 6 1468 6 1469 15 626 2 625 2 1470 4 1471 558 627 2 1472 2 628 3 629 2 1473 4 630 2 1474 3 631 24 1476 2 1477 2 637 2 641 2 1480 80 1481 1 642 2 643 2 1483 2 645 2 646 2 647 2 648 2 649 2 1486 80 1487 2 651 10 1490 8 1493 10 653 2 1495 2 1497 2 655 2 1498 2 657 2 1499 2 658 2 1500 12 1501 10 1503 2 660 2 1505 2 663 14 1507 2 664 100 666 78 1509 6 667 2 668 2 1510 3 670 2 671 3 673 2 1512 3 1511 4 674 38 1513 18 1514 2 1515 78 676 2 675 2 1517 4 1518 2 679 2 1519 2 1521 2 1522 1 681 2 682 4 1523 126 683 2 684 3 685 156 686 22 688 2 1526 8 1527 2 690 2 691 2 693 2 696 2 698 4 699 86 1528 18 1529 2 1530 4 1531 6 1533 2 1532 2 1534 6 1535 3 1536 2 1537 2 703 78 704 2 1540 4 1541 2 708 2 1542 4 1545 156 712 2 1547 2 714 2 715 2 718 2 719 2 1550 7 722 18 1551 2 1553 2 1555 1174 1558 22 1559 2 1561 4 728 10 727 2 1564 8 1565 2 1566 2 729 2 730 3 1567 2 1569 2 733 2 734 80 1571 2 1573 6 1575 2 1579 2 1580 4 1582 38 740 2 741 2 742 2 1585 8 1587 4 744 2 745 2 1588 2 1589 38 748 2 1592 1 1591 4 1590 38 750 3 1594 2 751 6 1596 2 1598 2 1600 2 754 8 755 3 1602 38 1604 4 756 2 1607 6 1608 2 762 2 764 78 766 7 1611 34 768 2 1612 20 1613 3 1614 40 770 3 769 2 1615 84 771 2 772 4 773 2 1616 3 774 2 776 480 777 24 778 2 1619 2 1620 2 779 2 780 2 1622 2 781 20 1623 2 1624 38 1625 2 783 2 784 112 787 178 786 4 1630 2 1627 4 1631 2 789 2 1633 2 792 2 1634 2 1635 32 
76 2 718 2 14 2 1170 2 1309 2 960 2 185 4 188 2 801 2 1418 2 1555 2 1279 6 1523 2 848 2 792 2 1514 2 386 2 1079 2 1635 2 933 2 893 2 1201 2 1501 2 31 2 
76 2 718 2 14 2 1170 2 1309 2 960 2 185 4 188 2 801 2 1418 2 1555 2 1279 6 1523 2 848 2 792 2 1514 2 386 2 1079 2 1635 2 933 2 893 2 1201 2 1501 2 31 2 
76 2 718 2 14 2 1170 2 1309 2 960 2 185 4 188 2 801 2 1418 2 1555 2 1279 6 1523 2 848 2 792 2 1514 2 386 2 1079 2 1635 2 933 2 893 2 1201 2 1501 2 31 2 
411 2 798 2 359 4 1070 3 292 4 1160 4 652 2 1048 2 961 4 1024 3 1433 2 510 2 1523 2 1280 2 74 2 781 4 1201 3 148 4 998 2 736 2 1413 2 1259 2 234 2 109 4 1089 2 664 2 186 2 1509 2 1418 2 1266 3 1395 6 1555 10 1531 2 354 2 1448 2 1513 4 1514 2 386 3 933 4 979 2 
411 2 798 2 359 4 1070 2 292 4 1160 4 652 2 1048 2 961 4 1024 2 1458 2 1433 2 510 2 1523 2 1280 2 74 2 781 4 1201 2 148 4 998 2 736 2 1413 2 1259 2 234 2 109 4 1089 2 664 2 186 2 1509 2 1467 2 1418 2 349 2 1266 2 1395 6 1555 10 1531 2 354 2 1448 2 1513 4 1514 2 386 2 933 4 979 2 
411 2 798 2 359 4 1070 2 292 4 1160 4 652 2 1048 2 961 4 1024 2 1458 2 1433 2 510 2 1523 2 1280 2 74 2 781 4 1201 2 148 4 998 2 736 2 1413 2 1259 2 234 2 109 4 1089 2 664 2 186 2 1509 2 1467 2 1418 2 349 2 1266 2 1395 6 1555 10 1531 2 354 2 1448 2 1513 4 1514 2 386 2 933 4 979 2 
411 2 798 2 359 4 1070 2 292 4 1160 4 652 2 1048 2 961 4 1024 2 1458 2 1433 2 510 2 1523 2 1280 2 74 2 781 4 1201 2 148 4 998 2 736 2 1413 2 1259 2 234 2 109 4 1089 2 664 2 186 2 1509 2 1467 2 1418 2 349 2 1266 2 1395 6 1555 10 1531 2 354 2 1448 2 1513 4 1514 2 386 2 933 4 979 2 
411 2 798 2 359 4 1070 2 292 4 1160 4 652 2 1048 2 961 4 1024 2 1458 4 1433 2 510 2 1523 2 1280 2 74 2 781 4 1201 2 148 4 998 2 736 2 1413 2 1259 2 234 2 109 4 1089 2 664 2 186 2 1509 2 1467 4 1418 2 349 4 1266 2 1395 6 1555 10 1531 2 354 2 1448 2 1513 4 1514 2 386 2 933 4 979 2 
1248 2 699 2 119 2 852 2 1187 2 838 2 682 2 
1107 2 852 2 544 2 500 2 694 2 110 2 
1347 2 1134 2 1453 2 914 2 1247 1 1142 2 504 2 584 1 614 2 1222 2 1572 2 489 1 1414 2 1088 2 108 2 154 2 1366 2 1005 2 669 1 1555 10 1367 2 532 2 1370 2 1372 1 262 2 933 8 
359 4 751 4 1025 2 1458 5 6 2 655 2 1196 4 1604 2 74 6 994 2 1438 2 1114 2 148 15 998 2 1259 6 1465 2 234 6 183 2 875 1 1509 6 1467 3 349 2 1555 6 257 2 1531 6 354 6 1448 6 1513 12 909 2 933 6 40 2 
1359 2 835 2 289 1 390 2 292 2 109 2 1484 6 200 2 509 4 1555 1 791 2 1368 2 1358 2 933 1 1272 2 781 2 1345 2 1011 2 
1359 4 835 2 390 2 292 2 109 2 1484 6 200 4 509 4 791 2 1368 2 1358 2 1272 2 781 2 1011 2 1345 4 
1359 8 835 2 289 1 390 2 292 2 109 2 1484 10 200 8 509 4 1555 1 791 2 1368 2 1358 2 933 1 1272 6 781 2 1011 8 1345 8 
1359 2 835 2 390 2 292 2 109 2 1484 2 200 2 509 2 791 2 1368 2 1358 2 781 2 1345 2 
1538 1 703 10 95 6 606 10 503 34 1027 6 203 42 1147 2 10 24 512 6 1545 18 11 4 618 24 1256 2 1257 8 1361 4 217 26 1550 4 106 4 107 8 403 4 219 10 1554 2 1037 2 1555 150 1038 4 1471 124 111 88 1371 4 536 6 933 134 1043 10 1377 6 114 22 412 4 1157 6 730 6 538 4 1278 2 317 8 419 2 228 58 829 4 634 8 1053 12 734 6 1387 10 638 8 322 2 429 2 1390 36 1577 90 549 6 1480 6 436 4 327 6 1177 2 953 58 840 42 36 8 1584 24 844 4 1486 6 954 14 847 4 651 7 849 10 851 8 1492 24 43 6 45 2 1191 11 246 6 1305 90 47 16 565 26 50 2 144 2 146 4 147 4 969 4 468 2 572 8 759 4 1203 8 761 6 972 12 973 6 666 10 474 4 766 4 1419 6 475 16 477 6 353 10 478 4 674 4 1515 6 1321 84 162 6 1517 2 678 2 980 4 1615 14 1324 50 981 4 982 24 1432 18 1216 4 776 112 1328 28 485 248 177 4 685 17 178 2 593 2 491 2 594 7 182 92 1236 24 904 16 1125 2 86 4 383 15 908 6 385 6 1343 6 1131 2 
1133 2 501 6 851 2 1492 2 42 2 1189 2 43 2 703 2 1140 2 606 2 4 2 707 2 656 2 47 4 1075 2 299 4 99 2 50 2 512 2 1545 2 1032 2 210 2 146 2 618 2 572 6 1203 2 923 4 470 2 1506 2 107 2 1363 2 219 2 666 2 474 1 1554 2 1419 2 475 4 1610 2 1037 2 725 2 767 2 1555 46 353 2 111 20 1471 6 933 44 1615 2 1043 2 883 2 981 2 730 3 269 2 314 2 827 2 117 4 776 20 1328 37 1435 2 228 3 634 2 485 45 734 2 1387 2 685 2 178 2 322 2 1332 2 1060 4 689 2 950 2 997 2 1390 2 491 2 1578 2 1120 2 235 2 327 2 953 3 36 2 1584 2 127 2 1486 2 595 2 1291 2 954 2 904 4 555 2 1064 2 384 2 239 2 849 2 443 2 
851 2 600 2 703 2 95 2 246 2 4 2 707 4 1027 2 203 2 47 4 1250 8 99 2 50 2 1545 6 302 2 1203 2 1463 8 973 2 107 2 219 4 666 2 475 4 1265 2 1037 2 1318 2 1555 42 260 2 111 14 1471 10 1515 2 978 2 162 2 1321 6 536 2 933 38 1615 4 19 2 1043 2 1377 2 1324 2 935 2 1157 2 360 2 730 2 267 2 538 2 827 2 415 2 776 16 1328 14 228 6 485 34 685 6 273 8 322 2 429 2 997 4 950 4 1390 4 549 2 491 2 1118 2 182 6 1583 2 840 4 953 6 36 2 1236 2 954 4 904 4 1125 2 86 2 383 2 908 2 849 2 385 2 331 2 
851 2 43 4 703 2 1140 2 1191 1 45 1 503 10 47 6 50 2 512 4 144 2 1545 2 146 2 11 2 1256 2 468 2 572 6 1257 4 1203 2 1550 2 107 2 403 4 219 2 666 2 766 2 1419 4 475 6 1554 2 1037 2 1555 28 478 2 111 14 1471 8 1517 2 933 26 1615 2 1043 2 114 9 730 2 827 2 776 14 1328 14 228 10 485 38 734 4 685 2 178 2 322 2 1390 2 593 2 491 2 594 1 327 4 1177 2 953 10 36 2 1486 4 954 2 904 6 651 1 383 5 849 2 
1339 2 
1033 1 541 1 54 1 619 1 860 1 1482 1 
1033 1 541 1 54 1 619 1 860 1 1482 1 
1033 1 541 1 54 1 619 1 860 1 1482 1 
1033 1 541 1 54 1 619 1 860 1 1482 1 
1033 1 541 1 54 1 619 1 860 1 1482 1 
1033 1 541 1 54 1 619 1 860 1 1482 1 
1033 1 541 1 54 1 619 1 860 1 1482 1 
1033 1 541 1 54 1 619 1 860 1 1482 1 
1033 1 541 1 54 1 619 1 860 1 1482 1 
1033 1 541 1 54 1 619 1 860 1 1482 1 
1033 1 541 1 54 1 619 1 860 1 1482 1 
1033 1 541 1 54 1 619 1 860 1 1482 1 
1033 1 541 1 54 1 619 1 860 1 1482 1 
1033 1 541 1 54 1 619 1 860 1 1482 1 
1033 1 541 1 54 1 619 1 860 1 1482 1 
1033 1 541 1 54 1 619 1 860 1 1482 1 
1033 1 541 1 54 1 619 1 860 1 1482 1 
1033 1 541 1 54 1 619 1 860 1 1482 1 
1033 1 541 1 54 1 619 1 860 1 1482 1 
1033 1 541 1 54 1 619 1 860 1 1482 1 
1033 1 541 1 54 1 619 1 860 1 1482 1 
1033 1 541 1 54 1 619 1 860 1 1482 1 
1033 1 541 1 54 1 619 1 860 1 1482 1 
1033 1 541 1 54 1 619 1 860 1 1482 1 
1033 1 541 1 54 1 619 1 860 1 1482 1 
1033 1 541 1 54 1 619 1 860 1 1482 1 
1033 1 541 1 54 1 619 1 860 1 1482 1 
1033 1 541 1 54 1 619 1 860 1 1482 1 
1033 1 541 1 54 1 619 1 860 1 1482 1 
1033 1 541 1 54 1 619 1 860 1 1482 1 
1033 1 541 1 54 1 619 1 860 1 1482 1 
1033 1 541 1 54 1 619 1 860 1 1482 1 
1033 1 541 1 54 1 619 1 860 1 1482 1 
1033 1 541 1 54 1 619 1 860 1 1482 1 
1033 1 541 1 54 1 619 1 860 1 1482 1 
1033 1 541 1 54 1 619 1 860 1 1482 1 
1033 1 541 1 54 1 619 1 860 1 1482 1 
1033 1 541 1 54 1 619 1 860 1 1482 1 
1033 1 541 1 54 1 619 1 860 1 1482 1 
1033 1 541 1 54 1 619 1 860 1 1482 1 
1033 1 541 1 54 1 619 1 860 1 1482 1 
1033 1 541 1 54 1 619 1 860 1 1482 1 
1033 1 541 1 54 1 619 1 860 1 1482 1 
1033 1 541 1 54 1 619 1 860 1 1482 1 

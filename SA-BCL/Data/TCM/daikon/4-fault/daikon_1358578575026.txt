#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V FAILED junit.framework.AssertionFailedError 376 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 781 674 547 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR utilMDE.Assert$AssertionException (200,998) (200,998) 981 614 537 886 
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_0()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_1()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_2()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_3()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_4()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_5()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_6()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_7()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_8()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_9()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_10()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_11()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_12()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_13()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_14()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_15()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_16()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_17()V PASSED
daikon.test.split.SplitterFactoryTest:testmisc_Fib_main_18()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_19()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_20()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_21()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_22()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_23()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_24()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_25()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_26()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_27()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_28()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_29()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_30()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_31()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_32()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__33()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__34()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__35()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__36()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__37()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__38()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__39()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__40()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__41()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__42()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__43()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltwiseNotEqual([I)Z
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
jtb.syntaxtree.NodeList:NodeList()V
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Modifiers;)V
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
jtb.JavaParser:jj_3R_57()Z
jtb.JavaParser:jj_3_13()Z
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Quant:lexGTE([I[I)Z
jtb.JavaParser:jj_3_35()Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.Quant:intersection([I[I)[I
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBody;)V
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.ClassOrInterfaceBody:ClassOrInterfaceBody(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.FormalParameters;)V
daikon.ProglangType:isScalar()Z
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
utilMDE.ArraysMDE:min([I)I
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
jtb.JavaParser:jj_3R_107()Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
jtb.JavaParser:JavaParser(Ljava.io.Reader;)V
daikon.inv.unary.scalar.UpperBound:enabled()Z
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ExclusiveOrExpression;)V
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;Z)Z
jtb.JavaParser:jj_3R_88()Z
daikon.PptName:toString()Ljava.lang.String;
jtb.visitor.TreeFormatter:TreeFormatter()V
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.inv.filter.ParentFilter:ParentFilter()V
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.syntaxtree.Block:accept(Ljtb.visitor.Visitor;)V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.Quant:eltwiseGTE([I)Z
jtb.JavaParser:jj_3_27()Z
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
jtb.JavaParser:jj_3R_47()Z
daikon.inv.unary.UpperBoundCore:computeProbability()D
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameters;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
jtb.visitor.TreeDumper:printToken(Ljava.lang.String;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
jtb.JavaParser:jj_scan_token(I)Z
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
jtb.JavaParser:jj_3R_134()Z
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
jtb.syntaxtree.Statement:accept(Ljtb.visitor.Visitor;)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.PostfixExpression;)V
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.PrimaryPrefix:accept(Ljtb.visitor.Visitor;)V
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.Quant:sameLength([I[I)Z
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
jtb.syntaxtree.AndExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant:prob_or(DD)D
utilMDE.Intern.SequenceAndIndices:hashCode()I
jtb.syntaxtree.ResultType:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.BlockStatement;)V
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
jtb.JavaParser:jj_3_1()Z
daikon.Quant:lexLT([I[I)Z
jtb.JavaParser:jj_3_15()Z
jtb.syntaxtree.FormalParameter:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.FuzzyFloat:lt(DD)Z
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:lte(II)Z
jtb.visitor.TreeFormatter:TreeFormatter(II)V
daikon.diff.RootNode:RootNode()V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.UtilMDE:splitLines(Ljava.lang.String;)[Ljava.lang.String;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
jtb.JavaCharStream:getBeginLine()I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
jtb.JavaParser:jj_2_3(I)Z
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
jtb.JavaParser:jj_3R_68()Z
jtb.JavaParser:jj_3R_149()Z
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
jtb.syntaxtree.FormalParameter:FormalParameter(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Type;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_164()Z
utilMDE.ArraysMDE:max([I)I
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.EqualityExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.UnaryExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
utilMDE.FuzzyFloat:FuzzyFloat()V
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.tools.jtb.Ast:removeWhitespace(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaCharStream:ReadByte()C
jtb.JavaParser:jj_3R_51()Z
daikon.tools.jtb.Ast:format(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.Quant:eltsGtIndex([I)Z
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.Quant:concat([I[I)[I
daikon.Quant:noDups([I)Z
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
jtb.syntaxtree.MethodDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.Quant:pairwiseNotEqual([I[I)Z
jtb.JavaParser:jj_3_3()Z
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
jtb.JavaParser:jj_3R_103()Z
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonModulus:updateResults()V
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ImportDeclaration;)V
jtb.syntaxtree.PrimaryExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern:intern([D)[D
daikon.Quant:eltwiseLTE([I)Z
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:eltsLTE([II)Z
utilMDE.ArraysMDE:subarray([JII)[J
daikon.inv.Invariant:prob_and(DDD)D
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaCharStream:getEndLine()I
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReturnStatement;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalAndExpression;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ReferenceType;)V
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.Quant:subsetOf([F[F)Z
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:new_ppt()V
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
jtb.JavaParser:jj_3R_54()Z
jtb.syntaxtree.CompilationUnit:CompilationUnit(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.ModBitTracker:num_samples()I
jtb.JavaParser:jj_3_10()Z
utilMDE.MathMDE:modulus([I)[I
jtb.JavaParser:jj_2_1(I)Z
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
utilMDE.ArraysMDE:isSubset([D[D)Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.ValueTuple:isMissingNonsensical(I)Z
jtb.JavaParser:jj_3R_148()Z
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
jtb.syntaxtree.NodeChoice:accept(Ljtb.visitor.Visitor;)V
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.Quant:eltsEqual([II)Z
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.ProglangType:isPointerFileRep()Z
jtb.JavaParser:jj_3_21()Z
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_50()Z
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MultiplicativeExpression;)V
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_136()Z
jtb.JavaParser:jj_3R_169()Z
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.Quant:eq(DD)Z
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.InstanceOfExpression;)V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
jtb.syntaxtree.MethodDeclarator:accept(Ljtb.visitor.Visitor;)V
daikon.PptName:isCombinedExitPoint()Z
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.PrimaryPrefix;)V
jtb.syntaxtree.ConditionalOrExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:FormalParameter()Ljtb.syntaxtree.FormalParameter;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryPrefix;)V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.Statement;)V
daikon.VarInfoName:isLiteralConstant()Z
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
jtb.JavaParser:jj_2_25(I)Z
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.Quant:pairwiseGT([I[I)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
jtb.visitor.TreeFormatter:indent()Ljtb.visitor.FormatCommand;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.visitor.TreeDumper:TreeDumper(Ljava.io.Writer;)V
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.TreeFormatter:indent(I)Ljtb.visitor.FormatCommand;
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.test.TestQuant:assert_arrays_equals([I[I)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;II)V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.tools.jtb.SimpleTreeDumper:printToken(Ljava.lang.String;)V
jtb.JavaParser:jj_2_18(I)Z
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:sum([[I)I
daikon.tools.jtb.Ast:print(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.syntaxtree.VariableDeclaratorId:VariableDeclaratorId(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfo:name()Ljava.lang.String;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.Invariant:prob_is_ge(DD)D
utilMDE.FuzzyFloat:isSubset([D[D)Z
jtb.syntaxtree.NodeChoice:getParent()Ljtb.syntaxtree.Node;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
jtb.syntaxtree.Type:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
daikon.Quant:lexGT([I[I)Z
daikon.Quant:pairwiseLT([I[I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
jtb.syntaxtree.ClassOrInterfaceDeclaration:accept(Ljtb.visitor.Visitor;)V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.VarInfoName:esc_name()Ljava.lang.String;
jtb.Token:newToken(I)Ljtb.Token;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
daikon.ProglangType:dimensions()I
daikon.ValueTuple:isMissingFlow(I)Z
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_74()Z
jtb.JavaParser:jj_3R_97()Z
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.NullLiteral;)V
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:memberOf(D[F)Z
jtb.JavaParser:jj_3R_49()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeOptional;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.EqualityExpression;)V
daikon.Quant:subsetOf([D[D)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
jtb.syntaxtree.NodeOptional:present()Z
utilMDE.FuzzyFloat:gte(DD)Z
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:jj_ntk()I
daikon.test.TestAst:checkMatch(Ljava.lang.String;Ljtb.syntaxtree.MethodDeclaration;Ldaikon.tools.jtb.PptNameMatcher;)V
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.Quant:eltsGteIndex([I)Z
daikon.tools.jtb.Ast:typeMatch(Ljava.lang.String;Ljava.lang.String;)Z | OPERATOR | 38856 | == -> >
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE:gcd_differences([I)I
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.inv.unary.LowerBoundCore:calc_range()J
utilMDE.FuzzyFloat:ne(DD)Z
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.diff.Node:Node()V
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.ArraysMDE:min_max([I)[I
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
jtb.JavaParser:jj_3R_69()Z
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.PptTopLevel.CondIterator:hasNext()Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.Quant:eq(JJ)Z
jtb.visitor.TreeFormatter:outdent()Ljtb.visitor.FormatCommand;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
jtb.syntaxtree.TypeArguments:TypeArguments(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeArgument;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
daikon.VarInfo:ioa_name()Ljava.lang.String;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.Literal;)V
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.tools.jtb.Ast:getParent(Ljava.lang.Class;Ljtb.syntaxtree.Node;)Ljtb.syntaxtree.Node;
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfo:isPointer()Z
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalOrExpression;)V
daikon.Quant:eltwiseEqual([I)Z
daikon.tools.jtb.Ast.1GetParametersVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.Quant:eltsGT([II)Z
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
daikon.PptName:getSignature()Ljava.lang.String;
jtb.syntaxtree.PostfixExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName; | RETURN | 78854 | return null
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.PrimaryExpression;)V
daikon.PptSlice2:arity()I
jtb.JavaCharStream:FillBuff()V
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
jtb.syntaxtree.MethodDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.TypeArguments:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.Modifiers:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
jtb.JavaParser:jj_2_5(I)Z
daikon.Quant:setDiff([I[I)[I
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
jtb.syntaxtree.InclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ResultType;)V
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
utilMDE.ArraysMDE:noDuplicates([I)Z
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.Quant:memberOf(F[D)Z
jtb.syntaxtree.TypeDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_96()Z
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljava.lang.String;Ljava.lang.String;Ljava.util.List;)Z
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
jtb.syntaxtree.ClassOrInterfaceBody:getParent()Ljtb.syntaxtree.Node;
jtb.JavaParser:jj_3_17()Z
utilMDE.MathMDE:sign(I)I
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3_22()Z
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.Modulus:enabled()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PostfixExpression;)V
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
jtb.syntaxtree.PackageDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
utilMDE.ArraysMDE:indexOf([II)I
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
jtb.JavaParser:jj_3R_114()Z
jtb.JavaParser:jj_3R_89()Z
daikon.Quant:eltsLteIndex([I)Z
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ResultType;)V
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_2_14(I)Z
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeDeclaration;)V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.ProglangType:isFloat()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltwiseGT([I)Z
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.Quant:subsetOf([I[I)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:jj_3_4()Z
jtb.JavaParser:jj_3R_100()Z
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.syntaxtree.ExclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
jtb.JavaParser:jj_3_25()Z
jtb.JavaParser:jj_3R_60()Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Literal;)V
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.Quant:subsetOf([J[J)Z
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.tools.jtb.Ast:getPackage(Ljtb.syntaxtree.CompilationUnit;)Ljava.lang.String;
jtb.syntaxtree.RelationalExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.test.InvariantFormatTester:execute()Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.Invariants:Invariants()V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.LowerBoundCore:computeProbability()D
jtb.visitor.TreeFormatter:force(I)Ljtb.visitor.FormatCommand;
utilMDE.ArraysMDE:fn_identity(I)[I
jtb.JavaParser:jj_3_28()Z
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
jtb.syntaxtree.NodeListOptional:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_125()Z
jtb.JavaParser:jj_2_16(I)Z
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.RelationalExpression;)V
utilMDE.FuzzyFloat:lte(DD)Z
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.visitor.TreeFormatter:space()Ljtb.visitor.FormatCommand;
utilMDE.ArraysMDE:sum([D)D
jtb.JavaParser:jj_3_5()Z
daikon.tools.jtb.Ast:create(Ljava.lang.String;[Ljava.lang.Class;[Ljava.lang.Object;Ljava.lang.String;)Ljtb.syntaxtree.Node;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_161()Z
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.tools.jtb.Ast:getType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.filter.InvariantFilter:InvariantFilter()V
utilMDE.ArraysMDE:subarray([III)[I
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
utilMDE.LimitedSizeIntSet:size()I
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Expression;)V
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.TypeArgument:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
jtb.syntaxtree.BlockStatement:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.FormalParameter:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_210()Z
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
jtb.visitor.TreeFormatter:processList(Ljtb.syntaxtree.NodeListInterface;Ljtb.visitor.FormatCommand;)V
jtb.JavaParser:jj_3R_80()Z
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoName:name()Ljava.lang.String;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.Type;)V
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ReturnStatement;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.AndExpression;)V
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.inv.Invariant:getConfidence()D
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.MultiplicativeExpression;)V
utilMDE.Intern:numIntArrays()I
jtb.JavaParser:jj_3R_124()Z
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeBound;)V
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ProglangType:isPseudoArray()Z
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_73()Z
jtb.JavaCharStream:BeginToken()C
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.AdditiveExpression;)V
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Invariant:format()Ljava.lang.String;
jtb.JavaParser:jj_3R_76()Z
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
jtb.JavaParser:jj_3R_137()Z
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.inv.filter.ObviousFilter:ObviousFilter()V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.InclusiveOrExpression;)V
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_29()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Add:amount()Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.RelationalExpression;)V
daikon.tools.jtb.Ast:quickFixForInternalComment(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
jtb.syntaxtree.InstanceOfExpression:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:lexNotEqual([I[I)Z
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
utilMDE.MathMDE:nonmodulus_strict([I)[I
jtb.visitor.TreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.ModBitTracker:split(I)I
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameter;)V
daikon.test.TestAst.MethodDeclarationHarvester:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
jtb.JavaParser:jj_3R_48()Z
jtb.JavaParser:jj_3R_62()Z
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_104()Z
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
jtb.syntaxtree.MultiplicativeExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.UtilMDE:split(Ljava.lang.String;Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext1()V
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
jtb.syntaxtree.ImportDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:ungenerify(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.tools.jtb.SimpleTreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
jtb.JavaParser:VariableDeclaratorId()Ljtb.syntaxtree.VariableDeclaratorId;
jtb.JavaParser:jj_3R_99()Z
jtb.visitor.FormatCommand:FormatCommand(II)V
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameters;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
daikon.ModBitTracker:num_vars()I
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
jtb.JavaParser:jj_2_35(I)Z
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ConditionalAndExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.PptName:getFullClassName()Ljava.lang.String;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.JavaParser:getToken(I)Ljtb.Token;
jtb.JavaParser:jj_3R_52()Z
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.Block;)V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_81()Z
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
daikon.Quant:memberOf(J[J)Z
jtb.JavaParser:jj_3R_108()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AndExpression;)V
daikon.VarInfo:relate_var()V
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.VarInfo:simplify_name()Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_105()Z
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
jtb.JavaParser:jj_3R_121()Z
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.PptName:isEnterPoint()Z
jtb.syntaxtree.ClassOrInterfaceDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.VariableDeclaratorId:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeToken:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.UtilMDE:removeWhitespaceAfter(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ExclusiveOrExpression;)V
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.test.FormatTestCase:passes()Z
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_98()Z
daikon.inv.ValueSet:ValueSet(I)V
daikon.Quant:pairwiseSquare([I[I)Z
utilMDE.FuzzyFloat:gt(DD)Z
jtb.JavaParser:jj_3R_109()Z
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalExpression;)V
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_67()Z
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:dbc_name()Ljava.lang.String;
jtb.JavaParser:jj_3R_55()Z
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
utilMDE.MathMDE:gcd(II)I
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.diff.InvMap:InvMap()V
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_2_21(I)Z
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
jtb.visitor.TreeFormatter:force()Ljtb.visitor.FormatCommand;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
jtb.syntaxtree.ClassOrInterfaceType:accept(Ljtb.visitor.Visitor;)V
utilMDE.FuzzyFloat:eq(DD)Z
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.CompilationUnit;)V
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
jtb.JavaParser:jj_3_18()Z
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.NodeOptional:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:sorted([I)Z
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.ProglangType:isArray()Z
utilMDE.MathMDE:mod_positive(JJ)J
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.PptSlice1:arity()I
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.Expression;)V
daikon.diff.Node:add(Ljava.lang.Object;)V
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArgument;)V
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Type;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclarator;)V
daikon.inv.unary.scalar.NonZero:is_pointer()Z
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:gte(II)Z
jtb.JavaParser:jj_3R_101()Z
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NullLiteral:accept(Ljtb.visitor.Visitor;)V
jtb.JavaCharStream:backup(I)V
utilMDE.SimpleLog:SimpleLog(Z)V
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
daikon.ProglangType:isIntegral()Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:sum([I)I
daikon.ProglangType:elementType()Ldaikon.ProglangType;
jtb.JavaParser:jj_3R_56()Z
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AdditiveExpression;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_61()Z
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
jtb.syntaxtree.ShiftExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.Quant:lexEqual([I[I)Z
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.PptSlice0.ImplicationWrapper:hashCode()I
jtb.JavaParser:jj_3_20()Z
daikon.PptTopLevel:getInvariants()Ljava.util.List;
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
utilMDE.WeakHasherMap:processQueue()V
jtb.JavaCharStream:getEndColumn()I
jtb.JavaParser:jj_3R_110()Z
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InstanceOfExpression;)V
utilMDE.ArraysMDE:fn_compose([I[I)[I
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_133()Z
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.tools.jtb.PptNameMatcher:extractPptArgs(Ldaikon.PptName;)Ljava.util.List;
utilMDE.OrderedPairIterator:hasNext()Z
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
jtb.syntaxtree.NodeSequence:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
jtb.syntaxtree.Name:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:fn_is_permutation([I)Z
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
jtb.JavaParser:jj_3_30()Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.MethodDeclarator;)V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.ArraysMDE:sum([[D)D
utilMDE.MathMDE:negate(I)I
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.FormalParameter;)V
utilMDE.ArraysMDE:indexOf([ZZ)I
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.inv.Invariant:logDetail()Z
utilMDE.MathMDE:pow(II)I
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3_14()Z
daikon.inv.unary.scalar.NonModulus:enabled()Z
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
jtb.JavaParser:jj_3R_77()Z
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.ClassOrInterfaceBody:setParent(Ljtb.syntaxtree.Node;)V
daikon.tools.jtb.PptNameMatcher:getUngenerifiedType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:elements()Ljava.util.Enumeration;
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.OutputFormat:toString()Ljava.lang.String;
jtb.JavaParser:jj_3R_63()Z
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.ValueTuple:isMissing(I)Z
jtb.syntaxtree.TypeBound:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.FormalParameters:accept(Ljtb.visitor.Visitor;)V
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.Debug:logDetail()Z
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.UtilMDE:removeWhitespaceBefore(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.NodeListOptional:present()Z
jtb.syntaxtree.NodeSequence:getParent()Ljtb.syntaxtree.Node;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.VarInfoName.Elements:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.Quant:eq(II)Z
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PackageDeclaration;)V
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.ModBitTracker:num_sets()I
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
utilMDE.Assert:assertTrue(Z)V
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments;
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.inv.Invariant:isWorthPrinting()Z
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
jtb.JavaCharStream:getBeginColumn()I
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Debug:logOn()Z
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.Quant:lexLTE([I[I)Z
daikon.Quant:eltsLT([II)Z
daikon.tools.jtb.Ast:create(Ljava.lang.String;Ljava.lang.String;)Ljtb.syntaxtree.Node;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.CompilationUnit:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReferenceType;)V
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.tools.jtb.Ast:getName(Ljtb.syntaxtree.MethodDeclaration;)Ljava.lang.String;
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.Quant:eltsLtIndex([I)Z
daikon.Ppt:Ppt()V
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.VariableDeclaratorId:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
utilMDE.UtilMDE:removeWhitespaceAround(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.Quant:lt(II)Z
daikon.PptSlice1:num_samples()I
jtb.JavaParser:jj_2_13(I)Z
daikon.diff.Node:children()Ljava.util.Iterator;
jtb.JavaParser:jj_3R_162()Z
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
utilMDE.MathMDE:gcd(JJ)J
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.inv.unary.scalar.Positive:enabled()Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.tools.jtb.SimpleTreeDumper:SimpleTreeDumper(Ljava.io.Writer;)V
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InclusiveOrExpression;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:subsetOf([F[D)Z
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.VarInfoName:ioa_name()Ljava.lang.String;
jtb.JavaParser:jj_3R_116()Z
jtb.syntaxtree.AdditiveExpression:accept(Ljtb.visitor.Visitor;)V
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.ElementsFinder:inPre()Z
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:hashCode()I
daikon.Quant:eq(FF)Z
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_135()Z
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.UnaryExpression;)V
utilMDE.WeakHasherMap:size()I
utilMDE.MathMDE:gcd([I)I
utilMDE.UtilMDE:lineNumberFileReader(Ljava.lang.String;)Ljava.io.LineNumberReader;
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;)V
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.PptName:PptName(Ljava.lang.String;)V
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
jtb.JavaParser:jj_3R_122()Z
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.Quant:eltsNotEqual([II)Z
daikon.VarInfo:esc_name()Ljava.lang.String;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.EqualityExpression;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.JavaParser:jj_3_36()Z
daikon.PptMap:asCollection()Ljava.util.Collection;
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.ModBitTracker:ModBitTracker(I)V
daikon.inv.Invariant:logOn()Z
jtb.JavaParser:jj_3R_126()Z
jtb.visitor.FormatCommand:getNumCommands()I
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;)V
jtb.syntaxtree.TypeDeclaration:TypeDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.ProglangType:baseIsScalar()Z
jtb.syntaxtree.TypeDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.Quant:eltwiseLT([I)Z
jtb.syntaxtree.ReturnStatement:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeToken;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameters;)V
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.JavaParser:jj_3R_106()Z
daikon.Quant:memberOf(I[I)Z
daikon.PptName:getMethodName()Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.tools.jtb.PptNameMatcher:typeMatch(Ljava.lang.String;Ljtb.syntaxtree.FormalParameter;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Statement;)V
jtb.JavaParser:jj_3R_58()Z
jtb.visitor.TreeFormatter:add(Ljtb.visitor.FormatCommand;)V
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameter;)V
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
utilMDE.Intern:internSubsequence([JII)[J
daikon.Quant:ne(II)Z
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
jtb.JavaParser:jj_2_10(I)Z
daikon.Quant:union([I[I)[I
daikon.Quant:slice([III)[I
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.PptSlice0:initInvariantsSeen()V
jtb.JavaParserTokenManager:jjStopAtPos(II)I
jtb.JavaParser:jj_3R_115()Z
utilMDE.Intern:intern([I)[I
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.Quant:subsetOf([B[I)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceDeclaration:ClassOrInterfaceDeclaration(Ljtb.syntaxtree.NodeChoice;Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ClassOrInterfaceBody;)V
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:copy(Ljava.util.HashMap;)Ljava.util.HashMap;
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.Quant:setEqual([I[I)Z
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
utilMDE.Intern:internSubsequence([III)[I
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ConditionalExpression;)V
jtb.syntaxtree.NodeToken:numSpecials()I
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.FormatCommand:getCommand()I
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
jtb.visitor.TreeFormatter:outdent(I)Ljtb.visitor.FormatCommand;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeSequence;)V
daikon.Quant:subsetOf([D[F)Z
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
jtb.JavaCharStream:readChar()C
daikon.Quant:eltsEqualIndex([I)Z
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.tools.jtb.Ast:getClassName(Ljtb.syntaxtree.Node;)Ljava.lang.String;
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
utilMDE.ArraysMDE:concat([I[I)[I
jtb.syntaxtree.Literal:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.TreeFormatter:space(I)Ljtb.visitor.FormatCommand;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeSequence:elements()Ljava.util.Enumeration;
jtb.syntaxtree.TypeArgument:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
jtb.JavaParser:jj_3_19()Z
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
jtb.JavaParser:jj_3R_180()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:isReverse([I[I)Z
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
jtb.syntaxtree.NodeListOptional:getParent()Ljtb.syntaxtree.Node;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.LimitedSizeIntSet:add(I)V
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:eltsGTE([II)Z
jtb.JavaParser:jj_3R_53()Z
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
jtb.JavaParser:jj_3R_123()Z
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
jtb.JavaParser:jj_3R_85()Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:pairwiseDivides([I[I)Z
daikon.Quant:subsetOf([S[S)Z
daikon.Quant:pairwiseLTE([I[I)Z
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;)Z
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3_12()Z
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArguments;)V
daikon.Quant:pairwiseGTE([I[I)Z
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParser:jj_2_36(I)Z
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ConditionalOrExpression;)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ConditionalAndExpression;)V
jtb.JavaParser:jj_3R_87()Z
daikon.simplify.LemmaStack:noticeInt(J)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
jtb.JavaParser:jj_3R_75()Z
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ShiftExpression;)V
daikon.Quant:gt(II)Z
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.tools.jtb.PptNameMatcher:PptNameMatcher(Ljtb.syntaxtree.Node;)V
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.inv.Invariant:justified()Z
jtb.syntaxtree.TypeDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.Quant:pairwiseEqual([I[I)Z
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_70()Z
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NullLiteral;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ShiftExpression;)V
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_163()Z
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_2_4(I)Z
utilMDE.ArraysMDE:element_range([I)I
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpression;)V
jtb.syntaxtree.Expression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ReferenceType:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3_16()Z
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
jtb.syntaxtree.TypeArguments:accept(Ljtb.visitor.Visitor;)V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_86()Z
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
utilMDE.MathMDE:pow_fast(II)I
daikon.ProglangType:baseIsFloat()Z
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:mod_positive(II)I
daikon.Quant:memberOf(F[F)Z
jtb.syntaxtree.CompilationUnit:getParent()Ljtb.syntaxtree.Node;
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_118()Z
daikon.PptTopLevel:name()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Block;)V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.tools.jtb.Ast:getParameters(Ljtb.syntaxtree.MethodDeclaration;)Ljava.util.List;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
jtb.JavaParser:jj_3R_102()Z
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext2()V
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_120()Z
daikon.Quant:eltsNotEqualIndex([I)Z
utilMDE.MathMDE:missing_numbers([I)[I
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.test.TestAst.ClassOrInterfaceDeclarationHarvester:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryExpression;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor.1:visit(Ljtb.syntaxtree.TypeParameter;)V
jtb.JavaParser:jj_2_17(I)Z
daikon.inv.Invariant:prob_and(DD)D
utilMDE.Options.OptionInfo:argument_required()Z
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.PptSlice0:arity()I
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.VarInfoName.NodeFinder:inPre()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Name;)V
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
jtb.JavaParser:jj_2_12(I)Z
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.ProglangType:baseIsIntegral()Z
jtb.syntaxtree.NodeSequence:elementAt(I)Ljtb.syntaxtree.Node;
jtb.JavaCharStream:GetImage()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
jtb.JavaParser:jj_3R_72()Z
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.TypeParameter:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.TypeParameters:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
jtb.JavaParser:jj_3R_119()Z
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_2_15(I)Z
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.visitor.TreeFormatter:placeToken(Ljtb.syntaxtree.NodeToken;II)V
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.ClassOrInterfaceBody:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_117()Z
jtb.syntaxtree.ConditionalExpression:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
utilMDE.UtilMDE:lineNumberFileReader(Ljava.io.File;)Ljava.io.LineNumberReader;
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.ValueTuple:size()I
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljtb.syntaxtree.Node;)Z
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.BlockStatement;)V
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
daikon.Quant:memberOf(S[S)Z
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Intern:intern([J)[J
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
1340 2 269 2 1203 2 813 2 594 4 998 2 200 2 169 2 1276 2 
421 2 288 2 705 6 1466 2 904 2 1175 2 1009 2 114 2 983 6 717 2 1402 6 
187 6 76 2 200 2 749 4 1415 2 10 6 1179 2 998 2 1028 2 1392 2 663 4 401 6 599 6 
283 8 1212 2 1364 12 3 2 1172 2 337 2 591 4 1301 4 1223 16 893 10 998 6 759 10 1067 8 505 4 236 4 346 8 432 2 200 6 1354 16 1484 6 1235 2 1418 10 205 2 1310 16 869 28 122 8 1032 26 1055 10 564 10 1188 6 
262 4 1414 6 
1375 2 
489 4 95 2 587 2 392 4 1410 2 1087 2 397 2 729 2 998 4 1328 2 1182 2 898 2 685 2 237 2 200 4 688 2 736 2 558 2 1235 2 1382 2 458 2 161 2 909 2 832 2 871 2 1340 2 1151 4 914 2 1346 2 573 2 753 4 1349 2 757 2 38 2 319 2 321 2 1480 2 215 2 923 2 184 2 1074 2 926 2 224 2 1361 2 
1405 5 1082 6 490 4 1364 22 308 8 751 3 171 2 1174 4 1301 2 893 15 1223 32 998 4 759 15 899 2 198 4 1066 6 1067 6 39 4 179 2 346 19 432 2 200 4 1456 6 1354 32 139 4 1234 4 44 2 1484 4 1418 6 219 6 1310 32 928 2 326 4 869 52 46 6 1032 47 1055 15 564 15 1188 4 
1410 2 445 2 1086 2 
460 2 823 22 386 10 788 2 726 2 334 2 1156 2 1342 2 373 2 569 2 132 2 752 2 416 2 1361 2 
1106 2 1364 2 1409 2 623 2 1301 2 893 2 1223 2 759 2 821 2 177 2 633 2 108 2 346 2 238 2 1354 2 1025 2 1418 4 1310 2 869 6 1032 4 1055 2 564 2 1188 2 
759 4 490 4 933 2 1364 4 1066 6 505 2 1354 8 1174 4 1223 8 893 4 1310 8 869 16 46 6 1032 12 469 2 1055 4 564 4 
1058 4 305 2 1107 2 812 10 445 6 1314 4 1086 2 1408 2 392 4 466 4 336 4 521 4 1410 8 1470 2 1249 2 1089 2 595 10 291 2 941 2 316 2 1349 4 1142 2 1372 2 681 2 233 2 295 4 1377 14 1230 4 845 2 1432 4 473 2 1069 2 952 62 924 2 1070 2 611 2 1438 4 926 2 382 4 488 4 
312 2 1426 2 626 2 627 2 865 2 1375 2 945 2 1479 2 783 2 930 2 
1131 2 2 1 772 2 675 2 676 3 1216 8 1138 16 858 2 5 2 100 2 493 2 492 1 6 2 774 2 1039 2 1040 24 1321 1 102 2 678 2 593 3 1326 1 499 4 1228 16 15 3 1331 2 1229 2 948 2 1413 2 410 2 297 2 200 34 951 4 506 1 18 4 110 2 1416 2 607 3 300 1 868 16 615 12 414 4 120 1 415 3 1240 3 1057 2 786 2 620 2 1243 2 207 2 1245 2 702 2 1152 2 1343 1 519 2 212 1 1427 5 1428 2 1063 2 37 2 36 2 318 2 635 2 214 2 431 2 1261 2 434 4 433 1 1264 2 1435 32 1071 2 1267 3 43 3 325 32 805 2 540 2 220 2 222 2 327 2 329 12 644 2 437 2 143 2 1441 3 889 2 811 1 646 2 50 2 724 2 227 2 1447 2 727 2 1168 2 546 2 1449 6 549 4 998 32 1368 2 550 2 1371 2 1374 2 1091 4 1376 2 1185 2 452 3 1006 2 1099 1 1007 2 68 2 456 2 1102 1 1010 2 162 3 908 2 830 4 911 2 833 8 741 3 835 16 1191 2 747 2 169 2 1463 6 255 1 1014 2 261 1 571 2 1112 2 1194 2 918 2 1116 2 1018 2 1198 1 1200 2 1020 2 178 6 1021 2 760 2 1395 2 579 2 1205 2 478 2 87 2 1209 2 1403 24 1030 6 853 2 1210 2 1486 8 769 1 
333 2 200 2 
206 2 200 4 1425 2 
121 2 
1133 2 0 2 771 382 1134 14 1136 2 1139 4 773 10 394 70 11 18 399 2 14 10 776 8 402 10 16 4 405 2 17 58 407 2 1144 10 779 2 20 2 1147 286 785 12 1148 10 417 4 25 2 1153 2 1155 2 789 2 29 2 423 8 30 6 792 8 793 8 32 2 34 2 425 2 35 2 795 44 1159 104 1161 2 1162 8 428 2 429 2 430 10 40 104 799 146 800 2 41 12 1163 4 42 2 804 126 1164 12 807 90 436 2 438 104 808 2 440 10 441 10 442 10 810 4 444 2 1166 4 446 2 1171 2 53 26 55 2 1176 8 818 2 1180 2 451 10 57 18 1181 4 58 4 820 4 60 2 61 2 62 6 822 92 453 4 67 2 825 4 454 8 1186 46 457 2 69 10 828 2 1187 2 831 216 459 2 462 4 74 2 463 26 77 2 839 2 465 24 1193 2 81 2 82 4 467 2 840 24 1195 4 841 6 84 10 468 2 1196 22 1197 2 1199 18 471 2 843 2 472 2 846 24 848 28 475 2 849 10 480 8 86 160 481 2 1208 2 90 14 91 4 92 42 486 4 93 2 855 2 1213 2 98 540 1214 98 491 2 857 2 1217 14 1215 2 1218 2 860 2 1220 10 862 6 495 2 1221 10 494 2 101 4 863 10 864 198 1224 2 1225 226 501 2 503 44 866 2 107 10 1231 78 1232 396 867 2 507 18 111 2 113 10 509 180 119 10 123 10 125 8 126 104 511 4 873 4 127 4 514 364 1244 2 875 8 515 2 129 12 130 2 131 2 1247 4 1248 8 878 2 879 4 881 10 523 2 1251 10 882 4 1252 10 524 2 133 2 1256 2 527 44 1257 226 134 6 1258 24 1259 2 530 10 531 2 533 2 532 2 137 6 1263 2 536 8 1266 2 141 10 144 10 542 4 1272 104 543 4 1273 4 544 10 890 2 147 180 892 2 1279 4 150 2 149 66 894 180 895 2 551 2 897 8 152 24 1282 28 900 4 557 4 153 12 901 180 155 6 903 2 1285 4 158 10 157 2 559 2 160 2 560 2 159 2 906 2 561 2 562 2 910 226 565 364 163 2 164 10 566 2 1295 30 912 12 567 4 165 2 1296 2 167 2 913 8 168 10 568 2 1297 24 915 2 172 10 572 10 173 396 916 2 1303 2 175 10 574 2 174 4 575 26 920 2 1304 2 577 4 922 2 1305 2 1306 2 1307 2 925 6 1308 4 927 2 929 28 185 2 1311 2 583 2 584 8 186 28 190 2 1315 8 1318 2 1317 2 192 2 937 2 939 4 1325 2 596 8 195 2 196 4 943 58 600 10 1330 344 197 10 1332 2 604 2 602 10 947 36 1335 8 1336 2 200 10 202 70 953 2 608 4 955 2 956 2 610 2 609 24 612 2 957 114 960 2 613 2 616 8 1339 4 618 2 619 2 208 180 964 14 1341 4 210 8 1344 4 622 2 211 8 624 2 625 2 1348 2 628 2 965 12 630 14 967 6 631 126 632 2 970 20 1350 2 972 2 973 404 974 4 1353 2 218 8 980 2 638 2 1356 8 1357 10 639 180 640 52 1358 60 1359 4 643 2 987 2 986 4 989 2 1363 24 229 4 228 2 996 2 647 28 998 10 230 2 1367 4 1369 2 232 12 651 2 650 2 652 8 999 10 654 2 234 4 1379 4 656 2 657 20 1005 180 660 2 1381 4 241 4 243 26 245 62 246 236 1386 2 251 82 665 8 1388 66 254 2 1013 26 1389 28 666 10 260 4 1391 8 263 8 1015 4 1019 52 1394 2 270 2 271 2 272 2 1396 2 275 2 671 10 277 12 1026 2 279 2 1400 2 1404 2 1033 6 280 10 281 6 282 8 1406 28 1035 6 285 2 1037 10 677 6 292 2 682 42 1043 44 684 48 683 2 1045 4 296 2 687 2 1049 4 690 16 691 2 1053 2 693 4 302 20 694 2 695 2 303 2 1056 2 304 2 698 2 1419 22 1420 2 701 12 700 10 307 26 1421 2 1422 8 1423 6 309 2 1424 2 314 32 315 2 707 4 1062 102 708 4 317 2 709 18 1064 10 1065 2 1431 12 710 32 712 6 1068 8 322 6 713 2 1433 18 1436 10 714 18 1437 94 1076 28 716 4 1077 10 328 6 1439 10 718 2 1440 2 722 2 332 10 1444 14 1443 22 1445 18 335 4 1448 28 728 2 339 36 340 52 1450 10 341 2 1453 2 1454 4 731 2 344 6 732 10 1455 24 734 2 345 4 1096 2 1097 18 347 2 1098 6 349 180 735 72 351 2 1458 6 352 2 737 4 1459 28 739 2 738 4 356 2 742 2 743 2 1104 4 745 2 1105 2 1460 10 357 24 746 8 748 160 358 2 1468 2 359 2 1113 2 1114 6 1116 2 363 2 756 2 365 2 1475 2 1476 2 1120 2 1121 28 367 4 1477 2 368 216 369 8 761 2 1125 2 372 256 376 2 763 28 375 64 1483 2 377 16 1128 2 380 2 767 2 1130 2 1487 170 768 2 770 26 
170 1 982 2 117 2 189 2 
982 2 1407 2 
668 2 591 2 1410 2 982 2 306 2 24 2 1154 2 
982 2 1202 2 1154 2 
520 2 982 2 1154 2 
1173 2 1269 2 117 2 
982 2 1154 2 
248 2 1173 2 
982 2 1123 2 
1173 2 117 2 1329 2 
343 2 856 2 117 2 
117 2 1290 2 1316 2 
294 2 117 2 136 2 
1041 2 117 2 1298 2 
1173 2 424 2 
982 2 9 2 
856 2 1143 2 
199 2 1316 2 
136 2 516 2 
73 2 1041 2 
1233 2 1173 2 
1041 2 379 2 
176 2 136 2 
496 2 1316 2 
856 2 1029 2 
1173 2 117 2 884 2 1329 2 
1173 2 117 2 884 2 1329 2 672 2 
1173 2 117 2 1288 2 
1173 2 117 2 787 2 
166 2 1333 2 802 2 448 2 
1410 2 306 2 1250 2 182 2 
668 2 1410 2 1177 2 306 2 1250 2 182 2 
447 2 591 2 1410 2 982 2 306 2 1154 2 
458 2 183 2 
591 2 1410 2 1178 2 306 2 
426 2 136 2 
1278 2 1041 2 
856 2 1012 2 
204 2 1316 2 
1041 2 128 2 1316 2 
1041 2 1316 2 1011 2 
1041 2 1316 2 342 2 
1041 2 1316 2 19 2 
306 2 1461 2 1111 2 1410 2 1016 2 667 2 1201 6 85 6 
1173 2 7 2 
1092 2 541 4 744 2 461 2 823 6 1378 2 366 2 1190 2 1478 2 274 4 370 2 1072 2 398 2 1158 2 1289 2 1271 2 1226 2 225 2 
117 2 874 2 
318 2 
1131 2 96 2 1216 2 102 2 1327 2 1326 4 499 4 1229 2 410 2 297 2 200 26 18 4 201 4 110 2 868 6 115 2 615 8 784 2 414 2 786 2 620 2 1243 2 1428 2 1063 2 37 2 36 6 1261 2 434 2 216 2 1435 6 325 4 540 4 641 2 1078 2 327 2 1080 2 329 8 889 2 811 2 646 2 724 2 992 2 227 2 1447 2 546 2 1449 2 549 4 998 26 1368 2 1374 2 1091 4 1185 2 902 4 1004 2 1007 2 1101 2 1383 2 1010 2 830 2 1189 2 747 2 169 2 1463 4 1194 2 1112 2 1116 2 1018 2 842 2 178 2 1395 2 474 2 850 2 1030 6 853 2 1210 2 769 2 
1131 2 96 2 1216 2 102 2 1327 2 1326 2 499 4 1229 2 410 2 297 2 200 26 18 4 201 4 110 2 868 6 115 2 615 8 784 2 414 2 786 2 620 2 1243 2 1428 2 1063 2 37 2 36 6 214 2 1261 2 434 2 216 2 1435 6 140 2 325 4 805 2 540 4 641 2 327 2 329 8 889 2 811 2 646 2 49 2 724 2 992 2 227 2 1447 2 1277 2 546 2 1449 2 549 4 998 26 1368 2 1374 2 1091 4 1185 2 902 4 1007 2 1101 2 1383 2 1010 2 830 2 1189 2 747 2 169 2 1463 6 1194 2 1112 2 1116 2 1018 2 842 2 1200 2 178 2 1395 2 474 2 850 2 1030 6 853 2 1210 2 769 2 
387 2 
384 2 817 2 
1131 2 145 2 330 2 932 2 1 2 388 4 1167 4 391 2 891 2 288 2 816 2 549 2 998 6 13 2 1452 2 1370 2 1044 4 63 2 946 2 410 2 200 12 689 2 18 2 240 2 299 2 904 4 563 2 244 2 1237 2 1293 2 75 2 252 2 420 2 1060 2 876 2 78 2 750 2 705 6 1466 2 791 4 1390 10 1428 2 1116 2 37 2 844 4 180 8 1395 2 1261 2 762 2 138 4 278 2 1355 2 539 8 983 6 717 4 1402 6 1129 2 1030 4 766 2 142 2 
1131 2 145 2 330 2 932 2 1 2 388 4 1167 4 391 2 891 2 288 2 816 2 396 4 549 2 998 6 13 2 1452 2 1370 2 1044 4 63 2 946 2 410 2 200 12 689 2 18 2 240 2 299 2 411 2 904 4 114 2 563 2 244 2 1237 2 1293 2 247 2 75 2 252 2 420 2 1060 2 876 2 78 2 750 2 705 6 1466 2 791 4 1390 10 1428 2 1116 2 37 2 844 4 180 8 1395 2 1261 2 762 2 138 4 1355 2 539 8 983 8 717 4 1402 8 1129 2 1030 4 142 2 
145 2 330 2 1044 2 1 2 388 4 252 2 391 2 876 2 1060 2 138 4 705 2 299 2 904 2 816 2 717 2 1402 2 1129 2 1370 2 
1131 2 145 2 330 2 932 2 1 2 388 4 1167 4 391 2 891 2 816 2 549 2 998 6 13 2 1452 2 1370 2 1044 4 63 2 946 2 410 2 200 12 689 2 18 2 240 2 299 2 904 4 114 2 563 2 244 2 1237 2 1293 2 75 2 252 2 420 2 1060 2 876 2 78 2 750 2 705 4 1466 2 791 4 1390 6 1428 2 1116 2 37 2 844 4 180 4 1395 2 1261 2 762 2 138 4 278 2 1355 2 539 4 983 6 717 4 1402 6 1129 2 1030 4 766 2 142 2 
1131 2 145 2 330 2 932 2 1 2 388 4 1167 4 391 2 891 2 816 2 1175 2 549 2 998 6 13 2 1452 2 1370 2 1044 4 63 2 946 2 410 2 200 12 689 2 18 2 240 2 299 2 904 4 563 2 244 2 1237 2 1293 2 75 2 252 2 420 2 1060 2 876 2 78 2 750 2 705 6 1466 2 791 4 1390 6 1428 2 1116 2 37 2 844 4 180 4 1395 2 1261 2 762 2 138 4 278 2 1355 2 539 4 983 6 717 4 1402 4 1129 2 1030 4 766 2 142 2 
1131 2 145 2 330 2 932 2 1 2 388 4 1167 4 391 2 891 2 288 2 816 2 549 2 998 6 13 2 1452 2 1370 2 1044 4 63 2 946 2 410 2 200 12 689 2 18 2 240 2 299 2 904 4 563 2 244 2 1237 2 1293 2 75 2 252 2 420 2 1060 2 876 2 78 2 750 2 705 6 1466 2 791 4 1390 6 1428 2 1116 2 37 2 844 4 180 8 1395 2 1261 2 762 2 138 4 278 2 1355 2 539 4 983 6 717 4 1402 6 1129 2 1030 4 766 2 142 2 
1131 2 145 2 330 2 932 2 1 2 388 4 1167 4 391 2 891 2 288 2 816 2 1175 2 549 2 998 6 13 2 1452 2 1370 2 1044 4 63 2 946 2 410 2 200 12 689 2 18 2 240 2 299 2 904 4 563 2 244 2 1237 2 1293 2 75 2 252 2 420 2 1060 2 876 2 78 2 750 2 705 8 1466 2 791 4 1390 10 1428 2 1116 2 37 2 844 4 180 8 1395 2 1261 2 762 2 138 4 278 2 1355 2 539 8 983 8 717 4 1402 6 1129 2 1030 4 766 2 142 2 
1131 2 145 2 330 2 932 2 1 2 388 4 1167 4 391 2 891 2 288 2 816 2 549 2 998 6 13 2 1452 2 1370 2 1044 4 63 2 946 2 410 2 200 12 689 2 18 2 240 2 299 2 904 4 563 2 244 2 1237 2 1293 2 75 2 252 2 420 2 1060 2 876 2 78 2 750 2 705 6 1466 2 791 4 1390 10 1428 2 1116 2 37 2 844 4 180 8 1395 2 1261 2 762 2 138 4 278 2 1355 2 539 8 983 6 717 4 1402 6 1129 2 1030 4 766 2 142 2 
1131 2 385 6 932 2 1132 10 1 2 388 4 391 2 1319 2 1320 2 590 7 1324 4 13 2 940 2 601 6 946 4 410 2 200 46 18 4 201 4 412 2 615 4 414 2 786 2 420 2 621 6 791 4 629 6 966 4 37 2 36 6 968 2 1351 2 971 1 214 2 975 2 434 2 216 2 979 2 1165 2 1355 2 983 12 641 2 984 6 48 2 1362 1 1167 8 646 2 227 2 1365 1 816 2 1175 4 998 24 1370 2 1183 2 1374 2 1000 1 653 1 63 2 1001 2 824 2 1003 2 66 1 240 2 1007 12 455 2 1010 2 244 2 830 2 1384 2 664 2 75 2 252 2 78 4 1390 2 1194 2 842 4 1200 2 268 6 844 6 1395 2 484 2 1402 4 1030 6 853 2 1210 2 94 6 1216 2 287 2 1042 6 103 7 499 4 105 2 1044 4 689 2 299 2 868 6 115 2 1237 2 870 2 121 6 1060 2 876 2 310 2 705 8 1425 6 517 2 518 2 706 2 1428 2 1063 2 1255 1 1260 6 1261 2 138 4 1435 8 325 2 717 4 327 2 1079 6 142 2 887 2 329 4 330 2 145 2 1274 2 724 2 333 6 1084 2 1447 2 891 2 546 2 1449 2 548 2 338 6 549 4 1452 2 730 2 1091 4 1281 1 556 6 1284 6 904 4 563 2 1293 2 747 2 169 2 1463 6 1466 4 750 2 1467 2 1469 2 1112 2 1116 2 178 2 180 2 762 2 1482 8 764 1 1129 2 766 2 
1131 2 385 6 94 6 1132 10 932 2 1 2 388 4 1216 2 287 2 391 2 288 4 1319 2 1320 2 1042 6 1324 4 940 2 13 2 499 4 105 2 1044 4 601 6 946 4 410 2 200 48 689 2 201 4 18 4 299 2 868 6 412 2 115 2 870 2 615 8 1237 2 121 6 414 4 786 2 621 6 420 2 876 2 1060 2 310 2 1425 6 705 8 517 2 706 2 518 2 791 4 1428 2 629 6 1063 2 966 4 968 2 36 6 37 2 427 2 1351 2 214 2 1260 6 975 2 1261 2 216 2 434 4 1435 8 138 4 979 2 325 2 1165 2 540 2 1355 2 983 12 641 2 717 4 327 2 984 6 1079 6 887 2 142 2 48 2 329 8 145 2 330 2 646 2 1274 2 1167 8 724 2 333 6 1084 2 227 2 891 2 1447 2 546 2 816 2 648 2 548 2 1449 2 338 6 549 4 998 26 730 2 1452 2 1370 2 1183 2 1374 2 1091 4 63 2 1001 2 556 6 1284 6 824 2 1003 2 240 2 1007 12 904 4 455 2 1010 2 563 2 244 2 1384 2 830 4 1293 2 664 2 75 2 747 2 252 2 169 2 1463 6 78 4 750 2 1466 4 1467 2 1390 2 1469 2 1112 2 1194 2 1116 2 842 4 1200 2 268 6 844 6 178 2 180 6 1395 2 1482 8 762 2 484 2 1402 8 853 2 1129 2 1030 6 766 2 1210 2 
1131 2 385 6 94 6 1132 10 932 2 1 2 388 4 1216 2 287 2 391 2 288 4 1319 2 1320 2 1042 6 1324 4 940 2 13 2 499 4 105 2 1044 4 601 6 946 4 410 2 200 48 689 2 201 4 18 4 299 2 868 6 412 2 115 2 870 2 615 8 1237 2 121 6 414 4 786 2 621 6 420 2 876 2 1060 2 310 2 1425 6 705 8 517 2 706 2 518 2 791 4 1428 2 629 6 1063 2 966 4 968 2 36 6 37 2 427 2 1351 2 214 2 1260 6 975 2 1261 2 216 2 434 4 1435 8 138 4 979 2 325 2 1165 2 540 2 1355 2 539 4 983 12 641 2 717 4 327 2 984 6 1079 6 887 2 142 2 48 2 329 8 145 2 330 2 646 2 1274 2 1167 8 724 2 333 6 1084 2 227 2 891 2 1447 2 816 2 546 2 648 2 548 2 1449 2 338 6 549 4 998 26 730 2 1452 2 1370 2 1183 2 1374 2 1091 4 63 2 1001 2 556 6 1284 6 824 2 1003 2 240 2 1007 12 904 4 455 2 1010 2 563 2 244 2 1384 2 830 4 1293 2 664 2 75 2 747 2 252 2 169 2 1463 6 78 4 750 2 1466 4 1467 2 1390 6 1469 2 1112 2 1194 2 1116 2 842 4 1200 2 268 6 844 6 178 2 180 6 1395 2 1482 8 762 2 484 2 1402 8 853 2 1129 2 1030 6 766 2 1210 2 
1131 2 385 6 932 2 1132 8 1 2 388 4 391 2 1319 2 1320 2 588 6 1324 4 13 2 940 2 601 6 946 4 410 2 200 52 18 4 201 6 1145 2 412 2 615 10 414 4 786 2 420 2 621 6 791 4 213 2 629 6 966 4 37 2 36 8 1160 2 968 2 427 2 1351 2 214 2 798 6 975 2 434 4 216 2 979 2 1165 2 1355 2 983 16 641 2 984 6 1360 6 48 2 1167 8 646 2 227 2 816 2 648 2 1175 2 54 2 56 2 998 24 1370 2 1183 2 1374 2 63 2 1001 2 824 2 1003 2 240 2 1007 10 455 2 1010 2 829 6 244 2 830 4 1384 2 664 2 75 2 252 2 78 4 1390 6 1194 2 83 6 842 4 1200 2 268 6 844 6 669 2 1395 2 484 2 1402 10 1030 6 853 2 1210 2 94 12 1216 4 287 2 288 4 1222 6 1042 12 497 2 499 4 105 2 1044 4 689 2 299 2 868 8 114 2 115 4 1237 2 870 2 121 12 1238 6 1246 6 1060 2 876 2 310 2 705 10 1425 12 517 2 518 2 706 2 1428 2 1063 2 1260 12 1261 2 138 4 1435 12 325 4 540 2 539 4 717 4 327 2 1079 6 142 2 887 2 329 10 330 2 145 2 1274 2 724 2 333 12 1446 6 1084 2 1447 2 891 2 546 2 1449 4 548 2 338 6 549 4 1452 2 1091 4 556 6 1284 6 904 4 563 2 1293 2 747 2 169 2 1463 6 1466 4 750 2 1467 2 1469 2 1112 2 1116 2 1474 2 178 4 180 6 762 2 1482 8 1129 2 766 2 
330 2 932 2 75 2 1167 2 388 2 252 2 420 2 891 2 876 2 1060 2 288 2 1466 2 705 6 791 2 1390 4 816 2 1452 2 13 2 63 2 844 2 180 6 200 4 762 2 138 2 299 2 904 4 539 4 983 4 244 2 717 4 1402 6 1129 2 766 2 142 2 1293 2 
1131 2 1132 2 932 2 388 2 858 2 288 2 493 2 13 2 499 4 403 2 944 2 410 2 200 28 18 4 201 4 299 2 868 6 1237 2 1057 2 786 2 420 2 1060 2 876 2 705 6 791 2 1428 2 1063 2 318 2 37 2 36 6 214 2 1261 2 216 2 138 2 1435 8 325 3 983 4 717 4 641 2 327 2 142 2 330 2 1167 2 724 2 227 2 1447 2 891 2 546 2 816 2 1449 3 549 4 998 24 1088 2 1452 2 730 2 1374 2 1091 4 63 2 1007 4 904 4 1010 2 244 2 1293 2 75 2 747 2 252 2 169 2 1463 6 1466 2 1390 2 1194 2 1112 2 1116 2 361 2 842 2 1200 2 921 2 844 2 178 3 180 6 1395 2 762 2 1402 6 1030 6 853 2 1129 2 766 2 1210 2 581 3 
70 2 1452 2 142 2 
70 2 1452 2 142 2 
1131 2 1132 2 585 2 389 2 934 2 388 2 287 2 391 2 288 4 1319 2 589 2 1324 2 13 2 1326 2 499 4 1044 4 106 2 946 4 410 2 200 24 18 4 299 2 868 2 114 4 615 4 414 4 786 2 418 2 621 2 1060 2 28 4 705 12 791 2 1428 2 1063 2 966 2 37 2 36 2 214 2 1261 2 434 4 216 2 534 2 1435 2 138 2 1268 2 325 2 1355 2 539 4 983 16 641 2 717 4 327 2 142 4 329 4 145 2 1442 4 646 4 1167 4 724 2 227 2 1447 2 1170 2 546 2 997 2 816 4 1175 4 549 4 998 16 1452 6 1374 2 1091 4 240 2 1007 4 350 2 904 4 455 2 1383 4 1010 2 70 2 244 2 830 4 747 2 169 2 256 2 1463 6 78 2 750 2 1466 4 1390 6 1194 2 1116 2 754 2 842 6 1200 2 267 2 844 4 180 6 1395 2 371 2 1126 2 1402 12 1030 6 853 2 1210 2 1211 2 
384 2 1132 2 585 2 1412 2 621 2 1003 2 200 4 1007 2 589 2 1268 2 538 2 301 2 1428 2 1324 2 998 2 870 2 1370 2 
1131 2 585 2 389 2 934 2 388 2 1137 2 287 2 391 2 288 4 1319 2 589 2 13 2 499 4 404 2 1044 4 106 2 1046 2 946 4 410 2 200 24 689 2 18 4 299 2 868 2 114 4 615 4 414 4 786 2 621 2 1060 2 28 4 705 12 791 2 1428 2 1063 2 966 2 37 2 36 2 214 2 1261 2 434 4 216 2 1435 2 138 2 1268 2 325 4 1355 2 539 4 983 16 641 2 717 4 327 2 142 4 329 4 145 2 1442 4 646 4 1167 4 724 2 227 2 1447 2 148 2 1170 2 546 2 997 2 816 4 1175 4 549 4 998 16 1452 6 1374 2 1091 4 240 2 1007 2 904 4 455 2 1383 4 1010 2 70 2 244 2 830 4 747 2 169 2 256 2 1463 6 750 2 78 4 1466 4 1390 6 1194 2 1302 2 1116 2 754 2 842 6 1200 2 267 2 844 4 180 6 1395 2 371 4 1402 12 1030 6 853 2 1210 2 1211 2 
1131 2 1132 2 585 2 389 2 934 2 388 2 287 2 391 2 288 4 1319 2 589 2 1324 2 13 2 1326 1 499 4 1044 4 106 2 946 4 410 2 200 24 689 2 18 4 299 2 868 2 114 4 615 4 414 4 786 2 621 2 1060 2 28 4 705 12 791 2 1347 2 1428 2 1063 2 966 2 37 2 36 2 214 2 1261 2 434 4 216 2 1435 2 138 2 1268 2 325 2 1355 2 539 4 983 16 641 2 717 4 642 2 327 2 142 4 329 4 145 2 1442 4 646 4 1167 4 724 2 227 2 1447 2 1170 2 546 2 997 2 816 4 1175 4 549 4 998 16 1452 6 1374 2 1091 4 240 2 1007 4 661 2 904 4 455 2 1383 4 1010 2 70 2 244 2 830 4 747 2 169 2 256 2 1463 6 750 2 78 4 1466 4 1390 6 1194 2 1116 2 754 2 842 6 1200 2 267 2 844 4 180 6 1395 2 371 2 1127 2 381 2 1402 12 1030 6 853 2 1210 2 1211 2 
1131 2 188 2 1313 4 586 2 936 2 1138 4 4 2 1320 2 1140 2 1322 4 938 2 395 2 8 4 592 2 12 2 1141 2 597 2 1327 2 193 3 194 4 944 2 403 2 603 2 777 2 406 14 605 2 949 2 409 2 410 2 778 1 200 64 780 2 201 12 18 4 781 2 21 4 959 6 784 2 413 2 23 6 615 25 962 2 786 4 1149 4 419 4 26 2 27 2 790 2 1157 2 422 2 1345 2 213 2 794 2 36 14 37 2 1160 2 969 2 634 2 214 9 1352 2 216 2 637 1 801 4 977 2 978 2 1354 8 435 2 981 2 45 2 1165 2 46 6 221 2 47 2 809 12 988 2 439 2 811 2 1364 6 226 2 646 4 51 10 992 2 227 2 993 14 995 2 1169 2 52 2 54 2 56 2 819 2 450 10 1366 16 649 2 998 52 1373 4 1374 4 655 2 65 2 1002 2 824 2 239 2 658 2 659 2 1007 2 1380 2 1008 2 827 2 1010 2 664 2 1189 2 835 4 836 6 250 16 249 2 837 1 253 4 79 1 259 3 1194 2 266 4 470 1 842 2 1200 9 1022 2 669 2 1395 2 474 2 670 2 850 2 851 2 479 2 852 4 1398 2 1206 2 1207 2 673 2 1401 2 485 2 1031 4 853 2 1030 6 487 4 1032 12 1210 6 854 24 674 2 488 2 284 2 490 4 1034 2 97 2 96 2 1216 20 859 2 1219 1 861 4 289 2 1223 8 679 2 498 2 497 2 1411 2 499 16 680 2 1227 2 295 2 1047 2 1048 2 1050 2 109 4 868 14 1417 2 510 2 1052 2 692 2 115 46 869 16 696 2 1236 2 1055 4 1241 2 1058 2 697 3 1242 2 513 4 699 2 1059 2 703 2 877 2 311 10 704 12 517 2 518 4 521 2 1428 2 1429 10 1063 2 525 2 1254 2 135 16 1067 6 883 2 529 2 1261 2 1434 6 1262 4 1435 28 1073 2 325 19 1075 14 715 2 327 2 329 24 1081 2 720 2 1274 2 724 2 1083 2 1085 2 1447 6 336 2 546 2 1449 19 547 2 893 4 151 2 549 4 1088 2 1090 2 1280 2 1091 18 554 4 1093 1 555 2 899 2 1283 2 1095 3 346 4 348 12 1457 2 156 4 1100 2 1101 14 1287 2 907 2 564 4 1294 2 747 2 169 4 1463 37 570 2 1300 2 1471 12 1112 2 1115 2 1472 2 1116 2 361 2 755 16 1473 2 1117 2 1474 2 758 12 759 4 1119 2 576 12 178 16 1122 2 181 2 179 4 1481 16 1124 12 1484 4 1309 10 1310 8 765 2 580 2 581 2 1485 3 769 2 
1242 2 226 2 51 4 26 2 311 2 259 2 1449 2 1112 2 649 2 1429 2 498 2 998 2 12 2 36 2 178 2 200 2 201 2 1435 2 1008 2 868 2 325 2 482 2 115 6 1287 2 
1242 2 226 2 51 4 26 2 311 2 259 2 1449 2 1112 2 649 2 1429 2 498 2 998 2 12 2 36 2 178 2 200 2 201 2 1435 2 1008 2 868 2 325 2 482 2 115 6 1287 2 
1242 2 226 2 51 4 26 2 311 2 259 2 1449 2 1112 2 649 2 1429 2 498 2 998 2 12 2 36 2 178 2 200 2 201 2 1435 2 1008 2 868 2 325 2 482 2 115 6 1287 2 
512 4 835 2 697 3 991 3 1313 2 1275 4 1138 2 545 2 31 2 1449 3 893 2 1112 2 1223 2 998 4 500 2 759 2 1094 2 1067 4 1095 3 636 2 578 2 200 10 217 2 1434 6 1354 2 954 2 1435 2 1008 2 353 4 325 3 1484 2 1310 2 869 5 617 2 1032 4 1338 4 1055 2 872 4 355 2 564 2 
991 2 1313 2 1364 2 1275 4 1138 2 545 2 1449 2 1223 2 893 2 998 4 500 2 1094 2 1095 2 346 2 200 10 954 2 1008 2 353 4 869 4 617 2 1338 4 1055 2 564 2 355 2 872 4 835 2 512 4 697 2 31 2 1112 2 759 2 1067 4 636 2 578 2 432 2 1354 2 1434 6 217 2 1435 2 325 2 1484 2 1310 2 1032 4 
991 2 1313 2 1364 2 1275 4 1138 2 545 2 1449 2 1223 2 893 2 998 4 500 2 1094 2 1095 2 346 2 200 10 954 2 1008 2 353 4 869 4 617 2 1338 4 1055 2 564 2 355 2 872 4 835 2 512 4 697 2 31 2 1112 2 759 2 1067 4 636 2 578 2 432 2 1354 2 1434 6 217 2 1435 2 325 2 1484 2 1310 2 1032 4 
991 2 1313 2 1364 2 1275 4 1138 2 545 2 1449 2 1223 2 893 2 998 4 500 2 1094 2 1095 2 346 2 200 10 954 2 1008 2 353 4 869 4 617 2 1338 4 1055 2 564 2 355 2 872 4 835 2 512 4 697 2 31 2 1112 2 759 2 1067 4 636 2 578 2 432 2 1354 2 1434 6 217 2 1435 2 325 2 1484 2 1310 2 1032 4 
991 2 1313 2 1364 4 1275 4 1138 2 545 2 1449 2 1223 2 893 2 998 4 500 2 1094 2 1095 2 346 4 200 10 954 2 1008 2 353 4 869 4 617 2 1338 4 1055 2 564 2 355 2 872 4 835 2 512 4 697 2 31 2 1112 2 759 2 1067 4 636 2 578 2 432 4 1354 2 1434 6 217 2 1435 2 325 2 1484 2 1310 2 1032 4 
313 2 1052 2 1334 2 378 2 935 2 950 2 
1118 2 1101 2 378 2 400 2 814 2 118 2 725 2 
834 2 1131 2 721 2 963 2 94 2 723 2 1387 2 146 2 1036 2 191 2 994 2 1465 2 998 8 231 2 941 1 1372 1 686 2 298 2 200 10 276 1 1265 1 1286 2 242 2 22 1 223 2 354 2 
1405 4 490 2 1364 5 587 2 308 2 395 2 1223 6 893 6 998 6 759 6 1352 2 408 2 1067 4 1023 2 346 2 688 2 200 6 432 2 1354 6 535 2 139 2 1484 2 1310 6 21 2 869 16 46 4 1032 12 1055 6 888 2 564 6 
512 2 711 2 1275 2 200 1 209 2 393 2 1397 6 782 2 353 2 1299 2 116 2 662 2 998 1 740 2 71 1 264 2 917 2 104 4 
512 2 711 2 1275 2 209 2 393 2 1397 6 782 2 353 2 1299 2 116 4 662 4 740 2 917 2 264 4 104 4 
512 2 711 2 1275 2 200 1 209 6 393 2 1397 10 782 2 353 2 1299 2 116 8 662 8 998 1 740 2 71 1 917 8 264 8 104 4 
512 2 711 2 1275 2 393 2 1397 2 782 2 353 2 1299 2 116 2 662 2 740 2 264 2 104 2 
586 2 1038 1 936 2 4 2 1219 1 1140 2 1141 2 597 2 1411 2 499 14 777 2 603 2 778 2 200 38 1417 2 510 2 614 2 615 4 696 2 1149 4 699 2 27 2 1157 2 526 2 969 3 214 4 634 2 529 2 637 1 801 4 977 2 435 2 537 2 981 2 885 2 886 2 47 2 645 2 1081 2 1085 2 1447 6 1169 2 998 34 1451 2 1374 4 1091 16 554 4 1093 2 555 2 65 2 348 2 658 2 659 2 1380 2 1100 2 827 2 250 2 837 1 1294 2 1463 30 79 1 265 2 266 4 1473 2 758 12 1200 4 1119 2 1122 2 181 2 1022 2 1481 2 852 4 580 2 765 2 1031 4 1210 6 
1081 2 931 2 1312 2 719 2 990 2 936 2 390 2 1447 2 1169 2 815 2 775 2 1323 2 998 44 1411 2 1326 2 499 20 293 2 896 2 942 2 1374 2 1091 20 554 4 64 2 1093 4 733 2 235 2 606 2 778 2 200 46 826 2 658 2 1051 2 659 6 1380 2 112 2 1417 2 510 2 827 2 1146 4 1054 2 958 2 614 2 696 2 615 38 961 2 1103 2 1292 2 124 2 72 2 1150 2 1149 4 699 2 838 2 1109 2 1463 42 1464 2 257 2 1110 4 1192 2 27 2 880 2 360 2 33 2 1017 2 1253 2 758 6 969 2 1119 2 576 6 528 2 976 2 1204 2 1024 2 323 2 476 2 852 4 1206 4 537 2 1399 4 1270 2 885 2 89 2 1027 2 765 2 580 2 886 2 1210 2 47 2 985 2 383 2 
586 4 286 4 99 8 936 2 4 8 1219 5 290 4 1140 4 1323 10 597 4 1411 2 1141 4 499 36 598 2 502 4 603 4 504 4 200 78 508 2 203 2 1417 4 510 4 1337 2 614 2 615 14 696 4 1239 4 1149 10 699 6 1061 2 27 4 1157 4 1430 4 796 4 969 10 797 2 214 28 320 8 528 2 529 4 977 4 801 24 324 16 803 4 537 2 981 4 885 2 886 2 47 4 1081 6 331 4 443 32 1085 4 1447 6 1169 4 449 4 998 70 1451 2 896 10 1374 2 552 4 1091 44 554 10 1184 8 553 4 1093 2 555 16 65 4 154 4 348 30 826 10 658 4 659 6 1380 4 1100 4 905 16 827 4 1385 14 72 2 1294 4 1463 104 258 4 79 8 80 4 265 2 266 24 362 4 1017 2 364 8 1473 8 758 24 1200 30 1393 4 1119 4 847 4 181 4 1022 4 477 2 852 10 483 4 88 2 1027 2 765 10 580 2 1031 8 1210 6 582 2 
1081 2 645 2 936 2 1447 2 1169 2 998 26 1411 2 1326 2 499 14 1374 2 1091 14 554 6 1093 2 200 28 348 6 658 4 659 4 1051 2 1380 4 1417 4 827 4 510 2 614 2 615 14 696 4 72 2 250 2 837 2 1149 6 699 2 838 2 464 2 1463 40 1061 2 27 4 79 6 1017 2 362 4 919 2 526 2 1200 12 758 8 969 2 1393 2 1119 2 214 12 637 2 1481 10 852 6 374 2 803 2 537 2 806 2 885 2 580 2 765 2 886 2 1210 2 47 2 
273 2 
1108 1 522 1 1291 1 1135 1 1462 1 59 1 
1108 1 522 1 1291 1 1135 1 1462 1 59 1 
1108 1 522 1 1291 1 1135 1 1462 1 59 1 
1108 1 522 1 1291 1 1135 1 1462 1 59 1 
1108 1 522 1 1291 1 1135 1 1462 1 59 1 
1108 1 522 1 1291 1 1135 1 1462 1 59 1 
1108 1 522 1 1291 1 1135 1 1462 1 59 1 
1108 1 522 1 1291 1 1135 1 1462 1 59 1 
1108 1 522 1 1291 1 1135 1 1462 1 59 1 
1108 1 522 1 1291 1 1135 1 1462 1 59 1 
1108 1 522 1 1291 1 1135 1 1462 1 59 1 
1108 1 522 1 1291 1 1135 1 1462 1 59 1 
1108 1 522 1 1291 1 1135 1 1462 1 59 1 
1108 1 522 1 1291 1 1135 1 1462 1 59 1 
1108 1 522 1 1291 1 1135 1 1462 1 59 1 
1108 1 522 1 1291 1 1135 1 1462 1 59 1 
1108 1 522 1 1291 1 1135 1 1462 1 59 1 
1108 1 522 1 1291 1 1135 1 1462 1 59 1 
1108 1 522 1 1291 1 1135 1 1462 1 59 1 
1108 1 522 1 1291 1 1135 1 1462 1 59 1 
1108 1 522 1 1291 1 1135 1 1462 1 59 1 
1108 1 522 1 1291 1 1135 1 1462 1 59 1 
1108 1 522 1 1291 1 1135 1 1462 1 59 1 
1108 1 522 1 1291 1 1135 1 1462 1 59 1 
1108 1 522 1 1291 1 1135 1 1462 1 59 1 
1108 1 522 1 1291 1 1135 1 1462 1 59 1 
1108 1 522 1 1291 1 1135 1 1462 1 59 1 
1108 1 522 1 1291 1 1135 1 1462 1 59 1 
1108 1 522 1 1291 1 1135 1 1462 1 59 1 
1108 1 522 1 1291 1 1135 1 1462 1 59 1 
1108 1 522 1 1291 1 1135 1 1462 1 59 1 
1108 1 522 1 1291 1 1135 1 1462 1 59 1 
1108 1 522 1 1291 1 1135 1 1462 1 59 1 
1108 1 522 1 1291 1 1135 1 1462 1 59 1 
1108 1 522 1 1291 1 1135 1 1462 1 59 1 
1108 1 522 1 1291 1 1135 1 1462 1 59 1 
1108 1 522 1 1291 1 1135 1 1462 1 59 1 
1108 1 522 1 1291 1 1135 1 1462 1 59 1 
1108 1 522 1 1291 1 1135 1 1462 1 59 1 
1108 1 522 1 1291 1 1135 1 1462 1 59 1 
1108 1 522 1 1291 1 1135 1 1462 1 59 1 
1108 1 522 1 1291 1 1135 1 1462 1 59 1 
1108 1 522 1 1291 1 1135 1 1462 1 59 1 
1108 1 522 1 1291 1 1135 1 1462 1 59 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 378 297 729 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 1039 1227 948 
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_0()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_1()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_2()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_3()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_4()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_5()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_6()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_7()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_8()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_9()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_10()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_11()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_12()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_13()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_14()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_15()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_16()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_17()V PASSED
daikon.test.split.SplitterFactoryTest:testmisc_Fib_main_18()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_19()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_20()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_21()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_22()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_23()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_24()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_25()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_26()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_27()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_28()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_29()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_30()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_31()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_32()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__33()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__34()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__35()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__36()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__37()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__38()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__39()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__40()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__41()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__42()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__43()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:pow_fast(II)I
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE:lineNumberFileReader(Ljava.io.File;)Ljava.io.LineNumberReader;
utilMDE.Intern:intern([D)[D
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.ParseException:getMessage()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_esc()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.inv.unary.stringsequence.EltOneOfString:enabled()Z
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.FuzzyFloat:gte(DD)Z
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.inv.unary.sequence.NoDuplicates:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParserTokenManager:MoreLexicalActions()V
utilMDE.UtilMDE.NullableStringComparator:compare(Ljava.lang.String;Ljava.lang.String;)I
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.stringsequence.EltOneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.Quant:lte(II)Z
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:pairwiseLT([I[I)Z
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
utilMDE.UtilMDE:escapeNonASCII(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.FuzzyFloat:set_rel_diff(D)V
utilMDE.ArraysMDE:indexOf([ZZ)I
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.EltNonZero:format_ioa()Ljava.lang.String;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.Quant:eltsGtIndex([I)Z
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3_14()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
jtb.JavaParser:jj_3_12()Z
daikon.Quant:subsetOf([J[J)Z
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.stringsequence.SingleStringSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.FuzzyFloat:eq(DD)Z
daikon.Quant:lexGTE([I[I)Z
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
jtb.JavaCharStream:readChar()C
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.unary.sequence.EltUpperBound:format_simplify()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.stringsequence.EltOneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.ProglangType:baseIsScalar()Z
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarComparabilityNone:indexType(I)Ldaikon.VarComparability;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
jtb.JavaParser:jj_3R_62()Z
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntComparison:EltwiseIntComparison(Ldaikon.PptSlice;)V
daikon.inv.unary.string.OneOfString:format_daikon()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.inv.unary.sequence.EltUpperBound:format_ioa()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.inv.unary.sequence.NoDuplicates:check_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.ProglangType:isFloat()Z
daikon.VarInfo:apply_subscript(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Quant:memberOf(F[F)Z
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext1()V
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptSlice1:arity()I
daikon.inv.unary.sequence.EltOneOf:format_esc()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.EltOneOf:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.inv.unary.sequence.EltNonZero:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarComparabilityImplicit:alwaysComparable()Z
jtb.JavaParser:jj_3R_123()Z
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_16()Z
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_2_12(I)Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.diff.InvMap:InvMap()V
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
jtb.JavaParser:jj_3R_55()Z
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.Quantify.QuantFlags:distinct()Ljava.util.EnumSet;
daikon.inv.unary.stringsequence.EltOneOfString:subarray_rep()Ljava.lang.String;
jtb.JavaParser:jj_3R_119()Z
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eltsLteIndex([I)Z
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:gte(II)Z
daikon.Quant:subsetOf([F[F)Z
daikon.inv.unary.sequence.EltOneOf:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
daikon.ModBitTracker:num_vars()I
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:subsetOf([I[I)Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.ProglangType:isPseudoArray()Z
daikon.ModBitTracker:num_samples()I
daikon.Quantify.IOAQuantification:getClosingExp()Ljava.lang.String;
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 6369 | = null
daikon.Quantify.QuantifyReturn:QuantifyReturn(Ldaikon.VarInfo;)V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.inv.unary.sequence.EltOneOf:enabled()Z
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Quant:sameLength([I[I)Z
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.NoDuplicates:enabled()Z
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ValueTuple:size()I
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.inv.unary.sequence.EltwiseIntLessThan:EltwiseIntLessThan(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.ProglangType:isIntegral()Z
daikon.PptSlice0:arity()I
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.NoDuplicates:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.OrderedPairIterator:setnext2()V
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:enabled()Z
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_60()Z
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ModBitTracker:num_sets()I
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
jtb.JavaParser:jj_3R_49()Z
jtb.JavaParser:jj_2_14(I)Z
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
utilMDE.MathMDE:gcd(JJ)J
daikon.VarInfoName.Elements:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant:prob_and(DDD)D
utilMDE.Intern:internSubsequence([JII)[J
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.ValueSet:ValueSet(I)V
daikon.VarInfoName:hasTypeOf()Z
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:isIOAArray()Z
daikon.Quant:eltwiseLTE([I)Z
daikon.inv.unary.stringsequence.SingleStringSequence:SingleStringSequence(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:pairwiseSquare([I[I)Z
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.FuzzyFloat:ne(DD)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.Quant:eltsNotEqual([II)Z
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptName:isEnterPoint()Z
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.ProglangType:isArray()Z
daikon.Quant:eltsGT([II)Z
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_135()Z
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.inv.binary.twoScalar.LinearBinaryCore:add_modified(JJI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.Quantify.IOAQuantification:getQuantifierExp()Ljava.lang.String;
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.inv.Invariant:getConfidence()D
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
utilMDE.ArraysMDE:concat([I[I)[I
daikon.Quantify.Term:ioa_name()Ljava.lang.String;
daikon.VarInfoName.InorderFlattener:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
utilMDE.MathMDE:sign(I)I
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.Ppt:find_var_by_name(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.Quantify.IOAQuantification:getFreeVar(I)Ldaikon.Quantify.Term;
daikon.inv.unary.sequence.EltNonZero:format_daikon()Ljava.lang.String;
daikon.VarInfo:isIOASet()Z
daikon.Quant:lexEqual([I[I)Z
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.Quant:pairwiseGTE([I[I)Z
daikon.Quant:eltsGTE([II)Z
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
jtb.JavaParser:jj_3_1()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
jtb.JavaParser:jj_3R_85()Z
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.string.OneOfString:enabled()Z
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Options.OptionInfo:argument_required()Z
daikon.ProglangType:baseIsFloat()Z
utilMDE.UtilMDE:lineNumberFileReader(Ljava.lang.String;)Ljava.io.LineNumberReader;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:is_hashcode()Z
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Elements:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:fn_is_total([I)Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
jtb.JavaParser:jj_scan_token(I)Z
jtb.JavaParser:jj_3R_96()Z
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.EltNonZero:EltNonZero(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.ValueTuple:isMissingNonsensical(I)Z
utilMDE.ArraysMDE:sum([D)D
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:pairwiseLTE([I[I)Z
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:jj_3R_133()Z
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltsEqual([II)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:processQueue()V
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfo:dbc_name()Ljava.lang.String;
jtb.JavaParser:jj_3R_161()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:set_bi_linear(JJJJ)Ldaikon.inv.InvariantStatus; | CONSTANT | 13531 | 3 -> -1
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:jj_3R_120()Z
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.ParseException:ParseException(Ljava.lang.String;)V
utilMDE.ArraysMDE:fn_is_permutation([I)Z
jtb.JavaParser:jj_3_5()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.VarInfo:isDerived()Z
daikon.Quant:pairwiseEqual([I[I)Z
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:calc_range()J
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.ProglangType:dimensions()I
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;Z)Z
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
jtb.JavaParser:jj_3R_162()Z
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.inv.unary.sequence.EltNonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_ioa()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.MathMDE:modulus([I)[I
daikon.Quant:subsetOf([S[S)Z
utilMDE.ArraysMDE:sum([I)I
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.Quant:isReverse([I[I)Z
daikon.Quant:eq(FF)Z
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.inv.filter.ParentFilter:ParentFilter()V
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfo:domainTypeIOA()Ljava.lang.String;
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
utilMDE.MathMDE:missing_numbers([I)[I
daikon.inv.unary.scalar.NonZero:is_pointer()Z
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.inv.unary.stringsequence.SingleStringSequence:var()Ldaikon.VarInfo;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
jtb.syntaxtree.NodeToken:trimSpecials()V
jtb.JavaParser:jj_3R_50()Z
daikon.test.FormatTestCase:passes()Z
daikon.ModBitTracker:ModBitTracker(I)V
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.inv.Invariant:logOn()Z
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.FuzzyFloat:lt(DD)Z
utilMDE.Intern:internSubsequence([III)[I
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.VarInfoName.Simple:isLiteralConstant()Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.Quant:eq(II)Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_esc()Ljava.lang.String;
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
daikon.inv.unary.stringsequence.EltOneOfString:format_simplify()Ljava.lang.String;
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;Ljava.lang.String;)V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.ValueSet.ValueSetString:ValueSetString(I)V
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.Quant:eltwiseNotEqual([I)Z
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.ArraysMDE:isSubarray([I[II)Z
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:EltUpperBound(Ldaikon.PptSlice;)V
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.inv.Invariant:simplify_format_string(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_148()Z
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;Ldaikon.VarInfo;)V
daikon.inv.unary.string.OneOfString:format_esc()Ljava.lang.String;
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:subsetOf([B[I)Z
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.Quantify.IOAQuantification:getVarIndexedString(I)Ljava.lang.String;
daikon.VarInfo:is_direct_non_slice_array()Z
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.inv.unary.sequence.EltUpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.Node:Node()V
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_ioa()Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.inv.unary.sequence.EltOneOf:is_boolean()Z
daikon.inv.unary.string.SingleString:var()Ldaikon.VarInfo;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual()V
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
jtb.JavaParser:jj_3R_61()Z
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.Quant:eltsLT([II)Z
daikon.inv.unary.sequence.EltwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:format_ioa()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.inv.Invariant:justified()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:maxsep_indices()[I
daikon.ProglangType:base()Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:NoDuplicates(Ldaikon.PptSlice;)V
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.Quant:slice([III)[I
daikon.inv.unary.sequence.EltOneOf:format_simplify()Ljava.lang.String;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.Quantify.FreeVar:name()Ljava.lang.String;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.inv.unary.sequence.EltwiseIntLessThan:format_daikon()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
jtb.JavaParser:jj_3R_134()Z
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
utilMDE.LimitedSizeIntSet:size()I
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.inv.unary.stringsequence.EltOneOfString:EltOneOfString(Ldaikon.PptSlice;)V
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.inv.unary.stringsequence.EltOneOfString:get_proto()Ldaikon.inv.Invariant;
jtb.JavaCharStream:getEndLine()I
jtb.JavaParser:jj_3R_69()Z
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.inv.unary.string.OneOfString:sort_rep()V
jtb.JavaParser:jj_3_15()Z
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.EltNonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.inv.unary.sequence.EltOneOf:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_daikon()Ljava.lang.String;
daikon.VarInfoName.Elements:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quantify.QuantFlags:adjacent()Ljava.util.EnumSet;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
utilMDE.MathMDE:pow(II)I
utilMDE.Intern:intern([J)[J
daikon.inv.unary.sequence.EltOneOf:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
jtb.JavaCharStream:backup(I)V
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.Quant:gt(II)Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan()V
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.inv.unary.stringsequence.EltOneOfString:is_type()Z
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:subsetOf([F[D)Z
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:wouldChange(J)Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_simplify()Ljava.lang.String;
jtb.JavaParser:generateParseException()Ljtb.ParseException;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.inv.unary.sequence.NoDuplicates:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:intern([I)[I
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltUpperBound:enabled()Z
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltwiseLT([I)Z
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
jtb.JavaParser:jj_3R_89()Z
daikon.Quant:subsetOf([D[F)Z
utilMDE.LimitedSizeIntSet:add(I)V
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.string.OneOfString:OneOfString(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
jtb.JavaParser:jj_3R_53()Z
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.inv.unary.scalar.Positive:enabled()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_ioa()Ljava.lang.String;
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.inv.unary.sequence.EltNonZero:format_esc()Ljava.lang.String;
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:Block()Ljtb.syntaxtree.Block; | STATEMENT | 103715 | stmt -> ;
daikon.inv.unary.stringsequence.EltOneOfString:format_daikon()Ljava.lang.String;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.EltUpperBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:min_max([I)[I
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.inv.unary.sequence.EltOneOf:subarray_rep()Ljava.lang.String;
daikon.inv.Invariant:prob_or(DD)D
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:get_enclosing_var()Ldaikon.VarInfo;
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.VarInfoName:hashCode()I
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.Invariants:Invariants()V
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.Quantify.IOAQuantification:IOAQuantification([Ldaikon.VarInfo;)V
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.Quant:concat([I[I)[I
jtb.JavaParser:jj_3R_47()Z
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_88()Z
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.VarInfo:simplify_quantify(Ljava.util.EnumSet;[Ldaikon.VarInfo;)[Ljava.lang.String;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.inv.unary.string.OneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_54()Z
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.Quant:lexLT([I[I)Z
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
utilMDE.ArraysMDE:min([I)I
daikon.Quant:pairwiseDivides([I[I)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.inv.unary.stringsequence.EltOneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptName:isCombinedExitPoint()Z
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.Token:newToken(I)Ljtb.Token;
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:inOrderTraversal()Ljava.util.Collection;
daikon.ProglangType:baseIsIntegral()Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.VarInfoName.InorderFlattener:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.stringsequence.EltOneOfString:add_modified([Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_2_3(I)Z
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:indexFor(II)I
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
utilMDE.MathMDE:gcd_differences([I)I
daikon.inv.binary.twoScalar.LinearBinary:add_modified(JJI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.inv.unary.string.OneOfString:add_modified(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.inv.unary.stringsequence.EltOneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;)V
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.inv.unary.sequence.EltOneOf:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:isPointerFileRep()Z
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eltwiseEqual([I)Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.Quant:eltwiseGTE([I)Z
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
jtb.JavaParser:jj_3R_76()Z
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.VarInfo:apply_subscript(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.string.OneOfString:is_type()Z
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.inv.unary.string.OneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltUpperBound:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_117()Z
daikon.Ppt:Ppt()V
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.Quant:ne(II)Z
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.LowerBound:enabled()Z
utilMDE.FuzzyFloat:indexOf([D[D)I
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
jtb.JavaParser:jj_3R_122()Z
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
utilMDE.Assert:assertTrue(Z)V
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.diff.PrintAllVisitor:bufPrintln()V
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Quant:lexLTE([I[I)Z
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:eltsLTE([II)Z
daikon.Quant:memberOf(F[D)Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.string.OneOfString:format_simplify()Ljava.lang.String;
daikon.VarComparabilityNone:elementType()Ldaikon.VarComparability;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltsEqualIndex([I)Z
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.Quantify.IOAQuantification:getMembershipRestriction(I)Ljava.lang.String;
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.LinearBinaryCore:maxsep_point([J[J)[I
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_163()Z
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.PptSlice1:num_samples()I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
utilMDE.FuzzyFloat:gt(DD)Z
daikon.VarInfo:simplify_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:format_simplify()Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.Quant:eltsGteIndex([I)Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:lt(II)Z
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
jtb.JavaParser:jj_3R_51()Z
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.Quantify.QuantFlags:include_index()Ljava.util.EnumSet;
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.inv.unary.sequence.EltNonZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltUpperBound:format_esc()Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat()V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.VarInfoName.Elements:ioa_name_impl()Ljava.lang.String;
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.VarInfo:isDerivedSubSequenceOf()Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.string.OneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.string.OneOfString:runValue(Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
jtb.JavaParser:jj_3R_56()Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaCharStream:ReadByte()C
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:memberOf(I[I)Z
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
jtb.JavaCharStream:BeginToken()C
daikon.Quant:memberOf(D[F)Z
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.diff.Node:Node(LutilMDE.Pair;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
utilMDE.MathMDE:gcd([I)I
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.string.OneOfString:format_ioa()Ljava.lang.String;
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
jtb.JavaCharStream:getEndColumn()I
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_48()Z
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.inv.unary.sequence.EltOneOf:EltOneOf(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:isSubset([D[D)Z
utilMDE.WeakHasherMap:size()I
daikon.ProglangType:isScalar()Z
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.Quant:union([I[I)[I
daikon.inv.unary.string.OneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.string.SingleString:SingleString(Ldaikon.PptSlice;)V
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_118()Z
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
jtb.JavaParser:jj_2_10(I)Z
utilMDE.MathMDE:gcd(II)I
utilMDE.ArraysMDE:element_range([I)I
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.ValueTuple:isMissing(I)Z
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.inv.unary.sequence.SeqIndexIntNonEqual:enabled()Z
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:subarray([III)[I
daikon.inv.unary.sequence.NoDuplicates:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:intersection([I[I)[I
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3_10()Z
jtb.JavaParser:jj_3R_57()Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
daikon.diff.RootNode:RootNode()V
daikon.PptSlice0:initInvariantsSeen()V
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.inv.unary.stringsequence.EltOneOfString:sort_rep()V
jtb.JavaParser:jj_3_4()Z
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_daikon()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_simplify()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.OrderedPairIterator:hasNext()Z
daikon.VarInfo:name()Ljava.lang.String;
daikon.inv.unary.string.OneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:negate(I)I
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
jtb.JavaParser:jj_3_13()Z
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.inv.unary.sequence.EltwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.VarInfoName:hasNodeOfType(Ljava.lang.Class;)Z
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.Quant:lexNotEqual([I[I)Z
utilMDE.ArraysMDE:subarray([JII)[J
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:format_esc()Ljava.lang.String;
daikon.VarInfo:has_typeof()Z
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.unary.scalar.NonModulus:enabled()Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.VarInfoName:name()Ljava.lang.String;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.Debug:logOn()Z
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;)Z
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltsLtIndex([I)Z
daikon.inv.unary.sequence.EltOneOf:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:isString()Z
daikon.inv.Invariant:prob_is_ge(DD)D
jtb.JavaParser:jj_3R_97()Z
daikon.ProglangType:baseIsString()Z
daikon.inv.unary.sequence.EltwiseIntLessThan:format_simplify()Ljava.lang.String;
daikon.VarInfo:new_ppt()V
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltNonZero:is_pointer()Z
daikon.Quantify:quantify([Ldaikon.VarInfo;)[Ldaikon.Quantify.QuantifyReturn;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.UtilMDE:escapeNonASCII(C)Ljava.lang.String;
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.Quant:memberOf(S[S)Z
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_86()Z
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:sum([[I)I
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_2_15(I)Z
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_52()Z
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
utilMDE.FuzzyFloat:indexOf([DD)I
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.inv.unary.sequence.NoDuplicates:format_simplify()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:memberOf(J[J)Z
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.inv.unary.sequence.EltUpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_2_1(I)Z
daikon.Quantify.IOAQuantification:getFreeVarName(I)Ljava.lang.String;
jtb.JavaCharStream:getBeginLine()I
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.VarInfoName:ioa_name()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.VarInfo:isPointer()Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
utilMDE.MathMDE:mod_positive(II)I
daikon.Quant:setDiff([I[I)[I
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.PptSlice2:arity()I
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ModBitTracker:split(I)I
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.Quant:eq(DD)Z
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
jtb.JavaParser:jj_2_4(I)Z
daikon.VarComparabilityNone:comparable(Ldaikon.VarComparabilityNone;Ldaikon.VarComparabilityNone;)Z
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.Quant:eltwiseGT([I)Z
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
daikon.inv.Invariant:logDetail()Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.inv.Invariant:isWorthPrinting()Z
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_2_13(I)Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:setEqual([I[I)Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.VarInfoName:isLiteralConstant()Z
utilMDE.ArraysMDE:max([I)I
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_simplify()Ljava.lang.String;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.JavaCharStream:FillBuff()V
daikon.inv.binary.twoScalar.IntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.inv.ValueSet.ValueSetStringArray:ValueSetStringArray(I)V
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfo:relate_var()V
daikon.inv.unary.sequence.EltUpperBound:format_daikon()Ljava.lang.String;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:enabled()Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.inv.unary.sequence.EltOneOf:format_ioa()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.ValueTuple:isMissingFlow(I)Z
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.Debug:logDetail()Z
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.string.OneOfString:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_68()Z
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.Quant:noDups([I)Z
daikon.inv.unary.sequence.NoDuplicates:format_ioa()Ljava.lang.String;
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:sort_rep()V
daikon.VarInfo:get_all_simple_names()Ljava.util.List;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.InvariantFormatTester:execute()Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:format_daikon()Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
jtb.JavaCharStream:getBeginColumn()I
daikon.VarInfo:isPrestate()Z
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.unary.string.SingleString:valid_types([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.Quant:pairwiseGT([I[I)Z
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
jtb.JavaParser:jj_2_16(I)Z
daikon.Ppt:indexOf(Ljava.lang.String;)I
jtb.JavaParser:jj_2_5(I)Z
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:sum([[D)D
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaCharStream:UpdateLineColumn(C)V
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.VarInfoName.InorderFlattener:InorderFlattener(Ldaikon.VarInfoName;)V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.inv.unary.stringsequence.EltOneOfString:runValue([Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.Quant:subsetOf([D[D)Z
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
daikon.inv.Invariant:prob_and(DD)D
daikon.inv.unary.sequence.NoDuplicates:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_116()Z
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:numIntArrays()I
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
jtb.syntaxtree.NodeList:NodeList()V
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
jtb.JavaParser:jj_3_3()Z
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
utilMDE.FuzzyFloat:lte(DD)Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_63()Z
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([II)I
jtb.JavaParser:jj_ntk()I
utilMDE.ArraysMDE:sorted([I)Z
daikon.inv.unary.sequence.EltNonZero:enabled()Z
daikon.VarInfoName.InorderFlattener:nodes()Ljava.util.List;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.Quant:lexGT([I[I)Z
utilMDE.MathMDE:mod_positive(JJ)J
jtb.JavaParser:jj_3R_58()Z
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_esc()Ljava.lang.String;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.Quant:eq(JJ)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_121()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
1027 2 1196 2 1267 2 785 2 746 2 617 2 1105 2 554 4 829 2 
544 2 1163 2 399 2 5 2 605 2 996 2 221 6 123 6 487 2 541 6 1062 2 
785 2 531 2 22 2 956 6 1196 2 126 4 331 2 549 6 1211 6 725 6 335 4 348 2 1070 2 
962 2 508 10 165 4 785 6 1193 10 684 4 373 10 1059 16 486 2 308 29 1196 6 969 4 219 26 196 10 254 2 379 8 515 8 580 6 1022 2 518 16 1208 8 468 2 607 6 343 12 881 2 84 16 1311 2 455 4 1250 8 1032 10 
62 6 287 4 
415 2 
508 2 1193 2 1117 2 684 2 373 2 1092 2 1059 2 443 2 308 6 949 2 934 2 219 4 196 4 401 2 450 2 518 2 607 2 343 2 1266 2 84 2 522 2 1032 2 1250 2 
945 6 165 2 508 4 1193 4 1219 6 518 8 373 4 1059 8 343 5 1185 2 308 15 84 8 848 4 219 12 1138 4 1032 4 542 2 
841 4 441 2 821 4 1276 2 1118 14 419 2 704 4 493 62 4 2 1122 10 553 2 1304 4 646 4 116 2 579 2 689 4 952 2 1123 4 311 2 728 4 999 2 448 2 1305 2 748 2 653 8 96 4 954 10 917 2 955 4 752 2 317 2 319 4 55 2 563 2 1135 2 1009 4 681 2 456 6 324 4 1192 2 
415 2 222 2 340 2 283 2 481 2 52 2 1108 2 1151 2 614 2 386 2 
783 2 785 4 702 2 418 2 421 2 1196 4 1198 2 747 2 829 2 1288 4 1237 2 1290 2 625 2 955 2 55 2 15 2 1248 2 924 2 231 2 1166 2 475 2 350 2 682 2 961 2 67 4 390 2 234 2 356 2 1120 2 1171 2 486 2 1074 2 23 4 933 2 445 2 359 2 646 4 650 2 199 2 851 2 653 2 365 2 776 2 812 2 
945 6 508 16 962 2 387 4 785 4 1193 16 166 4 1034 4 684 2 373 16 1059 32 171 2 308 54 1196 4 995 2 950 2 1280 6 688 2 219 48 848 4 196 6 8 4 580 4 1018 8 1219 6 693 2 518 32 1208 6 583 6 607 4 343 22 677 6 405 2 384 4 84 32 1189 6 1138 4 1032 16 1250 18 
653 2 317 2 456 2 
773 2 637 2 19 2 628 2 273 10 467 2 1091 2 54 2 204 2 823 2 85 22 231 2 827 2 1272 2 
979 2 571 2 665 2 982 2 666 2 572 2 1231 5 423 8 3 2 984 2 905 6 252 2 175 1 1232 2 910 2 6 2 94 3 913 1 9 2 428 1 989 8 429 2 258 2 676 2 675 3 1161 2 98 16 13 16 756 8 182 24 344 2 921 2 834 2 587 2 436 2 17 4 265 2 267 1 189 2 764 2 928 2 509 2 1170 2 510 2 842 1 269 1 767 6 444 2 110 2 935 2 847 1 113 2 1175 2 270 2 997 12 446 2 1078 4 516 2 1001 2 1178 4 936 2 1179 2 200 2 363 2 1003 2 1004 2 1081 2 124 1 1183 3 202 32 125 3 1005 2 1008 2 608 2 205 2 1267 2 698 2 1187 3 33 3 131 1 132 2 212 2 282 2 371 2 785 32 786 3 460 2 217 16 1094 1 1196 34 218 2 291 16 1197 2 138 2 1199 2 1200 4 620 2 1286 6 293 2 621 4 872 3 870 2 623 1 50 1 792 4 877 2 712 32 225 2 1106 3 957 2 299 3 1293 6 1210 1 538 2 882 1 633 2 1031 2 143 2 802 2 145 2 723 2 968 2 890 3 1038 12 644 2 727 2 1040 2 74 1 808 2 403 2 151 1 1125 2 77 2 1220 2 1130 2 1051 2 1308 2 897 3 657 4 160 2 734 2 1223 2 1136 24 661 2 407 2 662 4 900 2 410 1 413 2 
649 2 
1196 2 1047 2 
1196 4 253 2 1262 2 
901 136 88 136 169 4 1061 2 173 2 906 44 332 4 495 4 908 2 825 4 909 46 333 26 911 2 334 4 1233 44 10 2 988 2 670 2 672 4 257 4 582 2 749 32 916 8 1157 16 674 4 1160 4 1241 4 753 4 1243 2 181 12 434 2 678 2 586 44 184 2 505 22 186 10 1068 2 925 44 101 4 1247 14 102 2 1164 2 590 4 837 44 1167 4 1169 2 927 4 1251 136 1252 2 353 4 352 132 1172 2 930 2 766 4 1259 22 25 2 360 14 1177 20 774 32 604 2 1002 8 694 2 364 4 1082 2 274 2 696 4 277 40 29 20 1006 20 1264 4 453 4 1268 2 854 4 208 8 1270 2 209 4 130 16 779 4 615 2 857 2 858 2 1087 2 1086 4 524 2 1088 2 859 12 457 2 1275 2 134 2 458 4 137 2 43 2 461 32 377 4 951 4 788 2 866 44 1204 4 380 2 953 2 1289 20 381 4 709 44 295 4 875 2 626 4 56 2 1107 2 537 2 715 12 1110 4 230 2 1112 44 1113 2 63 2 1115 22 884 12 1297 4 719 2 70 8 389 2 720 2 391 2 639 2 722 2 72 6 485 2 642 2 1215 2 807 2 149 4 238 4 239 4 726 2 647 26 552 4 730 2 560 10 559 44 152 4 313 2 561 44 1048 4 894 4 154 2 404 2 1131 2 157 4 656 4 731 2 1133 2 1310 10 565 2 244 16 660 44 1054 20 816 4 163 4 977 4 899 4 409 4 1312 4 1142 2 978 4 
1158 2 201 2 865 1 476 2 
547 2 476 2 
671 2 653 2 305 2 280 2 
671 2 653 2 305 2 280 2 939 2 1096 2 
904 2 969 2 653 2 280 2 1119 2 476 2 
776 2 1213 2 
969 2 653 2 280 2 539 2 
32 2 292 2 
845 2 328 2 
526 2 176 2 
793 2 588 2 
845 2 588 2 700 2 
845 2 791 2 588 2 
845 2 1295 2 588 2 
845 2 86 2 588 2 
594 2 685 2 929 2 551 6 600 6 653 2 280 2 883 2 
0 2 770 2 
904 2 969 2 653 2 280 2 971 2 1096 2 476 2 
904 2 1162 2 476 2 
904 2 187 2 476 2 
770 2 201 2 426 2 
904 2 476 2 
370 2 770 2 
276 2 476 2 
770 2 201 2 394 2 
176 2 201 2 46 2 
361 2 588 2 201 2 
32 2 1238 2 201 2 
845 2 327 2 201 2 
744 2 770 2 
484 2 476 2 
611 2 176 2 
588 2 262 2 
32 2 1141 2 
845 2 751 2 
770 2 803 2 
845 2 840 2 
65 2 32 2 
172 2 588 2 
176 2 1044 2 
770 2 201 2 323 2 394 2 
770 2 1021 2 201 2 323 2 394 2 
703 2 770 2 201 2 
770 2 268 2 201 2 
1253 2 963 2 285 2 1271 2 
121 2 502 2 1129 4 794 2 420 2 1063 2 1309 2 907 2 598 2 73 4 237 2 85 6 616 2 427 2 1098 2 1260 2 177 2 439 2 
201 2 304 2 
225 2 
979 2 570 4 571 1 666 2 572 2 982 2 905 2 424 2 258 2 756 2 919 2 759 2 438 2 189 2 510 2 928 2 269 4 843 2 767 6 597 2 444 2 935 6 270 2 997 8 1078 4 1001 2 1178 4 1179 2 200 2 449 2 124 2 202 4 1005 2 1008 2 205 2 1267 2 127 2 1084 2 282 2 38 2 785 26 372 2 135 2 460 2 217 6 1196 26 218 2 138 2 1199 2 1200 2 1286 5 621 2 870 2 50 2 51 2 792 2 466 4 877 2 712 6 957 1 1293 2 538 2 633 2 1031 2 143 2 968 2 1038 8 644 4 1040 2 403 2 654 2 1128 2 1130 2 1051 2 1308 2 657 4 898 2 662 4 
979 2 570 4 571 2 666 2 572 2 982 2 905 2 424 2 258 2 676 2 756 2 438 2 189 2 510 2 928 2 269 2 843 2 767 6 597 2 444 2 935 6 270 2 997 8 1078 4 1000 2 1001 2 1178 4 1179 2 200 2 449 2 124 2 202 4 1005 2 1008 2 205 2 1267 2 127 2 282 2 38 2 785 26 372 2 135 2 460 2 217 6 1196 26 218 2 138 2 1199 2 1200 2 1286 6 621 2 870 2 50 2 51 2 792 2 466 4 877 2 712 6 957 2 1293 2 538 2 633 2 1031 2 143 2 235 2 1036 2 968 2 1038 8 644 4 1040 2 403 2 654 2 1128 2 1130 2 1051 2 1308 2 657 4 898 2 662 4 
964 2 
354 2 918 2 
282 2 568 2 979 2 326 4 785 6 981 4 862 2 1278 2 460 2 1196 12 218 2 174 2 706 2 5 2 789 2 221 6 1102 2 915 4 1206 10 876 2 585 2 142 2 633 2 541 6 510 2 511 2 357 2 146 2 640 2 888 4 767 4 399 4 514 4 996 4 1042 2 117 4 197 2 150 2 557 2 1001 2 1178 2 489 8 1080 2 605 2 123 6 452 2 1132 2 278 2 80 2 852 2 658 2 82 2 161 2 162 2 34 2 35 2 662 2 663 2 817 8 1143 2 
282 2 568 2 979 2 785 6 326 4 1014 2 981 4 862 2 1278 2 1062 2 460 2 1196 12 218 2 174 2 5 2 789 2 221 8 1102 2 915 4 1206 10 876 2 585 2 142 2 633 2 541 8 510 2 511 2 146 2 357 2 640 2 888 4 767 4 599 4 399 4 514 4 996 4 1042 2 117 4 197 2 150 2 557 2 1001 2 1178 2 489 8 1080 2 605 2 123 6 452 2 1132 2 80 2 852 2 658 2 82 2 161 2 162 2 281 2 34 2 35 2 662 2 663 2 817 8 1143 2 
1080 2 511 2 981 4 146 2 357 2 123 2 862 2 452 2 888 2 658 2 161 2 399 2 174 2 514 4 996 2 221 2 1143 2 150 2 
282 2 568 2 979 2 326 4 785 6 981 4 862 2 1278 2 1062 2 460 2 1196 12 218 2 174 2 706 2 5 2 789 2 221 6 1102 2 915 4 1206 6 876 2 585 2 142 2 633 2 541 6 510 2 511 2 357 2 146 2 640 2 888 4 767 4 399 4 514 4 996 4 1042 2 117 4 197 2 150 2 557 2 1001 2 1178 2 489 4 1080 2 123 4 452 2 1132 2 278 2 80 2 852 2 658 2 82 2 161 2 162 2 34 2 35 2 662 2 663 2 817 4 1143 2 
282 2 568 2 979 2 326 4 785 6 981 4 862 2 1278 2 460 2 1196 12 218 2 174 2 706 2 5 2 789 2 221 4 1102 2 915 4 1206 6 876 2 585 2 142 2 633 2 541 6 544 2 510 2 511 2 357 2 146 2 640 2 888 4 767 4 399 4 514 4 996 4 1042 2 117 4 197 2 150 2 557 2 1001 2 1178 2 489 4 1080 2 123 6 452 2 1132 2 278 2 80 2 852 2 658 2 82 2 161 2 162 2 34 2 35 2 662 2 663 2 817 4 1143 2 
282 2 568 2 979 2 326 4 785 6 981 4 862 2 1278 2 460 2 1196 12 218 2 174 2 706 2 5 2 789 2 221 6 1102 2 915 4 1206 6 876 2 585 2 142 2 633 2 541 6 510 2 511 2 357 2 146 2 640 2 888 4 767 4 399 4 514 4 996 4 1042 2 117 4 197 2 150 2 557 2 1001 2 1178 2 489 4 1080 2 605 2 123 6 452 2 1132 2 278 2 80 2 852 2 658 2 82 2 161 2 162 2 34 2 35 2 662 2 663 2 817 8 1143 2 
282 2 568 2 979 2 326 4 785 6 981 4 862 2 1278 2 460 2 1196 12 218 2 174 2 706 2 5 2 789 2 221 6 1102 2 915 4 1206 10 876 2 585 2 142 2 633 2 541 8 544 2 510 2 511 2 357 2 146 2 640 2 888 4 767 4 399 4 514 4 996 4 1042 2 117 4 197 2 150 2 557 2 1001 2 1178 2 489 8 1080 2 605 2 123 8 452 2 1132 2 278 2 80 2 852 2 658 2 82 2 161 2 162 2 34 2 35 2 662 2 663 2 817 8 1143 2 
282 2 568 2 979 2 326 4 785 6 981 4 862 2 1278 2 460 2 1196 12 218 2 174 2 706 2 5 2 789 2 221 6 1102 2 915 4 1206 10 876 2 585 2 142 2 633 2 541 6 510 2 511 2 357 2 146 2 640 2 888 4 767 4 399 4 514 4 996 4 1042 2 117 4 197 2 150 2 557 2 1001 2 1178 2 489 8 1080 2 605 2 123 6 452 2 1132 2 278 2 80 2 852 2 658 2 82 2 161 2 162 2 34 2 35 2 662 2 663 2 817 8 1143 2 
979 2 1145 2 326 6 492 6 820 6 981 4 983 2 822 1 174 2 5 4 667 2 1156 2 833 2 504 6 18 2 836 1 189 2 510 2 511 2 357 2 844 2 514 4 996 4 997 4 197 2 1001 2 1178 4 1179 2 27 7 202 2 367 2 1008 2 852 2 205 2 34 2 35 4 525 2 1012 2 1194 2 862 2 217 6 1196 46 218 2 1199 2 1200 2 221 4 870 2 873 2 1205 8 51 2 1206 2 876 2 877 2 712 8 53 2 533 4 58 2 538 2 541 12 64 2 544 4 888 4 1038 4 399 4 398 6 1040 12 1042 4 555 2 557 2 403 2 1047 6 78 2 1051 2 80 2 82 2 568 2 417 6 87 2 570 4 571 2 90 6 572 2 905 2 424 2 1235 2 915 8 258 2 756 2 433 1 585 2 1067 2 1246 1 923 1 767 6 1075 2 935 6 270 2 117 4 271 7 1078 4 772 2 1080 2 1262 6 123 8 452 2 278 2 777 2 1267 2 127 4 942 1 282 2 1089 6 785 24 784 6 787 2 1278 2 460 2 463 10 789 2 619 2 1283 6 464 1 1286 6 139 2 621 2 790 4 1102 2 1101 1 792 2 1104 2 957 2 1293 2 301 6 302 2 142 2 633 2 303 6 143 2 146 2 966 6 640 2 968 2 972 2 649 6 150 2 1126 2 1128 2 315 2 156 1 158 2 159 6 1132 2 657 4 658 2 161 2 162 2 662 4 663 2 817 2 1143 2 
568 2 1145 2 417 6 979 2 87 2 326 6 820 6 492 6 570 4 90 6 981 4 571 2 572 2 983 2 424 2 905 2 174 2 5 4 667 2 1235 2 1156 2 915 8 833 2 258 2 504 6 756 2 585 2 1067 2 18 2 189 2 510 2 511 2 357 2 767 6 1075 2 844 2 935 6 514 4 270 2 996 4 997 8 117 4 197 2 1078 4 772 2 1001 2 1178 4 1179 2 1080 2 1262 6 605 4 123 8 202 2 367 2 452 2 278 2 777 2 1008 2 852 2 127 4 1267 2 205 2 34 2 35 4 1089 6 282 2 525 2 784 6 785 26 1012 2 787 2 1194 2 862 2 1278 2 217 6 460 2 1196 48 218 2 463 10 1199 2 1283 6 619 2 789 2 1200 4 221 8 1286 6 139 2 790 4 621 4 870 2 1102 2 1103 2 873 2 1205 8 1206 2 51 2 876 2 792 4 1104 2 712 8 877 2 53 2 533 4 957 2 228 2 1293 2 58 2 301 6 538 2 302 2 142 2 303 6 633 2 541 12 64 2 143 2 966 6 146 2 640 2 888 4 968 2 1038 8 398 6 399 4 644 2 1040 12 972 2 1042 4 555 2 649 6 150 2 403 2 557 2 1126 2 1047 6 78 2 315 2 1128 2 1051 2 159 6 158 2 1132 2 657 4 80 2 658 2 82 2 161 2 162 2 662 4 663 2 817 6 1143 2 
568 2 1145 2 417 6 979 2 87 2 326 6 820 6 492 6 570 4 90 6 981 4 571 2 572 2 983 2 424 2 905 2 174 2 5 4 667 2 1235 2 1156 2 915 8 833 2 258 2 504 6 756 2 585 2 1067 2 18 2 189 2 510 2 511 2 357 2 767 6 1075 2 844 2 935 6 514 4 270 2 996 4 997 8 117 4 197 2 1078 4 772 2 1001 2 1178 4 1179 2 1080 2 1262 6 605 4 123 8 202 2 367 2 452 2 278 2 777 2 1008 2 852 2 127 4 1267 2 205 2 34 2 35 4 1089 6 282 2 525 2 784 6 785 26 1012 2 787 2 1194 2 862 2 1278 2 217 6 460 2 1196 48 218 2 463 10 1199 2 1283 6 619 2 789 2 1200 4 221 8 1286 6 139 2 790 4 621 4 870 2 1102 2 1103 2 873 2 1205 8 51 2 1206 6 876 2 792 4 1104 2 712 8 877 2 53 2 533 4 957 2 228 2 1293 2 58 2 301 6 538 2 302 2 142 2 303 6 633 2 541 12 64 2 143 2 966 6 146 2 640 2 888 4 968 2 1038 8 398 6 399 4 644 2 1040 12 972 2 1042 4 555 2 649 6 150 2 557 2 403 2 489 4 1126 2 1047 6 78 2 315 2 1128 2 1051 2 159 6 158 2 1132 2 657 4 80 2 658 2 82 2 161 2 162 2 662 4 663 2 817 6 1143 2 
979 2 1145 2 326 6 492 6 820 12 981 4 329 2 983 2 2 2 496 6 174 2 5 4 1152 2 667 2 1156 2 339 2 833 2 504 12 18 2 189 2 510 2 511 2 357 2 1174 6 844 2 514 4 996 4 997 10 197 2 1001 2 1178 4 1179 2 202 4 367 2 1008 2 852 2 853 6 205 2 1188 2 699 6 34 2 35 4 525 2 1012 2 1194 2 862 2 1015 6 217 8 1196 52 218 2 1199 2 1200 4 221 10 870 2 873 2 1205 8 1206 6 51 2 876 2 877 2 712 12 53 2 226 2 533 4 228 2 58 2 538 2 541 16 64 2 544 2 888 4 1038 10 399 4 398 6 1040 10 1042 4 555 2 403 2 557 2 1047 12 78 2 1051 2 1053 2 80 2 82 2 568 2 417 6 87 2 570 6 571 2 90 6 572 2 1062 2 905 4 424 4 255 6 915 8 258 2 750 6 756 4 585 2 1067 2 593 2 767 6 1075 2 935 8 270 2 117 4 1078 4 772 2 1080 2 605 4 1262 12 123 10 452 2 278 2 777 2 279 6 1267 2 127 4 282 2 1089 6 785 24 784 6 787 2 1278 2 460 2 463 8 789 2 619 2 1283 6 1286 6 139 2 621 4 790 4 1102 2 1103 2 792 4 1104 2 957 2 1293 4 301 12 302 2 142 2 633 2 303 6 143 2 146 2 966 6 640 2 804 6 968 2 644 2 972 2 649 12 150 2 489 4 1126 2 1128 2 315 2 158 2 159 6 1132 2 657 4 658 2 161 2 162 2 662 4 663 2 817 6 1143 2 
568 2 326 2 511 2 981 2 146 2 357 2 640 2 862 2 1278 2 1196 4 399 4 514 2 5 2 996 4 221 6 117 2 197 2 557 2 1102 2 915 2 489 4 1080 2 1206 4 605 2 123 6 585 2 452 2 278 2 1132 2 852 2 82 2 161 2 663 2 817 6 541 4 
568 2 979 2 326 2 570 4 981 2 571 2 572 2 905 3 5 2 1235 2 338 2 915 2 95 2 258 2 585 2 189 2 1071 2 510 2 511 2 357 2 932 2 767 6 935 6 514 2 270 2 996 4 117 2 197 2 1078 4 1001 2 1178 4 1179 2 1080 2 605 2 1004 2 123 6 202 3 452 2 278 2 1008 2 852 2 205 2 1267 2 127 2 282 2 785 24 862 2 1278 2 460 2 217 6 1196 28 218 2 463 2 221 6 1286 6 870 2 1102 2 51 2 1206 2 877 2 712 8 225 2 957 2 1293 3 538 2 142 2 633 2 541 4 232 3 143 2 1033 2 146 2 640 2 968 2 399 4 1040 4 557 2 403 2 1128 2 1051 2 1132 2 657 4 160 2 82 2 161 2 661 2 662 4 663 2 817 6 
1066 2 568 2 82 2 
1066 2 568 2 82 2 
568 4 979 2 326 4 571 2 981 2 572 2 1062 4 174 2 5 4 1066 2 915 4 430 2 258 2 189 2 510 2 1255 2 269 2 357 2 767 6 935 2 514 2 270 2 996 4 997 4 117 2 1078 4 1001 2 1178 4 1179 2 605 4 123 12 202 2 452 2 1008 2 852 2 778 2 205 2 1267 2 127 6 34 2 35 4 282 2 1090 2 525 2 38 4 785 16 947 2 39 2 40 2 216 2 460 2 217 2 1196 24 218 2 463 2 1199 4 619 2 1200 4 708 2 1286 6 221 12 790 2 621 4 870 2 873 2 51 2 1206 6 792 4 877 2 712 2 533 2 957 2 1294 2 538 2 303 2 633 2 635 2 541 16 143 2 544 4 233 2 800 4 71 2 888 4 805 2 1038 4 399 4 1040 4 1042 2 403 2 557 2 312 2 489 4 652 4 1128 2 1051 2 657 4 80 2 658 2 82 6 161 4 162 2 1226 2 1139 2 662 4 817 6 
785 2 833 2 40 2 918 2 533 2 216 2 422 2 31 2 778 2 1196 4 218 2 463 2 18 2 1040 2 303 2 1191 2 1143 2 
568 4 979 2 326 4 571 2 981 2 572 2 1062 4 1148 2 174 2 5 4 1066 2 915 4 430 2 258 2 990 2 189 2 510 2 1255 2 357 2 767 6 935 2 514 2 270 2 996 4 997 4 117 2 1078 4 1001 2 1178 4 1179 2 605 4 123 12 202 4 452 2 1008 2 852 2 778 2 205 2 1267 2 127 6 207 2 34 2 35 4 282 2 1090 2 525 2 38 4 785 16 947 2 40 2 216 2 460 2 217 2 1196 24 218 2 1199 4 619 2 1200 4 1286 6 221 12 790 2 621 4 870 2 873 2 51 2 1206 6 876 2 792 4 877 2 712 2 957 2 538 2 303 2 633 2 635 2 541 16 143 2 544 4 233 2 800 4 71 4 888 4 805 2 1038 4 399 4 1040 2 1042 4 403 2 557 2 312 2 489 4 652 4 1128 2 79 2 1051 2 657 4 80 2 658 2 82 6 161 4 162 2 1139 2 662 4 1140 2 817 6 
568 4 979 2 326 4 571 2 981 2 572 2 1062 4 174 2 5 4 1066 2 915 4 430 2 258 2 189 2 510 2 1255 2 269 1 357 2 767 6 935 2 514 2 270 2 996 4 997 4 117 2 1078 4 1001 2 1178 4 1179 2 120 2 605 4 123 12 202 2 452 2 1008 2 852 2 778 2 205 2 1267 2 127 6 34 2 35 4 282 2 1090 2 525 2 38 4 785 16 947 2 40 2 216 2 460 2 217 2 1196 24 218 2 463 2 1199 4 619 2 1200 4 1286 6 221 12 790 2 621 4 870 2 873 2 51 2 1206 6 876 2 792 4 877 2 712 2 795 2 533 2 957 2 538 2 303 2 633 2 635 2 541 16 143 2 544 4 233 2 800 4 71 2 888 4 805 2 1038 4 399 4 1040 4 1042 4 403 2 557 2 312 2 489 4 652 4 1128 2 1051 2 1052 2 657 4 80 2 658 2 82 6 161 4 162 2 1139 2 662 4 817 6 566 2 247 2 
979 2 980 2 329 2 665 2 1 64 2 2 330 4 3 2 984 2 985 32 667 4 668 18 337 2 9 2 987 14 338 2 339 2 989 10 11 2 673 2 341 4 13 14 14 2 344 2 343 10 16 2 346 8 345 44 347 2 679 2 349 2 683 2 991 28 992 2 993 2 351 2 355 3 20 14 994 2 686 18 687 4 995 2 688 4 24 2 690 2 997 94 998 2 691 2 26 14 1001 2 692 14 362 84 695 2 366 6 1007 2 1008 4 30 2 698 2 33 2 1009 2 1010 18 36 10 368 16 369 2 1011 44 37 28 371 2 701 2 372 2 1013 14 373 6 704 2 374 14 375 1 705 4 1016 2 376 42 378 2 45 2 47 4 48 16 1018 8 710 2 50 2 1019 4 711 18 1020 32 51 2 712 76 714 14 1023 46 1024 1 1026 32 57 2 1028 2 59 2 60 32 1029 18 716 20 61 32 1030 10 717 2 1032 6 64 2 69 2 1033 2 1034 4 1035 32 721 2 393 18 395 4 396 2 397 2 1038 97 724 2 1040 4 727 2 400 20 1045 2 403 2 729 2 76 32 1046 2 1049 4 1050 2 1051 2 732 2 81 2 1053 4 734 2 735 2 83 20 406 4 84 12 407 2 1055 4 411 2 1056 2 737 42 738 16 414 2 739 2 416 2 740 16 1057 8 1058 18 89 32 1059 12 1060 16 91 2 743 2 423 10 92 2 424 46 1064 2 425 14 93 2 94 2 95 2 96 2 432 64 98 26 755 18 754 32 756 50 100 4 757 6 435 2 436 2 437 18 758 32 760 12 761 2 104 6 1069 2 103 2 762 2 105 3 438 46 106 4 440 12 763 64 764 2 107 2 108 2 765 2 109 14 442 14 1073 32 767 8 768 32 111 2 1076 2 769 72 1077 72 112 2 113 2 115 2 118 4 119 18 771 2 1078 168 447 32 772 2 775 32 449 2 122 4 451 20 124 2 125 2 1083 2 777 2 128 2 127 2 780 44 781 2 785 410 133 14 135 2 1093 2 136 2 460 2 459 2 462 2 1095 4 1097 7 1099 2 465 2 1100 2 140 2 470 32 1106 2 471 32 472 2 1109 2 796 2 1111 28 473 32 474 13 797 2 1114 46 798 2 799 4 477 2 1116 16 478 2 143 2 479 2 144 14 802 2 801 2 482 2 1121 2 806 16 808 2 488 2 1124 42 490 3 809 24 1125 2 1126 2 810 2 811 2 158 2 813 2 1134 4 815 2 1136 12 164 4 1138 4 818 32 1145 4 819 32 821 2 167 2 168 4 1147 2 494 4 1149 2 824 24 1150 32 1152 2 1153 2 1155 2 1154 2 826 2 497 33 828 10 178 2 498 4 499 2 830 2 831 2 832 3 501 2 503 2 179 2 182 12 183 2 834 2 185 1 506 14 507 2 188 2 1168 2 189 36 508 6 839 2 190 4 509 2 510 2 192 18 1173 2 843 2 512 2 844 2 195 18 1176 2 198 2 849 2 850 14 1178 6 1179 2 1180 2 517 2 1181 2 518 12 1182 2 1183 2 202 58 203 2 1184 2 1186 2 205 36 1187 2 519 8 520 24 856 4 521 1 523 16 212 2 213 3 1193 6 214 3 860 2 215 2 861 32 1195 3 1194 4 863 2 527 2 864 2 528 2 217 24 1196 512 529 4 218 2 219 18 530 24 220 2 1199 10 1202 2 1203 84 869 2 868 2 871 32 870 2 223 4 874 2 224 2 877 2 1208 6 532 2 1209 3 879 1 226 2 534 2 535 22 536 3 538 2 229 2 540 2 232 2 543 2 886 2 545 62 546 2 887 18 1214 2 889 4 548 2 890 2 891 4 892 2 556 3 240 10 558 2 241 2 1217 10 1218 18 562 1 1220 2 895 2 1221 2 896 4 242 2 897 2 564 10 243 2 1225 2 245 1 898 2 900 2 246 2 567 2 249 2 570 12 571 130 1229 2 572 2 1230 32 903 2 573 2 250 2 905 16 251 20 574 2 252 2 1232 2 575 2 576 2 912 2 577 2 578 2 1234 18 580 4 581 2 1236 2 258 8 259 18 1239 10 1242 2 583 6 261 18 584 32 920 8 921 2 263 3 922 2 587 2 589 1 265 2 926 4 266 4 1250 6 591 6 592 2 1254 2 593 2 269 1 596 32 595 232 931 3 932 2 597 2 1256 20 935 14 270 2 1257 2 1258 2 601 12 1261 18 603 2 937 32 938 20 602 2 940 2 941 3 272 2 1263 2 275 2 606 2 1265 2 610 2 609 2 1267 8 612 44 1269 2 282 2 945 6 1274 2 284 64 286 32 289 2 1279 32 291 48 1281 42 1282 53 1284 2 1285 14 1286 460 1287 6 622 3 624 14 296 2 1291 2 629 2 1292 20 297 2 630 1 298 1 957 130 1293 46 299 2 631 24 300 18 958 10 959 32 633 2 634 2 1296 6 636 2 962 2 1298 2 306 62 1299 2 965 2 1300 2 638 2 641 2 307 8 968 2 308 21 1303 32 309 2 643 4 970 4 310 4 645 2 1304 2 648 2 651 32 974 64 1306 2 654 2 316 64 655 2 1307 2 318 2 320 16 975 2 657 200 321 2 659 102 322 4 662 6 
785 2 570 2 721 2 1195 2 217 2 968 2 905 2 462 2 1196 2 424 6 935 2 707 2 771 2 240 2 868 2 810 2 712 2 1182 2 202 2 1293 2 958 2 1109 2 1030 4 1056 2 
785 2 570 2 721 2 1195 2 217 2 968 2 905 2 462 2 1196 2 424 6 935 2 707 2 771 2 240 2 868 2 810 2 712 2 1182 2 202 2 1293 2 958 2 1109 2 1030 4 1056 2 
785 2 570 2 721 2 1195 2 217 2 968 2 905 2 462 2 1196 2 424 6 935 2 707 2 771 2 240 2 868 2 810 2 712 2 1182 2 202 2 1293 2 958 2 1109 2 1030 4 1056 2 
440 2 508 2 190 2 785 4 1193 2 1277 2 741 2 21 2 373 2 1059 2 1037 2 288 2 308 4 968 2 1196 10 251 4 291 2 219 4 530 3 400 4 1043 2 771 2 1017 3 580 2 809 3 938 4 314 2 712 2 518 2 1208 4 98 2 202 3 469 4 383 2 1293 3 83 4 659 6 84 2 613 2 1032 2 
440 2 508 2 962 2 190 2 785 4 1193 2 1277 2 741 2 21 2 373 2 1059 2 1037 2 288 2 308 4 968 2 1196 10 251 4 291 2 219 4 530 2 400 4 1043 2 771 2 1017 2 580 2 809 2 938 4 314 2 712 2 518 2 1208 4 98 2 202 2 469 4 343 2 383 2 1293 2 83 4 659 6 84 2 613 2 1032 2 1250 2 
440 2 508 2 962 2 190 2 785 4 1193 2 1277 2 741 2 21 2 373 2 1059 2 1037 2 288 2 308 4 968 2 1196 10 251 4 291 2 219 4 530 2 400 4 1043 2 771 2 1017 2 580 2 809 2 938 4 314 2 712 2 518 2 1208 4 98 2 202 2 469 4 343 2 383 2 1293 2 83 4 659 6 84 2 613 2 1032 2 1250 2 
440 2 508 2 962 2 190 2 785 4 1193 2 1277 2 741 2 21 2 373 2 1059 2 1037 2 288 2 308 4 968 2 1196 10 251 4 291 2 219 4 530 2 400 4 1043 2 771 2 1017 2 580 2 809 2 938 4 314 2 712 2 518 2 1208 4 98 2 202 2 469 4 343 2 383 2 1293 2 83 4 659 6 84 2 613 2 1032 2 1250 2 
440 2 508 2 962 4 190 2 785 4 1193 2 1277 2 741 2 21 2 373 2 1059 2 1037 2 288 2 308 4 968 2 1196 10 251 4 291 2 219 4 530 2 400 4 1043 2 771 2 1017 2 580 2 809 2 938 4 314 2 712 2 518 2 1208 4 98 2 202 2 469 4 343 4 383 2 1293 2 83 4 659 6 84 2 613 2 1032 2 1250 4 
248 2 12 2 388 2 114 2 902 2 1216 2 438 2 
241 2 248 2 431 2 1240 2 392 2 1065 2 
1273 2 785 8 1146 2 742 1 1301 2 236 2 191 2 1302 2 460 2 1196 10 4 1 358 2 579 1 1127 2 180 2 155 2 1222 1 504 2 1025 1 814 2 880 2 697 2 1212 2 1190 2 211 2 960 2 
945 4 961 2 325 2 508 6 962 2 785 6 1193 6 1034 2 1300 2 373 6 1059 6 308 15 1196 6 687 2 219 12 488 2 580 2 1018 2 625 2 693 1 518 6 1208 4 583 4 343 6 84 6 229 2 761 2 1138 2 1032 6 1250 3 782 2 
914 2 785 1 1079 1 938 2 28 2 713 2 1196 1 290 2 251 2 1224 2 745 4 148 2 855 2 550 2 400 2 1055 2 408 6 838 2 
914 2 938 2 28 2 713 2 290 2 251 2 1224 4 745 4 148 4 855 2 550 2 400 2 408 6 1055 4 838 2 
914 8 785 1 1079 1 938 2 28 2 713 2 1196 1 290 6 251 2 1224 8 745 4 148 8 855 2 550 2 400 2 408 10 1055 8 838 2 
938 2 28 2 713 2 251 2 1224 2 745 2 148 2 855 2 550 2 400 2 408 2 1055 2 838 2 
1144 26 818 10 819 42 664 4 89 24 571 58 1230 6 1 36 985 24 1150 6 425 4 577 8 1154 8 669 2 497 8 256 10 500 4 832 2 1159 2 432 16 503 4 97 8 754 6 584 6 1245 8 680 12 758 6 264 2 104 7 835 26 763 17 189 14 269 4 109 4 193 4 442 4 596 6 595 124 1073 6 768 24 513 2 1077 34 769 50 1078 88 447 6 850 4 1261 2 692 4 937 10 362 84 775 6 366 8 1008 8 205 14 454 24 1085 4 206 4 210 2 944 2 946 4 785 134 284 16 1013 4 133 4 948 2 286 6 861 42 374 4 42 4 375 6 1196 150 1279 10 1282 22 1285 4 1286 248 1097 7 294 4 1287 11 1203 92 871 6 49 1 1020 6 627 24 878 2 714 4 1023 4 1024 2 382 8 630 2 470 6 879 2 298 4 227 10 957 58 1026 6 471 6 632 2 60 6 385 90 61 6 473 10 474 15 959 6 66 90 718 18 885 2 1035 6 483 24 546 4 395 4 1303 10 147 2 1038 28 724 8 1039 2 973 4 76 6 651 6 974 16 562 2 316 18 491 10 657 112 733 6 245 2 411 4 737 12 1227 2 
189 2 785 12 948 2 571 2 269 2 170 2 375 2 194 2 1196 12 1038 6 724 2 1039 2 577 2 1154 2 1286 8 1078 4 99 2 298 2 657 4 1008 2 957 2 205 2 345 2 210 2 266 2 1227 2 
569 2 818 4 819 16 89 8 571 30 1228 2 1230 4 1 6 986 4 1150 4 425 4 336 2 577 2 1154 2 669 2 497 6 432 10 503 2 260 2 584 4 99 2 1244 32 758 4 1165 4 1249 4 104 4 763 10 189 6 1072 10 109 4 442 4 595 24 596 4 1073 4 513 2 1077 30 769 8 1078 36 447 4 850 4 692 4 937 4 362 24 775 4 366 4 1008 2 205 6 129 2 210 2 943 2 785 70 284 10 1013 4 133 4 948 2 286 4 861 8 374 4 41 4 375 2 44 16 1196 78 1279 4 618 8 1285 4 1201 2 1286 104 867 2 1203 24 871 4 1020 4 141 16 714 4 1024 2 630 2 470 4 957 28 1026 4 471 4 632 2 60 4 61 4 473 6 959 4 474 8 68 4 1035 4 546 4 967 10 1303 4 1038 14 724 2 1039 2 893 8 75 10 76 4 651 4 153 4 974 10 316 10 657 44 976 8 1137 8 411 4 737 14 412 4 1227 2 
818 2 785 26 284 6 571 12 948 2 1 2 375 2 1196 28 1279 2 1150 4 1282 10 577 2 1154 2 1286 40 669 2 1097 2 497 4 1287 2 432 6 1159 2 503 2 1207 2 1023 2 879 2 99 2 957 12 1026 4 60 4 473 2 474 6 959 4 189 2 763 2 885 2 269 2 546 2 595 8 1073 4 395 2 1303 2 1038 14 724 2 1077 6 1039 2 1078 14 937 2 974 6 775 4 562 2 316 2 366 4 1008 2 657 14 205 2 210 2 245 2 411 2 944 2 1227 2 
846 2 
480 1 1041 1 736 1 7 1 342 1 402 1 
480 1 1041 1 736 1 7 1 342 1 402 1 
480 1 1041 1 736 1 7 1 342 1 402 1 
480 1 1041 1 736 1 7 1 342 1 402 1 
480 1 1041 1 736 1 7 1 342 1 402 1 
480 1 1041 1 736 1 7 1 342 1 402 1 
480 1 1041 1 736 1 7 1 342 1 402 1 
480 1 1041 1 736 1 7 1 342 1 402 1 
480 1 1041 1 736 1 7 1 342 1 402 1 
480 1 1041 1 736 1 7 1 342 1 402 1 
480 1 1041 1 736 1 7 1 342 1 402 1 
480 1 1041 1 736 1 7 1 342 1 402 1 
480 1 1041 1 736 1 7 1 342 1 402 1 
480 1 1041 1 736 1 7 1 342 1 402 1 
480 1 1041 1 736 1 7 1 342 1 402 1 
480 1 1041 1 736 1 7 1 342 1 402 1 
480 1 1041 1 736 1 7 1 342 1 402 1 
480 1 1041 1 736 1 7 1 342 1 402 1 
480 1 1041 1 736 1 7 1 342 1 402 1 
480 1 1041 1 736 1 7 1 342 1 402 1 
480 1 1041 1 736 1 7 1 342 1 402 1 
480 1 1041 1 736 1 7 1 342 1 402 1 
480 1 1041 1 736 1 7 1 342 1 402 1 
480 1 1041 1 736 1 7 1 342 1 402 1 
480 1 1041 1 736 1 7 1 342 1 402 1 
480 1 1041 1 736 1 7 1 342 1 402 1 
480 1 1041 1 736 1 7 1 342 1 402 1 
480 1 1041 1 736 1 7 1 342 1 402 1 
480 1 1041 1 736 1 7 1 342 1 402 1 
480 1 1041 1 736 1 7 1 342 1 402 1 
480 1 1041 1 736 1 7 1 342 1 402 1 
480 1 1041 1 736 1 7 1 342 1 402 1 
480 1 1041 1 736 1 7 1 342 1 402 1 
480 1 1041 1 736 1 7 1 342 1 402 1 
480 1 1041 1 736 1 7 1 342 1 402 1 
480 1 1041 1 736 1 7 1 342 1 402 1 
480 1 1041 1 736 1 7 1 342 1 402 1 
480 1 1041 1 736 1 7 1 342 1 402 1 
480 1 1041 1 736 1 7 1 342 1 402 1 
480 1 1041 1 736 1 7 1 342 1 402 1 
480 1 1041 1 736 1 7 1 342 1 402 1 
480 1 1041 1 736 1 7 1 342 1 402 1 
480 1 1041 1 736 1 7 1 342 1 402 1 
480 1 1041 1 736 1 7 1 342 1 402 1 

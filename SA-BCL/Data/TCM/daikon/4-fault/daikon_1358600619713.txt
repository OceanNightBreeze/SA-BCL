#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.NullPointerException 520 647 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 46 996 1027 67 1261 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V ERROR java.lang.NullPointerException 947 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.UnsupportedOperationException 85 85 665 1193 519 1170 
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.Quant:lexGTE([I[I)Z
daikon.Quant:lexEqual([I[I)Z
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:subarray([JII)[J
daikon.inv.unary.LowerBoundCore:calc_modulus()J
jtb.JavaParser:jj_3R_88()Z
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ShiftExpression;)V
daikon.Quant:gt(II)Z
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InstanceOfExpression;)V
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
jtb.syntaxtree.TypeDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.PptSlice0:initInvariantsSeen()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryExpression;)V
jtb.JavaParser:jj_3R_121()Z
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.inv.Invariant:isWorthPrinting()Z
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
jtb.JavaParser:jj_2_12(I)Z
utilMDE.OrderedPairIterator:setnext1()V
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.Quant:eltsLtIndex([I)Z
jtb.JavaParser:jj_3R_97()Z
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object; | ASSIGN | 19872 | = null
jtb.syntaxtree.NodeChoice:accept(Ljtb.visitor.Visitor;)V
daikon.PptSlice1:arity()I
jtb.JavaCharStream:getBeginColumn()I
daikon.VarInfo:simplify_name()Ljava.lang.String;
jtb.JavaParser:jj_3R_63()Z
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AdditiveExpression;)V
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.test.TestQuant:removeAdjacentDups([I)[I
utilMDE.ArraysMDE:isSubset([D[D)Z
jtb.JavaParser:jj_3R_57()Z
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ExclusiveOrExpression;)V
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.Quant:eq(JJ)Z
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.ModBitTracker:num_samples()I
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.Quant:eltsGteIndex([I)Z
jtb.JavaParser:jj_3_35()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
jtb.JavaCharStream:getEndColumn()I
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
jtb.JavaParser:jj_3R_89()Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
jtb.JavaParser:jj_3R_56()Z
jtb.JavaParser:jj_2_25(I)Z
daikon.Quant:pairwiseSquare([I[I)Z
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.Quant:lte(II)Z
jtb.JavaParser:jj_3_10()Z
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_105()Z
jtb.JavaParser:jj_3R_47()Z
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.Quant:memberOf(F[D)Z
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
utilMDE.MathMDE:pow_fast(II)I
jtb.syntaxtree.TypeArguments:TypeArguments(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeArgument;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
jtb.JavaParser:jj_3_15()Z
daikon.ModBitTracker:num_vars()I
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
jtb.JavaParser:jj_3R_49()Z
jtb.JavaParser:jj_3R_135()Z
jtb.syntaxtree.ConditionalOrExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryPrefix;)V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3_5()Z
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
jtb.JavaParser:jj_3_13()Z
daikon.Quant:pairwiseGTE([I[I)Z
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
jtb.syntaxtree.VariableDeclaratorId:VariableDeclaratorId(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.NodeToken:trimSpecials()V
jtb.JavaParser:getToken(I)Ljtb.Token;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NullLiteral;)V
jtb.syntaxtree.CompilationUnit:CompilationUnit(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.Quant:concat([I[I)[I
jtb.JavaParser:jj_3R_114()Z
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.VarInfo:java_name()Ljava.lang.String;
jtb.JavaParser:jj_3R_163()Z
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.ModBitTracker:ModBitTracker(I)V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.Quant:pairwiseLTE([I[I)Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:lt(DD)Z
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
utilMDE.SimpleLog.LongVal:LongVal(J)V
jtb.JavaParser:jj_3R_110()Z
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Statement;)V
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_108()Z
jtb.JavaParser:jj_3R_117()Z
jtb.JavaParser:jj_3_18()Z
jtb.JavaParser:jj_3R_169()Z
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_104()Z
utilMDE.FuzzyFloat:ne(DD)Z
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.Quant:subsetOf([D[F)Z
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:passes()Z
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_102()Z
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_118()Z
jtb.syntaxtree.TypeArgument:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:ne(II)Z
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
jtb.syntaxtree.NodeSequence:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
jtb.JavaParser:jj_3R_137()Z
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eltsEqual([II)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeBound;)V
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArgument;)V
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.inv.filter.ParentFilter:ParentFilter()V
jtb.JavaParser:jj_3R_126()Z
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:indexOf([I[I)I
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
jtb.syntaxtree.Modifiers:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
jtb.JavaParser:jj_3_25()Z
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
utilMDE.WeakHasherMap:processQueue()V
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
jtb.JavaParser:jj_2_15(I)Z
jtb.syntaxtree.Statement:accept(Ljtb.visitor.Visitor;)V
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_2_36(I)Z
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE:sign(I)I
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;)V
daikon.diff.Node:Node()V
utilMDE.ArraysMDE:sum([[D)D
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.Quant:eq(FF)Z
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Modifiers;)V
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.Quant:slice([III)[I
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.VarInfo:relate_var()V
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
utilMDE.MathMDE:pow(II)I
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:subsetOf([D[D)Z
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Type;)V
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.FuzzyFloat:gt(DD)Z
utilMDE.FuzzyFloat:FuzzyFloat(D)V
jtb.JavaParser:jj_3R_81()Z
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:lexGT([I[I)Z
jtb.JavaParser:jj_3_17()Z
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
jtb.JavaParser:jj_3R_164()Z
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Quant:eltsGTE([II)Z
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern.SequenceAndIndices:hashCode()I
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
jtb.JavaParser:jj_3R_48()Z
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:sum([D)D
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V
jtb.syntaxtree.TypeParameter:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_103()Z
jtb.JavaParser:jj_3R_133()Z
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_54()Z
jtb.JavaParser:jj_3R_106()Z
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.Invariant:prob_or(DD)D
daikon.test.TestAst.ClassOrInterfaceDeclarationHarvester:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.inv.unary.UpperBoundCore:calc_modulus()J
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_107()Z
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.Quant:subsetOf([B[I)Z
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
jtb.JavaParser:jj_3R_75()Z
jtb.JavaParser:jj_3R_109()Z
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
utilMDE.ArraysMDE:max([I)I
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.inv.OutputFormat:toString()Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Debug:logDetail()Z
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.VarInfo:dbc_name()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ImportDeclaration;)V
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ResultType;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
jtb.JavaParser:jj_3_20()Z
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:calc_range()J
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.ProglangType:isPointerFileRep()Z
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.OrderedPairIterator:hasNext()Z
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AndExpression;)V
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
jtb.syntaxtree.TypeParameters:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:eltsNotEqual([II)Z
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:gcd([I)I
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
utilMDE.OrderedPairIterator:setnext2()V
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.inv.Invariant:logDetail()Z
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_73()Z
jtb.syntaxtree.PostfixExpression:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.BlockStatement;)V
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant:prob_and(DDD)D
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
daikon.Debug:logOn()Z
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.ValueTuple:isMissing(I)Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_96()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_162()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReturnStatement;)V
daikon.tools.jtb.Ast:getParent(Ljava.lang.Class;Ljtb.syntaxtree.Node;)Ljtb.syntaxtree.Node; | ASSIGN | 30834 | = null
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.syntaxtree.Block:accept(Ljtb.visitor.Visitor;)V
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_2_17(I)Z
daikon.Quant:pairwiseGT([I[I)Z
jtb.syntaxtree.ClassOrInterfaceBody:ClassOrInterfaceBody(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeOptional;)V
jtb.syntaxtree.NodeListOptional:elements()Ljava.util.Enumeration;
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.VariableDeclaratorId:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3_19()Z
daikon.PptMap:asCollection()Ljava.util.Collection;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
jtb.syntaxtree.Literal:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3R_67()Z
jtb.JavaParser:jj_3_22()Z
daikon.VarInfo:isPointer()Z
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Fmt:i(I)Ljava.lang.Integer;
jtb.JavaParser:jj_3R_148()Z
jtb.JavaParser:jj_3R_80()Z
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:jj_3R_70()Z
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.Intern:internSubsequence([III)[I
daikon.Quant:memberOf(D[F)Z
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.UpperBoundCore:computeConfidence()D
jtb.syntaxtree.VariableDeclaratorId:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Name;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:lt(II)Z
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.FormalParameter:FormalParameter(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Type;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.PptTopLevel:getInvariants()Ljava.util.List;
jtb.JavaCharStream:getBeginLine()I
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.tools.jtb.Ast:getPackage(Ljtb.syntaxtree.CompilationUnit;)Ljava.lang.String;
jtb.JavaParser:jj_2_13(I)Z
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.syntaxtree.NodeListOptional:present()Z
daikon.VarInfoName:ioa_name()Ljava.lang.String;
jtb.syntaxtree.ReferenceType:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_149()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpression;)V
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
jtb.syntaxtree.ConditionalExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.PrimaryPrefix:accept(Ljtb.visitor.Visitor;)V
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
jtb.JavaParser:jj_3R_101()Z
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:memberOf(F[F)Z
jtb.syntaxtree.PackageDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
utilMDE.FuzzyFloat:isSubset([D[D)Z
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.ProglangType:isScalar()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Block;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
jtb.JavaParser:jj_3_28()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
jtb.JavaParser:jj_2_3(I)Z
daikon.Quant:eltsLteIndex([I)Z
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeListOptional:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
jtb.syntaxtree.TypeArgument:accept(Ljtb.visitor.Visitor;)V
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
jtb.JavaParser:jj_3R_87()Z
utilMDE.ArraysMDE:indexOf([II)I
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.Name:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.FormalParameters:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.MultiplicativeExpression:accept(Ljtb.visitor.Visitor;)V
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
jtb.syntaxtree.NodeToken:accept(Ljtb.visitor.Visitor;)V
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.RelationalExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
jtb.syntaxtree.InstanceOfExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.inv.Invariant:getConfidence()D
utilMDE.MathMDE:gcd(II)I
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.VarInfo:name()Ljava.lang.String;
jtb.JavaParser:VariableDeclaratorId()Ljtb.syntaxtree.VariableDeclaratorId;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.Quant:pairwiseEqual([I[I)Z
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.Type:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_86()Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3_1()Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
jtb.JavaParser:jj_3R_76()Z
daikon.diff.DetailedStatisticsVisitor:freq(II)D
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
jtb.JavaParser:jj_2_35(I)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_134()Z
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_2_5(I)Z
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
jtb.syntaxtree.ResultType:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_2_4(I)Z
utilMDE.MathMDE:gcd(JJ)J
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.tools.jtb.Ast:getClassName(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
jtb.JavaParser:jj_3R_180()Z
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.Quant:union([I[I)[I
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.ModBitTracker:split(I)I
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.ClassOrInterfaceDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
jtb.JavaParser:jj_3R_100()Z
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName:toString()Ljava.lang.String;
utilMDE.ArraysMDE:min_max([I)[I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
utilMDE.ArraysMDE:sorted([I)Z
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.Token:newToken(I)Ljtb.Token;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalAndExpression;)V
jtb.syntaxtree.ExclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalOrExpression;)V
daikon.Quant:eltsLTE([II)Z
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
utilMDE.FuzzyFloat:eq(DD)Z
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.Quant:subsetOf([J[J)Z
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.Quant:intersection([I[I)[I
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.Quant:memberOf(S[S)Z
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.inv.Invariant:justified()Z
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3_21()Z
jtb.JavaCharStream:GetImage()Ljava.lang.String;
jtb.JavaParser:jj_3R_85()Z
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.ProglangType:baseIsFloat()Z
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([I[II)Z
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeSequence;)V
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaCharStream:BeginToken()C
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfo:esc_name()Ljava.lang.String;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.RelationalExpression;)V
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.ValueSet:ValueSet(I)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltsGT([II)Z
daikon.Quant:eltwiseLT([I)Z
daikon.PptName:isEnterPoint()Z
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.inv.Invariants:Invariants()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBody;)V
utilMDE.ArraysMDE:concat([I[I)[I
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_119()Z
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
utilMDE.Intern:intern([J)[J
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
jtb.JavaParser:jj_3R_74()Z
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReferenceType;)V
jtb.syntaxtree.ClassOrInterfaceBody:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:mod_positive(JJ)J
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.VarInfoName:name()Ljava.lang.String;
daikon.Quant:eltsGtIndex([I)Z
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.ValueTuple:isMissingFlow(I)Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3_29()Z
jtb.JavaParser:jj_3_12()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.AdditiveExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.FuzzyFloat:lte(DD)Z
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.EqualityExpression;)V
jtb.JavaParser:jj_scan_token(I)Z
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
daikon.Quant:eltwiseNotEqual([I)Z
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
utilMDE.WeakHasherMap.EntrySet:size()I
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
jtb.JavaParser:jj_3R_69()Z
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ProglangType:isPseudoArray()Z
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:negate(I)I
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
utilMDE.WeakHasherMap:size()I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameters;)V
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.FuzzyFloat:gte(DD)Z
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
jtb.syntaxtree.FormalParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_3()Z
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
daikon.Quant:sameLength([I[I)Z
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
jtb.JavaParser:jj_3R_50()Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
utilMDE.ArraysMDE:indexOf([ZZ)I
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_99()Z
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.BlockStatement:accept(Ljtb.visitor.Visitor;)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
jtb.syntaxtree.TypeArguments:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaCharStream:backup(I)V
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.RootNode:RootNode()V
daikon.diff.InvMap:InvMap()V
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:lexLT([I[I)Z
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_98()Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Ppt:Ppt()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PostfixExpression;)V
daikon.Quant:lexLTE([I[I)Z
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
jtb.syntaxtree.ReturnStatement:accept(Ljtb.visitor.Visitor;)V
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eltwiseLTE([I)Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
jtb.JavaParser:jj_2_14(I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArguments;)V
daikon.ProglangType:isIntegral()Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
jtb.syntaxtree.Expression:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.ProglangType:isFloat()Z
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.MethodDeclarator:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern:internSubsequence([JII)[J
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ShiftExpression:accept(Ljtb.visitor.Visitor;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.Positive:enabled()Z
daikon.ModBitTracker:num_sets()I
jtb.syntaxtree.TypeDeclaration:TypeDeclaration(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3R_115()Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.ValueTuple:size()I
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Literal;)V
daikon.ProglangType:baseIsScalar()Z
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_62()Z
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3_36()Z
utilMDE.MathMDE:missing_numbers([I)[I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
utilMDE.ArraysMDE:sum([I)I
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
jtb.JavaParser:jj_3_30()Z
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
jtb.JavaParser:FormalParameter()Ljtb.syntaxtree.FormalParameter;
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.Quant:subsetOf([F[D)Z
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.ProglangType:baseIsIntegral()Z
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
jtb.syntaxtree.NodeOptional:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:ClassOrInterfaceDeclaration(Ljtb.syntaxtree.NodeChoice;Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ClassOrInterfaceBody;)V
daikon.Quant:pairwiseLT([I[I)Z
jtb.JavaParser:jj_3_14()Z
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
jtb.syntaxtree.TypeArguments:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_120()Z
jtb.syntaxtree.CompilationUnit:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:eq(II)Z
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
jtb.JavaParser:jj_3_27()Z
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.inv.Invariant:prob_and(DD)D
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
jtb.syntaxtree.ClassOrInterfaceType:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_ntk()I
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
jtb.syntaxtree.PrimaryExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
jtb.syntaxtree.NodeList:NodeList()V
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.MethodDeclaration:accept(Ljtb.visitor.Visitor;)V
utilMDE.TestUtilMDE.1InternTest:test(Z)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MultiplicativeExpression;)V
daikon.PptName:isCombinedExitPoint()Z
jtb.syntaxtree.TypeDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_136()Z
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
utilMDE.Options.OptionInfo:argument_required()Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;)V
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.JavaCharStream:getEndLine()I
daikon.Quant:gte(II)Z
jtb.syntaxtree.UnaryExpression:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeDeclaration;)V
daikon.Quant:eq(DD)Z
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_60()Z
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
jtb.syntaxtree.ClassOrInterfaceDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptSlice1:num_samples()I
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.Quant:eltwiseEqual([I)Z
daikon.Quant:eltsLT([II)Z
jtb.JavaParser:jj_3R_51()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclarator;)V
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
jtb.JavaParser:jj_2_10(I)Z
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
utilMDE.LimitedSizeIntSet:size()I
utilMDE.Intern:numIntArrays()I
jtb.syntaxtree.EqualityExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_123()Z
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3_4()Z
jtb.JavaCharStream:readChar()C
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.Quant:subsetOf([F[F)Z
utilMDE.MathMDE:modulus([I)[I
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_55()Z
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.Quant:subsetOf([S[S)Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
utilMDE.ArraysMDE:element_range([I)I
daikon.PptSlice2:arity()I
daikon.diff.InvMap:toString()Ljava.lang.String;
utilMDE.LimitedSizeIntSet:add(I)V
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.ProglangType:isArray()Z
jtb.JavaParser:jj_3R_210()Z
jtb.JavaParser:jj_3_16()Z
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_124()Z
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.JavaParser:jj_3R_61()Z
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameters;)V
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParser:jj_3R_72()Z
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:min([I)I
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.syntaxtree.InclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:jj_3R_68()Z
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.PptSlice0:arity()I
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.syntaxtree.TypeBound:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.ProglangType:dimensions()I
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
jtb.syntaxtree.NullLiteral:accept(Ljtb.visitor.Visitor;)V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.Quant:setDiff([I[I)[I
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
utilMDE.Assert:assertTrue(Z)V
daikon.Quant:noDups([I)Z
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.Quant:memberOf(J[J)Z
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:repr()Ljava.lang.String;
utilMDE.ArraysMDE:fn_is_total([I)Z
jtb.syntaxtree.ClassOrInterfaceBody:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltwiseGTE([I)Z
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
utilMDE.Intern:intern([D)[D
jtb.JavaParser:jj_3R_53()Z
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_77()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_122()Z
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:inPre()Z
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object; | RETURN | 76505 | return null
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PackageDeclaration;)V
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
jtb.syntaxtree.ConditionalAndExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
jtb.JavaCharStream:ReadByte()C
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.test.InvariantFormatTester:execute()Z
jtb.syntaxtree.AndExpression:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:isReverse([I[I)Z | CONDITION | 156037 | if (x) -> if (!x)
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InclusiveOrExpression;)V
jtb.JavaCharStream:UpdateLineColumn(C)V
jtb.JavaCharStream:FillBuff()V
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
jtb.JavaParser:jj_3R_161()Z
jtb.JavaParserTokenManager:MoreLexicalActions()V
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
utilMDE.Intern:intern([I)[I
utilMDE.MathMDE:mod_positive(II)I
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.Quant:subsetOf([I[I)Z
daikon.Quant:eltwiseGT([I)Z
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_125()Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.inv.Invariant:logOn()Z
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.CompilationUnit;)V
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:pairwiseDivides([I[I)Z
jtb.JavaParser:jj_3R_58()Z
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.Quant:eltsNotEqualIndex([I)Z
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
utilMDE.MathMDE:gcd_differences([I)I
jtb.syntaxtree.ImportDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Expression;)V
utilMDE.ArraysMDE:sum([[I)I
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
jtb.JavaParser:jj_2_18(I)Z
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
jtb.syntaxtree.NodeSequence:elements()Ljava.util.Enumeration;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.JavaParser:jj_3R_116()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalExpression;)V
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.ArraysMDE:subarray([III)[I
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:hashCode()I
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
jtb.JavaParser:jj_2_16(I)Z
daikon.VarInfo:new_ppt()V
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
daikon.Quant:eltsEqualIndex([I)Z
jtb.JavaParser:jj_2_1(I)Z
daikon.Quant:lexNotEqual([I[I)Z
daikon.VarInfoName.Add:amount()Ljava.lang.String;
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
jtb.syntaxtree.FormalParameter:accept(Ljtb.visitor.Visitor;)V
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameter;)V
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:jj_2_21(I)Z
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.Quant:setEqual([I[I)Z
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName.Slice:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.Quant:memberOf(I[I)Z
jtb.syntaxtree.NodeOptional:present()Z
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
utilMDE.SimpleLog:SimpleLog(Z)V
jtb.JavaParser:jj_3R_52()Z
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
1211 2 1095 4 1108 2 372 2 1208 2 1140 2 734 2 775 2 1371 2 
414 6 1345 2 134 2 36 6 613 2 160 2 1056 2 113 6 283 2 367 2 393 2 
1239 4 1211 2 1049 6 168 6 1063 6 301 2 514 4 189 2 242 6 1208 2 1106 2 856 2 443 2 
606 16 1211 6 917 2 760 10 1190 8 804 26 1134 10 8 2 1216 10 276 10 1328 4 1002 2 1278 6 722 2 444 12 1120 4 1363 4 325 8 559 16 1264 8 284 2 772 6 1208 6 386 2 497 2 913 16 892 8 1246 28 248 10 247 4 
656 4 438 6 
326 2 
676 2 1107 4 1188 2 2 2 836 2 167 2 394 2 722 2 810 2 577 4 1208 4 735 2 775 2 100 2 1344 2 1211 4 369 2 1249 2 700 2 591 2 275 2 1353 2 1137 2 236 2 467 2 862 2 60 2 1219 2 707 2 1179 2 1099 2 332 2 66 4 563 2 965 2 674 4 1183 2 910 2 603 2 1143 2 1185 2 1314 2 430 2 1270 2 
606 32 1211 4 625 6 760 16 1190 18 463 6 804 48 1134 16 105 4 215 2 1064 4 717 6 1216 6 124 4 276 16 719 6 1278 4 630 2 788 8 1236 4 444 22 723 2 324 6 1120 2 238 4 130 6 749 2 559 32 1033 4 1309 2 284 2 772 4 1208 4 1227 4 1369 2 913 32 248 16 892 6 1246 54 
567 2 1087 2 563 2 
554 2 692 22 836 2 28 2 346 2 171 2 781 2 1135 2 58 2 306 2 823 2 796 2 307 2 192 10 
819 2 606 2 820 2 760 2 1294 2 1040 2 1190 2 804 4 1134 2 1216 4 276 2 1278 2 127 2 176 2 809 2 444 2 1120 2 1096 2 559 2 940 2 913 2 248 2 1246 6 
1363 2 606 8 625 6 760 4 463 6 559 8 804 12 1134 4 1064 4 1136 2 124 4 276 4 913 8 1246 16 248 4 1204 2 444 4 
941 4 758 2 297 2 163 62 271 2 1251 2 166 10 1087 2 1137 4 981 2 594 4 107 2 1279 14 862 2 398 4 1302 4 111 2 1029 2 1221 4 1242 2 222 2 561 4 1155 2 282 2 333 2 598 10 425 4 963 2 618 2 563 8 1311 4 674 4 600 2 817 2 620 4 567 6 675 4 455 4 1105 2 408 2 
1319 2 1060 2 219 2 174 2 326 2 1048 2 492 2 1224 2 1367 2 1271 2 
835 2 607 2 433 1 679 2 838 1 611 2 250 24 5 1 1016 1 170 1 920 2 1110 2 172 2 436 2 253 2 1194 1 441 16 254 2 1197 2 1115 2 442 8 1200 6 534 2 768 2 1284 2 260 2 86 2 89 2 769 24 696 2 698 2 188 2 853 2 936 2 263 2 17 1 1129 2 538 1 96 2 1208 34 1131 2 265 8 938 2 541 1 458 2 942 1 1211 32 195 2 21 2 370 4 375 2 197 2 703 2 198 1 1045 3 783 12 200 2 1218 6 954 16 955 6 472 2 278 2 1138 2 557 2 1306 3 708 3 1307 2 961 2 562 2 206 2 794 3 380 2 1308 2 1226 2 1310 32 383 2 968 4 288 2 289 2 1055 2 971 2 869 4 32 2 290 2 870 2 295 2 1058 2 973 1 1322 4 803 4 977 3 1326 2 487 2 876 2 982 32 1233 2 1331 4 1150 16 1334 2 725 2 45 2 1243 3 135 2 225 2 578 2 1158 2 991 2 992 2 404 2 888 2 890 2 891 4 734 2 893 6 1247 2 994 3 409 2 662 2 737 2 1167 3 740 8 412 2 232 2 1253 2 57 2 1172 1 317 1 1260 1 747 3 904 2 1177 2 507 2 751 4 907 16 1180 2 1100 5 1365 3 427 3 512 1 1013 3 1103 2 601 12 516 2 245 2 757 2 159 2 1186 2 431 1 1014 2 
506 2 1208 2 
1208 4 1021 2 432 2 
351 2 
1015 2 1 2 678 62 344 4 345 2 680 8 682 94 683 2 684 2 349 30 686 2 10 2 350 2 1025 16 1026 44 354 2 352 2 356 2 13 2 359 2 1032 2 16 2 1035 8 1036 2 363 4 365 2 366 2 18 2 1039 2 20 2 1041 2 1043 2 22 2 1044 2 23 18 377 2 704 2 25 94 378 2 379 2 384 2 1054 2 389 4 1059 2 34 2 35 8 712 2 713 52 714 4 1062 2 716 2 39 14 1066 94 1068 2 1069 2 395 2 396 8 397 2 42 2 724 4 400 4 401 4 1074 2 726 56 47 54 727 2 728 94 729 2 49 94 731 94 1077 2 732 2 733 2 1080 2 51 2 1085 4 738 16 1086 2 739 94 413 12 56 2 1088 4 1090 2 419 2 1091 2 1092 4 420 2 61 4 1094 42 421 2 1097 2 1098 18 422 2 424 2 64 2 65 2 1101 2 1102 246 752 2 68 2 73 2 74 36 763 18 434 2 764 2 435 2 440 4 79 62 82 2 766 4 1117 2 1122 2 84 94 445 42 1125 2 87 2 1126 4 1127 2 451 14 449 56 771 94 92 4 452 4 93 2 774 2 454 4 457 2 456 2 459 2 99 8 101 2 104 4 103 2 102 2 1132 2 1133 12 464 2 778 12 779 2 466 2 785 2 789 2 470 50 790 16 471 34 791 4 792 2 793 2 112 4 795 2 1142 2 476 4 477 2 799 2 800 358 115 6 479 74 114 30 480 2 118 2 482 2 481 2 483 2 119 2 120 4 805 2 485 2 1146 2 122 2 123 2 121 4 1147 2 488 16 125 2 489 2 1151 2 131 4 1152 4 493 2 813 28 1159 2 138 2 139 2 140 22 142 2 1163 4 143 2 144 8 146 2 145 4 821 2 147 2 1168 4 501 2 150 2 1171 2 153 4 1173 2 156 2 504 2 511 4 515 2 830 2 1184 2 518 94 832 2 1187 14 520 2 521 12 522 2 523 2 165 2 524 4 839 2 841 2 526 86 529 6 528 12 530 2 531 4 1195 4 173 62 175 2 846 4 532 104 1199 4 177 2 533 2 179 2 180 18 181 2 182 2 535 2 851 4 536 2 186 8 537 2 1207 2 191 2 539 2 543 2 860 86 547 2 1217 2 549 2 863 20 864 2 553 2 1220 2 555 46 203 2 558 2 560 2 866 42 208 4 207 18 1225 44 210 2 211 56 212 2 213 2 867 74 868 2 568 2 1228 4 871 2 1229 2 1231 2 217 4 570 6 571 86 873 4 573 6 874 94 1235 18 576 4 224 6 882 4 579 4 226 10 885 2 580 2 886 4 889 6 581 2 583 96 1248 2 585 2 1250 4 894 2 588 2 590 2 589 2 592 30 1254 2 234 2 235 90 593 4 898 2 1259 246 237 2 1262 2 239 4 905 12 240 2 906 6 1265 2 1266 246 909 2 602 2 244 16 243 2 1267 2 1269 4 246 2 914 2 1273 4 916 2 1274 4 609 6 610 2 612 4 922 2 923 2 614 18 1276 48 1277 2 255 2 257 2 934 2 935 2 259 2 1285 2 261 4 262 2 616 2 619 2 1289 4 266 2 621 2 623 12 626 4 273 2 1295 2 627 2 628 2 948 96 1298 4 952 8 953 2 1300 2 632 2 956 2 633 2 634 4 1304 2 957 2 280 2 636 2 962 2 964 50 966 2 1312 2 639 44 967 2 287 4 1313 2 641 6 1317 2 643 2 974 4 1321 56 645 2 1323 18 647 2 976 2 300 2 1324 2 978 4 983 2 1329 2 651 2 1333 4 303 2 1337 2 985 2 653 22 1339 4 304 6 990 4 658 2 308 2 309 2 995 2 1346 4 663 2 1350 6 1351 2 998 50 999 2 315 2 1352 2 316 12 1355 4 1001 22 319 2 666 2 1360 50 1361 2 1004 6 1362 2 329 4 1010 18 671 2 672 2 1011 2 334 4 1368 4 335 6 336 2 337 4 1370 2 340 48 
312 2 847 2 929 1 1012 2 
1303 2 1012 2 
59 2 1328 2 1359 2 563 2 162 2 697 2 1012 2 
1359 2 1012 2 1354 2 
1359 2 1282 2 1012 2 
1263 2 847 2 
1359 2 1012 2 
209 2 216 2 
402 2 1012 2 
209 2 604 2 847 2 
1067 2 847 2 1000 2 
14 2 847 2 161 2 
847 2 98 2 465 2 
513 2 141 2 847 2 
209 2 1083 2 
806 2 1012 2 
1067 2 745 2 
14 2 902 2 
98 2 1283 2 
513 2 1223 2 
209 2 1338 2 
513 2 81 2 
784 2 98 2 
14 2 569 2 
1067 2 38 2 
209 2 604 2 4 2 847 2 
209 2 1340 2 604 2 4 2 847 2 
209 2 1297 2 847 2 
209 2 94 2 847 2 
1176 2 946 2 1017 2 1023 2 
753 2 149 2 563 2 162 2 
753 2 655 2 59 2 149 2 563 2 162 2 
1328 2 1209 2 1359 2 563 2 162 2 1012 2 
1212 2 1185 2 
1328 2 292 2 563 2 162 2 
744 2 98 2 
513 2 321 2 
1067 2 1084 2 
14 2 687 2 
513 2 884 2 14 2 
513 2 14 2 895 2 
513 2 14 2 314 2 
513 2 14 2 3 2 
1318 6 595 6 12 2 90 2 563 2 286 2 970 2 162 2 
209 2 859 2 
72 2 194 2 692 6 694 4 701 2 361 2 1215 2 979 2 106 2 548 2 302 2 572 2 1070 4 1112 2 1104 2 498 2 1130 2 277 2 
847 2 1111 2 
1129 2 
838 2 5 2 170 4 436 2 172 2 1197 2 1280 2 1200 2 1284 2 260 2 89 2 696 2 187 2 853 2 263 2 1208 26 96 2 1292 2 1038 2 938 2 265 2 1211 26 370 4 21 2 375 2 783 8 1218 4 955 2 557 6 961 4 1310 4 383 2 566 2 288 2 1315 2 869 2 290 2 32 2 972 2 295 2 293 2 1322 4 803 2 982 6 720 2 399 4 1331 4 1334 2 491 4 725 2 1336 2 48 2 1158 2 991 2 992 2 404 2 499 2 891 2 734 2 893 6 1247 2 737 2 662 2 409 2 228 2 57 2 154 2 751 4 907 6 1103 2 754 2 601 8 159 2 757 2 429 2 1014 2 
838 2 5 2 170 2 436 2 172 2 6 2 1197 2 925 2 1280 2 1200 2 1284 2 260 2 89 2 696 2 853 2 263 2 1208 26 96 2 1292 2 1038 2 938 2 265 2 1211 26 195 2 370 4 21 2 375 2 783 8 1218 6 955 2 557 6 961 4 1226 2 1310 4 383 2 566 2 288 2 1315 2 869 2 290 2 32 2 295 2 293 2 1322 4 803 2 982 6 720 2 399 4 1331 4 1334 2 491 4 725 2 1336 2 48 2 1158 2 991 2 992 2 404 2 499 2 891 2 734 2 893 6 1247 2 737 2 662 2 409 2 587 2 232 2 57 2 154 2 751 4 907 6 1103 2 754 2 601 8 757 2 159 2 429 2 1014 2 
615 2 
1076 2 761 2 
879 4 642 2 958 2 328 2 880 2 299 2 446 2 1061 2 36 2 1169 2 988 2 274 4 989 2 393 2 414 2 478 2 1056 2 903 2 
642 2 1322 2 299 2 1061 2 36 4 613 2 218 4 393 4 1019 2 807 4 1197 2 256 4 650 2 767 2 879 4 1153 2 880 2 446 2 850 2 448 2 988 2 695 4 989 2 617 2 1078 2 1208 12 584 2 893 4 54 2 1211 6 311 2 822 2 1169 2 274 4 375 2 57 2 1042 2 414 6 782 2 899 2 551 6 900 2 746 2 27 2 903 2 958 4 328 2 751 2 29 2 1366 2 1052 4 383 2 159 2 478 2 517 2 1056 4 160 2 290 2 113 6 32 2 
642 2 1322 2 299 2 1061 2 36 6 218 4 393 4 1019 2 807 4 1197 2 256 4 650 2 767 2 879 4 1153 2 880 2 446 2 850 2 448 2 988 2 695 4 989 2 617 2 1078 2 1208 12 584 2 893 4 367 2 54 2 1211 6 311 2 822 2 1169 2 274 4 375 2 57 2 1042 2 414 4 782 2 899 2 551 6 900 2 746 2 27 2 903 2 958 4 328 2 751 2 29 2 1366 2 1052 4 383 2 159 2 478 2 517 2 1056 4 160 2 290 2 113 6 32 2 
642 2 1322 2 299 2 1061 2 36 6 218 8 393 4 1019 2 807 4 1197 2 256 4 650 2 767 2 879 4 1153 2 880 2 446 2 850 2 448 2 988 2 695 4 989 2 617 2 1078 2 1208 12 584 2 893 4 54 2 1211 6 311 2 822 2 1169 2 274 4 375 2 57 2 1042 2 414 6 782 2 899 2 551 6 900 2 746 2 27 2 903 2 958 4 328 2 751 2 29 2 283 2 1366 2 1052 4 383 2 159 2 478 2 517 2 1056 4 160 2 290 2 113 6 32 2 
642 2 1322 2 299 2 1061 2 36 8 218 8 393 4 1019 2 807 4 1197 2 256 8 650 2 767 2 879 4 1153 2 880 2 446 2 850 2 448 2 988 2 695 4 989 2 617 2 1078 2 1208 12 584 2 893 4 367 2 54 2 1211 6 311 2 822 2 1169 2 274 4 375 2 57 2 1042 2 414 6 782 2 899 2 551 10 900 2 746 2 27 2 903 2 958 4 328 2 751 2 29 2 283 2 1366 2 1052 4 383 2 159 2 478 2 517 2 1056 4 160 2 290 2 113 8 32 2 
642 2 1322 2 299 2 1061 2 36 6 218 8 393 4 1019 2 807 4 1197 2 256 8 650 2 767 2 879 4 1153 2 880 2 446 2 850 2 448 2 988 2 695 4 989 2 617 2 1078 2 1208 12 584 2 893 4 54 2 1211 6 311 2 822 2 1169 2 274 4 375 2 57 2 1042 2 414 6 782 2 899 2 551 10 900 2 746 2 27 2 903 2 958 4 328 2 751 2 29 2 283 2 1366 2 1052 4 383 2 159 2 478 2 517 2 1056 4 160 2 290 2 113 6 32 2 
1019 2 1021 6 1197 2 9 6 178 4 1200 2 351 6 850 4 695 4 1208 46 367 4 195 2 1211 24 370 4 858 6 374 2 545 7 375 2 550 2 551 2 1218 6 27 4 706 4 202 2 556 6 557 6 29 2 1051 2 1226 2 1052 6 709 2 383 2 1056 4 32 2 869 2 33 2 1230 2 36 8 1061 2 218 2 393 4 1065 2 877 2 40 2 399 4 1234 2 44 1 879 4 880 2 48 4 1078 2 891 2 734 2 1081 6 893 6 584 2 1247 2 54 2 1082 1 737 2 233 1 57 2 414 4 899 2 900 2 746 2 596 6 418 2 903 2 62 6 241 2 751 4 907 6 597 6 601 4 757 2 429 2 249 2 251 2 436 12 765 8 75 2 77 2 1113 6 927 2 767 2 1118 2 930 1 1284 2 260 2 446 2 89 2 91 6 1288 10 448 2 617 2 263 2 453 2 938 2 265 2 1293 2 268 1 945 2 272 7 274 4 782 2 783 4 469 6 951 6 955 2 1301 2 958 4 960 2 1310 2 288 2 478 2 290 2 113 12 291 2 295 2 294 1 642 2 1322 4 299 2 801 6 803 2 486 2 807 8 982 8 648 6 650 2 1331 4 1334 2 1336 2 1153 2 494 1 988 2 1157 2 989 2 1158 2 991 2 992 2 499 2 1162 2 1164 2 311 2 662 2 822 2 664 2 1169 2 1175 2 1006 2 506 6 827 1 328 2 1366 2 159 2 517 2 160 4 1372 1 
249 2 251 2 436 12 765 8 75 2 1019 2 77 2 1021 6 1113 6 1197 2 9 6 927 2 767 2 1200 2 178 4 1118 2 351 6 1284 2 260 2 446 2 89 2 91 6 850 4 448 2 1288 10 695 4 617 2 263 2 453 2 1208 48 265 2 938 2 1293 2 1211 26 195 2 945 2 370 4 858 6 374 2 274 4 375 2 782 2 469 6 783 8 951 6 550 2 551 2 1218 6 27 4 955 2 706 4 202 2 1301 2 958 4 556 6 960 2 557 6 961 2 29 2 283 4 1051 2 1052 6 1226 2 1310 2 709 2 285 2 383 2 478 2 288 2 1056 4 291 2 869 4 113 12 32 2 290 2 295 2 642 2 33 2 1230 2 1322 4 299 2 801 6 1061 2 803 4 36 8 218 6 1065 2 486 2 393 4 807 8 40 2 877 2 648 6 982 8 650 2 1234 2 399 4 1331 4 1334 2 879 4 1336 2 1153 2 880 2 1075 2 48 4 988 2 1157 2 989 2 992 2 991 2 1158 2 1078 2 499 2 734 2 891 4 1081 6 1162 2 1164 2 584 2 893 6 1247 2 54 2 311 2 662 2 737 2 664 2 822 2 1169 2 57 2 414 8 1175 2 899 2 418 2 596 6 746 2 900 2 903 2 1006 2 506 6 62 6 328 2 241 2 907 6 751 4 597 6 1366 2 601 8 757 2 517 2 159 2 429 2 160 4 
249 2 251 2 436 12 765 8 75 2 1019 2 77 2 1021 6 1113 6 1197 2 9 6 927 2 256 4 767 2 1200 2 178 4 1118 2 351 6 1284 2 260 2 446 2 89 2 91 6 850 4 448 2 1288 10 695 4 617 2 263 2 453 2 1208 48 265 2 938 2 1293 2 1211 26 195 2 945 2 370 4 858 6 374 2 274 4 375 2 782 2 469 6 783 8 951 6 550 2 551 6 1218 6 27 4 955 2 706 4 202 2 1301 2 958 4 556 6 960 2 557 6 961 2 29 2 283 4 1051 2 1052 6 1226 2 1310 2 709 2 285 2 383 2 478 2 288 2 1056 4 291 2 869 4 113 12 32 2 290 2 295 2 642 2 33 2 1230 2 1322 4 299 2 801 6 1061 2 803 4 36 8 218 6 1065 2 486 2 393 4 807 8 40 2 877 2 648 6 982 8 650 2 1234 2 399 4 1331 4 1334 2 879 4 1336 2 1153 2 880 2 1075 2 48 4 988 2 1157 2 989 2 992 2 991 2 1158 2 1078 2 499 2 734 2 891 4 1081 6 1162 2 1164 2 584 2 893 6 1247 2 54 2 311 2 662 2 737 2 664 2 822 2 1169 2 57 2 414 8 1175 2 899 2 418 2 596 6 746 2 900 2 903 2 1006 2 506 6 62 6 328 2 241 2 907 6 751 4 597 6 1366 2 601 8 159 2 517 2 757 2 429 2 160 4 
0 2 842 2 1019 2 1021 12 1197 2 9 6 178 4 1200 4 351 12 353 6 850 4 695 4 1208 52 367 2 368 6 195 2 1211 24 370 4 858 12 374 2 375 2 550 2 551 6 1218 6 201 6 27 4 706 4 202 2 556 6 557 8 29 2 1051 2 1226 2 1052 6 709 2 383 2 1056 4 32 2 869 4 711 2 388 6 33 2 1230 2 36 10 1061 2 218 6 393 4 1065 2 877 2 40 2 399 6 879 4 221 2 880 2 1075 2 48 4 1078 2 891 4 734 2 1081 12 893 6 584 2 1247 2 54 2 737 2 896 6 57 2 414 10 899 2 900 2 746 2 596 6 418 2 903 2 62 6 241 2 751 4 907 8 597 6 601 10 69 6 757 2 429 4 249 2 251 2 613 2 436 10 765 8 75 2 77 2 1113 6 927 2 256 4 767 2 1118 2 1284 2 260 2 446 2 89 2 91 6 448 2 1288 8 617 2 263 2 453 2 938 2 265 4 1293 2 945 2 274 4 782 2 783 10 469 6 951 6 955 4 1301 2 958 4 960 2 961 2 283 4 1310 4 285 2 288 2 478 2 640 6 291 2 113 16 290 2 295 2 642 2 298 2 1322 4 299 2 801 6 803 4 486 2 807 8 980 2 982 12 648 12 650 2 1331 4 1334 2 1336 2 1153 2 988 2 1157 2 989 2 1158 2 991 2 992 2 499 2 500 6 1162 2 1164 2 1343 2 311 2 997 2 662 2 664 2 822 2 1169 2 1175 2 667 6 1006 2 506 12 328 2 1366 2 517 2 159 2 160 4 
642 2 54 2 311 2 299 2 36 6 274 2 218 6 1019 2 393 4 414 6 807 2 782 2 551 4 899 2 746 2 900 2 256 4 650 2 879 2 1153 2 328 2 880 2 446 2 29 2 695 2 283 2 1052 2 989 2 1208 4 517 2 478 2 160 2 1056 4 113 4 584 2 
436 4 1019 2 1197 2 1200 3 1284 2 260 2 446 2 89 2 1288 2 695 2 617 2 263 2 1129 2 1208 28 364 2 1211 24 195 2 370 4 274 2 375 2 782 2 551 2 1218 6 955 3 557 6 474 2 29 2 283 2 1052 2 1308 2 1226 2 1310 3 383 2 288 2 478 2 1056 4 113 4 32 2 290 2 295 2 642 2 1322 4 299 2 36 6 218 6 393 4 807 2 982 8 1233 2 650 2 399 4 1234 2 1331 4 879 2 1334 2 1336 2 1153 2 880 2 48 2 989 2 1158 2 991 2 992 2 499 2 734 2 893 6 584 2 1247 2 54 2 311 2 661 3 737 2 662 2 57 2 1255 2 414 6 417 2 899 2 746 2 900 2 901 2 328 2 751 4 907 6 757 2 159 2 517 2 1186 2 160 2 
642 2 1322 2 299 2 1061 2 36 6 218 8 393 4 1019 2 807 4 1197 2 256 8 650 2 767 2 879 4 1153 2 880 2 446 2 850 2 448 2 988 2 695 4 989 2 617 2 1078 2 1208 12 584 2 893 4 54 2 1211 6 311 2 822 2 1169 2 274 4 375 2 57 2 1042 2 414 6 782 2 899 2 551 10 900 2 746 2 27 2 903 2 958 4 328 2 751 2 29 2 283 2 1366 2 1052 4 383 2 159 2 478 2 517 2 1056 4 160 2 290 2 113 6 32 2 
642 2 1322 2 299 2 1061 2 36 6 613 2 218 8 393 4 1019 2 807 4 1197 2 256 8 650 2 767 2 879 4 1153 2 880 2 446 2 850 2 448 2 988 2 695 4 989 2 617 2 1160 2 1078 2 1208 12 659 2 540 4 584 2 893 4 1211 6 54 2 311 2 822 2 1169 2 274 4 375 2 57 2 414 8 782 2 899 2 551 10 900 2 27 2 903 2 958 4 328 2 751 2 29 2 283 2 1366 2 1052 4 383 2 159 2 478 2 517 2 1056 4 160 2 290 2 113 8 32 2 
782 2 773 2 29 2 
782 2 773 2 29 2 
249 2 613 4 170 2 436 4 1019 2 1197 2 688 2 83 2 256 4 767 2 178 2 1284 2 260 2 360 2 446 2 89 2 850 2 1288 2 695 2 263 2 773 2 1208 24 938 4 367 4 1211 16 195 2 370 4 375 2 274 2 782 6 783 4 1299 2 551 6 552 4 1218 6 27 4 706 2 1301 2 1139 2 958 4 960 2 204 2 557 2 29 4 283 4 1052 4 1226 2 1310 2 383 2 288 2 1056 4 869 4 290 2 32 2 113 16 295 2 1322 4 803 4 36 12 37 2 218 6 393 4 807 4 575 2 1327 2 982 2 1331 4 1334 2 879 2 811 2 1336 2 880 4 48 6 136 4 989 2 1158 2 991 2 992 2 1078 2 499 2 891 4 734 2 893 6 1247 2 1165 2 1347 2 737 2 1349 2 822 2 148 2 1169 2 57 2 414 12 900 2 903 2 668 2 751 4 907 2 670 2 597 2 601 4 754 4 757 2 159 2 160 4 915 2 
1211 2 1347 2 204 2 1230 2 664 2 1288 2 347 2 597 2 436 2 988 2 1076 2 1244 2 950 2 1208 4 1197 2 706 2 915 2 
249 2 613 4 436 2 1019 2 924 2 1197 2 688 2 83 4 256 4 767 2 178 2 1284 2 260 2 446 2 89 2 850 4 695 2 263 2 773 2 1208 24 938 4 367 4 1211 16 195 2 370 4 375 2 274 2 782 6 783 4 551 6 552 4 1218 6 27 4 1301 2 1139 2 958 4 960 2 204 2 557 2 29 4 283 4 1052 4 1226 2 1310 4 383 2 288 2 798 2 1056 4 869 4 290 2 32 2 113 16 295 2 1322 4 803 4 36 12 218 6 393 4 807 4 575 2 982 2 1331 4 1334 2 879 2 811 2 1336 2 880 4 48 6 136 4 989 2 1158 2 991 2 992 2 1078 2 499 2 891 4 734 2 893 6 1247 2 1165 2 1166 2 1347 2 737 2 1349 2 822 2 148 2 1169 2 57 2 414 12 416 2 900 2 903 2 668 2 751 4 907 2 670 2 597 2 1366 2 908 2 601 4 754 4 757 2 159 2 160 4 915 2 
249 2 613 4 170 1 436 4 1019 2 1197 2 688 2 83 2 256 4 767 2 178 2 1284 2 260 2 446 2 89 2 850 4 1288 2 695 2 263 2 773 2 1208 24 938 4 367 4 1211 16 195 2 370 4 373 2 375 2 274 2 782 6 783 4 551 6 552 4 1218 6 27 4 706 2 1301 2 1139 2 958 4 960 2 204 2 557 2 29 4 283 4 1052 4 1226 2 1310 2 383 2 288 2 1056 4 869 4 290 2 32 2 113 16 295 2 1322 4 803 4 36 12 218 6 393 4 807 4 575 2 220 2 982 2 1331 4 1334 2 879 2 811 2 1336 2 880 4 305 2 48 6 136 4 989 2 1158 2 991 2 992 2 1078 2 499 2 891 4 734 2 893 6 1247 2 1165 2 1347 2 737 2 1349 2 822 2 148 2 1169 2 57 2 414 12 1257 2 320 2 900 2 903 2 668 2 751 4 907 2 670 2 597 2 1366 2 601 4 754 4 757 2 159 2 160 4 915 2 
0 2 1189 2 1190 4 840 2 838 2 5 2 170 1 842 2 527 14 7 2 844 2 1192 10 348 2 1197 2 1022 3 1198 2 1200 16 848 2 1027 2 691 6 849 2 184 2 1206 3 1034 4 854 24 1208 38 1037 2 1038 2 19 2 542 4 1211 30 195 5 857 2 371 4 370 8 544 4 196 1 375 2 376 12 199 2 550 2 1218 15 705 2 1046 10 202 2 557 14 1050 2 559 4 561 2 381 1 1226 5 383 2 566 2 387 2 32 2 711 2 1057 2 391 4 215 4 1064 4 718 4 574 2 875 2 720 2 398 2 399 12 1073 2 221 2 46 2 48 2 730 12 50 16 405 2 1079 2 407 2 734 4 1245 4 1246 8 893 6 1247 4 586 2 410 2 737 4 411 2 230 16 231 2 57 2 1255 2 741 2 743 2 417 2 1261 2 901 2 1093 2 423 2 241 2 907 14 751 4 67 2 911 4 601 22 756 4 428 1 757 2 1268 4 429 46 913 4 248 2 606 4 759 2 760 2 1275 4 1109 12 762 2 252 12 436 2 75 4 1114 2 926 2 1280 2 928 2 931 2 444 4 1119 2 932 2 1121 1 1284 4 85 12 260 2 1124 4 1287 2 89 2 88 3 263 2 95 2 620 2 453 2 1292 2 938 4 265 18 97 3 941 2 944 2 460 2 625 6 461 2 777 2 1134 2 780 6 1296 2 783 22 276 2 949 2 955 19 954 4 631 10 108 16 959 2 474 2 637 2 475 2 1310 19 969 1 288 2 1315 2 290 2 295 2 293 2 298 2 1320 2 1322 4 484 4 802 2 804 6 486 2 980 2 982 28 649 4 128 2 1331 8 1334 2 1150 4 132 2 1154 2 986 2 1157 2 495 2 816 2 1158 4 991 2 992 2 499 2 1342 2 1343 2 310 2 996 2 661 2 662 2 1348 3 152 12 154 12 318 2 1356 2 155 2 1003 2 157 2 825 2 1005 2 508 16 330 12 1364 10 331 2 1009 2 1181 2 158 2 159 2 675 2 338 10 833 14 342 12 
1211 2 759 2 662 2 1348 2 762 2 743 2 1192 2 982 2 786 2 955 2 631 4 1200 2 399 2 1119 2 1073 2 132 2 557 2 907 2 184 2 475 2 1310 2 1208 2 429 6 338 2 
1211 2 759 2 662 2 1348 2 762 2 743 2 1192 2 982 2 786 2 955 2 631 4 1200 2 399 2 1119 2 1073 2 132 2 557 2 907 2 184 2 475 2 1310 2 1208 2 429 6 338 2 
1211 2 759 2 662 2 1348 2 762 2 743 2 1192 2 982 2 786 2 955 2 631 4 1200 2 399 2 1119 2 1073 2 132 2 557 2 907 2 184 2 475 2 1310 2 1208 2 429 6 338 2 
606 2 1211 4 677 3 760 2 662 2 525 4 804 4 1134 2 762 2 151 2 742 2 1148 2 276 2 1358 2 982 2 878 2 954 2 955 3 1201 4 1150 2 1123 2 1335 2 1124 2 88 3 559 2 281 2 770 4 815 2 1310 3 883 2 772 2 755 4 1208 10 97 3 913 2 248 2 1246 6 892 4 53 4 1316 6 
606 2 677 2 760 2 1190 2 525 4 804 4 762 2 1148 2 982 2 878 2 1201 4 444 2 1150 2 1123 2 1335 2 1124 2 88 2 770 4 815 2 883 2 772 2 1208 10 97 2 892 4 1246 4 53 4 1211 4 662 2 1134 2 742 2 151 2 1358 2 276 2 955 2 954 2 559 2 281 2 1310 2 284 2 755 4 913 2 248 2 1316 6 
606 2 677 2 760 2 1190 2 525 4 804 4 762 2 1148 2 982 2 878 2 1201 4 444 2 1150 2 1123 2 1335 2 1124 2 88 2 770 4 815 2 883 2 772 2 1208 10 97 2 892 4 1246 4 53 4 1211 4 662 2 1134 2 742 2 151 2 1358 2 276 2 955 2 954 2 559 2 281 2 1310 2 284 2 755 4 913 2 248 2 1316 6 
606 2 677 2 760 1 1190 1 525 2 804 3 762 2 1148 1 982 2 878 1 1201 2 444 2 1150 2 1123 1 1335 1 1124 2 88 2 770 2 815 2 883 2 772 2 1208 7 97 2 892 3 1246 3 53 2 1211 3 662 2 1134 1 742 1 151 1 1358 2 276 1 955 2 954 2 559 2 281 2 1310 2 284 1 755 2 913 2 248 1 1316 4 
606 2 677 2 760 1 1190 2 525 2 804 3 762 2 1148 1 982 2 878 1 1201 2 444 3 1150 2 1123 1 1335 1 1124 2 88 2 770 2 815 2 883 2 772 2 1208 7 97 2 892 3 1246 3 53 2 1211 3 662 2 1134 1 742 1 151 1 1358 2 276 1 955 2 954 2 559 2 281 2 1310 2 284 2 755 2 913 2 248 1 1316 4 
1128 2 137 2 797 2 637 2 185 2 984 2 
137 2 1210 2 565 2 154 2 1222 2 818 2 1232 2 
943 2 297 1 1211 8 660 2 858 2 390 2 861 2 1252 2 439 1 76 2 503 1 787 2 1332 2 690 1 933 2 111 1 1030 2 447 2 1182 2 852 2 1208 10 159 2 939 2 267 2 582 2 116 2 
606 2 625 4 760 3 46 2 559 4 804 4 1134 3 986 2 947 2 1034 2 1018 2 1064 2 772 2 276 2 430 2 913 4 248 3 1246 6 444 1 
1205 2 624 2 1211 1 1007 7 1286 2 205 2 525 2 770 2 509 4 921 2 843 2 468 2 1208 1 126 2 43 1 109 2 1201 2 1149 2 
1205 2 624 4 1007 6 1286 2 205 2 525 2 770 2 509 4 921 2 843 2 468 2 126 2 109 4 1201 2 1149 4 
1205 2 624 8 1211 1 1007 10 1286 6 205 2 525 2 770 2 509 4 921 2 843 2 468 8 1208 1 126 2 43 1 109 8 1201 2 1149 8 
1205 2 624 2 1007 2 205 2 525 2 770 2 509 2 921 2 843 2 126 2 109 2 1201 2 1149 2 
608 2 169 2 170 2 1193 2 1020 2 685 1 845 2 1203 2 1284 2 85 4 362 3 1290 2 1291 2 264 2 1208 26 193 2 1211 26 195 2 370 8 546 2 1214 2 702 2 783 16 1218 20 635 2 1226 2 564 2 31 2 117 4 1320 2 214 2 392 2 1071 2 1330 2 1331 8 1238 2 1241 4 1154 2 133 2 1156 4 495 2 881 2 1158 2 887 2 406 4 1247 2 313 2 229 2 897 2 1170 2 665 2 1258 2 1357 2 505 2 323 2 748 2 327 2 750 2 426 2 912 2 519 2 
296 2 164 2 1320 2 169 6 214 2 918 2 170 2 1193 2 1196 4 1116 2 1330 2 1281 2 1331 14 1238 2 11 4 1121 2 258 2 1284 2 85 10 1154 2 183 2 15 2 654 4 987 4 450 2 495 2 362 2 1158 2 1208 28 406 2 937 4 855 4 1341 6 1247 2 195 8 1211 26 370 14 230 2 1213 2 1214 2 1170 2 502 2 415 2 783 14 24 4 505 6 1218 36 1089 2 322 4 108 10 1047 2 327 2 1178 2 750 6 865 2 381 2 1226 8 673 2 969 6 428 2 519 2 117 8 
164 4 608 2 837 50 169 16 1191 92 918 2 919 10 170 2 1193 2 1020 6 1196 4 845 4 1116 10 1281 2 1024 6 1203 4 1202 24 689 6 11 6 1121 10 693 18 1284 14 85 34 357 84 1031 10 183 2 15 2 362 16 450 4 264 6 1208 150 190 6 937 6 855 8 269 2 1211 134 195 58 370 88 776 4 1213 2 462 26 1214 36 546 4 783 28 24 6 629 4 1218 248 26 2 108 22 110 8 1047 10 473 8 279 4 635 4 865 2 1141 4 1226 58 381 7 382 90 564 4 30 6 385 4 638 6 969 15 710 42 117 124 296 10 1320 8 1144 6 214 18 975 24 715 42 392 4 872 2 808 6 1071 6 1330 2 41 4 490 6 1331 112 721 8 1238 10 1072 6 652 4 1240 4 812 24 1154 8 403 90 133 6 654 6 987 6 814 2 495 8 1158 8 993 2 496 24 887 2 406 6 1161 4 1341 8 52 12 1247 14 55 6 230 4 897 4 1170 2 665 12 502 4 415 2 1258 6 1174 4 505 16 1089 2 322 6 826 6 669 26 1178 2 63 10 750 16 828 4 673 10 426 4 829 4 428 7 831 24 519 2 71 24 
605 2 296 2 834 2 343 2 644 2 1320 2 169 4 214 2 918 2 646 2 919 2 1145 4 170 2 681 2 437 4 1325 2 78 2 1193 2 80 2 1116 2 1330 2 1202 2 1331 20 721 2 1237 2 1238 2 11 2 258 2 355 2 1028 2 129 2 1284 2 1031 2 358 2 812 2 1154 2 654 2 987 2 223 2 362 2 495 2 1158 2 1290 2 657 2 1208 46 406 2 937 2 1341 6 227 2 1247 2 622 2 270 2 195 6 1211 44 370 20 736 2 699 2 229 2 1214 2 1296 4 702 2 1170 2 1256 2 783 36 24 2 505 4 1218 48 322 2 824 2 1047 2 748 2 1305 4 1008 2 327 2 1178 2 63 2 330 6 750 4 599 2 673 2 828 2 1053 2 1226 6 510 2 31 2 519 2 71 2 70 2 339 2 341 2 117 6 
1272 2 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.ClassCastException 1267 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 156 1314 703 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_0()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_1()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_2()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_3()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_4()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_5()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_6()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_7()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_8()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_9()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_10()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_11()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_12()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_13()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_14()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_15()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_16()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_17()V PASSED
daikon.test.split.SplitterFactoryTest:testmisc_Fib_main_18()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_19()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_20()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_21()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_22()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_23()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_24()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_25()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_26()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_27()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_28()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_29()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_30()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_31()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_32()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__33()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__34()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__35()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__36()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__37()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__38()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__39()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__40()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__41()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__42()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__43()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
jtb.syntaxtree.TypeDeclaration:TypeDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_1()Z
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
utilMDE.ArraysMDE:indexOf([ZZ)I
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.PptTopLevel.CondIterator:hasNext()Z
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
utilMDE.LimitedSizeIntSet:add(I)V
daikon.ModBitTracker:split(I)I
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.Intern:intern([J)[J
jtb.syntaxtree.TypeBound:accept(Ljtb.visitor.Visitor;)V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_63()Z
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
jtb.syntaxtree.TypeParameters:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_96()Z
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeDeclaration;)V
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
utilMDE.MathMDE:modulus([I)[I
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.Quant:memberOf(F[D)Z
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
jtb.JavaParser:jj_3R_121()Z
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.ProglangType:isPseudoArray()Z
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.PptSlice1:num_samples()I
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
jtb.syntaxtree.RelationalExpression:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:lt(II)Z
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.PptName:isEnterPoint()Z
jtb.JavaParser:jj_3_29()Z
daikon.Quant:subsetOf([D[D)Z
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3_18()Z
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_122()Z
utilMDE.Options.OptionInfo:argument_required()Z
jtb.JavaParser:jj_3R_75()Z
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.VarInfoName:simplify_name()Ljava.lang.String;
utilMDE.MathMDE:gcd([I)I
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_125()Z
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameters;)V
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.Quant:union([I[I)[I
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameter;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Name;)V
jtb.syntaxtree.UnaryExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE:sign(I)I
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.Quant:memberOf(D[F)Z
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:lexLTE([I[I)Z
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3_5()Z
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
jtb.syntaxtree.FormalParameter:FormalParameter(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Type;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.VariableDeclaratorId;)V
jtb.JavaParser:jj_3R_162()Z
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_124()Z
jtb.JavaParser:getToken(I)Ljtb.Token;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.InclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:noDuplicates([I)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([II)I
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ShiftExpression;)V
jtb.syntaxtree.Statement:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.VariableDeclaratorId:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
utilMDE.MathMDE:negate(I)I
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptSlice0:initInvariantsSeen()V
jtb.syntaxtree.NodeListOptional:elements()Ljava.util.Enumeration;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_10()Z
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;)V
daikon.Quant:lexEqual([I[I)Z
utilMDE.Intern:intern([D)[D
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.PptSlice0:arity()I
jtb.JavaParser:jj_3R_86()Z
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
jtb.syntaxtree.NodeListOptional:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.test.FormatTestCase:passes()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AdditiveExpression;)V
utilMDE.Intern:intern([I)[I
jtb.JavaParser:jj_2_4(I)Z
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_148()Z
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.inv.filter.ParentFilter:ParentFilter()V
jtb.syntaxtree.TypeArguments:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
utilMDE.MathMDE:gcd(II)I
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
jtb.syntaxtree.NodeList:NodeList()V
jtb.JavaParser:jj_3R_69()Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_114()Z
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Fmt:i(I)Ljava.lang.Integer;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
jtb.JavaParser:jj_3R_73()Z
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:concat([I[I)[I
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:isSubset([D[D)Z
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.VarInfo:name()Ljava.lang.String;
jtb.JavaParser:jj_2_14(I)Z
jtb.JavaParser:jj_3_19()Z
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MultiplicativeExpression;)V
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:internSubsequence([JII)[J
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeBound;)V
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameters;)V
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3_28()Z
daikon.Quant:intersection([I[I)[I
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
utilMDE.ArraysMDE:subarray([JII)[J
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
utilMDE.OrderedPairIterator:setnext2()V
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.inv.Invariant:prob_and(DD)D
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
utilMDE.MathMDE:pow(II)I
jtb.syntaxtree.FormalParameter:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
jtb.syntaxtree.AdditiveExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:eq(FF)Z
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ConditionalAndExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_149()Z
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
jtb.JavaParser:jj_3R_81()Z
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.Quant:subsetOf([F[F)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:isLiteralConstant()Z
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeSequence:elements()Ljava.util.Enumeration;
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBody;)V
daikon.VarInfoName:hashCode()I
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.JavaParser:jj_3R_56()Z
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:jj_3R_62()Z
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PackageDeclaration;)V
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
jtb.syntaxtree.CompilationUnit:CompilationUnit(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:eltsLteIndex([I)Z
utilMDE.ArraysMDE:sum([D)D
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
jtb.syntaxtree.ClassOrInterfaceBody:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.Invariants:Invariants()V
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.ModBitTracker:num_vars()I
jtb.JavaParser:FormalParameter()Ljtb.syntaxtree.FormalParameter;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
jtb.JavaParser:jj_3R_53()Z
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
jtb.JavaParser:jj_3R_116()Z
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_2_17(I)Z
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
jtb.JavaParser:jj_3R_137()Z
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.Quant:memberOf(J[J)Z
jtb.JavaParser:jj_3R_180()Z
utilMDE.FuzzyFloat:gte(DD)Z
utilMDE.ArraysMDE:sum([I)I
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.ValueTuple:isMissingFlow(I)Z
jtb.JavaParser:jj_3R_52()Z
jtb.JavaParser:jj_2_15(I)Z
daikon.Quant:pairwiseSquare([I[I)Z
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.Quant:subsetOf([I[I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArguments;)V
daikon.ProglangType:baseIsScalar()Z
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.filter.ObviousFilter:ObviousFilter()V
jtb.syntaxtree.PrimaryExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
jtb.syntaxtree.Expression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_27()Z
jtb.syntaxtree.PackageDeclaration:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE:missing_numbers([I)[I
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
utilMDE.FuzzyFloat:lte(DD)Z
utilMDE.ArraysMDE:isSubset([D[D)Z
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.Quant:pairwiseLT([I[I)Z
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReferenceType;)V
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
utilMDE.ArraysMDE:max([I)I
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.JavaParser:jj_3_17()Z
daikon.Quant:pairwiseGT([I[I)Z
jtb.JavaParser:jj_2_18(I)Z
daikon.Quant:subsetOf([J[J)Z
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
jtb.JavaParser:jj_3R_118()Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.Quant:eq(DD)Z
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_161()Z
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:eltwiseEqual([I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Expression;)V
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_101()Z
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
jtb.JavaCharStream:getBeginLine()I
jtb.syntaxtree.BlockStatement:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalOrExpression;)V
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
jtb.JavaParser:jj_2_3(I)Z
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.Quant:eltwiseLTE([I)Z
daikon.Quant:pairwiseDivides([I[I)Z
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
jtb.syntaxtree.ConditionalOrExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.Quant:setEqual([I[I)Z
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_2_1(I)Z
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.Quant:memberOf(S[S)Z
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_210()Z
jtb.JavaParser:jj_3R_119()Z
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.Quant:eltsNotEqual([II)Z
daikon.ProglangType:baseIsIntegral()Z
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.Quant:pairwiseEqual([I[I)Z
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ValueTuple:isMissing(I)Z
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
daikon.inv.Invariant:logOn()Z
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
utilMDE.LimitedSizeIntSet:size()I
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
jtb.JavaParser:jj_3R_123()Z
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
jtb.JavaParser:jj_3R_106()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaCharStream:getBeginColumn()I
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.inv.unary.LowerBoundCore:computeConfidence()D
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
utilMDE.ArraysMDE:subarray([III)[I
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_115()Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
jtb.JavaParser:jj_3R_85()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Literal;)V
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;)V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_2_25(I)Z
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
utilMDE.MathMDE:mod_positive(II)I
utilMDE.ArraysMDE:indexOf([I[I)I
jtb.JavaParser:jj_3R_70()Z
jtb.JavaParser:jj_2_16(I)Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.RelationalExpression;)V
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:lexLT([I[I)Z
daikon.Quant:isReverse([I[I)Z
jtb.JavaParser:jj_3R_108()Z
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
jtb.JavaParser:jj_3R_107()Z
utilMDE.MathMDE:gcd(JJ)J
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.ModBitTracker:num_sets()I
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Modifiers;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
jtb.JavaParser:jj_3R_109()Z
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
jtb.JavaParser:jj_2_13(I)Z
daikon.Quant:subsetOf([D[F)Z
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
daikon.Quant:concat([I[I)[I
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
jtb.JavaCharStream:getEndColumn()I
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ExclusiveOrExpression;)V
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.VarInfoName:isLiteralConstant()Z
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.FuzzyFloat:eq(DD)Z
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaCharStream:readChar()C
daikon.inv.Invariant:prob_is_ge(DD)D
jtb.JavaParser:jj_3R_120()Z
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_135()Z
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
utilMDE.ArraysMDE:min([I)I
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.VarInfo:new_ppt()V
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Statement;)V
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.ClassOrInterfaceType:accept(Ljtb.visitor.Visitor;)V
daikon.inv.Invariant:isWorthPrinting()Z
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.PptSlice2:arity()I
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3_21()Z
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
jtb.JavaCharStream:backup(I)V
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
utilMDE.ArraysMDE:sorted([I)Z
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName:esc_name()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalExpression;)V
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.ProglangType:isScalar()Z
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_55()Z
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.Quant:ne(II)Z
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InclusiveOrExpression;)V
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
jtb.JavaParser:jj_3R_48()Z
utilMDE.ArraysMDE:min_max([I)[I
jtb.syntaxtree.NodeListOptional:present()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;)V
jtb.JavaParser:jj_3R_77()Z
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.ValueTuple:size()I
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NullLiteral;)V
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:sameLength([I[I)Z
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.CompilationUnit:accept(Ljtb.visitor.Visitor;)V
daikon.diff.PrintAllVisitor:bufPrintln()V
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
utilMDE.MathMDE:pow_fast(II)I
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eltsEqual([II)Z
daikon.Quant:slice([III)[I
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.PptName:isCombinedExitPoint()Z
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltwiseGT([I)Z
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:eltsGteIndex([I)Z
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.diff.Node:Node()V
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
jtb.Token:newToken(I)Ljtb.Token;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ResultType;)V
jtb.JavaParser:jj_3R_110()Z
daikon.test.InvariantFormatTester:execute()Z
daikon.Quant:subsetOf([B[I)Z
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
jtb.JavaCharStream:BeginToken()C
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltwiseLT([I)Z
jtb.syntaxtree.ClassOrInterfaceDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
jtb.JavaParser:jj_3R_50()Z
daikon.tools.jtb.Ast:getParent(Ljava.lang.Class;Ljtb.syntaxtree.Node;)Ljtb.syntaxtree.Node; | CONDITION | 30878 | if (x) -> if (!x)
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
jtb.syntaxtree.Name:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:jj_3_12()Z
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
utilMDE.ArraysMDE:sum([[I)I
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
jtb.JavaParser:jj_3R_97()Z
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:lexGT([I[I)Z
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaCharStream:ReadByte()C
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.Quant:eq(JJ)Z
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryPrefix;)V
jtb.JavaParser:jj_3R_72()Z
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:setDiff([I[I)[I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.EqualityExpression;)V
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
utilMDE.TestUtilMDE:lsis_test(I)V
jtb.JavaParser:jj_3R_47()Z
utilMDE.Intern:numIntArrays()I
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.test.TestAst.ClassOrInterfaceDeclarationHarvester:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
jtb.JavaParser:jj_3R_117()Z
jtb.syntaxtree.ClassOrInterfaceBody:ClassOrInterfaceBody(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.Quant:lexGTE([I[I)Z
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_scan_token(I)Z
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String; | CONDITION | 3378 | if (x) -> if (!x)
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
jtb.JavaParser:jj_2_5(I)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
jtb.syntaxtree.VariableDeclaratorId:VariableDeclaratorId(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_2_35(I)Z
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InstanceOfExpression;)V
jtb.syntaxtree.EqualityExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.Quant:eltsGTE([II)Z
utilMDE.FuzzyFloat:ne(DD)Z
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.Ppt:Ppt()V
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.JavaParser:jj_3_36()Z
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:eltsLT([II)Z
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.Invariant:prob_and(DDD)D
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.TypeDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.ModBitTracker:num_samples()I
jtb.JavaParser:jj_2_21(I)Z
jtb.syntaxtree.NodeOptional:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.syntaxtree.MultiplicativeExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_99()Z
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_74()Z
jtb.syntaxtree.TypeArguments:TypeArguments(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeArgument;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaCharStream:getEndLine()I
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName:toString()Ljava.lang.String;
jtb.syntaxtree.NodeSequence:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_25()Z
jtb.JavaParser:jj_3R_164()Z
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_61()Z
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaCharStream:FillBuff()V
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.Quant:eltsEqualIndex([I)Z
jtb.syntaxtree.AndExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakHasherMap.EntrySet:size()I
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
utilMDE.UtilMDE:lineNumberFileReader(Ljava.lang.String;)Ljava.io.LineNumberReader;
jtb.syntaxtree.ImportDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
utilMDE.Intern:internStrings([Ljava.lang.String;)V
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
jtb.syntaxtree.TypeArgument:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.Node:Node(LutilMDE.Pair;)V
jtb.syntaxtree.FormalParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3_13()Z
utilMDE.OrderedPairIterator:hasNext()Z
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ReferenceType:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
jtb.JavaParser:jj_3R_67()Z
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeChoice:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_80()Z
utilMDE.ArraysMDE:noDuplicates([J)Z
jtb.JavaParser:jj_3_35()Z
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
utilMDE.WeakIdentityHashMap:indexFor(II)I
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_100()Z
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReturnStatement;)V
utilMDE.WeakHasherMap:size()I
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.ProglangType:isIntegral()Z
jtb.JavaParser:jj_3R_49()Z
jtb.JavaParser:VariableDeclaratorId()Ljtb.syntaxtree.VariableDeclaratorId;
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.inv.Invariant:getConfidence()D
daikon.Quant:memberOf(F[F)Z
jtb.JavaParser:jj_3_4()Z
daikon.Debug:logDetail()Z
jtb.JavaParser:jj_3_20()Z
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
jtb.syntaxtree.Literal:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
utilMDE.ArraysMDE:isSubarray([I[II)Z
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.Quant:noDups([I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PostfixExpression;)V
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.Intern:internSubsequence([III)[I
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArgument;)V
jtb.syntaxtree.Type:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Type;)V
jtb.JavaParser:jj_3_22()Z
daikon.Quant:gte(II)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
jtb.syntaxtree.ConditionalExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AndExpression;)V
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ModBitTracker:ModBitTracker(I)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
utilMDE.ArraysMDE:sum([[D)D
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_58()Z
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.ValueSet:ValueSet(I)V
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
jtb.syntaxtree.TypeParameter:accept(Ljtb.visitor.Visitor;)V
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.inv.unary.scalar.LowerBound:enabled()Z
jtb.syntaxtree.TypeArguments:accept(Ljtb.visitor.Visitor;)V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.Quant:memberOf(I[I)Z
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:subsetOf([S[S)Z
jtb.JavaParser:jj_3_15()Z
daikon.Quant:gt(II)Z
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.JavaParser:jj_3R_102()Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_126()Z
jtb.syntaxtree.InstanceOfExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.Quant:eltsLTE([II)Z
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
jtb.JavaParserTokenManager:jjStopAtPos(II)I
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
jtb.syntaxtree.NodeOptional:present()Z
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.SequenceAndIndices:hashCode()I
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ValueTuple:isMissingNonsensical(I)Z
utilMDE.UtilMDE:lineNumberFileReader(Ljava.io.File;)Ljava.io.LineNumberReader;
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
jtb.JavaParser:jj_3R_136()Z
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
utilMDE.Assert:assertTrue(Z)V
jtb.syntaxtree.ResultType:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:subsetOf([F[D)Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.Quant:eq(II)Z
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.PostfixExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
jtb.JavaParser:jj_3_3()Z
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
jtb.syntaxtree.ExclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
daikon.Debug:logOn()Z
jtb.JavaParser:jj_3R_88()Z
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.syntaxtree.MethodDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Add:amount()Ljava.lang.String;
jtb.JavaParser:jj_3_16()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.BlockStatement;)V
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
jtb.JavaCharStream:UpdateLineColumn(C)V
jtb.syntaxtree.TypeArgument:accept(Ljtb.visitor.Visitor;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.Quant:eltsGtIndex([I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
utilMDE.ArraysMDE:element_range([I)I
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.PptMap:asCollection()Ljava.util.Collection;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.inv.Invariant:justified()Z
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Invariant:prob_or(DD)D
jtb.syntaxtree.ClassOrInterfaceDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.Quant:eltwiseNotEqual([I)Z
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_105()Z
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.VariableDeclaratorId:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.Modifiers:accept(Ljtb.visitor.Visitor;)V
utilMDE.FuzzyFloat:lt(DD)Z
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
utilMDE.MathMDE:gcd_differences([I)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ImportDeclaration;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_134()Z
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.ProglangType:isArray()Z
jtb.syntaxtree.TypeDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.LowerBoundCore:calc_modulus()J
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;Z)Z
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
jtb.JavaParser:jj_3R_51()Z
daikon.diff.RootNode:RootNode()V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:accept(Ljtb.visitor.Visitor;)V
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;)Z
jtb.JavaParser:jj_3R_98()Z
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
jtb.JavaParser:jj_3R_87()Z
daikon.PptSlice0.ImplicationWrapper:hashCode()I
jtb.syntaxtree.ShiftExpression:accept(Ljtb.visitor.Visitor;)V
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.Quant:lexNotEqual([I[I)Z
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
jtb.syntaxtree.NullLiteral:accept(Ljtb.visitor.Visitor;)V
daikon.PptSlice1:arity()I
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.Quant:eltsGT([II)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.FuzzyFloat:gt(DD)Z
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
jtb.syntaxtree.PrimaryPrefix:accept(Ljtb.visitor.Visitor;)V
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_68()Z
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
jtb.JavaParser:jj_3R_60()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclarator;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalAndExpression;)V
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
jtb.JavaParser:jj_2_10(I)Z
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.FormalParameters:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.VarInfo:relate_var()V
jtb.JavaParser:jj_3R_54()Z
jtb.JavaParser:jj_3R_169()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_133()Z
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.ProglangType:dimensions()I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Block;)V
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
daikon.Quant:lte(II)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryExpression;)V
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_89()Z
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
jtb.syntaxtree.ClassOrInterfaceBody:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
jtb.JavaParser:jj_3R_76()Z
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_ntk()I
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3_14()Z
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
jtb.syntaxtree.ReturnStatement:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.NodeToken:accept(Ljtb.visitor.Visitor;)V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.Quant:pairwiseGTE([I[I)Z
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
jtb.JavaParser:jj_2_36(I)Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_163()Z
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.tools.jtb.Ast:getClassName(Ljtb.syntaxtree.Node;)Ljava.lang.String;
jtb.JavaCharStream:GetImage()Ljava.lang.String;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.CompilationUnit;)V
jtb.syntaxtree.MethodDeclarator:accept(Ljtb.visitor.Visitor;)V
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
jtb.syntaxtree.Block:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName:name()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.InvMap:InvMap()V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
jtb.syntaxtree.ClassOrInterfaceDeclaration:ClassOrInterfaceDeclaration(Ljtb.syntaxtree.NodeChoice;Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ClassOrInterfaceBody;)V
daikon.Quant:eltsLtIndex([I)Z
jtb.JavaParser:jj_2_12(I)Z
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeSequence;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpression;)V
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.Invariant:logDetail()Z
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.Quant:pairwiseLTE([I[I)Z
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments;
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.WeakHasherMap:processQueue()V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
jtb.JavaParser:jj_3R_103()Z
daikon.Quant:eltwiseGTE([I)Z
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_57()Z
jtb.JavaParser:jj_3_30()Z
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.OutputFormat:isJavaFamily()Z
jtb.JavaParser:jj_3R_104()Z
utilMDE.OrderedPairIterator:setnext1()V
daikon.inv.unary.scalar.NonZero:enabled()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
1056 2 746 2 226 2 481 4 20 2 766 2 919 2 234 2 16 2 
19 2 518 6 227 6 13 2 365 2 334 2 859 2 901 2 36 2 1328 6 652 2 
1056 2 1123 2 1186 6 544 2 1059 6 920 6 707 4 16 2 32 2 249 2 566 6 1073 4 187 2 
685 2 1056 6 23 6 626 4 214 2 553 8 1313 10 120 10 307 16 948 2 966 2 412 10 1038 8 1129 10 1039 8 158 6 754 26 269 12 397 8 224 2 921 10 16 6 590 16 1265 28 619 4 499 4 95 16 959 2 623 4 763 2 
152 6 171 4 
399 2 
1056 4 96 2 48 2 746 2 989 2 990 2 576 2 948 2 385 2 536 2 1106 2 631 2 8 2 352 2 915 2 1300 2 996 2 543 2 1069 2 358 2 16 4 1263 2 315 2 876 2 640 2 402 2 403 4 925 2 408 2 462 2 606 2 1085 2 729 2 122 2 123 2 659 4 519 2 127 4 293 2 982 4 89 2 476 2 524 2 1324 2 
1056 4 148 4 23 4 626 2 1307 8 553 19 1313 15 55 6 120 15 1200 4 790 6 307 32 1294 4 490 2 412 15 281 3 1129 15 158 4 754 47 777 4 676 2 976 6 182 4 269 22 397 6 521 2 144 6 162 6 16 4 921 6 185 5 590 32 204 4 1265 52 478 2 95 32 343 2 763 2 904 4 
48 2 1124 2 584 2 
572 2 384 2 1135 2 757 2 1254 2 922 2 588 22 206 2 435 2 876 2 1193 2 351 2 608 2 813 10 
626 2 553 2 27 2 768 2 1313 2 120 2 307 2 412 2 932 2 1129 2 158 2 754 4 266 2 269 2 978 2 451 2 921 4 590 2 1265 6 1016 2 95 2 880 2 881 2 
1173 2 976 6 269 4 1313 4 120 4 307 8 162 6 590 8 1294 4 1265 16 412 4 95 8 1129 4 623 2 1269 2 904 4 754 12 
369 4 75 2 172 10 48 8 598 2 1124 2 136 2 235 2 434 4 7 4 709 4 770 4 1106 4 1149 62 8 2 262 10 103 2 584 6 659 4 1109 2 242 2 1026 2 41 2 637 2 1138 4 1240 2 477 2 523 14 1048 2 111 2 683 2 207 2 297 4 422 4 379 2 1292 4 345 4 684 2 301 2 1183 4 
76 2 180 2 1298 2 60 2 419 2 1070 2 617 2 399 2 70 2 113 2 
858 2 174 1 428 2 1251 6 3 2 348 2 706 2 1252 2 628 2 863 2 259 2 866 2 1259 2 1191 2 794 2 263 2 1261 2 634 2 1262 1 796 1 955 2 638 2 361 16 16 34 17 6 1116 2 271 1 1192 4 362 2 1032 2 639 2 641 4 1266 2 186 2 116 3 962 2 645 2 809 2 556 8 191 2 649 2 651 2 464 32 465 2 970 2 1276 12 889 3 1128 1 467 2 1279 2 283 1 125 2 375 2 37 2 196 2 289 4 1282 2 290 2 39 2 818 2 816 16 564 2 1047 3 820 6 42 2 1137 2 983 2 1140 2 1142 5 208 12 1212 2 1214 3 899 24 1291 2 986 2 1143 16 1293 2 486 3 902 3 903 2 1056 32 745 2 487 2 667 8 1216 2 51 1 135 2 748 2 306 1 137 4 1148 3 1062 2 580 1 59 32 674 2 753 2 995 2 917 1 140 2 493 2 223 2 997 3 919 2 65 2 1225 24 839 2 500 4 145 2 1306 3 73 1 319 2 501 1 322 3 150 2 232 2 323 2 599 1 154 1 929 2 325 4 83 3 930 2 1007 2 1082 2 847 2 691 4 848 2 772 2 328 2 330 2 239 1 240 2 1170 2 609 3 934 16 1318 2 611 2 937 2 522 2 1015 1 1182 8 92 2 1181 2 527 2 1242 4 1020 2 531 6 532 1 1101 2 
592 2 16 2 
231 2 832 2 16 4 
1119 2 
1021 94 1 2 347 2 4 4 5 4 708 94 712 2 350 2 1023 2 1024 2 9 2 10 2 11 2 716 4 355 4 356 4 717 2 360 6 18 4 1030 44 364 2 1031 4 722 4 724 4 24 4 1036 50 370 2 726 16 374 20 31 2 33 4 1037 2 34 14 731 14 38 2 43 2 377 2 1049 2 1051 2 738 2 378 2 1052 2 1054 2 741 12 743 2 744 246 49 18 1057 2 386 2 57 2 750 2 751 2 1064 2 391 12 1065 2 1067 2 398 2 63 2 67 2 68 2 69 18 400 4 1072 2 401 2 71 2 760 2 404 2 1074 2 1076 2 406 2 767 4 78 2 80 4 81 8 82 2 1079 2 411 18 1081 2 1083 2 1084 30 771 44 1088 2 414 2 774 2 775 18 776 2 86 2 418 4 779 4 87 2 1090 4 1091 2 1092 4 421 2 1096 246 1097 6 423 4 1099 4 425 50 98 62 786 358 431 2 788 4 1104 94 101 4 100 6 793 2 437 94 438 2 1107 4 440 2 102 2 444 2 798 2 450 2 1113 2 799 2 452 2 110 2 455 4 803 2 801 2 804 2 114 2 806 2 115 4 1120 2 1122 2 117 2 459 2 460 18 118 4 121 2 1127 2 124 2 1130 2 1131 2 1132 42 470 2 469 2 815 2 1134 4 1139 2 129 2 823 2 1141 4 824 2 483 18 484 2 485 2 1144 2 826 2 130 2 131 4 488 8 828 22 1145 2 1147 4 139 2 833 8 491 36 834 2 141 34 836 2 143 8 1155 12 1156 4 837 50 495 94 498 50 840 2 1158 2 146 2 841 2 1160 6 151 2 153 86 504 12 844 2 845 4 1163 2 155 74 846 94 506 2 1168 2 157 2 1169 4 508 4 509 2 512 42 1171 2 514 6 159 2 516 2 1177 2 1178 2 851 56 526 4 525 2 164 16 854 2 528 2 168 4 530 2 855 2 856 2 857 2 1187 2 175 8 862 4 176 28 535 2 178 4 179 2 865 2 541 2 542 12 871 2 873 56 545 2 546 2 183 2 875 8 547 4 548 2 878 2 877 86 1197 2 188 2 189 2 554 4 190 2 1199 14 883 2 555 16 192 4 558 2 559 2 1201 2 887 2 1203 2 1202 2 1205 4 194 90 890 48 891 4 892 2 893 2 1206 2 561 48 1209 4 562 2 895 2 201 4 202 2 567 12 1213 2 209 12 900 22 210 2 212 2 213 2 908 2 215 2 1217 4 216 4 909 12 1218 2 218 4 577 94 911 2 578 2 913 54 581 2 221 2 1219 6 914 2 916 2 1221 4 586 2 591 246 225 94 1223 4 924 2 593 18 228 4 594 2 1227 2 233 2 926 16 928 8 927 2 600 4 931 2 236 4 607 2 1230 2 237 4 238 2 1232 62 1233 2 241 4 1235 2 1236 42 246 2 245 2 935 4 613 2 614 104 1239 2 247 2 936 2 618 2 1241 18 250 2 620 2 251 2 621 16 1243 44 252 2 941 2 1247 22 1249 2 1250 2 943 2 946 2 257 2 258 6 1253 96 949 62 260 2 630 2 1258 2 1260 4 632 94 633 94 635 2 953 30 268 2 956 2 1267 2 1268 52 643 2 273 2 274 2 644 2 1271 2 1272 2 961 2 648 4 647 4 964 6 965 6 967 6 1275 2 968 2 1278 4 653 2 284 56 656 2 285 2 657 2 658 4 287 2 288 2 660 86 291 4 292 4 981 2 979 2 1284 2 1286 8 296 10 1288 56 661 2 662 2 1290 2 663 4 300 2 302 74 303 2 671 2 993 4 308 2 672 2 673 2 994 2 309 2 675 2 1301 2 1302 2 677 2 313 2 311 2 316 2 999 6 680 2 682 30 1002 6 320 2 321 2 324 2 1311 4 1312 2 693 2 1008 2 329 2 1315 2 331 96 333 2 1011 6 335 4 1322 4 337 18 700 94 701 2 1323 2 702 2 339 2 1019 2 346 2 1327 2 705 46 
1063 2 427 2 678 2 1040 1 
1063 2 1295 2 
896 2 48 2 1063 2 222 2 499 2 1004 2 1274 2 
1063 2 1004 2 453 2 
1063 2 1004 2 359 2 
678 2 650 2 540 2 
1063 2 1004 2 
686 2 650 2 
463 2 1063 2 
466 2 678 2 650 2 
969 2 388 2 678 2 
1309 2 678 2 1012 2 
405 2 1229 2 678 2 
58 2 678 2 1255 2 
420 2 650 2 
1063 2 1125 2 
969 2 711 2 
446 2 1012 2 
1229 2 694 2 
1316 2 58 2 
870 2 650 2 
58 2 696 2 
1229 2 1103 2 
314 2 1012 2 
1285 2 969 2 
147 2 466 2 678 2 650 2 
147 2 466 2 1176 2 678 2 650 2 
447 2 678 2 650 2 
678 2 357 2 650 2 
97 2 615 2 670 2 387 2 
48 2 199 2 575 2 1274 2 
896 2 48 2 85 2 199 2 575 2 1274 2 
48 2 1063 2 759 2 499 2 1004 2 1274 2 
950 2 122 2 
48 2 499 2 687 2 1274 2 
1229 2 1190 2 
58 2 812 2 
969 2 825 2 
1012 2 1028 2 
58 2 1012 2 539 2 
58 2 107 2 1012 2 
58 2 739 2 1012 2 
58 2 1012 2 782 2 
48 2 489 2 557 2 1274 2 280 2 874 6 898 6 570 2 
305 2 650 2 
105 2 988 2 1010 2 1058 2 407 4 747 2 270 2 248 2 64 2 588 6 349 2 496 2 45 2 413 4 568 2 704 2 457 2 940 2 
749 2 678 2 
1293 2 
1251 5 348 2 863 2 947 2 1188 2 1191 2 263 2 1261 2 796 4 16 26 184 2 17 2 1192 4 362 4 639 2 641 2 1118 2 962 2 645 6 371 2 556 2 651 2 464 6 1276 8 125 2 1042 2 732 2 289 4 197 2 200 2 290 2 473 2 564 2 820 6 1137 2 983 2 208 8 986 2 1056 26 487 2 1216 2 829 2 748 2 59 4 753 2 995 2 1068 4 140 2 919 2 65 2 500 2 145 2 73 2 319 2 501 2 150 2 232 2 323 2 79 4 325 4 930 1 1082 2 691 4 848 1 328 2 1170 2 934 6 611 2 612 2 522 2 937 2 1242 2 1326 2 1244 2 253 2 531 2 1101 2 1329 2 
1251 6 348 2 863 2 947 2 1188 2 1191 2 263 2 1261 2 796 2 16 26 184 2 17 2 1192 4 362 4 639 2 641 2 962 2 645 6 371 2 556 2 651 2 464 6 1276 8 125 2 974 2 732 2 289 4 197 2 200 2 290 2 473 2 564 2 820 6 1137 2 983 2 208 8 986 2 1056 26 487 2 1216 2 135 2 829 2 748 2 59 4 753 2 995 2 1068 4 140 2 919 2 65 2 500 2 145 2 73 2 319 2 501 2 150 2 232 2 842 2 323 2 79 4 325 4 930 2 1082 2 691 4 848 2 328 2 1170 2 934 6 515 2 611 2 612 2 522 2 937 2 1242 2 1326 2 253 2 531 2 1101 2 1329 2 
727 2 
1046 2 1195 2 
817 2 1162 2 698 4 326 2 736 2 652 2 1157 4 227 2 479 2 507 2 482 2 655 2 1108 2 1299 2 901 2 1281 2 1328 2 715 2 
1056 6 906 4 487 2 791 2 389 4 1257 2 1299 2 1108 2 868 2 1261 2 715 2 14 6 62 2 1027 2 797 2 16 12 1157 4 1192 2 227 6 639 2 365 2 962 2 1035 2 1003 2 150 2 552 2 1162 2 769 2 325 2 601 2 326 4 652 4 1165 2 1080 2 690 2 507 2 655 2 1281 2 35 4 975 2 733 2 518 6 894 4 334 2 817 2 819 2 820 4 698 4 1137 2 736 2 479 2 93 4 166 2 1098 2 482 2 986 2 901 4 1328 4 1184 2 1185 2 
1056 6 906 4 487 2 791 2 389 4 1257 2 1299 2 1108 2 868 2 1261 2 715 2 14 6 13 2 62 2 1027 2 797 2 16 12 1157 4 1192 2 227 4 639 2 962 2 1035 2 1003 2 150 2 552 2 1162 2 769 2 325 2 601 2 326 4 652 4 1165 2 1080 2 690 2 507 2 655 2 1281 2 35 4 975 2 733 2 518 6 894 4 334 2 817 2 819 2 820 4 698 4 1137 2 736 2 479 2 93 4 166 2 1098 2 482 2 986 2 901 4 1328 6 1184 2 1185 2 
1056 6 906 4 487 2 791 2 389 8 1257 2 1299 2 1108 2 868 2 1261 2 715 2 14 6 62 2 1027 2 797 2 16 12 1157 4 1192 2 227 6 639 2 962 2 1035 2 1003 2 150 2 552 2 1162 2 769 2 325 2 601 2 326 4 652 4 1165 2 1080 2 690 2 507 2 655 2 1281 2 36 2 35 4 975 2 733 2 518 6 894 4 334 2 817 2 819 2 820 4 698 4 1137 2 736 2 479 2 93 4 166 2 1098 2 482 2 986 2 901 4 1328 6 1184 2 1185 2 
1056 6 906 8 487 2 791 2 389 8 1257 2 1299 2 1108 2 868 2 1261 2 715 2 14 10 13 2 62 2 1027 2 797 2 16 12 1157 4 1192 2 227 6 639 2 962 2 1035 2 1003 2 150 2 552 2 1162 2 769 2 325 2 601 2 326 4 652 4 1165 2 1080 2 690 2 507 2 655 2 1281 2 36 2 35 4 975 2 733 2 518 8 894 4 334 2 817 2 819 2 820 4 698 4 1137 2 736 2 479 2 93 4 166 2 1098 2 482 2 986 2 901 4 1328 8 1184 2 1185 2 
1056 6 906 8 487 2 791 2 389 8 1257 2 1299 2 1108 2 868 2 1261 2 715 2 14 10 62 2 1027 2 797 2 16 12 1157 4 1192 2 227 6 639 2 962 2 1035 2 1003 2 150 2 552 2 1162 2 769 2 325 2 601 2 326 4 652 4 1165 2 1080 2 690 2 507 2 655 2 1281 2 36 2 35 4 975 2 733 2 518 6 894 4 334 2 817 2 819 2 820 4 698 4 1137 2 736 2 479 2 93 4 166 2 1098 2 482 2 986 2 901 4 1328 6 1184 2 1185 2 
534 1 863 2 1188 4 1022 2 1191 2 353 7 868 2 715 2 13 4 14 2 1027 4 16 46 1029 1 184 2 17 2 1192 4 363 1 1194 2 879 2 1196 1 1035 2 552 2 556 2 29 6 35 4 733 2 200 2 894 8 564 2 736 2 897 2 208 4 1053 2 742 2 211 2 901 4 1056 24 907 2 1216 2 54 6 389 2 59 2 1066 1 1220 2 62 2 919 2 65 2 592 6 227 4 762 2 231 6 232 2 1077 2 79 4 769 2 601 2 930 2 1080 2 1082 12 934 6 611 2 243 6 937 2 91 2 1242 2 93 6 1098 2 622 2 939 6 1101 2 625 6 1251 6 942 2 945 6 627 6 99 6 432 6 791 2 947 2 433 1 629 2 1257 2 1108 2 263 2 1261 2 106 2 797 2 639 2 1117 4 641 2 1119 6 962 2 645 6 119 2 652 4 464 8 1276 4 655 2 1281 2 286 7 289 4 975 2 814 2 290 2 471 10 817 2 819 2 820 6 474 1 1137 2 479 2 482 2 986 2 664 2 134 2 487 2 1146 6 138 8 1296 6 1299 2 1152 2 995 2 142 2 492 2 1303 2 1304 2 1157 4 681 2 497 6 500 2 1001 2 1161 4 150 2 1003 2 323 2 1308 2 1162 2 1006 6 325 4 326 4 1165 2 691 4 848 2 507 2 692 2 328 2 849 2 1175 1 518 12 334 4 698 4 699 2 522 2 166 2 167 1 1017 2 1328 8 531 2 1185 2 1184 4 
625 6 942 2 1251 6 627 6 945 6 99 6 432 6 863 2 947 2 791 2 1188 4 629 2 1022 2 1257 2 1191 2 1108 2 868 2 263 2 1261 2 715 2 106 2 14 2 1027 4 797 2 16 48 17 2 184 2 720 2 1192 4 362 2 1117 4 639 2 1194 2 641 4 879 2 1119 6 962 2 1035 2 552 2 645 6 119 2 29 6 556 2 652 4 464 8 1276 8 655 2 1281 2 35 4 36 4 975 2 289 4 733 2 814 2 200 2 290 2 471 10 894 8 564 2 817 2 819 2 820 6 1137 2 736 2 897 2 479 2 208 8 1053 2 742 2 482 2 211 2 986 2 901 4 664 2 1056 26 134 2 907 2 487 2 1216 2 54 6 1146 6 138 8 389 6 59 2 1296 6 1152 2 1299 2 995 2 1220 2 142 2 492 2 62 2 1303 2 1304 2 919 2 65 2 1157 4 681 2 592 6 497 6 227 8 500 4 1001 2 762 2 1161 4 231 6 1003 2 150 2 232 2 1077 2 1308 2 323 2 79 4 1162 2 1006 6 769 2 325 4 601 2 326 4 1165 2 1080 2 930 2 1082 12 691 4 507 2 848 2 692 2 328 2 695 2 849 2 934 6 243 6 611 2 518 12 334 4 698 4 699 2 937 2 522 2 91 2 1242 4 93 6 166 2 1017 2 1098 2 622 2 939 6 1328 8 531 2 1184 4 1185 2 1101 2 
625 6 942 2 1251 6 627 6 945 6 99 6 432 6 863 2 947 2 791 2 1188 4 629 2 1022 2 1257 2 1191 2 1108 2 868 2 263 2 1261 2 715 2 106 2 14 6 1027 4 797 2 16 48 17 2 184 2 720 2 1192 4 362 2 1117 4 639 2 1194 2 641 4 879 2 1119 6 962 2 1035 2 552 2 645 6 119 2 29 6 556 2 652 4 464 8 1276 8 655 2 1281 2 35 4 36 4 975 2 289 4 733 2 814 2 200 2 290 2 471 10 894 8 564 2 817 2 819 2 820 6 1137 2 736 2 897 2 479 2 208 8 1053 2 742 2 482 2 211 2 986 2 901 4 664 2 1056 26 906 4 134 2 907 2 487 2 1216 2 54 6 1146 6 138 8 389 6 59 2 1296 6 1152 2 1299 2 995 2 1220 2 142 2 492 2 62 2 1303 2 1304 2 919 2 65 2 1157 4 681 2 592 6 497 6 227 8 500 4 1001 2 762 2 1161 4 231 6 1003 2 150 2 232 2 1077 2 1308 2 323 2 79 4 1162 2 1006 6 769 2 325 4 601 2 326 4 1165 2 1080 2 930 2 1082 12 691 4 507 2 848 2 692 2 328 2 695 2 849 2 934 6 243 6 611 2 518 12 334 4 698 4 699 2 937 2 522 2 91 2 1242 4 93 6 166 2 1017 2 1098 2 622 2 939 6 1328 8 531 2 1184 4 1185 2 1101 2 
0 6 863 2 1188 4 1022 2 1191 2 868 2 715 2 14 6 13 2 1027 4 16 52 184 2 17 4 720 2 719 6 1192 4 362 2 365 2 1194 2 879 2 1035 2 552 2 884 2 556 4 29 12 730 6 36 4 35 4 376 2 733 2 200 2 894 8 564 2 736 2 897 2 208 10 1053 2 742 2 211 2 901 4 1056 24 906 4 907 2 573 6 1216 2 54 12 389 6 59 4 1220 2 62 2 919 2 65 2 592 12 227 10 762 2 231 12 232 2 1077 2 79 6 769 2 601 2 930 2 1080 2 1082 10 934 8 611 2 243 6 937 2 91 2 1242 4 93 6 94 2 1098 2 622 2 939 6 624 6 1101 2 625 6 1251 6 429 6 942 2 945 6 627 6 99 6 787 2 432 12 791 2 947 4 1105 2 629 2 1257 2 1108 2 263 2 1261 2 106 2 797 2 639 2 1117 4 641 4 1119 12 962 2 645 8 275 2 119 2 652 4 464 12 1276 10 655 2 1281 2 975 2 289 4 814 2 290 2 471 8 817 2 819 2 820 6 1137 2 821 6 980 6 1283 6 479 2 482 2 986 2 664 2 134 2 487 2 1146 6 138 8 1296 6 1299 2 1152 2 995 2 142 2 492 2 1303 2 1304 2 1157 4 681 2 497 6 500 4 1001 2 1161 4 150 2 1003 2 323 2 1308 2 1162 2 1006 6 325 4 326 4 1165 2 691 4 848 2 507 2 328 2 695 2 849 2 518 16 334 4 697 2 698 4 699 2 522 2 166 2 1017 2 342 2 1328 10 531 4 1185 2 1184 4 
906 4 1003 2 1035 2 769 2 601 2 791 2 652 4 1080 2 389 6 1257 2 507 2 1108 2 1299 2 868 2 1281 2 35 2 36 2 518 4 894 2 62 2 14 4 334 2 817 2 819 2 698 2 16 4 1157 2 227 6 479 2 93 2 166 2 482 2 901 4 1328 6 1185 2 
1251 6 863 2 791 2 1188 2 1257 2 1191 2 714 2 1108 2 263 2 868 2 1261 2 12 2 14 2 16 28 184 2 17 3 1192 4 639 2 962 2 1035 2 645 6 649 2 652 4 464 8 1281 2 35 2 36 2 289 4 200 2 290 2 894 2 471 2 564 2 817 2 819 2 820 6 1137 2 479 2 482 2 986 2 901 4 1293 2 1056 24 487 2 1216 2 389 6 59 3 1299 2 995 2 62 2 919 2 65 2 1157 2 227 6 839 2 761 2 150 2 1003 2 232 2 765 2 323 2 79 4 769 2 325 4 601 2 1165 2 1080 2 930 2 1082 4 847 2 691 4 848 2 507 2 692 2 328 2 934 6 611 2 518 4 334 2 1321 3 698 2 522 2 1180 2 93 2 166 2 1328 6 531 3 1185 2 1101 2 
1056 6 906 8 487 2 791 2 389 8 1257 2 1299 2 1108 2 868 2 1261 2 715 2 14 10 62 2 1027 2 797 2 16 12 1157 4 1192 2 227 6 639 2 962 2 1035 2 1003 2 150 2 552 2 1162 2 769 2 325 2 601 2 326 4 652 4 1165 2 1080 2 690 2 507 2 655 2 1281 2 36 2 35 4 975 2 733 2 518 6 894 4 334 2 817 2 819 2 820 4 698 4 1137 2 736 2 479 2 93 4 166 2 1098 2 482 2 986 2 901 4 1328 6 1184 2 1185 2 
1056 6 906 8 487 2 791 2 389 8 792 2 1257 2 1108 2 1299 2 868 2 1261 2 715 2 14 10 15 4 1027 2 797 2 16 12 1157 4 1192 2 227 8 639 2 365 2 1075 2 962 2 150 2 1035 2 1003 2 552 2 1162 2 769 2 325 2 601 2 326 4 652 4 1165 2 1080 2 507 2 655 2 1281 2 36 2 35 4 975 2 733 2 518 8 894 4 334 2 817 2 819 2 820 4 698 4 1137 2 736 2 479 2 93 4 166 2 1098 2 482 2 986 2 901 4 1328 6 1184 2 1185 2 
1080 2 1035 2 1013 2 
1080 2 1035 2 1013 2 
1251 6 863 2 1188 6 1257 2 1191 2 263 2 1261 2 715 2 14 6 13 4 1027 2 796 2 797 2 16 24 184 2 1192 4 366 2 1117 2 639 2 365 4 641 4 1033 2 962 2 1035 4 645 2 372 2 119 2 276 2 652 4 464 2 1276 4 1281 4 36 4 35 2 975 2 289 4 200 2 290 2 471 2 894 4 473 4 564 2 820 6 1137 2 735 2 208 4 482 2 986 2 298 2 901 4 1056 16 906 4 487 2 50 2 1216 2 56 2 831 2 389 6 59 2 1297 2 1299 2 310 2 995 2 1220 2 919 2 65 2 1157 2 227 12 500 4 1161 2 150 2 323 2 1310 2 1162 2 325 4 601 2 326 4 409 4 1080 6 930 2 605 2 1082 4 691 4 848 2 328 2 773 2 416 2 934 2 1237 2 611 2 518 16 334 4 698 2 699 2 937 4 522 2 1013 2 1242 4 93 4 938 2 1098 2 939 2 1246 4 1328 12 1184 4 1101 2 
106 2 1056 2 150 2 1077 2 471 2 267 2 1046 2 735 2 16 4 1082 2 1211 2 1117 2 655 2 310 2 939 2 416 2 973 2 
1251 6 863 2 177 2 1188 6 1257 2 1191 2 263 2 1261 2 715 2 14 6 13 4 1027 4 797 2 16 24 184 2 1192 4 366 2 639 2 365 4 641 4 1033 2 962 2 1035 4 645 2 119 2 652 4 278 2 464 2 811 2 1276 4 1281 4 35 2 36 4 975 2 289 4 733 2 200 2 290 2 894 4 473 4 564 2 820 6 1137 2 735 2 1289 2 208 4 482 2 986 2 298 2 901 4 1056 16 906 4 487 2 50 2 1216 2 56 4 389 6 59 4 1297 2 1299 2 310 2 995 2 1220 2 919 2 65 2 1157 2 227 12 500 4 1161 2 150 2 323 2 1310 2 1162 2 325 4 601 2 326 4 409 4 1080 6 930 2 605 2 1082 2 691 4 848 2 328 2 773 2 416 2 934 2 611 2 518 16 334 4 698 2 699 2 937 4 522 2 1013 2 1242 4 93 4 938 2 1098 2 1018 2 939 2 1246 4 1328 12 1184 4 1101 2 
1251 6 863 2 1188 6 1257 2 1191 2 263 2 1261 2 715 2 14 6 13 4 1027 4 796 1 797 2 16 24 184 2 1192 4 366 2 1117 2 639 2 365 4 641 4 1033 2 962 2 1035 4 645 2 119 2 652 4 464 2 1276 4 1281 4 36 4 35 2 975 2 289 4 733 2 1133 2 200 2 290 2 471 2 894 4 473 4 564 2 820 6 1137 2 735 2 208 4 482 2 986 2 298 2 901 4 1056 16 906 4 487 2 50 2 1216 2 56 2 389 6 59 2 1297 2 1299 2 310 2 995 2 1220 2 919 2 1222 2 65 2 1157 2 227 12 500 4 1161 2 502 2 150 2 323 2 1310 2 1162 2 325 4 601 2 326 4 409 4 1080 6 930 2 605 2 1082 4 691 4 848 2 328 2 773 2 416 2 934 2 611 2 518 16 334 4 88 2 698 2 699 2 937 4 522 2 1013 2 853 2 1242 4 93 4 938 2 1098 2 939 2 1246 4 1328 12 1184 4 1101 2 
1251 6 789 2 863 2 1188 2 1022 2 629 2 1191 2 263 2 441 2 1261 2 795 2 265 4 1110 2 448 2 16 26 184 2 17 2 1265 5 1192 4 721 2 639 2 1121 2 962 2 1273 2 645 6 120 2 464 8 810 2 1129 2 282 2 976 4 289 4 290 2 472 6 564 2 820 6 1137 2 294 2 822 2 480 2 986 2 211 2 904 2 1056 20 381 2 487 2 1216 2 307 2 1151 2 59 2 995 2 754 4 1153 2 142 2 492 2 919 2 590 2 65 2 1000 2 1001 2 150 2 232 2 323 2 503 2 79 4 1005 2 1313 2 325 4 930 2 1166 2 1082 2 691 4 412 2 1314 2 156 2 848 2 328 2 1172 2 934 6 160 2 1317 2 1238 1 611 2 517 2 616 2 522 2 165 2 95 2 703 2 531 2 1101 2 
1056 2 458 2 133 4 232 2 77 2 645 2 79 2 373 2 947 6 464 2 560 2 752 2 59 3 610 3 934 2 563 2 1136 2 336 2 16 2 17 3 317 2 958 2 72 2 531 3 
1056 2 458 2 133 4 232 2 77 2 645 2 79 2 373 2 947 6 464 2 560 2 752 2 59 2 610 2 934 2 563 2 1136 2 336 2 16 2 17 2 317 2 958 2 72 2 531 2 
1056 2 458 2 133 4 232 2 77 2 645 2 79 2 373 2 947 6 464 2 560 2 752 2 59 2 610 2 934 2 563 2 1136 2 336 2 16 2 17 2 317 2 958 2 72 2 531 2 
1056 4 52 2 256 3 860 2 307 2 1189 2 59 3 538 2 754 4 1025 4 396 2 397 4 838 2 16 10 361 2 590 2 17 3 1265 6 1224 3 800 6 456 4 1226 4 597 2 23 2 149 4 963 4 232 2 77 2 1313 2 120 2 464 2 412 2 1129 2 415 2 972 2 198 2 737 2 95 2 341 3 1143 2 
1056 4 597 2 963 4 149 4 23 2 232 2 77 2 553 2 52 2 860 2 256 2 1313 2 120 2 307 2 464 2 412 2 1189 2 538 2 1129 2 59 2 415 2 972 2 754 4 1025 4 198 2 396 2 269 2 397 4 838 2 361 2 16 10 17 2 590 2 1265 4 1224 2 737 2 800 6 95 2 456 4 341 2 1226 4 1143 2 763 2 
1056 4 597 2 963 4 149 4 23 2 232 2 77 2 553 2 52 2 860 2 256 2 1313 2 120 2 307 2 464 2 412 2 1189 2 538 2 1129 2 59 2 415 2 972 2 754 4 1025 4 198 2 396 2 269 2 397 4 838 2 361 2 16 10 17 2 590 2 1265 4 1224 2 737 2 800 6 95 2 456 4 341 2 1226 4 1143 2 763 2 
1056 4 597 2 963 4 149 4 23 2 232 2 77 2 553 2 52 2 860 2 256 2 1313 2 120 2 307 2 464 2 412 2 1189 2 538 2 1129 2 59 2 415 2 972 2 754 4 1025 4 198 2 396 2 269 2 397 4 838 2 361 2 16 10 17 2 590 2 1265 4 1224 2 737 2 800 6 95 2 456 4 341 2 1226 4 1143 2 763 2 
1056 4 597 2 963 4 149 4 23 2 232 2 77 2 553 4 52 2 860 2 256 2 1313 2 120 2 307 2 464 2 412 2 1189 2 538 2 1129 2 59 2 415 2 972 2 754 4 1025 4 198 2 396 2 269 4 397 4 838 2 361 2 16 10 17 2 590 2 1265 4 1224 2 737 2 800 6 95 2 456 4 341 2 1226 4 1143 2 763 4 
918 2 549 2 28 2 475 2 511 2 885 2 
1034 2 951 2 1326 2 734 2 885 2 550 2 718 2 
1056 8 551 2 230 2 808 2 25 2 669 2 29 2 235 1 728 2 84 2 354 2 835 2 468 2 1043 2 332 2 756 2 108 1 565 1 780 1 449 2 16 10 1014 2 683 1 986 2 21 2 529 2 
1056 6 1307 2 23 2 553 2 1198 2 1313 6 408 2 120 6 307 6 886 2 810 2 710 2 412 6 1129 6 754 12 976 4 1110 2 616 2 269 5 397 4 16 6 185 4 590 6 204 2 1265 16 1324 2 95 6 1245 2 763 2 904 2 
1056 1 1102 1 443 2 665 2 149 2 963 2 1320 6 1093 2 16 1 1179 2 1095 2 112 2 279 2 582 2 1226 2 392 4 104 2 264 2 
443 2 665 2 149 2 963 2 1320 6 1093 4 1179 2 1095 2 112 4 279 2 582 2 1226 2 392 4 264 2 104 4 
1056 1 1102 1 443 2 665 2 149 2 963 2 1320 10 1093 8 16 1 1179 2 1095 2 112 8 279 2 582 6 1226 2 392 4 264 8 104 8 
443 2 665 2 149 2 963 2 1320 2 1093 2 1179 2 1095 2 112 2 279 2 1226 2 392 2 104 2 
784 8 255 4 426 4 1251 102 533 4 861 4 864 4 1256 4 261 4 867 10 537 8 713 11 952 4 869 4 442 4 1112 2 445 10 636 4 109 2 796 2 872 4 16 78 1264 4 1115 2 642 30 957 8 272 8 802 4 368 2 960 2 723 4 646 2 26 14 461 10 277 4 1276 16 654 16 1041 8 195 4 971 8 126 4 289 44 977 8 128 2 44 2 203 4 1050 2 1215 4 299 4 571 2 987 2 1056 70 666 4 383 24 53 2 1060 4 830 6 991 4 910 2 912 4 579 4 1150 10 390 4 393 2 61 4 585 4 679 10 1071 4 998 6 65 2 758 4 1305 4 318 4 764 4 843 10 1078 10 602 2 689 4 603 2 1164 2 327 4 505 24 930 28 604 8 410 2 691 36 1167 16 848 26 1087 24 328 6 933 4 1009 4 1234 4 417 2 1089 6 1174 4 1319 4 850 4 244 4 520 2 522 6 1094 2 90 32 852 6 1325 2 781 4 169 1 1100 4 170 2 254 16 
1056 26 173 2 426 2 1251 40 944 2 430 2 1060 4 53 2 219 10 1256 4 867 6 713 2 583 2 442 2 445 6 636 4 796 2 679 2 998 2 16 28 1264 4 65 2 1115 2 642 6 272 6 960 2 318 4 22 2 74 2 764 2 807 2 725 2 843 6 30 2 603 2 505 8 930 12 277 2 410 2 691 14 1276 14 848 12 328 2 195 2 1234 4 417 2 1089 4 289 14 850 2 128 2 522 2 295 2 1094 2 852 2 1325 2 1100 4 299 2 1055 2 987 2 
255 6 784 50 426 10 173 2 1248 90 2 2 1251 248 785 18 944 11 430 2 533 6 6 2 861 6 864 4 1256 6 436 4 867 16 537 42 713 16 952 6 869 4 181 26 442 10 445 16 636 8 796 4 109 2 872 6 954 2 16 150 1264 6 1115 4 454 24 642 34 272 16 367 90 802 6 960 8 805 4 22 4 723 4 807 2 725 2 26 12 277 6 193 10 1276 28 1204 4 654 42 1280 2 195 10 126 4 1207 24 289 112 128 2 44 4 295 8 203 4 1050 2 984 8 46 6 380 8 1055 2 299 4 827 2 47 24 987 2 1056 134 905 4 382 24 666 6 383 84 668 4 574 26 1060 6 53 8 830 5 991 4 910 2 1061 8 219 22 912 4 390 6 583 2 61 6 755 4 312 4 679 18 1071 6 998 36 589 12 65 8 758 4 923 24 1305 6 318 6 74 4 764 4 1228 4 843 16 603 2 1164 2 327 4 505 124 930 58 604 24 410 2 691 88 848 58 1087 92 328 14 1009 4 1234 6 417 2 1089 8 778 10 1174 6 161 10 850 10 244 6 522 14 1094 8 852 10 781 6 340 6 1100 6 344 4 
1056 44 132 2 426 2 1251 48 668 2 1060 2 53 2 304 2 217 2 992 2 1256 2 220 2 867 4 1150 2 713 2 439 2 394 2 395 2 442 2 1111 2 445 4 679 2 796 2 587 2 998 2 1114 2 16 46 1264 2 65 2 66 2 454 2 229 2 595 2 318 2 960 2 596 2 1270 2 646 2 843 4 461 2 1078 2 688 4 30 2 603 2 505 6 277 2 193 2 930 6 410 2 691 20 888 2 1276 36 848 6 1277 4 1231 2 1126 2 328 2 195 2 1234 2 513 2 417 2 778 2 1207 2 1089 6 289 20 1208 2 850 2 161 2 1045 2 40 2 128 2 1210 4 338 2 522 2 1094 2 852 2 1287 4 205 2 163 2 1325 2 740 2 985 2 569 6 1100 2 424 2 170 2 380 2 783 2 1055 2 47 2 987 2 
1086 2 
1044 1 882 1 1154 1 494 1 1159 1 510 1 
1044 1 882 1 1154 1 494 1 1159 1 510 1 
1044 1 882 1 1154 1 494 1 1159 1 510 1 
1044 1 882 1 1154 1 494 1 1159 1 510 1 
1044 1 882 1 1154 1 494 1 1159 1 510 1 
1044 1 882 1 1154 1 494 1 1159 1 510 1 
1044 1 882 1 1154 1 494 1 1159 1 510 1 
1044 1 882 1 1154 1 494 1 1159 1 510 1 
1044 1 882 1 1154 1 494 1 1159 1 510 1 
1044 1 882 1 1154 1 494 1 1159 1 510 1 
1044 1 882 1 1154 1 494 1 1159 1 510 1 
1044 1 882 1 1154 1 494 1 1159 1 510 1 
1044 1 882 1 1154 1 494 1 1159 1 510 1 
1044 1 882 1 1154 1 494 1 1159 1 510 1 
1044 1 882 1 1154 1 494 1 1159 1 510 1 
1044 1 882 1 1154 1 494 1 1159 1 510 1 
1044 1 882 1 1154 1 494 1 1159 1 510 1 
1044 1 882 1 1154 1 494 1 1159 1 510 1 
1044 1 882 1 1154 1 494 1 1159 1 510 1 
1044 1 882 1 1154 1 494 1 1159 1 510 1 
1044 1 882 1 1154 1 494 1 1159 1 510 1 
1044 1 882 1 1154 1 494 1 1159 1 510 1 
1044 1 882 1 1154 1 494 1 1159 1 510 1 
1044 1 882 1 1154 1 494 1 1159 1 510 1 
1044 1 882 1 1154 1 494 1 1159 1 510 1 
1044 1 882 1 1154 1 494 1 1159 1 510 1 
1044 1 882 1 1154 1 494 1 1159 1 510 1 
1044 1 882 1 1154 1 494 1 1159 1 510 1 
1044 1 882 1 1154 1 494 1 1159 1 510 1 
1044 1 882 1 1154 1 494 1 1159 1 510 1 
1044 1 882 1 1154 1 494 1 1159 1 510 1 
1044 1 882 1 1154 1 494 1 1159 1 510 1 
1044 1 882 1 1154 1 494 1 1159 1 510 1 
1044 1 882 1 1154 1 494 1 1159 1 510 1 
1044 1 882 1 1154 1 494 1 1159 1 510 1 
1044 1 882 1 1154 1 494 1 1159 1 510 1 
1044 1 882 1 1154 1 494 1 1159 1 510 1 
1044 1 882 1 1154 1 494 1 1159 1 510 1 
1044 1 882 1 1154 1 494 1 1159 1 510 1 
1044 1 882 1 1154 1 494 1 1159 1 510 1 
1044 1 882 1 1154 1 494 1 1159 1 510 1 
1044 1 882 1 1154 1 494 1 1159 1 510 1 
1044 1 882 1 1154 1 494 1 1159 1 510 1 
1044 1 882 1 1154 1 494 1 1159 1 510 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.NullPointerException 321 737 640 519 420 624 371 536 317 1012 723 568 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V ERROR java.lang.NullPointerException (400,889) (400,889) (400,889) 
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 798 1066 679 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_0()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_1()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_2()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_3()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_4()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_5()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_6()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_7()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_8()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_9()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_10()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_11()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_12()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_13()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_14()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_15()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_16()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_17()V PASSED
daikon.test.split.SplitterFactoryTest:testmisc_Fib_main_18()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_19()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_20()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_21()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_22()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_23()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_24()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_25()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_26()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_27()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_28()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_29()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_30()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_31()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_32()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__33()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__34()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__35()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__36()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__37()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__38()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__39()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__40()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__41()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__42()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__43()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.inv.Invariant:prob_or(DD)D
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:noDups([I)Z
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_48()Z
utilMDE.FuzzyFloat:ne(DD)Z
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.JavaParser:jj_2_18(I)Z
daikon.inv.ValueSet:ValueSet(I)V
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
utilMDE.Intern:intern([J)[J
daikon.Quant:pairwiseLT([I[I)Z
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.Quant:eltwiseEqual([I)Z
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.VarInfo:get_all_simple_names()Ljava.util.List;
daikon.VarInfo:domainTypeIOA()Ljava.lang.String;
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.ArraysMDE:concat([I[I)[I
daikon.ModBitTracker:num_sets()I
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.Quant:pairwiseGT([I[I)Z
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:eltsGteIndex([I)Z
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:indexOf([II)I
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
utilMDE.Intern:intern([I)[I
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3_15()Z
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.ArraysMDE:noDuplicates([D)Z
utilMDE.FuzzyFloat:eq(DD)Z
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:subsetOf([D[F)Z
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.Quant:eltsNotEqualIndex([I)Z
jtb.JavaParser:jj_3R_52()Z
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
jtb.JavaCharStream:GetImage()Ljava.lang.String;
utilMDE.ArraysMDE:min_max([I)[I
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_3_10()Z
utilMDE.MathMDE:gcd(JJ)J
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
daikon.Quant:pairwiseLTE([I[I)Z
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.Ppt:Ppt()V
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.UpperBoundCore:calc_modulus()J
jtb.JavaParserTokenManager:MoreLexicalActions()V
jtb.JavaParser:jj_3R_148()Z
daikon.Quant:subsetOf([S[S)Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_68()Z
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:noDuplicates([J)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.Quant:lexGT([I[I)Z
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
jtb.JavaParser:jj_3_25()Z
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.ProglangType:isIntegral()Z
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.test.TestQuant:removeAdjacentDups([I)[I
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_87()Z
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
jtb.JavaParser:jj_3R_51()Z
jtb.JavaCharStream:backup(I)V
daikon.VarInfo:esc_name()Ljava.lang.String;
jtb.JavaParser:jj_3_35()Z
daikon.Quant:eq(II)Z
jtb.JavaParser:jj_3R_63()Z
daikon.Quant:subsetOf([B[I)Z
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_70()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.LimitedSizeIntSet:size()I
daikon.inv.Invariant:logOn()Z
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quantify:quantify([Ldaikon.VarInfo;)[Ldaikon.Quantify.QuantifyReturn;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.Quantify.IOAQuantification:getClosingExp()Ljava.lang.String;
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.VarInfoName.Elements:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE:modulus([I)[I
daikon.Quant:eltsLTE([II)Z
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.ProglangType:isPseudoArray()Z
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_54()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
daikon.Quant:sameLength([I[I)Z
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.VarInfo:name()Ljava.lang.String;
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.ValueTuple:isMissing(I)Z
jtb.JavaParser:jj_3R_98()Z
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
jtb.JavaParser:jj_3_1()Z
daikon.Debug:logDetail()Z
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_120()Z
daikon.inv.unary.sequence.EltNonZero:format_esc()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.VarInfo:simplify_quantify(Ljava.util.EnumSet;[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.Quant:union([I[I)[I
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.JavaParser:jj_3R_74()Z
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
jtb.JavaParser:jj_3R_124()Z
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
jtb.JavaParser:jj_2_35(I)Z
jtb.JavaParser:jj_3R_56()Z
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.inv.unary.sequence.EltNonZero:EltNonZero(Ldaikon.PptSlice;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.JavaParser:jj_3R_72()Z
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
jtb.JavaCharStream:getEndColumn()I
daikon.inv.Invariant:prob_and(DDD)D
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
utilMDE.ArraysMDE:max([I)I
daikon.test.FormatTestCase:getDiffString()Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_61()Z
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
utilMDE.Intern:internSubsequence([JII)[J
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.PptMap:asCollection()Ljava.util.Collection;
utilMDE.Intern:internSubsequence([III)[I
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3R_133()Z
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V | ASSIGN | 49179 | = null
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.Quant:lexLTE([I[I)Z
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfo:relate_var()V
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.ProglangType:isPointerFileRep()Z
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:gte(II)Z
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.ProglangType:isScalar()Z
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
jtb.JavaParser:jj_2_36(I)Z
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.inv.unary.sequence.EltNonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:missing_numbers([I)[I
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
jtb.JavaParser:jj_3R_101()Z
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE:sum([D)D
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.VarInfoName.Elements:ioa_name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ModBitTracker:num_samples()I
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;Ljava.lang.String;)V
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_16()Z
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.Quant:subsetOf([J[J)Z
daikon.Quant:eltsLT([II)Z
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
jtb.JavaCharStream:FillBuff()V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:negate(I)I
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarComparabilityImplicit:alwaysComparable()Z
jtb.JavaParser:jj_3_17()Z
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
daikon.Quant:memberOf(I[I)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
jtb.JavaParser:jj_3R_110()Z
daikon.ModBitTracker:split(I)I
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_4()Z
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.Quantify.IOAQuantification:getMembershipRestriction(I)Ljava.lang.String;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_125()Z
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
jtb.JavaParser:jj_3R_122()Z
daikon.VarInfoName.ElementsFinder:inPre()Z
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
jtb.JavaParser:jj_3R_49()Z
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
jtb.JavaParser:jj_3R_55()Z
daikon.inv.OutputFormat:isJavaFamily()Z
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;)V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_2_13(I)Z
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.inv.Invariants:Invariants()V
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern:internStrings([Ljava.lang.String;)V
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
jtb.JavaParser:jj_ntk()I
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
jtb.JavaParser:jj_3R_89()Z
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
jtb.JavaParser:jj_3R_161()Z
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Quant:eq(JJ)Z
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltNonZero:format_ioa()Ljava.lang.String; | ASSIGN | 4342 | = null
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.PptSlice1:num_samples()I
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.Quant:isReverse([I[I)Z
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.ProglangType:isArray()Z
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.InorderFlattener:nodes()Ljava.util.List;
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
utilMDE.ArraysMDE:indexOf([ZZ)I
jtb.JavaParser:jj_3R_117()Z
utilMDE.OrderedPairIterator:setnext1()V
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.VarInfo:dbc_name()Ljava.lang.String; | RETURN | 99658 | return null
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.JavaParser:jj_2_12(I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
jtb.JavaParser:jj_3R_115()Z
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
daikon.Quant:eltwiseNotEqual([I)Z
jtb.JavaParser:jj_3R_119()Z
jtb.JavaParser:jj_3R_47()Z
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.Quant:eltwiseLTE([I)Z
jtb.JavaParser:jj_2_14(I)Z
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.PptName:isEnterPoint()Z
daikon.Quant:pairwiseEqual([I[I)Z
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
jtb.JavaParser:jj_3R_149()Z
utilMDE.ArraysMDE:min([I)I
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.Ppt:indexOf(Ljava.lang.String;)I
jtb.JavaParser:jj_2_5(I)Z
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.Quant:eltwiseLT([I)Z
daikon.inv.unary.scalar.NonZero:enabled()Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_100()Z
utilMDE.WeakHasherMap:processQueue()V
jtb.JavaParser:jj_3R_105()Z
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:getToken(I)Ljtb.Token;
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltsGtIndex([I)Z
daikon.inv.unary.sequence.EltLowerBound:format_simplify()Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_210()Z
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.ValueTuple:size()I
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_118()Z
jtb.JavaParser:jj_3R_114()Z
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
jtb.JavaParser:jj_3R_135()Z
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.Quant:lt(II)Z
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
jtb.JavaParser:jj_2_25(I)Z
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_2_15(I)Z
daikon.ProglangType:base()Ljava.lang.String;
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.MathMDE:gcd_differences([I)I
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_2_4(I)Z
daikon.VarInfo:isPrestate()Z
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.Quant:slice([III)[I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.VarInfoName.InorderFlattener:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
jtb.JavaParser:jj_3_30()Z
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:memberOf(D[F)Z
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
jtb.JavaParser:jj_3_28()Z
daikon.Quant:memberOf(F[F)Z
daikon.VarInfoName.Simple:isLiteralConstant()Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.Quant:pairwiseSquare([I[I)Z
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.ValueTuple:isMissingNonsensical(I)Z
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.VarInfoName.Elements:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.Quant:memberOf(S[S)Z
jtb.JavaParser:jj_3_18()Z
daikon.ProglangType:isFloat()Z
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
jtb.JavaParser:jj_3R_57()Z
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.InvariantFormatTester:execute()Z
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
daikon.Quantify.Term:ioa_name()Ljava.lang.String;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
jtb.JavaCharStream:getBeginLine()I
daikon.Quant:setDiff([I[I)[I
jtb.JavaParser:jj_3R_76()Z
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
jtb.JavaParser:jj_3_22()Z
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.Quantify.IOAQuantification:IOAQuantification([Ldaikon.VarInfo;)V
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
daikon.PptSlice0:arity()I
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.inv.unary.sequence.EltNonZero:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:gt(II)Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
utilMDE.ArraysMDE:subarray([III)[I
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
jtb.JavaParser:jj_3R_163()Z
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
utilMDE.ArraysMDE:element_range([I)I
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfo:get_enclosing_var()Ldaikon.VarInfo;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:sum([I)I
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments;
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.Quant:memberOf(F[D)Z
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.inv.Invariant:getConfidence()D
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
jtb.JavaParser:jj_3R_67()Z
daikon.test.FormatTestCase.SingleOutputTestCase:getDiffString()Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
jtb.JavaParser:jj_3R_121()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.Quant:lexEqual([I[I)Z
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
utilMDE.OrderedPairIterator:hasNext()Z
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3_36()Z
jtb.JavaParser:jj_3R_50()Z
daikon.Quant:eltsEqual([II)Z
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.inv.filter.ParentFilter:ParentFilter()V
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.MathMDE:mod_positive(II)I
utilMDE.SimpleLog:SimpleLog(Z)V
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:jj_scan_token(I)Z
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.ProglangType:baseIsFloat()Z
daikon.Quant:eltsNotEqual([II)Z
daikon.inv.Invariant:prob_and(DD)D
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.Quant:eltsGTE([II)Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaCharStream:BeginToken()C
jtb.JavaParser:jj_3R_85()Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.test.FormatTestCase:passes()Z
daikon.Quant:intersection([I[I)[I
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext2()V
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.ModBitTracker:num_vars()I
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.Invariant:logDetail()Z
jtb.JavaParser:jj_3_19()Z
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
jtb.JavaParser:jj_3_20()Z
jtb.syntaxtree.NodeList:NodeList()V
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_97()Z
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
daikon.diff.InvMap:InvMap()V
daikon.VarInfoName.NodeFinder:inPre()Z
utilMDE.UtilMDE:lineNumberFileReader(Ljava.lang.String;)Ljava.io.LineNumberReader;
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.PptSlice2:arity()I
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
utilMDE.ArraysMDE:subarray([JII)[J
daikon.inv.filter.InvariantFilters:InvariantFilters()V
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName.InorderFlattener:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.diff.Node:Node()V
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
utilMDE.MathMDE:sign(I)I
daikon.VarInfo:is_direct_non_slice_array()Z
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.VarInfo:simplify_name()Ljava.lang.String;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:indexFor(II)I
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.diff.RootNode:RootNode()V
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
jtb.JavaParser:jj_3R_60()Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;)Z
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:memberOf(J[J)Z
daikon.inv.Invariant:isWorthPrinting()Z
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.PptName:PptName(Ljava.lang.String;)V
jtb.JavaParser:jj_2_17(I)Z
utilMDE.MathMDE:pow(II)I
utilMDE.MathMDE:mod_positive(JJ)J
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String; | ASSIGN | 282074 | = null
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
jtb.JavaParser:jj_3_29()Z
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
daikon.Quant:setEqual([I[I)Z
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
jtb.JavaParser:jj_3R_107()Z
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
utilMDE.Options.OptionInfo:argument_required()Z
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:isSubset([D[D)Z
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.inv.unary.sequence.EltNonZero:enabled()Z
jtb.JavaParser:jj_3R_80()Z
daikon.Quant:eq(FF)Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_2_1(I)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
jtb.JavaParser:jj_3R_58()Z
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.Ppt:find_var_by_name(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName:name()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:sum([[D)D
daikon.PptTopLevel:name()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
jtb.JavaParser:jj_2_21(I)Z
utilMDE.FuzzyFloat:gte(DD)Z
utilMDE.MathMDE:gcd(II)I
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
utilMDE.MathMDE:gcd([I)I
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
daikon.PptSlice1:arity()I
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;Z)Z
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.VarInfo:new_ppt()V
daikon.inv.Invariant:justified()Z
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
jtb.JavaParser:jj_2_3(I)Z
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
utilMDE.Assert:assertTrue(Z)V
jtb.JavaParser:jj_3R_73()Z
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.Debug:logOn()Z
jtb.JavaCharStream:getEndLine()I
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.Quant:subsetOf([I[I)Z
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ValueTuple:isMissingFlow(I)Z
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.Quant:eltsEqualIndex([I)Z
daikon.Quantify.IOAQuantification:getQuantifierExp()Ljava.lang.String;
daikon.Quantify.QuantifyReturn:QuantifyReturn(Ldaikon.VarInfo;)V
utilMDE.FuzzyFloat:lte(DD)Z
jtb.JavaParserTokenManager:jjStopAtPos(II)I
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_27()Z
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
jtb.JavaParser:jj_3R_162()Z
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:pairwiseDivides([I[I)Z
jtb.JavaCharStream:getBeginColumn()I
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.Quant:eltsGT([II)Z
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.VarInfo:simplify_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.Quant:lexNotEqual([I[I)Z
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_104()Z
daikon.Quantify.IOAQuantification:getFreeVarName(I)Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
daikon.Quant:eltwiseGT([I)Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.LimitedSizeIntSet:add(I)V
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.Quantify.IOAQuantification:getFreeVar(I)Ldaikon.Quantify.Term;
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
jtb.JavaParser:jj_2_16(I)Z
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.unary.sequence.EltNonZero:is_pointer()Z
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.Quant:subsetOf([F[F)Z
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.ModBitTracker:ModBitTracker(I)V
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_96()Z
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
utilMDE.UtilMDE:lineNumberFileReader(Ljava.io.File;)Ljava.io.LineNumberReader;
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
jtb.JavaParser:jj_3_14()Z
daikon.VarInfoName:hashCode()I
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:lexGTE([I[I)Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.JavaParser:jj_3R_123()Z
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.Quantify.IOAQuantification:getVarIndexedString(I)Ljava.lang.String;
jtb.JavaParser:jj_3_5()Z
daikon.Quant:eltsLtIndex([I)Z
jtb.JavaParser:jj_3R_99()Z
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
jtb.syntaxtree.NodeToken:trimSpecials()V
jtb.JavaParser:jj_3R_126()Z
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.ProglangType:dimensions()I
daikon.ValueTuple:tuplemodHasModified(I)Z
jtb.JavaCharStream:readChar()C
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3_21()Z
daikon.Quant:eltwiseGTE([I)Z
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.FuzzyFloat:lt(DD)Z
jtb.JavaParser:jj_3_13()Z
daikon.inv.unary.sequence.EltNonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
utilMDE.FuzzyFloat:FuzzyFloat()V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_116()Z
daikon.VarInfo:isIOAArray()Z
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.ProglangType:baseIsScalar()Z
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_106()Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.diff.InvMap:toString()Ljava.lang.String;
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:intern([D)[D
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.Quant:eltsLteIndex([I)Z
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_81()Z
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:pairwiseGTE([I[I)Z
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
jtb.JavaParser:jj_3R_103()Z
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.VarInfo:isPointer()Z
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
jtb.Token:newToken(I)Ljtb.Token;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaCharStream:ReadByte()C
daikon.ProglangType:baseIsIntegral()Z
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.Quant:concat([I[I)[I
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.ArraysMDE:noDuplicates([I)Z
jtb.JavaParser:jj_3R_109()Z
jtb.JavaParser:jj_3R_134()Z
jtb.JavaParser:jj_2_10(I)Z
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.inv.unary.LowerBoundCore:calc_range()J
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.Quant:lte(II)Z
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
daikon.Quant:subsetOf([F[D)Z
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.Quant:ne(II)Z
jtb.JavaParser:jj_3R_86()Z
utilMDE.WeakHasherMap:size()I
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_88()Z
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice0:initInvariantsSeen()V
jtb.JavaParser:jj_3R_53()Z
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.InorderFlattener:InorderFlattener(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.Positive:enabled()Z
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.VarInfo:apply_subscript(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_69()Z
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:sorted([I)Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.Quant:eq(DD)Z
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_62()Z
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.Quantify.FreeVar:name()Ljava.lang.String;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
utilMDE.ArraysMDE:sum([[I)I
daikon.Quant:subsetOf([D[D)Z
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.VarInfoName:isLiteralConstant()Z
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltNonZero:format_daikon()Ljava.lang.String;
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
jtb.JavaParser:jj_3_12()Z
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.Quant:lexLT([I[I)Z
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptName:isCombinedExitPoint()Z
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.VarInfo:isDerived()Z
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_102()Z
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.VarInfo:apply_subscript(Ljava.lang.String;)Ljava.lang.String;
utilMDE.FuzzyFloat:gt(DD)Z
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
utilMDE.FuzzyFloat:indexOf([DD)I
jtb.JavaParser:jj_3R_75()Z
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
jtb.JavaParser:jj_3R_108()Z
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltNonZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_77()Z
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
utilMDE.MathMDE:pow_fast(II)I
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.VarInfoName:ioa_name()Ljava.lang.String;
utilMDE.Intern:numIntArrays()I
jtb.JavaParser:jj_3_3()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:toString()Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
171 2 182 4 1038 2 959 2 920 2 1279 2 84 2 730 2 1151 2 
522 6 421 2 950 2 801 2 803 6 914 2 267 2 258 2 614 2 754 2 936 6 
247 6 9 2 60 4 249 2 349 6 725 4 372 2 132 6 959 2 861 6 92 2 46 2 84 2 
1281 8 355 4 646 29 86 16 23 4 25 6 309 2 504 12 443 8 942 8 1217 2 1016 10 833 16 431 10 313 2 630 2 716 10 834 2 53 6 735 2 319 2 719 4 1269 26 254 10 1064 8 562 10 877 4 685 16 959 6 84 6 
760 4 272 6 
1168 2 
1281 2 646 6 23 2 86 2 383 2 504 2 1194 2 1016 2 431 2 1099 2 833 2 1161 2 716 4 652 2 53 2 254 2 1048 2 1269 4 562 2 167 2 685 2 1312 2 858 2 
646 15 86 8 930 4 562 4 504 5 326 4 877 2 608 6 709 2 478 2 685 8 1016 4 431 4 833 8 1162 6 254 4 1269 12 
180 2 937 2 898 2 1300 2 467 2 1302 6 248 4 469 4 403 2 887 2 847 2 387 2 363 4 612 2 448 2 812 2 135 2 365 2 196 2 780 10 619 4 80 4 855 62 119 4 1025 4 369 2 761 2 762 2 726 4 933 10 741 2 819 4 880 4 766 14 125 8 603 4 145 4 1172 2 520 2 991 4 
148 2 579 2 903 2 906 2 1168 2 436 2 144 2 458 2 767 2 990 2 
358 2 591 2 1232 2 920 2 51 4 405 2 445 2 806 2 713 2 715 2 927 2 319 2 1049 4 560 2 453 2 65 2 726 2 456 2 373 2 1249 2 934 2 376 2 1055 4 1057 2 905 2 1176 2 546 2 1218 2 117 2 700 2 736 2 78 2 80 4 1182 2 301 2 517 2 664 2 841 2 959 4 125 2 552 2 84 4 520 2 795 2 
772 4 1281 18 107 6 646 54 23 2 86 32 25 4 27 2 504 22 608 6 942 6 1137 4 89 6 1016 16 431 16 833 32 907 2 716 6 1162 6 53 4 735 2 254 16 1269 48 473 2 930 4 620 4 562 16 1023 6 326 4 496 4 685 32 1224 2 550 4 1248 8 1171 6 123 2 959 4 84 4 1150 2 
612 2 1302 2 125 2 
700 2 975 2 588 2 1291 2 1258 2 62 2 14 10 1106 2 979 2 932 2 172 2 339 2 1288 2 66 22 
667 2 85 2 181 2 357 2 669 2 590 1 87 2 360 1 845 3 675 2 676 6 593 2 924 12 1072 2 678 2 849 4 8 3 925 2 193 2 194 2 195 2 1007 2 1166 32 274 32 856 2 12 24 452 1 277 2 367 2 1088 4 200 2 859 4 98 6 17 2 203 2 1091 2 104 2 462 2 1095 1 20 5 466 2 1254 1 1257 2 692 2 209 1 468 4 1175 2 110 2 870 2 213 2 214 12 1100 2 698 2 292 2 33 3 115 2 778 2 218 3 472 2 221 2 222 4 949 8 38 4 1273 1 1105 2 392 2 951 2 1027 2 952 2 789 2 394 1 124 3 959 32 705 2 794 1 305 2 1031 1 553 8 706 2 796 2 1109 1 1034 8 1037 2 1112 2 885 2 231 2 131 2 52 2 54 3 890 2 492 3 967 2 1198 2 324 2 720 2 721 2 493 4 1200 2 495 2 971 3 240 1 143 16 417 1 1206 3 974 2 1126 16 730 2 246 2 826 2 501 2 1130 1 149 2 1132 2 902 2 572 2 1058 2 330 2 332 1 832 2 1060 2 335 2 153 3 732 6 155 2 509 2 908 16 73 2 1138 2 340 2 577 2 513 16 1221 2 985 1 168 24 915 6 1223 2 739 3 1067 2 917 2 176 1 1316 2 1069 4 989 2 84 34 354 2 744 2 179 3 587 2 843 2 
4 2 
347 2 84 2 
288 2 785 2 84 4 
521 12 992 18 184 6 993 2 359 2 671 2 1155 2 995 4 362 2 674 4 997 2 526 4 1160 54 528 2 852 2 999 54 529 54 1001 2 1002 2 366 2 1165 158 533 12 534 4 368 2 13 4 535 2 371 2 1167 14 536 2 16 2 1010 4 202 4 1011 2 1012 2 540 6 862 2 204 2 863 8 688 54 1013 2 380 2 690 12 695 2 211 6 385 2 867 2 386 4 868 40 697 2 1018 2 1177 2 872 2 1178 4 1020 4 34 2 548 2 215 2 217 2 220 2 701 158 37 2 875 2 1179 2 879 32 225 4 551 4 395 18 1032 2 556 2 557 54 1035 2 886 2 399 2 1193 2 402 48 1043 2 1196 2 1045 4 718 26 891 2 410 2 57 2 411 18 892 54 1050 2 59 2 561 2 1199 4 563 2 723 2 61 2 565 4 566 2 724 4 893 2 415 2 568 2 242 30 244 4 728 4 896 2 729 2 420 2 1211 2 1213 26 899 2 422 2 425 2 70 20 427 2 1215 14 426 2 574 26 575 4 71 26 251 12 731 2 1061 10 72 2 576 2 77 4 79 26 1220 2 912 2 433 2 737 2 82 2 738 2 583 12 435 40 1068 12 438 2 916 4 584 2 743 10 263 2 586 2 918 2 1228 2 441 12 745 2 589 4 265 2 266 2 921 4 268 2 90 2 444 2 749 12 750 4 1238 26 91 2 446 4 1076 12 449 4 598 2 271 4 270 2 1080 2 1243 2 755 4 757 4 756 2 451 2 93 6 759 2 929 56 275 2 1082 2 1084 2 1085 2 931 2 1086 2 600 2 455 2 602 2 1090 4 99 2 281 2 765 2 101 2 769 2 768 2 283 2 284 54 102 10 286 16 461 2 1094 158 463 2 464 6 939 2 1259 2 287 54 609 2 943 2 775 266 1260 32 289 2 613 4 1264 10 114 10 1267 2 1102 2 946 2 118 54 1270 2 621 2 299 2 475 2 476 30 300 2 122 2 955 2 624 2 957 2 1107 12 481 2 793 4 792 54 1276 2 304 2 960 2 1278 2 484 4 1282 4 797 2 306 4 307 2 800 2 488 2 629 2 804 4 315 2 316 4 317 2 133 2 810 10 1116 12 136 2 137 2 321 2 815 2 323 2 968 54 636 2 1292 2 1293 2 640 6 641 2 497 2 327 2 498 2 1295 2 818 2 820 2 643 2 821 4 1298 2 825 10 1131 2 649 2 331 2 1136 2 152 2 507 2 158 4 980 24 653 2 159 54 1304 32 981 2 510 2 163 2 161 2 982 2 343 40 1142 2 983 2 658 2 346 2 659 2 170 2 1145 48 351 2 662 2 1313 2 1146 2 352 2 519 4 666 2 178 2 
1059 2 1111 1 208 2 162 2 
76 2 162 2 
873 2 42 2 1170 2 125 2 
873 2 42 2 1170 2 261 2 125 2 147 2 
689 2 873 2 416 2 125 2 719 2 162 2 
7 2 1176 2 
873 2 618 2 125 2 719 2 
1004 2 1183 2 
595 2 788 2 
397 2 341 2 
197 2 708 2 
595 2 708 2 1266 2 
595 2 325 2 708 2 
595 2 708 2 126 2 
1074 2 595 2 708 2 
400 2 651 6 889 4 873 2 853 2 1052 2 125 2 585 2 
229 2 1192 2 
873 2 416 2 799 2 125 2 147 2 719 2 162 2 
897 2 416 2 162 2 
416 2 970 2 162 2 
506 2 208 2 1192 2 
416 2 162 2 
758 2 1192 2 
784 2 162 2 
544 2 208 2 1192 2 
208 2 26 2 341 2 
208 2 708 2 96 2 
45 2 208 2 1183 2 
595 2 208 2 1149 2 
1192 2 30 2 
532 2 162 2 
558 2 341 2 
539 2 708 2 
1036 2 1183 2 
1103 2 595 2 
976 2 1192 2 
49 2 595 2 
1183 2 570 2 
708 2 1139 2 
1081 2 341 2 
544 2 752 2 208 2 1192 2 
544 2 752 2 208 2 1192 2 1026 2 
208 2 1192 2 998 2 
647 2 208 2 1192 2 
1229 2 940 2 154 2 642 2 
396 4 164 2 68 2 882 2 670 2 1056 2 1233 2 913 2 494 2 638 2 740 2 1186 2 733 2 1226 4 66 6 103 2 644 2 1127 2 
1089 2 208 2 
357 2 
85 2 1231 2 525 2 676 2 924 8 1075 2 450 2 194 2 195 4 1166 6 274 4 1007 2 452 2 856 2 367 2 1088 2 200 2 859 2 98 6 17 2 1091 2 468 4 209 4 110 1 214 8 945 2 115 2 472 2 222 2 38 4 951 2 1027 2 952 2 44 4 791 4 480 2 959 26 705 2 706 2 553 2 796 1 885 2 231 2 1284 2 712 2 1042 2 559 2 967 2 1198 2 720 2 721 2 493 4 1200 2 637 2 1119 2 495 2 143 6 974 2 730 2 246 2 501 2 1130 2 150 2 1058 2 1133 2 330 2 732 5 509 2 73 2 1221 2 432 2 915 2 660 2 1067 2 1069 4 84 26 354 6 843 2 
85 2 1153 2 525 2 676 2 924 8 1075 2 450 2 194 2 195 4 1166 6 274 4 1007 2 452 2 856 2 367 2 1088 2 200 2 859 2 98 6 17 2 1091 2 19 2 468 4 209 2 110 2 214 8 945 2 115 2 472 2 222 2 38 4 951 2 1027 2 952 2 44 4 791 4 480 2 959 26 705 2 706 2 553 2 796 2 885 2 231 2 1284 2 712 2 559 2 967 2 1198 2 720 2 721 2 493 4 1200 2 637 2 495 2 143 6 974 2 730 2 246 2 501 2 1130 2 150 2 1058 2 1133 2 330 2 1060 2 732 6 509 2 73 2 1221 2 432 2 915 2 660 2 1067 2 1069 4 84 26 354 6 1070 2 843 2 
1191 2 
703 2 673 2 
356 2 1071 2 522 6 1154 2 264 2 885 2 801 2 1236 2 803 6 312 2 232 2 677 4 447 2 234 2 717 2 754 4 1289 2 813 2 1005 4 928 10 682 2 493 2 367 2 278 2 200 2 64 2 454 8 1121 2 98 4 1053 2 1124 2 822 2 936 6 460 4 771 8 1014 2 828 2 21 2 866 4 468 2 1058 2 694 2 573 2 505 2 429 2 543 2 508 4 614 2 115 2 1268 2 657 2 514 2 258 4 1225 2 959 6 705 2 842 4 84 12 554 2 843 2 
356 2 1071 2 522 6 1154 2 264 2 885 2 801 2 1236 2 803 8 312 2 232 2 677 4 447 2 234 2 717 2 1163 2 754 4 1289 2 813 2 1005 4 928 10 1006 2 493 2 682 2 367 2 278 2 200 2 64 2 454 8 1121 2 98 4 1053 2 1124 2 822 2 936 8 460 4 771 8 1014 2 828 2 21 2 866 4 468 2 1058 2 694 2 573 2 505 2 429 2 508 4 614 2 115 2 657 2 514 2 581 4 914 2 258 4 1225 2 959 6 705 2 842 4 84 12 554 2 843 2 
356 2 1005 2 522 2 828 2 264 2 866 4 682 2 505 2 803 2 312 2 258 2 1121 2 234 2 1225 2 1053 2 717 2 842 4 754 2 
356 2 1071 2 522 4 1154 2 264 2 885 2 801 2 1236 2 803 6 312 2 232 2 677 4 447 2 234 2 717 2 754 4 1289 2 813 2 1005 4 928 6 682 2 493 2 367 2 278 2 200 2 64 2 454 4 1121 2 98 4 1053 2 1124 2 822 2 936 6 460 4 771 4 1014 2 828 2 21 2 866 4 468 2 1058 2 694 2 573 2 505 2 429 2 543 2 508 4 115 2 1268 2 657 2 514 2 914 2 258 4 1225 2 959 6 705 2 842 4 84 12 554 2 843 2 
356 2 1071 2 522 6 1154 2 264 2 885 2 801 2 1236 2 803 4 267 2 312 2 232 2 677 4 447 2 234 2 717 2 754 4 1289 2 813 2 1005 4 928 6 682 2 493 2 367 2 278 2 200 2 64 2 454 4 1121 2 98 4 1053 2 1124 2 822 2 936 6 460 4 771 4 1014 2 828 2 21 2 866 4 468 2 1058 2 694 2 573 2 505 2 429 2 543 2 508 4 115 2 1268 2 657 2 514 2 258 4 1225 2 959 6 705 2 842 4 84 12 554 2 843 2 
356 2 1071 2 522 6 1154 2 264 2 885 2 801 2 1236 2 803 6 312 2 232 2 677 4 447 2 234 2 717 2 754 4 1289 2 813 2 1005 4 928 6 682 2 493 2 367 2 278 2 200 2 64 2 454 4 1121 2 98 4 1053 2 1124 2 822 2 936 6 460 4 771 8 1014 2 828 2 21 2 866 4 468 2 1058 2 694 2 573 2 505 2 429 2 543 2 508 4 614 2 115 2 1268 2 657 2 514 2 258 4 1225 2 959 6 705 2 842 4 84 12 554 2 843 2 
356 2 1071 2 522 8 1154 2 264 2 885 2 801 2 1236 2 803 6 267 2 312 2 232 2 677 4 447 2 234 2 717 2 754 4 1289 2 813 2 1005 4 928 10 682 2 493 2 367 2 278 2 200 2 64 2 454 8 1121 2 98 4 1053 2 1124 2 822 2 936 8 460 4 771 8 1014 2 828 2 21 2 866 4 468 2 1058 2 694 2 573 2 505 2 429 2 543 2 508 4 614 2 115 2 1268 2 657 2 514 2 258 4 1225 2 959 6 705 2 842 4 84 12 554 2 843 2 
356 2 1071 2 522 6 1154 2 264 2 885 2 801 2 1236 2 803 6 312 2 232 2 677 4 447 2 234 2 717 2 754 4 1289 2 813 2 1005 4 928 10 682 2 493 2 367 2 278 2 200 2 64 2 454 8 1121 2 98 4 1053 2 1124 2 822 2 936 6 460 4 771 8 1014 2 828 2 21 2 866 4 468 2 1058 2 694 2 573 2 505 2 429 2 543 2 508 4 614 2 115 2 1268 2 657 2 514 2 258 4 1225 2 959 6 705 2 842 4 84 12 554 2 843 2 
356 2 844 2 1152 2 522 8 1154 2 183 10 186 2 4 6 525 2 676 2 677 6 850 2 1005 4 1166 8 682 2 856 2 367 2 15 2 200 2 859 2 17 2 542 6 206 6 1014 2 21 2 866 4 694 2 543 2 214 4 36 1 222 2 390 2 38 4 1181 6 44 4 705 2 553 2 554 2 883 2 1189 2 885 2 231 2 404 2 711 2 232 2 234 2 1046 2 717 2 58 8 720 2 1200 2 64 2 1205 2 1053 2 67 2 730 2 1054 2 245 2 246 2 1210 2 424 2 1058 2 573 2 429 2 1062 1 732 6 910 2 1221 2 915 2 258 4 1067 2 437 2 1225 2 742 6 1069 4 84 46 85 2 1071 2 264 2 1234 6 1236 2 267 4 922 7 924 4 447 2 1241 2 1075 2 754 4 928 2 273 7 274 2 278 2 1087 1 1088 2 98 6 764 1 936 12 460 4 1251 6 771 2 1096 1 1256 2 468 4 941 1 110 2 1263 2 291 2 945 4 115 2 293 2 471 2 1271 2 951 2 785 6 952 2 953 4 959 24 1280 2 796 2 485 6 962 6 628 6 801 4 1283 2 803 4 1115 2 1114 1 312 2 1286 1 1289 2 813 2 814 2 632 2 967 12 1290 2 493 4 495 2 1120 6 1121 2 143 6 1124 2 822 2 501 2 828 2 502 6 505 2 330 2 508 8 509 2 157 6 835 1 657 4 514 4 515 4 347 6 660 2 175 6 842 4 354 6 843 2 
1152 2 844 2 356 2 85 2 1071 2 522 8 1154 2 183 10 264 2 1234 6 186 2 4 6 1236 2 676 2 525 2 677 6 924 8 850 2 1241 2 447 2 1075 2 754 4 195 2 928 2 1005 4 274 2 1166 8 682 2 856 2 367 2 278 2 15 2 1088 4 200 2 859 4 98 6 17 2 542 6 1251 6 460 4 936 12 771 6 206 6 1014 2 21 2 1256 2 866 4 468 4 694 2 110 2 543 2 214 8 1263 2 291 2 945 4 614 4 115 2 293 2 471 2 222 4 390 2 1271 2 1022 2 38 4 1181 6 785 6 951 2 952 2 953 4 44 4 959 26 705 2 553 2 1280 2 554 2 485 6 796 2 883 2 962 6 1189 2 885 2 628 6 801 4 1283 2 1115 2 231 2 803 8 404 2 711 2 312 2 232 2 234 2 235 2 1046 2 717 2 1289 2 814 2 58 8 813 2 632 2 967 12 720 2 1290 2 493 4 1200 2 495 2 1120 6 64 2 1121 2 143 6 1205 2 1053 2 822 2 1124 2 67 2 730 2 245 2 1054 2 1210 2 246 2 502 6 828 2 501 2 424 2 1058 2 573 2 330 2 505 2 429 2 508 8 732 6 509 2 157 6 910 2 657 4 514 4 1221 2 515 4 347 6 660 2 915 2 258 4 1067 2 437 2 175 6 742 6 1225 2 1069 4 842 4 354 6 84 48 843 2 
1152 2 844 2 356 2 85 2 1071 2 522 8 1154 2 183 10 264 2 1234 6 186 2 4 6 1236 2 676 2 525 2 677 6 924 8 850 2 1241 2 447 2 1075 2 754 4 195 2 1005 4 928 6 274 2 1166 8 682 2 856 2 367 2 278 2 15 2 1088 4 200 2 454 4 859 4 98 6 17 2 542 6 1251 6 460 4 936 12 771 6 206 6 1014 2 21 2 1256 2 866 4 468 4 694 2 110 2 543 2 214 8 1263 2 291 2 945 4 614 4 115 2 293 2 471 2 222 4 390 2 1271 2 1022 2 38 4 1181 6 785 6 951 2 952 2 953 4 44 4 959 26 705 2 553 2 1280 2 554 2 485 6 796 2 883 2 962 6 1189 2 885 2 628 6 801 4 1283 2 1115 2 803 8 231 2 404 2 711 2 312 2 232 2 234 2 235 2 1046 2 717 2 1289 2 814 2 58 8 813 2 632 2 967 12 720 2 1290 2 493 4 1200 2 495 2 1120 6 64 2 1121 2 143 6 1205 2 1053 2 822 2 1124 2 67 2 730 2 245 2 1054 2 1210 2 246 2 502 6 828 2 501 2 424 2 1058 2 573 2 330 2 505 2 429 2 508 8 732 6 509 2 157 6 910 2 657 4 514 4 1221 2 515 4 347 6 660 2 915 2 258 4 1067 2 437 2 175 6 742 6 1225 2 1069 4 842 4 354 6 84 48 843 2 
356 2 844 2 1152 2 522 10 1154 2 183 8 3 6 361 2 186 2 4 12 187 6 525 2 676 4 677 6 850 2 195 2 1005 4 1166 12 682 2 856 2 367 2 15 2 200 2 859 4 17 2 542 12 206 6 1014 2 21 2 866 4 865 6 694 2 543 2 214 10 549 2 222 4 390 2 1022 2 38 4 1181 6 44 6 705 2 553 4 554 2 883 2 1189 2 885 2 231 2 404 2 711 2 407 6 232 2 234 2 235 2 1046 2 717 2 58 8 720 2 1200 2 64 2 1205 2 1053 2 67 2 730 2 245 2 246 2 1210 2 424 2 1058 2 573 2 429 2 732 6 910 2 1221 2 914 2 915 4 258 4 1067 2 259 2 437 2 1225 2 742 6 1069 4 84 52 85 2 1071 2 264 2 1234 6 1236 2 267 2 924 10 447 2 1241 2 1075 2 596 6 754 4 928 6 274 4 278 2 1088 4 454 4 98 6 100 6 936 16 460 4 1251 12 771 6 1256 2 468 4 110 2 1263 2 290 2 291 2 945 4 614 4 1101 2 115 2 615 2 293 2 471 2 617 2 1271 2 951 2 785 12 952 2 790 6 953 4 959 24 1280 2 796 2 485 6 962 6 628 6 487 6 801 4 1283 2 803 10 1115 2 312 2 1289 2 813 2 814 2 632 2 967 10 1290 2 493 4 495 2 1120 6 1121 2 143 8 1124 2 822 2 501 2 828 2 502 12 505 2 330 2 508 8 509 2 338 2 157 6 657 4 514 4 515 4 986 6 347 12 660 4 175 6 842 4 354 8 843 2 
356 2 1071 2 1014 2 522 6 1154 2 21 2 828 2 866 2 694 2 801 2 573 2 1236 2 505 2 803 6 543 2 312 2 677 2 232 2 508 2 447 2 234 2 614 2 754 4 928 4 682 2 454 4 258 4 1053 2 822 2 1124 2 842 2 84 4 460 2 936 4 771 6 
356 2 85 2 1071 2 522 6 357 2 1154 2 183 2 1236 2 525 2 676 3 677 2 1072 2 447 2 1075 2 754 4 928 2 1166 8 274 3 682 2 367 2 200 2 98 6 17 2 460 2 936 4 771 6 1014 2 21 2 866 2 468 4 694 2 1175 2 110 2 543 2 945 2 614 2 115 2 38 4 782 2 951 2 952 2 120 2 44 4 959 24 705 2 796 2 885 2 801 2 803 6 231 2 312 2 232 2 234 2 1289 2 320 2 967 4 720 2 493 4 1200 2 495 2 143 6 1053 2 1124 2 822 2 730 2 1054 2 246 2 501 2 828 2 901 2 572 2 1058 2 573 2 505 2 330 2 508 2 732 6 509 2 1143 2 1307 3 1221 2 915 3 258 4 1067 2 1069 4 842 2 84 28 354 6 843 2 
212 2 573 2 1124 2 
212 2 573 2 1124 2 
844 2 85 2 356 2 522 12 1154 2 183 2 267 4 525 2 677 4 924 4 1075 2 754 4 1005 4 928 6 1166 2 274 2 856 4 367 2 1088 4 200 2 454 4 686 4 859 4 98 6 280 2 17 2 285 2 936 16 460 2 771 6 866 2 209 2 468 4 210 2 694 2 110 2 212 2 696 2 214 4 1262 2 470 2 945 6 614 4 115 2 116 2 35 2 222 4 390 2 38 4 951 2 878 2 952 2 953 2 482 4 959 16 705 2 554 2 796 2 130 2 885 2 801 4 1115 2 231 2 803 12 712 4 717 2 813 2 967 4 720 2 493 4 1200 2 64 2 1121 2 143 2 1207 2 1124 4 243 2 730 2 246 2 1212 2 501 2 828 4 1058 2 573 6 330 2 505 2 1135 2 732 6 508 4 509 2 657 2 514 4 1221 2 515 2 914 4 257 2 258 4 1067 2 260 2 1314 2 742 2 1069 4 842 2 84 24 354 2 843 2 
1212 2 967 2 183 2 816 2 264 2 424 2 391 2 673 2 683 2 711 2 953 2 1262 2 742 2 959 2 705 2 1207 2 84 4 
844 2 85 2 356 2 522 12 1154 2 88 2 267 4 525 2 677 4 924 4 1075 2 594 2 754 4 1005 4 928 6 854 2 1166 2 274 4 856 4 367 2 278 2 1088 4 200 2 454 4 686 4 859 4 98 6 17 2 460 2 936 16 771 6 866 2 468 4 694 2 110 2 212 2 696 2 214 4 1262 2 470 2 945 6 614 4 115 2 35 2 222 4 390 2 38 4 951 2 878 4 952 2 482 4 959 16 705 2 554 2 796 2 130 2 885 2 801 4 1115 2 231 2 803 12 712 4 717 2 813 2 967 2 720 2 493 4 1200 2 64 2 1121 2 143 2 1204 2 1207 2 1124 4 243 2 730 2 246 2 1212 2 501 2 828 4 1058 2 573 6 330 2 505 2 1135 2 508 4 732 6 509 2 657 4 514 4 1221 2 1309 2 515 2 914 4 257 2 258 4 1067 2 260 2 1314 2 742 2 1069 4 842 2 84 24 354 2 843 2 
844 2 85 2 356 2 522 12 1154 2 183 2 267 4 525 2 677 4 924 4 1075 2 754 4 1005 4 928 6 1166 2 274 2 856 4 367 2 278 2 1088 4 200 2 454 4 686 4 859 4 98 6 17 2 936 16 460 2 771 6 866 2 209 1 468 4 694 2 110 2 212 2 696 2 214 4 1262 2 470 2 945 6 614 4 115 2 219 2 35 2 222 4 390 2 38 4 951 2 878 2 952 2 953 2 482 4 959 16 705 2 554 2 796 2 130 2 885 2 801 4 1115 2 231 2 803 12 712 4 1044 2 717 2 813 2 967 4 720 2 493 4 1200 2 64 2 1121 2 143 2 146 2 1207 2 1124 4 243 2 730 2 246 2 1212 2 501 2 828 4 1058 2 573 6 330 2 505 2 1135 2 732 6 508 4 509 2 1219 2 657 4 514 4 1221 2 515 2 914 4 257 2 258 4 1067 2 260 2 1314 2 742 2 177 2 1069 4 842 2 84 24 354 2 843 2 
0 1 361 2 672 4 676 22 364 2 679 2 680 2 1000 2 1003 2 10 1 681 6 367 2 684 2 685 8 1008 2 1009 2 17 4 375 2 1015 12 382 2 24 10 25 4 384 8 693 2 1016 4 32 1 1019 2 1021 2 699 2 389 2 38 28 39 2 40 2 1025 2 702 2 393 2 41 2 44 12 704 2 1030 2 705 2 1033 2 47 10 48 18 398 4 50 4 707 2 1040 2 710 3 406 2 714 2 1041 2 1047 4 412 5 720 2 413 4 1051 2 63 6 414 2 727 2 418 4 67 2 730 4 69 4 1058 2 428 2 431 4 732 68 734 2 75 24 1065 4 81 4 432 2 1066 2 1067 2 83 2 1069 32 84 90 85 2 746 2 86 8 748 16 442 4 1073 2 1077 1 450 16 1079 2 94 2 95 2 452 2 1083 4 98 6 770 2 109 2 108 4 468 4 110 18 776 1 113 10 1101 2 115 2 777 4 779 4 782 2 119 2 783 4 477 3 787 8 120 2 479 2 123 4 480 2 1108 2 483 2 127 3 128 4 796 18 798 2 1110 4 1113 2 807 10 134 4 491 2 1117 2 817 2 139 2 1118 2 493 4 141 6 140 16 495 2 142 2 499 2 143 14 1122 2 1123 4 1126 4 823 4 1128 2 500 23 827 2 1130 2 501 4 829 4 150 2 504 6 1133 2 831 2 833 8 509 2 160 12 836 4 511 2 1141 2 513 8 165 2 1143 2 838 2 839 2 516 2 169 10 173 16 1147 2 1148 2 843 2 523 4 185 2 186 2 188 2 189 4 524 14 1157 4 190 2 525 2 848 2 191 2 1159 6 1162 6 192 2 1164 8 530 2 531 2 1166 32 856 4 200 2 201 2 857 16 860 1 541 4 205 18 1174 4 214 34 549 2 547 4 1180 4 1184 2 1185 2 226 4 880 2 553 22 555 2 1188 2 1189 2 884 2 228 4 1190 3 885 2 231 2 888 6 559 2 1197 4 236 2 237 1 562 4 1200 2 564 2 1201 2 239 2 567 2 1202 2 1203 2 894 2 241 4 569 4 895 2 1208 2 1209 2 246 8 900 2 901 2 248 2 1214 2 904 2 250 2 571 2 1216 2 252 2 907 2 253 2 254 4 255 2 910 2 256 2 911 2 1221 2 580 2 582 2 915 16 1222 1 1230 6 919 1 1237 2 924 37 923 2 1241 2 1244 2 1245 2 274 22 1246 2 1247 1 601 2 279 3 1250 2 282 2 935 2 604 16 1252 1 938 2 605 3 606 2 1255 4 607 2 942 6 610 2 611 2 290 2 291 4 945 2 1265 16 1269 12 615 2 293 2 294 6 295 2 616 4 617 2 296 6 297 22 619 2 951 8 952 2 954 4 622 4 623 2 956 4 1274 2 302 2 625 14 959 74 303 8 1277 30 1281 4 627 2 963 2 311 2 310 4 1284 2 314 10 318 2 1287 2 966 4 967 2 633 2 634 2 635 4 326 4 637 2 639 2 1297 2 1299 2 645 6 646 14 648 4 1301 2 977 2 978 2 330 2 333 8 337 4 338 2 1305 2 655 2 342 3 344 4 1307 2 345 2 1308 2 348 2 660 46 1311 18 1310 12 350 8 663 2 1315 2 665 2 354 14 1317 4 
24 2 904 2 710 2 676 2 807 2 253 2 295 2 781 2 817 2 1166 2 274 2 345 2 1201 2 495 2 169 4 915 2 660 6 414 2 44 2 143 2 959 2 895 2 354 2 84 2 
24 2 904 2 710 2 676 2 807 2 253 2 295 2 781 2 817 2 1166 2 274 2 345 2 1201 2 495 2 169 4 915 2 660 6 414 2 44 2 143 2 959 2 895 2 354 2 84 2 
24 2 904 2 710 2 676 2 807 2 253 2 295 2 781 2 817 2 1166 2 274 2 345 2 1201 2 495 2 169 4 915 2 660 6 414 2 44 2 143 2 959 2 895 2 354 2 84 2 
646 4 2 2 486 2 86 2 25 2 748 6 942 4 1156 4 650 2 334 4 676 3 1016 2 431 2 1239 2 833 2 1159 3 809 2 254 2 1269 4 490 2 513 2 296 3 1166 2 274 3 562 2 1024 4 199 2 97 2 495 2 685 2 241 2 959 4 626 2 1092 4 1296 2 262 4 895 2 864 3 1126 2 84 10 
1281 2 2 2 86 2 486 2 748 6 1156 4 676 2 1239 2 1159 2 809 2 490 2 274 2 1166 2 562 2 199 2 495 2 97 2 685 2 241 2 1296 2 1092 4 895 2 1126 2 864 2 646 4 25 2 504 2 942 4 650 2 334 4 1016 2 833 2 431 2 735 2 1269 4 254 2 513 2 296 2 1024 4 959 4 626 2 262 4 84 10 
1281 2 2 2 86 2 486 2 748 6 1156 4 676 2 1239 2 1159 2 809 2 490 2 274 2 1166 2 562 2 199 2 495 2 97 2 685 2 241 2 1296 2 1092 4 895 2 1126 2 864 2 646 4 25 2 504 2 942 4 650 2 334 4 1016 2 833 2 431 2 735 2 1269 4 254 2 513 2 296 2 1024 4 959 4 626 2 262 4 84 10 
1281 2 2 2 86 2 486 2 748 6 1156 4 676 2 1239 2 1159 2 809 2 490 2 274 2 1166 2 562 2 199 2 495 2 97 2 685 2 241 2 1296 2 1092 4 895 2 1126 2 864 2 646 4 25 2 504 2 942 4 650 2 334 4 1016 2 833 2 431 2 735 2 1269 4 254 2 513 2 296 2 1024 4 959 4 626 2 262 4 84 10 
1281 4 2 2 86 2 486 2 748 6 1156 4 676 2 1239 2 1159 2 809 2 490 2 274 2 1166 2 562 2 199 2 495 2 97 2 685 2 241 2 1296 2 1092 4 895 2 1126 2 864 2 646 4 25 2 504 4 942 4 650 2 334 4 1016 2 833 2 431 2 735 4 1269 4 254 2 513 2 296 2 1024 4 959 4 626 2 262 4 84 10 
538 2 138 2 527 2 450 2 722 2 926 2 74 2 
871 2 1294 2 94 2 926 2 988 2 238 2 
378 2 1300 1 423 2 1058 2 996 2 5 2 887 1 808 2 597 2 1242 2 55 2 512 2 1306 2 578 2 223 1 973 2 661 2 43 2 987 2 224 2 1029 1 959 8 353 2 84 10 1251 2 1093 1 
1281 3 358 2 646 15 86 6 25 2 504 5 1097 2 942 4 1016 6 715 2 833 6 431 6 1162 4 735 2 1269 12 254 6 1305 2 473 1 620 2 1023 4 562 6 81 2 474 2 326 2 582 2 685 6 1248 2 439 2 959 6 419 2 84 6 
656 4 773 1 308 2 11 2 786 2 805 2 112 2 334 2 409 2 336 6 1169 2 909 2 959 1 1092 2 262 2 1303 2 84 1 216 2 
656 4 308 2 11 2 786 2 805 2 112 4 334 2 409 4 336 6 1169 4 909 2 1092 2 262 2 1303 2 216 2 
656 4 773 1 308 2 11 2 786 2 805 2 112 8 334 2 409 8 336 10 1169 8 909 6 959 1 1092 2 262 2 1303 2 84 1 216 8 
656 2 308 2 11 2 786 2 805 2 112 2 334 2 409 2 336 2 1169 2 1092 2 262 2 1303 2 
440 2 0 6 668 26 919 2 523 6 442 10 846 24 592 10 189 6 190 4 924 28 751 10 1073 4 1077 2 192 4 1164 18 1000 8 530 4 10 4 198 12 276 4 1083 10 370 18 537 2 1247 4 763 1 687 4 860 2 18 4 541 6 282 8 459 2 935 8 205 4 770 4 377 2 1252 4 105 2 108 6 1255 6 207 4 1174 24 384 36 209 4 774 26 110 58 29 2 776 2 869 24 113 50 944 4 32 2 777 6 547 6 294 12 779 10 616 6 388 4 1104 4 297 34 38 88 1272 90 1180 6 951 14 787 17 477 7 1185 2 41 4 954 6 622 6 956 24 226 6 959 134 303 16 1277 124 127 7 796 58 129 8 47 92 398 6 1110 6 1190 8 50 6 1113 4 310 6 314 84 1285 4 965 24 811 6 631 2 56 4 491 4 966 6 412 8 413 6 969 8 635 6 972 2 1202 4 1203 4 1123 24 418 10 824 2 246 14 500 22 645 15 501 8 648 42 829 6 503 2 333 16 732 248 1141 4 837 10 1065 42 165 4 344 6 984 90 434 2 1144 2 840 2 1222 2 350 16 663 11 1069 112 1227 8 84 150 1317 10 
796 2 881 2 440 2 129 2 0 4 398 2 994 4 442 2 230 2 401 2 802 2 846 2 592 2 189 2 408 2 489 2 751 2 924 38 233 2 1158 2 964 2 851 2 753 2 965 2 631 2 1164 2 1000 2 322 2 412 6 599 4 10 2 1118 4 276 2 1083 2 418 2 374 2 282 2 1173 2 935 2 328 2 377 2 246 2 106 2 329 2 108 2 1253 2 1129 2 22 2 501 2 381 2 691 2 503 2 384 2 209 2 110 2 28 2 1134 2 29 2 869 2 333 4 1017 2 1098 2 732 44 156 2 545 2 777 2 547 2 1140 2 837 2 779 2 874 4 38 20 166 2 298 2 1144 2 951 2 1028 2 787 2 350 4 121 2 174 2 173 6 226 2 1275 2 958 2 959 44 303 4 1069 20 1277 6 961 2 84 46 1317 2 
440 2 0 2 1 4 747 8 442 6 1235 4 6 2 189 4 190 4 924 14 1073 4 1240 8 192 2 1078 4 753 10 1164 10 1000 2 530 4 1083 4 537 2 1247 4 541 4 282 2 770 4 935 2 1252 4 377 2 105 2 106 2 465 2 108 4 381 10 1255 4 384 6 110 28 28 2 111 2 776 2 1261 4 113 8 31 32 777 4 547 4 294 14 779 4 616 4 947 4 297 30 38 36 1180 4 951 6 787 10 954 4 622 4 226 4 1187 2 959 70 303 10 227 8 1277 24 127 4 961 10 796 30 47 24 1110 4 398 4 1190 4 50 4 1113 4 1039 4 310 4 1195 16 314 24 631 2 491 4 966 4 412 6 413 4 635 4 1202 4 1203 4 1123 8 418 4 1125 2 246 6 645 8 1129 2 501 2 648 16 829 4 503 2 151 8 333 10 430 16 732 104 1141 4 654 4 1065 8 165 4 344 4 1144 2 1222 2 350 10 518 2 1069 44 84 78 1317 4 
796 12 440 2 0 2 398 4 1190 4 442 2 189 4 924 14 1077 2 192 2 631 2 1164 2 1000 2 412 4 322 2 1083 2 1247 2 860 2 418 2 282 2 459 2 205 2 935 2 377 2 1252 2 246 2 500 10 645 6 108 4 501 2 503 2 384 2 209 2 28 2 110 12 29 2 333 6 732 40 32 2 777 4 547 4 779 2 38 14 297 6 1144 2 951 2 434 2 477 2 787 2 41 2 350 6 663 2 226 4 303 6 959 26 1069 14 1277 8 84 28 1317 2 
269 2 
948 1 379 1 1063 1 457 1 876 1 830 1 
948 1 379 1 1063 1 457 1 876 1 830 1 
948 1 379 1 1063 1 457 1 876 1 830 1 
948 1 379 1 1063 1 457 1 876 1 830 1 
948 1 379 1 1063 1 457 1 876 1 830 1 
948 1 379 1 1063 1 457 1 876 1 830 1 
948 1 379 1 1063 1 457 1 876 1 830 1 
948 1 379 1 1063 1 457 1 876 1 830 1 
948 1 379 1 1063 1 457 1 876 1 830 1 
948 1 379 1 1063 1 457 1 876 1 830 1 
948 1 379 1 1063 1 457 1 876 1 830 1 
948 1 379 1 1063 1 457 1 876 1 830 1 
948 1 379 1 1063 1 457 1 876 1 830 1 
948 1 379 1 1063 1 457 1 876 1 830 1 
948 1 379 1 1063 1 457 1 876 1 830 1 
948 1 379 1 1063 1 457 1 876 1 830 1 
948 1 379 1 1063 1 457 1 876 1 830 1 
948 1 379 1 1063 1 457 1 876 1 830 1 
948 1 379 1 1063 1 457 1 876 1 830 1 
948 1 379 1 1063 1 457 1 876 1 830 1 
948 1 379 1 1063 1 457 1 876 1 830 1 
948 1 379 1 1063 1 457 1 876 1 830 1 
948 1 379 1 1063 1 457 1 876 1 830 1 
948 1 379 1 1063 1 457 1 876 1 830 1 
948 1 379 1 1063 1 457 1 876 1 830 1 
948 1 379 1 1063 1 457 1 876 1 830 1 
948 1 379 1 1063 1 457 1 876 1 830 1 
948 1 379 1 1063 1 457 1 876 1 830 1 
948 1 379 1 1063 1 457 1 876 1 830 1 
948 1 379 1 1063 1 457 1 876 1 830 1 
948 1 379 1 1063 1 457 1 876 1 830 1 
948 1 379 1 1063 1 457 1 876 1 830 1 
948 1 379 1 1063 1 457 1 876 1 830 1 
948 1 379 1 1063 1 457 1 876 1 830 1 
948 1 379 1 1063 1 457 1 876 1 830 1 
948 1 379 1 1063 1 457 1 876 1 830 1 
948 1 379 1 1063 1 457 1 876 1 830 1 
948 1 379 1 1063 1 457 1 876 1 830 1 
948 1 379 1 1063 1 457 1 876 1 830 1 
948 1 379 1 1063 1 457 1 876 1 830 1 
948 1 379 1 1063 1 457 1 876 1 830 1 
948 1 379 1 1063 1 457 1 876 1 830 1 
948 1 379 1 1063 1 457 1 876 1 830 1 
948 1 379 1 1063 1 457 1 876 1 830 1 

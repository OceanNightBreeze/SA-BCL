#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.NullPointerException 844 1222 346 991 898 349 229 876 197 890 1046 429 1281 1332 438 793 5 689 1163 261 164 996 712 412 935 1230 990 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 613 87 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V ERROR java.lang.NullPointerException 1000 
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.VarInfo:simplify_quantify(Ljava.util.EnumSet;[Ldaikon.VarInfo;)[Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.EltwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_75()Z
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:isDerivedSubSequenceOf()Ldaikon.VarInfo;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.VarInfoName:hashCode()I
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
daikon.Quant:subsetOf([J[J)Z
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.ArraysMDE:sum([[D)D
daikon.inv.unary.sequence.SeqIndexIntNonEqual:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:pairwiseLTE([I[I)Z
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.EltNonZero:enabled()Z
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.Quant:pairwiseGTE([I[I)Z
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.ProglangType:isFloat()Z
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.inv.unary.sequence.EltNonZero:format_esc()Ljava.lang.String;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaCharStream:readChar()C
daikon.inv.unary.stringsequence.EltOneOfString:format_simplify()Ljava.lang.String;
utilMDE.ArraysMDE:fn_identity(I)[I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.inv.unary.sequence.EltUpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
jtb.JavaParser:jj_3R_49()Z
daikon.ModBitTracker:num_sets()I
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.ProglangType:baseIsScalar()Z
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltUpperBound:format_esc()Ljava.lang.String;
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.inv.unary.stringsequence.SingleStringSequence:SingleStringSequence(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_124()Z
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.VarInfo:esc_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.UtilMDE.NullableStringComparator:compare(Ljava.lang.String;Ljava.lang.String;)I
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_simplify()Ljava.lang.String;
utilMDE.MathMDE:sign(I)I
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.ModBitTracker:ModBitTracker(I)V
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.inv.binary.twoScalar.LinearBinary:add_modified(JJI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3_35()Z
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quantify.IOAQuantification:getFreeVar(I)Ldaikon.Quantify.Term;
utilMDE.UtilMDE:escapeNonASCII(C)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
jtb.JavaParser:jj_3R_47()Z
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.NoDuplicates:format_ioa()Ljava.lang.String;
daikon.Quant:eltsGT([II)Z
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.EltOneOf:format_ioa()Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:NoDuplicates(Ldaikon.PptSlice;)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.Quant:ne(II)Z
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.VarInfoName.Simple:isLiteralConstant()Z
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.ModBitTracker:num_samples()I
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:get_proto()Ldaikon.inv.Invariant;
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.ProglangType:isPseudoArray()Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
jtb.JavaParser:jj_3_4()Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.Quant:pairwiseLT([I[I)Z
daikon.inv.unary.stringsequence.EltOneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_76()Z
utilMDE.Intern:internSubsequence([JII)[J
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
daikon.inv.unary.string.SingleString:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_52()Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String; | RETURN | 41894 | return null
daikon.ProglangType:base()Ljava.lang.String;
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.VarInfo:get_all_simple_names()Ljava.util.List;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.Quantify.IOAQuantification:getQuantifierExp()Ljava.lang.String;
utilMDE.FuzzyFloat:ne(DD)Z
jtb.JavaParser:jj_3R_89()Z
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:format_simplify()Ljava.lang.String;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_116()Z
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
jtb.JavaParser:jj_2_35(I)Z
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
daikon.ValueTuple:size()I
jtb.JavaCharStream:getBeginColumn()I
daikon.Quant:eq(DD)Z
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:indexFor(II)I
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.Quantify.FreeVar:simplify_name()Ljava.lang.String;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.PptTopLevel.CondIterator:hasNext()Z
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
jtb.JavaParser:jj_2_36(I)Z
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.Quantify.ESCQuantification:get_quantification()Ljava.lang.String;
daikon.Quant:isReverse([I[I)Z
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarComparabilityNone:indexType(I)Ldaikon.VarComparability;
daikon.inv.unary.sequence.NoDuplicates:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual()V
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan(Ldaikon.PptSlice;)V
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.Quantify.Length:simplify_name()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:enabled()Z
utilMDE.ArraysMDE:subarray([JII)[J
daikon.VarInfo:relate_var()V
daikon.inv.unary.stringsequence.EltOneOfString:format_daikon()Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([J)Z
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:jj_3R_57()Z
daikon.ProglangType:isIntegral()Z
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
utilMDE.FuzzyFloat:lte(DD)Z
jtb.JavaParser:jj_2_3(I)Z
daikon.inv.unary.stringsequence.EltOneOfString:EltOneOfString(Ldaikon.PptSlice;)V
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:sum([[I)I
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.Quant:subsetOf([B[I)Z
daikon.inv.unary.sequence.EltwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_62()Z
daikon.Quantify.SimplifyQuantification:SimplifyQuantification(Ljava.util.EnumSet;[Ldaikon.VarInfo;)V
daikon.inv.unary.sequence.NoDuplicates:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_simplify()Ljava.lang.String;
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.unary.sequence.EltOneOf:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_86()Z
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltwiseIntComparison:EltwiseIntComparison(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:min([I)I
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:setEqual([I[I)Z
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.TestUtilMDE:lsis_test(I)V
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
utilMDE.Intern:intern([D)[D
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3_13()Z
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quantify.SimplifyQuantification:get_index(I)Ljava.lang.String;
jtb.JavaParser:jj_3R_135()Z
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Invariant:format()Ljava.lang.String;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.inv.unary.sequence.EltOneOf:format_simplify()Ljava.lang.String;
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quantify.Length:esc_name()Ljava.lang.String;
jtb.JavaParser:jj_3_25()Z
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
utilMDE.MathMDE:pow(II)I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
jtb.JavaParser:jj_3R_81()Z
utilMDE.ArraysMDE:sorted([I)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.inv.unary.sequence.EltUpperBound:format_ioa()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.inv.unary.scalar.UpperBound:enabled()Z
utilMDE.ArraysMDE:min_max([I)[I
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_2_15(I)Z
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_126()Z
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_148()Z
daikon.inv.unary.string.OneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.inv.unary.sequence.EltOneOf:sort_rep()V
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:fn_is_permutation([I)Z
jtb.JavaParser:jj_2_25(I)Z
daikon.ProglangType:isString()Z
daikon.VarComparabilityImplicit:alwaysComparable()Z
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
daikon.inv.Invariant:logOn()Z
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.PptSlice1:arity()I
utilMDE.Intern:internSubsequence([III)[I
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
utilMDE.LimitedSizeIntSet:add(I)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.Quant:concat([I[I)[I
daikon.inv.unary.sequence.EltOneOf:is_boolean()Z
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.Intern:intern([J)[J
daikon.inv.unary.sequence.NoDuplicates:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.Quant:eq(JJ)Z
utilMDE.MathMDE:mod_positive(JJ)J
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.inv.unary.sequence.EltOneOf:EltOneOf(Ldaikon.PptSlice;)V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.Quant:lexLTE([I[I)Z
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_daikon()Ljava.lang.String;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.VarInfo:name()Ljava.lang.String;
daikon.ValueTuple:isMissing(I)Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.string.OneOfString:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.PptSlice0:arity()I
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.PptMap:asCollection()Ljava.util.Collection;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.inv.unary.string.SingleString:var()Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_esc()Ljava.lang.String;
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:jjStopAtPos(II)I
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
jtb.JavaParser:jj_3R_77()Z
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltNonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.Quant:lte(II)Z
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
daikon.VarInfo:get_upper_bound()Ldaikon.Quantify.Term;
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.Quantify.IOAQuantification:getClosingExp()Ljava.lang.String;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.VarInfo:new_ppt()V
daikon.Quant:union([I[I)[I
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_56()Z
daikon.inv.unary.sequence.EltOneOf:format_daikon()Ljava.lang.String;
utilMDE.MathMDE:gcd(II)I
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.VarInfo:simplify_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_ioa()Ljava.lang.String;
daikon.inv.Invariant:isWorthPrinting()Z
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfo:get_enclosing_var()Ldaikon.VarInfo;
daikon.diff.Node:Node()V
daikon.Quantify.Term:simplify_name()Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:enabled()Z
daikon.Quant:memberOf(D[F)Z
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:mod_positive(II)I
jtb.JavaParser:jj_2_10(I)Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_68()Z
jtb.JavaParser:jj_3R_121()Z
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.NonZero:is_pointer()Z
jtb.JavaParser:jj_3R_53()Z
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3_22()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.inv.unary.string.OneOfString:format_esc()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3_36()Z
daikon.VarInfo:has_typeof()Z
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.inv.Invariant:simplify_format_string(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3_10()Z
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.UpperBoundCore:computeProbability()D
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
utilMDE.OrderedPairIterator:setnext2()V
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Quantify.QuantifyReturn:QuantifyReturn(Ldaikon.VarInfo;)V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.Quantify.FreeVar:name()Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:format_simplify()Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.Positive:enabled()Z
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.Quantify.Term:name_with_offset(Ljava.lang.String;I)Ljava.lang.String;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.Quant:eltsGtIndex([I)Z
daikon.Quantify.Term:ioa_name()Ljava.lang.String;
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.inv.unary.sequence.EltUpperBound:format_daikon()Ljava.lang.String;
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:eltwiseGTE([I)Z
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.inv.unary.sequence.EltUpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.sequence.EltNonZero:EltNonZero(Ldaikon.PptSlice;)V
daikon.VarInfoName:isLiteralConstant()Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.string.OneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_58()Z
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
jtb.JavaParser:jj_2_13(I)Z
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3_5()Z
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3_3()Z
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.inv.unary.stringsequence.EltOneOfString:format_esc()Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:eltwiseGT([I)Z
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.EltLowerBound:format_simplify()Ljava.lang.String;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
utilMDE.MathMDE:gcd(JJ)J
daikon.Quant:pairwiseEqual([I[I)Z
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
utilMDE.ArraysMDE:sum([D)D
jtb.JavaParser:jj_3R_54()Z
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:lexGTE([I[I)Z
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.VarInfoName:name()Ljava.lang.String;
daikon.VarInfo:is_direct_non_slice_array()Z
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.inv.unary.sequence.EltUpperBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
jtb.JavaCharStream:BeginToken()C
jtb.JavaParser:jj_3R_61()Z
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3_15()Z
daikon.Quant:lexEqual([I[I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_2_4(I)Z
jtb.JavaParser:jj_3R_97()Z
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.Quant:memberOf(F[F)Z
daikon.VarInfoName.NodeFinder:inPre()Z
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.inv.unary.sequence.EltOneOf:format_esc()Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:add_modified([Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.UpperBoundCore:wouldChange(J)Z
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_163()Z
jtb.JavaParser:jj_3R_123()Z
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_2_16(I)Z
jtb.JavaParser:jj_2_12(I)Z
daikon.Quantify.SimplifyQuantification:get_arr_vars_indexed(I)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:add_modified(JJI)Ldaikon.inv.InvariantStatus; | ASSIGN | 4671 | = null
daikon.diff.Node:Node(LutilMDE.Pair;)V
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.inv.Invariant:prob_and(DD)D
daikon.inv.unary.stringsequence.SingleStringSequence:var()Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.Quantify.QuantFlags:include_index()Ljava.util.EnumSet;
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.Quant:sameLength([I[I)Z
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
jtb.JavaCharStream:UpdateLineColumn(C)V
utilMDE.MathMDE:nonmodulus_strict([I)[I
jtb.JavaParser:jj_3_29()Z
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.Quant:eltwiseNotEqual([I)Z
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.Quantify.SimplifyQuantification:get_closer()Ljava.lang.String;
jtb.JavaParser:jj_3R_51()Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.inv.unary.sequence.EltOneOf:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.inv.Invariant:prob_or(DD)D
daikon.VarInfo:apply_subscript(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaCharStream:backup(I)V
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltOneOf:enabled()Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan()V
daikon.Quant:subsetOf([F[F)Z
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
daikon.inv.unary.sequence.EltwiseIntLessThan:EltwiseIntLessThan(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.ValueTuple:tuplemodHasModified(I)Z
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.inv.unary.sequence.EltNonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:memberOf(I[I)Z
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
jtb.JavaParser:jj_3R_67()Z
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
jtb.JavaParser:jj_3R_118()Z
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_133()Z
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.Quant:eltsEqualIndex([I)Z
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:getConfidence()D
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.inv.unary.string.OneOfString:OneOfString(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
utilMDE.Intern:numIntArrays()I
daikon.Quantify.QuantFlags:distinct()Ljava.util.EnumSet;
daikon.PptName:isEnterPoint()Z
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.inv.unary.scalar.Modulus:enabled()Z
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.Quant:subsetOf([I[I)Z
daikon.Quant:pairwiseSquare([I[I)Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.VarInfoName.ElementsFinder:inPre()Z
jtb.JavaParser:jj_scan_token(I)Z
daikon.Quant:eltwiseLTE([I)Z
daikon.inv.ValueSet.ValueSetStringArray:ValueSetStringArray(I)V
daikon.VarInfo:dbc_name()Ljava.lang.String;
utilMDE.MathMDE:gcd([I)I
daikon.inv.unary.LowerBoundCore:calc_modulus()J
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
jtb.JavaCharStream:getEndColumn()I
jtb.JavaParser:jj_2_1(I)Z
daikon.test.InvariantFormatTester:execute()Z
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
utilMDE.Intern:intern([I)[I
daikon.Quant:pairwiseDivides([I[I)Z
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eltsEqual([II)Z
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.inv.unary.string.OneOfString:format_simplify()Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:subsetOf([S[S)Z
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
utilMDE.MathMDE:gcd_differences([I)I
daikon.PptSlice0.ImplicationWrapper:hashCode()I
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_ioa()Ljava.lang.String;
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.inv.ValueSet:ValueSet(I)V
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo; | CONDITION | 3097 | if (x) -> if (!x)
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.Quantify.ESCQuantification:bld_quant(Ldaikon.VarInfo;Ldaikon.Quantify.Term;)Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3_27()Z
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
jtb.JavaCharStream:FillBuff()V
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.sequence.NoDuplicates:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String; | STATEMENT | 131712 | stmt -> ;
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.sequence.EltOneOf:is_hashcode()Z
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quantify.ESCQuantification:get_arr_vars_indexed(I)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_2_5(I)Z
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.inv.unary.stringsequence.EltOneOfString:is_type()Z
jtb.JavaParser:jj_3_30()Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.Quant:gte(II)Z
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Ppt:Ppt()V
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.VarInfo:simplify_name()Ljava.lang.String;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
jtb.JavaParser:jj_3R_80()Z
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.VarInfo:isPrestate()Z
daikon.inv.unary.sequence.EltUpperBound:format_simplify()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:bitwiseComplement(I)I
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:isIOASet()Z
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression; | ASSIGN | 83593 | = null
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:subarray_rep()Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.Quant:memberOf(J[J)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.test.FormatTestCase:getDiffString()Ljava.lang.String;
daikon.inv.Invariants:Invariants()V
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltNonZero:is_pointer()Z
daikon.PptName:isCombinedExitPoint()Z
jtb.JavaParser:jj_2_21(I)Z
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.Quant:intersection([I[I)[I
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_esc()Ljava.lang.String;
jtb.JavaParser:jj_3_12()Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.inv.Invariant:prob_and(DDD)D
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_ntk()I
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.Quantify.SimplifyQuantification:get_quantification()Ljava.lang.String;
daikon.Debug:logDetail()Z
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:lexNotEqual([I[I)Z
utilMDE.FuzzyFloat:gt(DD)Z
daikon.inv.unary.sequence.EltwiseIntLessThan:enabled()Z
utilMDE.FuzzyFloat:gte(DD)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_161()Z
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.string.OneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_esc()Ljava.lang.String;
jtb.JavaCharStream:getEndLine()I
daikon.Quant:eltsGteIndex([I)Z
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
jtb.JavaParser:jj_3R_134()Z
daikon.inv.unary.sequence.EltUpperBound:EltUpperBound(Ldaikon.PptSlice;)V
daikon.Quant:eltsNotEqual([II)Z
daikon.Quantify.Constant:Constant(I)V
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
utilMDE.Options.OptionInfo:argument_required()Z
utilMDE.ArraysMDE:sum([I)I
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptSlice2:arity()I
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.Quantify:get_flags(Z)Ljava.util.EnumSet;
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.inv.unary.sequence.NoDuplicates:enabled()Z
utilMDE.WeakHasherMap:size()I
daikon.VarInfo:get_array_var()Ldaikon.VarInfo;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
utilMDE.OrderedPairIterator:setnext1()V
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
utilMDE.MathMDE:modulus([I)[I
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:enabled()Z
jtb.JavaParser:jj_3R_114()Z
daikon.VarInfo:get_base_array()Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.VarComparabilityNone:comparable(Ldaikon.VarComparabilityNone;Ldaikon.VarComparabilityNone;)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:format_daikon()Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_daikon()Ljava.lang.String;
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaCharStream:ReadByte()C
utilMDE.OrderedPairIterator:hasNext()Z
daikon.Quant:subsetOf([F[D)Z
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
utilMDE.FuzzyFloat:FuzzyFloat()V
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
jtb.JavaParser:jj_3R_69()Z
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.VarInfo:domainTypeIOA()Ljava.lang.String;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:lexLT([I[I)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
jtb.Token:newToken(I)Ljtb.Token;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
utilMDE.ArraysMDE:indexOf([II)I
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
utilMDE.MathMDE:missing_numbers([I)[I
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfo:get_lower_bound()Ldaikon.Quantify.Term;
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.inv.Invariant:logDetail()Z
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.stringsequence.EltOneOfString:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParser:jj_3R_162()Z
daikon.Quant:setDiff([I[I)[I
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.Quant:eltsLT([II)Z
daikon.Quantify.IOAQuantification:getFreeVarName(I)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
daikon.ModBitTracker:num_vars()I
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_55()Z
daikon.ModBitTracker:split(I)I
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.inv.Invariant:justified()Z
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3_1()Z
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_ioa()Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:getDiffString()Ljava.lang.String;
daikon.Quantify.ESCQuantification:ESCQuantification(Ljava.util.EnumSet;[Ldaikon.VarInfo;)V
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.Quant:lexGT([I[I)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.Quant:gt(II)Z
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:eltsLtIndex([I)Z
daikon.Quant:eq(II)Z
daikon.inv.unary.stringsequence.EltOneOfString:enabled()Z
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.UtilMDE:escapeNonASCII(Ljava.lang.String;)Ljava.lang.String;
daikon.ProglangType:baseIsFloat()Z
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:subsetOf([D[F)Z
daikon.Quant:subsetOf([D[D)Z
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltOneOf:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.VarComparabilityNone:elementType()Ldaikon.VarComparability;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:toString()Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.ProglangType:isArray()Z
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3_21()Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.MathMDE:negate(I)I
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_96()Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.ArraysMDE:concat([I[I)[I
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:lt(DD)Z
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
jtb.JavaParser:jj_3R_50()Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.sequence.EltOneOf:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltwiseIntLessThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.ValueTuple:isMissingFlow(I)Z
daikon.Quant:memberOf(S[S)Z
daikon.Quant:eltwiseLT([I)Z
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.InvMap:InvMap()V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.Quant:eltsGTE([II)Z
daikon.Quantify:quantify([Ldaikon.VarInfo;)[Ldaikon.Quantify.QuantifyReturn;
jtb.JavaParser:jj_3R_88()Z
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_117()Z
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.stringsequence.EltOneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.stringsequence.EltOneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;Ldaikon.VarInfo;)V
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.VarInfo:isPointer()Z
jtb.JavaParser:jj_3_14()Z
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_48()Z
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quantify.IOAQuantification:getMembershipRestriction(I)Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.VarInfo:old_var_names(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.Quant:eltsLTE([II)Z
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice1:num_samples()I
daikon.Quant:slice([III)[I
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
jtb.JavaParser:jj_3R_122()Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.inv.unary.sequence.EltNonZero:format_ioa()Ljava.lang.String;
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:fn_inverse([II)[I
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.inv.unary.sequence.EltNonZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.inv.unary.string.OneOfString:format_ioa()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
utilMDE.FuzzyFloat:isSubset([D[D)Z
jtb.JavaParser:jj_3_28()Z
utilMDE.ArraysMDE:element_range([I)I
daikon.Quantify.Term:esc_name()Ljava.lang.String;
daikon.inv.unary.string.OneOfString:is_type()Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeList:NodeList()V
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.inv.unary.string.OneOfString:enabled()Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:isSubset([D[D)Z
utilMDE.FuzzyFloat:eq(DD)Z
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfo:get_base_array_hashcode()Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:pairwiseGT([I[I)Z
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_119()Z
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_daikon()Ljava.lang.String;
daikon.Quant:noDups([I)Z
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Ppt:indexOf(Ljava.lang.String;)I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.inv.unary.stringsequence.EltOneOfString:runValue([Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
jtb.JavaParser:jj_3R_63()Z
daikon.inv.unary.UpperBoundCore:computeConfidence()D
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.inv.unary.stringsequence.EltOneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice0:initInvariantsSeen()V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.inv.unary.sequence.SeqIndexIntNonEqual:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.inv.unary.stringsequence.EltOneOfString:format_ioa()Ljava.lang.String;
jtb.JavaParser:jj_3R_125()Z
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE:pow_fast(II)I
daikon.inv.unary.string.OneOfString:sort_rep()V
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.Quant:eltsLteIndex([I)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.string.OneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_115()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltOneOf:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
jtb.JavaParser:jj_2_14(I)Z
daikon.test.FormatTestCase:passes()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:isScalar()Z
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_simplify()Ljava.lang.String;
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.Ppt:find_var_by_name(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.inv.unary.string.OneOfString:add_modified(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltOneOf:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
utilMDE.WeakHasherMap:processQueue()V
daikon.VarInfoName.Add:amount()Ljava.lang.String;
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
jtb.JavaParser:jj_3R_120()Z
daikon.inv.unary.string.OneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
daikon.Quant:eq(FF)Z
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.inv.unary.string.SingleString:SingleString(Ldaikon.PptSlice;)V
daikon.inv.unary.stringsequence.EltOneOfString:sort_rep()V
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:esc_name()Ljava.lang.String;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_60()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.Quantify.QuantFlags:adjacent()Ljava.util.EnumSet;
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
jtb.JavaParser:jj_3R_85()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
utilMDE.ArraysMDE:max([I)I
daikon.Quant:memberOf(F[D)Z
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:subarray([III)[I
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Quantify.IOAQuantification:IOAQuantification([Ldaikon.VarInfo;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.Quantify.Length:Length(Ldaikon.VarInfo;I)V
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.string.OneOfString:runValue(Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.ProglangType:baseIsIntegral()Z
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.ProglangType:isPointerFileRep()Z
utilMDE.LimitedSizeIntSet:size()I
daikon.inv.unary.sequence.EltOneOf:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.Quantify.Constant:name()Ljava.lang.String;
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
daikon.diff.RootNode:RootNode()V
daikon.inv.binary.twoScalar.IntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.inv.unary.UpperBoundCore:calc_modulus()J
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
daikon.Quantify.IOAQuantification:getVarIndexedString(I)Ljava.lang.String;
daikon.Debug:logOn()Z
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:lt(II)Z
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.inv.unary.stringsequence.SingleStringSequence:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_87()Z
daikon.VarInfo:isDerived()Z
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
jtb.JavaCharStream:getBeginLine()I
daikon.inv.unary.string.OneOfString:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.ProglangType:baseIsString()Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:enabled()Z
jtb.JavaParser:jj_3_16()Z
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
utilMDE.Assert:assertTrue(Z)V
daikon.inv.ValueSet.ValueSetString:ValueSetString(I)V
daikon.Quant:eltwiseEqual([I)Z
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.VarInfoAux:hashCode()I
daikon.VarInfo:is_typeof()Z
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfo:jml_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.inv.unary.stringsequence.EltOneOfString:subarray_rep()Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfo:isIOAArray()Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.ProglangType:dimensions()I
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
1329 4 1365 2 569 2 295 2 290 2 244 2 372 2 963 2 279 2 
841 2 955 2 508 6 642 2 934 6 1134 2 396 2 10 2 577 2 967 6 1382 2 
929 6 373 2 1162 4 82 6 443 2 279 2 1365 2 938 2 170 6 171 2 593 2 230 6 174 4 
413 4 189 10 123 12 266 16 1340 8 1365 6 214 2 134 2 252 26 1391 16 239 4 662 10 1394 2 1288 10 1396 8 543 8 834 29 381 6 1041 16 1306 4 881 2 771 6 279 6 1275 10 839 2 351 8 369 2 182 2 1204 10 1050 4 
690 4 1028 6 
25 2 
740 2 187 2 658 4 785 2 1360 2 8 2 910 2 829 2 714 2 1365 4 55 2 1193 2 1012 2 59 2 238 2 748 2 361 2 275 2 919 2 317 2 1327 2 881 2 279 4 564 2 243 2 1169 4 244 2 616 2 982 4 933 2 572 2 1082 2 336 2 291 2 217 2 38 2 697 2 1267 2 1227 2 768 2 1302 2 341 4 1181 2 1048 2 
306 2 329 4 189 6 355 4 29 2 123 22 94 6 48 6 657 4 1150 2 713 2 688 6 266 32 1365 4 252 48 239 2 1391 32 218 6 662 16 292 4 1394 2 1373 6 1288 16 224 2 1396 6 834 54 543 18 381 4 609 6 878 2 1041 32 279 4 771 4 1275 16 1168 4 23 4 590 4 778 8 1204 16 
51 2 8 2 185 2 
896 2 1179 2 232 2 1339 2 374 2 1101 2 933 2 127 2 1194 22 894 2 1380 2 323 2 156 10 731 2 
189 4 123 2 931 2 266 2 1214 2 435 2 765 2 252 4 239 2 1391 2 662 2 1288 2 636 2 543 2 834 6 736 2 1041 2 771 2 1275 2 899 2 388 2 1184 2 1204 2 
103 2 1288 4 329 4 123 4 834 16 48 6 94 6 1041 8 266 8 1275 4 745 2 590 4 252 12 1391 8 662 4 1204 4 1050 2 
1207 2 1 2 1240 2 331 2 191 4 783 4 1261 2 984 2 51 6 1212 2 787 2 8 8 455 10 458 4 1082 2 730 10 940 2 715 2 60 4 1300 62 79 2 562 4 1089 2 530 4 341 4 948 2 644 2 816 4 142 4 1326 4 296 4 589 2 1181 4 471 14 838 2 446 4 754 2 708 2 185 2 756 2 
656 2 506 2 812 2 918 2 770 2 112 2 976 2 25 2 498 2 390 2 
1143 2 1314 2 782 3 190 4 1147 1 784 2 596 2 519 2 6 2 788 2 597 2 1244 2 520 2 791 2 606 4 15 2 1322 4 719 2 795 8 104 6 1070 2 972 2 1324 32 797 1 879 2 882 2 279 34 444 1 974 3 113 2 975 3 884 16 1075 2 724 1 24 2 120 2 450 2 980 2 1172 2 617 1 1259 2 1338 2 619 2 1262 2 124 2 452 2 806 1 805 3 620 2 128 4 623 3 31 4 457 6 625 1 729 2 1083 16 215 2 627 2 1178 3 1343 2 1086 2 541 2 220 2 223 16 897 2 635 2 295 2 989 1 1274 3 993 1 144 1 1093 2 999 5 1354 3 649 2 389 4 1003 2 826 6 1189 1 1005 3 308 2 480 2 397 12 1365 32 400 2 1368 2 154 24 236 2 237 2 1370 2 311 2 832 2 1371 1 1372 1 489 3 1017 2 490 2 1200 2 667 32 408 6 242 2 1019 2 1112 8 1020 3 1203 2 68 16 566 2 840 2 923 2 924 2 677 1 411 2 1023 2 328 2 499 2 414 2 332 2 684 2 415 2 1030 2 334 2 1120 1 1033 2 1037 8 941 2 1221 2 1126 4 173 2 946 3 80 2 422 2 1131 2 1308 2 700 2 178 2 177 2 858 4 1232 2 83 2 85 2 86 1 706 2 861 2 1140 2 1401 24 1238 2 510 2 
580 2 279 2 
874 2 621 2 279 4 
663 2 
865 2 5 2 712 2 7 24 1246 2 12 14 1060 48 871 6 13 4 1248 2 876 2 362 2 720 2 197 2 365 2 531 10 1073 4 204 2 1249 14 1250 2 22 2 534 2 885 24 26 2 1255 4 890 2 1085 2 540 4 219 2 36 2 542 4 222 4 733 2 734 2 898 2 544 2 1272 16 546 2 226 2 901 4 1094 6 550 4 1277 2 229 2 1279 8 906 48 233 2 742 2 1281 2 913 4 57 146 1103 4 747 2 62 2 750 190 65 4 1110 22 1292 2 1293 2 565 4 1113 42 1115 8 412 2 1118 2 74 2 935 2 75 46 573 2 936 4 761 4 760 48 575 2 1122 2 416 20 578 48 942 14 1299 4 579 4 1125 8 944 2 419 2 582 2 254 2 1130 4 1133 16 586 2 1136 8 1310 48 587 6 257 2 1138 4 953 14 954 146 261 2 88 2 428 22 93 4 1145 48 429 2 595 2 430 2 431 2 961 2 962 10 434 22 98 2 966 2 268 2 793 2 438 2 607 4 608 8 1158 8 106 2 610 4 1163 2 108 2 1167 2 611 2 1332 2 447 36 1170 26 449 48 979 48 121 4 801 2 285 20 1337 16 804 2 125 2 126 2 453 4 133 8 810 4 138 4 631 2 815 2 641 12 1348 2 643 146 990 2 645 2 1180 2 991 2 1352 48 819 2 996 2 300 2 302 8 303 20 472 2 305 4 1185 4 653 4 1186 2 477 4 481 6 830 2 1362 4 482 8 1008 4 485 4 488 2 833 2 157 2 665 2 666 48 1018 2 314 2 316 2 494 2 320 2 673 2 674 2 161 8 678 36 163 2 1205 8 164 2 1025 4 681 14 844 2 166 48 683 2 845 4 503 6 686 28 689 2 335 2 1035 4 1222 2 337 2 1223 48 1039 36 1226 4 853 8 1228 2 342 2 343 2 346 2 348 2 1230 2 349 2 701 2 856 2 1046 2 1233 2 705 8 1237 2 707 4 352 6 180 2 186 2 
32 2 1057 2 960 1 632 2 
1057 2 52 2 
194 2 1057 2 525 2 699 2 1306 2 867 2 8 2 
284 2 1057 2 699 2 
1057 2 699 2 743 2 
196 2 105 2 632 2 
1057 2 699 2 
105 2 775 2 
1057 2 915 2 
560 2 105 2 632 2 
822 2 632 2 131 2 
40 2 1054 2 632 2 
436 2 1201 2 632 2 
1345 2 45 2 632 2 
1367 2 105 2 
1057 2 647 2 
822 2 1109 2 
751 2 1054 2 
555 2 436 2 
1345 2 528 2 
105 2 709 2 
1345 2 907 2 
436 2 523 2 
1054 2 1243 2 
1056 2 822 2 
560 2 583 2 105 2 632 2 
560 2 583 2 893 2 105 2 632 2 
772 2 105 2 632 2 
744 2 105 2 632 2 
537 2 848 2 401 2 872 2 
105 2 354 2 
194 2 377 2 1096 2 8 2 
194 2 525 2 377 2 1096 2 8 2 451 2 
194 2 1057 2 1009 2 699 2 1306 2 8 2 
1217 2 1360 2 
194 2 1306 2 1154 2 8 2 
436 2 96 2 
1345 2 1116 2 
1013 2 822 2 
1149 2 1054 2 
1345 2 1054 2 973 2 
1345 2 393 2 1054 2 
1345 2 1051 2 1054 2 
1345 2 568 2 1054 2 
957 2 8 2 831 6 194 2 1090 6 998 2 1098 2 184 2 
245 2 956 2 1303 2 1068 2 1069 2 167 4 1108 2 855 2 384 2 670 2 468 2 1282 2 820 2 1194 6 591 2 35 4 779 2 1301 2 
891 2 632 2 
499 2 
427 4 190 2 784 2 596 2 519 2 599 2 791 2 869 2 606 2 875 2 1322 4 719 2 104 4 1324 6 279 26 368 2 450 2 617 2 1259 6 1338 2 452 2 31 4 213 2 457 2 215 2 1343 2 1344 2 223 6 635 2 295 2 994 2 993 2 902 4 547 2 549 2 389 2 826 6 308 2 1365 26 397 8 660 2 484 2 832 2 311 2 1016 2 490 2 1017 2 667 4 408 2 242 2 1112 2 923 2 1023 2 328 4 414 2 332 2 415 2 504 2 1030 2 941 2 1221 2 1126 4 1131 2 81 2 1308 2 700 2 858 4 1137 2 1232 2 83 2 774 2 85 2 861 2 1140 2 
427 4 1143 2 190 2 784 2 596 2 519 2 599 2 789 2 791 2 869 2 606 2 794 2 875 2 1322 4 719 2 104 6 1324 6 279 26 117 2 368 2 450 2 617 2 1259 6 1338 2 452 2 31 4 213 2 457 2 215 2 1343 2 1344 2 223 6 635 2 295 2 993 2 902 4 547 2 549 2 389 2 1003 2 826 6 308 2 1365 26 397 8 660 2 484 2 832 2 311 2 490 2 1017 2 667 4 408 2 242 2 1112 2 840 2 923 2 1023 2 328 4 414 2 332 2 415 2 504 2 1030 2 941 2 1221 2 1126 4 1131 2 81 2 1308 2 700 2 858 4 1232 2 83 2 774 2 85 2 861 2 1140 2 
1087 2 456 2 
1320 2 
955 2 465 4 17 2 1148 2 508 2 934 2 1323 2 1134 2 235 2 1165 2 807 2 1151 2 44 2 939 2 1123 2 1114 2 1333 4 418 2 
47 2 1142 2 955 4 1148 2 826 4 596 2 909 4 235 2 396 2 1151 2 1363 2 1007 2 1365 6 437 2 967 6 1319 4 490 2 1322 2 17 2 719 2 1323 2 1071 2 1325 4 442 2 1165 4 921 2 279 12 1111 2 445 4 321 2 614 4 1114 2 1333 4 1382 2 1384 2 887 2 726 2 122 2 414 2 934 4 415 2 807 2 691 2 939 2 1123 2 135 2 418 2 465 4 1269 2 508 6 1134 4 1351 2 949 6 858 2 44 2 83 2 85 2 1095 2 738 2 864 2 
47 2 1142 2 955 4 1148 2 826 4 596 2 909 4 235 2 1151 2 10 2 1363 2 1007 2 1365 6 437 2 967 6 1319 4 490 2 1322 2 17 2 719 2 1323 2 1071 2 1325 4 442 2 1165 4 921 2 279 12 1111 2 445 4 321 2 614 4 1114 2 1333 4 1382 2 1384 2 887 2 726 2 122 2 414 2 934 6 415 2 807 2 691 2 939 2 1123 2 135 2 418 2 465 4 1269 2 508 4 1134 4 1351 2 949 6 858 2 44 2 83 2 85 2 1095 2 738 2 864 2 
47 2 1142 2 955 4 1148 2 826 4 596 2 909 4 235 2 1151 2 1363 2 1007 2 1365 6 437 2 967 6 1319 4 490 2 1322 2 17 2 719 2 1323 2 1071 2 1325 8 442 2 1165 4 921 2 279 12 1111 2 445 4 321 2 614 4 1114 2 1333 4 1382 2 1384 2 887 2 726 2 122 2 414 2 934 6 415 2 807 2 577 2 691 2 939 2 1123 2 135 2 418 2 465 4 1269 2 508 6 1134 4 1351 2 949 6 858 2 44 2 83 2 85 2 1095 2 738 2 864 2 
47 2 1142 2 955 4 1148 2 826 4 596 2 909 8 235 2 1151 2 10 2 1363 2 1007 2 1365 6 437 2 967 8 1319 4 490 2 1322 2 17 2 719 2 1323 2 1071 2 1325 8 442 2 1165 4 921 2 279 12 1111 2 445 4 321 2 614 4 1114 2 1333 4 1382 2 1384 2 887 2 726 2 122 2 414 2 934 8 415 2 807 2 577 2 691 2 939 2 1123 2 135 2 418 2 465 4 1269 2 508 6 1134 4 1351 2 949 10 858 2 44 2 83 2 85 2 1095 2 738 2 864 2 
47 2 1142 2 955 4 1148 2 826 4 596 2 909 8 235 2 1151 2 1363 2 1007 2 1365 6 437 2 967 6 1319 4 490 2 1322 2 17 2 719 2 1323 2 1071 2 1325 8 442 2 1165 4 921 2 279 12 1111 2 445 4 321 2 614 4 1114 2 1333 4 1382 2 1384 2 887 2 726 2 122 2 414 2 934 6 415 2 807 2 577 2 691 2 939 2 1123 2 135 2 418 2 465 4 1269 2 508 6 1134 4 1351 2 949 10 858 2 44 2 83 2 85 2 1095 2 738 2 864 2 
517 1 866 6 190 2 10 4 869 2 1059 2 1061 2 717 6 16 1 719 2 17 2 721 6 1071 2 202 6 366 10 368 4 208 6 370 2 887 2 726 2 30 1 1259 6 889 2 376 2 31 4 215 2 1084 2 1088 2 223 6 41 2 1269 2 44 2 1095 2 738 2 549 2 389 2 47 4 554 2 235 2 911 2 397 4 1102 6 1283 1 561 2 407 2 408 2 921 2 409 6 1111 2 1112 2 67 1 1114 2 923 2 755 6 414 2 934 8 247 2 1119 1 415 2 1123 2 939 2 941 2 418 2 580 6 1126 4 1304 6 1131 2 1134 4 949 2 83 2 85 2 259 2 263 2 1142 2 427 4 1143 2 955 4 1148 2 596 2 959 7 1151 2 97 6 791 2 603 1 437 2 967 12 1319 6 271 2 1153 6 969 2 606 2 1322 4 1159 2 104 6 276 2 1323 2 1324 8 1325 2 442 2 1165 4 279 46 445 4 118 2 614 8 1333 4 450 2 978 2 122 2 983 8 802 6 1338 2 452 2 621 6 807 2 457 2 461 2 135 2 1343 12 634 2 465 4 295 2 1351 4 997 2 475 2 1003 2 654 2 826 6 308 2 1363 2 1007 2 1365 24 483 2 1011 2 832 2 311 2 663 6 1375 4 490 2 667 2 321 2 1382 4 1023 2 1024 2 1384 2 1208 2 330 1 332 2 504 2 333 2 1029 4 1213 7 1389 2 691 2 1221 2 172 1 508 4 345 6 700 2 858 4 
427 4 1142 2 955 4 1143 2 866 6 190 4 1148 2 596 2 1151 2 97 6 791 2 869 2 1059 2 967 12 437 2 1061 2 271 2 1319 6 1153 6 717 6 969 2 606 4 1322 4 877 2 17 2 719 2 1159 2 276 2 104 6 721 6 1323 2 1324 8 1071 2 442 2 1325 6 202 6 1165 4 366 10 279 48 445 4 118 2 368 4 614 8 208 6 1333 4 370 2 450 2 978 2 887 2 726 2 122 2 983 8 802 6 1259 6 889 2 1338 2 452 2 376 2 621 6 807 2 31 4 457 2 461 2 215 2 135 2 1084 2 1343 12 1088 2 223 6 634 2 465 4 41 2 1269 2 295 2 1351 4 44 2 997 2 1095 2 549 2 738 2 475 2 389 4 47 4 654 2 1003 2 826 6 308 2 554 2 235 2 1363 2 911 2 1007 2 1102 6 397 8 1365 26 483 2 1011 2 311 2 832 2 663 6 1375 4 561 2 490 2 407 2 667 2 408 2 63 2 409 6 921 2 1111 2 1112 2 321 2 923 2 1114 2 1382 4 755 6 1023 2 1384 2 328 2 1024 2 1208 2 414 2 332 2 934 8 247 2 504 2 415 2 1029 4 333 2 1389 2 577 4 691 2 939 2 1123 2 941 2 1221 2 418 2 580 6 1126 4 1304 6 508 8 1131 2 345 6 1134 4 700 2 949 2 858 4 83 2 85 2 259 2 263 2 
427 4 1142 2 955 4 1143 2 866 6 190 4 1148 2 596 2 1151 2 97 6 791 2 869 2 1059 2 967 12 437 2 1061 2 271 2 1319 6 1153 6 717 6 969 2 606 4 1322 4 877 2 17 2 719 2 1159 2 276 2 104 6 721 6 1323 2 1324 8 1071 2 442 2 1325 6 202 6 1165 4 366 10 279 48 445 4 118 2 368 4 614 8 208 6 1333 4 370 2 450 2 978 2 887 2 726 2 122 2 983 8 802 6 1259 6 889 2 1338 2 452 2 376 2 621 6 807 2 31 4 457 2 461 2 215 2 135 2 1084 2 1343 12 1088 2 223 6 634 2 465 4 41 2 1269 2 295 2 1351 4 44 2 997 2 1095 2 549 2 738 2 475 2 389 4 47 4 654 2 1003 2 826 6 308 2 909 4 554 2 235 2 1363 2 911 2 1007 2 1102 6 397 8 1365 26 483 2 1011 2 311 2 832 2 663 6 1375 4 561 2 490 2 407 2 667 2 408 2 63 2 409 6 921 2 1111 2 1112 2 321 2 923 2 1114 2 1382 4 755 6 1023 2 1384 2 328 2 1024 2 1208 2 414 2 332 2 934 8 247 2 504 2 415 2 1029 4 333 2 1389 2 577 4 691 2 939 2 1123 2 941 2 1221 2 418 2 580 6 1126 4 1304 6 508 8 1131 2 345 6 1134 4 700 2 949 6 858 4 83 2 85 2 259 2 263 2 
866 6 190 4 1242 6 10 2 869 2 1059 2 1061 2 717 12 877 2 719 2 17 2 721 6 1071 2 202 6 366 8 368 4 208 6 370 2 887 2 726 2 1259 8 889 2 376 2 31 4 215 2 1084 2 1264 2 1088 2 223 8 1269 2 44 2 1095 2 738 2 549 4 389 4 1278 2 47 4 909 4 554 2 235 2 396 2 911 2 397 10 1102 6 561 2 407 2 408 4 63 2 920 2 921 2 409 6 1111 2 1112 4 1114 2 923 2 755 6 414 2 934 10 247 2 415 2 577 4 1123 2 939 2 941 2 418 2 580 12 1126 4 1304 6 1131 2 1134 4 949 6 83 2 85 2 259 2 780 6 263 2 1142 2 427 6 1143 2 955 4 1148 2 596 2 1151 2 97 12 791 2 437 2 967 16 1319 6 271 2 1153 12 969 2 606 4 440 6 1322 4 273 2 1159 2 104 6 276 2 1323 2 1324 12 1325 6 442 2 1165 4 279 52 445 4 118 2 614 8 1333 4 1171 6 450 2 978 2 1336 6 122 2 983 8 802 6 1338 2 452 2 621 12 807 2 457 4 461 2 135 2 1343 10 141 2 634 2 294 6 465 4 295 2 1351 4 997 2 475 2 1003 2 654 2 826 6 308 2 1363 2 1007 2 1365 24 483 2 1011 2 1196 2 832 2 311 2 663 12 1375 4 490 2 667 4 321 2 1382 4 1023 2 1384 2 328 2 1024 2 1208 2 332 2 504 2 847 6 333 2 1029 4 1389 2 505 6 691 2 1221 2 340 2 508 10 345 6 1229 6 700 2 858 4 859 2 
887 2 1142 2 955 4 122 2 1148 2 934 6 909 4 235 2 1151 2 1363 2 577 2 135 2 1123 2 967 4 437 2 1319 2 418 2 465 2 508 6 1323 2 1134 4 1071 2 442 2 1325 6 949 4 279 4 921 2 1111 2 445 2 321 2 614 2 1114 2 1333 2 738 2 1382 2 
427 4 1142 2 955 4 1143 2 781 2 1148 2 596 2 1151 2 597 2 791 2 869 2 967 4 437 2 1319 2 1322 4 719 2 104 6 1323 2 1071 2 1324 8 442 2 1325 6 279 28 366 2 445 2 614 2 368 2 280 2 1333 2 450 2 887 2 980 2 726 2 122 2 1259 6 1338 2 452 2 1263 3 31 4 457 3 215 2 135 2 1343 4 223 6 814 2 465 2 41 2 295 2 738 2 1003 2 826 6 308 2 235 2 1363 2 1365 24 832 2 490 2 667 3 408 3 921 2 1111 2 1203 2 321 2 923 2 1114 2 1382 2 1023 2 499 2 414 2 332 2 934 6 682 2 415 2 504 2 1219 2 577 2 1123 2 941 2 1221 2 418 2 1126 4 508 6 1131 2 1134 4 700 2 949 2 858 4 83 2 85 2 
47 2 1142 2 955 4 1148 2 826 4 596 2 909 8 235 2 1151 2 1363 2 1007 2 1365 6 437 2 967 6 1319 4 490 2 1322 2 17 2 719 2 1323 2 1071 2 1325 8 442 2 1165 4 921 2 279 12 1111 2 445 4 321 2 614 4 1114 2 1333 4 1382 2 1384 2 887 2 726 2 122 2 414 2 934 6 415 2 807 2 577 2 691 2 939 2 1123 2 135 2 418 2 465 4 1269 2 508 6 1134 4 1351 2 949 10 858 2 44 2 83 2 85 2 1095 2 738 2 864 2 
47 2 1142 2 955 4 1148 2 826 4 596 2 909 8 235 2 396 2 1151 2 1363 2 1007 2 1365 6 437 2 967 8 1319 4 490 2 1322 2 17 2 719 2 1323 2 1071 2 1325 8 442 2 1165 4 921 2 279 12 1111 2 445 4 321 2 614 4 1114 2 1333 4 1382 2 1384 2 887 2 726 2 122 2 414 2 803 2 934 6 415 2 807 2 577 2 691 2 939 2 987 2 1123 2 135 2 418 2 465 4 1269 2 508 8 1134 4 1351 2 949 10 858 2 44 2 83 2 85 2 1095 2 181 4 
887 2 776 2 1363 2 
887 2 776 2 1363 2 
1143 2 955 4 1052 2 190 4 596 2 1053 2 599 4 1151 2 10 4 791 2 869 2 967 16 359 2 1319 4 1155 4 606 4 1322 4 719 2 276 2 104 6 721 2 1323 2 1324 2 1325 6 442 2 1165 4 366 2 279 24 445 2 533 2 368 6 614 4 1333 2 450 2 978 2 887 6 1259 2 1338 2 452 2 807 2 31 4 215 2 1343 4 223 2 1346 4 465 2 295 2 1351 4 297 2 147 2 389 4 47 2 1003 2 826 6 308 2 909 4 396 4 1006 2 1363 4 1007 2 397 4 1365 16 56 2 402 2 311 4 832 2 558 2 1375 2 490 2 667 2 321 2 1114 4 1382 4 1023 2 1384 2 1208 2 414 2 1210 2 332 2 934 12 415 2 504 2 1029 2 249 2 577 4 691 2 939 2 941 2 1221 2 1126 4 851 2 696 2 769 2 1131 2 508 12 1134 4 700 2 350 2 949 6 858 4 83 2 85 2 776 2 426 2 
721 2 415 2 456 2 1006 2 1029 2 366 2 279 4 44 2 1365 2 646 2 483 2 604 2 1343 2 402 2 486 2 1088 2 851 2 
1143 2 955 4 1052 4 190 4 596 2 1053 2 599 4 1151 2 10 4 791 2 869 2 967 16 359 2 1319 4 1063 2 1155 4 606 4 1322 4 719 2 276 2 104 6 721 2 1323 2 1324 2 1325 6 442 2 1165 4 279 24 445 2 614 4 368 6 1333 2 450 2 978 2 887 6 1259 2 1338 2 452 2 807 2 31 4 215 2 33 2 1343 2 223 2 1346 4 465 2 1269 2 295 2 1351 4 297 2 1357 2 147 2 389 4 47 4 1003 2 826 6 308 2 909 4 396 4 1006 2 1363 4 1007 2 397 4 1365 16 402 2 1104 2 311 4 832 2 558 2 1375 2 490 2 667 4 321 2 1114 4 1382 4 1023 2 1384 2 1208 2 414 2 1210 2 332 2 934 12 415 2 504 2 577 4 691 2 939 2 941 2 1221 2 339 2 1126 4 851 2 696 2 769 2 1131 2 508 12 1134 4 700 2 350 2 949 6 858 4 83 2 85 2 776 2 
1143 2 955 4 1052 2 190 4 596 2 1053 2 599 4 1151 2 10 4 791 2 869 2 967 16 359 2 1319 4 1155 4 606 4 1322 4 719 2 276 2 104 6 721 2 1323 2 1324 2 1325 6 442 2 1165 4 366 2 279 24 445 2 368 6 614 4 1333 2 450 2 978 2 887 6 1259 2 1338 2 452 2 807 2 31 4 215 2 1343 4 380 2 223 2 1346 4 465 2 1269 2 295 2 1351 4 297 2 650 2 904 2 147 2 389 4 47 4 1003 2 826 6 308 2 909 4 396 4 1006 2 1363 4 1007 2 397 4 1365 16 402 2 311 4 832 2 558 2 1375 2 490 2 667 2 241 2 321 2 1114 4 1382 4 1023 2 1384 2 1208 2 414 2 1210 2 332 2 934 12 415 2 504 2 1029 2 1031 2 577 4 691 2 939 2 941 2 1221 2 1126 4 851 2 696 2 769 2 1131 2 508 12 1134 4 700 2 350 2 949 6 858 4 83 2 85 2 776 2 
0 18 4 2 3 2 9 2 713 4 357 16 1058 2 358 10 1061 2 718 2 15 2 1065 16 1066 4 719 2 363 2 18 2 1070 2 19 2 367 2 1074 4 23 4 368 2 1075 2 723 3 1076 2 24 2 371 2 27 4 28 4 1077 2 1078 4 1079 2 1080 2 31 6 378 8 729 2 1083 70 1084 2 34 2 1086 2 732 2 39 2 381 4 382 2 735 16 42 2 1092 14 737 2 43 126 385 6 386 10 391 3 1100 2 741 2 48 6 49 4 395 2 53 2 397 156 399 2 400 2 58 2 403 2 60 2 406 82 61 2 1105 2 1106 2 408 46 752 2 753 42 64 2 1112 50 68 26 411 2 1117 36 70 2 71 2 72 42 73 3 414 2 76 68 415 2 762 2 77 14 764 2 78 2 767 2 1126 6 1127 24 421 24 1128 2 80 2 1129 2 1132 4 81 2 1135 16 83 2 424 2 774 2 85 2 777 2 425 2 778 8 87 2 1141 16 90 16 427 12 1143 6 91 16 781 2 92 10 1144 2 782 2 95 2 1146 2 786 2 1150 2 432 2 788 2 433 2 790 2 791 8 99 2 1152 10 101 2 102 3 439 32 795 10 1161 2 104 14 798 2 1166 2 111 2 799 14 113 2 115 4 118 2 446 2 448 18 450 2 800 2 1172 2 123 10 452 4 805 2 454 2 1174 2 132 2 457 16 459 10 460 2 463 4 462 2 1175 2 808 4 1176 2 464 2 136 2 1177 2 137 2 1178 2 139 24 811 8 813 14 140 4 141 4 814 2 466 18 467 2 142 2 817 22 143 2 818 6 1182 28 470 4 145 2 1183 12 146 2 473 2 823 3 474 2 149 22 1188 2 826 8 150 2 478 102 828 64 1190 2 480 2 1191 2 151 36 152 2 1192 2 153 2 154 12 155 18 1195 2 484 2 1196 2 832 4 489 2 490 2 1199 32 158 2 1200 2 834 24 835 86 491 2 159 2 493 2 495 18 836 2 496 2 162 2 1204 6 500 10 843 4 501 10 502 4 504 2 1216 2 1219 2 1220 2 849 2 1224 2 173 2 175 18 507 2 854 12 857 2 178 2 177 2 858 6 1231 4 859 2 1234 2 1236 2 1235 2 1238 2 509 16 183 2 511 36 513 90 512 2 863 8 514 2 515 2 516 2 1241 10 518 14 520 2 193 3 522 2 1247 2 524 62 870 2 526 2 873 2 195 14 527 2 875 2 530 2 199 4 200 2 879 2 203 1 201 2 532 2 883 22 880 2 884 14 1252 2 886 2 535 3 888 18 1256 2 1257 2 1258 2 538 2 1259 14 889 4 209 2 1263 2 210 4 212 18 213 2 215 2 216 4 895 2 218 6 539 2 1264 2 541 2 220 2 1266 2 223 24 543 6 1268 2 1270 2 1273 2 225 2 1275 6 227 2 547 46 903 2 548 2 549 46 905 2 551 2 228 2 553 2 234 3 908 2 1280 4 557 2 914 3 1284 3 1285 14 1286 2 559 2 1288 6 1287 40 562 2 917 4 916 32 1289 2 563 8 920 2 1290 2 1294 2 566 2 923 2 924 2 246 2 927 14 1295 14 930 2 932 32 571 2 574 2 250 2 252 18 941 4 253 2 943 2 581 2 945 32 946 2 947 4 255 18 585 2 1309 18 256 2 950 2 588 2 1311 32 951 2 952 2 260 2 262 2 264 2 958 2 596 2 1316 2 1315 2 598 2 266 12 267 2 601 2 602 2 968 2 269 2 605 2 271 2 969 2 970 18 1322 6 272 44 274 3 273 2 1324 76 278 2 1328 16 279 96 1330 2 975 2 1331 32 612 18 280 2 613 2 281 2 1334 2 615 2 1335 2 981 4 617 2 287 3 1338 2 985 2 622 20 623 2 624 24 986 2 628 22 627 2 1342 14 1343 4 630 4 293 2 1344 2 633 2 634 4 1347 2 638 2 1349 132 295 8 993 2 995 32 299 6 1353 4 997 4 1354 2 1356 4 648 14 651 2 304 4 1002 2 652 18 1003 6 1005 2 1361 2 1365 56 1366 2 660 2 1011 2 1368 2 1369 2 661 2 309 2 662 6 311 10 312 4 313 2 1014 28 1015 2 664 18 667 58 1377 2 315 2 668 2 319 14 1378 18 669 1 671 2 675 3 322 2 324 12 1381 180 1383 2 325 2 1023 2 329 4 1386 4 1388 1 1034 2 1037 10 1391 12 693 2 338 2 1038 2 340 2 1394 2 694 2 1395 18 698 2 1040 2 1396 6 344 2 1041 12 1042 50 1398 4 700 2 1044 2 1045 14 1400 22 704 2 1401 12 1047 2 353 2 
427 2 1258 2 92 4 287 2 1079 2 1259 2 501 2 457 2 152 2 1365 2 1215 2 694 2 718 2 1015 2 633 2 223 2 667 2 408 2 1324 2 279 2 704 2 386 2 923 2 549 6 
427 2 1258 2 92 4 287 2 1079 2 1259 2 501 2 457 2 152 2 1365 2 1215 2 694 2 718 2 1015 2 633 2 223 2 667 2 408 2 1324 2 279 2 704 2 386 2 923 2 549 6 
427 2 1258 2 92 4 287 2 1079 2 1259 2 501 2 457 2 152 2 1365 2 1215 2 694 2 718 2 1015 2 633 2 223 2 667 2 408 2 1324 2 279 2 704 2 386 2 923 2 549 6 
307 2 827 2 478 6 266 2 152 2 1365 4 556 2 1083 2 628 4 252 4 1391 2 662 2 139 3 14 2 420 4 1127 3 1288 2 1396 4 834 5 381 2 667 3 1041 2 441 2 1324 2 408 3 817 4 854 2 883 4 922 2 279 10 1400 4 1275 2 258 3 115 2 68 2 923 2 977 2 1204 2 862 2 739 2 
307 2 123 2 827 2 478 6 266 2 152 2 1365 4 556 2 1083 2 628 4 252 4 1391 2 662 2 139 2 1394 2 14 2 420 4 1127 2 1288 2 1396 4 543 2 834 4 381 2 667 2 1041 2 441 2 1324 2 408 2 817 4 854 2 883 4 922 2 279 10 1400 4 1275 2 258 2 115 2 68 2 923 2 977 2 1204 2 862 2 739 2 
307 2 123 2 827 2 478 6 266 2 152 2 1365 4 556 2 1083 2 628 4 252 4 1391 2 662 2 139 2 1394 2 14 2 420 4 1127 2 1288 2 1396 4 543 2 834 4 381 2 667 2 1041 2 441 2 1324 2 408 2 817 4 854 2 883 4 922 2 279 10 1400 4 1275 2 258 2 115 2 68 2 923 2 977 2 1204 2 862 2 739 2 
307 2 123 2 827 2 478 6 266 2 152 2 1365 4 556 2 1083 2 628 4 252 4 1391 2 662 2 139 2 1394 2 14 2 420 4 1127 2 1288 2 1396 4 543 2 834 4 381 2 667 2 1041 2 441 2 1324 2 408 2 817 4 854 2 883 4 922 2 279 10 1400 4 1275 2 258 2 115 2 68 2 923 2 977 2 1204 2 862 2 739 2 
307 2 123 5 827 2 478 6 266 2 152 2 1365 4 556 2 1083 2 628 4 252 4 1391 2 662 2 139 2 1394 4 14 2 420 4 1127 2 1288 2 1396 4 543 4 834 5 381 2 667 2 1041 2 441 2 1324 2 408 2 817 4 854 2 883 4 922 2 279 10 1400 4 1275 2 258 2 115 2 68 2 923 2 977 2 1204 2 862 2 739 2 
626 2 100 2 860 2 179 2 559 2 679 2 
584 2 100 2 11 2 1355 2 547 2 1000 2 148 2 
392 2 165 2 1026 2 1240 1 331 1 1173 1 479 2 687 1 97 2 1365 8 398 2 1318 2 850 2 1062 2 639 1 1107 2 383 2 109 2 279 10 84 2 85 2 66 2 116 2 821 2 207 2 1022 2 
187 2 329 2 123 3 48 4 1297 2 829 2 266 6 1365 6 252 12 1391 6 218 4 968 2 662 6 312 2 1394 2 1288 6 1396 4 834 16 543 2 381 2 1041 6 971 2 279 6 1275 6 23 2 145 2 778 2 183 2 551 2 1204 6 
1225 4 188 2 231 7 394 2 1271 2 364 2 883 2 1164 2 279 1 21 2 1400 2 1365 1 463 2 114 2 628 2 417 2 722 1 1197 2 
1225 4 188 2 231 6 394 2 1271 2 364 4 1164 2 883 2 21 4 1400 2 463 4 114 2 628 2 417 2 1197 2 
1225 4 188 2 231 10 394 2 1271 2 364 8 1164 8 883 2 279 1 21 8 1400 2 1365 1 463 8 114 2 628 2 417 2 722 1 1197 6 
1225 2 188 2 231 2 394 2 1271 2 364 2 883 2 21 2 1400 2 463 2 114 2 628 2 417 2 
1143 27 192 4 265 4 711 4 1317 2 1245 10 1055 4 964 4 521 2 965 4 360 2 270 16 1157 2 1321 10 104 103 277 4 198 2 107 8 279 78 206 4 282 4 119 4 1253 4 283 4 536 4 286 14 1260 2 618 10 375 32 452 6 728 2 211 2 129 8 1081 4 130 10 31 44 892 4 809 2 629 4 988 4 1265 8 221 16 1091 4 640 4 545 4 992 30 298 2 469 4 900 24 301 4 1276 6 1097 4 824 8 552 4 1358 4 1003 29 1187 4 1188 2 1004 2 50 4 1364 4 1365 70 54 6 912 10 832 2 404 4 746 2 749 6 1289 2 240 4 492 4 160 11 1291 2 1202 8 672 4 837 4 497 2 1379 4 676 2 326 4 680 24 926 4 842 4 1385 16 758 4 570 16 759 4 685 24 1387 4 846 8 1298 10 1124 10 169 2 251 2 941 6 1392 4 1126 36 767 2 695 8 1397 4 1305 4 1307 4 176 1 1043 2 702 2 703 8 1313 2 1049 6 592 4 89 2 
1358 2 1143 12 1003 12 1188 2 1359 2 1004 2 50 4 265 4 1055 2 1245 2 1365 26 521 2 912 6 54 2 868 2 832 2 746 2 1157 2 1321 6 749 2 1289 2 1160 2 104 40 1072 2 160 2 107 6 279 28 1291 2 567 2 326 2 283 2 925 10 759 4 570 14 452 2 685 8 728 2 211 2 1081 2 31 14 248 2 168 2 1121 2 892 4 1298 6 941 2 1392 4 37 2 767 2 1126 14 637 2 1091 2 640 4 545 2 992 6 298 2 773 2 301 4 1276 4 
594 4 1143 58 192 4 265 6 711 4 1317 2 1245 18 1055 10 964 4 521 2 965 6 868 11 1156 10 1157 2 1064 24 1321 16 529 2 104 248 1160 8 277 6 796 6 1072 2 107 16 279 150 206 4 1251 6 282 6 119 4 1253 6 725 10 283 6 1254 4 286 12 1260 2 727 2 452 14 728 5 1081 10 211 2 129 24 31 112 892 8 379 8 1341 4 289 24 37 4 221 42 637 2 1091 4 640 6 545 10 992 34 298 2 469 6 301 6 900 84 387 24 1276 8 1001 26 1097 4 552 4 1358 10 1099 90 1003 58 1187 6 1188 8 1359 2 476 90 1004 2 50 6 1364 4 1365 134 54 36 912 16 487 4 832 8 749 10 1289 8 240 6 1376 18 492 6 160 16 1291 4 410 4 837 4 567 2 676 2 1021 4 326 4 680 92 925 22 926 6 928 12 842 4 1209 4 759 6 570 28 1211 2 685 124 1387 6 846 42 248 2 1032 10 937 4 1121 2 1298 16 1218 24 763 2 169 2 251 4 1390 26 941 14 692 24 1392 6 1393 2 1126 88 767 8 852 8 1397 6 1305 6 1307 6 1399 4 773 4 703 50 1049 5 592 6 1402 8 
1358 2 710 2 825 2 1143 5 1003 5 1188 2 655 2 2 2 1004 2 50 2 265 2 356 2 659 2 1245 2 1055 2 600 2 1365 44 1010 2 521 2 54 2 912 4 1198 2 716 4 832 2 310 2 792 2 746 2 405 2 1156 2 1157 2 1064 2 1321 4 749 2 1289 2 1067 2 104 47 160 2 318 2 20 2 205 4 279 46 110 2 497 2 69 2 725 2 283 2 327 2 1206 2 1296 2 618 2 757 2 1027 2 759 2 570 36 452 2 685 6 728 2 1081 2 211 2 248 2 130 2 31 20 168 2 576 2 1032 2 1218 2 1036 2 1298 4 288 2 1124 2 941 2 692 2 766 2 1392 2 1126 20 767 2 640 2 545 2 1350 4 347 4 1399 2 702 2 298 2 423 2 1312 2 301 2 1139 2 1239 2 46 6 1276 6 1402 2 
1374 2 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V ERROR java.lang.NullPointerException 21 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V ERROR utilMDE.Options$ArgException 34 
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.NullPointerException 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V ERROR java.lang.NullPointerException 187 566 
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V ERROR java.lang.NullPointerException 187 566 
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V ERROR java.lang.NullPointerException 187 597 (2,166) 420 (402,693) (2,166) 721 (402,693) 889 839 
daikon.test.diff.DiffTester:testInvs1Invs2()V ERROR java.lang.NullPointerException 187 597 (2,166) 420 (402,693) (2,166) 721 (402,693) 889 839 
daikon.test.diff.DiffTester:testInvs1Invs3()V ERROR java.lang.NullPointerException 187 597 (2,166) 420 (402,693) (2,166) 721 (402,693) 889 839 
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 234 892 592 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:max([I)I
utilMDE.Options.OptionInfo:argument_required()Z
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Invariants:Invariants()V
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.Quant:eltwiseGT([I)Z
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.ArraysMDE:fn_is_permutation([I)Z | ASSIGN | 60226 | = null
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.MathMDE:missing_numbers([I)[I
daikon.Quant:memberOf(F[D)Z
utilMDE.MathMDE:mod_positive(JJ)J
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
utilMDE.MathMDE:gcd(II)I
daikon.Quant:lte(II)Z
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String; | CONDITION | 14830 | if (x) -> if (!x)
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.ProglangType:elementType()Ldaikon.ProglangType;
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_2_16(I)Z
daikon.inv.filter.InvariantFilter:InvariantFilter()V
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ProglangType:baseIsScalar()Z
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant:prob_or(DD)D
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.Intern:internSubsequence([JII)[J
daikon.Quant:subsetOf([I[I)Z
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:eltsNotEqual([II)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | CONDITION | 12410 | if (x) -> if (!x)
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.VarInfoName:isLiteralConstant()Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.VarInfoName:ioa_name()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.VarInfo:isPointer()Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
utilMDE.FuzzyFloat:gt(DD)Z
daikon.ProglangType:baseIsFloat()Z
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.VarInfo:jml_name()Ljava.lang.String;
utilMDE.MathMDE:negate(I)I
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.Quant:gt(II)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.Debug:logDetail()Z
daikon.VarInfo:java_name()Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.VarInfo:relate_var()V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:concat([I[I)[I
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z | ASSIGN | 37692 | = null
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
utilMDE.WeakHasherMap.EntrySet:size()I
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
jtb.JavaParser:jj_3_16()Z
daikon.Quant:gte(II)Z
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.Quant:eq(DD)Z
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.Quant:concat([I[I)[I
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.Invariant:justified()Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.Quant:intersection([I[I)[I
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
utilMDE.ArraysMDE:isSubarray([I[II)Z
jtb.JavaCharStream:getEndColumn()I
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.test.FormatTestCase:passes()Z
daikon.Quant:eltsEqualIndex([I)Z
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:memberOf(I[I)Z
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
daikon.inv.OutputFormat:toString()Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I | CONSTANT | 21933 | 99 -> 1
daikon.VarInfo:dbc_name()Ljava.lang.String;
utilMDE.Intern:intern([J)[J
daikon.VarInfo:esc_name()Ljava.lang.String;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.FuzzyFloat:lt(DD)Z
daikon.Quant:subsetOf([B[I)Z
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.ModBitTracker:ModBitTracker(I)V
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
jtb.JavaCharStream:getEndLine()I
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:eltsEqual([II)Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.Quant:eltsLT([II)Z
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:lexGT([I[I)Z
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
utilMDE.ArraysMDE:min_max([I)[I
daikon.Quant:subsetOf([D[F)Z
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
utilMDE.MathMDE:pow(II)I
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.Quant:memberOf(D[F)Z
daikon.Quant:union([I[I)[I
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
utilMDE.MathMDE:gcd(JJ)J
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.MathMDE:pow_fast(II)I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.ModBitTracker:num_samples()I
utilMDE.FuzzyFloat:eq(DD)Z
daikon.ModBitTracker:num_sets()I
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z | CONDITION | 1839 | if (x) -> if (!x)
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.FuzzyFloat:ne(DD)Z
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
utilMDE.FuzzyFloat:gte(DD)Z
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant:isWorthPrinting()Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.Quant:eq(JJ)Z
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ProglangType:isIntegral()Z
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.MathMDE:modulus([I)[I
daikon.Quant:isReverse([I[I)Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName:toString()Ljava.lang.String;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.Quant:lexNotEqual([I[I)Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.Quant:setEqual([I[I)Z
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
utilMDE.ArraysMDE:sum([[D)D
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.Quant:setDiff([I[I)[I
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.Debug:logOn()Z
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.Quant:pairwiseLTE([I[I)Z
daikon.Quant:eltsLteIndex([I)Z
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.Node:add(Ljava.lang.Object;)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.ArraysMDE:sum([D)D
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:subsetOf([F[F)Z
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
jtb.ParseException:getMessage()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
utilMDE.OrderedPairIterator:hasNext()Z
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.inv.Invariant:logDetail()Z
jtb.JavaParser:jj_scan_token(I)Z
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
jtb.Token:newToken(I)Ljtb.Token;
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:subsetOf([F[D)Z
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:lexLT([I[I)Z
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:memberOf(S[S)Z
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.Quant:pairwiseLT([I[I)Z
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.ModBitTracker:split(I)I
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.ProglangType:baseIsIntegral()Z
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
utilMDE.FuzzyFloat:lte(DD)Z
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.simplify.LemmaStack:noticeInt(J)V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
utilMDE.MathMDE:mod_positive(II)I
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant:prob_and(DD)D
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.ProglangType:dimensions()I
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
daikon.PptSlice0:arity()I
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
utilMDE.MathMDE:gcd_differences([I)I
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.ValueTuple:size()I
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.NodeFinder:inPre()Z
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
jtb.ParseException:ParseException(Ljava.lang.String;)V
daikon.Quant:memberOf(F[F)Z
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.Quant:eltwiseNotEqual([I)Z
daikon.test.TestQuant:removeAdjacentDups([I)[I
utilMDE.ArraysMDE:element_range([I)I
daikon.Quant:eltsGteIndex([I)Z
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.Quant:lexEqual([I[I)Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.VarInfoName:name()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:pairwiseSquare([I[I)Z
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.VarInfoName:hashCode()I
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:jj_ntk()I
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.ValueTuple:isMissing(I)Z
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.ModBitTracker:num_vars()I
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext1()V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.Quant:eltwiseLT([I)Z
daikon.Quant:eltwiseEqual([I)Z
daikon.PptSlice1:arity()I
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
utilMDE.Assert:assertTrue(Z)V
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.Quant:lt(II)Z
utilMDE.ArraysMDE:min([I)I
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
utilMDE.Intern:intern([D)[D
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.test.InvariantFormatTester:execute()Z
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.Quant:pairwiseGTE([I[I)Z
daikon.Quant:memberOf(J[J)Z
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.Quant:eltsLtIndex([I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.Quant:lexLTE([I[I)Z
daikon.Quant:pairwiseGT([I[I)Z
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:sameLength([I[I)Z
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:eltwiseLTE([I)Z
daikon.VarInfo:name()Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.inv.Invariant:prob_and(DDD)D
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.ProglangType:isPseudoArray()Z
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:lexGTE([I[I)Z
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
utilMDE.ArraysMDE:sum([I)I
utilMDE.Intern:internSubsequence([III)[I
utilMDE.FuzzyFloat:isSubset([D[D)Z
utilMDE.ArraysMDE:sum([[I)I
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.ProglangType:isScalar()Z
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.diff.InvMap:InvMap()V
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.JavaCharStream:getBeginColumn()I
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.diff.Node:Node()V
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.PptSlice1:num_samples()I
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
jtb.JavaCharStream:readChar()C
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.Quant:noDups([I)Z
utilMDE.Intern:numIntArrays()I
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
utilMDE.Intern:intern([I)[I
utilMDE.MathMDE:gcd([I)I
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.Ppt:Ppt()V
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.Quant:subsetOf([D[D)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
jtb.JavaCharStream:ReadByte()C
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.JavaParser:generateParseException()Ljtb.ParseException;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.Quant:eltwiseGTE([I)Z
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.Quant:subsetOf([J[J)Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
utilMDE.Intern.SequenceAndIndices:hashCode()I
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
utilMDE.ArraysMDE:subarray([JII)[J
daikon.diff.Node:children()Ljava.util.Iterator;
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.VarInfo:new_ppt()V
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:pairwiseDivides([I[I)Z
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.ProglangType:isArray()Z
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.Quant:slice([III)[I
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ValueTuple:isMissingNonsensical(I)Z
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.ValueTuple:isMissingFlow(I)Z
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.inv.Invariant:logOn()Z
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
jtb.JavaCharStream:FillBuff()V
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:size()I
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
utilMDE.OrderedPairIterator:setnext2()V
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
daikon.ProglangType:isFloat()Z
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:eltsGT([II)Z
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.PptName:isCombinedExitPoint()Z
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.ProglangType:isPointerFileRep()Z
jtb.JavaCharStream:backup(I)V
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaCharStream:BeginToken()C
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:ne(II)Z
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.inv.filter.ParentFilter:ParentFilter()V
utilMDE.LimitedSizeIntSet:size()I
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
utilMDE.ArraysMDE:indexOf([II)I
daikon.PptSlice2:arity()I
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.Invariant:getConfidence()D
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
utilMDE.LimitedSizeIntSet:add(I)V
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfo:ioa_name()Ljava.lang.String;
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
utilMDE.ArraysMDE:sorted([I)Z
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.Quant:pairwiseEqual([I[I)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.Quant:eq(II)Z
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.diff.RootNode:RootNode()V
utilMDE.ArraysMDE:subarray([III)[I
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.Quant:eq(FF)Z
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.PptName:isEnterPoint()Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.Quant:eltsLTE([II)Z
jtb.JavaCharStream:UpdateLineColumn(C)V
utilMDE.Options.ArgException:ArgException(Ljava.lang.String;)V
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.Quant:pairwiseNotEqual([I[I)Z
utilMDE.MathMDE:sign(I)I
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:subsetOf([S[S)Z
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.Quant:eltsGtIndex([I)Z
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.Quant:eltsNotEqualIndex([I)Z
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.WeakHasherMap:processQueue()V
daikon.inv.ValueSet:ValueSet(I)V
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:MoreLexicalActions()V
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.Quant:eltsGTE([II)Z
jtb.JavaCharStream:getBeginLine()I
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
412 2 572 2 414 2 822 4 849 2 391 2 504 2 18 2 699 2 
937 2 398 6 564 6 784 6 209 2 441 2 670 2 327 2 748 2 946 2 196 2 
572 2 920 6 511 2 143 6 274 2 18 2 516 6 472 4 879 2 709 4 133 6 44 2 792 2 
572 6 157 12 101 8 71 2 579 2 925 16 926 10 106 4 377 8 292 16 248 6 676 6 322 10 294 10 706 8 78 10 710 2 413 2 871 4 628 4 470 26 746 10 18 6 230 2 151 2 915 8 636 2 337 16 750 4 846 29 
341 4 599 6 
681 2 
829 2 399 2 98 2 344 2 3 2 70 2 650 2 8 2 861 2 582 2 412 2 467 2 302 2 558 2 421 2 276 4 820 2 230 2 635 2 21 2 883 2 172 2 539 2 638 2 233 2 23 2 
572 4 157 22 101 18 733 4 289 2 805 2 925 32 926 16 929 6 292 32 431 2 248 4 676 4 322 16 611 8 293 6 250 6 294 16 78 6 11 4 413 2 590 4 419 2 389 2 668 6 470 48 746 16 18 4 128 6 915 6 337 32 129 4 750 2 202 6 884 4 846 54 957 4 639 2 281 4 
950 2 883 2 373 2 
29 2 346 2 685 2 147 2 379 2 933 2 474 2 136 2 796 2 637 2 251 2 340 10 329 22 751 2 
828 2 480 2 157 2 674 2 101 2 400 2 925 2 926 2 782 2 292 2 676 2 322 2 294 2 78 4 195 2 267 2 470 4 746 2 337 2 750 2 362 2 692 2 846 6 
157 4 627 2 733 4 925 8 686 2 470 12 926 4 929 6 106 2 746 4 292 8 322 4 293 6 337 8 294 4 846 16 281 4 
510 2 178 4 98 2 483 14 371 2 373 2 923 62 30 10 928 4 186 4 517 4 408 2 323 2 324 4 159 2 677 2 37 2 614 2 707 2 297 2 298 2 262 2 834 2 83 4 819 4 392 10 197 4 910 2 276 4 473 2 950 6 565 4 475 2 442 2 843 4 883 8 539 4 24 2 448 2 176 4 
903 2 494 2 681 2 596 2 34 2 349 2 9 2 862 2 435 2 282 2 506 2 
238 3 369 2 830 2 605 2 482 1 730 2 370 2 376 1 609 4 137 2 381 2 486 2 254 2 384 4 619 2 623 2 624 1 261 2 625 3 12 4 491 2 498 2 18 32 847 3 280 2 504 2 505 2 507 2 155 2 644 2 513 2 403 1 652 1 857 5 407 2 409 2 656 2 40 1 658 2 45 4 869 6 761 2 662 2 301 2 528 2 303 2 535 2 874 3 765 2 880 1 59 14 173 2 882 1 177 2 886 2 313 2 65 2 182 2 430 2 785 2 544 2 191 2 433 2 894 2 789 1 77 14 549 4 898 6 79 2 550 25 678 2 333 2 905 2 682 6 684 1 89 2 913 2 440 2 338 2 203 19 694 3 799 1 447 1 449 1 572 30 208 3 211 6 210 1 99 3 100 2 922 2 804 1 697 2 104 2 927 2 350 2 215 19 111 1 112 2 222 2 355 2 713 2 356 2 468 26 224 2 225 3 945 1 357 1 122 2 227 2 361 2 476 2 722 14 365 12 367 2 827 3 
342 2 18 2 
626 2 485 2 18 4 
66 2 
602 12 726 10 888 2 727 8 243 4 246 2 890 2 190 2 75 2 488 6 546 2 253 2 257 12 258 8 902 40 439 2 556 4 194 2 629 4 198 4 200 6 689 40 634 12 691 2 444 4 92 2 798 12 919 2 450 12 646 10 212 6 803 12 576 12 288 2 648 2 696 4 578 2 853 8 932 2 110 2 809 4 214 10 295 4 39 2 41 2 115 10 164 2 815 2 659 6 219 2 524 4 47 6 588 16 49 12 416 10 527 4 663 12 664 2 942 12 531 2 593 2 944 8 762 2 948 18 54 4 56 6 231 12 767 2 671 40 
427 1 868 2 616 2 909 2 
868 2 924 2 
438 2 868 2 871 2 883 2 538 2 226 2 237 2 
868 2 393 2 237 2 
868 2 237 2 72 2 
372 2 616 2 806 2 
868 2 237 2 
266 2 806 2 
868 2 103 2 
864 2 616 2 806 2 
199 2 462 2 616 2 
410 2 163 2 616 2 
604 2 616 2 31 2 
581 2 594 2 616 2 
568 2 806 2 
537 2 868 2 
199 2 567 2 
163 2 618 2 
16 2 31 2 
700 2 581 2 
235 2 806 2 
540 2 581 2 
921 2 31 2 
411 2 163 2 
199 2 601 2 
542 2 864 2 616 2 806 2 
542 2 387 2 864 2 616 2 806 2 
716 2 616 2 806 2 
547 2 616 2 806 2 
82 2 121 2 87 2 422 2 
452 2 778 2 532 2 595 2 457 2 687 2 277 2 878 2 360 2 307 2 703 4 423 2 252 2 329 6 204 4 916 2 570 2 25 2 
240 2 616 2 
438 2 883 2 184 2 207 2 
438 2 883 2 538 2 308 2 184 2 207 2 
438 2 868 2 871 2 883 2 401 2 237 2 
302 2 673 2 
438 2 724 2 871 2 883 2 
793 2 31 2 
941 2 581 2 
199 2 269 2 
163 2 901 2 
581 2 454 2 163 2 
603 2 581 2 163 2 
581 2 163 2 272 2 
633 2 581 2 163 2 
134 2 105 6 808 2 548 2 438 2 873 6 279 2 883 2 
955 2 806 2 
922 2 
313 2 180 2 605 2 730 2 609 4 187 2 381 2 382 2 894 2 254 2 898 2 549 4 550 2 12 4 333 2 905 2 390 2 742 4 682 6 18 18 566 2 504 2 569 2 449 2 644 6 572 18 211 2 100 2 513 2 804 2 697 2 927 2 407 2 353 2 45 4 658 2 761 2 869 4 301 2 662 2 713 2 468 6 356 2 224 2 304 2 52 2 58 2 361 2 365 6 177 2 
369 2 313 2 180 2 605 2 730 2 609 4 187 2 381 2 382 2 894 2 254 2 898 2 549 4 550 2 12 4 333 2 905 2 390 2 742 4 682 6 18 18 566 2 504 2 569 2 449 2 644 6 572 18 211 2 100 2 513 2 804 2 697 2 927 2 407 2 353 2 45 4 658 2 761 2 869 6 301 2 662 2 713 2 468 6 356 2 224 2 304 2 52 2 58 2 361 2 476 2 365 6 177 2 
620 2 
893 2 876 2 
774 8 605 2 776 4 2 2 889 2 4 2 891 2 784 6 192 4 327 2 895 2 254 2 904 2 12 2 388 2 795 2 743 2 682 4 560 2 839 2 18 12 564 6 840 2 441 4 748 4 693 2 845 2 154 2 397 2 156 2 571 2 398 6 572 6 801 2 27 2 100 2 513 2 697 2 649 2 402 2 807 2 651 2 291 8 520 2 217 2 811 10 45 2 866 2 711 4 761 2 870 4 418 4 667 4 717 2 361 2 670 2 130 2 881 2 721 2 61 2 
774 8 605 2 776 4 2 2 317 2 889 2 4 2 891 2 784 8 192 4 327 2 895 2 254 2 332 4 904 2 12 2 388 2 743 2 682 4 560 2 839 2 18 12 564 6 840 2 441 4 748 4 693 2 845 2 154 2 397 2 156 2 571 2 572 6 398 8 801 2 209 2 27 2 100 2 513 2 697 2 649 2 402 2 807 2 651 2 291 8 520 2 217 2 811 10 45 2 866 2 711 4 761 2 870 4 418 4 667 4 717 2 361 2 670 2 130 2 132 2 721 2 61 2 
711 2 904 2 870 4 388 2 667 4 889 2 649 2 402 2 839 2 651 2 564 2 891 2 784 2 441 2 520 2 217 2 130 2 748 2 
774 4 605 2 776 4 2 2 889 2 4 2 891 2 784 6 192 4 895 2 254 2 904 2 12 2 388 2 795 2 743 2 682 4 560 2 839 2 18 12 564 4 840 2 441 4 748 4 693 2 845 2 154 2 397 2 156 2 571 2 398 6 572 6 801 2 209 2 27 2 100 2 513 2 697 2 649 2 402 2 807 2 651 2 291 4 520 2 217 2 811 6 45 2 866 2 711 4 761 2 870 4 418 4 667 4 717 2 361 2 670 2 130 2 881 2 721 2 61 2 
774 4 605 2 776 4 2 2 889 2 4 2 891 2 784 4 192 4 895 2 254 2 904 2 12 2 388 2 795 2 743 2 682 4 560 2 839 2 18 12 564 6 840 2 441 4 748 4 693 2 845 2 154 2 397 2 156 2 571 2 398 6 572 6 801 2 27 2 100 2 513 2 697 2 649 2 402 2 807 2 651 2 291 4 520 2 217 2 811 6 45 2 866 2 711 4 761 2 870 4 418 4 667 4 946 2 717 2 361 2 670 2 130 2 881 2 721 2 61 2 
774 4 605 2 776 4 2 2 889 2 4 2 891 2 784 6 192 4 327 2 895 2 254 2 904 2 12 2 388 2 795 2 743 2 682 4 560 2 839 2 18 12 564 6 840 2 441 4 748 4 693 2 845 2 154 2 397 2 156 2 571 2 398 6 572 6 801 2 27 2 100 2 513 2 697 2 649 2 402 2 807 2 651 2 291 8 520 2 217 2 811 6 45 2 866 2 711 4 761 2 870 4 418 4 667 4 717 2 361 2 670 2 130 2 881 2 721 2 61 2 
774 8 605 2 776 4 2 2 889 2 4 2 891 2 784 6 192 4 327 2 895 2 254 2 904 2 12 2 388 2 795 2 743 2 682 4 560 2 839 2 18 12 564 8 840 2 441 4 748 4 693 2 845 2 154 2 397 2 156 2 571 2 398 8 572 6 801 2 27 2 100 2 513 2 697 2 649 2 402 2 807 2 651 2 291 8 520 2 217 2 811 10 45 2 866 2 711 4 761 2 870 4 418 4 667 4 946 2 717 2 361 2 670 2 130 2 881 2 721 2 61 2 
774 8 605 2 776 4 2 2 889 2 4 2 891 2 784 6 192 4 327 2 895 2 254 2 904 2 12 2 388 2 795 2 743 2 682 4 560 2 839 2 18 12 564 6 840 2 441 4 748 4 693 2 845 2 154 2 397 2 156 2 571 2 398 6 572 6 801 2 27 2 100 2 513 2 697 2 649 2 402 2 807 2 651 2 291 8 520 2 217 2 811 10 45 2 866 2 711 4 761 2 870 4 418 4 667 4 717 2 361 2 670 2 130 2 881 2 721 2 61 2 
0 2 2 2 730 2 4 2 245 2 485 6 254 2 12 4 743 2 742 4 497 6 268 2 744 8 18 46 501 2 748 4 747 4 504 2 285 1 753 1 27 2 513 2 291 2 520 2 756 10 521 6 45 4 759 2 761 2 301 2 534 1 55 7 57 2 61 2 541 6 313 2 66 6 315 2 776 4 777 6 67 2 784 4 544 4 76 2 789 1 549 4 550 2 553 2 333 2 560 4 564 8 569 4 571 2 572 24 342 6 801 2 97 6 100 2 807 4 347 6 810 2 351 2 811 2 112 2 354 2 356 2 358 2 126 7 821 1 361 2 825 6 597 2 130 2 365 6 369 2 605 2 375 2 609 4 381 2 382 2 613 1 619 4 622 2 388 2 836 6 390 2 144 2 146 2 838 2 839 2 840 2 845 2 154 2 397 2 642 1 156 2 398 12 644 6 649 2 402 2 854 2 651 2 406 2 407 12 161 2 658 2 866 2 869 6 166 2 662 2 870 4 418 6 420 2 665 1 666 6 667 4 669 6 670 4 881 2 885 2 174 2 177 2 425 6 886 2 889 2 430 2 891 2 192 8 894 2 895 2 898 2 900 1 904 2 905 2 682 6 911 2 441 4 443 2 693 2 917 2 211 2 697 2 927 2 935 2 216 4 936 2 217 2 461 2 711 4 939 2 713 2 468 8 224 2 946 4 229 6 717 2 954 1 476 2 232 6 721 2 959 2 
369 2 0 2 605 2 2 2 730 2 4 2 245 2 375 2 609 4 485 6 381 2 382 2 254 2 619 6 622 2 12 4 836 6 388 2 390 2 268 2 497 6 742 4 144 2 743 2 146 2 744 8 838 2 839 2 18 46 501 2 840 2 747 4 748 4 845 2 504 2 397 2 154 2 156 2 644 6 398 12 27 2 513 2 649 2 854 2 402 2 404 2 651 2 291 6 406 2 407 12 520 2 521 6 756 10 161 2 658 2 45 4 866 2 759 2 166 2 869 6 761 2 870 4 662 2 301 2 418 6 420 2 666 6 667 4 57 2 669 6 670 4 881 2 174 2 885 2 61 2 425 6 177 2 886 4 541 6 313 2 315 2 66 6 776 4 777 6 67 2 889 2 73 2 430 4 187 2 891 2 784 8 544 6 192 8 894 2 327 4 895 2 76 2 898 2 549 4 550 2 553 2 904 2 333 2 905 2 682 6 560 2 911 2 564 8 441 4 443 2 693 2 917 2 569 4 571 2 572 24 342 6 211 2 97 6 100 2 697 2 347 6 807 2 927 2 810 2 216 4 935 2 936 2 351 2 217 2 112 4 461 2 354 2 711 4 713 2 468 8 356 2 224 2 358 2 229 6 361 2 597 2 825 6 130 2 476 2 232 6 721 2 365 6 959 2 
369 2 0 2 605 2 2 2 730 2 4 2 245 2 375 2 609 4 485 6 381 2 382 2 254 2 619 6 622 2 12 4 836 6 388 2 390 2 268 2 497 6 742 4 144 2 743 2 146 2 744 8 838 2 839 2 18 46 501 2 840 2 747 4 748 4 845 2 504 2 397 2 154 2 156 2 644 6 398 12 27 2 513 2 649 2 854 2 402 2 404 2 651 2 291 6 406 2 407 12 520 2 521 6 756 10 161 2 658 2 45 4 866 2 759 2 166 2 869 6 761 2 870 4 662 2 301 2 418 6 420 2 666 6 667 4 57 2 669 6 670 4 881 2 174 2 885 2 61 2 425 6 177 2 886 4 541 6 774 4 313 2 315 2 66 6 776 4 777 6 67 2 889 2 73 2 430 4 187 2 891 2 784 8 544 6 192 8 894 2 327 4 895 2 76 2 898 2 549 4 550 2 553 2 904 2 333 2 905 2 682 6 560 2 911 2 564 8 441 4 443 2 693 2 917 2 569 4 571 2 572 24 342 6 211 2 97 6 100 2 697 2 347 6 807 2 927 2 810 2 216 4 935 2 936 2 351 2 811 4 217 2 112 4 461 2 354 2 711 4 713 2 468 8 356 2 224 2 358 2 229 6 361 2 597 2 825 6 130 2 476 2 232 6 721 2 365 6 959 2 
369 2 0 2 605 2 2 2 730 2 4 2 245 2 375 2 609 4 7 2 485 6 381 2 382 2 254 2 619 6 622 2 12 4 836 6 388 2 837 2 390 2 268 2 497 6 742 6 144 2 743 2 146 2 744 8 271 2 838 2 839 2 18 44 501 2 840 2 747 4 748 4 845 2 504 2 397 2 154 2 156 2 284 2 644 8 398 16 27 2 513 2 649 2 854 2 402 2 404 2 651 2 291 6 406 2 407 10 520 2 756 8 521 6 161 2 658 2 45 4 866 2 759 2 166 2 869 6 761 2 870 4 662 2 301 2 418 6 420 2 666 6 667 4 57 2 669 6 670 4 881 2 174 2 885 2 61 2 425 6 177 2 886 4 541 6 774 4 313 2 428 2 315 2 66 6 776 4 777 6 889 2 73 2 430 4 187 2 891 2 784 10 544 6 192 8 894 2 327 4 895 2 76 2 898 4 549 4 550 4 80 2 553 2 904 2 333 2 905 2 682 6 560 2 911 2 564 10 441 4 443 2 693 2 917 2 569 4 571 2 572 22 342 6 211 4 209 2 97 6 100 2 697 2 347 6 807 2 927 2 810 2 216 4 935 2 936 2 351 2 811 4 217 2 112 4 461 2 354 2 711 4 713 2 468 12 356 2 224 2 946 2 358 2 229 6 361 2 597 2 825 6 130 2 476 2 232 6 721 2 365 8 959 2 
571 2 156 2 398 4 774 4 776 2 27 2 4 2 649 2 651 2 291 6 784 6 520 2 192 2 327 2 811 4 217 2 895 2 904 2 870 2 418 2 388 2 667 2 743 2 18 4 564 6 840 2 441 4 670 2 130 2 748 4 881 2 61 2 845 2 397 2 154 2 
369 2 605 2 730 2 4 2 609 4 381 2 382 2 612 2 254 2 489 2 12 4 388 2 390 2 743 2 742 4 630 3 18 28 500 2 840 2 748 4 845 2 504 2 641 2 397 2 154 2 156 2 398 4 644 6 27 2 513 2 649 2 651 2 291 6 407 4 520 2 756 2 45 4 658 2 866 2 761 2 869 6 870 2 662 2 301 2 418 2 667 2 670 2 881 2 173 2 61 2 177 2 313 2 776 2 67 2 784 6 785 2 192 2 327 2 894 2 895 2 549 4 898 3 550 3 904 2 333 2 905 2 682 6 564 6 441 4 569 2 571 2 572 24 211 3 100 2 577 2 922 2 697 2 927 2 350 2 811 2 217 2 713 2 356 2 468 8 224 2 361 2 130 2 476 2 365 6 
571 2 743 2 734 2 
571 2 743 2 734 2 
369 2 605 2 730 2 5 4 734 2 375 2 609 4 381 2 10 2 382 2 254 2 619 4 621 4 12 4 836 2 741 2 390 2 743 4 18 24 747 2 748 4 22 2 396 2 504 2 397 2 156 2 644 2 398 16 513 2 649 4 402 2 32 2 651 2 291 6 407 4 756 2 658 2 45 4 865 2 869 6 761 2 662 2 301 2 870 2 418 4 420 2 667 2 670 4 771 2 177 2 886 4 774 4 313 2 181 2 776 2 889 2 430 4 320 4 784 12 544 4 192 4 327 4 76 4 789 2 549 4 550 2 437 2 679 2 333 2 905 2 682 6 560 4 688 2 564 12 441 4 693 2 569 6 571 6 572 16 801 2 209 4 100 2 697 2 807 2 927 2 810 2 216 2 811 6 112 4 352 2 708 2 711 4 938 2 713 2 714 2 356 2 468 2 224 2 946 4 361 2 824 2 476 2 130 2 598 2 721 2 365 2 
572 2 437 2 760 2 836 2 513 2 32 2 18 4 891 2 407 2 216 2 893 2 10 2 936 2 597 2 756 2 309 2 464 2 
369 2 605 2 730 2 5 4 734 2 375 2 609 4 381 2 10 2 382 2 254 2 619 4 621 4 138 2 12 4 836 2 741 2 390 2 743 4 145 2 18 24 747 2 748 4 504 2 397 2 156 2 644 2 398 16 513 2 649 4 402 2 32 2 651 2 291 6 407 2 42 2 658 2 45 4 865 4 869 6 761 2 662 2 301 2 870 2 418 4 420 2 667 2 670 4 771 2 177 2 886 4 774 4 313 2 181 2 776 2 889 2 430 4 318 2 320 4 784 12 544 4 192 4 327 4 76 4 549 4 550 4 437 2 679 2 333 2 905 2 557 2 682 6 560 4 688 2 564 12 441 4 693 2 569 6 571 6 572 16 801 2 209 4 100 2 697 2 807 4 927 2 810 2 811 6 112 4 352 2 708 2 711 4 713 2 714 2 356 2 468 2 224 2 946 4 717 2 361 2 824 2 476 2 130 2 721 2 365 2 
369 2 605 2 730 2 5 4 734 2 375 2 609 4 381 2 10 2 382 2 254 2 619 4 621 4 12 4 836 2 741 2 390 2 743 4 18 24 747 2 748 4 504 2 397 2 156 2 644 2 398 16 513 2 649 4 402 2 855 2 32 2 651 2 291 6 407 4 756 2 658 2 45 4 865 2 869 6 761 2 662 2 301 2 870 2 418 4 530 2 420 2 667 2 670 4 771 2 177 2 886 4 774 4 313 2 181 2 776 2 889 2 430 4 320 4 784 12 544 4 192 4 327 4 76 4 789 1 549 4 550 2 437 2 679 2 333 2 905 2 682 6 560 4 86 2 688 2 564 12 441 4 693 2 205 2 569 6 571 6 572 16 801 2 209 4 100 2 697 2 807 4 927 2 810 2 216 2 811 6 112 4 352 2 116 2 708 2 711 4 713 2 714 2 356 2 468 2 224 2 946 4 717 2 361 2 824 2 476 2 130 2 721 2 365 2 
0 2 242 6 730 2 733 4 247 8 249 8 735 2 254 2 738 12 256 12 260 2 489 2 264 2 12 4 739 1 13 2 490 8 742 10 14 2 18 30 746 2 500 2 501 22 749 2 504 2 752 2 26 6 286 2 513 2 289 4 515 2 518 2 292 4 35 2 294 2 296 2 45 4 759 2 761 2 301 2 529 4 51 2 304 2 533 2 52 2 305 2 57 2 766 4 58 2 769 12 311 2 313 2 314 2 312 10 316 4 781 2 319 2 322 2 324 2 544 18 545 2 788 2 76 4 789 1 790 2 549 4 331 2 791 4 550 11 554 2 794 2 333 2 335 4 85 1 84 2 562 2 565 2 797 2 337 4 94 2 569 2 572 24 100 2 577 2 101 4 804 2 107 2 351 14 580 2 812 2 114 4 814 2 584 2 117 2 587 2 119 12 592 2 591 2 356 2 124 10 361 2 363 8 365 12 369 2 831 4 605 2 374 4 832 3 609 4 381 2 382 2 619 18 385 2 142 2 144 2 630 2 148 4 632 2 846 8 641 2 640 2 644 12 157 4 850 2 158 8 852 10 406 2 407 2 859 1 162 2 658 2 660 2 415 2 869 6 662 2 417 1 168 10 170 2 875 2 885 2 175 10 177 2 178 2 179 2 180 2 429 4 185 4 186 2 189 2 892 2 894 2 434 2 898 11 193 2 899 2 905 2 906 2 682 6 197 2 914 2 201 6 449 2 211 11 453 2 697 2 456 8 925 4 927 2 698 2 926 2 929 6 213 2 934 2 460 2 935 2 463 1 218 2 220 2 712 24 713 2 468 18 224 2 947 2 469 6 470 6 949 2 952 2 476 2 234 2 236 2 479 6 
644 2 572 2 211 2 286 2 832 2 781 2 107 2 35 2 894 2 812 4 114 2 898 2 331 2 584 2 550 2 220 2 794 2 468 2 742 2 335 2 18 2 501 6 956 2 365 2 
644 2 572 2 211 2 286 2 832 2 781 2 107 2 35 2 894 2 812 4 114 2 898 2 331 2 584 2 550 2 220 2 794 2 468 2 742 2 335 2 18 2 501 6 956 2 365 2 
644 2 572 2 211 2 286 2 832 2 781 2 107 2 35 2 894 2 812 4 114 2 898 2 331 2 584 2 550 2 220 2 794 2 468 2 742 2 335 2 18 2 501 6 956 2 365 2 
509 2 800 2 572 4 95 2 573 4 211 3 925 2 926 2 348 4 930 3 292 2 484 2 248 2 322 2 519 3 655 2 36 2 35 2 894 2 294 2 38 4 550 3 386 4 265 2 468 2 492 4 496 2 123 6 471 2 470 4 764 3 631 2 746 2 18 10 503 2 915 4 337 2 59 2 846 6 722 2 
484 2 248 2 322 2 894 2 550 2 386 4 265 2 492 4 496 2 631 2 18 10 746 2 503 2 915 4 337 2 846 4 572 4 800 2 509 2 95 2 573 4 211 2 157 2 101 2 925 2 926 2 348 4 930 2 292 2 519 2 655 2 35 2 36 2 294 2 38 4 413 2 468 2 123 6 764 2 470 4 471 2 59 2 722 2 
484 2 248 2 322 2 894 2 550 2 386 4 265 2 492 4 496 2 631 2 18 10 746 2 503 2 915 4 337 2 846 4 572 4 800 2 509 2 95 2 573 4 211 2 157 2 101 2 925 2 926 2 348 4 930 2 292 2 519 2 655 2 35 2 36 2 294 2 38 4 413 2 468 2 123 6 764 2 470 4 471 2 59 2 722 2 
484 2 248 2 322 2 894 2 550 2 386 4 265 2 492 4 496 2 631 2 18 10 746 2 503 2 915 4 337 2 846 4 572 4 800 2 509 2 95 2 573 4 211 2 157 2 101 2 925 2 926 2 348 4 930 2 292 2 519 2 655 2 35 2 36 2 294 2 38 4 413 2 468 2 123 6 764 2 470 4 471 2 59 2 722 2 
484 2 248 2 322 2 894 2 550 2 386 4 265 2 492 4 496 2 631 2 18 10 746 2 503 2 915 4 337 2 846 4 572 4 800 2 509 2 95 2 573 4 211 2 157 4 101 4 925 2 926 2 348 4 930 2 292 2 519 2 655 2 35 2 36 2 294 2 38 4 413 4 468 2 123 6 764 2 470 4 471 2 59 2 722 2 
508 2 28 2 93 2 319 2 405 2 585 2 
940 2 312 2 833 2 28 2 477 2 907 2 171 2 
723 2 695 2 572 8 887 2 543 2 607 2 732 2 188 2 323 1 74 2 704 1 736 2 521 2 328 2 705 2 254 2 330 2 298 1 436 2 523 2 221 1 465 2 559 2 561 2 18 10 826 1 
572 6 157 4 68 2 101 2 733 2 925 6 926 6 929 4 292 6 248 2 611 2 322 6 294 6 863 2 139 2 413 2 169 2 170 2 470 12 18 6 746 6 127 2 128 4 766 2 915 4 337 6 884 2 846 16 672 2 752 2 
572 1 386 2 728 2 835 2 492 2 244 1 345 7 780 2 18 1 348 2 608 2 536 4 228 2 653 2 860 2 755 2 113 2 43 2 
386 2 728 2 835 4 492 2 345 6 780 2 608 2 348 2 536 4 228 2 653 4 860 2 755 2 113 2 43 4 
572 1 386 2 728 2 835 8 492 2 244 1 345 10 780 2 18 1 608 8 348 2 536 4 228 2 653 8 860 6 755 2 113 2 43 8 
386 2 728 2 835 2 492 2 345 2 780 2 348 2 536 2 228 2 653 2 755 2 113 2 43 2 
239 2 369 58 725 4 241 4 1 6 729 8 730 14 606 4 135 2 6 6 609 88 378 10 380 4 737 6 255 2 256 22 140 8 263 124 493 2 15 2 270 6 275 2 17 6 18 150 499 42 150 24 19 8 841 10 502 84 278 4 153 4 844 4 395 6 643 24 645 12 647 2 851 2 512 4 514 6 290 6 33 18 859 11 654 2 858 90 754 6 160 4 522 10 658 14 657 24 758 2 867 4 48 2 661 36 869 248 662 8 525 26 526 6 417 8 50 2 872 4 306 6 60 4 768 42 424 50 772 2 773 4 64 2 183 8 675 6 69 10 779 4 432 90 783 6 321 4 786 10 544 28 787 8 325 2 896 6 789 4 897 10 549 112 551 6 552 6 680 8 908 16 683 6 334 6 85 16 336 24 88 16 912 4 690 2 90 2 91 17 445 26 206 18 918 4 451 4 572 134 96 8 455 4 458 16 108 4 109 6 702 10 463 8 118 4 119 4 466 92 817 6 223 8 818 4 943 6 125 4 823 12 718 6 719 24 476 58 363 34 720 10 131 24 478 4 364 2 600 2 366 2 368 1 958 6 
369 2 64 2 775 2 481 2 729 2 730 2 731 2 69 2 675 2 135 2 609 20 378 2 786 2 544 38 325 2 487 2 383 2 897 2 789 2 615 2 737 2 549 20 259 2 140 2 551 2 263 6 740 4 495 2 683 2 908 4 15 2 149 2 273 2 563 2 18 46 88 4 19 2 841 2 152 2 690 2 394 4 91 2 339 2 446 2 643 2 848 2 572 44 343 2 96 6 574 2 287 4 850 4 802 2 102 2 456 6 290 2 458 4 33 2 108 2 459 2 701 2 702 2 583 2 757 2 522 2 658 2 299 2 165 2 46 2 661 2 586 2 118 2 869 44 589 2 167 2 662 2 817 4 715 2 223 2 359 2 951 2 953 2 719 2 476 2 720 2 131 2 770 2 62 2 63 2 366 2 310 2 958 2 
369 30 725 4 481 2 1 4 730 6 606 4 6 4 609 36 378 4 610 2 737 4 255 2 617 2 140 2 263 24 493 2 15 2 270 4 745 2 17 4 18 78 499 8 150 8 19 2 502 24 278 4 842 8 20 16 153 4 844 4 395 4 283 4 645 14 514 4 856 4 290 4 33 10 654 2 754 4 658 6 299 2 46 10 661 6 869 104 300 4 662 2 526 4 763 2 53 4 877 16 768 16 424 8 426 8 773 4 64 2 779 4 69 4 675 4 783 4 321 2 544 14 325 2 326 2 896 4 897 4 549 44 551 4 552 4 555 8 81 4 680 4 908 10 683 4 334 4 85 8 88 10 690 2 91 10 451 4 572 70 96 6 575 32 455 4 458 10 931 4 701 2 702 6 813 2 463 4 586 10 466 24 816 8 817 2 120 4 223 2 818 4 943 4 125 4 951 10 718 4 476 28 363 30 720 4 478 4 600 2 366 2 958 4 
239 2 773 2 369 12 64 2 730 2 675 4 69 2 779 2 135 2 609 14 378 2 321 2 544 14 325 2 789 2 897 2 737 4 256 10 549 14 140 2 551 4 263 8 680 4 908 6 683 4 15 2 85 6 912 2 88 6 18 28 19 2 690 2 90 2 91 2 572 26 96 4 851 2 102 2 458 6 290 4 33 2 859 2 701 2 702 2 658 2 758 2 661 2 119 2 869 40 662 2 417 2 817 2 223 2 476 12 720 2 363 6 364 2 366 2 958 4 
141 2 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.NullPointerException (389,577,641,834,1213,1231) 1216 (389,577,641,834,1213,1231) 829 (389,577,641,834,1213,1231) 997 399 26 (170,460) (170,460) 1154 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 489 485 1014 729 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V FAILED junit.framework.AssertionFailedError 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 379 861 1097 1030 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 379 861 1097 1030 
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 379 861 1097 1030 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 379 861 1097 1030 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
jtb.syntaxtree.NodeOptional:present()Z
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
jtb.syntaxtree.AndExpression:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:eltsLT([II)Z
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.SimpleLog:SimpleLog(Z)V
jtb.syntaxtree.NodeSequence:getParent()Ljtb.syntaxtree.Node;
daikon.Quant:memberOf(F[F)Z
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameters;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InstanceOfExpression;)V
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Type;)V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.tools.jtb.PptNameMatcher:typeMatch(Ljava.lang.String;Ljtb.syntaxtree.FormalParameter;)Z
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:pairwiseGT([I[I)Z
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.VarInfoName:repr()Ljava.lang.String;
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
utilMDE.WeakHasherMap:processQueue()V
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Quant:eltsGT([II)Z
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.VarInfo:jml_name()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_149()Z
daikon.Quant:lexGTE([I[I)Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeList:NodeList()V
daikon.ProglangType:baseIsIntegral()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameters;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.JavaCharStream:getBeginColumn()I
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
jtb.JavaParser:jj_3_14()Z
jtb.syntaxtree.CompilationUnit:getParent()Ljtb.syntaxtree.Node;
daikon.Quant:gt(II)Z
daikon.Quant:setDiff([I[I)[I
jtb.JavaParser:jj_3_21()Z
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
jtb.JavaParser:jj_2_4(I)Z
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.syntaxtree.RelationalExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
daikon.tools.jtb.Ast:format(Ljtb.syntaxtree.Node;)Ljava.lang.String;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
utilMDE.ArraysMDE:fn_is_total([I)Z
jtb.syntaxtree.NodeListOptional:present()Z
daikon.Debug:logOn()Z
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
jtb.syntaxtree.ClassOrInterfaceDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | RETURN | 7162 | return null
jtb.syntaxtree.ConditionalExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_48()Z
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.PptName:isEnterPoint()Z
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.inv.unary.UpperBoundCore:calc_range()J
jtb.JavaParser:jj_3R_68()Z
daikon.inv.unary.scalar.NonZero:enabled()Z
utilMDE.ArraysMDE:min([I)I
daikon.ModBitTracker:num_sets()I
jtb.syntaxtree.Type:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3_25()Z
jtb.syntaxtree.PrimaryExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeSequence:elementAt(I)Ljtb.syntaxtree.Node;
daikon.PptSlice1:arity()I
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Literal;)V
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_60()Z
jtb.syntaxtree.NodeToken:numSpecials()I
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ProglangType:isPseudoArray()Z
jtb.syntaxtree.ReferenceType:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_2_18(I)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArgument;)V
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.Quant:eltwiseLT([I)Z
daikon.Quant:eltwiseGT([I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
jtb.JavaParser:jj_3R_106()Z
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.ShiftExpression:accept(Ljtb.visitor.Visitor;)V
daikon.ProglangType:baseIsFloat()Z
daikon.PptSlice0:initInvariantsSeen()V
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:prob_and(DD)D
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljava.lang.String;Ljava.lang.String;Ljava.util.List;)Z
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameter;)V
jtb.JavaCharStream:getBeginLine()I
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
jtb.syntaxtree.Name:accept(Ljtb.visitor.Visitor;)V
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
jtb.visitor.FormatCommand:FormatCommand(II)V
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.ModBitTracker:num_samples()I
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MultiplicativeExpression;)V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
jtb.syntaxtree.NodeSequence:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.tools.jtb.Ast:getClassName(Ljtb.syntaxtree.Node;)Ljava.lang.String;
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
jtb.JavaParser:jj_3R_135()Z
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:java_name()Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceBody:ClassOrInterfaceBody(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
jtb.JavaParser:jj_3R_116()Z
jtb.syntaxtree.ExclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
utilMDE.WeakHasherMap.WeakKey:hashCode()I
jtb.syntaxtree.MultiplicativeExpression:accept(Ljtb.visitor.Visitor;)V
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoAux:hashCode()I
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
jtb.JavaParser:jj_2_5(I)Z
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.Quant:memberOf(J[J)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeBound;)V
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.tools.jtb.Ast.1GetParametersVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.VarInfo:name()Ljava.lang.String;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.inv.Invariant:logOn()Z
daikon.tools.jtb.PptNameMatcher:PptNameMatcher(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_2_15(I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
jtb.visitor.TreeDumper:TreeDumper(Ljava.io.Writer;)V
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
jtb.JavaParser:jj_3R_97()Z
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.MathMDE:mod_positive(II)I
daikon.Quant:eltsGteIndex([I)Z
jtb.JavaParser:jj_2_25(I)Z
daikon.Quant:union([I[I)[I
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.tools.jtb.Ast:create(Ljava.lang.String;Ljava.lang.String;)Ljtb.syntaxtree.Node;
daikon.tools.jtb.Ast:print(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
jtb.JavaParser:jj_3R_88()Z
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
daikon.tools.jtb.Ast:getPackage(Ljtb.syntaxtree.CompilationUnit;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
jtb.JavaParser:jj_2_21(I)Z
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_2_16(I)Z
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_20()Z
daikon.tools.jtb.Ast:getParameters(Ljtb.syntaxtree.MethodDeclaration;)Ljava.util.List;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.ProglangType:isPointerFileRep()Z
utilMDE.MathMDE:pow(II)I
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.Quant:memberOf(D[F)Z
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.Intern:internStrings([Ljava.lang.String;)V
jtb.JavaParser:jj_3_35()Z
utilMDE.ArraysMDE:subarray([JII)[J
daikon.diff.Node:Node(LutilMDE.Pair;)V
jtb.JavaParser:jj_3R_67()Z
utilMDE.UtilMDE:removeWhitespaceBefore(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.config.Configuration:apply(Ljava.lang.String;)V
jtb.JavaParser:jj_3R_55()Z
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.TypeArgument:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Name;)V
daikon.test.TestAst.ClassOrInterfaceDeclarationHarvester:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
jtb.visitor.TreeFormatter:add(Ljtb.visitor.FormatCommand;)V
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
jtb.JavaParser:jj_3_29()Z
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE:bitwiseComplement(I)I
jtb.syntaxtree.Block:accept(Ljtb.visitor.Visitor;)V
daikon.ValueTuple:tuplemodHasModified(I)Z
jtb.syntaxtree.MethodDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
jtb.JavaCharStream:ReadByte()C
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.Statement:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryPrefix;)V
daikon.PptSlice2:arity()I
utilMDE.ArraysMDE:isSubset([D[D)Z
utilMDE.ArraysMDE:fn_identity(I)[I
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.MathMDE:gcd([I)I
daikon.tools.jtb.Ast:quickFixForInternalComment(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.PptSlice1:num_samples()I
utilMDE.MathMDE:negate(I)I
jtb.syntaxtree.FormalParameters:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:memberOf(S[S)Z
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 2297 | = null
daikon.diff.Node:Node()V
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
utilMDE.FuzzyFloat:lt(DD)Z
daikon.PptTopLevel:name()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
jtb.JavaCharStream:backup(I)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalAndExpression;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.PptName:toString()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;)V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Modifiers;)V
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_2_3(I)Z
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.MathMDE:mod_positive(JJ)J
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.tools.jtb.PptNameMatcher:getUngenerifiedType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
daikon.Quant:pairwiseDivides([I[I)Z
daikon.inv.unary.UpperBoundCore:computeProbability()D
jtb.JavaParser:jj_3R_105()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3_13()Z
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Quant:ne(II)Z
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.Quant:eq(DD)Z
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
jtb.JavaParser:jj_3R_115()Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Expression;)V
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:sign(I)I
daikon.ProglangType:isIntegral()Z
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_2_35(I)Z
jtb.JavaParser:jj_3R_70()Z
jtb.JavaParser:jj_3R_125()Z
jtb.JavaParser:jj_3R_76()Z
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:pairwiseNotEqual([I[I)Z
jtb.JavaParser:jj_3R_102()Z
daikon.Quant:lte(II)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Statement;)V
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.ProglangType:isScalar()Z
jtb.syntaxtree.PrimaryPrefix:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_117()Z
daikon.tools.jtb.Ast:create(Ljava.lang.String;[Ljava.lang.Class;[Ljava.lang.Object;Ljava.lang.String;)Ljtb.syntaxtree.Node;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.PptName:PptName(Ljava.lang.String;)V
utilMDE.Assert:assertTrue(Z)V
daikon.Debug:logDetail()Z
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
jtb.JavaParser:jj_3R_69()Z
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
jtb.syntaxtree.ConditionalAndExpression:accept(Ljtb.visitor.Visitor;)V
daikon.ValueTuple:isMissingNonsensical(I)Z
jtb.visitor.TreeFormatter:TreeFormatter(II)V
jtb.syntaxtree.FormalParameter:FormalParameter(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Type;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
jtb.JavaCharStream:readChar()C
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;)V
jtb.visitor.TreeFormatter:space()Ljtb.visitor.FormatCommand;
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljtb.syntaxtree.Node;)Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor.1:visit(Ljtb.syntaxtree.TypeParameter;)V
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.tools.jtb.Ast:getName(Ljtb.syntaxtree.MethodDeclaration;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.RelationalExpression;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ResultType;)V
jtb.syntaxtree.TypeArguments:accept(Ljtb.visitor.Visitor;)V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
jtb.syntaxtree.BlockStatement:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameter;)V
utilMDE.OrderedPairIterator:setnext2()V
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
utilMDE.Intern:internSubsequence([JII)[J
utilMDE.Intern:intern([J)[J
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclarator;)V
daikon.test.FormatTestCase:passes()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalExpression;)V
utilMDE.ArraysMDE:fn_compose([I[I)[I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NullLiteral;)V
daikon.VarInfo:old_var_names(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.Quant:lexGT([I[I)Z
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double; | ASSIGN | 17372 | = null
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_61()Z
jtb.JavaParser:jj_3R_58()Z
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameters;)V
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_1()Z
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
jtb.JavaParser:jj_3R_74()Z
jtb.syntaxtree.InstanceOfExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ProglangType:elementType()Ldaikon.ProglangType;
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.TypeDeclaration:getParent()Ljtb.syntaxtree.Node;
utilMDE.MathMDE:modulus([I)[I
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.Quant:eltsGTE([II)Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.UpperBound:enabled()Z
jtb.JavaParser:jj_scan_token(I)Z
daikon.Quant:pairwiseLTE([I[I)Z
daikon.Quant:lexLTE([I[I)Z
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.tools.jtb.Ast:getParent(Ljava.lang.Class;Ljtb.syntaxtree.Node;)Ljtb.syntaxtree.Node;
utilMDE.ArraysMDE:element_range([I)I
jtb.JavaParser:jj_3R_122()Z
jtb.JavaParser:jj_2_1(I)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.diff.RootNode:RootNode()V
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
jtb.JavaParser:jj_3_27()Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
jtb.syntaxtree.VariableDeclaratorId:VariableDeclaratorId(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PackageDeclaration;)V
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.VariableDeclaratorId:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeDeclaration;)V
jtb.syntaxtree.InclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
jtb.syntaxtree.TypeDeclaration:TypeDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_110()Z
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
jtb.syntaxtree.Modifiers:accept(Ljtb.visitor.Visitor;)V
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.PptName:getFullClassName()Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.inv.Invariant:logDetail()Z
utilMDE.UtilMDE:removeWhitespaceAround(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:concat([I[I)[I
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
jtb.JavaParser:VariableDeclaratorId()Ljtb.syntaxtree.VariableDeclaratorId;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
jtb.JavaParser:jj_3R_103()Z
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
utilMDE.Intern.SequenceAndIndices:hashCode()I
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:JavaParser(Ljava.io.Reader;)V
jtb.JavaParser:jj_3R_180()Z
daikon.Quant:subsetOf([D[D)Z
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.ModBitTracker:split(I)I
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.ProglangType:isArray()Z
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
jtb.JavaParser:jj_3R_51()Z
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
utilMDE.ArraysMDE:isSubarray([I[II)Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.inv.unary.LowerBoundCore:calc_modulus()J
jtb.JavaParser:jj_3R_62()Z
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.Quant:eltsEqualIndex([I)Z
daikon.PptName:getMethodName()Ljava.lang.String;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.OutputFormat:isJavaFamily()Z
jtb.syntaxtree.CompilationUnit:CompilationUnit(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
utilMDE.Intern:intern([I)[I
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBody;)V
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.Quant:lexNotEqual([I[I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ExclusiveOrExpression;)V
utilMDE.LimitedSizeIntSet:size()I
daikon.VarComparabilityImplicit:alwaysComparable()Z
jtb.visitor.TreeDumper:printToken(Ljava.lang.String;)V
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_136()Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.Ppt:Ppt()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PostfixExpression;)V
jtb.JavaParser:jj_3R_75()Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.UnaryExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:subarray([III)[I
daikon.Quant:eltwiseNotEqual([I)Z
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaCharStream:getEndColumn()I
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryExpression;)V
jtb.syntaxtree.TypeBound:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:sameLength([I[I)Z
jtb.syntaxtree.ResultType:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3_10()Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.PptSlice0:arity()I
daikon.Quant:subsetOf([J[J)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.syntaxtree.MethodDeclarator:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:eq(FF)Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Options.OptionInfo:argument_required()Z
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Block;)V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.ValueTuple:size()I
jtb.syntaxtree.EqualityExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
jtb.visitor.TreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfo:new_ppt()V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.ArraysMDE:sorted([I)Z
jtb.JavaParser:jj_3R_120()Z
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:noDuplicates([I)Z
utilMDE.WeakHasherMap:size()I
jtb.syntaxtree.NodeChoice:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_133()Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
jtb.JavaParser:jj_3R_108()Z
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
jtb.JavaParser:jj_3R_73()Z
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
jtb.JavaParser:jj_3R_54()Z
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:copy(Ljava.util.HashMap;)Ljava.util.HashMap;
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
utilMDE.MathMDE:gcd_differences([I)I
daikon.test.InvariantFormatTester:execute()Z
daikon.Quant:subsetOf([F[D)Z
jtb.JavaParser:jj_3R_53()Z
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.inv.ValueSet:ValueSet(I)V
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:subsetOf([B[I)Z
jtb.JavaParser:jj_3R_85()Z
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments;
daikon.Quant:eq(JJ)Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.JavaParser:jj_3_19()Z
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
jtb.JavaParser:jj_3_3()Z
jtb.JavaParser:jj_3R_89()Z
jtb.JavaParser:jj_2_36(I)Z
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
jtb.JavaParser:jj_3_12()Z
jtb.JavaParser:jj_3R_119()Z
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
jtb.JavaParser:jj_3R_123()Z
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
jtb.JavaParser:jj_3_16()Z
jtb.JavaParser:jj_2_12(I)Z
daikon.Quant:isReverse([I[I)Z
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([I[I)I
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.test.TestAst.MethodDeclarationHarvester:visit(Ljtb.syntaxtree.MethodDeclaration;)V
utilMDE.MathMDE:missing_numbers([I)[I
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
jtb.JavaParser:jj_3R_50()Z
jtb.syntaxtree.ClassOrInterfaceBody:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:eltsNotEqual([II)Z
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.Quant:pairwiseSquare([I[I)Z
jtb.syntaxtree.ClassOrInterfaceDeclaration:ClassOrInterfaceDeclaration(Ljtb.syntaxtree.NodeChoice;Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ClassOrInterfaceBody;)V
jtb.JavaParserTokenManager:jjStopAtPos(II)I
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
jtb.JavaParser:jj_3R_118()Z
jtb.JavaParser:jj_3R_98()Z
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.Quant:subsetOf([S[S)Z
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
jtb.syntaxtree.TypeParameter:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3_17()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
jtb.syntaxtree.CompilationUnit:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.ProglangType:dimensions()I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeOptional:accept(Ljtb.visitor.Visitor;)V
jtb.JavaCharStream:FillBuff()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ShiftExpression;)V
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.ModBitTracker:ModBitTracker(I)V
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_49()Z
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
jtb.syntaxtree.PackageDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.VariableDeclaratorId:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.NodeToken;)V | ASSIGN | 4488 | = null
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.Quant:gte(II)Z
utilMDE.ArraysMDE:sum([[I)I
jtb.JavaParser:jj_3R_148()Z
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.NodeChoice:getParent()Ljtb.syntaxtree.Node;
jtb.syntaxtree.Literal:accept(Ljtb.visitor.Visitor;)V
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
jtb.syntaxtree.FormalParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
jtb.JavaParser:jj_3R_109()Z
daikon.Quant:concat([I[I)[I
utilMDE.FuzzyFloat:gt(DD)Z
utilMDE.ArraysMDE:sum([D)D
jtb.JavaParser:jj_3R_163()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
jtb.syntaxtree.TypeArguments:TypeArguments(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeArgument;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.diff.PrintAllVisitor:bufPrintln()V
jtb.syntaxtree.Expression:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AdditiveExpression;)V
utilMDE.MathMDE:gcd(II)I
daikon.Quant:eltwiseLTE([I)Z
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_52()Z
daikon.ProglangType:isFloat()Z
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
utilMDE.UtilMDE:removeWhitespaceAfter(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.ImportDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.ValueTuple:isMissing(I)Z
daikon.Quant:pairwiseLT([I[I)Z
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
utilMDE.OrderedPairIterator:hasNext()Z
daikon.inv.unary.scalar.LowerBound:enabled()Z
jtb.JavaParser:jj_2_10(I)Z
daikon.Quant:eltsLteIndex([I)Z
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:memberOf(I[I)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:subsetOf([D[F)Z
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
jtb.JavaParser:jj_3R_100()Z
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.ArraysMDE:min_max([I)[I
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
jtb.JavaParser:jj_3R_161()Z
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
jtb.syntaxtree.TypeArgument:accept(Ljtb.visitor.Visitor;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.Quant:memberOf(F[D)Z
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.CompilationUnit;)V
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
utilMDE.ArraysMDE:indexOf([II)I
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
jtb.visitor.TreeFormatter:TreeFormatter()V
daikon.inv.Invariants:Invariants()V
daikon.Quant:subsetOf([I[I)Z
jtb.JavaParser:getToken(I)Ljtb.Token;
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.inv.unary.scalar.NonModulus:updateResults()V
jtb.JavaParser:jj_3R_107()Z
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
jtb.JavaParser:jj_3_28()Z
jtb.syntaxtree.ClassOrInterfaceType:accept(Ljtb.visitor.Visitor;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
jtb.JavaParser:jj_3R_47()Z
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
jtb.JavaParser:jj_3R_121()Z
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.Quant:intersection([I[I)[I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
jtb.syntaxtree.NodeSequence:elements()Ljava.util.Enumeration;
utilMDE.Intern:internSubsequence([III)[I
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.TypeDeclaration:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:noDuplicates([D)Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.NodeToken:trimSpecials()V
jtb.JavaParser:jj_3R_126()Z
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeSequence;)V
jtb.JavaParser:jj_3R_63()Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.inv.Invariant:justified()Z
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
jtb.syntaxtree.NullLiteral:accept(Ljtb.visitor.Visitor;)V
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:getParent()Ljtb.syntaxtree.Node;
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfo:simplify_name()Ljava.lang.String;
utilMDE.UtilMDE:splitLines(Ljava.lang.String;)[Ljava.lang.String;
utilMDE.FuzzyFloat:gte(DD)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeOptional;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.ValueTuple:isMissingFlow(I)Z
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:hashCode()I
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltsEqual([II)Z
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.MethodDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_15()Z
daikon.VarInfo:isPointer()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalOrExpression;)V
jtb.JavaParser:jj_3R_134()Z
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:eq(II)Z
jtb.JavaParser:jj_3R_114()Z
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
jtb.syntaxtree.FormalParameter:accept(Ljtb.visitor.Visitor;)V
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ImportDeclaration;)V
utilMDE.WeakIdentityHashMap:indexFor(II)I
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
utilMDE.ArraysMDE:sum([[D)D
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
jtb.JavaParser:jj_3_18()Z
utilMDE.MathMDE:gcd(JJ)J
jtb.JavaParser:jj_2_17(I)Z
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.TypeArguments:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.TypeParameters:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ClassOrInterfaceBody:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.LimitedSizeIntSet:add(I)V
daikon.VarInfo:esc_name(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaCharStream:GetImage()Ljava.lang.String;
jtb.JavaParser:jj_3R_86()Z
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.Quant:lexEqual([I[I)Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_104()Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.diff.Node:children()Ljava.util.Iterator;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
jtb.JavaParser:jj_3R_164()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.BlockStatement;)V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.tools.jtb.SimpleTreeDumper:SimpleTreeDumper(Ljava.io.Writer;)V
jtb.JavaParser:jj_3R_56()Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfo:dbc_name()Ljava.lang.String;
jtb.JavaParser:jj_3R_124()Z
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_ntk()I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
jtb.JavaParser:jj_3R_57()Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.PptName:isCombinedExitPoint()Z
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus; | ASSIGN | 17939 | = null
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
jtb.syntaxtree.AdditiveExpression:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:eltwiseGTE([I)Z
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
jtb.JavaCharStream:getEndLine()I
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AndExpression;)V
jtb.JavaParser:jj_3R_101()Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.EqualityExpression;)V
daikon.Quant:eltsGtIndex([I)Z
daikon.tools.jtb.Ast:removeWhitespace(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.Quant:pairwiseEqual([I[I)Z
jtb.JavaParser:FormalParameter()Ljtb.syntaxtree.FormalParameter;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpression;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArguments;)V
jtb.JavaParser:jj_3R_72()Z
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
utilMDE.ArraysMDE:max([I)I
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.inv.Invariant:getConfidence()D
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
daikon.Quant:subsetOf([F[F)Z
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.Node:add(Ljava.lang.Object;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_81()Z
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:ungenerify(Ljtb.syntaxtree.ClassOrInterfaceType;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InclusiveOrExpression;)V
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptName:getSignature()Ljava.lang.String;
jtb.JavaParser:jj_3_5()Z
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
utilMDE.OrderedPairIterator:setnext1()V
daikon.Quant:lexLT([I[I)Z
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.tools.jtb.SimpleTreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.inv.Invariant:format()Ljava.lang.String;
jtb.JavaParser:jj_3R_87()Z
jtb.Token:newToken(I)Ljtb.Token;
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.Quant:lt(II)Z
utilMDE.ArraysMDE:sum([I)I
jtb.JavaParser:jj_3_22()Z
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.NodeListOptional:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_99()Z
daikon.tools.jtb.PptNameMatcher:extractPptArgs(Ldaikon.PptName;)Ljava.util.List;
jtb.JavaParser:jj_2_13(I)Z
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_137()Z
jtb.visitor.TreeFormatter:space(I)Ljtb.visitor.FormatCommand;
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
daikon.Quant:eltsLtIndex([I)Z
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
daikon.tools.jtb.SimpleTreeDumper:printToken(Ljava.lang.String;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.test.TestAst:checkMatch(Ljava.lang.String;Ljtb.syntaxtree.MethodDeclaration;Ldaikon.tools.jtb.PptNameMatcher;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.Quant:slice([III)[I
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltwiseEqual([I)Z
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.FuzzyFloat:lte(DD)Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
utilMDE.FuzzyFloat:ne(DD)Z
jtb.syntaxtree.ClassOrInterfaceBody:getParent()Ljtb.syntaxtree.Node;
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:baseIsScalar()Z
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.LowerBoundCore:computeConfidence()D
utilMDE.UtilMDE:split(Ljava.lang.String;Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:jj_3R_96()Z
jtb.syntaxtree.PostfixExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.VarInfo:relate_var()V
daikon.inv.Invariant:prob_or(DD)D
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReturnStatement;)V
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
daikon.Quant:setEqual([I[I)Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.Quant:eltsLTE([II)Z
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_2_14(I)Z
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.ModBitTracker:num_vars()I
jtb.JavaCharStream:BeginToken()C
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
jtb.syntaxtree.ConditionalOrExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_80()Z
jtb.visitor.TreeFormatter:placeToken(Ljtb.syntaxtree.NodeToken;II)V
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3_36()Z
jtb.syntaxtree.TypeDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.LowerBoundCore:calc_range()J
jtb.JavaParser:jj_3R_210()Z
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
jtb.JavaParser:jj_3R_162()Z
jtb.JavaParser:jj_3R_77()Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:jj_3_4()Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReferenceType;)V
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ReferenceType;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.NodeToken:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3_30()Z
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.NonZero:is_pointer()Z
utilMDE.MathMDE:pow_fast(II)I
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.inv.Invariant:prob_and(DDD)D
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
jtb.JavaParser:jj_3R_169()Z
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.Type;)V
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.InvMap:InvMap()V
jtb.syntaxtree.NodeListOptional:elements()Ljava.util.Enumeration;
jtb.syntaxtree.ReturnStatement:accept(Ljtb.visitor.Visitor;)V
daikon.inv.Invariant:isWorthPrinting()Z
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.VarInfo:jml_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.FuzzyFloat:eq(DD)Z
utilMDE.Intern:numIntArrays()I
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;II)V
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.Quant:noDups([I)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
961 2 517 2 624 4 1018 2 173 2 795 2 163 2 446 2 1218 2 
926 2 881 2 656 2 82 2 478 6 1122 6 878 2 776 2 366 2 1087 2 193 6 
517 2 221 4 636 6 616 2 580 6 310 2 991 2 254 2 446 2 1001 6 1178 2 365 4 1157 6 
517 6 195 16 638 4 954 2 482 2 483 6 682 2 601 2 1037 8 43 10 765 2 446 6 888 16 297 2 223 30 822 16 618 6 19 10 583 8 185 10 23 10 1128 4 465 12 831 26 141 4 358 10 1102 8 941 2 1108 4 33 8 
179 6 279 4 
816 2 
398 2 3 2 195 2 602 2 43 2 449 2 888 2 223 6 822 2 618 2 19 4 20 2 705 2 23 2 185 2 141 2 465 2 1251 2 831 4 358 2 747 2 33 2 515 2 
435 2 195 8 115 2 822 8 223 14 893 4 43 4 23 4 138 6 185 4 465 5 831 12 358 4 1108 2 1240 6 835 4 888 8 
839 2 949 2 520 2 674 2 1186 4 114 4 197 2 38 4 757 2 403 4 328 2 252 4 845 2 804 10 289 2 533 4 728 4 335 4 380 4 694 2 779 2 94 2 819 62 421 2 1090 4 347 2 177 8 349 2 59 2 619 2 351 2 262 14 1166 6 183 2 897 4 63 2 785 4 865 10 145 4 1224 2 
816 2 1164 2 10 2 326 2 1040 2 507 2 999 2 29 2 669 2 774 2 
1112 2 795 2 409 2 410 2 723 2 487 2 727 2 570 2 344 2 345 2 177 2 95 2 349 2 21 2 897 4 584 2 664 2 362 2 837 2 517 4 911 4 1139 2 119 2 39 2 373 2 601 2 533 2 210 2 290 2 446 4 211 2 692 2 775 2 1005 2 1159 4 1088 2 698 2 854 2 704 2 306 2 61 4 1256 2 1025 2 945 2 
517 4 195 20 404 4 483 4 682 2 1037 6 43 14 848 4 686 2 413 2 648 2 446 4 494 4 1240 6 888 20 822 20 223 38 618 4 893 4 19 6 390 4 23 14 185 14 138 6 141 2 831 34 465 16 358 14 359 6 106 2 835 4 33 14 946 8 
94 2 177 2 1166 2 
130 2 853 2 969 2 1165 2 1167 10 1219 2 1250 22 410 2 1221 2 313 2 770 2 667 2 1058 2 363 2 
633 6 2 2 1113 2 480 5 152 6 1116 2 956 2 154 8 957 2 642 2 643 1 963 2 810 2 167 2 965 2 814 2 17 24 498 2 817 2 173 2 343 2 657 3 501 2 660 2 354 2 504 2 356 2 827 2 24 2 661 1 184 1 662 2 830 24 978 2 979 4 1130 2 27 2 508 2 509 3 1132 2 191 2 30 2 512 2 985 2 517 34 522 2 986 1 198 32 199 1 40 6 46 2 531 1 846 6 1155 3 998 2 688 2 379 2 1004 2 690 3 691 2 536 2 383 2 54 1 539 2 385 2 218 2 219 2 700 2 56 32 1169 2 1171 16 231 3 1016 2 708 1 64 2 66 2 393 1 237 2 1180 2 239 4 1024 2 1027 1 720 2 1189 4 245 12 559 8 561 2 562 1 560 1 880 3 1192 1 724 3 84 2 414 2 886 2 1204 2 90 2 417 2 87 2 1207 2 419 4 733 2 1210 2 892 2 422 16 97 2 898 2 98 2 901 2 267 2 1061 1 749 16 750 2 907 3 909 2 1066 2 594 2 595 16 912 2 436 2 281 2 915 4 921 4 768 2 769 4 445 2 292 8 446 32 1081 2 922 2 610 4 1239 2 132 2 1247 2 135 3 136 1 931 2 305 3 303 2 307 2 1095 2 937 2 1101 1 314 3 470 2 1107 2 1254 3 
1181 2 
517 2 205 2 
517 4 169 2 1226 2 
0 50 1 2 634 6 635 2 4 204 637 6 5 120 6 6 641 2 640 2 8 2 9 2 11 4 649 174 13 2 14 2 651 6 15 14 16 6 652 14 654 6 655 10 18 20 658 2 26 2 665 8 28 2 671 2 673 6 675 4 677 6 42 4 685 2 687 38 48 6 50 2 51 2 52 12 693 2 695 58 696 72 699 26 55 16 57 8 60 4 706 176 62 174 707 4 710 2 68 2 69 54 70 4 718 2 719 2 73 2 721 4 77 2 79 6 725 4 80 6 81 6 726 2 83 2 93 2 731 4 737 4 96 310 99 2 100 4 740 166 742 50 102 6 743 10 103 4 104 4 746 142 748 2 751 2 109 4 110 338 752 2 754 2 755 2 117 22 756 2 758 2 762 26 121 22 122 2 123 6 763 26 124 8 766 26 767 20 126 2 771 4 772 16 128 2 778 2 133 6 782 36 783 2 140 52 139 2 784 100 786 2 143 46 788 4 144 2 789 6 147 2 793 2 794 46 150 24 796 26 151 4 797 12 801 2 802 22 803 2 806 4 158 2 160 2 162 2 165 6 811 188 813 6 812 98 170 2 171 42 818 4 174 100 820 2 821 6 175 16 176 174 178 12 823 4 825 4 182 2 826 2 186 2 829 16 188 120 187 2 832 2 834 4 192 6 838 24 841 6 196 196 843 4 200 4 844 6 201 2 202 4 847 6 849 2 215 16 214 2 216 26 217 6 851 2 220 10 855 4 224 6 857 10 228 2 860 2 863 6 864 6 233 14 234 2 869 4 868 2 873 6 874 4 240 82 244 2 879 2 248 2 249 10 251 18 250 22 883 6 256 22 885 2 257 2 890 2 260 26 261 2 895 2 264 2 899 4 902 24 905 4 906 2 270 24 908 4 910 2 271 4 273 2 277 4 914 2 280 2 282 4 283 2 284 2 917 4 285 2 286 2 918 4 920 2 293 58 294 2 924 2 925 78 296 2 927 4 929 2 300 12 299 2 304 4 933 26 308 10 311 2 312 174 939 10 940 196 942 2 943 2 944 4 316 12 947 10 948 2 951 196 952 2 317 2 953 18 319 4 321 2 960 6 325 2 329 6 331 2 964 4 339 386 966 6 968 6 340 308 341 6 342 6 346 2 970 188 348 6 352 8 973 100 976 2 980 62 984 6 367 192 368 6 371 2 987 12 989 6 990 4 374 156 993 2 994 98 378 6 997 18 1000 4 1002 42 1003 26 381 2 384 6 1007 2 1009 2 386 10 387 4 388 2 389 2 1011 10 1012 14 1013 2 1020 90 392 4 1021 2 394 2 1022 2 1026 2 1028 2 396 2 399 2 1034 48 402 2 406 54 1035 2 1036 6 1038 6 1039 4 1042 2 416 2 418 6 1045 12 1044 60 1046 2 1048 14 423 2 1051 4 1053 2 424 2 426 2 425 2 427 26 428 2 1056 10 430 2 1062 6 433 66 432 6 434 2 1065 2 1067 174 1069 2 1070 6 437 6 1071 2 438 26 1075 6 439 24 1077 6 1078 2 1079 2 445 2 444 4 446 10 1084 6 1083 4 1085 24 450 66 1086 2 452 6 454 2 1089 2 455 4 457 386 458 6 1094 86 459 2 460 2 1098 6 1096 2 461 6 1099 10 462 2 463 2 466 78 1104 14 469 2 1105 4 1106 2 471 6 1109 2 472 6 473 24 475 6 1111 2 476 2 1114 18 477 4 1115 6 481 6 1117 2 1118 2 484 8 486 6 1120 6 488 6 496 4 497 4 499 4 1125 12 505 4 1126 2 1127 2 511 6 1133 4 1134 174 510 2 514 2 1135 2 517 10 518 2 519 4 521 16 1140 2 1141 2 1142 308 1144 2 1145 42 1143 2 1146 2 1147 2 1148 2 1149 10 527 510 1151 2 1152 12 1154 2 532 4 1156 2 534 26 535 4 537 26 538 2 540 286 542 2 1168 2 545 2 546 2 1175 8 549 4 1176 22 1177 6 551 2 550 4 552 4 553 4 554 6 1182 6 1183 2 555 2 556 2 557 2 1188 2 1190 2 1191 42 1194 174 564 2 1196 6 1197 2 1198 2 1200 2 565 174 1201 2 1203 2 567 10 569 2 1205 4 1206 2 573 6 1208 2 1211 44 577 2 1213 2 576 4 575 2 1215 2 1216 338 1217 2 579 2 581 2 585 2 1222 4 586 24 587 2 1225 6 593 2 1227 156 1228 2 598 4 597 2 1231 2 604 2 605 2 1232 2 1235 2 609 2 1237 16 1242 108 1243 6 613 2 1246 2 620 6 623 6 626 38 627 2 628 2 1255 24 630 16 631 100 632 2 
992 2 653 2 429 2 1179 1 
1124 2 992 2 
938 2 992 2 177 2 638 2 887 2 1073 2 440 2 
1184 2 992 2 887 2 
992 2 887 2 916 2 
653 2 773 2 408 2 
992 2 887 2 
981 2 408 2 
992 2 790 2 
653 2 1082 2 408 2 
653 2 876 2 836 2 
528 2 71 2 653 2 
653 2 431 2 32 2 
1138 2 653 2 204 2 
1163 2 408 2 
992 2 639 2 
156 2 836 2 
71 2 866 2 
157 2 431 2 
1138 2 1063 2 
608 2 408 2 
1138 2 263 2 
1076 2 431 2 
71 2 884 2 
836 2 1150 2 
653 2 1082 2 1023 2 408 2 
653 2 1082 2 1023 2 622 2 408 2 
653 2 400 2 408 2 
792 2 653 2 408 2 
1209 2 780 2 65 2 711 2 
852 2 574 2 177 2 440 2 
265 2 852 2 574 2 177 2 1073 2 440 2 
992 2 72 2 177 2 638 2 887 2 440 2 
704 2 1258 2 
177 2 638 2 1158 2 440 2 
47 2 431 2 
1138 2 523 2 
7 2 836 2 
71 2 1187 2 
1138 2 71 2 1123 2 
1138 2 71 2 529 2 
1138 2 71 2 491 2 
1138 2 71 2 53 2 
440 2 1195 6 1236 2 338 6 177 2 1093 2 977 2 1059 2 
146 2 408 2 
891 2 736 2 799 2 353 2 1100 2 1250 6 12 2 663 4 232 2 412 4 666 2 588 2 807 2 744 2 291 2 315 2 730 2 904 2 
653 2 900 2 
898 2 
633 6 152 2 1116 2 955 2 956 2 154 2 643 2 164 4 167 2 965 2 817 2 173 2 975 2 662 2 979 4 1132 2 985 2 517 26 522 2 198 4 40 4 46 2 846 2 688 2 998 2 379 2 383 2 1006 2 385 4 219 2 218 2 700 2 56 6 225 2 1162 2 230 2 64 2 1173 2 393 2 237 2 1180 2 239 2 242 2 1189 4 245 8 84 2 414 2 1204 2 1043 2 419 2 733 2 1210 2 420 4 892 2 422 6 97 2 901 2 1223 2 113 2 118 2 436 6 1229 2 915 4 125 2 769 2 445 2 446 26 1081 2 610 4 612 2 132 2 1247 2 301 2 1107 2 
633 6 152 2 1116 2 955 2 956 2 154 2 643 2 164 4 167 2 965 2 817 2 173 2 662 2 979 4 1132 2 985 2 517 26 522 2 198 4 40 6 46 2 846 2 688 2 998 2 379 2 383 2 385 4 219 2 218 2 700 2 56 6 225 2 703 2 1162 2 230 2 1016 2 64 2 1173 2 66 2 393 2 237 2 1180 2 716 2 239 2 242 2 1189 4 245 8 84 2 414 2 1204 2 419 2 733 2 1210 2 420 4 892 2 422 6 97 2 98 2 901 2 1223 2 113 2 118 2 436 6 1229 2 915 4 125 2 769 2 445 2 446 26 1081 2 610 4 612 2 132 2 1247 2 301 2 934 2 1107 2 
644 2 
397 2 713 2 
131 2 926 2 541 4 370 2 543 2 877 2 558 2 578 2 478 2 1033 2 58 2 683 2 881 2 361 4 1122 2 903 2 86 2 1241 2 
633 4 1029 2 148 2 877 2 558 2 478 6 1033 4 881 4 332 2 159 4 1122 4 84 2 86 2 1204 2 817 2 892 2 656 2 578 2 500 2 1220 2 25 2 662 2 1055 2 361 4 903 2 364 6 108 2 366 2 193 6 517 12 1068 2 111 2 370 2 272 2 600 2 915 2 680 2 683 2 684 2 41 2 375 2 441 4 445 2 607 2 689 2 446 6 923 4 610 2 1241 2 926 4 131 2 132 2 541 4 543 2 298 4 1091 2 58 2 467 2 548 2 1103 4 
633 4 1029 2 148 2 877 2 558 2 478 4 1033 4 881 4 332 2 159 4 1122 6 84 2 86 2 1204 2 817 2 892 2 656 2 578 2 500 2 1220 2 25 2 662 2 1055 2 361 4 903 2 364 6 108 2 193 6 517 12 1068 2 111 2 370 2 272 2 600 2 915 2 680 2 683 2 684 2 41 2 375 2 441 4 445 2 607 2 689 2 446 6 923 4 610 2 1241 2 1087 2 926 4 131 2 132 2 541 4 543 2 298 4 1091 2 58 2 467 2 548 2 1103 4 
633 4 1029 2 148 2 877 2 558 2 478 6 1033 4 881 4 332 2 159 8 1122 6 84 2 86 2 1204 2 817 2 892 2 656 2 578 2 500 2 1220 2 25 2 662 2 1055 2 361 4 903 2 364 6 108 2 193 6 517 12 1068 2 111 2 370 2 272 2 600 2 915 2 680 2 683 2 684 2 41 2 375 2 441 4 445 2 607 2 689 2 446 6 923 4 610 2 1241 2 776 2 926 4 131 2 132 2 541 4 543 2 298 4 1091 2 58 2 467 2 548 2 1103 4 
633 4 1029 2 148 2 877 2 558 2 478 6 1033 4 881 4 332 2 159 8 1122 8 84 2 86 2 1204 2 817 2 892 2 656 2 578 2 500 2 1220 2 25 2 662 2 1055 2 361 4 903 2 364 10 108 2 193 8 517 12 1068 2 111 2 370 2 272 2 600 2 915 2 680 2 683 2 684 2 41 2 375 2 441 4 445 2 607 2 689 2 446 6 923 8 610 2 1241 2 776 2 1087 2 926 4 131 2 132 2 541 4 543 2 298 4 1091 2 58 2 467 2 548 2 1103 4 
633 4 1029 2 148 2 877 2 558 2 478 6 1033 4 881 4 332 2 159 8 1122 6 84 2 86 2 1204 2 817 2 892 2 656 2 578 2 500 2 1220 2 25 2 662 2 1055 2 361 4 903 2 364 10 108 2 193 6 517 12 1068 2 111 2 370 2 272 2 600 2 915 2 680 2 683 2 684 2 41 2 375 2 441 4 445 2 607 2 689 2 446 6 923 8 610 2 1241 2 776 2 926 4 131 2 132 2 541 4 543 2 298 4 1091 2 58 2 467 2 548 2 1103 4 
633 6 955 2 956 2 323 2 958 4 332 4 645 7 962 1 656 4 350 6 659 6 662 2 25 4 979 4 361 4 364 2 370 2 35 2 40 6 680 2 684 2 683 2 41 2 375 2 688 2 996 1 379 2 689 2 697 2 700 2 56 8 58 2 1015 6 1016 2 1017 2 64 2 66 2 1029 2 1033 4 75 1 84 2 414 2 85 2 86 2 419 2 733 2 732 1 420 4 422 6 97 12 108 2 1068 2 111 2 436 6 441 4 125 4 445 2 769 2 443 2 446 24 1081 2 447 2 451 2 129 2 1087 4 131 2 777 7 132 2 134 2 1091 2 1092 6 464 2 467 2 1103 6 468 2 787 1 148 2 149 1 478 4 152 2 1116 2 798 6 154 2 159 2 808 4 1122 8 161 2 492 2 493 2 169 6 817 2 173 2 172 2 500 2 506 2 1131 1 1132 2 1136 6 193 12 517 46 1137 1 522 2 198 2 205 6 846 2 530 6 219 2 541 4 543 2 222 6 225 2 859 2 229 2 230 2 862 2 547 2 548 2 1174 6 237 2 1180 2 1181 6 239 2 877 2 558 2 1189 4 245 4 247 10 253 2 881 4 882 2 1202 6 1204 2 572 2 258 2 1212 2 892 2 578 2 1220 2 901 2 589 2 266 2 590 6 903 2 272 2 275 2 278 8 600 2 915 4 1230 1 603 6 1233 2 607 2 610 4 611 2 1241 2 926 4 1244 2 298 8 309 6 
633 6 148 2 478 8 152 2 955 2 1116 2 798 6 956 2 154 2 323 2 958 4 332 4 159 6 808 4 161 2 1122 8 492 2 493 2 169 6 172 2 173 2 817 2 656 4 500 2 350 6 659 6 25 4 662 2 506 2 979 4 361 4 1132 2 364 2 1136 6 193 12 517 48 35 2 370 2 522 2 198 2 680 2 40 6 683 2 684 2 41 2 205 6 375 2 530 6 846 2 688 2 689 2 379 2 385 2 697 2 541 4 219 2 543 2 700 2 222 6 225 2 56 8 859 2 58 2 229 2 230 2 862 2 1015 6 1017 2 1016 2 547 2 64 2 1174 6 548 2 66 2 1180 2 237 2 1181 6 239 4 1029 2 877 2 558 2 243 2 1189 4 1033 4 245 8 247 10 253 2 881 4 882 2 84 2 1202 6 414 2 85 2 86 2 1204 2 572 2 733 2 419 4 420 4 1212 2 258 2 892 2 422 6 578 2 1220 2 97 12 901 2 266 2 589 2 590 6 903 2 108 2 1068 2 111 2 272 2 275 2 600 2 278 8 436 6 915 4 441 4 603 6 125 4 606 2 1233 2 443 2 769 4 445 2 607 2 1081 2 446 26 447 2 610 4 451 2 611 2 129 2 776 4 1241 2 1244 2 131 2 926 4 132 2 134 2 298 8 1091 2 1092 6 309 6 464 2 467 2 468 2 1103 6 
633 6 148 2 478 8 152 2 955 2 1116 2 798 6 956 2 154 2 323 2 958 4 332 4 159 6 808 4 161 2 1122 8 492 2 493 2 169 6 172 2 173 2 817 2 656 4 500 2 350 6 659 6 25 4 662 2 506 2 979 4 361 4 1132 2 364 6 1136 6 193 12 517 48 35 2 370 2 522 2 198 2 680 2 40 6 683 2 684 2 41 2 205 6 375 2 530 6 846 2 688 2 689 2 379 2 385 2 697 2 541 4 219 2 543 2 700 2 222 6 225 2 56 8 859 2 58 2 229 2 230 2 862 2 1015 6 1017 2 1016 2 547 2 64 2 1174 6 548 2 66 2 1180 2 237 2 1181 6 239 4 1029 2 877 2 558 2 243 2 1189 4 1033 4 245 8 247 10 253 2 881 4 882 2 84 2 1202 6 414 2 85 2 86 2 1204 2 572 2 733 2 419 4 420 4 1212 2 258 2 892 2 422 6 578 2 1220 2 97 12 901 2 266 2 589 2 590 6 903 2 108 2 1068 2 111 2 272 2 275 2 600 2 278 8 436 6 915 4 441 4 603 6 125 4 606 2 1233 2 443 2 769 4 445 2 607 2 1081 2 446 26 447 2 923 4 610 4 451 2 611 2 129 2 776 4 1241 2 1244 2 131 2 926 4 132 2 134 2 298 8 1091 2 1092 6 309 6 464 2 467 2 468 2 1103 6 
633 6 955 4 956 2 323 2 958 4 332 4 656 4 350 12 659 6 662 2 25 4 979 4 361 4 364 6 366 2 370 2 35 2 40 6 680 2 684 2 683 2 41 2 375 2 688 2 379 2 689 2 385 2 697 2 700 2 56 12 58 2 1015 12 1016 2 1017 2 64 2 66 2 1029 2 1033 4 401 6 1031 6 722 2 84 2 414 2 85 2 86 2 419 4 733 2 734 6 420 6 1047 2 422 8 1050 6 97 10 108 2 753 2 1068 2 111 2 116 6 436 8 761 6 441 4 125 4 442 6 445 2 769 4 443 2 446 24 1081 2 447 2 451 2 776 4 129 2 1087 2 131 2 132 2 134 2 1091 2 1092 6 464 2 467 2 1103 6 468 2 148 2 478 10 152 4 1116 2 798 6 800 2 154 4 159 6 808 4 1122 10 161 2 492 2 493 2 169 12 172 2 817 2 173 2 500 2 506 2 1132 2 1136 6 193 16 517 52 522 2 198 4 526 2 205 12 208 2 846 4 530 6 212 2 219 2 541 4 543 2 222 12 225 2 227 6 859 2 229 2 230 2 862 2 547 2 548 2 1174 6 237 2 1180 2 1181 12 239 4 877 2 558 2 243 2 1189 4 245 10 247 8 253 2 881 4 882 2 1202 6 1204 2 572 2 258 2 1212 2 892 2 578 2 1220 2 901 2 266 2 590 6 903 2 272 2 275 2 600 2 278 8 915 4 603 6 606 2 1233 2 607 2 923 4 610 4 611 2 1241 2 926 4 1244 2 298 8 621 6 309 6 936 2 
517 4 1068 2 1029 2 111 2 370 2 272 2 877 2 478 6 680 2 684 2 41 2 375 2 441 2 881 4 159 6 1122 6 607 2 923 4 776 2 1241 2 131 2 926 4 541 2 543 2 298 2 656 2 1091 2 58 2 1220 2 1103 2 361 2 903 2 364 4 108 2 193 4 
633 6 478 6 152 3 1116 2 956 2 159 6 1122 6 498 2 817 2 173 2 656 2 354 2 662 2 979 4 361 2 364 2 193 4 517 28 370 2 522 2 198 3 372 2 40 6 680 2 684 2 41 2 375 2 846 3 688 2 379 2 382 3 541 2 219 2 543 2 700 2 56 8 225 2 58 2 230 2 1016 2 64 2 66 2 237 2 1180 2 715 2 1029 2 877 2 1189 4 247 2 563 2 881 4 84 2 414 2 1204 2 87 2 733 2 735 2 420 4 892 2 422 6 1220 2 898 2 97 4 901 2 589 2 903 2 108 2 107 2 1068 2 111 2 272 2 436 6 915 4 441 2 125 2 445 2 607 2 1081 2 446 24 610 4 776 2 1241 2 926 4 131 2 132 2 298 2 1091 2 467 2 1103 2 
633 4 1029 2 148 2 877 2 558 2 478 6 1033 4 881 4 332 2 159 8 1122 6 84 2 86 2 1204 2 817 2 892 2 656 2 578 2 500 2 1220 2 25 2 662 2 1055 2 361 4 903 2 364 10 108 2 193 6 517 12 1068 2 111 2 370 2 272 2 600 2 915 2 680 2 683 2 684 2 41 2 375 2 441 4 445 2 607 2 689 2 446 6 923 8 610 2 1241 2 776 2 926 4 131 2 132 2 541 4 543 2 298 4 1091 2 58 2 467 2 548 2 1103 4 
633 4 1029 2 148 2 877 2 558 2 478 8 1033 4 881 4 332 2 159 8 1122 6 84 2 86 2 1204 2 817 2 892 2 656 2 578 2 500 2 1220 2 25 2 662 2 361 4 903 2 364 10 108 2 193 8 366 2 516 2 517 12 1068 2 370 2 272 2 274 4 600 2 915 2 680 2 683 2 684 2 41 2 375 2 441 4 206 2 445 2 607 2 689 2 446 6 923 8 610 2 1241 2 776 2 131 2 926 4 132 2 541 4 543 2 298 4 1091 2 58 2 467 2 548 2 1103 4 
1068 2 1029 2 599 2 
1068 2 1029 2 599 2 
633 6 148 2 478 12 956 2 323 2 958 2 324 2 332 2 159 6 808 2 161 2 1122 12 817 2 173 2 656 4 824 2 500 2 25 4 828 4 662 2 979 4 361 2 1132 4 982 2 364 6 672 2 193 16 366 4 517 24 370 2 522 2 37 2 198 2 40 6 1153 2 688 2 379 2 219 2 541 2 700 2 856 2 702 2 56 2 225 2 230 2 1172 2 1016 2 64 2 548 2 66 2 237 2 1180 2 239 4 1029 4 242 4 558 2 1189 4 1033 4 74 2 245 4 247 2 76 2 407 2 881 4 84 2 414 2 86 2 1204 2 92 2 419 4 733 2 892 2 422 2 97 4 901 2 903 2 108 2 1068 6 599 2 436 2 915 4 1074 2 441 2 125 6 769 4 445 2 446 16 1081 2 923 4 610 4 451 2 1241 4 776 4 1087 4 926 4 132 2 617 2 298 4 1091 2 1092 2 932 4 935 2 1103 4 629 2 
517 4 397 2 172 2 702 2 544 2 824 2 1092 2 894 2 247 2 683 2 958 2 327 2 97 2 662 2 1233 2 982 2 446 2 
633 6 148 2 478 12 956 2 323 2 324 2 332 4 159 6 808 2 161 2 1122 12 817 2 173 2 656 4 971 2 824 2 500 2 25 4 828 4 662 2 979 4 361 2 1132 4 982 2 364 6 194 2 193 16 366 4 517 24 370 2 522 2 37 2 198 4 40 6 1153 2 688 2 850 2 379 2 219 2 541 2 700 2 856 2 702 2 56 2 225 2 230 2 1172 2 1016 2 64 2 548 2 66 2 237 2 1180 2 239 4 1029 4 242 4 558 2 1189 4 1033 4 74 2 245 4 76 2 411 2 881 4 566 2 84 2 414 2 86 2 1204 2 92 2 419 4 733 2 892 2 422 2 97 2 901 2 903 2 108 2 1068 6 599 2 600 2 436 2 915 4 1074 2 441 2 125 6 769 4 445 2 446 16 1081 2 923 4 610 4 451 2 1241 4 776 4 1087 4 926 4 132 2 298 4 617 4 1091 2 1092 2 932 4 1103 4 
633 6 148 2 478 12 956 2 1119 2 323 2 958 2 324 2 332 4 159 6 808 2 161 2 1122 12 817 2 173 2 656 4 824 2 500 2 25 4 828 4 662 2 979 4 361 2 1132 4 982 2 364 6 193 16 366 4 517 24 370 2 522 2 37 2 842 2 198 2 40 6 1153 2 377 2 688 2 379 2 219 2 541 2 700 2 856 2 702 2 56 2 225 2 230 2 1172 2 1016 2 64 2 548 2 66 2 237 2 1180 2 239 4 1029 4 242 4 558 2 1189 4 1033 4 74 2 245 4 247 2 76 2 881 4 84 2 414 2 86 2 1204 2 92 2 419 4 733 2 892 2 422 2 97 4 739 2 901 2 903 2 591 2 108 2 1068 6 599 2 600 2 436 2 915 4 1074 2 441 2 125 6 769 4 445 2 446 16 1081 2 923 4 610 4 451 2 1241 4 776 4 1087 4 926 4 132 2 617 2 298 4 1091 2 1092 2 932 4 1103 4 
633 6 950 2 322 2 955 20 959 6 643 2 648 4 334 2 650 4 335 2 336 2 337 2 967 12 22 2 23 2 355 6 662 2 357 2 358 2 979 2 668 2 31 2 33 4 34 2 35 2 988 2 678 8 372 2 679 2 40 4 376 2 43 2 44 2 49 26 688 2 995 2 379 2 382 2 1008 2 56 18 1010 2 1014 2 1016 2 64 2 1019 8 391 6 66 2 393 2 67 3 712 6 715 2 395 2 717 2 1032 2 403 2 405 2 1041 8 84 2 414 2 85 2 729 2 88 2 733 2 420 10 735 2 422 12 1052 4 738 2 97 2 101 2 1057 2 105 2 1064 12 113 2 114 2 118 2 436 12 764 2 125 2 445 2 1080 1 446 22 448 2 132 2 1090 2 456 2 137 2 465 4 1110 2 791 2 152 11 1116 2 154 14 485 2 1121 2 805 2 489 2 166 4 168 4 815 2 173 2 817 2 822 4 180 10 181 2 185 2 831 6 1129 2 506 2 189 2 1132 4 833 2 517 28 195 4 522 2 198 11 203 4 209 2 846 11 213 10 1160 2 219 2 223 8 225 2 858 2 1162 2 226 2 1170 4 1173 2 870 4 871 2 1180 2 237 2 872 2 236 2 241 2 1186 2 1189 2 245 28 563 2 253 2 882 2 255 4 568 2 1204 2 571 2 888 4 889 2 258 2 892 2 259 2 893 4 896 2 582 4 1223 2 268 24 269 2 596 2 276 2 1229 2 915 4 919 4 288 2 1234 2 610 4 611 2 1240 6 612 10 928 2 1245 4 930 2 301 2 302 2 1248 2 1249 26 1257 2 
517 2 950 2 420 2 930 2 422 2 56 2 525 2 198 2 436 2 152 2 405 2 1116 2 357 2 1129 2 846 2 1057 2 67 2 446 2 1110 2 
517 2 950 2 420 2 930 2 422 2 56 2 525 2 198 2 436 2 152 2 405 2 1116 2 357 2 1129 2 846 2 1057 2 67 2 446 2 1110 2 
517 2 950 2 420 2 930 2 422 2 56 2 525 2 198 2 436 2 152 2 405 2 1116 2 357 2 1129 2 846 2 1057 2 67 2 446 2 1110 2 
517 10 195 2 840 2 595 2 479 3 198 3 152 3 1116 2 483 2 1037 4 43 2 1199 3 646 2 333 2 647 3 809 4 446 4 1238 2 89 2 888 2 91 2 615 6 223 5 822 2 1049 4 56 2 972 2 502 2 1171 2 23 2 185 2 831 4 358 2 1129 2 142 2 867 2 1060 4 983 2 670 4 513 4 
517 10 195 2 840 2 595 2 479 2 198 2 152 2 1116 2 483 2 682 2 1037 4 43 2 1199 2 646 2 333 2 647 2 809 4 446 4 1238 2 89 2 888 2 91 2 615 6 223 4 822 2 1049 4 56 2 972 2 502 2 1171 2 23 2 185 2 465 2 831 4 358 2 1129 2 142 2 867 2 1060 4 983 2 670 4 513 4 33 2 
517 10 195 2 840 2 595 2 479 2 198 2 152 2 1116 2 483 2 682 2 1037 4 43 2 1199 2 646 2 333 2 647 2 809 4 446 4 1238 2 89 2 888 2 91 2 615 6 223 4 822 2 1049 4 56 2 972 2 502 2 1171 2 23 2 185 2 465 2 831 4 358 2 1129 2 142 2 867 2 1060 4 983 2 670 4 513 4 33 2 
517 10 195 2 840 2 595 2 479 2 198 2 152 2 1116 2 483 2 682 2 1037 4 43 2 1199 2 646 2 333 2 647 2 809 4 446 4 1238 2 89 2 888 2 91 2 615 6 223 4 822 2 1049 4 56 2 972 2 502 2 1171 2 23 2 185 2 465 2 831 4 358 2 1129 2 142 2 867 2 1060 4 983 2 670 4 513 4 33 2 
517 10 195 2 840 2 595 2 479 2 198 2 152 2 1116 2 483 2 682 4 1037 4 43 2 1199 2 646 2 333 2 647 2 809 4 446 4 1238 2 89 2 888 2 91 2 615 6 223 4 822 2 1049 4 56 2 972 2 502 2 1171 2 23 2 185 2 465 4 831 4 358 2 1129 2 142 2 867 2 1060 4 983 2 670 4 513 4 33 4 
503 2 1008 2 369 2 709 2 781 2 127 2 
741 2 1214 2 490 2 781 2 760 2 759 2 612 2 
517 10 592 2 1185 2 875 2 676 2 913 2 120 2 155 2 1193 2 330 1 207 1 289 1 446 8 415 2 453 2 817 2 1161 2 974 2 1015 2 235 2 745 2 190 2 1253 1 238 2 1224 1 474 2 
517 6 112 2 195 6 318 2 320 2 39 2 483 2 682 2 1037 4 43 6 848 2 413 1 334 2 446 6 295 2 1240 4 888 6 259 2 223 15 822 6 893 2 1052 2 185 6 23 6 584 2 831 12 465 5 358 6 359 4 33 3 946 2 
517 1 614 2 36 2 701 7 524 1 1049 2 153 4 1072 2 246 2 1054 2 78 2 287 2 45 2 1252 2 625 2 809 2 446 1 1060 2 
614 4 36 2 701 6 1049 2 153 4 1072 2 246 2 1054 2 78 4 287 2 45 2 1252 2 625 4 809 2 1060 2 
517 1 614 8 36 2 701 10 524 1 1049 2 153 4 1072 2 246 2 1054 8 78 8 287 2 45 2 1252 6 625 8 809 2 446 1 1060 2 
614 2 36 2 701 2 1049 2 153 2 1072 2 246 2 78 2 287 2 45 2 625 2 809 2 1060 2 
1030 2 495 1 360 2 517 2 681 1 446 2 379 2 861 2 1097 2 
517 2 1030 2 360 2 379 2 446 2 861 2 1097 2 
517 2 1030 2 360 2 379 2 446 2 861 2 1097 2 
517 2 1030 2 360 2 379 2 446 2 861 2 1097 2 
714 2 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V ERROR java.lang.NullPointerException 730 
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V ERROR java.lang.NullPointerException 730 
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V ERROR java.lang.NullPointerException (383,772) (383,772) (383,772) 
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 714 82 607 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 400 758 924 57 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 400 758 924 57 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 400 758 924 57 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 400 758 924 57 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.Ppt:find_var_by_name(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.VarInfo:isPrestate()Z
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.ProglangType:isFloat()Z
jtb.JavaParser:jj_3R_85()Z
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3_16()Z
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.EltOneOf:enabled()Z
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.VarInfo:relate_var()V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eq(II)Z
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.ModBitTracker:split(I)I
daikon.ProglangType:isPointerFileRep()Z
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 2297 | = null
daikon.VarInfo:new_ppt()V
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
utilMDE.ArraysMDE:concat([I[I)[I
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.Quant:eltwiseNotEqual([I)Z
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
utilMDE.WeakHasherMap:size()I
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.VarInfo:apply_subscript(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:gte(II)Z
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
jtb.JavaParser:jj_3_15()Z
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
jtb.JavaParser:jj_3R_50()Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.inv.unary.sequence.EltOneOf:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_49()Z
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:gcd([I)I
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.Quant:eltsLT([II)Z
daikon.diff.InvMap:InvMap()V
daikon.Quant:subsetOf([F[F)Z
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
jtb.Token:newToken(I)Ljtb.Token;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.Quant:subsetOf([I[I)Z
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Assert:assertTrue(Z)V
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.inv.Invariant:logDetail()Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
utilMDE.OrderedPairIterator:hasNext()Z
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
utilMDE.MathMDE:sign(I)I
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.Quantify.Length:esc_name()Ljava.lang.String;
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.inv.unary.sequence.EltOneOf:format_daikon()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.inv.unary.sequence.EltOneOf:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
jtb.JavaCharStream:BeginToken()C
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ProglangType:baseIsScalar()Z
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
jtb.JavaParser:jj_3R_58()Z
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.VarInfo:get_enclosing_var()Ldaikon.VarInfo;
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltsGTE([II)Z
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.MathMDE:modulus([I)[I
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.Quant:slice([III)[I
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Quant:memberOf(F[F)Z
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.Quant:eltsLTE([II)Z
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.Quant:eltwiseGT([I)Z
daikon.Quant:eltsGteIndex([I)Z
utilMDE.Fmt:i(I)Ljava.lang.Integer;
jtb.JavaCharStream:getBeginLine()I
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_163()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.PptSlice1:num_samples()I
daikon.inv.unary.scalar.LowerBound:enabled()Z
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody; | STATEMENT | 24539 | stmt -> ;
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.Quant:eq(DD)Z
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.ModBitTracker:num_samples()I
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.Quant:subsetOf([J[J)Z
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.ProglangType:isPseudoArray()Z
utilMDE.WeakIdentityHashMap:indexFor(II)I
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quantify.IOAQuantification:getClosingExp()Ljava.lang.String;
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.Quant:memberOf(I[I)Z
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:intersection([I[I)[I
jtb.JavaParser:jj_3_1()Z
jtb.JavaCharStream:getEndColumn()I
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.Invariant:isWorthPrinting()Z
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.Quant:eltsGtIndex([I)Z
jtb.JavaParser:jj_3R_48()Z
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.Quant:sameLength([I[I)Z
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.VarInfo:isIOAArray()Z
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:missing_numbers([I)[I
daikon.inv.unary.sequence.EltOneOf:sort_rep()V
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_161()Z
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.Quantify.Length:Length(Ldaikon.VarInfo;I)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:indexOf([I[I)I
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.inv.Invariants:Invariants()V
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaCharStream:ReadByte()C
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.Quant:gt(II)Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
utilMDE.Intern:internSubsequence([JII)[J
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.inv.Invariant:justified()Z
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.inv.unary.sequence.EltNonZero:EltNonZero(Ldaikon.PptSlice;)V
daikon.Quant:eltwiseEqual([I)Z
daikon.Quant:eltsEqual([II)Z
daikon.VarInfo:isDerived()Z
utilMDE.ArraysMDE:sum([I)I
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
jtb.ParseException:ParseException(Ljava.lang.String;)V
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:sorted([I)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.VarInfo:get_lower_bound()Ldaikon.Quantify.Term;
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.Quant:lte(II)Z
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
utilMDE.ArraysMDE:fn_inverse([II)[I
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
utilMDE.MathMDE:gcd_differences([I)I
daikon.inv.unary.sequence.EltNonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.Quantify.IOAQuantification:getFreeVarName(I)Ljava.lang.String;
utilMDE.ArraysMDE:sum([[I)I
daikon.Quantify.IOAQuantification:getMembershipRestriction(I)Ljava.lang.String;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.FuzzyFloat:lte(DD)Z
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
utilMDE.ArraysMDE:max([I)I
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.Ppt:Ppt()V
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.Quant:memberOf(S[S)Z
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.Quantify.Constant:name()Ljava.lang.String;
utilMDE.ArraysMDE:sum([[D)D
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.ValueTuple:isMissing(I)Z
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.VarInfo:esc_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.ValueTuple:isMissingFlow(I)Z
daikon.ProglangType:baseIsIntegral()Z
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.Quant:lexGT([I[I)Z
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.inv.unary.sequence.EltNonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:noDups([I)Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaCharStream:getEndLine()I
daikon.Quantify.ESCQuantification:bld_quant(Ldaikon.VarInfo;Ldaikon.Quantify.Term;)Ljava.lang.String;
daikon.Quant:pairwiseDivides([I[I)Z
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.PptName:isEnterPoint()Z
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.VarInfo:old_var_names(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.Quantify.IOAQuantification:getVarIndexedString(I)Ljava.lang.String;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_162()Z
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
jtb.ParseException:getMessage()Ljava.lang.String;
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.MathMDE:mod_positive(JJ)J
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.Quantify.SimplifyQuantification:get_quantification()Ljava.lang.String;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.inv.unary.sequence.EltNonZero:is_pointer()Z
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.inv.Invariant:prob_is_ge(DD)D
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.Quant:lexNotEqual([I[I)Z
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
utilMDE.ArraysMDE:subarray([III)[I
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_57()Z
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_135()Z
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.Quant:subsetOf([F[D)Z
daikon.Quant:pairwiseGTE([I[I)Z
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String; | ASSIGN | 282074 | = null
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.Quantify.IOAQuantification:IOAQuantification([Ldaikon.VarInfo;)V
daikon.inv.Invariant:prob_and(DD)D
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:pairwiseGT([I[I)Z
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.PptSlice0:initInvariantsSeen()V
daikon.ValueTuple:isMissingNonsensical(I)Z
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
jtb.JavaCharStream:UpdateLineColumn(C)V
jtb.JavaCharStream:FillBuff()V
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.Quant:setDiff([I[I)[I
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.ValueTuple:size()I
daikon.inv.unary.sequence.EltNonZero:format_esc()Ljava.lang.String;
jtb.JavaCharStream:getBeginColumn()I
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.Intern:intern([D)[D
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.Quant:lexLTE([I[I)Z
daikon.Quantify.ESCQuantification:ESCQuantification(Ljava.util.EnumSet;[Ldaikon.VarInfo;)V
jtb.JavaParser:jj_2_16(I)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.Quantify.SimplifyQuantification:get_arr_vars_indexed(I)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.Debug:logDetail()Z
daikon.Quantify:get_flags(Z)Ljava.util.EnumSet;
daikon.inv.unary.scalar.UpperBound:enabled()Z
utilMDE.MathMDE:pow(II)I
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.Quantify.Length:simplify_name()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:simplify_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.EltNonZero:format_ioa()Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
utilMDE.ArraysMDE:indexOf([II)I
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
daikon.Quant:eltsEqualIndex([I)Z
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfo:get_upper_bound()Ldaikon.Quantify.Term;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_52()Z
daikon.ModBitTracker:num_sets()I
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
daikon.VarInfo:jml_name(Ljava.lang.String;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.Quant:ne(II)Z
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.ProglangType:dimensions()I
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_54()Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.Quant:lt(II)Z
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:eltwiseGTE([I)Z
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
utilMDE.FuzzyFloat:gte(DD)Z
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.Debug:logOn()Z
utilMDE.FuzzyFloat:eq(DD)Z
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:lexLT([I[I)Z
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
jtb.JavaCharStream:backup(I)V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.Quantify.Constant:Constant(I)V
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.ProglangType:base()Ljava.lang.String;
daikon.Quant:lexEqual([I[I)Z
jtb.JavaParserTokenManager:jjStopAtPos(II)I
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
daikon.inv.Invariant:prob_or(DD)D
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.VarInfo:get_all_simple_names()Ljava.util.List;
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.Quant:memberOf(J[J)Z
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.VarInfo:isPointer()Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoAux:hashCode()I
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:subsetOf([D[D)Z
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.Positive:enabled()Z
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_2_13(I)Z
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.Quant:eltsNotEqual([II)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.inv.filter.ObviousFilter:ObviousFilter()V
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.Quantify.FreeVar:simplify_name()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
jtb.JavaParser:jj_2_14(I)Z
daikon.VarInfo:get_base_array()Ldaikon.VarInfo;
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
utilMDE.MathMDE:negate(I)I
utilMDE.ArraysMDE:subarray([JII)[J
daikon.inv.unary.LowerBoundCore:computeConfidence()D
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.Quantify.FreeVar:name()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Invariant:prob_and(DDD)D
daikon.inv.unary.sequence.EltNonZero:get_proto()Ldaikon.inv.Invariant;
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.inv.unary.sequence.EltNonZero:enabled()Z
daikon.Quant:subsetOf([D[F)Z
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.Quantify:quantify([Ldaikon.VarInfo;)[Ldaikon.Quantify.QuantifyReturn;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.Quantify.Term:ioa_name()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
utilMDE.ArraysMDE:element_range([I)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.VarInfo:name()Ljava.lang.String;
utilMDE.LimitedSizeIntSet:add(I)V
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
utilMDE.ArraysMDE:min([I)I
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.test.InvariantFormatTester:execute()Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant:logOn()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
jtb.JavaParser:generateParseException()Ljtb.ParseException;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.FuzzyFloat:gt(DD)Z
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.VarInfo:domainTypeIOA()Ljava.lang.String;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.inv.unary.sequence.EltOneOf:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.inv.ValueSet:ValueSet(I)V
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.ModBitTracker:ModBitTracker(I)V
daikon.Quant:subsetOf([B[I)Z
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.JavaParser:jj_3R_55()Z
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat:lt(DD)Z
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.Quant:pairwiseSquare([I[I)Z
daikon.VarInfoName:hashCode()I
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
utilMDE.Intern:internSubsequence([III)[I
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.Quant:concat([I[I)[I
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:eltsLteIndex([I)Z
utilMDE.ArraysMDE:min_max([I)[I
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.ProglangType:isIntegral()Z
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
utilMDE.OrderedPairIterator:setnext2()V
daikon.Quant:pairwiseEqual([I[I)Z
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:get_array_var()Ldaikon.VarInfo;
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.inv.unary.scalar.Modulus:enabled()Z
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:format_daikon()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:union([I[I)[I
daikon.ProglangType:isArray()Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:isSubarray([I[II)Z
jtb.JavaCharStream:GetImage()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_51()Z
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltOneOf:runValue([JIZ)Ldaikon.inv.InvariantStatus; | STATEMENT | 18398 | stmt -> ;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
daikon.Quant:subsetOf([S[S)Z
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
jtb.JavaParser:jj_3_14()Z
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.VarInfo:simplify_quantify(Ljava.util.EnumSet;[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.Quantify.ESCQuantification:get_arr_vars_indexed(I)Ljava.lang.String;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.FormatTestCase:passes()Z
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.ArraysMDE:sum([D)D
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quantify.ESCQuantification:get_quantification()Ljava.lang.String;
jtb.JavaParser:jj_3R_47()Z
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.ProglangType:isScalar()Z
daikon.Quant:memberOf(D[F)Z
daikon.test.TestQuant:removeAdjacentDups([I)[I | ASSIGN | 816 | = null
daikon.diff.RootNode:RootNode()V
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.Quant:eltsGT([II)Z
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
utilMDE.Intern:intern([J)[J
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quantify.IOAQuantification:getQuantifierExp()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.ProglangType:baseIsFloat()Z
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.Quant:eltwiseLTE([I)Z
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.Quantify.Term:simplify_name()Ljava.lang.String;
daikon.Quantify.Term:esc_name()Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.Quantify.QuantifyReturn:QuantifyReturn(Ldaikon.VarInfo;)V
utilMDE.Options.OptionInfo:argument_required()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
utilMDE.LimitedSizeIntSet:size()I
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.VarInfo:get_base_array_hashcode()Ldaikon.VarInfo;
daikon.Quant:pairwiseLT([I[I)Z
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.PptName:isCombinedExitPoint()Z
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_134()Z
daikon.Quant:eq(FF)Z
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptSlice1:arity()I
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.Quant:eltsLtIndex([I)Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
jtb.JavaCharStream:readChar()C
daikon.Quant:memberOf(F[D)Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern:numIntArrays()I
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.WeakHasherMap:processQueue()V
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
utilMDE.MathMDE:gcd(JJ)J
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_133()Z
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.inv.unary.sequence.EltOneOf:subarray_rep()Ljava.lang.String;
utilMDE.ArraysMDE:isSubset([D[D)Z
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.OrderedPairIterator:setnext1()V
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Quant:isReverse([I[I)Z
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.PptSlice2:arity()I
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.Invariant:getConfidence()D
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.Quant:lexGTE([I[I)Z
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
jtb.JavaParser:jj_ntk()I
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.PptSlice0:arity()I
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
jtb.JavaParser:jj_scan_token(I)Z
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
jtb.JavaParser:jj_3_13()Z
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.Quantify.Term:name_with_offset(Ljava.lang.String;I)Ljava.lang.String;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.diff.Node:Node()V
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_2_1(I)Z
daikon.Quant:pairwiseLTE([I[I)Z
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.inv.unary.UpperBoundCore:computeConfidence()D
jtb.JavaParserTokenManager:MoreLexicalActions()V
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.EltNonZero:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.Quant:eltsNotEqualIndex([I)Z
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.inv.unary.sequence.EltLowerBound:format_simplify()Ljava.lang.String;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
jtb.JavaParser:jj_3R_69()Z
utilMDE.MathMDE:gcd(II)I
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.inv.unary.sequence.EltOneOf:EltOneOf(Ldaikon.PptSlice;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.MathMDE:mod_positive(II)I
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.inv.OutputFormat:isJavaFamily()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.Ppt:indexOf(Ljava.lang.String;)I
daikon.Quant:eq(JJ)Z
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.VarInfo:is_direct_non_slice_array()Z
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
daikon.Quantify.SimplifyQuantification:SimplifyQuantification(Ljava.util.EnumSet;[Ldaikon.VarInfo;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([ZZ)I
jtb.JavaParser:jj_2_15(I)Z
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
utilMDE.MathMDE:pow_fast(II)I
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_56()Z
daikon.Quant:setEqual([I[I)Z
daikon.Quantify.SimplifyQuantification:get_closer()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.inv.unary.sequence.EltOneOf:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.diff.Node:children()Ljava.util.Iterator;
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
utilMDE.Intern:intern([I)[I
daikon.Quantify.IOAQuantification:getFreeVar(I)Ldaikon.Quantify.Term;
jtb.JavaParser:jj_3R_53()Z
daikon.VarComparabilityImplicit:alwaysComparable()Z
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.ModBitTracker:num_vars()I
utilMDE.FuzzyFloat:ne(DD)Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.Quant:eltwiseLT([I)Z
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
619 2 63 2 109 2 770 2 915 2 624 2 462 2 597 2 757 4 
669 6 202 2 691 6 790 2 188 2 370 2 845 2 361 2 117 2 822 6 914 2 
59 2 815 6 109 2 915 2 904 2 52 6 860 6 388 2 195 6 701 4 136 2 163 4 686 2 
967 8 929 8 693 2 662 16 220 10 464 10 573 2 497 16 470 4 394 2 429 29 913 8 738 6 977 6 801 10 255 2 544 16 109 6 14 2 915 6 233 4 781 10 671 4 261 2 647 2 289 8 373 4 617 10 555 12 151 26 
474 6 247 4 
543 2 
181 2 565 2 355 2 301 2 693 2 818 2 246 2 820 2 770 2 434 2 443 4 507 2 311 2 263 2 952 2 515 2 92 2 718 2 594 2 960 2 655 4 99 2 102 2 966 2 657 2 153 2 271 2 602 2 104 2 908 2 606 2 278 2 279 4 109 4 915 4 288 4 676 2 55 2 810 2 292 2 925 2 296 2 242 2 418 2 
458 2 457 2 967 18 380 4 1 2 220 16 662 32 464 16 497 32 767 2 38 6 394 2 429 54 913 6 738 4 739 2 977 4 439 6 801 16 544 32 109 4 915 4 205 4 228 8 233 2 888 6 781 6 262 2 81 6 585 4 617 16 412 4 679 6 652 4 555 22 719 4 177 4 321 6 151 48 
657 2 535 2 201 2 
299 2 243 2 489 22 401 2 905 2 285 2 548 2 986 10 263 2 805 2 616 2 479 2 133 2 641 2 
967 2 61 2 220 2 662 2 464 2 497 2 390 2 107 2 795 2 429 6 735 2 225 2 977 2 801 2 441 2 544 2 233 2 781 4 551 2 617 2 555 2 788 2 151 4 
801 4 544 8 380 4 220 4 662 8 888 6 464 4 359 2 617 4 497 8 470 2 38 6 429 16 555 4 719 4 881 2 151 12 
657 8 526 2 931 4 695 2 158 62 131 2 572 2 666 2 938 4 303 2 222 2 535 6 910 10 499 4 162 2 433 2 201 2 138 2 229 2 258 10 234 4 858 4 509 2 919 14 920 2 989 4 922 4 783 4 115 2 648 4 290 4 952 2 834 2 86 2 956 2 119 4 120 2 594 4 215 2 655 4 
600 2 34 2 224 2 280 2 543 2 368 2 951 2 516 2 521 2 755 2 
488 2 871 1 244 2 629 2 129 1 130 2 491 2 632 2 3 2 764 4 635 1 248 4 638 2 134 2 135 16 10 1 250 2 884 2 13 2 776 2 887 2 777 3 644 4 16 2 782 2 510 4 18 2 143 2 144 1 145 2 512 4 651 3 523 2 901 1 659 16 906 2 31 2 385 2 33 2 530 5 667 3 36 2 793 2 392 2 39 2 797 3 539 2 798 2 398 1 282 2 800 2 46 2 400 2 915 34 169 6 404 2 287 8 547 2 407 3 172 2 54 8 174 3 677 2 553 3 294 1 556 8 683 2 414 3 689 16 298 2 300 2 690 2 62 2 63 2 816 2 187 2 697 2 67 2 189 1 934 2 936 24 304 6 199 2 824 2 826 3 940 2 941 2 942 2 828 2 438 2 578 2 73 2 830 2 449 2 79 2 954 3 716 2 715 24 91 1 317 1 958 2 721 4 592 3 593 2 836 2 596 12 963 2 598 2 217 2 456 2 965 2 599 2 218 4 461 2 723 2 324 32 326 2 603 2 842 3 847 2 728 2 331 2 852 2 608 1 609 2 473 1 110 2 109 32 339 2 338 32 232 2 342 6 988 2 863 2 348 1 478 2 235 2 621 2 750 4 352 2 869 2 627 2 240 1 753 1 241 6 995 2 485 16 
915 2 367 2 
580 2 915 4 387 2 
518 2 
353 2 759 2 357 2 490 4 2 2 765 2 633 2 875 2 132 32 878 2 496 32 8 2 12 2 253 106 506 14 139 2 778 2 259 22 140 2 891 2 374 2 266 32 22 4 24 40 375 2 785 2 519 22 787 2 377 2 899 2 379 2 661 2 791 106 532 10 274 2 161 2 909 4 396 106 41 12 397 2 49 2 545 2 53 2 550 12 173 32 672 2 675 2 674 18 175 2 410 32 812 2 681 8 557 2 180 2 419 32 559 4 563 18 185 2 694 18 422 2 569 2 817 8 696 2 571 4 425 4 935 2 699 4 698 2 821 12 196 4 70 2 939 10 575 10 827 6 705 2 309 12 442 2 948 2 947 32 208 32 207 2 76 2 450 2 84 2 953 2 587 8 315 2 214 2 595 4 98 32 964 2 219 22 968 2 460 2 725 2 466 2 604 32 843 12 468 2 334 32 976 2 979 2 981 2 613 22 859 38 614 2 347 18 864 2 349 8 994 32 237 2 483 2 351 2 121 16 626 18 996 2 997 2 
837 1 37 2 123 2 216 2 
37 2 898 2 
657 2 730 2 37 2 203 2 206 2 522 2 373 2 
37 2 203 2 969 2 
37 2 203 2 101 2 
832 2 455 2 216 2 
37 2 203 2 
269 2 455 2 
562 2 37 2 
670 2 455 2 216 2 
762 2 216 2 68 2 
256 2 879 2 216 2 
389 2 286 2 216 2 
382 2 471 2 216 2 
268 2 455 2 
37 2 56 2 
992 2 68 2 
256 2 746 2 
286 2 170 2 
476 2 471 2 
446 2 455 2 
471 2 171 2 
286 2 213 2 
256 2 654 2 
789 2 68 2 
505 2 670 2 455 2 216 2 
505 2 670 2 455 2 371 2 216 2 
455 2 216 2 336 2 
643 2 455 2 216 2 
227 2 549 2 72 2 487 2 
489 6 182 4 381 2 779 2 630 2 546 2 527 2 584 2 114 2 192 4 792 2 729 2 713 2 307 2 703 2 95 2 166 2 928 2 
216 2 900 2 
649 2 657 2 50 2 522 2 
649 2 657 2 730 2 50 2 522 2 688 2 
657 2 402 2 37 2 203 2 522 2 373 2 
153 2 330 2 
657 2 164 2 522 2 373 2 
733 2 286 2 
471 2 160 2 
93 2 68 2 
256 2 168 2 
256 2 471 2 492 2 
256 2 471 2 423 2 
256 2 471 2 327 2 
256 2 471 2 841 2 
657 2 932 6 383 4 772 2 668 2 344 2 870 2 522 2 
498 2 455 2 
39 2 
488 2 629 2 632 2 130 2 764 2 248 4 638 2 10 2 884 2 644 4 17 2 510 4 18 2 145 2 512 2 23 4 26 2 786 2 659 6 31 2 154 2 385 2 33 2 391 2 392 2 796 2 398 2 282 2 800 2 46 2 400 2 48 2 169 4 915 26 547 2 921 2 556 2 62 2 63 2 692 2 930 2 934 2 304 6 305 2 200 2 940 2 942 2 438 2 944 2 709 2 449 2 716 4 958 2 721 2 593 2 596 8 217 2 218 4 965 2 324 6 847 2 728 6 852 2 109 26 982 2 338 4 342 2 990 2 991 4 235 2 621 2 869 2 627 2 241 2 
488 2 629 2 632 2 130 2 764 2 248 4 638 2 10 2 884 2 644 4 17 2 510 4 18 2 145 2 512 2 23 4 26 2 786 2 523 2 656 2 659 6 31 2 385 2 33 2 391 2 392 2 796 2 398 2 282 2 800 2 46 2 400 2 48 2 169 6 915 26 547 2 921 2 556 2 62 2 63 2 692 2 934 2 304 6 305 2 200 2 940 2 942 2 438 2 944 2 709 2 449 2 716 4 958 2 721 2 593 2 596 8 961 2 217 2 218 4 965 2 324 6 847 2 728 6 333 2 852 2 109 26 338 4 342 2 988 2 990 2 991 4 478 2 235 2 621 2 869 2 627 2 241 2 
528 2 
732 2 325 2 
126 2 691 6 629 2 65 2 188 2 4 2 874 4 876 2 766 2 302 2 937 2 193 2 198 10 304 4 248 2 362 2 822 6 769 2 882 2 883 2 884 2 707 2 75 2 642 4 370 2 892 2 511 8 145 2 87 2 94 2 593 2 722 2 150 2 100 2 217 2 218 2 529 2 32 2 533 2 328 2 469 2 847 2 731 4 851 2 974 2 975 4 914 4 475 2 800 2 669 6 109 6 915 12 916 4 340 2 615 2 117 4 622 4 865 8 238 2 926 2 
126 2 691 8 629 2 65 2 188 2 4 2 874 4 493 2 876 2 766 2 302 2 937 2 193 2 248 2 198 10 304 4 362 2 822 6 882 2 883 2 884 2 707 2 75 2 642 4 370 2 892 2 511 8 145 2 87 2 94 2 593 2 722 2 150 2 100 2 217 2 218 2 790 2 529 2 32 2 533 2 221 2 328 2 469 2 847 2 731 4 851 2 974 2 975 4 914 4 475 2 800 2 669 8 109 6 983 4 915 12 916 4 615 2 117 4 622 4 865 8 238 2 926 2 
707 2 669 2 75 2 874 4 615 2 766 2 302 2 193 2 469 2 117 2 731 4 822 2 238 2 851 2 94 2 975 2 722 2 914 2 
126 2 691 6 629 2 65 2 188 2 4 2 874 4 876 2 766 2 302 2 937 2 193 2 198 6 304 4 248 2 362 2 822 4 769 2 882 2 883 2 884 2 707 2 75 2 642 4 892 2 511 4 145 2 87 2 94 2 593 2 722 2 150 2 100 2 217 2 218 2 790 2 529 2 32 2 533 2 328 2 469 2 847 2 731 4 851 2 974 2 975 4 914 4 475 2 800 2 669 6 109 6 915 12 916 4 340 2 615 2 117 4 622 4 865 4 238 2 926 2 
126 2 691 6 629 2 65 2 188 2 4 2 874 4 876 2 766 2 302 2 937 2 193 2 198 6 304 4 248 2 362 2 822 6 769 2 882 2 883 2 884 2 707 2 75 2 202 2 642 4 892 2 511 4 145 2 87 2 94 2 593 2 722 2 150 2 100 2 217 2 218 2 529 2 32 2 533 2 328 2 469 2 847 2 731 4 851 2 974 2 975 4 914 4 475 2 800 2 669 4 109 6 915 12 916 4 340 2 615 2 117 4 622 4 865 4 238 2 926 2 
126 2 691 6 629 2 65 2 188 2 4 2 874 4 876 2 766 2 302 2 937 2 193 2 198 6 304 4 248 2 362 2 822 6 769 2 882 2 883 2 884 2 707 2 75 2 642 4 370 2 892 2 511 4 145 2 87 2 94 2 593 2 722 2 150 2 100 2 217 2 218 2 529 2 32 2 533 2 328 2 469 2 847 2 731 4 851 2 974 2 975 4 914 4 475 2 800 2 669 6 109 6 915 12 916 4 340 2 615 2 117 4 622 4 865 8 238 2 926 2 
126 2 691 8 629 2 65 2 188 2 4 2 874 4 876 2 766 2 302 2 937 2 193 2 248 2 198 10 304 4 362 2 822 8 769 2 882 2 883 2 884 2 707 2 75 2 202 2 642 4 370 2 892 2 511 8 145 2 87 2 94 2 593 2 722 2 150 2 100 2 217 2 218 2 529 2 32 2 533 2 328 2 469 2 847 2 731 4 851 2 974 2 975 4 914 4 475 2 800 2 669 6 109 6 915 12 916 4 340 2 615 2 117 4 622 4 865 8 238 2 926 2 
126 2 691 6 629 2 65 2 188 2 4 2 874 4 876 2 766 2 302 2 937 2 193 2 198 10 304 4 248 2 362 2 822 6 769 2 882 2 883 2 884 2 707 2 75 2 642 4 370 2 892 2 511 8 145 2 87 2 94 2 593 2 722 2 150 2 100 2 217 2 218 2 529 2 32 2 533 2 328 2 469 2 847 2 731 4 851 2 974 2 975 4 914 4 475 2 800 2 669 6 109 6 915 12 916 4 340 2 615 2 117 4 622 4 865 8 238 2 926 2 
488 12 4 2 764 2 766 2 248 4 7 2 780 2 260 2 510 4 512 2 265 4 518 6 26 2 786 4 523 2 525 7 31 2 529 2 33 2 32 4 533 2 796 2 537 2 541 1 800 2 282 2 46 2 802 6 547 2 809 6 556 2 560 2 564 1 62 2 63 2 65 2 566 2 568 2 302 2 304 6 822 8 574 6 306 2 71 1 576 2 75 2 313 2 87 4 590 2 94 2 593 2 320 6 596 4 100 2 838 2 601 1 839 6 324 8 840 1 105 2 328 2 847 2 849 2 851 2 852 2 853 2 108 2 109 24 612 10 340 2 338 2 112 2 342 2 862 1 615 2 117 4 622 4 865 2 350 2 867 6 627 2 628 1 126 2 629 2 632 2 874 4 876 2 362 2 882 2 883 2 367 6 884 2 642 8 644 4 645 6 892 2 145 2 895 6 650 7 150 2 149 2 897 6 903 2 659 6 384 1 664 2 387 6 391 2 914 4 165 4 400 2 669 4 169 6 915 46 916 6 413 6 178 6 926 2 179 2 417 6 691 12 420 2 188 4 191 1 193 2 937 2 198 2 430 2 940 2 942 2 436 2 707 2 202 4 449 2 209 2 210 2 721 2 722 2 217 2 218 4 965 2 726 2 728 6 469 2 731 4 734 2 736 2 974 2 975 4 475 2 743 6 991 4 478 2 747 2 235 2 238 2 484 2 752 8 241 2 
488 12 126 2 629 2 632 2 764 4 4 2 874 4 876 2 766 2 7 2 248 4 362 2 882 2 883 2 367 6 884 2 642 8 644 4 645 6 780 2 260 2 370 4 510 4 892 2 895 6 145 2 265 4 512 4 518 6 26 2 786 4 897 6 149 2 150 2 523 2 903 2 658 2 659 6 31 2 664 2 529 2 387 6 32 4 33 2 533 2 391 2 796 2 537 2 165 4 914 4 46 2 282 2 800 2 669 8 400 2 916 6 915 48 169 6 802 6 547 2 809 6 413 6 178 6 556 2 926 2 179 2 417 6 560 2 63 2 62 2 420 2 691 12 568 2 566 2 65 2 188 4 302 2 937 2 193 2 198 2 304 6 574 6 822 8 306 2 430 2 576 2 940 2 942 2 436 2 707 2 75 2 449 2 313 2 209 2 210 2 87 4 716 2 590 2 94 2 721 4 320 6 593 2 596 8 722 2 100 2 838 2 217 2 965 2 218 4 839 6 324 8 105 2 328 2 726 2 469 2 847 2 728 6 731 4 849 2 734 2 852 2 851 2 736 2 974 2 975 4 853 2 475 2 108 2 109 26 741 2 612 10 338 2 340 2 112 2 743 6 342 2 615 2 991 4 747 2 478 2 117 4 235 2 622 4 350 2 865 6 867 6 238 2 484 2 752 8 627 2 241 2 
488 12 126 2 629 2 632 2 764 4 4 2 874 4 876 2 766 2 7 2 248 4 362 2 882 2 883 2 367 6 884 2 642 8 644 4 645 6 780 2 260 2 370 4 510 4 511 4 892 2 895 6 145 2 265 4 512 4 518 6 26 2 786 4 897 6 149 2 150 2 523 2 903 2 658 2 659 6 31 2 664 2 529 2 387 6 32 4 33 2 533 2 391 2 796 2 537 2 165 4 914 4 46 2 282 2 800 2 669 8 400 2 916 6 915 48 169 6 802 6 547 2 809 6 413 6 178 6 556 2 926 2 179 2 417 6 560 2 63 2 62 2 420 2 691 12 568 2 566 2 65 2 188 4 302 2 937 2 193 2 198 6 304 6 574 6 822 8 306 2 430 2 576 2 940 2 942 2 436 2 707 2 75 2 449 2 313 2 209 2 210 2 87 4 716 2 590 2 94 2 721 4 320 6 593 2 596 8 722 2 100 2 838 2 217 2 965 2 218 4 839 6 324 8 105 2 328 2 726 2 469 2 728 6 847 2 731 4 849 2 734 2 851 2 852 2 736 2 974 2 975 4 853 2 475 2 108 2 109 26 741 2 612 10 338 2 340 2 112 2 743 6 342 2 615 2 991 4 747 2 478 2 235 2 117 4 622 4 350 2 865 6 867 6 238 2 484 2 752 8 627 2 241 2 
488 10 4 2 764 4 766 2 248 4 7 2 780 2 260 2 510 4 511 4 512 4 265 4 518 12 26 2 786 4 523 2 790 2 31 2 529 2 33 2 32 4 533 2 796 4 537 2 538 2 799 2 800 2 282 2 46 2 802 6 547 2 809 6 556 4 560 2 62 2 63 2 65 2 566 2 568 2 302 2 304 6 822 10 574 6 306 2 576 2 75 2 313 2 80 6 85 2 835 6 87 4 590 2 94 2 593 2 320 6 596 10 100 2 838 2 839 6 324 12 105 2 328 2 605 6 847 2 849 2 852 2 851 2 853 2 108 2 109 24 612 8 340 2 338 4 112 2 341 6 342 4 345 6 615 2 117 4 622 4 865 6 867 12 868 2 627 2 126 2 629 2 632 2 874 4 876 2 362 2 363 6 882 2 883 2 367 12 884 2 642 8 644 4 645 12 370 4 890 6 142 2 892 2 145 2 895 6 150 2 149 2 897 6 903 2 658 2 659 8 664 2 387 12 391 2 914 4 165 4 400 2 669 10 169 6 915 52 916 6 413 6 178 12 926 2 179 2 417 6 691 16 420 2 421 2 188 4 193 2 937 2 198 6 430 2 940 2 432 2 942 2 436 2 707 2 202 2 449 2 209 2 210 2 716 2 212 6 721 4 722 2 217 2 218 4 965 2 726 2 728 8 469 2 731 4 734 2 736 2 974 2 975 4 475 2 741 2 984 6 743 6 991 6 478 2 747 2 235 2 236 2 238 2 484 2 752 8 241 4 
126 2 691 4 65 2 188 2 4 2 874 2 876 2 766 2 193 2 198 4 731 2 822 6 851 2 882 2 974 2 883 2 914 4 707 2 669 6 642 2 916 2 915 4 340 2 370 2 511 4 892 2 117 4 622 2 865 6 238 2 94 2 926 2 150 2 722 2 100 2 
488 4 126 2 629 2 760 2 632 2 4 2 874 2 876 2 766 2 248 4 882 2 883 2 884 2 642 2 644 4 370 2 510 4 892 2 145 2 21 3 26 2 786 2 523 2 150 2 659 6 31 2 529 2 33 2 391 2 39 2 914 4 282 2 800 2 46 2 669 6 400 2 47 2 916 2 915 28 169 6 547 2 926 2 62 2 63 2 691 4 65 2 188 2 193 2 304 6 198 2 822 6 940 2 74 2 707 2 447 2 449 2 949 2 94 2 593 2 722 2 100 2 217 2 218 4 599 2 965 2 723 2 324 8 847 2 728 6 731 2 851 2 852 2 974 2 110 2 109 24 612 2 340 2 338 3 342 3 991 4 478 2 117 4 235 2 622 2 350 2 865 6 238 2 627 2 241 3 
4 2 883 2 116 2 
4 2 883 2 116 2 
488 4 0 2 629 2 632 2 764 4 4 4 874 2 634 4 248 4 362 2 768 2 500 4 883 6 884 2 642 4 644 4 510 4 370 4 511 4 145 2 265 2 512 4 25 2 26 2 148 2 786 6 523 2 659 2 790 4 31 2 663 2 32 2 33 2 273 2 391 2 536 2 165 2 914 4 282 2 800 2 46 2 400 2 669 12 916 4 169 6 915 24 547 2 918 2 561 2 62 2 63 2 420 2 691 16 65 2 188 4 937 2 304 6 198 6 822 12 200 4 940 2 942 4 202 4 831 2 582 2 312 2 449 2 78 2 87 4 957 2 94 4 96 2 721 4 593 2 596 4 722 2 217 2 218 4 839 2 324 2 103 2 105 2 328 2 469 2 847 2 728 2 731 2 850 2 852 2 851 2 974 2 975 4 853 2 109 16 612 2 338 2 116 2 615 2 478 2 235 2 117 4 622 2 865 6 627 2 
488 2 60 2 75 2 29 2 109 2 612 2 915 4 780 2 839 2 312 2 103 2 847 2 265 2 7 2 732 2 454 2 96 2 
488 2 629 2 632 2 764 4 4 4 874 2 634 4 248 4 362 2 768 2 500 4 883 6 884 2 642 4 257 2 644 4 510 4 370 4 511 4 145 2 512 4 26 2 148 2 786 6 523 2 659 2 790 4 31 2 663 2 157 2 32 4 33 2 533 2 273 2 391 2 536 2 165 2 914 4 282 2 800 2 46 2 400 2 669 12 916 4 169 6 915 24 547 2 176 2 411 2 561 2 62 2 63 2 420 2 691 16 65 2 188 4 937 2 304 6 198 6 822 12 200 4 940 2 942 4 202 4 582 2 312 2 449 2 78 4 87 4 957 2 94 4 96 2 721 4 593 2 596 4 722 2 217 2 218 4 839 2 324 2 103 2 105 2 328 2 469 2 847 2 728 2 731 2 850 2 852 2 851 2 974 2 975 4 853 2 109 16 338 4 861 2 116 2 615 2 478 2 235 2 117 4 622 2 865 6 627 2 
488 4 354 2 629 2 632 2 764 4 4 4 874 2 634 4 248 4 362 2 768 2 500 4 883 6 503 2 884 2 642 4 644 4 510 4 370 4 511 4 145 2 265 2 512 4 26 2 148 2 786 6 523 2 659 2 790 4 31 2 663 2 32 4 33 2 533 2 273 2 391 2 536 2 165 2 914 4 282 2 800 2 46 2 400 2 669 12 916 4 169 6 915 24 547 2 405 2 682 2 561 2 62 2 63 2 420 2 691 16 65 2 188 4 937 2 304 6 198 6 822 12 200 4 940 2 942 4 202 4 582 2 312 2 449 2 78 2 87 4 957 2 94 4 96 2 721 4 593 2 596 4 722 2 217 2 218 4 839 2 324 2 103 2 105 2 328 2 467 2 469 2 847 2 728 2 731 2 850 2 852 2 851 2 974 2 975 4 853 2 109 16 612 2 338 2 116 2 615 2 478 2 235 2 117 4 622 2 865 6 627 2 
488 2 761 6 763 2 245 2 495 2 6 2 497 8 248 4 771 2 9 10 10 2 501 2 11 4 502 6 773 10 504 4 774 24 252 4 775 2 254 9 15 2 508 2 17 2 510 6 264 2 783 2 19 2 21 2 20 2 514 2 267 3 517 2 520 8 26 2 786 2 523 6 270 26 28 50 524 2 30 2 31 2 272 2 33 2 531 2 534 4 35 3 275 2 276 2 796 46 40 2 538 2 540 2 44 4 799 2 281 2 46 2 800 2 801 4 283 6 47 2 48 2 544 8 284 12 803 2 547 4 51 2 552 2 806 2 291 2 808 2 811 4 554 2 813 2 295 6 555 6 556 24 297 2 558 2 814 2 560 2 63 4 64 4 567 4 570 6 819 2 69 2 305 2 304 6 823 10 825 2 308 2 577 16 829 24 74 2 579 2 310 6 581 2 833 2 583 2 82 2 83 2 85 2 588 2 589 8 88 2 316 3 319 2 318 20 591 12 593 2 596 62 97 2 322 2 324 36 844 1 329 2 846 2 106 2 847 2 607 2 332 2 335 2 610 4 611 2 109 32 337 2 854 18 855 2 856 4 338 25 858 2 857 2 343 2 342 25 346 4 617 4 620 4 118 2 623 2 868 2 625 2 627 4 122 2 124 2 125 2 127 2 872 2 629 2 358 6 631 4 636 2 360 4 880 2 637 10 364 8 135 4 365 16 639 2 137 2 640 2 884 2 885 18 369 2 886 2 644 6 888 6 889 12 141 2 894 2 893 2 372 26 145 2 146 2 147 2 896 4 151 12 152 2 378 2 902 16 660 2 659 14 380 4 662 8 664 2 155 6 907 2 386 4 665 2 159 28 911 2 912 4 395 2 913 6 399 2 398 2 400 4 169 14 915 44 917 3 921 18 406 2 922 2 673 6 409 2 678 2 684 2 685 2 179 2 927 2 416 2 689 14 183 6 692 2 421 2 933 2 424 2 190 4 194 2 427 4 428 4 197 4 700 2 702 3 429 16 431 2 940 2 704 2 432 2 435 4 942 4 437 4 436 2 943 10 944 2 440 2 945 2 706 2 946 4 445 2 204 4 708 2 709 2 447 2 448 6 449 4 949 2 950 2 710 4 452 2 712 2 714 2 955 4 211 2 453 64 717 2 959 2 962 2 217 2 965 2 218 4 457 4 967 4 220 4 724 2 463 2 464 4 970 4 971 2 726 2 465 2 727 9 728 14 973 2 223 2 472 4 737 2 736 2 739 2 738 4 740 4 978 2 226 4 477 2 230 4 742 2 744 4 234 2 989 2 990 2 991 12 478 6 748 4 993 2 235 2 481 2 482 2 236 2 749 4 484 4 239 6 754 8 241 16 486 2 
965 2 659 2 322 2 324 2 35 2 728 2 823 2 637 4 796 6 704 2 943 2 579 2 611 2 109 2 915 2 338 2 342 2 991 2 653 2 623 2 241 2 416 2 97 2 486 2 
965 2 659 2 322 2 324 2 35 2 728 2 823 2 637 4 796 6 704 2 943 2 579 2 611 2 109 2 915 2 338 2 342 2 991 2 653 2 623 2 241 2 416 2 97 2 486 2 
965 2 659 2 322 2 324 2 35 2 728 2 823 2 637 4 796 6 704 2 943 2 579 2 611 2 109 2 915 2 338 2 342 2 991 2 653 2 623 2 241 2 416 2 97 2 486 2 
152 4 965 2 128 2 220 2 662 2 324 2 463 4 464 2 727 3 877 2 194 2 497 2 794 2 848 2 429 6 912 2 913 4 135 2 249 4 738 2 801 2 254 3 579 2 109 4 544 2 915 10 338 3 342 3 552 4 372 6 617 2 807 2 513 2 89 2 866 2 415 3 558 4 687 2 689 2 151 4 
152 4 965 2 967 2 128 2 220 2 662 2 324 2 463 4 464 2 727 2 877 2 194 2 497 2 794 2 394 2 848 2 429 4 912 2 913 4 135 2 249 4 738 2 801 2 254 2 579 2 109 4 544 2 915 10 338 2 342 2 552 4 372 6 617 2 807 2 513 2 89 2 866 2 555 2 415 2 558 4 687 2 689 2 151 4 
152 4 965 2 967 2 128 2 220 2 662 2 324 2 463 4 464 2 727 2 877 2 194 2 497 2 794 2 394 2 848 2 429 4 912 2 913 4 135 2 249 4 738 2 801 2 254 2 579 2 109 4 544 2 915 10 338 2 342 2 552 4 372 6 617 2 807 2 513 2 89 2 866 2 555 2 415 2 558 4 687 2 689 2 151 4 
152 4 965 2 967 2 128 2 220 2 662 2 324 2 463 4 464 2 727 2 877 2 194 2 497 2 794 2 394 2 848 2 429 4 912 2 913 4 135 2 249 4 738 2 801 2 254 2 579 2 109 4 544 2 915 10 338 2 342 2 552 4 372 6 617 2 807 2 513 2 89 2 866 2 555 2 415 2 558 4 687 2 689 2 151 4 
152 4 965 2 967 4 128 2 220 2 662 2 324 2 463 4 464 2 727 2 877 2 194 2 497 2 794 2 394 4 848 2 429 4 912 2 913 4 135 2 249 4 738 2 801 2 254 2 579 2 109 4 544 2 915 10 338 2 342 2 552 4 372 6 617 2 807 2 513 2 89 2 866 2 555 4 415 2 558 4 687 2 689 2 151 4 
618 2 111 2 646 2 806 2 756 2 586 2 
923 2 784 2 277 2 646 2 921 2 27 2 542 2 
186 2 459 2 629 2 323 2 66 1 972 2 393 2 433 1 43 2 167 1 109 8 403 2 444 2 915 10 113 2 985 2 451 2 804 2 745 2 408 2 711 2 314 2 956 1 293 1 867 2 751 2 
565 2 967 2 380 2 662 6 220 6 464 6 5 2 908 2 494 2 106 2 497 6 394 2 429 16 913 4 738 2 42 2 801 6 109 6 544 6 915 6 228 2 205 2 231 2 888 4 617 6 679 4 955 2 555 4 151 12 962 2 
251 2 152 2 184 2 109 1 915 1 356 2 873 2 77 1 463 2 987 7 426 2 680 4 90 2 366 2 720 2 558 2 58 2 980 2 
251 2 152 2 184 4 356 2 873 2 463 2 987 6 426 2 680 4 90 2 366 2 720 2 558 2 58 4 980 4 
251 6 152 2 184 8 109 1 915 1 356 2 873 2 77 1 463 2 987 10 426 2 680 4 90 2 366 8 720 2 558 2 58 8 980 8 
152 2 184 2 356 2 873 2 463 2 987 2 426 2 680 2 90 2 720 2 558 2 58 2 980 2 
758 2 376 1 45 2 400 2 109 2 915 2 924 2 480 1 57 2 
758 2 400 2 924 2 109 2 915 2 57 2 45 2 
758 2 400 2 924 2 109 2 915 2 57 2 45 2 
758 2 400 2 924 2 109 2 915 2 57 2 45 2 
156 2 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NullPointerException 557 
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException 557 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NullPointerException 557 
daikon.test.InvariantFormatTester:testFormats()V ERROR utilMDE.Assert$AssertionException (810,890) (810,890) 181 913 891 472 273 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.PptSlice1:num_samples()I
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfo:get_all_simple_names()Ljava.util.List;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.Quantify.Length:simplify_name()Ljava.lang.String;
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.Quantify.Constant:Constant(I)V
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.MathMDE:missing_numbers([I)[I
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.Quant:eq(JJ)Z
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap:size()I
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.inv.filter.ParentFilter:ParentFilter()V
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.Quant:ne(II)Z
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.Quant:sameLength([I[I)Z
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
jtb.JavaParser:jj_2_16(I)Z
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.ArraysMDE:sum([[D)D
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:indexOf([II)I
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltNonZero:format_daikon()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:is_boolean()Z
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.inv.unary.sequence.EltOneOf:enabled()Z
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:eltsGtIndex([I)Z
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
jtb.ParseException:ParseException(Ljava.lang.String;)V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.UpperBoundCore:computeConfidence()D
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.sequence.EltOneOf:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant:justified()Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:lexLTE([I[I)Z
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.inv.unary.sequence.EltNonZero:is_pointer()Z
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.Quant:intersection([I[I)[I
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
utilMDE.Intern:internSubsequence([III)[I
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:noDuplicates([D)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
utilMDE.ArraysMDE:subarray([JII)[J
daikon.Quant:eltwiseLT([I)Z
daikon.VarInfo:isPrestate()Z
daikon.Quant:subsetOf([S[S)Z
daikon.Quantify.SimplifyQuantification:get_closer()Ljava.lang.String;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
jtb.JavaCharStream:getBeginColumn()I
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.inv.unary.scalar.Positive:enabled()Z
daikon.Quant:subsetOf([J[J)Z
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.Quant:lt(II)Z
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.Quant:slice([III)[I
daikon.VarInfo:name()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.Quantify.IOAQuantification:getClosingExp()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.Quantify.Length:Length(Ldaikon.VarInfo;I)V
daikon.inv.unary.sequence.EltNonZero:format_esc()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.JavaCharStream:FillBuff()V
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.Quantify:get_flags(Z)Ljava.util.EnumSet;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
jtb.JavaCharStream:readChar()C
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:memberOf(I[I)Z
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
utilMDE.ArraysMDE:sum([[I)I
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.OutputFormat:isJavaFamily()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
jtb.JavaParser:jj_ntk()I
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.Quant:lexLT([I[I)Z
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.diff.Node:Node()V
daikon.inv.ValueSet:ValueSet(I)V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.Quant:eltsLTE([II)Z
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:subsetOf([F[F)Z
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.Quant:eltsEqualIndex([I)Z
daikon.Quantify.IOAQuantification:getFreeVarName(I)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
jtb.JavaParser:jj_scan_token(I)Z
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.Quantify.Term:esc_name()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Quantify.ESCQuantification:get_quantification()Ljava.lang.String;
daikon.VarInfoName:name()Ljava.lang.String;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.Quant:memberOf(F[F)Z
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.Quant:eltsGTE([II)Z
daikon.PptSlice0:arity()I
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.ProglangType:isPseudoArray()Z
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.Quant:lexNotEqual([I[I)Z
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:memberOf(S[S)Z
daikon.test.FormatTestCase:passes()Z
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3_16()Z
jtb.ParseException:getMessage()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.Quant:subsetOf([F[D)Z
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.VarInfo:get_enclosing_var()Ldaikon.VarInfo;
daikon.Quant:concat([I[I)[I
daikon.Quant:lexGTE([I[I)Z
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.LimitedSizeIntSet:size()I
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.diff.RootNode:RootNode()V
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
utilMDE.Intern:internSubsequence([JII)[J
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:get_array_var()Ldaikon.VarInfo;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quantify.SimplifyQuantification:SimplifyQuantification(Ljava.util.EnumSet;[Ldaikon.VarInfo;)V
daikon.VarInfo:isDerived()Z
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.test.InvariantFormatTester:execute()Z
daikon.ProglangType:baseIsFloat()Z
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.PptSlice0.ImplicationWrapper:hashCode()I
utilMDE.MathMDE:gcd_differences([I)I
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quantify.Term:name_with_offset(Ljava.lang.String;I)Ljava.lang.String;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
jtb.Token:newToken(I)Ljtb.Token;
utilMDE.FuzzyFloat:gt(DD)Z
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.Ppt:indexOf(Ljava.lang.String;)I
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
utilMDE.ArraysMDE:max([I)I
daikon.PptName:isEnterPoint()Z
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.inv.Invariant:logDetail()Z
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
utilMDE.ArraysMDE:sum([D)D
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.Quant:setDiff([I[I)[I
daikon.ModBitTracker:num_samples()I
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.Quantify.SimplifyQuantification:get_arr_vars_indexed(I)Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:format_ioa()Ljava.lang.String;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.Ppt:Ppt()V
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.VarInfo:get_base_array_hashcode()Ldaikon.VarInfo;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.Quantify.QuantifyReturn:QuantifyReturn(Ldaikon.VarInfo;)V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:eltwiseEqual([I)Z
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:intern([I)[I
daikon.inv.unary.LowerBoundCore:computeConfidence()D
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:eq(DD)Z
daikon.Quant:subsetOf([D[F)Z
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.Quant:eltsLteIndex([I)Z
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quantify.IOAQuantification:getMembershipRestriction(I)Ljava.lang.String;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.diff.InvMap:InvMap()V
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.Quant:eltwiseNotEqual([I)Z
daikon.Quant:union([I[I)[I
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
utilMDE.ArraysMDE:min([I)I
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.Quant:setEqual([I[I)Z
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quantify.ESCQuantification:get_arr_vars_indexed(I)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:pairwiseGT([I[I)Z
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
jtb.JavaCharStream:getEndLine()I
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
jtb.JavaCharStream:getBeginLine()I
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.VarInfoName:isLiteralConstant()Z
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:calc_modulus()J
utilMDE.TestUtilMDE:lsis_test(I)V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.VarInfo:new_ppt()V
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:enabled()Z
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.Intern:internStrings([Ljava.lang.String;)V
utilMDE.Intern:intern([J)[J
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptSlice1:arity()I
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltNonZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.VarInfo:is_direct_non_slice_array()Z
daikon.inv.unary.sequence.EltLowerBound:format_simplify()Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:isArray()Z
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:eltwiseGTE([I)Z
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:pairwiseLT([I[I)Z
daikon.inv.unary.sequence.EltOneOf:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.Quant:subsetOf([D[D)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoAux:hashCode()I
jtb.JavaCharStream:GetImage()Ljava.lang.String;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.Quantify.Term:ioa_name()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.Quant:eltsEqual([II)Z
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.Quant:eq(II)Z
daikon.VarInfo:jml_name(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:isIOAArray()Z
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.Quant:subsetOf([I[I)Z
utilMDE.Intern:intern([D)[D
daikon.inv.unary.sequence.EltOneOf:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
utilMDE.FuzzyFloat:indexOf([DD)I
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.inv.unary.sequence.EltUpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant; | RETURN | 3104 | return null
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.VarInfo:get_lower_bound()Ldaikon.Quantify.Term;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Quant:eq(FF)Z
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
utilMDE.ArraysMDE:sum([I)I
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.Quant:lte(II)Z
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.Quantify.ESCQuantification:ESCQuantification(Ljava.util.EnumSet;[Ldaikon.VarInfo;)V
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.inv.Invariant:logOn()Z
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.Quantify.SimplifyQuantification:get_quantification()Ljava.lang.String;
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.EltOneOf:is_hashcode()Z
daikon.VarInfo:relate_var()V
daikon.VarInfo:ioa_name()Ljava.lang.String;
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.inv.unary.sequence.EltUpperBound:enabled()Z
daikon.inv.unary.sequence.EltUpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.InvMap:toString()Ljava.lang.String; | ASSIGN | 3056 | = null
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quantify.IOAQuantification:getQuantifierExp()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.PptName:isCombinedExitPoint()Z
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.Quantify.FreeVar:simplify_name()Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
utilMDE.FuzzyFloat:lte(DD)Z
daikon.VarInfo:isPointer()Z
daikon.VarInfo:domainTypeIOA()Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.MathMDE:mod_positive(JJ)J
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.VarInfoName:hashCode()I
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.Invariant:isWorthPrinting()Z
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:subarray_rep()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
jtb.JavaCharStream:getEndColumn()I
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.VarInfo:simplify_quantify(Ljava.util.EnumSet;[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.Invariants:Invariants()V
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V
utilMDE.ArraysMDE:element_range([I)I
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.ProglangType:isIntegral()Z
daikon.Quantify.Length:esc_name()Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.inv.unary.sequence.EltOneOf:format_esc()Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.VarInfo:jml_name()Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.Modulus:enabled()Z
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quantify.ESCQuantification:bld_quant(Ldaikon.VarInfo;Ldaikon.Quantify.Term;)Ljava.lang.String;
daikon.inv.Invariant:prob_or(DD)D
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:EltNonZero(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:subarray([III)[I
daikon.ProglangType:baseIsScalar()Z
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
jtb.JavaParserTokenManager:MoreLexicalActions()V
jtb.JavaCharStream:BeginToken()C
daikon.inv.Invariant:prob_and(DDD)D
utilMDE.MathMDE:gcd(JJ)J
daikon.VarInfo:esc_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.VarInfo:get_upper_bound()Ldaikon.Quantify.Term;
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:pairwiseNotEqual([I[I)Z
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.Quant:pairwiseLTE([I[I)Z
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.EltNonZero:format_simplify()Ljava.lang.String;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:generateParseException()Ljtb.ParseException;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.ValueTuple:size()I
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.ModBitTracker:split(I)I
daikon.Quant:eltwiseGT([I)Z
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.FuzzyFloat:eq(DD)Z
daikon.Debug:logDetail()Z
daikon.ProglangType:dimensions()I
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eltsGteIndex([I)Z
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.Quantify.FreeVar:name()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.inv.unary.sequence.EltUpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.Quant:eltsGT([II)Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.inv.unary.sequence.EltOneOf:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.Quant:eltsLtIndex([I)Z
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
jtb.JavaCharStream:backup(I)V | OPERATOR | 8274 | -= -> |=
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.Quantify.IOAQuantification:getFreeVar(I)Ldaikon.Quantify.Term;
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I | STATEMENT | 12352 | stmt -> ;
daikon.inv.unary.sequence.EltUpperBound:EltUpperBound(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.MathMDE:gcd([I)I
daikon.VarInfoName.Add:amount()Ljava.lang.String;
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.VarInfo:old_var_names(Ljava.lang.String;)Ljava.lang.String;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.MathMDE:pow_fast(II)I
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:format_simplify()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.inv.unary.LowerBoundCore:calc_modulus()J
utilMDE.ArraysMDE:min_max([I)[I
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:gte(II)Z
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.ModBitTracker:ModBitTracker(I)V
daikon.Quant:eltsLT([II)Z
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.Quant:subsetOf([B[I)Z
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.PptSlice0:initInvariantsSeen()V
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
utilMDE.FuzzyFloat:lt(DD)Z
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.FuzzyFloat:ne(DD)Z
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:memberOf(F[D)Z
daikon.ModBitTracker:num_vars()I
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.Quant:memberOf(J[J)Z
daikon.Quantify.IOAQuantification:IOAQuantification([Ldaikon.VarInfo;)V
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ProglangType:isPointerFileRep()Z
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quantify:quantify([Ldaikon.VarInfo;)[Ldaikon.Quantify.QuantifyReturn;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfo:simplify_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
utilMDE.WeakHasherMap:processQueue()V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltOneOf:format_daikon()Ljava.lang.String;
daikon.Quant:eltsNotEqual([II)Z
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.inv.unary.UpperBoundCore:calc_range()J
utilMDE.ArraysMDE:sorted([I)Z
daikon.inv.unary.sequence.EltOneOf:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.ModBitTracker:num_sets()I
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.VarInfo:apply_subscript(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.VarInfoName.ElementsFinder:inPre()Z
utilMDE.ArraysMDE:concat([I[I)[I
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.inv.unary.sequence.EltOneOf:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.ValueTuple:isMissing(I)Z
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.EltOneOf:sort_rep()V
daikon.inv.unary.sequence.EltOneOf:EltOneOf(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ProglangType:baseIsIntegral()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Assert:assertTrue(Z)V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.inv.unary.sequence.EltNonZero:enabled()Z
daikon.Quant:pairwiseDivides([I[I)Z
daikon.inv.Invariant:getConfidence()D
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.inv.unary.sequence.EltOneOf:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
utilMDE.OrderedPairIterator:setnext1()V
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfo:get_base_array()Ldaikon.VarInfo;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.inv.unary.scalar.LowerBound:enabled()Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.OrderedPairIterator:setnext2()V
daikon.ProglangType:isFloat()Z
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.Quantify.IOAQuantification:getVarIndexedString(I)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Options.OptionInfo:argument_required()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ValueTuple:isMissingFlow(I)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.PptSlice2:arity()I
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.VarInfo:simplify_name()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.Quant:lexEqual([I[I)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
utilMDE.MathMDE:mod_positive(II)I
utilMDE.MathMDE:sign(I)I
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:memberOf(D[F)Z
daikon.inv.unary.sequence.EltNonZero:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.Debug:logOn()Z
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:format_ioa()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:numIntArrays()I
daikon.Quant:lexGT([I[I)Z
daikon.ProglangType:base()Ljava.lang.String;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.Quant:noDups([I)Z
daikon.ProglangType:isScalar()Z
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.Quant:pairwiseEqual([I[I)Z
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.Quantify.Term:simplify_name()Ljava.lang.String;
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltNonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
utilMDE.LimitedSizeIntSet:add(I)V
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.Quantify.Constant:name()Ljava.lang.String;
daikon.Quant:pairwiseSquare([I[I)Z
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.OrderedPairIterator:hasNext()Z
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.inv.Invariant:prob_and(DD)D
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:gcd(II)I
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
utilMDE.SimpleLog.LongVal:LongVal(J)V
utilMDE.MathMDE:pow(II)I
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
utilMDE.MathMDE:negate(I)I
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.FuzzyFloat:gte(DD)Z
daikon.Quant:eltwiseLTE([I)Z
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
utilMDE.MathMDE:modulus([I)[I
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.VarInfo:esc_name()Ljava.lang.String;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.Quant:isReverse([I[I)Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.Quant:gt(II)Z
jtb.JavaCharStream:ReadByte()C
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.Ppt:find_var_by_name(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
817 2 253 4 387 2 342 2 1022 2 810 2 609 2 344 2 890 2 
904 6 1033 2 641 2 676 2 717 2 719 2 912 2 217 2 1073 2 924 6 888 6 
711 4 767 2 810 2 379 2 565 6 199 2 106 6 755 6 321 2 491 6 1116 2 890 2 427 4 
0 4 572 8 1048 16 388 8 116 2 196 10 434 26 810 6 83 8 677 4 263 2 649 4 890 6 1031 12 407 6 129 30 965 16 999 10 242 2 1069 2 340 6 172 2 1070 2 99 2 691 16 720 10 830 10 630 4 661 8 1046 10 
643 6 596 4 
1041 2 
32 2 872 2 572 2 874 2 191 2 1048 2 434 4 196 4 677 2 365 2 1031 2 129 6 996 2 965 2 999 2 1002 2 340 2 559 2 1071 2 720 2 691 2 830 2 1046 2 
1031 5 0 2 129 14 112 2 894 4 1048 8 965 8 999 4 434 12 25 6 720 4 691 8 27 4 830 4 301 2 1046 4 889 6 
762 2 977 2 949 6 764 2 359 2 980 2 37 2 1051 2 82 8 1053 2 771 2 1089 62 816 2 49 4 920 2 583 4 367 2 819 2 50 4 617 4 742 4 958 4 1096 2 856 10 1064 2 20 4 444 4 1101 2 966 14 967 2 22 2 782 4 446 4 244 2 64 4 448 2 1043 10 526 2 637 4 289 4 
1050 2 985 2 652 2 159 2 930 2 1034 2 1013 2 1041 2 71 2 696 2 
838 2 700 2 842 2 298 2 82 2 363 2 302 2 13 4 442 2 15 2 371 2 510 2 165 2 312 2 712 2 782 4 244 2 172 2 1007 4 514 2 180 2 324 2 668 2 110 2 810 4 392 2 42 2 332 2 545 2 617 2 53 2 890 4 128 2 55 4 1105 2 342 2 969 2 562 2 900 2 632 2 140 2 756 2 489 2 836 2 
805 4 1048 32 572 18 434 48 196 6 810 4 149 2 677 2 469 4 984 8 651 4 366 2 547 2 680 4 890 4 889 6 1031 22 407 4 129 54 54 2 894 4 965 32 999 16 937 4 340 4 213 6 25 6 1070 2 720 16 691 32 628 2 27 4 830 16 661 6 523 2 424 6 975 6 1046 16 109 6 
949 2 82 2 1096 2 
838 2 978 2 295 2 445 2 280 2 867 2 1057 2 580 2 485 2 797 10 795 2 220 2 697 22 158 2 
293 2 701 4 702 2 981 2 576 3 435 2 578 2 439 2 577 1 982 1 154 2 704 2 988 2 306 1 990 4 17 8 163 2 857 8 585 2 995 2 167 2 311 2 1001 2 591 4 862 2 26 1 1008 2 598 2 1011 2 28 2 1012 3 29 3 600 2 1017 2 723 2 870 2 724 3 181 2 455 4 322 6 186 3 726 2 188 2 34 2 35 2 326 2 195 2 611 4 197 6 609 2 613 2 1025 2 737 3 471 24 202 1 886 32 887 2 337 2 205 2 1030 2 890 32 892 2 744 2 745 2 619 16 476 2 58 2 746 2 895 6 481 1 345 4 1042 2 486 1 73 3 754 1 76 2 222 2 1049 2 907 2 497 4 909 2 769 1 362 2 227 2 644 2 229 2 84 2 87 1 650 16 915 2 90 2 1060 3 232 1 504 2 508 2 370 2 509 1 1063 1 778 5 931 2 239 16 935 2 247 2 939 2 786 2 513 2 791 3 792 2 518 2 381 2 663 3 800 2 1076 2 947 2 802 2 950 32 810 34 539 1 390 2 1088 8 954 4 543 2 679 2 1093 2 548 3 396 2 400 2 398 2 1095 3 823 2 1097 1 272 2 131 2 1103 2 558 2 413 24 968 1 277 2 970 2 831 2 423 16 568 2 976 6 287 2 288 2 1115 2 145 12 
640 2 
810 2 316 2 
657 2 1035 2 810 4 
77 2 294 6 7 2 8 2 361 4 768 2 910 2 441 6 653 6 654 6 655 2 656 6 166 2 240 2 241 2 313 2 170 30 171 2 715 2 24 2 378 6 721 2 943 2 1016 6 382 6 183 2 108 2 185 2 257 2 1077 2 603 6 111 6 732 6 192 2 538 2 328 2 953 2 46 2 882 4 121 2 678 2 394 4 395 6 265 30 125 6 1028 2 402 4 474 2 1029 2 207 2 1100 30 1104 4 748 4 751 6 636 4 1045 6 758 4 
44 2 667 2 626 1 458 2 
1113 2 458 2 
873 2 237 2 803 2 589 2 807 2 224 2 136 4 243 2 119 2 438 2 346 4 789 2 347 2 971 2 200 2 505 2 697 6 30 2 
44 2 141 2 
250 2 82 2 855 2 940 2 
358 2 250 2 38 2 82 2 855 2 940 2 
177 2 649 2 314 2 82 2 458 2 940 2 
668 2 1000 2 
649 2 82 2 144 2 940 2 
521 2 718 2 
142 2 228 2 
787 2 784 2 
198 2 1099 2 
1099 2 142 2 187 2 
1099 2 89 2 142 2 
1099 2 997 2 142 2 
1099 2 251 2 142 2 
533 6 78 2 82 2 956 2 399 2 266 2 940 2 567 6 
69 2 41 2 
177 2 649 2 38 2 82 2 458 2 95 2 940 2 
372 2 177 2 458 2 
177 2 458 2 468 2 
44 2 1074 2 41 2 
177 2 458 2 
452 2 41 2 
833 2 458 2 
44 2 1003 2 41 2 
44 2 429 2 784 2 
44 2 1099 2 669 2 
44 2 521 2 376 2 
44 2 933 2 142 2 
338 2 41 2 
357 2 458 2 
784 2 117 2 
1099 2 1058 2 
521 2 688 2 
142 2 425 2 
41 2 203 2 
705 2 142 2 
521 2 66 2 
1099 2 349 2 
725 2 784 2 
44 2 957 2 1003 2 41 2 
44 2 235 2 957 2 1003 2 41 2 
44 2 41 2 898 2 
44 2 1027 2 41 2 
709 2 534 2 592 2 155 2 
513 2 
293 2 573 2 701 2 981 2 982 2 306 2 156 2 990 2 163 2 857 2 311 2 1001 6 591 4 175 2 1017 4 181 2 182 2 455 4 322 6 726 2 35 2 326 2 607 2 195 2 197 4 611 4 609 2 613 2 886 6 890 26 744 2 745 2 619 6 476 2 623 2 58 2 895 2 214 2 345 2 634 2 76 2 222 2 362 2 644 2 229 2 227 2 915 2 504 2 370 2 373 2 935 2 786 2 792 2 671 2 259 4 950 4 810 26 814 2 954 4 543 2 679 2 122 2 818 2 396 2 398 2 401 2 408 2 409 2 276 4 976 2 287 2 288 2 145 8 1115 2 
293 2 573 2 701 2 981 2 982 2 306 2 990 2 163 2 857 2 311 2 1001 6 591 4 175 2 1017 4 181 2 182 2 455 4 322 6 726 2 35 2 326 2 607 2 195 2 1024 2 197 6 611 4 609 2 613 2 1025 2 886 6 890 26 744 2 745 2 619 6 476 2 623 2 58 2 895 2 214 2 345 2 634 2 76 2 222 2 1049 2 362 2 644 2 229 2 227 2 915 2 90 2 1061 2 504 2 370 2 935 2 786 2 792 2 1080 2 671 2 259 4 950 4 810 26 814 2 954 4 543 2 679 2 122 2 818 2 396 2 398 2 401 2 409 2 276 4 976 2 287 2 288 2 145 8 1115 2 
494 2 
914 2 201 2 
904 6 1 2 355 2 1047 4 641 2 766 8 362 2 10 2 229 2 847 2 917 2 303 2 308 2 924 6 1062 2 163 2 932 4 310 2 863 2 786 2 719 2 597 2 317 2 794 2 601 2 455 2 255 2 322 4 527 2 531 2 460 2 35 2 806 4 463 10 1081 4 194 4 466 2 260 4 810 12 611 2 613 2 736 2 679 2 124 2 884 2 1092 2 960 2 888 6 553 2 890 6 1033 4 1037 8 827 2 749 2 217 4 901 2 566 2 350 2 1114 2 143 2 
904 6 1 2 355 2 1047 4 641 2 766 8 362 2 229 2 10 2 847 2 917 2 308 2 924 8 1062 2 163 2 932 4 310 2 863 2 717 2 786 2 719 2 597 2 317 2 794 2 601 2 455 2 255 2 322 4 527 2 531 2 460 2 728 2 35 2 806 4 463 10 1081 4 466 2 194 4 260 4 810 12 611 2 613 2 736 2 679 2 123 2 124 2 884 2 1092 2 960 2 888 8 890 6 553 2 1033 4 412 4 1037 8 827 2 749 2 217 4 901 2 350 2 1114 2 143 2 
460 2 904 2 1 2 355 2 932 2 1033 2 194 4 260 4 827 2 847 2 749 2 217 2 350 2 884 2 601 2 794 2 924 2 960 2 
904 4 1 2 355 2 1047 4 641 2 766 4 362 2 10 2 229 2 847 2 917 2 303 2 308 2 924 6 1062 2 163 2 932 4 310 2 863 2 717 2 786 2 597 2 317 2 794 2 601 2 455 2 255 2 322 4 527 2 531 2 460 2 35 2 806 4 463 6 1081 4 194 4 466 2 260 4 810 12 611 2 613 2 736 2 679 2 124 2 884 2 1092 2 960 2 888 6 553 2 890 6 1033 4 1037 4 827 2 749 2 217 4 901 2 566 2 350 2 1114 2 143 2 
904 6 1 2 355 2 1047 4 641 2 766 4 362 2 10 2 229 2 847 2 917 2 303 2 308 2 924 4 1062 2 163 2 932 4 310 2 863 2 786 2 597 2 317 2 794 2 601 2 1073 2 455 2 255 2 322 4 527 2 531 2 460 2 35 2 806 4 463 6 1081 4 194 4 466 2 260 4 810 12 611 2 613 2 736 2 679 2 124 2 884 2 1092 2 960 2 888 6 553 2 890 6 1033 4 1037 4 827 2 749 2 217 4 901 2 566 2 350 2 1114 2 143 2 
904 6 1 2 355 2 1047 4 641 2 766 8 362 2 10 2 229 2 847 2 917 2 303 2 308 2 924 6 1062 2 163 2 932 4 310 2 863 2 786 2 719 2 597 2 317 2 794 2 601 2 455 2 255 2 322 4 527 2 531 2 460 2 35 2 806 4 463 6 1081 4 194 4 466 2 260 4 810 12 611 2 613 2 736 2 679 2 124 2 884 2 1092 2 960 2 888 6 553 2 890 6 1033 4 1037 4 827 2 749 2 217 4 901 2 566 2 350 2 1114 2 143 2 
904 8 1 2 355 2 1047 4 641 2 766 8 362 2 10 2 229 2 847 2 917 2 303 2 308 2 924 6 1062 2 163 2 932 4 310 2 863 2 786 2 719 2 597 2 317 2 794 2 601 2 1073 2 455 2 255 2 322 4 527 2 531 2 460 2 35 2 806 4 463 10 1081 4 194 4 466 2 260 4 810 12 611 2 613 2 736 2 679 2 124 2 884 2 1092 2 960 2 888 8 553 2 890 6 1033 4 1037 8 827 2 749 2 217 4 901 2 566 2 350 2 1114 2 143 2 
904 6 1 2 355 2 1047 4 641 2 766 8 362 2 10 2 229 2 847 2 917 2 303 2 308 2 924 6 1062 2 163 2 932 4 310 2 863 2 786 2 719 2 597 2 317 2 794 2 601 2 455 2 255 2 322 4 527 2 531 2 460 2 35 2 806 4 463 10 1081 4 194 4 466 2 260 4 810 12 611 2 613 2 736 2 679 2 124 2 884 2 1092 2 960 2 888 6 553 2 890 6 1033 4 1037 8 827 2 749 2 217 4 901 2 566 2 350 2 1114 2 143 2 
293 2 1 2 839 6 3 6 573 2 10 2 847 2 303 2 308 2 853 1 584 6 857 2 19 2 310 2 309 2 591 4 863 4 316 6 595 2 597 2 317 2 601 2 322 6 35 2 326 2 39 1 608 2 611 4 609 2 879 2 613 2 331 2 884 2 886 8 888 12 52 2 890 24 619 6 624 7 896 1 895 2 341 6 345 2 899 6 70 2 901 4 350 2 904 8 355 2 356 2 640 6 641 4 80 2 362 2 644 2 86 4 915 2 917 2 921 2 924 4 370 2 928 2 932 4 380 1 950 2 954 4 679 2 122 2 124 2 396 2 398 2 960 2 409 4 976 2 143 2 698 2 145 4 146 6 701 2 981 12 437 6 990 2 992 6 163 2 1001 6 178 2 181 2 453 2 455 4 460 2 190 2 731 2 733 8 463 2 194 4 466 2 195 2 197 6 1025 2 736 2 743 1 744 2 745 2 476 2 1033 4 478 2 1035 6 217 4 749 2 1044 2 757 2 222 2 495 1 1047 4 1049 2 766 2 229 2 231 2 506 1 507 6 1062 2 780 6 781 6 245 7 786 2 512 2 520 1 519 2 794 2 1073 4 524 2 255 2 527 2 1075 2 531 2 532 10 806 6 1081 8 259 4 260 4 810 46 261 2 1087 6 543 2 818 2 1092 2 821 2 551 2 553 2 824 2 1108 2 826 6 827 2 829 1 281 4 1114 2 287 2 837 2 1117 2 
146 6 1 2 293 2 839 6 3 6 573 2 701 4 981 12 437 6 10 2 847 2 303 2 308 2 990 4 992 6 584 6 163 2 19 2 857 2 309 2 310 2 1001 6 591 4 863 4 719 4 595 2 316 6 597 2 317 2 178 2 1017 2 601 2 453 2 181 2 455 4 322 6 460 2 35 2 326 2 731 2 190 2 463 2 733 8 466 2 194 4 195 2 608 2 879 2 609 2 197 6 611 4 613 2 331 2 736 2 1025 2 884 2 886 8 52 2 888 12 890 26 744 2 745 2 619 6 1033 4 476 2 56 2 478 2 1035 6 895 2 341 6 345 4 899 6 70 2 749 2 217 4 901 4 350 2 1044 2 635 2 757 2 904 8 222 2 1047 4 355 2 356 2 640 6 641 4 1049 2 80 2 766 6 362 2 644 2 229 2 86 4 917 2 915 2 231 2 921 2 507 6 924 8 1062 2 370 2 928 2 932 4 780 6 781 6 786 2 512 2 519 2 794 2 524 2 255 2 1075 2 527 2 531 2 532 10 806 6 1081 8 259 4 950 2 260 4 810 48 261 2 1087 6 543 2 954 4 122 2 679 2 124 2 818 2 1092 2 821 2 396 2 398 2 551 2 960 2 553 2 409 4 824 2 826 6 1108 2 827 2 281 4 976 2 1114 2 287 2 143 2 698 2 837 2 145 8 1117 2 
146 6 1 2 293 2 839 6 3 6 573 2 701 4 981 12 437 6 10 2 847 2 303 2 308 2 990 4 992 6 584 6 163 2 19 2 857 2 309 2 310 2 1001 6 591 4 863 4 719 4 595 2 316 6 597 2 317 2 178 2 1017 2 601 2 453 2 181 2 455 4 322 6 460 2 35 2 326 2 731 2 190 2 733 8 463 6 466 2 194 4 195 2 608 2 879 2 609 2 197 6 611 4 613 2 331 2 736 2 1025 2 884 2 886 8 52 2 888 12 890 26 744 2 745 2 619 6 476 2 1033 4 56 2 478 2 1035 6 895 2 341 6 1037 4 345 4 899 6 70 2 749 2 217 4 901 4 350 2 1044 2 635 2 757 2 904 8 222 2 1047 4 355 2 356 2 640 6 641 4 1049 2 80 2 766 6 362 2 644 2 229 2 86 4 917 2 915 2 231 2 921 2 507 6 924 8 1062 2 370 2 928 2 932 4 780 6 781 6 786 2 512 2 519 2 794 2 524 2 255 2 1075 2 527 2 531 2 532 10 806 6 1081 8 259 4 950 2 260 4 810 48 261 2 1087 6 543 2 954 4 122 2 679 2 124 2 818 2 1092 2 821 2 396 2 398 2 551 2 960 2 553 2 409 4 824 2 826 6 1108 2 827 2 281 4 976 2 1114 2 287 2 143 2 698 2 837 2 145 8 1117 2 
293 2 1 2 571 6 839 6 3 12 4 6 573 2 841 6 10 2 847 2 303 2 308 2 584 6 857 4 19 2 310 2 309 2 591 4 863 4 316 12 595 2 597 2 317 2 601 2 322 6 35 2 326 2 327 2 608 2 611 4 609 2 879 2 613 2 331 2 614 2 884 2 886 12 888 16 52 2 890 24 619 8 622 2 56 2 895 4 341 6 345 4 899 6 70 2 901 4 350 2 635 2 904 10 355 2 356 2 640 12 641 4 79 2 80 2 81 6 362 2 644 2 86 4 915 2 917 2 921 2 924 10 369 6 370 2 928 2 932 4 386 6 950 4 954 4 679 2 122 4 124 2 396 2 398 2 960 2 409 4 976 4 143 2 698 2 145 10 146 6 701 4 981 10 437 6 153 2 990 4 992 12 163 2 1001 8 717 2 719 4 450 2 178 2 1017 2 181 2 453 2 455 4 460 2 731 2 463 6 733 8 194 4 466 2 195 2 197 6 735 6 736 2 1025 2 744 2 745 2 1033 4 476 2 478 2 208 6 1035 12 1037 4 217 4 749 2 487 2 1044 2 757 2 222 2 1047 4 1049 2 766 6 229 2 501 6 231 2 507 6 1062 2 780 6 781 6 786 2 512 2 519 2 794 2 1073 2 524 2 255 2 527 2 1075 2 801 2 531 2 532 8 806 6 1081 8 259 6 260 4 810 52 261 2 1087 12 543 2 818 2 1092 2 821 2 551 2 553 2 824 2 1108 2 826 6 827 2 281 4 1114 2 287 2 837 2 1117 2 
460 2 904 6 1047 2 355 2 641 2 806 2 1081 2 463 4 466 2 194 2 766 6 260 2 810 4 10 2 303 2 124 2 1092 2 884 2 308 2 924 6 888 4 553 2 1033 4 1037 4 719 2 827 2 217 4 350 2 601 2 794 2 1114 2 143 2 255 2 527 2 531 2 
293 2 573 2 981 4 10 2 303 2 308 2 163 2 310 2 1001 6 591 4 719 2 601 2 871 3 181 2 455 4 322 6 460 2 35 2 326 2 190 2 463 2 194 2 466 2 195 2 611 4 197 6 609 2 613 2 1025 2 884 2 886 8 888 4 890 24 745 2 619 6 1033 4 476 2 895 3 217 4 350 2 904 6 222 2 1047 2 355 2 641 2 1049 2 766 6 362 2 226 2 642 2 229 2 644 2 84 2 915 2 924 6 370 2 786 2 513 2 794 2 255 2 527 2 531 2 532 2 806 2 1081 2 259 4 260 2 950 3 810 28 954 4 543 2 679 2 1091 2 124 2 818 2 1092 2 396 2 398 2 553 2 127 2 409 2 272 2 133 2 277 2 827 2 1114 2 976 3 287 2 143 2 
466 2 1068 2 553 2 
466 2 1068 2 553 2 
293 2 573 2 701 4 981 4 847 2 16 2 990 4 18 2 163 2 1001 2 591 4 863 4 717 4 719 4 317 2 455 4 322 6 35 2 326 2 731 2 463 6 466 4 194 2 195 2 197 6 611 4 609 2 613 2 1025 2 886 2 888 16 890 16 744 2 206 2 745 2 619 2 476 2 1033 4 623 4 478 2 1037 4 345 4 899 2 749 2 217 4 901 2 350 2 761 2 222 2 904 12 355 4 1047 2 1049 2 641 4 766 6 362 2 644 2 229 2 86 2 917 2 915 2 92 2 94 2 924 12 1062 2 370 2 1065 2 932 4 1068 2 375 2 786 2 794 2 1073 4 525 2 532 2 806 4 1081 4 950 2 260 2 810 24 1085 2 954 4 543 2 679 2 818 2 1092 2 396 2 398 2 126 2 267 2 553 4 684 2 409 4 557 2 824 2 689 2 561 2 281 2 284 2 286 2 1114 2 287 2 145 4 1118 2 
532 2 1 2 80 2 375 2 981 2 810 4 229 2 86 2 449 2 899 2 631 2 282 2 231 2 16 2 201 2 126 2 890 2 
293 2 979 2 573 2 701 4 981 2 847 2 16 2 990 4 163 2 1001 2 591 4 863 4 717 4 719 4 317 2 455 4 322 6 35 2 326 2 731 2 463 6 466 4 194 2 195 2 197 6 611 4 609 2 613 2 736 2 1025 2 886 2 888 16 890 16 744 2 206 2 1032 2 745 2 619 2 476 2 1033 4 623 4 478 2 1037 4 345 4 899 2 749 2 217 4 901 4 350 2 222 2 904 12 1047 2 355 4 1049 2 641 4 766 6 362 2 644 2 229 2 917 2 915 2 92 4 94 2 924 12 1062 2 370 2 1065 2 932 4 1067 2 1068 2 375 2 786 2 794 2 1073 4 525 2 1079 2 806 4 1081 4 950 4 260 2 810 24 1085 2 954 4 543 2 679 2 818 2 1092 2 396 2 398 2 126 2 267 2 553 4 681 2 684 2 409 4 557 2 824 2 689 2 561 2 281 2 286 2 1114 2 287 2 145 4 
293 2 573 2 701 4 981 4 847 2 16 2 990 4 163 2 586 2 1001 2 591 4 594 2 863 4 717 4 719 4 317 2 455 4 322 6 35 2 326 2 731 2 463 6 466 4 194 2 195 2 197 6 611 4 609 2 613 2 736 2 1025 2 886 2 888 16 890 16 744 2 206 2 745 2 619 2 476 2 1033 4 623 4 478 2 1037 4 345 4 899 2 749 2 217 4 901 4 350 2 222 2 904 12 355 4 1047 2 1049 2 641 4 766 6 362 2 644 2 229 2 86 2 917 2 915 2 92 2 94 2 924 12 1062 2 370 2 1065 2 932 4 1068 2 375 2 786 2 796 2 794 2 1073 4 525 2 532 2 806 4 1081 4 950 2 260 2 810 24 1085 2 954 4 543 2 679 2 818 2 1092 2 396 2 398 2 126 2 267 2 404 2 553 4 684 2 409 4 557 2 824 2 689 2 561 2 281 2 835 2 286 2 1114 2 287 2 145 4 
290 10 292 4 297 2 572 4 299 2 843 2 9 12 575 4 844 2 845 2 11 6 848 2 14 10 581 4 582 6 305 2 850 4 849 2 306 2 583 2 857 24 587 6 21 2 588 6 859 4 591 6 593 2 865 2 866 2 868 10 869 2 599 2 319 6 320 2 871 2 322 6 602 2 31 4 325 10 35 2 606 2 327 2 607 2 876 2 610 6 40 24 609 4 611 4 880 10 612 2 613 2 329 12 331 2 333 4 614 2 881 3 616 6 334 2 50 2 885 2 886 40 336 2 890 34 889 6 891 2 619 14 620 4 622 2 894 4 339 2 625 2 59 2 60 8 63 2 895 16 62 2 64 2 897 2 627 54 68 2 628 2 629 2 72 2 633 6 348 2 902 2 352 4 903 10 634 2 637 2 639 4 905 10 79 2 362 2 644 4 85 2 647 2 913 2 648 3 916 2 915 4 650 6 918 10 921 2 368 2 93 8 925 4 370 4 927 4 928 2 96 2 936 3 97 4 374 4 658 2 938 4 659 26 661 6 664 10 383 2 945 14 665 2 671 2 113 2 115 2 950 26 675 2 118 16 951 18 952 28 954 6 120 6 122 46 679 2 396 2 401 2 958 2 403 2 127 2 962 2 129 16 407 4 409 2 410 2 132 2 133 2 965 8 135 2 414 2 138 2 416 2 691 8 417 2 418 2 420 2 421 2 693 2 972 2 422 2 423 20 694 2 976 26 426 2 145 68 428 4 147 2 699 18 430 2 981 2 434 12 149 4 982 2 152 6 151 2 986 4 153 2 440 2 987 2 157 2 994 2 161 2 160 10 163 2 164 2 168 4 710 26 998 6 999 4 1001 14 713 2 447 18 1005 2 175 2 720 4 722 2 1014 6 450 2 451 2 182 18 181 2 455 4 456 2 459 72 729 2 1020 2 730 4 462 6 193 2 464 3 465 4 195 4 1021 2 197 14 1023 2 470 2 1025 6 1026 10 738 4 472 2 739 4 204 8 1031 6 744 4 476 2 480 48 211 4 209 8 210 2 214 2 1038 2 752 1 487 2 490 2 759 16 1046 4 760 2 493 2 222 2 1049 6 1048 8 496 34 498 1 499 2 765 2 225 6 1052 10 226 2 229 2 1054 2 1055 2 773 2 502 10 1059 2 774 2 233 2 777 2 234 18 238 2 783 2 786 2 788 2 519 4 249 2 1072 18 522 2 793 2 799 18 529 4 530 18 1078 3 535 6 1082 2 259 12 808 6 537 18 810 64 812 4 542 8 814 2 543 2 815 2 264 2 1091 2 544 20 818 2 820 2 821 2 1094 2 822 12 552 2 268 10 270 6 554 2 556 2 555 2 271 42 273 2 274 4 1102 2 275 14 825 6 1107 4 1108 2 278 2 279 2 828 2 564 6 830 4 832 2 285 4 287 2 569 6 1117 2 
290 2 619 2 905 2 193 2 1001 2 464 2 259 2 63 2 895 2 950 2 810 2 783 2 65 2 1052 4 1038 2 866 2 122 6 522 2 181 2 976 2 886 2 456 2 890 2 777 2 
290 2 619 2 905 2 193 2 1001 2 464 2 259 2 63 2 895 2 950 2 810 2 783 2 65 2 1052 4 1038 2 866 2 122 6 522 2 181 2 976 2 886 2 456 2 890 2 777 2 
290 2 619 2 905 2 193 2 1001 2 464 2 259 2 63 2 895 2 950 2 810 2 783 2 65 2 1052 4 1038 2 866 2 122 6 522 2 181 2 976 2 886 2 456 2 890 2 777 2 
699 4 461 2 1048 2 537 4 434 4 950 3 810 10 364 2 955 2 650 2 923 2 51 4 886 2 233 2 890 4 405 2 129 5 407 2 588 2 965 2 999 2 686 2 480 6 377 2 720 2 691 2 830 2 868 3 661 4 423 2 753 2 903 3 181 2 976 3 799 4 1019 2 456 2 1046 2 530 4 323 3 
699 4 1048 2 572 2 434 4 364 2 650 2 923 2 233 2 588 2 999 2 377 2 1070 2 720 2 868 2 661 4 181 2 1019 2 799 4 456 2 323 2 530 4 461 2 950 2 537 4 810 10 955 2 886 2 51 4 890 4 1031 2 405 2 407 2 129 4 965 2 686 2 480 6 691 2 830 2 753 2 423 2 903 2 976 2 1046 2 
699 4 1048 2 572 2 434 4 364 2 650 2 923 2 233 2 588 2 999 2 377 2 1070 2 720 2 868 2 661 4 181 2 1019 2 799 4 456 2 323 2 530 4 461 2 950 2 537 4 810 10 955 2 886 2 51 4 890 4 1031 2 405 2 407 2 129 4 965 2 686 2 480 6 691 2 830 2 753 2 423 2 903 2 976 2 1046 2 
699 4 1048 2 572 2 434 4 364 2 650 2 923 2 233 2 588 2 999 2 377 2 1070 2 720 2 868 2 661 4 181 2 1019 2 799 4 456 2 323 2 530 4 461 2 950 2 537 4 810 10 955 2 886 2 51 4 890 4 1031 2 405 2 407 2 129 4 965 2 686 2 480 6 691 2 830 2 753 2 423 2 903 2 976 2 1046 2 
699 4 1048 2 572 4 434 4 364 2 650 2 923 2 233 2 588 2 999 2 377 2 1070 4 720 2 868 2 661 4 181 2 1019 2 799 4 456 2 323 2 530 4 461 2 950 2 537 4 810 10 955 2 886 2 51 4 890 4 1031 4 405 2 407 2 129 4 965 2 686 2 480 6 691 2 830 2 753 2 423 2 903 2 976 2 1046 2 
1066 2 906 2 6 2 182 2 467 2 785 2 1086 2 
330 2 919 2 834 2 658 2 100 2 1086 2 
148 2 433 2 804 2 878 2 1051 1 810 10 150 2 43 1 771 1 846 2 473 1 992 2 682 2 443 2 890 8 134 2 687 2 315 2 716 2 786 2 1039 2 942 2 179 2 218 2 488 2 570 1 
1048 6 572 3 434 12 810 6 984 2 442 2 48 2 547 1 157 2 922 2 959 2 890 6 889 4 1031 5 406 2 129 15 407 2 894 2 965 6 999 6 937 2 828 2 1070 2 691 6 720 6 830 6 632 2 661 4 285 2 975 4 1046 6 
354 2 699 2 672 2 1106 2 574 2 537 2 864 2 139 2 615 2 852 3 974 2 530 2 256 2 
354 2 699 2 672 2 1106 2 574 2 537 2 810 1 864 2 101 1 139 2 615 2 852 6 503 2 549 2 974 4 256 2 530 2 890 1 
354 4 699 2 672 2 1106 2 574 2 537 2 864 4 139 2 615 2 503 2 852 6 549 2 974 4 530 2 256 4 
354 8 699 2 672 2 1106 2 574 2 537 2 810 1 864 8 101 1 139 2 615 2 503 8 852 10 549 6 974 4 530 2 256 8 890 1 
291 2 2 4 296 6 432 5 983 1 579 2 989 2 851 10 991 10 854 10 993 4 162 4 708 4 169 6 591 112 860 42 714 2 1006 16 173 6 174 6 1010 2 869 8 1015 4 318 10 1018 8 184 2 457 6 604 92 189 8 36 6 877 2 197 248 734 2 45 90 1025 58 47 2 883 6 740 4 335 2 890 134 475 4 618 2 893 2 621 6 57 6 477 42 212 28 1036 5 1040 10 482 17 216 84 483 2 484 26 351 24 74 4 638 4 75 6 492 2 763 8 353 36 1049 58 360 8 908 6 911 6 770 124 644 8 1054 8 646 12 1056 2 915 14 91 4 926 4 370 14 776 8 779 4 236 24 934 35 98 18 660 6 246 16 511 6 248 16 102 8 515 6 516 2 517 18 944 4 105 10 252 4 662 10 798 90 254 24 528 4 946 10 666 2 385 4 258 4 948 6 670 4 114 2 673 4 1083 11 810 150 541 4 391 2 540 6 262 6 813 4 954 88 393 24 397 6 550 12 961 2 683 6 269 8 963 50 410 8 137 4 690 4 560 16 415 6 692 6 1110 24 563 26 1112 6 283 24 973 22 695 4 
353 2 763 6 223 2 296 2 432 2 1049 2 5 2 360 2 436 2 300 2 703 2 770 6 644 2 645 2 1054 2 12 2 772 2 1056 2 88 2 230 2 915 2 304 2 851 2 307 2 991 2 775 2 854 2 706 2 370 2 929 2 591 20 23 2 861 6 660 2 511 2 248 4 1004 2 1006 4 1010 2 103 2 1009 2 869 2 517 2 318 2 105 2 107 2 662 2 454 2 254 2 184 2 946 2 528 2 33 2 605 4 875 2 114 2 877 2 809 2 389 2 674 2 810 46 197 44 262 2 811 2 954 20 1025 2 393 2 883 2 546 4 741 2 890 44 618 2 130 2 410 2 685 2 57 2 411 2 747 2 137 2 343 4 212 38 560 4 67 2 482 2 1040 2 1110 2 1111 2 215 4 419 2 750 2 221 2 75 4 
2 4 296 4 431 2 12 2 989 2 851 4 706 10 854 6 707 2 162 4 858 4 708 4 169 4 591 44 590 4 23 10 860 16 714 2 1006 10 173 4 174 4 1010 2 869 2 176 4 318 4 184 2 457 4 727 2 604 24 877 2 197 104 1025 28 47 2 883 4 740 4 890 70 621 4 57 4 61 16 477 8 479 2 212 14 67 2 482 10 216 24 219 16 638 4 75 2 353 6 763 6 1049 30 908 4 770 24 500 8 911 4 644 2 1054 2 1056 2 915 6 91 4 926 4 370 6 929 2 779 2 236 8 934 30 660 4 246 8 248 10 511 4 941 2 102 4 515 4 790 8 517 10 104 4 105 4 252 4 946 4 384 4 666 2 385 4 948 4 670 4 114 2 673 4 536 32 674 10 810 78 1084 8 540 4 262 4 813 4 954 36 1090 4 397 4 550 14 269 4 963 8 683 4 1098 2 964 4 410 2 560 10 1109 8 692 4 1112 4 
763 4 353 2 296 4 432 2 1049 12 770 8 644 2 1054 2 1056 2 915 2 851 2 926 2 854 2 370 2 776 2 779 2 934 6 591 14 660 4 246 6 511 4 248 6 1006 6 1010 2 869 2 516 2 944 2 517 2 105 2 318 2 184 2 946 2 258 2 385 2 114 2 1083 2 877 2 810 28 391 2 197 40 262 4 734 2 954 14 1025 12 883 4 335 2 890 26 269 4 618 2 130 2 410 2 57 4 212 14 560 6 67 2 482 2 973 10 75 2 492 2 
840 2 

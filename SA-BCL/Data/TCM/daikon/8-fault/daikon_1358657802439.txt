#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V ERROR java.lang.NullPointerException 652 446 318 
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V ERROR java.lang.NullPointerException (123,229) 893 858 
daikon.test.diff.DiffTester:testConditionalPptsTrue()V ERROR java.lang.NullPointerException (123,229) 893 858 
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V ERROR java.lang.NullPointerException (123,229) 893 858 
daikon.test.diff.DiffTester:testPpts1Empty()V ERROR java.lang.NullPointerException (123,229) 893 858 
daikon.test.diff.DiffTester:testPpts1Ppts1()V ERROR java.lang.NullPointerException (123,229) 893 858 
daikon.test.diff.DiffTester:testPpts1Ppts2()V ERROR java.lang.NullPointerException (123,229) 893 858 
daikon.test.diff.DiffTester:testPpts1Ppts3()V ERROR java.lang.NullPointerException (123,229) 893 858 
daikon.test.diff.DiffTester:testInvs1Empty()V ERROR java.lang.NullPointerException (123,229) 893 858 
daikon.test.diff.DiffTester:testInvs1Invs1()V ERROR java.lang.NullPointerException (123,229) 893 858 
daikon.test.diff.DiffTester:testInvs1Invs2()V ERROR java.lang.NullPointerException (123,229) 893 858 
daikon.test.diff.DiffTester:testInvs1Invs3()V ERROR java.lang.NullPointerException (123,229) 893 858 
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NullPointerException (123,229) 893 
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException (123,229) 893 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NullPointerException (123,229) 893 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 8 505 451 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V FAILED junit.framework.AssertionFailedError 801 
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 90 837 989 570 984 
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
utilMDE.OrderedPairIterator:hasNext()Z
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:gte(II)Z
daikon.VarInfoName.NodeFinder:inPre()Z
utilMDE.ArraysMDE:subarray([III)[I
daikon.Quant:pairwiseGT([I[I)Z
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.test.FormatTestCase:passes()Z
daikon.ValueTuple:isMissingNonsensical(I)Z
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
utilMDE.Intern:internSubsequence([III)[I
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.inv.unary.UpperBoundCore:computeProbability()D
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | ASSIGN | 2732 | = null
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.inv.Invariant:prob_and(DDD)D
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.inv.ValueSet:ValueSet(I)V
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.ProglangType:baseIsIntegral()Z
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.Ppt:Ppt()V
daikon.ModBitTracker:split(I)I
daikon.Quant:pairwiseGTE([I[I)Z
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.Intern:internStrings([Ljava.lang.String;)V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.Quant:eltwiseEqual([I)Z
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
jtb.JavaParser:jj_3R_54()Z | STATEMENT | 166542 | stmt -> ;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:isLiteralConstant()Z
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.VarInfo:esc_name()Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Quant:sameLength([I[I)Z
daikon.Quant:eltsGT([II)Z
daikon.inv.Invariant:prob_or(DD)D
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:gt(II)Z
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.Debug:logOn()Z
utilMDE.OrderedPairIterator:setnext1()V
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:intern([I)[I
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.Quant:pairwiseLT([I[I)Z
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
utilMDE.ArraysMDE:fn_inverse([II)[I
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.VarInfoAux:hashCode()I
daikon.ProglangType:dimensions()I
daikon.PptSlice0:initInvariantsSeen()V
utilMDE.FuzzyFloat:FuzzyFloat()V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.Quant:eltsEqual([II)Z
jtb.JavaParser:generateParseException()Ljtb.ParseException;
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:eltsLteIndex([I)Z
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.Quant:lexLT([I[I)Z
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
jtb.JavaCharStream:readChar()C
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.Quant:eltsLTE([II)Z
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.InvMap:InvMap()V
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
utilMDE.ArraysMDE:min([I)I
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.Quant:memberOf(F[F)Z
daikon.Quant:lte(II)Z
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
utilMDE.WeakHasherMap:processQueue()V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:fn_identity(I)[I
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:eltsLtIndex([I)Z
daikon.VarInfo:old_var_names(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:subarray([JII)[J
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
utilMDE.FuzzyFloat:gte(DD)Z
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
utilMDE.LimitedSizeIntSet:add(I)V
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_51()Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.Quant:isReverse([I[I)Z
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.ProglangType:isIntegral()Z
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:lexGTE([I[I)Z
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.simplify.LemmaStack:noticeInt(J)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
utilMDE.ArraysMDE:sum([I)I
daikon.Quant:pairwiseDivides([I[I)Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.ValueTuple:isMissing(I)Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
utilMDE.MathMDE:gcd(II)I
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.Debug:logDetail()Z
daikon.Quant:setDiff([I[I)[I
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I | STATEMENT | 46499 | stmt -> ;
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
utilMDE.OrderedPairIterator:setnext2()V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.inv.unary.UpperBoundCore:computeConfidence()D
utilMDE.MathMDE:mod_positive(JJ)J
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:hashCode()I
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.ValueTuple:isMissingFlow(I)Z
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.FuzzyFloat:ne(DD)Z
daikon.diff.Node:Node()V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.config.Configuration:apply(Ljava.lang.String;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
jtb.JavaParser:jj_3_1()Z
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
jtb.JavaParser:jj_2_1(I)Z
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
utilMDE.FuzzyFloat:eq(DD)Z
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.ProglangType:baseIsFloat()Z
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE:negate(I)I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarInfoName:repr()Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V | CONDITION | 32424 | if (x) -> if (!x)
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.ValueTuple:size()I
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.inv.filter.ObviousFilter:ObviousFilter()V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.Quant:lexEqual([I[I)Z
daikon.Quant:subsetOf([B[I)Z
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:concat([I[I)[I
daikon.inv.Invariant:justified()Z
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.Quant:memberOf(D[F)Z
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
jtb.JavaParser:jj_3R_49()Z
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
jtb.Token:newToken(I)Ljtb.Token;
daikon.Quant:eltsLT([II)Z
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.Invariant:isWorthPrinting()Z
utilMDE.MathMDE:gcd_differences([I)I
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.VarInfoName.Add:amount()Ljava.lang.String;
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
utilMDE.ArraysMDE:element_range([I)I
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.ModBitTracker:num_vars()I
daikon.Quant:slice([III)[I
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
utilMDE.ArraysMDE:indexOf([II)I
jtb.JavaCharStream:backup(I)V
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:lte(DD)Z
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.VarInfo:jml_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.Quant:subsetOf([D[F)Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.FuzzyFloat:gt(DD)Z
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode; | ASSIGN | 22225 | = null
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.ParseException:getMessage()Ljava.lang.String;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.test.InvariantFormatTester:execute()Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaCharStream:GetImage()Ljava.lang.String;
utilMDE.WeakHasherMap:size()I
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.Quant:noDups([I)Z
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.Quant:memberOf(J[J)Z
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.Quant:eq(II)Z
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaCharStream:getBeginLine()I
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.Quant:subsetOf([F[F)Z
daikon.PptName:isCombinedExitPoint()Z
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice1:arity()I
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.Quant:eq(DD)Z
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
jtb.JavaParser:jj_3R_48()Z
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.PptSlice1:num_samples()I
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.Quant:eltwiseLT([I)Z
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.MathMDE:gcd(JJ)J
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
jtb.JavaParser:jj_ntk()I
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfo:name()Ljava.lang.String;
jtb.JavaParser:jj_scan_token(I)Z
daikon.inv.Invariant:prob_and(DD)D
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.ProglangType:baseIsScalar()Z
daikon.inv.filter.InvariantFilters:InvariantFilters()V
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.Quant:lexGT([I[I)Z
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.test.TestQuant:removeAdjacentDups([I)[I
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.Quant:eltsNotEqual([II)Z
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String; | RETURN | 51684 | return null
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.PptName:isEnterPoint()Z
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.Quant:concat([I[I)[I
daikon.Quant:subsetOf([I[I)Z
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:sum([D)D
utilMDE.ArraysMDE:sum([[I)I
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:sorted([I)Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
utilMDE.MathMDE:gcd([I)I
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.ProglangType:isScalar()Z
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.Quant:pairwiseEqual([I[I)Z
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
utilMDE.Intern:intern([J)[J
daikon.Quant:memberOf(S[S)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.ProglangType:isFloat()Z
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:pairwiseLTE([I[I)Z
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:subsetOf([F[D)Z
utilMDE.LimitedSizeIntSet:size()I
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
utilMDE.SimpleLog.LongVal:LongVal(J)V
utilMDE.Intern:intern([D)[D
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
jtb.JavaCharStream:getEndLine()I
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
utilMDE.Intern:internSubsequence([JII)[J
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:eltwiseNotEqual([I)Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE:mod_positive(II)I
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.Quant:union([I[I)[I
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.Quant:memberOf(I[I)Z
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
utilMDE.Intern:numIntArrays()I
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.PptSlice2:arity()I
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarComparabilityImplicit:alwaysComparable()Z
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.diff.Node:children()Ljava.util.Iterator;
utilMDE.ArraysMDE:indexOf([I[I)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.Quant:subsetOf([J[J)Z
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:min_max([I)[I
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
jtb.JavaParser:jj_3R_52()Z
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfo:java_name()Ljava.lang.String;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.Quant:lexLTE([I[I)Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:eltsGteIndex([I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
jtb.JavaCharStream:BeginToken()C
utilMDE.MathMDE:pow_fast(II)I
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.Quant:eq(JJ)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.inv.Invariant:logOn()Z
daikon.PptSlice0:arity()I
utilMDE.MathMDE:missing_numbers([I)[I
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.Quant:eltsGtIndex([I)Z
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.Quant:eltsGTE([II)Z
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.UpperBoundCore:calc_modulus()J
utilMDE.Options.OptionInfo:argument_required()Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
daikon.Quant:lexNotEqual([I[I)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String; | RETURN | 15328 | return null
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltwiseLTE([I)Z
jtb.syntaxtree.NodeOptional:NodeOptional()V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.inv.Invariant:logDetail()Z
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.ModBitTracker:num_sets()I
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.Quant:setEqual([I[I)Z
daikon.Quant:ne(II)Z
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.Quant:subsetOf([D[D)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.ParseException:ParseException(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.diff.Node:add(Ljava.lang.Object;)V
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeToken:trimSpecials()V
utilMDE.MathMDE:sign(I)I
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoName:name()Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.Quant:intersection([I[I)[I
utilMDE.FuzzyFloat:lt(DD)Z
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_2_16(I)Z
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.Quant:memberOf(F[D)Z
daikon.inv.Invariant:getConfidence()D
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
utilMDE.ArraysMDE:max([I)I
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.diff.RootNode:RootNode()V
daikon.Quant:pairwiseSquare([I[I)Z
daikon.Quant:lt(II)Z
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.ModBitTracker:ModBitTracker(I)V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
utilMDE.MathMDE:pow(II)I
utilMDE.ArraysMDE:sum([[D)D
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.inv.Invariants:Invariants()V
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
jtb.JavaParser:jj_3R_53()Z
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:subsetOf([S[S)Z
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaCharStream:getBeginColumn()I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
jtb.JavaParser:jj_3R_50()Z
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfo:relate_var()V
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltwiseGTE([I)Z
daikon.Quant:eltsEqualIndex([I)Z
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
jtb.JavaCharStream:getEndColumn()I
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([I)Z
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaCharStream:ReadByte()C
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.Quant:eq(FF)Z
jtb.JavaParser:jj_3_16()Z
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfo:esc_name(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
utilMDE.MathMDE:modulus([I)[I
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.Quant:eltwiseGT([I)Z
jtb.JavaParser:jj_3R_47()Z
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.ProglangType:isArray()Z
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.ProglangType:isPseudoArray()Z
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Assert:assertTrue(Z)V
daikon.ModBitTracker:num_samples()I
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
jtb.JavaCharStream:FillBuff()V
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:new_ppt()V
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.filter.InvariantFilter:InvariantFilter()V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
684 2 72 2 157 2 608 4 987 2 445 2 402 2 201 2 489 2 
0 2 321 2 94 6 432 2 255 6 288 2 842 2 248 2 295 2 872 6 235 2 
338 2 120 4 881 6 518 2 987 2 694 6 956 2 714 6 754 2 172 2 157 2 330 6 88 4 
824 29 298 8 167 10 764 12 240 10 4 4 397 10 575 6 605 4 369 10 606 10 983 8 647 4 373 26 582 8 13 2 674 4 947 16 618 2 184 2 987 6 96 6 755 8 624 2 157 6 25 2 66 2 846 16 364 2 197 16 
581 6 113 4 
169 2 
236 2 661 2 797 2 725 2 664 2 931 2 109 4 601 2 489 2 861 2 604 2 936 2 667 2 435 2 174 2 314 2 372 2 876 2 878 2 676 4 560 2 559 2 378 2 501 2 502 2 20 2 563 2 887 2 816 4 256 2 193 2 686 2 25 2 386 4 77 2 462 2 908 2 706 2 406 2 146 2 987 4 157 4 158 2 847 2 
824 54 238 8 596 2 137 2 167 16 640 6 139 4 764 22 897 6 240 6 397 16 575 4 369 16 606 16 771 4 56 2 983 6 466 2 612 4 373 48 33 6 523 6 838 4 674 2 880 4 947 32 412 2 618 2 987 4 285 4 96 4 755 18 157 4 511 2 846 32 293 6 568 6 197 32 966 4 
256 2 142 2 539 2 
278 10 851 2 392 2 885 2 435 2 309 22 413 2 210 2 7 2 381 2 175 2 195 2 775 2 521 2 
824 6 50 2 420 2 167 2 764 2 240 4 397 2 369 2 606 2 373 4 674 2 648 2 947 2 529 2 129 2 223 2 96 2 755 2 564 2 819 2 846 2 454 2 197 2 
33 6 373 12 824 16 709 2 947 8 167 4 139 4 764 4 897 6 397 4 369 4 606 4 846 8 647 2 909 2 966 4 197 8 
823 2 424 2 639 4 368 4 243 10 204 2 902 2 698 2 142 4 494 2 705 2 777 2 707 2 318 2 320 2 676 2 16 2 378 2 652 2 326 2 282 6 886 2 993 2 446 2 256 6 22 2 963 2 845 2 818 30 415 2 539 2 723 2 567 2 
760 2 169 2 802 2 741 2 611 2 11 2 945 2 328 2 291 2 231 2 
483 2 105 1 484 1 108 2 597 2 732 3 854 16 239 2 857 2 598 3 600 3 599 2 860 1 862 1 744 2 371 2 609 2 495 2 874 2 118 2 747 1 121 1 752 8 884 2 890 4 512 2 625 4 513 1 384 4 132 2 26 8 759 2 514 12 763 2 634 1 395 2 391 5 638 1 140 2 29 2 766 2 519 16 901 2 268 1 269 2 776 3 271 2 273 4 405 2 34 2 277 2 525 2 148 2 149 2 526 3 38 2 653 2 787 2 151 2 654 2 283 2 41 4 918 1 42 1 922 2 287 2 533 2 534 2 157 34 43 2 536 2 160 8 47 32 540 2 294 3 794 1 49 6 544 2 799 2 166 2 52 6 800 2 427 2 428 2 433 2 666 2 935 1 305 2 171 2 549 2 943 2 179 2 677 2 180 2 325 6 442 24 187 4 443 3 188 2 684 2 62 1 192 4 332 3 452 2 687 32 67 4 822 2 569 2 456 2 691 2 968 2 200 2 571 2 203 2 828 2 696 2 973 6 464 3 975 16 205 24 207 3 84 2 85 2 978 2 981 2 213 16 354 2 91 2 708 3 93 2 711 2 220 2 987 32 358 2 840 2 990 3 95 2 995 2 843 2 996 2 716 1 479 2 593 2 722 2 101 2 234 2 999 2 
157 2 472 2 
157 4 37 2 516 2 
81 2 
296 2 662 10 853 4 1 2 929 18 168 2 932 14 426 2 244 6 110 2 490 2 307 2 938 10 493 2 743 2 672 6 115 2 941 50 942 2 253 18 374 2 439 2 376 2 377 8 558 4 440 10 125 2 59 2 617 2 950 4 951 50 679 14 680 2 327 4 953 2 18 2 620 14 503 6 959 2 889 2 627 2 892 2 65 2 453 10 28 4 515 20 261 2 387 14 136 50 970 2 827 2 972 2 765 6 898 14 767 10 206 2 900 2 346 8 899 14 577 4 701 4 704 14 357 2 785 8 527 8 280 4 39 2 991 2 156 2 920 2 474 14 715 8 844 2 227 10 592 4 481 2 925 6 362 14 791 4 233 14 792 2 659 8 102 14 
119 1 904 2 465 2 79 2 
465 2 336 2 
829 2 850 2 256 2 465 2 645 2 528 2 4 2 
465 2 645 2 812 2 
465 2 645 2 548 2 
211 2 79 2 813 2 
465 2 645 2 
124 2 813 2 
465 2 530 2 
79 2 573 2 813 2 
2 2 79 2 99 2 
603 2 86 2 79 2 
5 2 165 2 79 2 
866 2 54 2 79 2 
60 2 813 2 
636 2 465 2 
497 2 2 2 
790 2 86 2 
165 2 971 2 
866 2 927 2 
928 2 813 2 
702 2 866 2 
165 2 733 2 
86 2 128 2 
2 2 182 2 
347 2 79 2 573 2 813 2 
779 2 347 2 79 2 573 2 813 2 
237 2 79 2 813 2 
865 2 79 2 813 2 
12 2 242 2 789 2 313 2 
829 2 256 2 547 2 352 2 
829 2 256 2 643 2 528 2 547 2 352 2 
829 2 256 2 250 2 465 2 645 2 4 2 
936 2 459 2 
829 2 256 2 383 2 4 2 
165 2 80 2 
866 2 735 2 
2 2 363 2 
147 2 86 2 
134 2 866 2 86 2 
693 2 866 2 86 2 
522 2 86 2 866 2 
86 2 866 2 219 2 
829 2 208 2 252 6 407 2 748 2 284 2 256 2 962 6 
891 2 813 2 
199 2 710 2 896 2 355 2 164 2 949 2 855 2 488 4 463 2 576 2 476 2 309 6 669 4 817 2 348 2 607 2 404 2 793 2 
510 2 79 2 
239 2 
852 2 486 2 599 2 859 2 245 2 118 2 884 2 752 2 753 2 890 4 512 2 625 2 384 4 759 2 514 8 638 2 29 2 140 2 269 2 774 2 271 2 273 4 38 2 787 2 151 2 41 2 918 2 922 2 921 2 534 2 157 26 43 2 290 2 47 6 49 2 799 2 52 6 425 2 433 2 305 2 171 2 179 2 180 2 325 4 684 2 449 2 960 4 192 4 63 4 820 2 687 4 67 2 822 2 571 6 695 2 973 2 831 2 579 2 981 2 213 6 467 2 93 2 987 26 220 2 358 2 840 4 95 2 586 2 995 2 996 2 722 2 593 2 101 2 234 2 
852 2 486 2 857 2 599 2 859 2 602 2 245 2 495 2 118 2 884 2 752 2 753 2 890 4 512 2 625 2 384 4 759 2 514 8 638 2 396 2 29 2 140 2 269 2 271 2 273 4 38 2 787 2 151 2 41 2 918 2 922 2 921 2 534 2 157 26 43 2 47 6 540 2 49 2 799 2 52 6 425 2 433 2 305 2 171 2 306 2 179 2 180 2 325 6 684 2 449 2 960 4 192 4 63 4 820 2 687 4 67 2 822 2 571 6 973 2 831 2 579 2 981 2 213 6 467 2 93 2 987 26 220 2 358 2 840 4 95 2 586 2 995 2 996 2 722 2 593 2 101 2 234 2 
655 2 
718 2 869 2 
660 4 543 2 0 2 726 8 52 4 858 2 432 2 864 4 248 2 551 6 939 2 552 2 57 2 177 2 316 2 872 4 557 6 123 2 321 2 17 2 884 2 561 2 255 4 890 2 512 2 964 2 384 2 821 2 893 2 759 2 822 2 566 2 133 2 388 2 637 2 389 2 342 2 29 2 836 2 468 2 279 4 356 2 987 6 94 4 150 2 151 2 587 2 841 4 225 2 157 8 590 2 477 2 229 2 417 2 292 2 418 2 722 2 48 2 
660 4 0 2 726 8 52 4 858 2 432 2 864 4 738 4 248 2 551 6 939 2 552 2 57 2 177 2 316 2 872 6 807 2 556 2 557 6 123 2 321 2 17 2 884 2 561 2 255 6 890 2 512 2 964 2 384 2 821 2 893 2 759 2 822 2 566 2 133 2 388 2 637 2 389 2 342 2 29 2 836 2 468 2 279 4 356 2 987 6 150 2 94 4 151 2 587 2 842 2 841 4 225 2 157 8 590 2 229 2 417 2 292 2 418 2 722 2 48 2 
660 2 836 2 0 2 468 2 123 2 321 2 637 2 279 4 858 2 150 2 94 2 255 2 864 4 417 2 939 2 893 2 48 2 566 2 
660 4 543 2 0 2 726 6 52 4 858 2 432 2 864 4 551 4 939 2 552 2 57 2 177 2 316 2 872 4 557 4 123 2 321 2 17 2 884 2 561 2 255 4 890 2 512 2 964 2 384 2 821 2 893 2 759 2 822 2 566 2 133 2 388 2 637 2 389 2 342 2 29 2 836 2 468 2 279 4 356 2 987 6 94 2 150 2 151 2 587 2 842 2 841 4 225 2 157 8 590 2 477 2 229 2 417 2 292 2 418 2 722 2 48 2 
660 4 543 2 0 2 726 6 52 4 858 2 432 2 864 4 551 4 939 2 552 2 57 2 177 2 316 2 872 4 557 4 123 2 321 2 17 2 884 2 561 2 255 2 890 2 512 2 964 2 384 2 821 2 893 2 759 2 822 2 566 2 133 2 388 2 637 2 389 2 342 2 29 2 836 2 468 2 279 4 356 2 987 6 94 4 150 2 151 2 587 2 841 4 225 2 157 8 590 2 477 2 229 2 417 2 292 2 418 2 722 2 48 2 235 2 
660 4 543 2 0 2 726 6 52 4 858 2 432 2 864 4 248 2 551 6 939 2 552 2 57 2 177 2 316 2 872 4 557 4 123 2 321 2 17 2 884 2 561 2 255 4 890 2 512 2 964 2 384 2 821 2 893 2 759 2 822 2 566 2 133 2 388 2 637 2 389 2 342 2 29 2 836 2 468 2 279 4 356 2 987 6 94 4 150 2 151 2 587 2 841 4 225 2 157 8 590 2 477 2 229 2 417 2 292 2 418 2 722 2 48 2 
660 4 543 2 0 2 726 8 52 4 858 2 432 2 864 4 248 2 551 6 939 2 552 2 57 2 177 2 316 2 872 6 557 6 123 2 321 2 17 2 884 2 561 2 255 4 890 2 512 2 964 2 384 2 821 2 893 2 759 2 822 2 566 2 133 2 388 2 637 2 389 2 342 2 29 2 836 2 468 2 279 4 356 2 987 6 94 6 150 2 151 2 587 2 841 4 225 2 157 8 590 2 477 2 229 2 417 2 292 2 418 2 722 2 48 2 235 2 
660 4 543 2 0 2 726 8 52 4 858 2 432 2 864 4 248 2 551 6 939 2 552 2 57 2 177 2 316 2 872 4 557 6 123 2 321 2 17 2 884 2 561 2 255 4 890 2 512 2 964 2 384 2 821 2 893 2 759 2 822 2 566 2 133 2 388 2 637 2 389 2 342 2 29 2 836 2 468 2 279 4 356 2 987 6 94 4 150 2 151 2 587 2 841 4 225 2 157 8 590 2 477 2 229 2 417 2 292 2 418 2 722 2 48 2 
104 2 366 2 106 6 0 2 726 2 367 2 730 2 486 4 856 6 858 2 599 2 370 1 864 4 249 2 491 1 492 6 745 6 495 2 872 6 122 2 123 2 126 6 17 2 752 2 751 2 884 2 19 1 507 6 255 2 890 4 512 2 23 2 384 4 893 2 759 2 514 2 516 6 133 2 135 2 762 2 633 2 388 2 637 2 389 4 140 2 29 2 644 7 520 1 271 2 273 4 32 2 279 4 150 2 151 2 922 2 921 2 534 2 657 2 157 40 43 2 417 2 47 8 292 2 418 4 540 2 48 2 660 4 543 2 49 2 799 2 663 2 52 6 299 6 422 2 425 2 55 2 432 2 304 2 170 2 305 2 171 2 803 2 804 2 308 8 436 2 311 2 805 2 312 2 551 2 553 6 552 2 939 2 57 2 177 2 316 2 944 2 675 2 321 2 441 1 325 6 561 2 447 2 684 2 449 2 685 2 63 4 192 4 964 2 821 2 687 2 566 2 822 2 337 1 457 6 571 6 342 2 202 2 973 2 81 6 82 2 830 2 349 6 981 2 213 6 353 4 836 2 580 1 468 2 93 12 356 2 987 24 94 4 358 2 472 6 994 2 587 4 588 1 224 1 995 2 841 4 996 2 225 2 590 2 98 6 229 2 719 6 721 10 722 2 101 2 234 2 1000 7 103 2 482 6 235 2 
104 2 366 2 106 6 0 2 726 2 367 2 730 2 486 4 856 6 858 2 599 2 864 4 249 2 248 2 492 6 745 6 495 2 872 6 122 2 123 2 126 6 17 2 752 2 751 2 884 2 507 6 255 4 890 4 512 2 23 2 384 4 893 2 759 2 514 4 516 6 133 2 135 2 762 2 633 2 388 2 637 2 389 4 140 2 29 2 271 2 273 4 32 2 279 4 150 2 151 2 922 2 921 2 534 2 657 2 157 42 43 2 417 2 47 8 292 2 418 4 540 2 48 2 660 4 543 2 49 2 799 2 663 2 421 2 52 6 299 6 422 2 425 2 55 2 432 2 304 2 170 2 305 2 171 2 803 2 804 2 308 8 436 2 311 2 805 2 312 2 551 4 553 6 552 2 939 2 57 2 177 2 316 2 944 2 675 2 321 2 325 6 561 2 447 2 684 2 449 2 61 2 685 2 63 4 192 4 964 2 821 2 687 2 566 2 822 2 457 6 571 6 342 2 202 2 973 2 81 6 82 2 830 2 349 6 981 2 213 6 353 4 836 2 468 2 93 12 356 2 987 26 94 4 358 2 840 2 472 6 994 2 587 4 995 2 841 4 996 2 225 2 590 2 98 6 229 2 719 6 721 10 722 2 101 2 234 2 103 2 482 6 
104 2 366 2 106 6 0 2 367 2 726 4 730 2 486 4 856 6 858 2 599 2 864 4 249 2 248 2 492 6 745 6 872 6 495 2 122 2 123 2 126 6 17 2 752 2 751 2 884 2 507 6 255 4 890 4 512 2 23 2 384 4 893 2 759 2 514 4 516 6 133 2 135 2 762 2 633 2 388 2 637 2 389 4 140 2 29 2 271 2 273 4 32 2 279 4 150 2 151 2 922 2 921 2 534 2 657 2 157 42 43 2 417 2 47 8 292 2 418 4 540 2 48 2 660 4 543 2 49 2 799 2 663 2 421 2 52 6 299 6 422 2 425 2 55 2 432 2 304 2 170 2 305 2 171 2 803 2 804 2 308 8 436 2 311 2 805 2 312 2 551 4 553 6 552 2 939 2 57 2 177 2 316 2 944 2 557 2 675 2 321 2 325 6 561 2 447 2 684 2 449 2 61 2 685 2 63 4 192 4 964 2 821 2 687 2 566 2 822 2 457 6 571 6 342 2 202 2 973 2 81 6 82 2 830 2 349 6 981 2 213 6 353 4 836 2 468 2 93 12 356 2 987 26 94 4 358 2 840 2 472 6 994 2 587 4 995 2 841 4 996 2 225 2 590 2 98 6 229 2 719 6 721 10 722 2 101 2 234 2 103 2 482 6 
104 2 366 2 106 6 0 2 367 2 726 4 731 6 730 2 486 4 856 6 858 2 599 2 864 4 740 6 249 2 248 2 492 12 745 6 872 6 495 2 614 6 122 2 123 2 126 6 17 2 752 4 751 2 884 2 507 12 255 4 756 2 257 6 890 4 512 2 23 2 384 4 260 2 27 6 893 2 759 2 514 6 516 12 133 2 135 2 762 2 633 2 265 2 388 2 637 2 389 4 140 2 29 2 271 2 272 2 273 4 32 2 410 6 279 4 150 2 151 2 922 2 921 2 286 2 534 2 657 2 157 46 43 2 417 2 47 12 292 2 418 4 540 2 48 2 660 4 543 2 49 4 799 2 663 2 421 2 52 6 299 6 422 2 425 2 55 2 432 2 304 2 170 2 305 2 171 2 803 2 804 2 308 8 436 2 805 2 312 2 551 4 553 6 552 2 939 2 176 6 57 2 177 2 316 2 944 2 557 2 675 2 321 2 948 2 325 6 561 2 447 2 684 2 449 4 61 2 685 2 63 6 192 4 964 2 821 2 687 4 566 2 822 2 196 2 457 6 967 2 75 6 571 8 342 2 202 2 973 4 81 12 82 2 830 2 349 6 981 2 212 6 213 8 353 4 836 2 468 2 93 10 356 2 987 24 94 4 358 2 840 2 472 12 994 2 587 4 995 2 841 4 996 2 225 2 590 2 98 12 229 2 721 8 719 6 722 2 101 2 234 2 103 2 482 6 
543 2 0 2 726 2 388 2 637 2 342 2 432 2 864 2 248 2 551 4 552 2 939 2 872 2 836 2 557 2 468 2 321 2 279 2 356 2 17 2 150 2 94 4 561 2 255 4 841 2 225 2 590 2 417 2 566 2 133 2 
0 2 726 2 239 2 486 2 599 2 864 2 248 2 872 2 495 2 17 2 884 2 255 4 890 4 512 2 384 4 759 2 133 2 388 2 637 2 394 2 140 2 29 2 271 2 273 4 279 2 150 2 151 2 283 2 922 2 921 2 534 2 533 2 157 24 43 2 417 2 47 8 292 2 540 2 543 2 49 3 799 2 51 2 52 6 425 2 427 2 432 2 171 2 305 2 311 2 551 4 939 2 552 2 321 2 325 6 952 2 561 2 684 2 192 4 63 4 687 3 822 2 566 2 70 2 340 2 571 6 342 2 973 3 213 6 836 2 468 2 93 4 356 2 987 24 94 4 358 2 841 2 995 2 996 2 225 2 590 2 591 3 721 2 722 2 101 2 234 2 
487 2 17 2 163 2 
487 2 17 2 163 2 
0 2 726 4 486 2 599 2 864 2 248 2 495 2 872 6 879 2 123 2 498 2 17 2 884 2 255 6 890 4 512 2 384 4 893 2 759 2 29 2 140 2 271 2 273 4 279 2 150 4 151 2 922 2 921 2 534 2 157 14 43 2 47 2 417 2 540 2 660 2 799 2 52 6 425 2 432 2 305 2 171 2 551 4 557 4 321 2 811 2 325 6 684 2 192 4 687 2 822 2 69 2 73 2 571 2 342 2 209 2 213 2 836 2 93 2 987 14 358 2 94 6 842 2 841 2 996 2 226 2 722 2 101 2 234 2 235 2 
104 2 914 2 93 2 460 2 856 2 78 2 987 2 769 2 170 2 739 2 157 4 718 2 721 2 722 2 353 2 48 2 873 2 
0 2 726 4 486 2 599 2 864 2 248 2 495 2 872 6 879 2 123 2 498 2 17 2 884 2 255 6 890 4 512 2 384 4 893 2 759 2 29 2 140 2 905 2 271 2 273 4 783 2 279 2 150 4 151 2 922 2 921 2 534 2 157 14 43 2 47 2 417 2 540 2 660 2 799 2 52 6 425 2 432 2 305 2 171 2 551 4 557 4 321 2 811 2 325 6 684 2 192 4 687 4 822 2 69 2 73 4 571 2 342 2 209 2 213 2 836 2 93 2 987 14 358 2 94 6 842 2 841 2 996 2 226 2 722 2 101 2 234 2 235 2 
0 2 726 4 486 2 599 2 864 2 248 2 495 2 872 6 879 2 123 2 498 2 17 2 884 2 255 6 890 4 512 2 384 4 893 2 759 2 29 2 140 2 271 2 273 4 279 2 150 4 151 2 922 2 921 2 534 2 157 14 43 2 47 2 417 2 540 2 660 2 799 2 52 6 425 2 432 2 305 2 171 2 551 4 557 4 321 2 811 2 325 6 684 2 192 4 687 2 822 2 69 2 73 2 571 2 342 2 209 2 213 2 836 2 93 2 987 14 358 2 94 6 842 2 841 2 996 2 226 2 722 2 101 2 234 2 235 2 
595 2 727 2 729 1 486 2 730 2 369 2 245 4 606 2 6 2 8 2 116 2 494 2 10 4 610 4 495 2 373 6 14 2 122 2 616 2 500 2 882 2 883 4 752 6 884 2 254 2 505 2 21 2 755 4 509 2 511 4 890 4 258 2 757 2 512 2 626 2 384 4 628 2 759 2 514 16 633 2 264 2 393 2 266 2 394 2 764 4 29 2 141 2 267 2 397 2 398 2 400 12 401 6 145 2 31 2 271 2 273 2 33 6 274 2 409 12 913 2 649 2 915 6 650 2 281 2 151 2 154 2 923 2 922 2 921 2 157 28 657 2 43 2 415 2 47 16 161 6 540 2 541 2 542 2 49 6 799 2 52 6 930 2 167 2 430 4 305 2 803 2 937 2 317 2 555 2 947 4 326 2 183 2 325 4 952 2 683 4 684 2 190 2 449 6 815 2 961 4 450 2 685 2 451 2 192 2 63 8 194 2 688 2 687 6 822 2 197 4 966 4 70 2 198 6 824 8 969 4 340 2 76 4 571 10 574 2 973 6 974 2 345 4 700 2 976 2 981 2 350 2 834 2 213 10 215 2 89 14 93 2 712 2 987 22 358 2 222 4 473 2 994 2 995 2 996 2 997 2 591 2 998 2 361 4 232 2 846 4 722 2 234 2 101 2 
49 3 571 2 546 2 973 3 434 2 665 2 112 2 213 2 912 2 986 2 987 2 471 2 955 2 449 6 995 2 191 2 157 2 63 2 480 3 538 4 47 2 24 2 100 2 687 3 
49 2 571 2 546 2 973 2 434 2 665 2 112 2 213 2 912 2 986 2 987 2 471 2 955 2 449 6 995 2 191 2 157 2 63 2 480 2 538 4 47 2 24 2 100 2 687 2 
49 2 571 2 546 2 973 2 434 2 665 2 112 2 213 2 912 2 986 2 987 2 471 2 955 2 449 6 995 2 191 2 157 2 63 2 480 2 538 4 47 2 24 2 100 2 687 2 
263 2 824 6 825 2 107 2 339 4 297 2 390 2 167 2 397 2 973 3 575 2 369 2 434 2 975 2 606 2 519 2 578 6 980 2 983 4 906 2 907 3 870 4 117 4 373 4 276 2 15 2 947 2 987 4 444 3 786 2 958 2 508 4 995 2 157 10 47 2 687 3 846 2 565 3 690 4 197 2 
263 2 824 4 825 2 107 2 339 4 297 2 390 2 167 2 764 2 397 2 973 2 575 2 369 2 434 2 975 2 606 2 519 2 578 6 980 2 983 4 906 2 907 2 870 4 117 4 373 4 276 2 15 2 947 2 618 2 987 4 444 2 786 2 958 2 508 4 755 2 995 2 157 10 47 2 687 2 846 2 565 2 690 4 197 2 
263 2 824 4 825 2 107 2 339 4 297 2 390 2 167 2 764 2 397 2 973 2 575 2 369 2 434 2 975 2 606 2 519 2 578 6 980 2 983 4 906 2 907 2 870 4 117 4 373 4 276 2 15 2 947 2 618 2 987 4 444 2 786 2 958 2 508 4 755 2 995 2 157 10 47 2 687 2 846 2 565 2 690 4 197 2 
263 2 824 4 825 2 107 2 339 4 297 2 390 2 167 2 764 2 397 2 973 2 575 2 369 2 434 2 975 2 606 2 519 2 578 6 980 2 983 4 906 2 907 2 870 4 117 4 373 4 276 2 15 2 947 2 618 2 987 4 444 2 786 2 958 2 508 4 755 2 995 2 157 10 47 2 687 2 846 2 565 2 690 4 197 2 
263 2 824 4 825 2 107 2 339 4 297 2 390 2 167 2 764 4 397 2 973 2 575 2 369 2 434 2 975 2 606 2 519 2 578 6 980 2 983 4 906 2 907 2 870 4 117 4 373 4 276 2 15 2 947 2 618 4 987 4 444 2 786 2 958 2 508 4 755 4 995 2 157 10 47 2 687 2 846 2 565 2 690 4 197 2 
448 2 703 2 500 2 186 2 143 2 506 2 
780 2 631 2 245 2 737 2 36 2 143 2 801 2 
365 2 728 2 53 2 241 2 246 2 668 1 868 2 9 2 270 2 705 1 496 1 554 2 911 2 275 2 808 2 987 8 988 2 884 2 916 2 886 1 507 2 157 10 331 2 360 2 382 2 385 1 
797 2 824 16 238 2 969 2 393 2 167 6 764 4 642 2 397 6 575 2 369 6 606 6 700 2 771 2 983 4 908 2 835 2 33 4 373 12 58 2 92 2 947 6 987 6 618 2 755 2 157 6 846 6 568 4 197 6 966 2 
826 2 138 2 584 2 987 1 470 2 40 2 934 4 399 2 157 1 832 2 658 2 742 1 64 2 230 7 870 2 117 2 68 2 690 2 
826 2 138 2 584 2 470 4 40 4 399 2 934 4 832 2 658 4 64 2 230 6 870 2 117 2 68 2 690 2 
826 2 138 6 584 2 987 1 470 8 40 8 399 8 934 4 157 1 832 2 658 8 742 1 64 2 230 10 870 2 117 2 68 2 690 2 
826 2 584 2 470 2 40 2 934 2 832 2 658 2 64 2 230 2 870 2 117 2 68 2 690 2 
848 28 485 4 3 6 863 6 247 4 867 2 746 2 871 10 495 58 875 16 375 8 877 10 749 24 750 6 499 17 130 6 621 2 504 8 623 12 380 5 131 10 259 16 758 10 629 10 630 6 262 90 632 4 517 6 770 4 903 4 30 2 773 6 646 2 403 8 144 92 273 112 778 4 408 8 781 84 782 4 35 6 411 11 155 6 919 2 532 8 535 4 157 150 656 42 159 2 45 4 46 10 416 6 924 50 540 58 162 2 926 4 795 6 796 4 798 4 799 14 300 26 545 6 303 2 429 1 431 4 305 14 310 24 550 124 173 24 671 2 806 2 673 4 809 6 678 2 810 16 322 2 324 24 323 4 181 8 325 248 185 6 681 4 957 8 682 90 814 18 192 88 333 2 334 4 689 4 455 6 570 2 71 16 458 22 341 4 572 6 461 4 344 6 697 42 83 26 699 4 977 6 979 4 984 2 982 6 351 18 87 8 214 36 985 10 216 2 837 12 217 24 90 34 218 4 839 10 583 4 469 8 987 134 989 2 992 2 475 4 97 8 717 2 589 24 359 6 478 6 228 6 101 8 724 6 
848 38 419 2 799 2 302 2 303 2 933 2 111 2 736 2 863 2 305 2 310 2 251 2 550 6 173 2 114 4 673 2 940 2 871 2 495 2 613 2 875 4 375 6 319 2 946 2 877 2 615 2 749 2 810 4 499 2 127 2 323 2 325 44 379 2 185 2 619 2 954 2 621 2 130 2 329 2 622 2 189 2 814 2 380 2 888 2 131 2 192 20 259 4 758 2 965 2 335 2 629 2 630 4 570 2 761 2 895 2 692 2 635 2 343 2 344 2 768 2 772 4 773 2 833 2 984 2 87 2 214 2 985 2 273 20 408 2 839 2 524 2 784 4 651 2 987 44 989 2 585 2 221 6 153 2 788 4 713 2 532 2 97 2 289 2 717 2 157 46 46 2 44 2 720 2 540 2 594 2 101 2 724 2 
848 14 849 8 3 2 734 2 111 2 871 2 495 6 875 4 750 2 499 6 259 4 758 2 630 2 894 2 770 2 144 6 273 20 910 2 781 6 782 2 35 2 152 2 531 2 917 2 155 2 532 2 157 44 656 2 537 2 414 2 44 2 46 2 924 2 540 6 795 2 926 2 798 2 799 4 545 2 301 8 423 2 431 2 305 4 670 2 550 10 671 2 315 2 437 8 438 2 178 2 946 6 809 2 810 4 325 42 954 2 562 2 814 6 192 18 333 2 455 2 570 2 71 2 74 2 692 6 572 2 697 4 699 2 984 2 982 2 87 2 214 4 985 4 837 4 90 4 839 2 987 40 989 2 97 2 717 2 589 2 478 2 228 2 720 6 101 2 
848 14 799 2 303 2 863 4 305 2 247 2 550 8 867 2 806 2 746 2 871 2 495 10 875 6 375 6 810 6 322 2 181 2 499 2 325 38 185 4 681 2 954 2 130 4 621 2 504 2 814 2 380 2 192 14 259 6 758 2 334 2 630 2 458 10 570 2 71 6 461 4 343 2 344 4 979 2 773 4 984 2 87 2 214 2 985 2 216 2 273 14 90 10 839 2 469 4 411 2 987 26 989 2 919 2 97 2 532 2 717 2 157 28 46 2 540 10 162 2 101 2 724 4 
641 2 

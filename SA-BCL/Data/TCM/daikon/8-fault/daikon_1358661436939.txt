#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V ERROR java.lang.NullPointerException 
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException (176,825) 232 (527,980) (176,825) 1322 (527,980) 515 
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 311 593 143 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 796 494 109 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 577 513 796 494 109 
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 796 494 109 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 796 494 109 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
utilMDE.MathMDE:gcd([I)I
daikon.diff.InvMap:toString()Ljava.lang.String;
jtb.syntaxtree.TypeParameters:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
jtb.syntaxtree.MethodDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:eltwiseEqual([I)Z
jtb.syntaxtree.TypeArguments:TypeArguments(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeArgument;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.PptName:toString()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
jtb.syntaxtree.ClassOrInterfaceType:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
jtb.syntaxtree.InclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AndExpression;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:lte(II)Z
jtb.JavaCharStream:getBeginLine()I
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
jtb.JavaParser:jj_3R_54()Z
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.tools.jtb.PptNameMatcher:getUngenerifiedType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ModBitTracker:num_sets()I
jtb.JavaParser:jj_3_12()Z
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.syntaxtree.TypeArguments:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Statement;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.inv.filter.ParentFilter:ParentFilter()V
utilMDE.MathMDE:mod_positive(II)I
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:lexGTE([I[I)Z
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.Quant:eltsLteIndex([I)Z
utilMDE.FuzzyFloat:lte(DD)Z
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3_4()Z
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_133()Z
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.Quant:pairwiseLTE([I[I)Z
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:eltsGteIndex([I)Z
jtb.JavaParser:jj_3R_108()Z
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.tools.jtb.SimpleTreeDumper:printToken(Ljava.lang.String;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
jtb.JavaParser:jj_3R_148()Z
jtb.syntaxtree.ReferenceType:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
jtb.JavaParser:jj_3_35()Z
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.Type;)V
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.Quant:lt(II)Z
jtb.syntaxtree.TypeArgument:accept(Ljtb.visitor.Visitor;)V
jtb.JavaCharStream:BeginToken()C
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;)V
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
jtb.JavaParser:jj_3R_74()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Block;)V
utilMDE.ArraysMDE:noDuplicates([D)Z
utilMDE.FuzzyFloat:gt(DD)Z
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
jtb.JavaParser:jj_3R_101()Z
jtb.JavaParser:jj_scan_token(I)Z
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
utilMDE.ArraysMDE:sum([D)D
jtb.JavaParser:jj_3R_89()Z
daikon.test.TestAst:checkMatch(Ljava.lang.String;Ljtb.syntaxtree.MethodDeclaration;Ldaikon.tools.jtb.PptNameMatcher;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.FormalParameter;)V
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
jtb.JavaParser:jj_3R_63()Z
jtb.JavaParser:jj_3R_50()Z
daikon.ModBitTracker:ModBitTracker(I)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Type;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeOptional;)V
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.test.TestAst.MethodDeclarationHarvester:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
utilMDE.FuzzyFloat:gte(DD)Z
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3_30()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NullLiteral;)V
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.Quant:pairwiseEqual([I[I)Z
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.InvariantFormatTester:execute()Z
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.UpperBound:enabled()Z
jtb.JavaParser:jj_3_36()Z
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
jtb.JavaParser:jj_2_5(I)Z
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE:negate(I)I
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameter;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReferenceType;)V
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_121()Z
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_2_16(I)Z
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
utilMDE.ArraysMDE:min_max([I)[I
daikon.inv.Invariant:format()Ljava.lang.String;
jtb.JavaParser:jj_3R_137()Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
utilMDE.MathMDE:gcd(JJ)J
daikon.PptSlice1:num_samples()I
daikon.Quant:pairwiseSquare([I[I)Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V | CONDITION | 972 | if (x) -> if (!x)
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AdditiveExpression;)V
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
daikon.inv.ValueSet:ValueSet(I)V
daikon.Quant:eltsLtIndex([I)Z
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InstanceOfExpression;)V
jtb.JavaParser:jj_3_22()Z
jtb.JavaParser:jj_3R_122()Z
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBody;)V
daikon.inv.Invariant:isWorthPrinting()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String; | CONSTANT | 11304 | 2 -> 0
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_110()Z
daikon.Quant:memberOf(I[I)Z
utilMDE.UtilMDE:removeWhitespaceBefore(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3_25()Z
jtb.JavaParser:jj_3_27()Z
daikon.VarInfo:name()Ljava.lang.String;
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Modifiers;)V
daikon.Quant:memberOf(F[F)Z
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.FuzzyFloat:indexOf([DD)I
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_67()Z
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameters;)V
utilMDE.ArraysMDE:sorted([I)Z
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArgument;)V
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.Quant:memberOf(D[F)Z
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.config.Configuration:apply(Ljava.lang.String;)V
jtb.syntaxtree.ReturnStatement:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalAndExpression;)V
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
jtb.JavaParser:jj_3R_100()Z
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
jtb.JavaParser:jj_ntk()I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
jtb.syntaxtree.FormalParameter:FormalParameter(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Type;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.ConditionalExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
jtb.JavaParser:jj_3R_87()Z
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.filter.InvariantFilters:InvariantFilters()V
utilMDE.ArraysMDE:element_range([I)I
utilMDE.Intern:numIntArrays()I
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.tools.jtb.Ast:create(Ljava.lang.String;Ljava.lang.String;)Ljtb.syntaxtree.Node;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
jtb.JavaParser:jj_2_18(I)Z
jtb.syntaxtree.PostfixExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ModBitTracker:num_vars()I
jtb.syntaxtree.TypeDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.tools.jtb.SimpleTreeDumper:SimpleTreeDumper(Ljava.io.Writer;)V
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalOrExpression;)V
daikon.Quant:eltsEqualIndex([I)Z
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameters;)V
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.Quant:eq(FF)Z
jtb.JavaParser:jj_3_14()Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakHasherMap:size()I
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
utilMDE.UtilMDE:removeWhitespaceAfter(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.UtilMDE:removeWhitespaceAround(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.Type:accept(Ljtb.visitor.Visitor;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.ProglangType:baseIsFloat()Z
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_120()Z
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.tools.jtb.Ast:getParent(Ljava.lang.Class;Ljtb.syntaxtree.Node;)Ljtb.syntaxtree.Node;
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.test.FormatTestCase:passes()Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.Quant:eltsGtIndex([I)Z
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
jtb.JavaParser:VariableDeclaratorId()Ljtb.syntaxtree.VariableDeclaratorId;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.RelationalExpression;)V
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:eltsEqual([II)Z
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
jtb.syntaxtree.Name:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
jtb.syntaxtree.ConditionalOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Intern:intern([I)[I
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:ungenerify(Ljtb.syntaxtree.ClassOrInterfaceType;)V
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:pow(II)I
jtb.syntaxtree.RelationalExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_76()Z
jtb.syntaxtree.NodeOptional:present()Z
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:lt(DD)Z
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljava.lang.String;Ljava.lang.String;Ljava.util.List;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.visitor.FormatCommand:getNumCommands()I
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
jtb.JavaParser:jj_3R_69()Z
jtb.JavaParser:jj_3R_75()Z
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_70()Z
daikon.Quant:sameLength([I[I)Z
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.tools.jtb.Ast:getPackage(Ljtb.syntaxtree.CompilationUnit;)Ljava.lang.String;
jtb.syntaxtree.TypeArguments:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:concat([I[I)[I
daikon.PptSlice0:initInvariantsSeen()V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
utilMDE.ArraysMDE:subarray([JII)[J
daikon.Quant:lexEqual([I[I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PackageDeclaration;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ImportDeclaration;)V
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltsNotEqual([II)Z
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.TypeDeclaration:TypeDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_73()Z
jtb.syntaxtree.NodeToken:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.CompilationUnit:getParent()Ljtb.syntaxtree.Node;
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
utilMDE.Assert:assertTrue(Z)V
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.Quant:lexGT([I[I)Z
jtb.syntaxtree.ShiftExpression:accept(Ljtb.visitor.Visitor;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.inv.Invariant:prob_is_ge(DD)D
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.RootNode:RootNode()V
jtb.JavaParser:jj_3R_96()Z
daikon.tools.jtb.Ast:getClassName(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
jtb.visitor.TreeFormatter:add(Ljtb.visitor.FormatCommand;)V
daikon.PptName:getSignature()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.NodeSequence:getParent()Ljtb.syntaxtree.Node;
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.syntaxtree.Block:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.CompilationUnit;)V
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.diff.InvMap:InvMap()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PostfixExpression;)V
utilMDE.OrderedPairIterator:setnext2()V
utilMDE.WeakHasherMap:processQueue()V
utilMDE.OrderedPairIterator:setnext1()V
daikon.Quant:slice([III)[I
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
jtb.JavaParser:jj_3R_109()Z
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.inv.OutputFormat:isJavaFamily()Z
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.tools.jtb.Ast:format(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameters;)V
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:jj_3R_161()Z
utilMDE.ArraysMDE:fn_is_total([I)Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MultiplicativeExpression;)V
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.inv.unary.scalar.NonZero:enabled()Z
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.InstanceOfExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
jtb.syntaxtree.Expression:accept(Ljtb.visitor.Visitor;)V
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryExpression;)V
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;)V
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.PptName:getFullClassName()Ljava.lang.String;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
jtb.syntaxtree.ImportDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:jj_2_21(I)Z
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:getToken(I)Ljtb.Token;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3R_118()Z
daikon.Quant:pairwiseLT([I[I)Z
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ReferenceType;)V
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_55()Z
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_2_36(I)Z
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
jtb.JavaParser:jj_3R_117()Z
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3_16()Z
daikon.VarInfoName:esc_name()Ljava.lang.String;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE.1InternTest:test(Z)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.ValueTuple:isMissing(I)Z
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.test.FormatTestCase:getDiffString()Ljava.lang.String;
jtb.JavaParser:jj_3R_105()Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.ElementsFinder:inPre()Z
jtb.JavaParser:jj_3R_56()Z
daikon.tools.jtb.Ast:getParameters(Ljtb.syntaxtree.MethodDeclaration;)Ljava.util.List;
daikon.Quant:eltsGTE([II)Z
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
jtb.JavaParser:JavaParser(Ljava.io.Reader;)V
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
jtb.visitor.TreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_28()Z
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
jtb.JavaParser:jj_3R_77()Z
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.tools.jtb.PptNameMatcher:typeMatch(Ljava.lang.String;Ljtb.syntaxtree.FormalParameter;)Z
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.PptName:isEnterPoint()Z
daikon.diff.Node:Node()V
daikon.VarInfo:simplify_name()Ljava.lang.String;
jtb.syntaxtree.MethodDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
jtb.syntaxtree.ClassOrInterfaceBody:ClassOrInterfaceBody(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.NodeToken:trimSpecials()V
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:indexOf([I[I)I
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.TypeBound:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.syntaxtree.NodeChoice:accept(Ljtb.visitor.Visitor;)V
jtb.JavaCharStream:FillBuff()V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:sum([I)I
daikon.PptTopLevel:getInvariants()Ljava.util.List;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
jtb.JavaParser:jj_3R_169()Z
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
jtb.JavaParser:jj_3R_102()Z
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
jtb.syntaxtree.NodeListOptional:elements()Ljava.util.Enumeration;
utilMDE.Intern:intern([D)[D
jtb.JavaParser:jj_3R_52()Z
jtb.visitor.TreeFormatter:placeToken(Ljtb.syntaxtree.NodeToken;II)V
daikon.inv.Invariant:getConfidence()D
jtb.JavaParser:jj_3_5()Z
jtb.visitor.TreeDumper:TreeDumper(Ljava.io.Writer;)V
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
jtb.syntaxtree.NodeToken:numSpecials()I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalExpression;)V
jtb.JavaParser:jj_3R_47()Z
jtb.Token:newToken(I)Ljtb.Token;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
jtb.JavaParser:jj_3R_72()Z
daikon.ProglangType:isIntegral()Z
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_2_15(I)Z
jtb.JavaCharStream:getBeginColumn()I
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
jtb.syntaxtree.ClassOrInterfaceBody:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.syntaxtree.NodeOptional:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.TreeFormatter:space(I)Ljtb.visitor.FormatCommand;
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:pairwiseGT([I[I)Z
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.ValueTuple:isMissingFlow(I)Z
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
jtb.syntaxtree.NodeSequence:elements()Ljava.util.Enumeration;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.tools.jtb.SimpleTreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
jtb.syntaxtree.TypeArgument:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_134()Z
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_2_10(I)Z
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.Invariant:justified()Z
jtb.JavaParser:jj_3R_49()Z
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.NodeSequence:elementAt(I)Ljtb.syntaxtree.Node;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3_17()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeBound;)V
daikon.VarComparabilityImplicit:alwaysComparable()Z
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Name;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
jtb.visitor.TreeFormatter:TreeFormatter()V
daikon.VarInfoName:name()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.inv.Invariant:prob_and(DDD)D
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:jj_3_13()Z
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
daikon.ValueTuple:size()I
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.ProglangType:isPseudoArray()Z
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
daikon.Ppt:Ppt()V
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_53()Z
jtb.JavaParser:jj_2_25(I)Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor.1:visit(Ljtb.syntaxtree.TypeParameter;)V
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.VarInfo:relate_var()V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
jtb.visitor.TreeFormatter:processList(Ljtb.syntaxtree.NodeListInterface;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
jtb.JavaParser:jj_3R_124()Z
jtb.visitor.TreeFormatter:space()Ljtb.visitor.FormatCommand;
jtb.visitor.TreeFormatter:TreeFormatter(II)V
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
jtb.syntaxtree.EqualityExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_162()Z
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
jtb.JavaParser:jj_3R_126()Z
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.PptSlice1:arity()I
jtb.visitor.TreeFormatter:processList(Ljtb.syntaxtree.NodeListInterface;Ljtb.visitor.FormatCommand;)V
utilMDE.LimitedSizeIntSet:add(I)V
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
jtb.JavaParser:jj_2_35(I)Z
utilMDE.ArraysMDE:max([I)I
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.VarInfo:new_ppt()V
daikon.Quant:eq(DD)Z
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
jtb.syntaxtree.ResultType:accept(Ljtb.visitor.Visitor;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:subsetOf([F[D)Z
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
jtb.JavaParser:jj_2_3(I)Z
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.tools.jtb.Ast.1GetParametersVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.inv.unary.scalar.Modulus:enabled()Z
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaCharStream:ReadByte()C
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat()V
jtb.visitor.TreeDumper:printToken(Ljava.lang.String;)V
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.PptName:isCombinedExitPoint()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.PrimaryExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpression;)V
jtb.JavaParser:jj_3_1()Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
utilMDE.UtilMDE:split(Ljava.lang.String;Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ProglangType:baseIsIntegral()Z
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
utilMDE.Intern:internSubsequence([JII)[J
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.OrderedPairIterator:hasNext()Z
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.NodeListOptional:getParent()Ljtb.syntaxtree.Node;
jtb.JavaParser:jj_3R_99()Z
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern:internSubsequence([III)[I
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclarator;)V
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
jtb.JavaParser:jj_3R_163()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:logOn()Z
jtb.JavaParser:jj_2_13(I)Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.tools.jtb.Ast:getType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
jtb.JavaCharStream:getEndColumn()I
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.tools.jtb.Ast:removeWhitespace(Ljava.lang.String;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:eltwiseGTE([I)Z
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.Quant:eltsGT([II)Z
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.ClassOrInterfaceBody:getParent()Ljtb.syntaxtree.Node;
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:gt(II)Z
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.Quant:noDups([I)Z
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeChoice:getParent()Ljtb.syntaxtree.Node;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
utilMDE.ArraysMDE:sum([[D)D
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:memberOf(S[S)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.MathMDE:modulus([I)[I
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_123()Z
daikon.inv.unary.scalar.NonModulus:updateResults()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.Quant:lexLT([I[I)Z
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfoName:repr()Ljava.lang.String;
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.ProglangType:isPointerFileRep()Z
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
jtb.JavaParser:FormalParameter()Ljtb.syntaxtree.FormalParameter;
jtb.JavaCharStream:readChar()C
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3_18()Z
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
jtb.JavaParser:jj_3R_85()Z
jtb.syntaxtree.NodeListOptional:present()Z
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:fn_identity(I)[I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeSequence;)V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:intersection([I[I)[I
daikon.Quant:subsetOf([D[F)Z
utilMDE.FuzzyFloat:eq(DD)Z
daikon.VarInfoName.Simple:isLiteralConstant()Z
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InclusiveOrExpression;)V
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:subsetOf([I[I)Z
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.Quant:lexLTE([I[I)Z
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn; | ASSIGN | 107780 | = null
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.tools.jtb.Ast:quickFixForInternalComment(Ljava.lang.String;)Ljava.lang.String;
daikon.ProglangType:dimensions()I
jtb.JavaParser:jj_3_19()Z
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.Quant:subsetOf([D[D)Z
jtb.JavaParser:jj_3R_58()Z
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.Quant:eltsLTE([II)Z
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
jtb.JavaParser:jj_3R_210()Z
daikon.Quant:eltsLT([II)Z
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:lexNotEqual([I[I)Z
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
jtb.JavaParser:jj_3_3()Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE:gcd(II)I
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.test.FormatTestCase.SingleOutputTestCase:getDiffString()Ljava.lang.String;
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName; | RETURN | 27662 | return null
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
jtb.syntaxtree.CompilationUnit:CompilationUnit(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.syntaxtree.FormalParameters:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
daikon.tools.jtb.Ast:print(Ljtb.syntaxtree.Node;)Ljava.lang.String;
jtb.syntaxtree.FormalParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:memberOf(F[D)Z
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
utilMDE.ArraysMDE:sum([[I)I
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
jtb.syntaxtree.BlockStatement:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
utilMDE.MathMDE:bitwiseComplement(I)I
utilMDE.ArraysMDE:indexOf([II)I
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
jtb.syntaxtree.TypeDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments;
jtb.JavaParser:jj_3R_115()Z
jtb.JavaParser:jj_3R_61()Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.Intern:intern([J)[J
daikon.tools.jtb.Ast:getName(Ljtb.syntaxtree.MethodDeclaration;)Ljava.lang.String;
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
jtb.syntaxtree.PrimaryPrefix:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
jtb.syntaxtree.MethodDeclarator:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
jtb.syntaxtree.Statement:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.Quant:isReverse([I[I)Z
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryPrefix;)V
daikon.ProglangType:isScalar()Z
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:setEqual([I[I)Z
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
jtb.JavaParser:jj_3R_180()Z
jtb.JavaParser:jj_3_10()Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat:ne(DD)Z
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.inv.Invariant:logDetail()Z
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
utilMDE.Options.OptionInfo:argument_required()Z
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
jtb.syntaxtree.ExclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariants:Invariants()V
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
jtb.visitor.FormatCommand:getCommand()I
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant:prob_or(DD)D
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
utilMDE.MathMDE:sign(I)I
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.Quant:subsetOf([J[J)Z
daikon.diff.Node:add(Ljava.lang.Object;)V
utilMDE.ArraysMDE:subarray([III)[I
utilMDE.FuzzyFloat:set_rel_diff(D)V
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.VariableDeclaratorId:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
jtb.JavaParser:jj_2_14(I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Expression;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.unary.UpperBoundCore:computeConfidence()D
jtb.JavaParser:jj_3R_98()Z
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
jtb.JavaParser:jj_3R_80()Z
jtb.JavaCharStream:getEndLine()I
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_114()Z
daikon.ModBitTracker:num_samples()I
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.visitor.FormatCommand:FormatCommand(II)V
jtb.JavaParser:jj_3_20()Z
daikon.Quant:eltwiseGT([I)Z
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArguments;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_48()Z
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
utilMDE.ArraysMDE:fn_is_permutation([I)Z
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
jtb.syntaxtree.ConditionalAndExpression:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Literal;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.BlockStatement;)V
utilMDE.MathMDE:missing_numbers([I)[I
daikon.Quant:eltwiseLTE([I)Z
utilMDE.MathMDE:nonmodulus_strict([I)[I
jtb.JavaParser:jj_3R_136()Z
daikon.ModBitTracker:split(I)I
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_86()Z
jtb.JavaParser:jj_2_17(I)Z
jtb.syntaxtree.Modifiers:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_125()Z
daikon.PptSlice2:arity()I
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
jtb.syntaxtree.VariableDeclaratorId:accept(Ljtb.visitor.Visitor;)V
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:isSubset([D[D)Z
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
jtb.JavaParser:jj_3R_116()Z
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.JavaParser:jj_3R_164()Z
jtb.JavaParser:jj_3R_51()Z
jtb.syntaxtree.NodeSequence:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ResultType;)V
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceBody:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.tools.jtb.PptNameMatcher:PptNameMatcher(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ShiftExpression;)V
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.Quant:subsetOf([F[F)Z
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
jtb.syntaxtree.Literal:accept(Ljtb.visitor.Visitor;)V
daikon.ProglangType:baseIsScalar()Z
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
jtb.syntaxtree.AndExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3_21()Z
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.test.TestAst.ClassOrInterfaceDeclarationHarvester:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
jtb.syntaxtree.NodeList:NodeList()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReturnStatement;)V
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
jtb.JavaParser:jj_3R_104()Z
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.tools.jtb.Ast:typeMatch(Ljava.lang.String;Ljava.lang.String;)Z
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.tools.jtb.Ast:create(Ljava.lang.String;[Ljava.lang.Class;[Ljava.lang.Object;Ljava.lang.String;)Ljtb.syntaxtree.Node;
daikon.inv.unary.LowerBoundCore:calc_range()J
jtb.JavaParser:jj_3R_81()Z
jtb.JavaParser:jj_2_12(I)Z
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.VarInfoName:simplify_name()Ljava.lang.String;
jtb.JavaParser:jj_3R_97()Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:jj_3R_57()Z
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.Quant:eltwiseLT([I)Z
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.Quant:union([I[I)[I
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
jtb.JavaParser:jj_2_1(I)Z
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.UtilMDE:splitLines(Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_88()Z
utilMDE.ArraysMDE:concat([I[I)[I
jtb.syntaxtree.NullLiteral:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.Quant:eq(II)Z
jtb.syntaxtree.FormalParameter:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName:ioa_name()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
utilMDE.MathMDE:mod_positive(JJ)J
jtb.JavaParser:jj_3R_149()Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.Quant:pairwiseDivides([I[I)Z
daikon.PptSlice0:arity()I
jtb.JavaParser:jj_2_4(I)Z
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.ProglangType:isArray()Z
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.inv.unary.scalar.Positive:enabled()Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.VarInfo:isPointer()Z
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.PptTopLevel:name()Ljava.lang.String;
jtb.JavaParser:jj_3R_135()Z
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:memberOf(J[J)Z
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljtb.syntaxtree.Node;)Z
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:noDuplicates([J)Z
jtb.JavaParser:jj_3R_68()Z
jtb.JavaParser:jj_3_29()Z
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaCharStream:backup(I)V
daikon.Debug:logDetail()Z
utilMDE.MathMDE:pow_fast(II)I
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_119()Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:setDiff([I[I)[I
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V | STATEMENT | 19526 | stmt -> ;
daikon.Quant:eltwiseNotEqual([I)Z
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.AdditiveExpression:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:ne(II)Z
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.PackageDeclaration:accept(Ljtb.visitor.Visitor;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.EqualityExpression;)V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.MultiplicativeExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_107()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameter;)V
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.Invariant:prob_and(DD)D
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_106()Z
jtb.JavaParser:jj_3R_60()Z
utilMDE.MathMDE:gcd_differences([I)I
jtb.syntaxtree.TypeParameter:accept(Ljtb.visitor.Visitor;)V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.VariableDeclaratorId:VariableDeclaratorId(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.tools.jtb.PptNameMatcher:extractPptArgs(Ldaikon.PptName;)Ljava.util.List;
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_62()Z
daikon.VarInfoName:hashCode()I
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;II)V
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.Debug:logOn()Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:eq(JJ)Z
daikon.inv.OutputFormat:toString()Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
jtb.JavaParser:jj_3_15()Z
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ExclusiveOrExpression;)V
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.CompilationUnit:accept(Ljtb.visitor.Visitor;)V
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeDeclaration;)V
daikon.test.TestQuant:assert_arrays_equals([I[I)V
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:copy(Ljava.util.HashMap;)Ljava.util.HashMap;
daikon.Quant:subsetOf([S[S)Z
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.ProglangType:isFloat()Z
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.ArraysMDE:min([I)I
daikon.Quant:subsetOf([B[I)Z
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.Quant:gte(II)Z
jtb.syntaxtree.UnaryExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_103()Z
jtb.syntaxtree.UnaryExpressionNotPlusMinus:accept(Ljtb.visitor.Visitor;)V
daikon.PptName:getMethodName()Ljava.lang.String;
daikon.VarInfoName.Elements:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.TypeDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.LimitedSizeIntSet:size()I
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
jtb.syntaxtree.ClassOrInterfaceDeclaration:ClassOrInterfaceDeclaration(Ljtb.syntaxtree.NodeChoice;Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ClassOrInterfaceBody;)V
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
1360 2 1124 2 1129 4 1364 2 1367 2 1182 2 686 2 1187 2 1271 2 219 2 12 2 460 2 329 4 168 4 90 2 1093 2 231 2 387 2 1333 4 581 2 964 2 968 2 1150 2 389 4 1063 2 970 4 1339 2 295 2 589 2 1209 2 874 2 795 2 101 2 139 2 509 2 712 2 839 2 624 2 1253 2 929 2 406 2 1389 2 984 2 249 2 
738 2 599 4 253 6 1170 2 436 15 339 15 340 4 1382 2 389 4 316 5 60 6 1086 3 814 47 725 6 768 2 528 6 940 2 211 19 212 6 98 32 976 15 1247 2 120 4 902 4 571 32 267 4 511 6 273 22 799 6 329 4 981 4 275 4 651 15 171 4 491 2 988 4 1328 8 305 52 784 32 
1209 2 1319 2 1119 2 
1221 2 1187 2 1210 2 312 2 220 2 881 22 131 2 1056 2 91 2 1016 10 350 2 213 2 866 2 55 2 
519 2 1170 2 436 2 339 2 180 2 340 2 814 4 1153 2 211 2 98 2 976 2 487 2 571 2 273 2 461 2 799 4 1323 2 651 2 1144 2 250 2 305 6 283 2 784 2 
267 4 571 8 963 2 511 6 523 2 339 4 436 4 273 4 814 12 651 4 640 2 528 6 988 4 305 16 98 8 784 8 976 4 
0 2 1357 2 1102 2 961 2 1021 4 969 2 548 2 1001 4 260 2 1002 2 345 2 155 2 44 14 292 2 1265 2 210 4 397 2 1067 2 1315 4 1209 8 1319 2 243 2 1014 62 692 4 843 2 168 4 514 4 406 2 803 4 931 10 331 10 249 4 107 2 196 4 783 4 1119 6 887 4 363 4 1100 2 1045 2 
1185 2 1250 2 861 2 840 2 341 2 1026 2 49 2 605 2 1288 2 35 2 
329 2 1113 2 708 2 755 2 1383 4 727 2 968 2 422 2 389 2 
765 2 435 6 255 2 564 2 437 6 342 2 549 2 16 6 1000 2 368 2 1342 2 
1070 6 1125 2 467 4 389 2 142 2 329 2 1309 6 1226 4 823 6 1256 2 517 6 1343 2 252 2 
763 2 177 8 1170 4 339 10 436 10 523 4 890 2 340 6 1382 2 389 6 1364 2 814 26 211 8 212 8 1030 2 186 8 369 2 98 16 976 10 1055 4 571 16 772 2 539 4 273 12 799 10 329 6 981 6 651 10 305 30 784 16 
830 6 777 4 
49 2 
329 2 396 2 
329 4 672 2 1310 2 
1043 2 
1046 3 674 2 72 2 1050 2 452 2 367 2 152 1 1131 2 938 3 1228 2 1311 2 941 2 456 4 684 6 10 3 858 6 1231 16 946 2 82 2 163 2 458 2 950 16 780 2 167 2 691 2 87 8 169 2 15 2 274 2 953 2 781 2 282 2 694 2 959 2 386 2 867 2 544 2 546 1 1335 4 389 32 288 1 290 2 616 16 184 2 293 2 1341 2 794 2 398 3 977 2 873 1 399 6 709 2 1158 16 557 2 798 2 1349 2 802 2 885 2 805 2 560 2 407 2 1358 3 112 2 991 32 808 2 563 2 717 2 994 2 115 2 996 2 483 2 1084 3 998 2 720 2 315 2 313 2 205 12 410 2 317 3 893 2 894 2 639 2 414 3 209 2 817 4 898 2 1266 8 1181 2 1006 2 820 5 1270 2 421 2 906 2 422 2 908 3 48 2 329 34 425 1 225 2 1015 2 1273 2 52 2 824 2 652 2 735 2 333 3 1019 8 739 24 493 2 580 2 56 4 655 2 503 2 1287 1 658 1 659 4 661 6 1111 2 1204 1 1029 1 747 2 1031 24 926 1 927 2 1032 1 1033 4 750 1 510 2 1294 3 1388 2 444 2 1118 1 667 2 354 2 63 2 669 12 1038 1 1036 4 844 1 1040 2 1298 1 247 2 360 4 516 2 1390 2 759 32 1044 1 1219 2 762 3 
364 4 1047 2 675 60 2 14 676 112 365 26 3 198 4 6 1051 12 6 12 9 2 683 2 371 4 372 4 373 2 687 4 11 86 688 2 689 6 374 2 1057 2 13 6 376 2 14 6 378 2 693 8 1059 6 380 2 381 386 382 4 383 2 384 2 695 2 696 4 697 4 698 4 1060 2 20 2 19 2 1061 46 700 6 1062 6 22 198 389 10 25 4 27 2 702 4 704 2 705 112 394 6 1065 14 30 32 707 8 1066 2 32 12 400 2 1071 2 711 2 33 2 1072 198 1073 4 403 26 404 4 1074 2 408 4 1078 4 1079 2 37 6 718 182 409 2 1081 2 1083 26 42 60 41 2 1085 2 1087 4 723 6 412 4 416 6 729 2 732 4 423 4 1094 2 50 16 734 2 53 2 428 2 1097 6 1098 6 737 432 1099 6 429 106 431 2 57 2 1103 2 434 6 1106 2 59 4 1107 2 743 48 1108 10 1109 2 1110 2 746 328 441 2 442 4 443 2 749 6 1117 22 752 6 753 4 757 10 450 182 71 2 764 2 451 8 1128 30 73 30 74 22 1133 2 1134 4 766 2 75 28 1135 244 454 18 455 14 77 6 76 54 78 2 769 4 770 2 1137 2 80 4 1138 6 773 4 84 26 776 8 779 92 778 4 459 4 85 198 86 6 88 2 89 6 1142 2 463 6 785 2 1146 2 1148 2 465 6 1149 2 93 64 787 2 94 2 468 6 1151 6 1152 2 95 566 793 46 97 82 100 2 470 6 1156 2 1157 6 102 2 103 2 1160 6 797 4 1161 2 800 2 472 20 1162 2 801 198 104 4 1164 2 804 8 105 8 474 6 1165 20 1166 6 106 88 1167 46 108 2 1169 2 110 2 111 4 113 2 480 6 482 2 481 2 810 2 1171 2 114 24 1172 2 116 46 484 4 1174 26 117 4 1176 2 1177 20 1178 2 1179 2 486 4 1180 4 818 2 119 2 1184 26 1186 4 488 118 122 204 123 2 1192 4 490 2 1193 2 124 2 1194 8 492 2 128 2 496 2 497 4 130 2 1198 328 499 2 1199 2 500 30 502 4 1201 6 504 4 505 60 134 2 506 2 135 6 507 2 832 84 1208 2 835 4 508 30 512 4 146 2 1217 22 518 2 520 12 847 30 849 18 149 2 150 2 153 2 1224 14 852 2 526 2 157 4 855 2 1229 2 158 50 533 160 160 46 161 30 859 2 535 4 536 2 538 12 164 4 862 6 863 432 170 2 865 4 1238 192 541 26 542 2 543 4 1242 4 545 48 868 2 871 4 182 6 547 2 872 336 550 2 552 2 189 6 1249 2 875 244 878 2 190 2 191 30 883 2 1252 2 1254 26 1255 2 194 6 884 6 559 2 562 2 1259 2 1261 2 200 2 202 16 203 2 891 2 204 2 1263 228 206 2 207 10 895 28 900 2 569 2 1268 10 570 66 214 6 215 2 572 4 904 2 217 2 218 8 221 26 906 2 575 2 224 6 576 2 909 8 226 6 227 70 228 6 229 2 911 2 230 2 233 68 578 10 914 4 579 12 235 24 1275 2 1277 30 582 2 238 6 583 14 919 2 1284 2 585 192 921 6 923 2 586 112 240 6 925 2 591 2 1291 8 1292 6 242 94 592 2 244 4 1296 28 1297 4 1300 2 1301 6 594 2 1303 6 933 290 251 2 598 140 934 52 601 20 600 4 254 26 603 2 604 20 1307 2 1308 16 259 6 258 2 936 2 264 8 263 4 943 198 607 98 1313 2 1314 2 945 2 608 6 1316 22 1318 6 270 6 609 4 272 2 951 8 952 2 1325 2 276 2 277 4 610 198 955 6 956 2 954 2 281 60 960 4 962 16 1334 2 966 6 967 6 285 376 1336 10 287 8 289 8 1337 2 615 2 1338 26 291 28 619 12 294 6 617 2 618 2 972 4 973 12 975 4 974 2 298 30 620 198 622 6 1346 132 623 4 626 4 625 204 1347 14 300 2 1350 6 627 2 1351 2 982 2 302 4 1352 4 303 20 985 6 989 8 1354 4 304 28 990 2 1356 2 631 20 307 2 634 2 993 2 992 6 1361 4 997 6 637 112 638 244 999 2 1003 2 319 2 642 30 1370 2 644 12 1008 8 645 4 323 4 324 6 1010 12 1009 2 647 8 646 4 326 6 1013 2 1374 6 649 132 329 10 330 12 332 6 1377 2 334 4 1378 6 335 2 1020 2 1379 2 654 4 1381 2 1022 20 343 18 344 2 660 8 346 6 347 30 1027 4 1028 6 348 224 351 106 352 2 662 2 1386 2 663 14 353 64 665 2 1034 4 666 12 668 4 355 4 357 74 356 2 1041 4 358 2 361 2 
1209 2 1055 2 1371 2 1216 2 201 2 879 2 1355 2 742 1 
1216 2 1007 2 201 2 
1216 2 201 2 892 2 
1293 2 995 2 362 2 
1216 2 201 2 
1293 2 328 2 
1216 2 375 2 
1293 2 140 2 362 2 
1373 2 362 2 501 2 
827 2 362 2 68 2 
21 2 628 2 362 2 
83 2 362 2 761 2 
1293 2 5 2 
1216 2 1289 2 
1373 2 1188 2 
1101 2 827 2 
21 2 1080 2 
83 2 807 2 
1293 2 271 2 
70 2 83 2 
21 2 321 2 
827 2 54 2 
1373 2 185 2 
1293 2 140 2 362 2 370 2 
922 2 1293 2 140 2 362 2 370 2 
1227 2 1293 2 362 2 
1293 2 362 2 175 2 
556 2 751 2 1324 2 971 2 
1216 2 788 2 362 2 
1216 2 1076 2 
1209 2 1200 2 1355 2 366 2 
1209 2 1371 2 1200 2 1355 2 366 2 1190 2 
1209 2 1055 2 1216 2 1279 2 201 2 1355 2 
139 2 831 2 
1209 2 1055 2 438 2 1355 2 
815 2 21 2 
83 2 537 2 
1373 2 920 2 
827 2 916 2 
827 2 83 2 850 2 
827 2 83 2 901 2 
827 2 83 2 393 2 
827 2 83 2 47 2 
179 6 1209 2 1091 2 1039 2 476 2 540 6 1355 2 1168 2 
1293 2 690 2 
1248 2 1155 2 1344 2 24 2 880 2 881 6 1362 2 223 2 841 2 721 4 7 2 1053 4 208 2 726 2 957 2 280 2 913 2 1368 2 
36 2 362 2 
544 2 
69 4 72 2 367 2 1131 4 261 2 1228 2 1311 2 456 4 771 2 856 2 684 6 858 4 774 2 167 2 691 2 169 2 1240 2 466 2 23 2 870 2 1335 4 389 26 391 2 616 6 184 2 1341 2 706 2 399 2 709 2 1349 2 802 2 885 2 560 2 407 2 1260 2 112 2 991 4 808 2 115 2 483 2 998 6 720 2 205 8 893 2 817 2 209 2 1004 2 1181 2 1270 2 1011 2 905 4 421 2 906 2 422 2 48 2 329 26 1273 2 652 2 1019 2 493 2 56 2 503 2 1287 2 659 2 439 2 661 2 1033 4 750 2 63 2 669 8 1038 4 360 4 596 2 516 2 759 6 449 2 
69 4 72 2 367 2 1131 4 261 2 1228 2 1311 2 456 4 856 2 684 6 858 6 167 2 691 2 169 2 274 2 1240 2 466 2 23 2 1335 4 389 26 391 2 616 6 184 2 1341 2 706 2 399 2 709 2 1349 2 802 2 885 2 560 2 407 2 1260 2 1359 2 112 2 991 4 808 2 994 2 115 2 483 2 998 6 720 2 205 8 893 2 639 2 817 2 209 2 1004 2 1181 2 1270 2 1011 2 905 4 421 2 906 2 422 2 48 2 329 26 1273 2 652 2 1019 2 493 2 56 2 503 2 1287 2 659 2 439 2 661 2 1205 2 62 2 1033 4 750 2 63 2 669 8 1038 2 360 4 596 2 516 2 759 6 449 2 
1189 2 
531 2 1042 2 
1115 2 765 2 268 2 432 2 402 4 433 2 435 2 222 2 1037 2 437 2 342 2 671 2 567 4 527 2 515 2 896 2 987 2 1112 2 
72 2 112 2 1122 2 765 4 38 2 255 2 483 2 564 2 566 2 567 4 527 2 1054 4 896 2 1228 2 816 4 456 2 684 4 268 2 269 2 420 2 1272 2 421 2 906 2 222 2 1322 2 329 12 16 6 1017 2 178 2 1241 6 493 2 432 2 433 2 1281 2 656 4 435 6 918 2 437 4 389 6 342 4 390 2 744 4 745 2 590 2 1112 2 1115 2 979 2 402 4 1033 2 838 4 980 2 471 2 928 2 1037 2 405 2 671 4 515 2 987 2 147 2 67 2 
72 2 112 2 1122 2 765 4 38 2 255 2 483 2 566 2 567 4 368 2 527 2 1054 4 896 2 1228 2 816 4 456 2 684 4 268 2 269 2 420 2 1272 2 421 2 906 2 222 2 1322 2 329 12 16 6 1017 2 178 2 1241 6 493 2 432 2 433 2 1281 2 656 4 435 4 918 2 437 6 389 6 342 4 390 2 744 4 745 2 590 2 1112 2 1115 2 979 2 402 4 1033 2 838 4 980 2 471 2 928 2 1037 2 405 2 671 4 515 2 987 2 147 2 67 2 
72 2 112 2 1122 2 765 4 38 2 255 2 483 2 566 2 567 4 1000 2 527 2 1054 4 896 2 1228 2 816 4 456 2 684 4 268 2 269 2 420 2 1272 2 421 2 906 2 222 2 1322 2 329 12 16 6 1017 2 178 2 1241 6 493 2 432 2 433 2 1281 2 656 4 435 6 918 2 437 6 389 6 342 4 390 2 744 4 745 2 590 2 1112 2 1115 2 979 2 402 4 1033 2 838 8 980 2 471 2 928 2 1037 2 405 2 671 4 515 2 987 2 147 2 67 2 
72 2 112 2 1122 2 765 4 38 2 255 2 483 2 566 2 567 4 1000 2 368 2 527 2 1054 4 896 2 1228 2 816 8 456 2 684 4 268 2 269 2 420 2 1272 2 421 2 906 2 222 2 1322 2 329 12 16 8 1017 2 178 2 1241 10 493 2 432 2 433 2 1281 2 656 4 435 6 918 2 437 8 389 6 342 4 390 2 744 4 745 2 590 2 1112 2 1115 2 979 2 1033 2 402 4 838 8 980 2 471 2 928 2 1037 2 405 2 671 4 515 2 987 2 147 2 67 2 
72 2 112 2 1122 2 765 4 38 2 255 2 483 2 566 2 567 4 1000 2 527 2 1054 4 896 2 1228 2 816 8 456 2 684 4 268 2 269 2 420 2 1272 2 421 2 906 2 222 2 1322 2 329 12 16 6 1017 2 178 2 1241 10 493 2 432 2 433 2 1281 2 656 4 435 6 918 2 437 6 389 6 342 4 390 2 744 4 745 2 590 2 1112 2 1115 2 979 2 402 4 1033 2 838 8 980 2 471 2 928 2 1037 2 405 2 671 4 515 2 987 2 147 2 67 2 
151 2 368 4 527 2 1054 6 154 2 156 6 1228 2 684 6 858 6 1058 2 167 2 691 2 377 2 169 2 16 12 1240 2 174 6 178 4 1241 2 389 24 390 2 184 2 553 1 706 4 396 6 399 2 1068 2 709 2 877 1 402 4 405 4 558 6 885 2 407 2 195 2 1258 6 198 6 38 2 719 6 39 2 720 2 205 4 565 6 893 2 566 2 43 1 567 4 724 2 896 2 1264 2 420 2 1269 2 1270 2 46 2 1272 2 905 4 421 2 906 2 422 2 222 2 48 2 426 7 232 2 56 2 432 2 433 2 1281 2 435 4 918 2 437 8 744 8 439 2 440 2 590 2 1112 2 1115 2 748 2 928 2 754 2 930 2 1299 7 248 1 595 1 1304 1 67 2 759 8 66 8 72 2 1122 2 765 4 602 6 255 4 1130 2 1310 6 456 4 457 2 606 2 266 1 268 2 269 2 1320 2 948 2 949 2 1322 2 1140 6 274 2 782 2 611 4 1335 4 792 10 96 1 616 6 1341 12 297 2 979 2 471 2 980 2 1348 2 802 2 987 2 478 2 112 2 991 2 115 2 1173 2 483 2 998 6 1175 6 639 2 817 2 1005 2 643 6 819 1 322 6 1011 2 329 46 652 2 1017 2 653 4 1019 2 1018 2 493 2 656 4 342 4 829 2 659 2 661 2 834 2 1033 4 838 2 669 4 1037 2 671 4 1215 6 673 2 515 2 360 4 147 2 516 2 1043 6 
72 2 1122 2 765 4 602 6 255 4 151 2 1131 2 1130 2 527 2 156 6 154 2 1054 6 1228 2 1310 6 456 4 606 2 457 2 684 6 858 6 162 2 268 2 269 2 1320 2 948 2 949 2 1058 2 1140 6 1322 2 377 2 691 2 167 2 169 2 16 12 274 2 782 2 174 6 1240 2 1241 2 178 4 611 4 1335 4 389 26 390 2 792 10 184 2 616 6 1341 12 706 4 297 2 188 2 396 6 399 2 1068 2 979 2 709 2 402 4 980 2 471 2 1348 2 558 6 405 4 802 2 885 2 407 2 195 2 987 2 1258 6 478 2 198 6 991 2 112 2 38 2 1173 2 115 2 719 6 39 2 483 2 720 2 998 6 1175 6 565 6 205 8 566 2 893 2 1000 4 567 4 639 2 724 2 896 2 1264 2 817 4 1005 2 643 6 322 6 1269 2 420 2 46 2 1270 2 1272 2 905 4 1011 2 421 2 906 2 422 2 48 2 222 2 329 48 652 2 1017 2 653 4 232 2 1018 2 1019 2 493 2 432 2 56 4 1281 2 433 2 656 4 435 8 918 2 437 8 342 4 829 2 744 8 659 4 439 2 661 2 440 2 834 2 590 2 1112 2 1115 2 748 2 1033 4 838 6 928 2 669 8 1037 2 754 2 671 4 930 2 1215 6 673 2 515 2 360 4 516 2 147 2 1043 6 66 8 759 8 67 2 
72 2 1122 2 765 4 602 6 255 4 151 2 1131 2 1130 2 527 2 156 6 154 2 1054 6 1228 2 1310 6 456 4 606 2 457 2 684 6 858 6 162 2 268 2 269 2 1320 2 948 2 949 2 1058 2 1140 6 1322 2 377 2 691 2 167 2 169 2 16 12 274 2 782 2 174 6 1240 2 178 4 1241 6 611 4 1335 4 389 26 390 2 792 10 184 2 616 6 1341 12 706 4 297 2 188 2 396 6 399 2 1068 2 979 2 709 2 402 4 980 2 471 2 1348 2 558 6 405 4 802 2 885 2 407 2 195 2 987 2 1258 6 478 2 198 6 991 2 112 2 38 2 1173 2 115 2 719 6 39 2 483 2 720 2 998 6 1175 6 565 6 205 8 893 2 566 2 1000 4 567 4 639 2 724 2 896 2 816 4 1264 2 817 4 1005 2 643 6 322 6 1269 2 420 2 46 2 1270 2 1272 2 905 4 1011 2 421 2 906 2 422 2 222 2 48 2 329 48 652 2 1017 2 653 4 232 2 1018 2 1019 2 493 2 432 2 56 4 1281 2 433 2 656 4 435 8 918 2 437 8 342 4 829 2 744 8 659 4 439 2 661 2 440 2 834 2 590 2 1112 2 1115 2 748 2 1033 4 838 6 928 2 669 8 1037 2 754 2 671 4 930 2 1215 6 673 2 515 2 360 4 516 2 147 2 1043 6 66 8 759 8 67 2 
1220 2 151 2 368 2 527 2 1054 6 154 2 156 6 1228 2 684 6 1230 6 858 6 162 2 1058 2 167 2 691 2 377 2 169 2 16 16 864 2 172 2 1240 4 174 12 1241 6 178 4 389 24 390 2 1243 6 1064 6 184 2 706 4 188 2 396 12 399 4 709 2 402 4 405 4 558 6 885 2 407 2 195 2 1258 12 198 6 38 2 719 6 39 2 564 2 720 2 205 10 565 6 566 2 893 2 567 4 724 2 896 2 897 6 1264 2 418 2 730 6 420 2 1269 2 1270 2 46 2 1272 2 905 6 421 2 906 2 422 2 48 2 222 2 912 6 232 2 740 6 56 4 432 2 917 6 433 2 1281 2 435 10 918 2 437 10 744 8 439 2 440 2 590 2 1112 2 1115 2 748 2 928 2 754 2 930 2 67 2 759 12 66 8 447 2 72 2 1122 2 765 4 602 6 255 4 1131 2 1130 2 1310 12 456 4 606 2 457 2 268 2 269 2 1320 2 948 2 949 2 1322 2 1140 6 274 2 782 2 1147 2 611 4 1335 4 792 8 616 8 1341 10 297 2 979 2 471 2 980 2 1348 2 802 2 987 2 478 2 112 2 991 4 115 2 1173 2 483 2 998 8 1175 6 1000 4 639 2 816 4 817 4 1005 2 643 6 322 12 1011 2 329 52 1376 2 652 2 1017 2 653 4 1019 4 1018 2 493 2 337 6 656 4 342 4 829 2 659 4 661 4 834 2 1033 4 838 6 669 10 1037 2 671 4 145 2 1215 6 673 2 515 2 360 4 147 2 516 2 1043 12 
1241 4 1122 2 765 4 1281 2 433 2 656 2 435 6 255 2 437 6 390 2 342 4 744 2 566 2 1000 2 567 2 1054 2 896 2 816 4 590 2 1112 2 1115 2 268 2 420 2 979 2 402 2 838 6 928 2 471 2 222 2 1037 2 329 4 16 4 147 2 1017 2 67 2 
674 2 72 2 1122 2 765 4 255 2 257 2 1054 2 1228 2 456 4 684 6 858 6 268 2 167 2 691 2 16 4 274 2 1329 3 1241 2 1332 2 544 2 1335 4 389 24 390 2 792 2 616 6 184 2 1245 2 1341 4 706 2 399 3 1068 2 979 2 709 2 402 2 471 2 802 2 885 2 407 2 112 2 199 2 991 3 115 2 483 2 998 6 720 2 566 2 893 2 1000 2 567 2 894 2 639 2 896 2 417 2 420 2 1270 2 1272 2 1011 2 905 4 421 2 906 2 422 2 222 2 48 2 329 28 652 2 1017 2 493 2 433 2 1281 2 656 2 435 6 437 6 342 4 744 2 439 2 661 3 590 2 1112 2 1115 2 1033 4 838 6 510 2 928 2 1037 2 360 4 147 2 516 2 67 2 759 8 
72 2 112 2 1122 2 765 4 38 2 255 2 483 2 566 2 567 4 1000 2 527 2 1054 4 896 2 1228 2 816 8 456 2 684 4 268 2 269 2 420 2 1272 2 421 2 906 2 222 2 1322 2 329 12 16 6 1017 2 178 2 1241 10 493 2 432 2 433 2 1281 2 656 4 435 6 918 2 437 6 389 6 342 4 390 2 744 4 745 2 590 2 1112 2 1115 2 979 2 402 4 1033 2 838 8 980 2 471 2 928 2 1037 2 405 2 671 4 515 2 987 2 147 2 67 2 
72 2 112 2 1122 2 765 4 38 2 524 2 255 2 483 2 564 2 567 4 1000 2 527 2 1054 4 896 2 1228 2 816 8 456 2 684 4 268 2 269 2 420 2 1272 2 421 2 906 2 222 2 1322 2 329 12 16 8 1017 2 178 2 1241 10 1331 4 493 2 432 2 433 2 1281 2 656 4 435 8 918 2 389 6 437 6 390 2 342 4 744 4 590 2 1112 2 1115 2 621 2 979 2 1033 2 402 4 838 8 980 2 471 2 928 2 1037 2 405 2 671 4 515 2 987 2 147 2 67 2 
284 2 420 2 67 2 
284 2 420 2 67 2 
148 2 1 2 72 2 765 4 602 2 255 4 151 2 368 4 527 2 1054 4 1228 2 456 4 857 2 684 6 858 6 1317 2 269 2 1322 2 167 2 691 2 169 4 274 2 16 16 1326 2 284 2 178 4 1241 6 18 2 611 2 1335 4 614 2 389 16 792 2 616 2 184 2 1341 4 706 6 709 2 402 2 1159 2 980 2 405 2 802 2 885 2 407 2 1077 2 112 2 991 2 115 2 483 2 998 2 720 2 564 4 205 4 893 2 567 2 1000 4 639 2 816 4 817 4 899 2 1369 2 216 4 420 6 1270 2 1011 2 421 2 906 2 648 2 422 2 48 2 222 2 329 24 652 2 427 2 232 2 653 2 234 2 493 2 56 4 1280 4 433 4 656 2 435 12 1285 2 437 12 1024 2 342 4 744 4 659 4 439 2 834 2 1115 2 1033 4 838 6 1211 2 928 2 669 4 1038 2 671 4 515 2 360 4 596 4 147 2 759 2 67 4 
148 2 1120 2 1317 2 602 2 432 2 648 2 822 2 389 2 813 2 329 4 792 2 673 2 1228 2 1341 2 1005 2 531 2 653 2 
72 2 765 4 1127 2 255 4 151 2 368 4 527 2 1054 4 1228 2 456 4 684 6 858 6 1317 2 269 2 1322 2 167 2 691 2 169 2 274 2 16 16 176 2 178 4 1241 4 18 2 611 2 1335 4 614 2 389 14 616 2 184 2 1341 2 706 4 709 2 402 2 1159 2 980 2 405 4 802 2 885 2 407 2 112 2 991 4 115 2 483 2 998 2 720 2 812 2 564 4 205 4 893 2 567 2 1000 4 639 2 816 4 817 4 1369 2 216 2 420 4 1270 2 1011 2 421 2 906 2 648 2 422 2 48 2 222 2 329 20 652 2 427 2 232 2 825 2 234 2 493 2 56 4 1280 2 433 4 656 2 435 12 918 2 1285 2 437 12 1024 2 342 4 744 4 659 4 439 2 834 2 1115 2 1033 4 838 6 1211 4 928 2 669 4 1038 1 671 4 515 2 360 4 596 4 147 2 759 2 67 4 
148 2 1 2 72 2 765 4 602 2 255 4 151 2 368 4 527 2 1054 4 1228 2 456 4 684 6 858 6 1317 2 269 2 1322 2 167 2 691 2 169 4 274 2 16 16 284 2 178 4 1241 6 18 2 611 2 1335 4 614 2 389 16 792 2 616 2 184 2 1341 4 706 6 709 2 402 2 1159 2 980 2 405 4 1353 2 802 2 885 2 407 2 112 2 991 2 115 2 483 2 998 2 720 2 564 4 205 4 893 2 567 2 1000 4 639 2 413 2 816 4 817 4 1369 2 216 4 420 6 1270 2 1011 2 421 2 906 2 648 2 422 2 48 2 222 2 329 24 652 2 1096 2 1274 2 427 2 232 2 653 2 234 2 493 2 56 4 1280 4 433 4 1283 2 656 2 435 12 918 2 1285 2 437 12 1024 2 342 4 744 4 659 4 439 2 834 2 1115 2 1033 4 838 6 1211 2 928 2 669 4 1038 1 671 4 515 2 360 4 596 4 147 2 759 2 67 4 
1220 2 1049 16 1048 4 848 4 1222 2 1223 6 525 2 677 3 679 2 853 2 854 2 154 2 681 2 1228 2 528 6 8 4 159 2 856 2 530 2 684 6 532 2 534 2 858 24 1231 4 685 2 860 4 165 2 1233 12 166 2 377 4 691 2 167 6 692 2 1234 2 169 4 379 2 864 2 1236 4 173 2 1239 2 1237 2 1240 46 23 2 701 2 389 46 392 2 391 2 183 3 551 2 1244 12 184 4 1245 2 554 10 706 2 187 2 31 2 399 16 555 2 1069 2 709 2 882 2 34 2 192 2 193 12 885 6 561 2 407 2 715 2 1257 2 716 2 196 2 197 2 1260 2 199 2 888 6 889 2 1082 4 720 2 1262 2 722 2 205 24 893 2 1088 10 1090 12 415 2 568 16 728 2 211 4 1267 2 212 6 417 2 418 2 419 2 571 8 903 2 731 3 45 2 733 2 1270 4 905 12 421 2 906 2 422 4 907 2 48 2 424 2 1092 2 51 2 738 4 915 2 1276 2 741 2 236 2 1105 2 436 4 587 4 1287 2 439 2 1290 2 588 2 241 2 748 2 61 2 750 2 1116 2 1295 2 593 2 445 2 64 14 446 2 756 2 65 4 759 28 758 2 760 2 447 2 449 14 1305 2 72 2 1123 4 935 2 1306 2 256 2 453 2 1136 12 937 2 261 2 768 2 939 2 456 4 942 3 79 2 944 2 81 2 775 2 1321 2 273 6 1139 2 274 4 278 2 782 2 958 2 1143 2 1327 2 1329 2 784 8 1147 2 1332 2 786 2 466 2 965 2 1335 14 612 2 789 2 790 16 286 4 791 4 616 14 1341 2 296 4 297 2 98 8 976 4 99 2 978 2 1345 6 1158 4 301 10 981 4 1163 2 803 2 983 10 802 2 475 4 986 2 477 1 806 2 988 4 629 2 478 2 305 16 306 2 633 2 308 2 991 19 112 2 309 2 310 4 311 2 811 24 1173 2 115 2 483 2 636 4 998 14 314 2 485 4 1363 2 318 2 1001 2 814 12 639 4 641 14 1366 10 1365 4 1004 2 1183 16 325 2 821 2 329 58 650 2 1191 2 1376 2 651 4 126 2 652 2 127 2 1019 20 1195 2 1380 2 336 2 493 2 1023 4 1021 2 828 10 339 4 132 2 1202 2 1385 4 1384 2 661 19 349 2 136 2 833 6 1207 3 137 2 836 2 138 4 1033 4 1035 2 1212 2 669 26 513 12 1038 2 1214 2 143 2 144 2 145 2 359 16 360 12 516 2 1218 14 
685 2 399 2 991 2 498 2 905 2 1321 2 907 2 1212 2 998 2 389 2 301 4 329 2 1088 2 616 2 661 2 516 2 942 2 554 2 588 2 1239 2 1237 2 759 2 1240 6 419 2 
685 2 399 2 991 2 498 2 905 2 1321 2 907 2 1212 2 998 2 389 2 301 4 329 2 1088 2 616 2 661 2 516 2 942 2 554 2 588 2 1239 2 1237 2 759 2 1240 6 419 2 
685 2 399 2 991 2 498 2 905 2 1321 2 907 2 1212 2 998 2 389 2 301 4 329 2 1088 2 616 2 661 2 516 2 942 2 554 2 588 2 1239 2 1237 2 759 2 1240 6 419 2 
464 2 826 2 991 3 430 3 1048 2 521 4 888 6 1282 2 436 2 339 2 1132 4 389 4 1025 4 814 4 1089 4 661 3 682 2 212 4 1207 3 98 2 976 2 1154 2 1231 2 571 2 731 3 1232 2 1158 2 327 2 141 2 329 10 981 2 714 2 651 2 910 4 516 2 1237 2 759 2 1330 2 305 4 784 2 
991 2 1048 2 521 4 888 6 1132 4 814 4 1089 4 682 2 211 2 212 4 1231 2 571 2 731 2 1232 2 327 2 273 2 329 10 651 2 910 4 1237 2 1330 2 784 2 826 2 464 2 430 2 1282 2 339 2 436 2 389 4 1382 2 1025 4 661 2 1207 2 98 2 976 2 1154 2 1158 2 141 2 981 2 714 2 516 2 759 2 305 4 
991 2 1048 2 521 4 888 6 1132 4 814 4 1089 4 682 2 211 2 212 4 1231 2 571 2 731 2 1232 2 327 2 273 2 329 10 651 2 910 4 1237 2 1330 2 784 2 826 2 464 2 430 2 1282 2 339 2 436 2 389 4 1382 2 1025 4 661 2 1207 2 98 2 976 2 1154 2 1158 2 141 2 981 2 714 2 516 2 759 2 305 4 
991 2 1048 2 521 4 888 6 1132 4 814 4 1089 4 682 2 211 2 212 4 1231 2 571 2 731 2 1232 2 327 2 273 2 329 10 651 2 910 4 1237 2 1330 2 784 2 826 2 464 2 430 2 1282 2 339 2 436 2 389 4 1382 2 1025 4 661 2 1207 2 98 2 976 2 1154 2 1158 2 141 2 981 2 714 2 516 2 759 2 305 4 
991 2 1048 2 521 4 888 6 1132 4 814 4 1089 4 682 2 211 4 212 4 1231 2 571 2 731 2 1232 2 327 2 273 4 329 10 651 2 910 4 1237 2 1330 2 784 2 826 2 464 2 430 2 1282 2 339 2 436 2 389 4 1382 4 1025 4 661 2 1207 2 98 2 976 2 1154 2 1158 2 141 2 981 2 714 2 516 2 759 2 305 4 
1196 2 809 2 173 2 320 2 886 2 448 2 
17 2 947 2 388 2 657 2 842 2 886 2 449 2 
632 1 129 2 495 2 112 2 1104 2 1126 2 522 2 635 2 613 2 389 8 678 2 1225 2 345 1 29 2 1203 2 262 2 1265 1 1372 1 574 2 1141 2 329 10 845 2 1095 1 1075 2 1258 2 630 2 
1360 2 1278 2 339 6 436 6 1306 2 389 6 1382 2 316 4 26 2 1063 2 814 12 924 2 528 4 8 2 211 2 212 4 98 6 976 6 571 6 710 2 273 5 329 6 981 2 651 6 171 2 988 2 1328 2 305 16 784 6 306 2 
664 2 573 2 876 2 837 2 237 1 1012 4 389 1 1213 2 1132 2 329 1 680 2 1235 7 462 2 1089 2 910 2 597 2 1206 2 395 2 
664 4 573 2 876 2 837 2 1012 4 1213 4 1132 2 1235 6 680 4 462 2 1089 2 910 2 597 2 1206 2 395 2 
664 8 573 2 876 2 837 2 237 1 1012 4 389 1 1213 8 1132 2 329 1 1235 10 680 8 462 2 1089 2 910 2 597 6 1206 8 395 2 
664 2 573 2 876 2 837 2 1012 2 1213 2 1132 2 1235 2 680 2 462 2 1089 2 910 2 395 2 
1305 2 846 2 1121 2 1222 2 851 2 767 2 681 2 265 2 1312 2 944 4 534 4 858 36 775 2 166 2 167 4 274 2 278 2 279 2 1145 2 385 2 699 2 869 2 1335 20 181 2 389 40 286 4 469 2 1246 8 1340 2 99 2 401 2 796 2 1251 1 299 2 882 2 713 8 1163 4 473 2 885 4 986 2 806 4 716 2 109 2 309 6 479 2 310 6 889 2 40 2 485 6 722 2 411 2 118 2 639 2 1366 10 903 2 121 6 1270 2 489 8 424 4 329 44 650 2 1375 2 51 2 736 2 336 7 494 2 915 2 1197 6 1023 4 338 2 58 2 132 2 584 2 239 2 1286 2 133 2 1385 2 136 2 1114 4 836 2 1116 2 245 2 670 2 669 16 513 6 1038 2 246 6 144 2 445 2 360 18 932 2 65 4 
336 2 109 2 494 2 309 2 92 2 1023 4 1335 6 132 2 389 16 1052 2 286 4 722 2 118 2 639 4 28 2 767 2 939 2 1366 6 534 2 858 18 1270 2 775 2 1387 2 796 2 166 2 882 2 669 12 513 2 167 2 1038 2 424 2 329 18 650 2 274 4 1163 2 885 2 577 2 986 2 360 6 716 2 65 4 
109 2 1305 2 309 2 1049 2 310 4 1222 2 889 2 1262 1 256 2 485 4 722 2 639 6 118 2 939 2 681 2 1366 10 529 2 1183 2 534 2 858 24 903 2 1270 4 775 2 166 2 167 6 424 2 650 2 329 32 274 6 379 2 278 2 51 2 336 2 915 2 494 2 699 2 1023 4 1335 12 132 2 389 28 286 4 133 2 1385 4 1290 1 136 2 99 2 836 2 1387 2 796 2 1116 2 882 1 669 4 513 2 1214 2 144 2 1163 2 885 6 445 2 986 2 360 10 806 2 716 2 65 4 
109 2 494 2 1276 2 1023 2 1335 4 132 2 389 12 286 2 722 2 118 2 639 4 767 2 939 2 1366 2 858 10 1270 2 796 2 669 4 167 2 1038 2 329 12 193 2 650 2 274 4 125 2 885 2 360 4 1302 2 65 2 
703 2 

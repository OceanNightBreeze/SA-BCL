#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V ERROR java.lang.NullPointerException 
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 400 700 127 603 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 94 665 37 
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 94 665 37 
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.OrderedPairIterator:hasNext()Z
daikon.inv.unary.LowerBoundCore:calc_range()J
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:jj_3R_97()Z
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
utilMDE.FuzzyFloat:eq(DD)Z
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
jtb.JavaParser:jj_3R_118()Z
utilMDE.OrderedPairIterator:setnext1()V
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_161()Z
daikon.ValueTuple:isMissingFlow(I)Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.VarInfoName:repr()Ljava.lang.String;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.diff.InvMap:InvMap()V
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.VarInfo:name()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.VarInfoName.Add:amount()Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.ProglangType:elementType()Ldaikon.ProglangType;
jtb.JavaParser:jj_3R_57()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.inv.Invariant:prob_or(DD)D
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
jtb.JavaParser:jj_2_14(I)Z
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.inv.unary.LowerBoundCore:computeConfidence()D
jtb.JavaParser:jj_3R_120()Z
jtb.JavaCharStream:getBeginLine()I
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:sum([[I)I
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.inv.unary.UpperBoundCore:computeConfidence()D
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.Quant:lexLT([I[I)Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
jtb.JavaParser:jj_3R_89()Z
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
jtb.JavaCharStream:getEndColumn()I
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.Quant:eltsNotEqualIndex([I)Z
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
utilMDE.Intern:numIntArrays()I
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.Quant:setDiff([I[I)[I
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.ModBitTracker:num_sets()I
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.diff.Node:children()Ljava.util.Iterator;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.ProglangType:isScalar()Z
jtb.JavaParser:jj_3_3()Z
daikon.Debug:logDetail()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.PptSlice2:arity()I
daikon.Quant:pairwiseDivides([I[I)Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
utilMDE.MathMDE:gcd_differences([I)I
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE:sum([D)D
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_55()Z
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.PptMap:asCollection()Ljava.util.Collection;
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
jtb.JavaParser:jj_3R_162()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.ProglangType:isPseudoArray()Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltsEqual([II)Z
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.Quant:eltsGteIndex([I)Z
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.ModBitTracker:ModBitTracker(I)V
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:eq(II)Z
utilMDE.ArraysMDE:subarray([JII)[J
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
jtb.JavaParser:jj_3R_121()Z
jtb.JavaParser:jj_3R_58()Z
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.Quant:pairwiseLT([I[I)Z
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:lt(II)Z
utilMDE.FuzzyFloat:gt(DD)Z
utilMDE.MathMDE:mod_positive(II)I
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set; | RETURN | 94892 | return null
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
utilMDE.MathMDE:pow(II)I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
jtb.JavaCharStream:backup(I)V
daikon.Quant:pairwiseGTE([I[I)Z
daikon.Quant:intersection([I[I)[I
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.Quant:pairwiseEqual([I[I)Z
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE:fn_compose([I[I)[I
utilMDE.ArraysMDE:indexOf([II)I
utilMDE.ArraysMDE:fn_is_permutation([I)Z
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_54()Z
utilMDE.Intern:intern([I)[I
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.ProglangType:isArray()Z
utilMDE.SimpleLog:SimpleLog(Z)V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.MathMDE:modulus([I)[I
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.Quant:eltwiseGTE([I)Z
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:eltsLteIndex([I)Z
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.Quant:eltsGTE([II)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant:justified()Z
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
jtb.JavaParser:jj_3R_117()Z
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:memberOf(F[F)Z
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_96()Z
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
utilMDE.MathMDE:negate(I)I
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.unary.UpperBoundCore:calc_range()J
jtb.JavaParser:jj_3_16()Z
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.Intern.SequenceAndIndices:hashCode()I
jtb.JavaParser:jj_3R_63()Z
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
jtb.JavaParser:jj_3R_122()Z
daikon.inv.ValueSet:ValueSet(I)V
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
utilMDE.FuzzyFloat:lte(DD)Z
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_48()Z
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
jtb.JavaParser:jj_3R_116()Z
daikon.Quant:pairwiseLTE([I[I)Z
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:eltsNotEqual([II)Z
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.Debug:logOn()Z
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.ValueTuple:isMissing(I)Z
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_scan_token(I)Z
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:min_max([I)[I
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.ValueTuple:size()I
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.Quant:lexEqual([I[I)Z
utilMDE.Intern:internSubsequence([JII)[J
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
jtb.JavaParser:jj_3R_62()Z
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.Quant:setEqual([I[I)Z
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:pairwiseGT([I[I)Z
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.Quant:eltwiseGT([I)Z
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
jtb.ParseException:ParseException(Ljava.lang.String;)V
jtb.JavaParser:jj_3_13()Z
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I | CONSTANT | 4963 | 78 -> 77
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
daikon.inv.Invariant:prob_and(DD)D
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_133()Z
daikon.inv.unary.scalar.LowerBound:enabled()Z
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
jtb.JavaParser:jj_3R_88()Z
jtb.JavaCharStream:ReadByte()C
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
utilMDE.LimitedSizeIntSet:add(I)V
utilMDE.FuzzyFloat:ne(DD)Z
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.PptName:isEnterPoint()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName:hashCode()I
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType; | ASSIGN | 24033 | = null
daikon.inv.Invariants:Invariants()V
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_53()Z
jtb.JavaParser:jj_3_14()Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
utilMDE.ArraysMDE:fn_is_total([I)Z
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.Quant:concat([I[I)[I
jtb.JavaParser:jj_3R_134()Z
utilMDE.LimitedSizeIntSet:size()I
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.VarInfo:relate_var()V
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
jtb.JavaParser:jj_2_4(I)Z
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.NonZero:is_pointer()Z
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
jtb.JavaParser:jj_2_13(I)Z
utilMDE.ArraysMDE:max([I)I
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.diff.RootNode:RootNode()V
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
jtb.JavaParser:jj_2_5(I)Z
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.Quant:lte(II)Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
utilMDE.ArraysMDE:sum([I)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.VarInfoName.Simple:isLiteralConstant()Z
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:generateParseException()Ljtb.ParseException;
jtb.JavaParser:jj_3_10()Z
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.Quant:subsetOf([F[D)Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
jtb.JavaCharStream:FillBuff()V
utilMDE.OrderedPairIterator:setnext2()V
daikon.Quant:eltsGtIndex([I)Z
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.ArraysMDE:element_range([I)I
daikon.Quant:subsetOf([S[S)Z
daikon.inv.Invariant:getConfidence()D
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:lexGT([I[I)Z
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:lexGTE([I[I)Z
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.inv.Invariant:logOn()Z
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.Quant:eq(DD)Z
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_2_15(I)Z
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.inv.OutputFormat:isJavaFamily()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.ModBitTracker:num_vars()I
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_69()Z
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.NonZero:enabled()Z
jtb.JavaParser:jj_2_1(I)Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.VarInfo:new_ppt()V
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.ModBitTracker:split(I)I
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.VarInfoName:simplify_name()Ljava.lang.String;
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.Quant:memberOf(D[F)Z
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
utilMDE.MathMDE:pow_fast(II)I
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.Quant:eltsLtIndex([I)Z
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
jtb.JavaParser:jj_3R_148()Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.Quant:pairwiseSquare([I[I)Z
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.ProglangType:baseIsIntegral()Z
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.PptSlice1:num_samples()I
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.Quant:memberOf(S[S)Z
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
utilMDE.Assert:assertTrue(Z)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
jtb.Token:newToken(I)Ljtb.Token;
daikon.Quant:subsetOf([I[I)Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.Quant:gt(II)Z
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3_12()Z
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:concat([I[I)[I
jtb.JavaCharStream:BeginToken()C
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.test.InvariantFormatTester:execute()Z
daikon.Quant:subsetOf([D[F)Z
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.Quant:lexLTE([I[I)Z
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.ArraysMDE:subarray([III)[I
utilMDE.MathMDE:missing_numbers([I)[I
jtb.JavaParser:jj_3R_76()Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.inv.unary.UpperBoundCore:computeProbability()D
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.inv.Invariant:logDetail()Z
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
jtb.JavaCharStream:getEndLine()I
daikon.Quant:eltsLT([II)Z
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
jtb.JavaParser:jj_2_3(I)Z
utilMDE.FuzzyFloat:lt(DD)Z
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_61()Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.Quant:subsetOf([D[D)Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.Quant:eltsLTE([II)Z
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eltwiseEqual([I)Z
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.VarInfoName.ElementsFinder:inPre()Z
utilMDE.ArraysMDE:sorted([I)Z
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
jtb.JavaParser:jj_3_1()Z
daikon.Quant:eltsGT([II)Z
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
utilMDE.FuzzyFloat:set_rel_diff(D)V
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_15()Z
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.Quant:subsetOf([F[F)Z
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.Quant:sameLength([I[I)Z
daikon.Quant:memberOf(I[I)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:eq(JJ)Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:noDups([I)Z
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.Quant:eq(FF)Z
daikon.PptSlice0:arity()I
daikon.Quant:gte(II)Z
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaCharStream:readChar()C
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.inv.Invariant:isWorthPrinting()Z
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_2_10(I)Z
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.Quant:subsetOf([B[I)Z
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.VarComparabilityImplicit:alwaysComparable()Z
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.ProglangType:isIntegral()Z
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_2_16(I)Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.Quant:eltwiseLTE([I)Z
daikon.Quant:slice([III)[I
jtb.JavaParser:jj_3R_50()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.inv.unary.UpperBoundCore:calc_modulus()J
jtb.JavaParser:jj_3R_119()Z
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
jtb.JavaCharStream:GetImage()Ljava.lang.String;
jtb.JavaParser:jj_3R_123()Z
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
utilMDE.Intern:intern([D)[D
daikon.PptSlice1:arity()I
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE:gcd(JJ)J
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
jtb.JavaParser:jj_3R_60()Z
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.inv.Invariant:prob_and(DDD)D
jtb.JavaParserTokenManager:jjStopAtPos(II)I
utilMDE.Fmt:i(I)Ljava.lang.Integer;
jtb.JavaParser:jj_3R_56()Z
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
utilMDE.MathMDE:gcd([I)I
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
jtb.JavaParser:jj_3R_68()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_85()Z
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V | ASSIGN | 5329 | = null
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:eltsEqualIndex([I)Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.VarInfoName:name()Ljava.lang.String;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.Quant:memberOf(J[J)Z
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.Quant:ne(II)Z
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.Quant:union([I[I)[I
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
jtb.JavaParser:jj_3R_52()Z
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.ValueTuple:tuplemodHasModified(I)Z
jtb.JavaParser:jj_3R_47()Z
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_4()Z
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:gte(DD)Z
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:sum([[D)D
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
jtb.JavaParser:jj_3_5()Z
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:jj_2_12(I)Z
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:min([I)I
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.Quant:lexNotEqual([I[I)Z
jtb.JavaCharStream:getBeginColumn()I
daikon.diff.DetailedStatisticsVisitor:freq(II)D
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_49()Z
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.ArraysMDE:isSubarray([I[II)Z
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
jtb.JavaParser:jj_3R_86()Z
daikon.PptName:isCombinedExitPoint()Z
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.JavaParser:jj_3R_135()Z
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.Quant:memberOf(F[D)Z
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.Ppt:Ppt()V
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.ProglangType:dimensions()I
jtb.JavaParser:jj_ntk()I
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.VarInfoName:toString()Ljava.lang.String;
utilMDE.WeakHasherMap:processQueue()V
daikon.ModBitTracker:num_samples()I
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:subsetOf([J[J)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
utilMDE.Intern:internSubsequence([III)[I
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeList:NodeList()V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.Quant:eltwiseLT([I)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.PptSlice0:initInvariantsSeen()V
utilMDE.MathMDE:sign(I)I
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap:size()I
daikon.ValueTuple:isMissingNonsensical(I)Z
jtb.JavaParser:jj_3R_51()Z
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
utilMDE.Intern:intern([J)[J
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.ParseException:getMessage()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:calc_modulus()J
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.diff.Node:Node()V
daikon.Quant:isReverse([I[I)Z
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_163()Z
daikon.ProglangType:baseIsScalar()Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.MathMDE:gcd(II)I
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.Quant:eltwiseNotEqual([I)Z
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
181 2 389 2 105 2 938 2 414 4 177 2 348 2 521 2 580 2 
482 6 2 2 244 2 100 2 205 6 25 6 937 2 762 2 820 2 46 2 375 2 
651 4 163 6 177 2 727 2 135 2 962 2 123 6 919 6 371 2 219 4 240 2 580 2 706 6 
130 8 97 16 931 10 190 2 352 2 963 6 671 8 70 4 109 10 110 4 248 6 44 26 269 16 936 2 907 2 142 10 615 4 298 8 580 6 116 10 118 8 177 6 528 4 945 10 279 29 980 16 623 2 238 12 628 2 951 2 
929 4 225 6 
908 2 
243 2 136 2 293 2 735 2 487 2 673 2 676 2 80 2 938 2 872 2 748 2 681 2 875 2 433 2 84 2 369 2 950 2 884 2 210 2 444 2 569 2 313 2 635 2 95 2 699 2 772 2 391 2 907 2 580 4 462 2 224 2 465 2 968 2 176 2 177 4 977 4 228 4 408 2 182 2 661 2 281 2 343 4 242 4 241 2 
261 4 130 6 97 32 931 16 767 6 4 4 895 6 768 2 575 4 963 4 671 18 109 16 610 8 248 4 43 2 44 48 269 32 142 6 580 4 428 6 116 16 17 4 81 2 779 4 177 4 620 2 528 2 945 16 593 2 435 2 786 4 980 32 279 54 439 4 694 6 818 6 238 22 628 2 374 6 
676 2 405 2 173 2 
252 2 80 2 201 2 702 2 898 2 690 2 549 2 390 10 645 2 477 2 309 2 867 2 258 2 14 22 
97 2 931 2 544 2 39 2 103 2 102 2 671 2 109 2 248 2 269 2 44 4 142 4 116 2 715 2 528 2 840 2 621 2 945 2 687 2 279 6 980 2 238 2 953 2 
835 2 448 2 428 6 17 4 116 4 97 8 931 4 895 6 945 4 786 4 980 8 279 16 110 2 109 4 238 4 269 8 44 12 
133 4 383 2 799 4 800 2 289 2 266 2 106 2 487 4 550 2 295 4 173 6 675 4 705 62 616 2 676 8 15 2 523 2 147 10 838 4 149 2 202 14 778 4 939 2 226 2 717 2 51 2 500 2 227 4 719 4 405 2 947 2 256 2 233 4 369 2 87 4 440 2 981 10 59 2 126 4 343 4 
410 2 251 2 811 2 552 2 
344 2 128 2 605 2 725 2 726 8 858 2 729 3 245 3 860 6 6 1 864 2 246 2 609 2 137 2 485 2 12 2 737 3 611 1 613 2 141 1 143 3 250 16 618 2 358 2 746 16 495 2 751 2 497 1 363 24 365 2 877 2 21 2 254 3 503 2 257 32 624 2 370 2 29 1 629 3 373 2 761 2 630 1 509 2 510 2 162 2 38 6 899 4 42 3 267 2 904 2 171 3 775 2 909 2 777 2 270 2 649 1 48 8 397 2 524 1 652 2 50 12 398 3 399 4 401 4 177 34 784 2 914 2 785 8 530 2 657 4 407 2 660 2 920 6 921 2 537 2 282 1 61 2 62 4 186 2 65 2 541 2 415 2 797 2 416 2 933 2 421 2 804 4 425 2 674 1 198 2 199 2 557 2 679 2 559 2 560 2 689 2 946 2 564 2 815 2 306 2 442 2 695 2 952 1 568 32 957 2 824 2 318 24 319 2 455 2 574 6 217 5 218 2 105 2 577 1 579 1 833 16 113 4 220 4 221 2 580 32 326 2 581 2 707 2 327 2 222 2 709 2 837 2 223 2 117 2 467 2 586 2 713 2 329 1 590 3 119 2 331 2 841 2 974 16 975 2 336 2 844 3 475 2 229 1 236 2 850 3 598 1 342 2 
853 2 177 2 
379 2 177 4 795 2 
60 2 
0 16 481 2 728 120 857 4 5 4 8 20 349 2 247 4 734 2 736 2 865 2 869 4 355 2 140 4 491 14 742 2 356 2 249 120 743 2 617 4 145 4 146 4 750 4 874 2 18 2 154 4 366 2 367 8 368 2 879 2 758 24 757 4 24 4 26 16 27 4 760 4 30 16 372 40 632 30 262 4 378 2 891 40 765 22 766 4 638 40 894 2 893 36 381 4 167 2 640 40 515 2 386 2 387 120 769 22 901 2 900 4 644 2 519 2 520 30 648 2 650 10 911 2 175 2 403 4 404 8 915 4 532 10 787 2 53 2 409 20 280 4 790 8 536 4 57 4 183 2 663 44 923 2 283 2 63 4 927 18 413 4 287 4 66 4 288 40 796 18 798 4 546 2 801 2 68 2 670 40 419 2 292 4 935 2 805 12 192 4 193 4 807 4 808 2 76 4 554 2 426 2 427 2 77 40 299 2 79 2 810 4 430 2 940 2 941 2 558 4 683 2 684 4 303 10 432 4 204 2 691 4 692 2 305 4 208 2 209 8 437 2 310 14 441 2 92 2 567 2 93 2 311 4 955 4 958 2 450 10 825 24 96 40 959 20 315 4 698 4 829 4 112 4 966 2 964 2 324 2 325 4 583 40 463 4 469 10 470 2 839 30 716 6 332 2 973 4 471 4 120 2 472 18 843 2 230 40 340 132 235 2 596 6 851 2 600 40 852 4 
395 1 189 2 420 2 703 2 
189 2 99 2 
676 2 161 2 189 2 232 2 886 2 704 2 615 2 
189 2 359 2 704 2 
189 2 584 2 704 2 
845 2 970 2 703 2 
189 2 704 2 
845 2 153 2 
189 2 321 2 
845 2 239 2 703 2 
714 2 195 2 703 2 
591 2 316 2 703 2 
362 2 460 2 703 2 
231 2 200 2 703 2 
845 2 672 2 
189 2 983 2 
714 2 944 2 
755 2 591 2 
364 2 460 2 
200 2 260 2 
845 2 819 2 
200 2 160 2 
483 2 460 2 
263 2 591 2 
714 2 553 2 
351 2 845 2 239 2 703 2 
351 2 845 2 890 2 239 2 703 2 
129 2 845 2 703 2 
561 2 845 2 703 2 
555 2 148 2 979 2 138 2 
676 2 412 2 886 2 599 2 
676 2 161 2 412 2 849 2 886 2 599 2 
676 2 189 2 108 2 886 2 704 2 615 2 
710 2 444 2 
676 2 756 2 886 2 615 2 
685 2 460 2 
200 2 268 2 
714 2 639 2 
668 2 591 2 
200 2 89 2 591 2 
200 2 607 2 591 2 
200 2 591 2 492 2 
502 2 200 2 591 2 
792 2 457 2 676 2 253 2 655 6 23 2 237 6 886 2 
845 2 33 2 
604 2 708 2 696 2 712 2 285 2 917 2 547 2 831 2 934 4 576 2 476 2 505 2 488 2 507 4 354 2 664 2 739 2 14 6 
556 2 703 2 
319 2 
344 2 725 2 605 2 858 2 859 2 860 2 609 2 141 2 613 2 358 2 746 6 360 2 20 2 257 4 624 2 509 2 510 2 162 2 380 2 34 2 512 2 38 4 899 2 267 4 646 2 904 2 522 2 777 2 47 2 48 2 50 8 780 2 399 4 177 26 401 4 784 2 530 2 657 4 920 6 535 2 537 2 662 2 62 2 541 2 416 2 421 2 804 2 191 2 423 2 674 2 429 2 557 2 689 2 946 2 815 2 306 2 564 2 817 4 442 2 695 2 568 6 574 2 105 2 113 4 580 26 328 2 223 2 713 2 119 6 331 2 975 2 336 2 475 2 479 4 
344 2 725 2 605 2 858 2 859 2 860 2 609 2 141 2 613 2 358 2 746 6 360 2 20 2 257 4 624 2 885 2 509 2 510 2 162 2 380 2 34 2 512 2 38 6 899 2 267 4 646 2 904 2 522 2 777 2 47 2 48 2 50 8 780 2 399 4 177 26 401 4 784 2 530 2 657 4 920 6 535 2 537 2 662 2 62 2 541 2 416 2 421 2 804 2 425 2 674 2 429 2 557 2 679 2 689 2 946 2 815 2 306 2 564 2 948 2 817 4 442 2 695 2 568 6 574 2 105 2 322 2 113 4 580 26 223 2 117 2 713 2 119 6 331 2 975 2 336 2 475 2 479 4 
892 2 
572 2 134 2 
602 2 855 2 482 6 132 2 2 4 347 8 731 8 421 2 806 2 353 2 937 2 490 2 144 2 557 2 813 4 754 2 205 6 206 2 25 6 881 2 438 4 308 2 159 2 887 2 442 2 508 2 820 4 633 2 162 2 513 2 166 2 896 2 384 2 40 2 168 2 573 4 770 2 456 2 46 2 580 6 396 2 115 4 582 2 912 2 969 4 713 2 177 12 178 4 401 2 654 2 916 2 530 2 657 2 978 2 920 4 537 2 723 2 982 10 538 2 984 2 
602 2 855 2 482 8 132 2 2 4 347 8 731 8 421 2 806 2 353 2 937 2 490 2 144 2 557 2 813 4 754 2 205 8 206 2 25 6 881 2 438 4 308 2 626 4 159 2 887 2 442 2 508 2 820 4 375 2 633 2 889 2 162 2 513 2 166 2 896 2 384 2 40 2 168 2 573 4 770 2 456 2 580 6 46 2 115 4 582 2 713 2 969 4 277 2 401 2 177 12 178 4 654 2 916 2 530 2 657 2 978 2 920 4 537 2 723 2 982 10 538 2 984 2 
144 2 115 2 969 4 482 2 132 2 2 2 513 2 384 2 40 2 978 2 456 2 806 2 25 2 438 4 308 2 887 2 508 2 820 2 
602 2 855 2 482 6 132 2 2 4 347 4 731 4 421 2 806 2 353 2 490 2 144 2 557 2 813 4 754 2 205 6 206 2 25 4 881 2 438 4 308 2 159 2 887 2 442 2 508 2 820 4 375 2 633 2 162 2 513 2 166 2 896 2 384 2 40 2 168 2 573 4 770 2 456 2 46 2 580 6 396 2 115 4 582 2 912 2 969 4 713 2 177 12 178 4 401 2 654 2 916 2 530 2 657 2 978 2 920 4 537 2 723 2 982 6 538 2 984 2 
602 2 855 2 482 4 132 2 2 4 347 4 731 4 421 2 806 2 353 2 490 2 144 2 557 2 813 4 754 2 205 6 206 2 25 6 881 2 438 4 308 2 159 2 887 2 442 2 508 2 820 4 633 2 162 2 100 2 513 2 166 2 896 2 384 2 40 2 168 2 573 4 770 2 456 2 46 2 580 6 396 2 115 4 582 2 912 2 969 4 713 2 177 12 178 4 401 2 654 2 916 2 530 2 657 2 978 2 920 4 537 2 723 2 982 6 538 2 984 2 
602 2 855 2 482 6 132 2 2 4 347 4 731 8 421 2 806 2 353 2 937 2 490 2 144 2 557 2 813 4 754 2 205 6 206 2 25 6 881 2 438 4 308 2 159 2 887 2 442 2 508 2 820 4 633 2 162 2 513 2 166 2 896 2 384 2 40 2 168 2 573 4 770 2 456 2 46 2 580 6 396 2 115 4 582 2 912 2 969 4 713 2 177 12 178 4 401 2 654 2 916 2 530 2 657 2 978 2 920 4 537 2 723 2 982 6 538 2 984 2 
602 2 855 2 482 6 132 2 2 4 347 8 731 8 421 2 806 2 353 2 937 2 490 2 144 2 557 2 813 4 754 2 205 8 206 2 25 8 881 2 438 4 308 2 159 2 887 2 442 2 508 2 820 4 633 2 162 2 100 2 513 2 166 2 896 2 384 2 40 2 168 2 573 4 770 2 456 2 46 2 580 6 396 2 115 4 582 2 912 2 969 4 713 2 401 2 177 12 178 4 654 2 916 2 530 2 657 2 978 2 920 4 537 2 723 2 982 10 538 2 984 2 
602 2 855 2 482 6 132 2 2 4 347 8 731 8 421 2 806 2 353 2 937 2 490 2 144 2 557 2 813 4 754 2 205 6 206 2 25 6 881 2 438 4 308 2 159 2 887 2 442 2 508 2 820 4 633 2 162 2 513 2 166 2 896 2 384 2 40 2 168 2 573 4 770 2 456 2 46 2 580 6 396 2 115 4 582 2 912 2 969 4 713 2 177 12 178 4 401 2 654 2 916 2 530 2 657 2 978 2 920 4 537 2 723 2 982 10 538 2 984 2 
480 2 725 2 482 4 2 4 3 6 731 2 732 2 11 7 489 6 490 2 746 6 754 2 20 2 255 2 257 2 25 8 504 10 506 2 508 2 509 2 510 2 264 2 34 2 35 2 513 2 38 6 40 2 770 2 773 6 46 4 271 4 48 2 50 4 780 4 526 6 278 2 530 2 533 1 54 2 55 1 534 4 537 2 538 2 60 6 62 2 539 2 541 2 542 6 290 2 804 2 806 2 75 6 809 2 557 2 813 4 562 2 815 2 306 2 564 2 307 1 308 2 88 2 817 4 90 2 91 2 820 4 568 8 570 6 98 8 100 4 573 8 574 2 105 2 113 4 580 24 582 2 115 4 114 7 119 6 331 12 333 2 121 2 592 6 846 2 848 2 344 2 602 2 853 6 855 4 132 2 858 2 860 2 353 2 144 2 358 2 360 2 873 1 876 6 881 2 883 2 887 2 159 4 627 2 633 2 379 6 162 2 896 2 166 2 382 2 168 2 384 2 641 1 642 2 899 2 169 2 904 2 396 2 913 1 399 4 401 4 177 46 178 6 916 2 653 2 654 2 657 4 920 6 184 2 669 2 416 2 421 2 424 2 425 2 678 2 679 2 682 6 203 1 205 12 688 2 206 2 438 4 442 2 443 6 956 6 451 2 213 1 456 2 965 2 967 6 223 2 713 2 969 4 975 2 474 1 475 2 978 2 723 2 982 2 984 2 
853 6 602 2 344 2 480 2 725 2 855 4 482 8 132 2 2 4 3 6 858 2 860 2 731 6 732 2 353 2 489 6 490 2 357 2 144 2 358 2 360 2 746 6 754 2 876 6 20 2 255 2 257 2 504 10 881 2 25 8 506 2 883 2 627 2 159 4 887 2 508 2 509 2 633 2 510 2 379 6 264 2 162 2 34 2 35 2 382 2 166 2 896 2 513 2 38 6 384 2 168 2 40 2 642 2 899 4 267 2 770 2 169 2 904 2 773 6 46 4 271 4 396 2 48 2 50 8 526 6 780 4 399 4 178 6 177 48 401 4 654 2 653 2 916 2 278 2 530 2 657 4 54 2 534 4 920 6 537 2 60 6 538 2 184 2 62 4 539 2 541 2 542 6 669 2 416 2 290 2 421 2 804 4 806 2 937 4 424 2 809 2 75 6 425 2 678 2 557 2 679 2 682 6 813 4 688 2 205 12 562 2 206 2 564 2 306 2 815 2 438 4 88 2 308 2 817 4 443 6 442 2 90 2 91 2 820 4 568 8 570 6 449 2 956 6 451 2 98 8 573 8 574 2 456 2 105 2 113 4 965 2 580 26 967 6 115 4 582 2 223 2 969 4 713 2 119 6 331 12 333 2 121 2 975 2 592 6 475 2 978 2 846 2 848 2 723 2 982 2 984 2 
853 6 602 2 344 2 480 2 725 2 855 4 482 8 132 2 2 4 3 6 858 2 347 4 860 2 731 6 732 2 353 2 489 6 490 2 357 2 144 2 358 2 360 2 746 6 754 2 876 6 20 2 255 2 257 2 504 10 881 2 25 8 506 2 883 2 627 2 159 4 887 2 508 2 509 2 633 2 510 2 379 6 264 2 162 2 34 2 35 2 382 2 166 2 896 2 513 2 38 6 384 2 168 2 40 2 642 2 899 4 267 2 770 2 169 2 904 2 773 6 46 4 271 4 396 2 48 2 50 8 526 6 780 4 399 4 178 6 177 48 401 4 654 2 653 2 916 2 278 2 530 2 657 4 54 2 534 4 920 6 537 2 60 6 538 2 184 2 62 4 539 2 541 2 542 6 669 2 416 2 290 2 421 2 804 4 806 2 937 4 424 2 809 2 75 6 425 2 678 2 557 2 679 2 682 6 813 4 688 2 205 12 562 2 206 2 564 2 306 2 815 2 438 4 88 2 308 2 817 4 443 6 442 2 90 2 91 2 820 4 568 8 570 6 449 2 956 6 451 2 98 8 573 8 574 2 456 2 105 2 113 4 965 2 580 26 967 6 115 4 582 2 223 2 969 4 713 2 119 6 331 12 333 2 121 2 975 2 592 6 475 2 978 2 846 2 848 2 723 2 982 6 984 2 
480 2 725 2 482 10 2 4 3 6 731 6 9 6 732 2 489 6 490 2 746 8 498 2 499 2 754 2 20 2 255 2 257 4 25 10 504 8 759 6 506 2 508 2 509 2 510 2 264 2 34 4 513 2 38 6 40 2 267 2 770 2 773 6 774 2 46 4 271 4 48 4 50 10 780 4 526 6 278 2 530 2 788 2 54 2 534 4 537 2 538 2 60 12 62 4 539 2 793 6 541 2 542 6 290 2 291 6 804 4 69 6 806 2 75 6 809 2 557 2 813 4 562 2 83 2 815 2 306 2 564 2 86 6 308 2 88 2 817 6 90 2 91 2 820 4 568 12 570 12 98 8 100 2 573 8 574 4 105 2 113 4 580 24 582 2 115 4 119 8 331 10 333 2 121 2 592 6 846 2 848 2 344 2 602 2 853 12 855 4 132 2 858 2 347 4 860 4 353 2 357 2 144 2 358 2 360 2 876 12 622 6 881 2 883 2 887 2 159 4 627 2 375 2 633 2 379 12 162 2 165 2 637 2 896 2 166 2 382 2 168 2 384 2 642 2 899 4 169 2 904 2 396 2 399 4 401 4 177 52 178 6 654 2 916 2 653 2 657 4 920 6 184 2 669 2 416 2 421 2 937 4 424 2 425 2 678 2 679 2 682 6 205 16 688 2 206 2 207 6 438 4 442 2 443 12 449 2 956 6 451 2 456 2 965 2 459 6 967 6 223 2 713 2 969 4 975 2 475 2 978 2 722 2 723 2 982 6 984 2 
482 6 132 2 2 4 347 4 166 2 896 2 731 6 513 2 573 2 168 2 40 2 353 2 806 2 937 2 490 2 46 2 396 2 144 2 582 2 969 2 178 2 177 4 813 2 916 2 754 2 205 4 978 2 881 2 25 6 438 2 308 2 723 2 982 4 984 2 820 4 
344 2 725 2 482 6 132 2 2 4 860 3 731 6 353 2 870 2 490 2 144 2 358 2 744 2 746 6 360 2 495 2 754 2 20 2 257 3 881 2 25 6 504 2 259 3 509 2 510 2 162 2 35 2 513 2 896 2 166 2 38 6 40 2 168 2 904 2 46 2 396 2 780 2 399 4 178 2 401 4 177 28 916 2 530 2 657 4 920 6 537 2 538 2 541 2 416 2 421 2 806 2 937 2 425 2 196 2 557 2 679 2 813 2 205 4 815 2 306 2 564 2 438 2 308 2 817 4 442 2 820 4 568 8 317 2 573 2 319 2 574 3 105 2 458 2 113 4 580 24 707 2 582 2 223 2 467 2 969 2 713 2 119 6 331 4 975 2 475 2 978 2 723 2 982 2 984 2 
764 2 723 2 490 2 
764 2 723 2 490 2 
602 2 344 2 725 2 855 4 482 12 2 4 858 4 347 4 730 4 731 6 486 2 738 2 489 2 490 4 614 2 358 2 619 2 747 2 746 2 360 2 752 2 753 2 754 2 19 2 20 2 257 2 504 2 25 12 881 2 159 2 887 2 375 4 509 2 764 2 510 2 162 2 511 2 512 4 513 2 38 6 40 4 899 4 770 2 904 2 392 2 46 4 271 2 50 4 780 6 399 4 178 4 177 24 401 4 654 2 530 2 918 2 657 4 534 2 920 6 537 2 184 2 62 4 284 2 541 2 416 2 421 2 804 4 937 4 425 2 557 2 679 2 813 2 205 16 815 2 306 2 438 2 816 2 308 2 442 2 91 2 445 2 820 4 568 2 826 2 100 4 701 2 573 4 456 2 105 2 113 4 580 16 115 4 223 2 713 2 969 2 119 2 331 4 975 2 475 2 848 2 723 6 724 4 982 6 601 2 
271 2 314 2 713 2 826 2 187 2 177 4 134 2 331 2 752 2 701 2 255 2 504 2 721 2 489 2 424 2 508 2 580 2 
602 2 344 2 725 2 855 4 482 12 2 4 858 4 347 4 730 4 731 6 738 2 489 2 490 4 358 2 619 2 747 2 746 2 360 2 752 2 753 2 754 2 19 2 20 2 257 4 25 12 881 2 159 4 887 2 375 4 509 2 764 2 633 2 510 2 162 2 511 2 512 4 513 2 38 6 40 4 899 4 770 2 904 2 905 2 392 2 776 2 46 4 50 4 780 6 399 4 178 4 177 24 401 4 654 2 530 2 657 4 534 2 920 6 537 2 184 2 62 4 541 2 416 2 421 2 804 4 937 4 297 2 425 2 557 2 679 2 813 2 205 16 304 2 815 2 306 2 438 2 816 2 308 2 442 2 91 2 445 4 820 4 568 2 826 2 100 4 101 2 701 2 573 4 456 2 105 2 113 4 580 16 115 4 223 2 713 2 969 2 119 2 331 2 975 2 475 2 848 2 723 6 724 4 982 6 601 2 
602 2 344 2 725 2 855 4 482 12 2 4 858 4 347 4 730 4 731 6 738 2 489 2 490 4 358 2 619 2 747 2 746 2 360 2 752 2 753 2 754 2 19 2 20 2 257 2 504 2 25 12 881 2 159 4 887 2 375 4 509 2 764 2 633 2 510 2 162 2 511 2 512 4 513 2 38 6 40 4 899 4 770 2 904 2 392 2 46 4 394 2 271 2 273 2 50 4 780 6 781 2 399 4 178 4 177 24 401 4 654 2 530 2 657 4 534 2 920 6 537 2 184 2 62 4 541 2 417 2 416 2 421 2 804 4 937 4 425 2 557 2 679 2 813 2 205 16 815 2 306 2 438 2 816 2 308 2 442 2 91 2 445 2 820 4 568 2 826 2 100 4 701 2 573 4 216 2 456 2 105 2 113 4 580 16 115 4 223 2 713 2 969 2 119 2 331 4 975 2 475 2 848 2 723 6 724 4 982 6 601 2 
656 2 603 2 411 2 436 2 400 2 496 2 828 2 700 2 127 2 
568 2 376 2 667 2 34 6 860 3 7 2 67 2 574 3 961 2 866 2 73 2 296 4 580 2 274 2 746 2 177 2 119 2 337 1 155 2 339 2 257 3 564 2 817 2 125 2 925 3 
568 2 376 2 667 2 34 6 860 2 7 2 67 2 574 2 961 2 866 2 73 2 296 4 580 2 274 2 746 2 177 2 119 2 155 2 339 2 257 2 564 2 817 2 125 2 925 2 
568 2 376 2 667 2 34 6 860 2 7 2 67 2 574 2 961 2 866 2 73 2 296 4 580 2 274 2 746 2 177 2 119 2 155 2 339 2 257 2 564 2 817 2 125 2 925 2 
447 2 568 2 130 4 928 3 97 2 931 2 286 2 574 3 350 2 418 3 830 4 963 2 903 2 109 2 44 4 269 2 172 6 580 4 250 2 745 4 116 2 275 2 151 2 300 2 749 2 177 10 812 3 974 2 976 4 945 2 82 2 339 2 279 6 595 2 257 3 980 2 564 2 56 4 924 2 926 4 
447 2 568 2 130 4 928 2 97 2 931 2 286 2 574 2 350 2 418 2 830 4 671 2 963 2 903 2 109 2 44 4 269 2 172 6 580 4 250 2 745 4 116 2 275 2 151 2 300 2 749 2 177 10 812 2 974 2 976 4 945 2 82 2 339 2 279 4 595 2 257 2 980 2 564 2 56 4 238 2 628 2 924 2 926 4 
447 2 568 2 130 4 928 2 97 2 931 2 286 2 574 2 350 2 418 2 830 4 671 2 963 2 903 2 109 2 44 4 269 2 172 6 580 4 250 2 745 4 116 2 275 2 151 2 300 2 749 2 177 10 812 2 974 2 976 4 945 2 82 2 339 2 279 4 595 2 257 2 980 2 564 2 56 4 238 2 628 2 924 2 926 4 
447 2 568 2 130 4 928 2 97 2 931 2 286 2 574 2 350 2 418 2 830 4 671 2 963 2 903 2 109 2 44 4 269 2 172 6 580 4 250 2 745 4 116 2 275 2 151 2 300 2 749 2 177 10 812 2 974 2 976 4 945 2 82 2 339 2 279 4 595 2 257 2 980 2 564 2 56 4 238 2 628 2 924 2 926 4 
447 2 568 2 130 4 928 2 97 2 931 2 286 2 574 2 350 2 418 2 830 4 671 4 963 2 903 2 109 2 44 4 269 2 172 6 580 4 250 2 745 4 116 2 275 2 151 2 300 2 749 2 177 10 812 2 974 2 976 4 945 2 82 2 339 2 279 4 595 2 257 2 980 2 564 2 56 4 238 4 628 4 924 2 926 4 
388 2 150 2 540 2 588 2 782 2 454 2 
631 2 122 2 58 2 323 2 842 2 522 2 454 2 
954 2 345 2 31 2 823 2 856 1 131 2 162 2 606 2 514 2 932 2 543 2 385 2 517 2 111 2 550 1 740 1 580 8 461 2 527 2 226 1 177 10 334 1 338 2 157 2 28 2 443 2 
569 2 822 2 130 4 97 6 931 6 767 4 4 2 863 2 963 2 671 2 170 2 610 2 109 6 44 12 269 6 834 2 74 2 580 6 428 4 17 2 116 6 177 6 152 2 945 6 182 2 279 16 980 6 565 2 238 3 628 2 
745 2 585 4 783 2 827 2 177 1 942 2 431 2 330 1 686 2 976 2 335 2 563 7 693 2 771 2 741 2 580 1 910 2 926 2 
745 2 585 4 827 2 783 2 942 4 431 2 686 2 976 2 335 2 563 6 771 2 693 4 741 4 910 2 926 2 
745 2 585 4 827 8 783 2 177 1 942 8 431 2 330 1 686 2 976 2 335 2 563 10 771 2 693 8 741 8 580 1 910 6 926 2 
745 2 585 2 783 2 942 2 431 2 686 2 976 2 335 2 563 2 771 2 693 2 741 2 926 2 
344 4 854 2 1 1 861 2 13 2 493 2 878 2 880 2 763 2 32 4 38 14 37 2 41 2 897 2 516 2 902 4 174 2 525 4 399 8 177 20 179 2 659 4 922 2 665 2 185 2 64 2 545 2 548 2 422 2 72 1 425 4 677 2 679 4 434 2 446 2 821 4 94 2 212 2 104 2 107 1 113 6 580 20 464 1 223 4 971 1 718 2 475 4 847 1 234 1 
344 2 185 4 791 2 794 2 346 2 930 2 1 2 188 2 862 2 733 2 10 2 484 4 803 2 71 2 139 2 194 2 868 2 551 2 612 2 78 2 16 2 677 2 871 2 361 2 301 2 680 2 302 2 943 2 501 2 880 2 85 2 882 4 949 2 158 2 566 4 888 2 821 38 571 2 377 2 634 2 94 2 312 2 636 2 164 2 697 2 960 2 214 2 265 2 215 4 36 2 453 2 37 2 38 42 320 2 516 2 643 4 518 2 578 6 113 20 393 2 45 2 580 44 836 2 223 2 174 2 466 2 711 4 276 2 589 2 399 20 972 2 177 46 473 2 180 2 531 2 529 2 718 2 594 2 658 2 406 4 475 2 52 6 659 6 847 2 597 2 789 2 720 2 341 2 478 2 665 2 
666 4 344 2 185 2 854 2 1 2 64 2 802 2 548 2 13 2 194 2 425 4 197 4 493 4 679 4 680 2 943 2 878 2 156 2 814 2 880 2 22 2 882 2 625 2 211 2 821 14 763 2 212 2 32 6 312 2 94 2 636 2 265 2 37 2 38 20 897 2 516 2 902 2 643 2 104 2 906 4 113 8 45 2 580 26 836 2 174 2 223 2 711 2 525 6 399 10 177 26 179 2 718 2 531 2 475 2 659 6 124 2 922 2 665 2 
344 2 185 3 930 2 1 2 608 4 861 10 862 4 545 2 422 2 71 4 294 2 139 2 425 7 677 1 494 2 361 2 679 7 680 2 434 2 880 2 85 2 882 6 446 10 821 15 312 2 94 2 636 2 164 2 960 4 214 2 452 4 36 4 37 2 38 35 516 2 643 6 107 2 113 14 393 4 647 2 580 26 272 2 836 2 174 2 223 2 464 6 711 6 49 2 468 2 971 2 587 2 589 4 399 14 402 2 177 28 718 2 594 2 52 6 475 2 659 8 847 2 234 2 665 2 
832 2 

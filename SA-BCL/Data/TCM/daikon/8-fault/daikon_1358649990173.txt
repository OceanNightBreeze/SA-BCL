#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 541 225 598 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V FAILED junit.framework.AssertionFailedError 601 
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR utilMDE.Assert$AssertionException (102,435) (102,435) 38 887 658 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 38 887 658 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 38 887 658 
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.ProglangType:isArray()Z
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:eltwiseLT([I)Z
daikon.Quant:eq(DD)Z
daikon.ProglangType:baseIsIntegral()Z
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:isSubarray([I[II)Z
utilMDE.FuzzyFloat:lt(DD)Z
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.ArraysMDE:sum([[D)D
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.Quant:eltwiseLTE([I)Z
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:min_max([I)[I
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.Quant:eltsGtIndex([I)Z
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.ModBitTracker:ModBitTracker(I)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ModBitTracker:num_vars()I
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:generateParseException()Ljtb.ParseException;
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.VarInfo:new_ppt()V
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.PptName:isCombinedExitPoint()Z
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
utilMDE.Assert:assertTrue(Z)V
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltsGTE([II)Z
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
jtb.JavaCharStream:FillBuff()V
daikon.PptSlice0.ImplicationWrapper:hashCode()I
utilMDE.ArraysMDE:indexOf([II)I
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:gt(DD)Z
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.Quant:memberOf(D[F)Z
jtb.JavaCharStream:getEndColumn()I
utilMDE.MathMDE:pow_fast(II)I
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.LimitedSizeIntSet:add(I)V
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.Quant:subsetOf([S[S)Z
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eq(II)Z
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.Quant:lexLT([I[I)Z
daikon.Quant:slice([III)[I
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ProglangType:baseIsFloat()Z
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.Quant:lexEqual([I[I)Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.Invariant:logDetail()Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ProglangType:baseIsScalar()Z
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:memberOf(J[J)Z
daikon.Debug:logOn()Z
daikon.Quant:subsetOf([D[F)Z
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.MathMDE:gcd(II)I
utilMDE.FuzzyFloat:gte(DD)Z
jtb.JavaCharStream:getBeginLine()I
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.Quant:pairwiseGT([I[I)Z
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:lexGT([I[I)Z
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
daikon.inv.unary.scalar.Positive:enabled()Z
daikon.Quant:lte(II)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:nonmodulus_strict([I)[I
utilMDE.MathMDE:missing_numbers([I)[I
daikon.Quant:eltsLTE([II)Z
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.inv.unary.UpperBoundCore:calc_modulus()J
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.PptSlice0:arity()I
daikon.PptTopLevel:name()Ljava.lang.String;
utilMDE.MathMDE:pow(II)I
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.inv.unary.UpperBoundCore:calc_range()J
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.inv.unary.UpperBoundCore:computeProbability()D
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:eq(JJ)Z
utilMDE.FuzzyFloat:set_rel_diff(D)V
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.Quant:pairwiseLTE([I[I)Z
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
utilMDE.Intern:intern([J)[J
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.Quant:pairwiseEqual([I[I)Z
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.Quant:concat([I[I)[I
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
utilMDE.MathMDE:mod_positive(JJ)J
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.WeakHasherMap.EntrySet:size()I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.Quant:gt(II)Z
daikon.Quant:pairwiseGTE([I[I)Z
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
utilMDE.ArraysMDE:subarray([III)[I
jtb.JavaCharStream:getBeginColumn()I
utilMDE.LimitedSizeIntSet:size()I
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.Quant:memberOf(F[D)Z
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.FuzzyFloat:isSubset([D[D)Z
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.inv.Invariant:getConfidence()D
daikon.diff.Node:Node()V
daikon.Quant:eltsGteIndex([I)Z
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.Token:newToken(I)Ljtb.Token;
daikon.VarInfo:simplify_name()Ljava.lang.String;
utilMDE.FuzzyFloat:indexOf([DD)I
utilMDE.Options.OptionInfo:argument_required()Z
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 6369 | = null
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.inv.Invariant:logOn()Z
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.OrderedPairIterator:setnext1()V
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaCharStream:backup(I)V
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.Quant:eltsLT([II)Z
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.Quant:eltsLteIndex([I)Z
daikon.Quant:sameLength([I[I)Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.PptSlice1:num_samples()I
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.inv.Invariants:Invariants()V
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.inv.unary.LowerBoundCore:calc_range()J
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.inv.Invariant:justified()Z
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:eltsGT([II)Z
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.ValueTuple:tuplemodHasModified(I)Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.InvMap:InvMap()V
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.ModBitTracker:num_sets()I
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.Quant:subsetOf([I[I)Z
daikon.Quant:eq(FF)Z
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.Quant:eltwiseGTE([I)Z
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
utilMDE.WeakHasherMap:processQueue()V
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
jtb.JavaParser:jj_ntk()I
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.inv.unary.LowerBoundCore:calc_modulus()J
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.ProglangType:isIntegral()Z
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
jtb.ParseException:getMessage()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.ProglangType:isPointerFileRep()Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.Quant:memberOf(F[F)Z
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.PptSlice2:arity()I
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.PptName:isEnterPoint()Z
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.ArraysMDE:fn_is_total([I)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.inv.Invariant:prob_and(DDD)D
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.ValueSet:ValueSet(I)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.MathMDE:mod_positive(II)I
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I | ASSIGN | 184894 | = null
daikon.Quant:noDups([I)Z
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.ModBitTracker:split(I)I
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
utilMDE.MathMDE:modulus([I)[I
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
utilMDE.OrderedPairIterator:setnext2()V
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.inv.Invariant:prob_and(DD)D
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:lte(DD)Z
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaCharStream:GetImage()Ljava.lang.String;
utilMDE.MathMDE:negate(I)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.Quant:eltwiseEqual([I)Z
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:lexLTE([I[I)Z
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant:prob_or(DD)D
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.Quant:memberOf(S[S)Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.Quant:eltwiseGT([I)Z
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.ValueTuple:size()I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
jtb.JavaCharStream:ReadByte()C
utilMDE.FuzzyFloat:eq(DD)Z
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
utilMDE.Intern.SequenceAndIndices:hashCode()I
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.test.FormatTestCase:passes()Z
daikon.inv.unary.LowerBoundCore:computeProbability()D
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.Quant:pairwiseLT([I[I)Z
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
utilMDE.ArraysMDE:fn_compose([I[I)[I
jtb.JavaCharStream:getEndLine()I
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String; | RETURN | 14876 | return null
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:setEqual([I[I)Z
daikon.Quant:eltsEqual([II)Z
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Elements:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptTopLevel.CondIterator:hasNext()Z
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Quant:eltsNotEqual([II)Z
utilMDE.Intern:internSubsequence([JII)[J
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.Quant:setDiff([I[I)[I
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.inv.Invariant:isWorthPrinting()Z
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.PptSlice0:initInvariantsSeen()V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.MathMDE:gcd_differences([I)I
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.test.InvariantFormatTester:execute()Z
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
utilMDE.Intern:intern([D)[D
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.VarInfo:isPointer()Z
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.diff.RootNode:RootNode()V
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.Quant:intersection([I[I)[I
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
utilMDE.ArraysMDE:concat([I[I)[I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.Quant:pairwiseDivides([I[I)Z
daikon.Quant:union([I[I)[I
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.Quant:eltsLtIndex([I)Z
utilMDE.Intern:numIntArrays()I
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.Quant:lexNotEqual([I[I)Z
utilMDE.MathMDE:gcd(JJ)J
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:gte(II)Z
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.Quant:eltsEqualIndex([I)Z
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.ProglangType:dimensions()I
daikon.ValueTuple:isMissingFlow(I)Z
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.inv.unary.scalar.UpperBound:enabled()Z
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
jtb.JavaCharStream:BeginToken()C
daikon.ModBitTracker:num_samples()I
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:name()Ljava.lang.String;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.Quant:subsetOf([D[D)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:subsetOf([J[J)Z
daikon.ValueTuple:isMissing(I)Z
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.MathMDE:bitwiseComplement(I)I
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName; | RETURN | 62448 | return null
utilMDE.MathMDE:sign(I)I
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.ProglangType:isFloat()Z
daikon.Quant:memberOf(I[I)Z
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.ProglangType:isScalar()Z
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
utilMDE.OrderedPairIterator:hasNext()Z
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:ne(II)Z
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.ArraysMDE:min([I)I
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
utilMDE.ArraysMDE:indexOf([ZZ)I
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
utilMDE.WeakHasherMap:size()I
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.Ppt:Ppt()V
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:subsetOf([B[I)Z
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.JavaCharStream:readChar()C
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.ProglangType:isPseudoArray()Z
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.Quant:isReverse([I[I)Z
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:ioa_name()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.Quant:lexGTE([I[I)Z
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.Quant:eltwiseNotEqual([I)Z
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
utilMDE.FuzzyFloat:ne(DD)Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.ParseException:ParseException(Ljava.lang.String;)V
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
utilMDE.SimpleLog.LongVal:LongVal(J)V
utilMDE.ArraysMDE:max([I)I
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.NodeFinder:inPre()Z
utilMDE.ArraysMDE:noDuplicates([D)Z
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.VarInfoName:hashCode()I
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.Quant:subsetOf([F[D)Z
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.Debug:logDetail()Z
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:element_range([I)I
daikon.VarComparabilityImplicit:alwaysComparable()Z
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.inv.Invariant:format()Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:subsetOf([F[F)Z
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.VarInfoName:name()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.Quant:pairwiseSquare([I[I)Z
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
utilMDE.Intern:intern([I)[I
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
utilMDE.ArraysMDE:sum([I)I
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.MathMDE:gcd([I)I
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.PptSlice1:arity()I
utilMDE.ArraysMDE:sum([[I)I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.NodeOptional:NodeOptional()V
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.Quant:lt(II)Z
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:fn_identity(I)[I
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:sorted([I)Z
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.ElementsFinder:inPre()Z
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
utilMDE.Intern:internSubsequence([III)[I
utilMDE.ArraysMDE:sum([D)D
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.VarInfo:relate_var()V
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:subarray([JII)[J
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit; | OPERATOR | 4882 | == -> <
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
102 2 435 2 450 2 827 2 281 4 97 2 672 2 139 2 239 2 
735 2 323 6 72 2 7 2 830 2 466 6 365 2 944 6 741 2 913 2 655 2 
734 2 102 2 435 2 384 4 357 2 267 4 939 6 591 2 560 6 231 6 63 2 817 2 614 6 
840 16 392 12 803 26 489 8 435 6 697 2 60 16 61 16 922 2 593 10 536 8 14 2 246 6 640 2 17 2 353 10 406 10 506 10 674 8 165 29 354 4 102 6 279 4 881 6 932 2 572 2 78 10 943 4 366 4 775 8 
415 6 478 4 
500 2 
841 2 722 2 113 4 435 4 243 2 375 2 605 4 844 2 556 2 846 2 58 4 848 2 438 2 564 2 14 2 901 2 447 2 20 2 682 2 573 2 626 2 912 2 522 2 915 2 751 2 754 2 396 2 923 2 400 2 757 2 820 2 819 2 222 2 102 4 708 4 824 2 827 2 883 2 108 2 543 2 946 2 772 2 486 2 836 2 
840 32 803 48 392 22 490 2 435 4 300 4 806 6 697 2 608 4 847 2 60 32 61 32 593 16 65 2 246 4 851 2 353 6 506 16 406 16 643 2 674 6 165 56 102 4 881 4 825 4 360 6 361 6 795 4 937 6 78 16 366 2 367 6 233 2 293 4 110 4 798 6 50 4 775 18 914 8 
754 2 664 2 928 2 
37 2 804 10 180 2 69 2 677 2 527 22 116 2 301 2 682 2 230 2 309 2 15 2 457 2 475 2 
840 2 392 2 803 4 207 2 269 2 558 2 60 2 873 2 61 2 593 2 353 4 506 2 406 2 165 6 759 2 881 2 514 2 23 2 651 2 78 2 366 2 579 2 775 2 
506 4 406 4 354 2 840 8 165 16 392 4 803 12 825 4 806 6 361 6 861 2 60 8 78 4 61 8 593 4 110 4 926 2 
693 4 694 4 552 2 463 2 844 4 393 4 634 2 664 2 270 4 58 4 212 2 592 4 921 4 754 8 701 2 381 4 350 4 786 2 439 2 757 2 790 4 928 6 505 2 445 14 446 62 539 10 736 2 136 2 195 2 886 2 196 2 482 2 714 2 256 2 289 2 773 4 866 4 743 2 179 10 260 2 
0 2 114 2 918 2 376 2 500 2 310 2 818 2 99 2 509 2 739 2 
3 16 724 2 119 1 494 2 8 2 121 1 123 2 245 2 11 32 496 2 727 2 12 2 728 2 850 2 501 2 127 1 128 1 502 2 852 2 18 6 731 2 250 2 132 2 507 2 618 2 385 1 858 2 859 6 22 2 138 8 737 2 24 1 388 2 625 2 257 2 863 2 519 4 142 2 389 2 864 2 867 12 146 2 147 5 747 2 531 2 394 16 753 2 532 1 153 2 399 3 639 3 401 2 641 2 404 2 35 2 36 4 168 2 169 16 882 2 761 6 410 2 283 1 412 1 44 2 417 16 47 6 769 4 291 2 290 3 48 2 893 2 176 2 546 2 424 24 894 2 178 2 49 2 296 1 776 2 297 3 298 2 431 2 898 3 432 2 52 2 434 2 435 34 662 2 57 1 184 32 561 1 188 1 67 8 902 2 443 2 316 2 444 2 68 2 318 1 450 2 194 2 70 3 452 24 574 3 79 2 455 4 330 2 686 2 690 12 799 2 459 2 583 4 917 3 462 2 807 8 208 2 809 2 90 2 695 2 210 2 589 2 91 2 590 2 700 4 347 4 815 2 816 2 95 2 473 2 925 2 217 1 98 3 100 2 101 2 102 32 706 1 477 2 826 3 828 4 362 2 106 2 363 1 938 2 716 2 109 2 718 2 719 3 112 2 370 3 
460 2 435 2 
435 4 472 2 441 2 
497 2 
205 2 777 18 661 2 181 2 842 2 526 18 587 2 302 2 118 2 810 2 557 2 307 2 346 18 813 2 470 2 637 2 537 2 702 2 130 2 280 2 905 2 135 2 408 2 568 2 765 2 481 2 284 2 942 2 684 2 327 2 421 2 947 2 891 2 770 2 201 2 688 2 629 2 654 2 236 2 774 2 86 2 111 2 
224 1 341 2 656 2 152 2 
940 2 152 2 
726 2 279 2 754 2 126 2 632 2 679 2 152 2 
726 2 562 2 152 2 
726 2 390 2 152 2 
749 2 787 2 341 2 
726 2 152 2 
563 2 749 2 
152 2 571 2 
749 2 253 2 341 2 
553 2 669 2 341 2 
275 2 341 2 240 2 
192 2 186 2 341 2 
910 2 341 2 276 2 
484 2 749 2 
801 2 152 2 
669 2 9 2 
46 2 275 2 
192 2 517 2 
910 2 397 2 
749 2 671 2 
910 2 305 2 
192 2 64 2 
275 2 340 2 
669 2 650 2 
749 2 253 2 159 2 341 2 
749 2 253 2 159 2 341 2 665 2 
749 2 647 2 341 2 
749 2 877 2 341 2 
448 2 
754 2 255 2 126 2 636 2 
754 2 255 2 126 2 636 2 679 2 648 2 
726 2 279 2 754 2 575 2 126 2 152 2 
449 2 564 2 
279 2 155 2 754 2 126 2 
192 2 359 2 
910 2 107 2 
338 2 669 2 
197 2 275 2 
910 2 154 2 275 2 
910 2 491 2 275 2 
910 2 275 2 189 2 
910 2 797 2 275 2 
27 2 150 6 495 2 754 2 126 2 875 2 615 2 25 6 
616 2 749 2 
134 2 508 2 527 6 856 2 464 2 763 2 698 4 10 4 229 2 834 2 288 2 175 2 141 2 835 2 177 2 391 2 692 2 427 2 
884 2 341 2 
938 2 
11 6 727 2 728 2 850 2 504 2 731 2 18 4 507 2 618 2 859 2 22 2 138 2 737 6 625 2 257 2 519 4 867 8 871 2 531 2 753 2 34 2 642 4 761 6 282 2 44 4 285 2 417 6 47 2 769 2 48 2 176 2 893 2 894 2 896 4 776 2 298 2 431 2 435 26 183 2 184 4 561 2 900 2 443 2 316 2 450 2 319 2 680 2 326 2 79 2 455 4 686 2 577 2 690 8 583 2 462 2 90 2 695 2 210 2 91 2 589 2 700 2 347 4 95 2 925 2 217 4 929 2 931 2 102 26 477 2 358 2 828 4 362 2 363 2 717 2 234 2 112 2 
11 6 727 2 12 1 728 2 850 2 504 2 731 2 18 5 507 2 618 2 858 2 859 2 22 2 138 2 737 6 625 2 257 2 519 4 742 2 867 8 871 2 531 2 753 2 34 2 642 4 761 6 282 2 44 4 417 6 47 2 769 2 48 2 176 2 893 2 894 2 896 4 776 2 298 2 431 2 435 26 184 4 561 2 900 2 443 2 316 2 450 2 319 2 680 2 326 2 79 2 455 4 686 2 577 2 690 8 583 2 462 2 90 2 695 2 210 2 91 2 589 2 700 2 347 4 95 2 925 2 217 2 929 2 822 2 102 26 477 2 358 2 933 2 828 4 362 2 363 2 109 1 717 2 234 2 112 2 
582 2 
387 2 678 2 
373 2 433 2 435 12 299 2 436 2 117 4 304 4 723 8 607 2 781 2 59 2 120 2 380 2 440 2 731 2 733 2 620 4 323 6 22 2 72 2 77 2 79 2 738 2 455 2 741 4 627 4 913 2 335 2 206 2 461 2 30 4 209 2 210 2 469 2 211 10 466 6 347 2 214 2 471 2 814 2 215 2 96 2 595 4 402 2 102 6 477 2 761 4 172 2 362 2 227 8 599 2 936 2 365 4 945 2 652 2 944 6 48 2 368 2 771 2 653 2 
373 2 433 2 435 12 299 2 117 4 304 4 723 8 607 2 781 2 59 2 120 2 380 2 440 2 731 2 733 2 567 4 620 4 323 6 22 2 72 2 77 2 79 2 738 2 455 2 81 2 741 4 627 4 913 2 335 2 206 2 461 2 30 4 209 2 210 2 469 2 211 10 466 8 347 2 214 2 471 2 814 2 215 2 595 4 402 2 102 6 477 2 479 2 761 4 172 2 362 2 227 8 599 2 936 2 365 4 945 2 652 2 944 8 48 2 368 2 771 2 653 2 655 2 
206 2 461 2 299 2 323 2 304 4 599 2 936 2 781 2 380 2 466 2 365 2 652 2 214 2 741 2 368 2 627 4 595 2 440 2 
373 2 433 2 435 12 299 2 436 2 117 4 304 4 723 4 607 2 781 2 59 2 120 2 380 2 440 2 731 2 733 2 620 4 323 4 22 2 72 2 77 2 79 2 738 2 455 2 741 4 627 4 335 2 206 2 461 2 30 4 209 2 210 2 469 2 211 6 466 6 347 2 214 2 471 2 814 2 215 2 96 2 595 4 402 2 102 6 477 2 761 4 172 2 362 2 227 4 599 2 936 2 365 4 945 2 652 2 944 6 48 2 368 2 771 2 653 2 655 2 
373 2 433 2 435 12 299 2 436 2 117 4 304 4 723 4 607 2 7 2 781 2 59 2 120 2 380 2 440 2 731 2 733 2 620 4 323 6 22 2 72 2 77 2 79 2 738 2 455 2 741 4 627 4 335 2 206 2 461 2 30 4 209 2 210 2 469 2 211 6 466 4 347 2 214 2 471 2 814 2 215 2 96 2 595 4 402 2 102 6 477 2 761 4 172 2 362 2 227 4 599 2 936 2 365 4 945 2 652 2 944 6 48 2 368 2 771 2 653 2 
373 2 433 2 435 12 299 2 436 2 117 4 304 4 723 4 607 2 781 2 59 2 120 2 380 2 440 2 731 2 733 2 620 4 323 6 22 2 72 2 77 2 79 2 738 2 455 2 741 4 627 4 913 2 335 2 206 2 461 2 30 4 209 2 210 2 469 2 211 6 466 6 347 2 214 2 471 2 814 2 215 2 96 2 595 4 402 2 102 6 477 2 761 4 172 2 362 2 227 8 599 2 936 2 365 4 945 2 652 2 944 6 48 2 368 2 771 2 653 2 
373 2 433 2 435 12 299 2 436 2 117 4 304 4 723 8 607 2 7 2 781 2 59 2 120 2 380 2 440 2 731 2 733 2 620 4 323 8 22 2 72 2 77 2 79 2 738 2 455 2 741 4 627 4 913 2 335 2 206 2 461 2 30 4 209 2 210 2 469 2 211 10 466 6 347 2 214 2 471 2 814 2 215 2 96 2 595 4 402 2 102 6 477 2 761 4 172 2 362 2 227 8 599 2 936 2 365 4 945 2 652 2 944 8 48 2 368 2 771 2 653 2 
373 2 433 2 435 12 299 2 436 2 117 4 304 4 723 8 607 2 781 2 59 2 120 2 380 2 440 2 731 2 733 2 620 4 323 6 22 2 72 2 77 2 79 2 738 2 455 2 741 4 627 4 913 2 335 2 206 2 461 2 30 4 209 2 210 2 469 2 211 10 466 6 347 2 214 2 471 2 814 2 215 2 96 2 595 4 402 2 102 6 477 2 761 4 172 2 362 2 227 8 599 2 936 2 365 4 945 2 652 2 944 6 48 2 368 2 771 2 653 2 
7 4 11 8 727 2 497 6 12 2 503 2 731 2 18 6 733 2 507 2 510 2 511 2 21 2 22 2 737 6 738 2 257 2 741 4 519 4 523 2 745 2 28 2 529 2 30 8 273 2 753 2 755 6 34 2 761 6 542 6 43 1 45 2 47 2 769 2 48 2 771 2 292 2 547 6 298 2 551 2 299 2 304 4 303 6 781 2 59 2 316 2 321 10 323 8 72 4 570 4 324 2 325 6 77 4 79 2 796 1 576 6 83 2 335 2 583 2 88 6 585 2 89 2 90 2 92 1 345 6 93 6 347 4 814 2 95 2 595 4 352 6 102 24 355 4 596 1 362 2 828 4 599 2 365 4 109 2 368 2 837 2 373 2 117 4 607 2 120 2 380 2 610 2 849 1 850 2 133 1 618 2 620 6 859 2 138 2 140 8 862 7 627 4 867 4 870 6 633 1 874 2 876 2 402 2 167 2 172 2 645 2 888 7 414 6 413 2 417 6 652 2 890 2 176 12 894 2 653 2 896 4 433 2 435 46 436 2 184 2 185 2 900 4 440 2 443 2 450 2 455 4 456 2 690 4 203 2 206 2 460 6 461 2 462 2 209 4 210 2 695 2 465 2 466 4 469 2 211 2 468 1 700 2 214 2 924 2 471 2 215 2 472 6 925 2 219 6 929 2 477 2 226 2 227 2 480 2 936 2 935 2 944 12 945 2 234 2 949 1 
373 2 117 4 607 2 120 2 380 2 11 8 610 2 727 2 497 6 12 2 850 2 503 2 18 6 731 2 733 2 507 2 618 2 510 2 511 2 21 2 620 6 859 2 22 2 138 2 140 8 737 6 738 2 257 2 741 4 627 4 519 4 867 8 523 2 745 2 28 2 870 6 529 2 30 8 273 2 753 2 874 2 755 6 876 2 34 2 402 2 167 2 761 6 645 2 172 2 767 2 542 6 44 2 413 2 414 6 45 2 47 2 417 6 652 2 769 4 890 2 48 2 292 2 176 12 771 2 653 2 894 2 547 6 896 4 298 2 551 2 433 2 435 48 299 2 436 2 303 6 304 4 781 2 59 2 184 2 185 2 785 2 900 4 440 2 443 2 316 2 450 2 321 10 323 8 72 4 324 2 570 4 325 6 77 4 79 2 576 6 455 4 83 2 456 2 913 4 203 2 690 8 335 2 206 2 460 6 88 6 583 4 585 2 461 2 462 2 89 2 90 2 209 4 695 2 210 2 465 2 211 2 469 2 466 8 93 6 345 6 700 4 347 4 214 2 471 2 924 2 814 2 472 6 95 2 215 2 925 2 595 4 219 6 352 6 929 2 102 26 355 4 477 2 226 2 828 4 362 2 227 6 480 2 599 2 935 2 936 2 365 4 945 2 944 12 109 2 234 2 368 2 837 2 
373 2 117 4 723 4 607 2 120 2 380 2 11 8 610 2 727 2 497 6 12 2 850 2 503 2 18 6 731 2 733 2 507 2 618 2 510 2 511 2 21 2 620 6 859 2 22 2 138 2 140 8 737 6 738 2 257 2 741 4 627 4 519 4 867 8 523 2 745 2 28 2 870 6 529 2 30 8 273 2 753 2 874 2 755 6 876 2 34 2 402 2 167 2 761 6 645 2 172 2 767 2 542 6 44 2 413 2 414 6 45 2 47 2 417 6 652 2 769 4 890 2 48 2 292 2 176 12 771 2 653 2 894 2 547 6 896 4 298 2 551 2 433 2 435 48 299 2 436 2 303 6 304 4 781 2 59 2 184 2 185 2 785 2 900 4 440 2 443 2 316 2 450 2 321 10 323 8 72 4 324 2 570 4 325 6 77 4 79 2 576 6 455 4 83 2 456 2 913 4 203 2 690 8 335 2 206 2 460 6 88 6 583 4 585 2 461 2 462 2 89 2 90 2 209 4 695 2 210 2 465 2 469 2 211 6 466 8 93 6 345 6 700 4 347 4 214 2 471 2 924 2 814 2 472 6 95 2 215 2 925 2 595 4 219 6 352 6 929 2 102 26 355 4 477 2 226 2 828 4 362 2 227 6 480 2 599 2 935 2 936 2 365 4 945 2 944 12 109 2 234 2 368 2 837 2 
723 4 7 2 11 12 727 2 497 12 12 2 503 2 18 6 731 2 732 2 733 2 251 2 507 2 510 2 511 2 21 2 254 2 22 2 737 8 738 2 257 2 741 4 519 4 523 2 745 2 28 2 529 2 266 6 30 8 273 2 753 2 755 6 34 2 761 6 767 2 542 6 44 2 45 2 47 4 769 4 48 2 771 2 292 2 295 2 547 12 298 2 551 2 299 2 554 2 304 4 303 6 55 6 781 2 59 2 785 2 316 2 321 8 323 10 72 4 570 4 324 2 325 12 77 4 79 2 576 6 83 2 335 2 583 4 88 6 585 2 89 2 90 2 345 12 93 6 347 4 814 2 95 2 595 4 352 6 102 24 355 4 362 2 828 4 599 2 365 4 109 2 368 2 837 2 373 2 117 4 607 2 120 2 380 2 610 2 850 2 382 2 618 2 620 6 859 4 138 4 140 8 627 4 867 10 870 6 874 2 158 6 876 2 402 2 167 2 172 2 645 2 413 2 414 6 417 8 416 6 652 2 890 2 176 10 894 2 653 2 655 2 896 6 430 6 433 2 435 52 436 2 184 4 900 4 440 2 443 2 450 2 681 2 455 4 198 6 913 4 456 2 200 6 690 10 203 2 206 2 460 12 461 2 462 2 209 4 210 2 695 2 465 2 466 10 211 6 469 2 700 4 214 2 471 2 924 2 215 2 472 12 925 2 219 6 929 2 221 6 707 2 477 2 223 6 226 2 227 6 480 2 936 2 935 2 944 16 945 2 234 4 
373 2 206 2 433 2 435 4 461 2 299 2 436 2 117 2 304 2 723 4 607 2 30 2 781 2 120 2 211 4 466 6 214 2 814 2 215 2 402 2 733 2 620 2 172 2 323 6 227 6 599 2 72 2 365 4 944 4 741 4 368 2 627 2 771 2 913 2 653 2 
373 2 117 2 607 2 120 2 11 8 727 2 12 2 498 2 18 6 731 2 733 2 507 2 618 2 620 2 859 3 22 2 737 6 257 2 741 4 627 2 519 4 747 2 30 2 753 2 34 2 402 2 761 6 172 2 417 6 47 3 48 2 422 2 771 2 176 4 653 2 894 2 546 2 896 4 298 2 433 2 778 2 435 28 299 2 436 2 304 2 781 2 184 3 185 2 900 2 443 2 316 2 450 2 321 2 323 6 72 2 79 2 455 4 913 2 335 2 206 2 87 2 461 2 462 2 90 2 210 2 695 2 466 6 211 2 347 4 214 2 814 2 95 2 215 2 925 2 474 2 929 2 102 24 477 2 828 4 362 2 227 6 599 2 938 2 365 4 944 4 109 2 718 2 368 2 603 3 
373 2 433 2 540 2 
373 2 433 2 540 2 
1 2 373 4 117 2 723 4 7 4 380 2 11 2 12 2 124 2 850 4 731 2 18 6 507 2 618 2 21 2 620 4 22 2 737 2 738 2 257 2 741 4 519 4 627 2 521 2 867 4 262 2 30 4 752 2 753 2 34 2 756 2 402 2 170 2 540 2 761 6 646 2 417 2 652 2 769 4 48 2 292 2 176 4 892 2 771 2 894 2 655 4 298 2 899 2 433 6 435 24 303 2 304 2 59 2 184 2 900 6 312 2 443 2 316 2 317 4 450 2 193 2 321 2 907 2 323 12 73 2 72 4 324 2 570 2 77 2 683 4 79 2 328 2 455 4 913 4 690 4 202 2 206 2 583 4 462 2 90 2 209 4 695 2 210 2 469 2 211 6 466 12 700 4 812 2 347 4 95 2 925 2 595 4 217 2 929 2 102 16 355 2 477 2 358 4 828 4 362 2 227 6 599 2 365 4 109 2 944 16 368 4 
102 2 899 2 710 2 355 2 435 4 321 2 678 2 646 2 303 2 480 2 210 2 752 2 610 2 176 2 333 2 440 2 403 2 
1 2 373 4 4 2 117 2 723 4 7 4 380 2 11 2 12 2 124 2 850 4 731 2 18 6 507 2 618 2 21 2 620 4 22 2 737 2 738 2 257 2 741 4 519 4 627 2 521 4 867 4 262 2 530 2 30 4 752 2 753 2 34 2 756 2 402 2 160 2 540 2 761 6 646 2 417 2 652 2 769 4 48 2 292 2 176 2 892 2 771 2 894 2 655 4 657 2 426 2 298 2 899 2 433 6 435 24 303 2 304 2 59 2 184 4 900 6 312 2 443 2 316 2 317 4 450 2 193 2 907 2 323 12 72 4 324 2 570 2 77 4 683 4 79 2 455 4 913 4 690 4 202 2 206 2 583 4 462 2 90 2 209 4 695 2 210 2 469 2 211 6 466 12 700 4 347 4 471 2 95 2 925 2 595 4 929 2 102 16 477 2 358 4 828 4 362 2 227 6 599 2 365 4 109 2 944 16 368 4 
1 2 373 4 117 2 723 4 7 4 609 2 380 2 11 2 12 2 124 2 850 4 731 2 18 6 507 2 618 2 21 2 620 4 513 2 22 2 737 2 738 2 257 2 741 4 519 4 627 2 521 2 867 4 262 2 30 4 752 2 753 2 34 2 756 2 402 2 644 2 540 2 761 6 646 2 417 2 652 2 769 4 48 2 292 2 176 4 892 2 771 2 894 2 655 4 298 2 899 2 433 6 435 24 303 2 304 2 59 2 184 2 900 6 312 2 443 2 316 2 317 4 450 2 193 2 321 2 907 2 323 12 72 4 324 2 570 2 77 4 683 4 79 2 455 4 913 4 690 4 202 2 206 2 337 2 583 4 462 2 90 2 209 4 695 2 210 2 469 2 211 6 466 12 700 4 347 4 471 2 95 2 925 2 595 4 217 1 929 2 930 2 102 16 355 2 477 2 358 4 828 4 362 2 227 6 599 2 365 4 109 2 944 16 368 4 
721 4 488 2 3 4 241 16 242 2 725 4 11 28 727 2 12 7 498 2 16 6 246 4 729 2 504 2 730 2 732 2 731 2 18 29 248 2 249 2 506 4 251 2 507 2 254 2 512 2 22 2 737 14 257 2 740 2 519 14 26 2 523 2 744 1 261 4 263 2 264 6 524 1 746 1 29 2 748 2 265 2 528 2 529 2 268 2 750 4 270 2 272 2 31 2 274 2 753 2 32 2 534 2 535 4 34 2 758 4 760 2 278 2 761 6 39 24 282 2 541 2 764 2 766 2 42 2 287 2 286 2 768 2 47 16 48 2 544 2 773 2 548 2 775 4 51 2 298 2 551 2 779 4 53 12 554 2 780 3 561 2 60 8 61 8 308 16 62 2 65 4 66 2 789 2 311 2 565 12 791 2 316 6 566 2 319 2 569 2 793 14 322 2 794 2 74 2 75 2 76 2 326 2 79 2 78 4 329 2 577 2 332 2 334 4 85 1 336 10 803 12 87 2 584 14 89 2 339 2 806 6 586 2 588 1 90 2 811 10 347 4 593 4 594 12 95 2 821 2 102 48 103 2 823 2 356 2 104 16 828 16 598 2 362 2 363 2 109 7 602 2 603 2 110 4 369 2 838 2 371 10 840 8 115 2 606 4 377 2 378 2 122 2 379 2 125 6 850 4 612 2 382 2 851 2 131 2 854 3 617 2 383 3 618 6 619 10 137 2 386 2 859 19 138 20 860 2 621 4 623 2 628 2 144 2 866 2 867 25 868 2 869 12 392 6 148 2 149 4 871 2 872 2 393 2 635 2 395 2 398 4 156 2 638 2 157 4 878 12 880 4 162 2 405 2 406 4 166 2 165 16 169 4 171 2 645 2 409 3 411 2 889 2 174 1 417 14 418 12 420 16 422 2 176 2 894 2 425 4 895 4 896 12 428 4 897 3 429 14 660 2 435 60 182 2 663 2 184 19 666 2 667 4 900 2 670 2 673 2 443 4 903 2 191 2 674 6 190 2 906 2 451 2 450 4 680 2 681 2 909 2 908 2 911 2 455 4 687 2 199 2 689 2 691 2 690 24 916 4 693 2 462 2 695 4 210 2 696 16 920 2 467 6 213 2 924 4 925 2 474 2 217 1 218 2 704 1 703 2 707 2 709 2 477 2 712 10 225 2 226 2 934 12 713 2 228 2 941 2 715 4 232 2 717 14 234 46 235 2 948 2 237 2 487 2 720 2 
791 2 896 2 102 2 897 2 435 2 712 2 619 4 794 2 386 2 859 2 737 2 75 2 184 2 11 2 811 2 727 2 417 2 47 2 234 6 689 2 730 2 868 2 442 2 821 2 
791 2 896 2 102 2 897 2 435 2 712 2 619 4 794 2 386 2 859 2 737 2 75 2 184 2 11 2 811 2 727 2 417 2 47 2 234 6 689 2 730 2 868 2 442 2 821 2 
791 2 896 2 102 2 897 2 435 2 712 2 619 4 794 2 386 2 859 2 737 2 75 2 184 2 11 2 811 2 727 2 417 2 47 2 234 6 689 2 730 2 868 2 442 2 821 2 
800 2 840 2 803 4 659 4 3 2 435 10 780 3 492 2 343 4 11 2 184 3 782 2 60 2 727 2 61 2 593 2 125 6 246 2 730 2 313 2 277 4 506 2 406 2 675 4 165 5 674 4 163 2 102 4 169 2 383 3 762 2 252 3 71 2 173 4 859 3 78 2 833 2 423 2 145 2 916 2 
800 2 840 2 392 2 803 4 659 4 3 2 435 10 780 2 492 2 343 4 697 2 11 2 184 2 782 2 60 2 727 2 61 2 593 2 125 6 246 2 730 2 313 2 277 4 506 2 406 2 675 4 165 4 674 4 163 2 102 4 169 2 383 2 762 2 252 2 71 2 173 4 859 2 78 2 833 2 423 2 145 2 775 2 916 2 
800 2 840 2 392 2 803 4 659 4 3 2 435 10 780 2 492 2 343 4 697 2 11 2 184 2 782 2 60 2 727 2 61 2 593 2 125 6 246 2 730 2 313 2 277 4 506 2 406 2 675 4 165 4 674 4 163 2 102 4 169 2 383 2 762 2 252 2 71 2 173 4 859 2 78 2 833 2 423 2 145 2 775 2 916 2 
800 2 840 2 392 2 803 4 659 4 3 2 435 10 780 2 492 2 343 4 697 2 11 2 184 2 782 2 60 2 727 2 61 2 593 2 125 6 246 2 730 2 313 2 277 4 506 2 406 2 675 4 165 4 674 4 163 2 102 4 169 2 383 2 762 2 252 2 71 2 173 4 859 2 78 2 833 2 423 2 145 2 775 2 916 2 
800 2 840 2 392 4 803 4 659 4 3 2 435 10 780 2 492 2 343 4 697 4 11 2 184 2 782 2 60 2 727 2 61 2 593 2 125 6 246 2 730 2 313 2 277 4 506 2 406 2 675 4 165 4 674 4 163 2 102 4 169 2 383 2 762 2 252 2 71 2 173 4 859 2 78 2 833 2 423 2 145 2 775 4 916 2 
666 2 483 2 80 2 865 2 259 2 220 2 
549 2 559 2 483 2 717 2 601 2 453 2 41 2 
372 2 525 2 631 2 805 1 435 10 374 2 555 1 271 2 699 2 212 1 348 2 102 8 676 2 136 1 364 1 454 2 79 2 831 2 419 2 685 2 520 2 258 2 84 2 238 2 458 2 547 2 
840 6 803 12 392 4 435 6 300 2 806 4 846 2 697 2 60 6 61 6 593 6 400 2 351 2 247 2 246 2 758 2 405 2 406 6 506 6 165 16 674 4 102 6 407 2 937 4 622 2 78 6 110 2 691 2 775 2 914 2 
675 2 102 1 581 7 435 1 105 2 885 2 173 2 493 4 845 2 343 2 342 2 244 2 516 2 344 1 33 2 613 2 879 2 476 2 
675 2 581 6 105 2 173 2 885 4 493 4 342 2 845 4 343 2 244 2 516 4 33 2 613 2 879 2 476 2 
675 2 102 1 581 10 435 1 105 2 173 2 885 8 493 4 342 8 845 8 343 2 244 2 516 8 344 1 33 2 613 2 879 6 476 2 
675 2 581 2 105 2 173 2 885 2 493 2 845 2 343 2 244 2 516 2 33 2 613 2 476 2 
488 2 241 2 606 5 377 2 12 4 729 2 18 24 248 2 617 2 618 6 860 2 518 2 740 2 519 12 867 4 630 2 524 1 746 1 29 2 750 4 268 2 535 4 398 4 638 2 164 2 166 2 38 2 171 2 411 2 887 2 889 2 174 1 287 2 418 12 420 2 658 2 779 4 435 34 53 2 789 2 673 2 316 6 903 2 451 2 569 2 911 2 331 1 199 2 334 4 85 2 802 2 588 1 695 4 920 2 213 2 94 2 218 2 704 2 102 30 823 2 828 14 713 2 228 2 109 4 232 2 602 2 235 2 948 2 237 2 
315 2 164 2 316 2 102 12 792 2 38 2 618 2 435 12 828 4 887 2 695 2 82 2 519 4 235 2 199 2 594 2 26 2 948 2 867 6 217 2 85 2 704 2 658 2 18 6 
488 4 2 2 843 4 606 10 5 4 377 4 12 18 13 4 499 10 729 6 18 74 853 10 248 4 855 6 617 4 618 6 857 2 860 4 624 20 740 4 519 28 143 4 867 14 630 2 524 6 29 4 750 18 268 4 151 4 398 6 535 6 638 4 161 4 164 2 166 4 38 2 649 16 411 4 40 10 887 2 889 4 287 6 418 18 545 4 294 4 658 2 550 2 779 18 435 70 54 2 53 20 437 6 306 16 784 4 668 4 788 2 789 6 314 2 673 4 904 2 316 6 903 4 792 2 320 4 569 6 578 4 199 2 334 10 85 2 580 2 588 5 919 4 695 2 920 6 213 6 94 2 216 2 218 4 927 2 705 12 102 62 823 4 711 4 828 34 713 2 228 4 109 18 600 4 232 12 602 4 235 2 948 2 485 4 
604 4 839 2 2 2 241 10 435 28 53 10 54 2 606 2 377 2 6 2 56 4 783 2 187 6 12 8 611 2 129 4 729 6 18 36 19 2 316 2 904 4 792 2 617 2 618 2 860 2 515 4 518 2 519 14 199 2 867 14 334 2 204 4 85 2 802 2 524 6 746 2 268 2 695 2 920 2 533 2 213 6 398 2 349 4 217 2 538 2 164 2 102 26 38 2 597 4 828 14 829 2 887 2 174 2 832 2 287 6 109 8 418 8 420 2 235 2 948 2 658 2 
808 2 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V ERROR java.lang.ArrayIndexOutOfBoundsException 470 
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.NullPointerException 156 262 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 1053 526 1023 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.ArrayIndexOutOfBoundsException 54 802 163 
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.ArrayIndexOutOfBoundsException 54 802 163 
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_0()V ERROR java.lang.RuntimeException (427,1304) (427,1304) (505,588) (505,588) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_1()V ERROR java.lang.RuntimeException (427,1304) (427,1304) (505,588) (505,588) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_2()V ERROR java.lang.RuntimeException (427,1304) (427,1304) (505,588) (505,588) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_3()V ERROR java.lang.RuntimeException (427,1304) (427,1304) (505,588) (505,588) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_4()V ERROR java.lang.RuntimeException (427,1304) (427,1304) (505,588) (505,588) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_5()V ERROR java.lang.RuntimeException (427,1304) (427,1304) (505,588) (505,588) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_6()V ERROR java.lang.RuntimeException (427,1304) (427,1304) (505,588) (505,588) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_7()V ERROR java.lang.RuntimeException (427,1304) (427,1304) (505,588) (505,588) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_8()V ERROR java.lang.RuntimeException (427,1304) (427,1304) (505,588) (505,588) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_9()V ERROR java.lang.RuntimeException (427,1304) (427,1304) (505,588) (505,588) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_10()V ERROR java.lang.RuntimeException (427,1304) (427,1304) (505,588) (505,588) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_11()V ERROR java.lang.RuntimeException (427,1304) (427,1304) (505,588) (505,588) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_12()V ERROR java.lang.RuntimeException (427,1304) (427,1304) (505,588) (505,588) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_13()V ERROR java.lang.RuntimeException (427,1304) (427,1304) (505,588) (505,588) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_14()V ERROR java.lang.RuntimeException (427,1304) (427,1304) (505,588) (505,588) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_15()V ERROR java.lang.RuntimeException (427,1304) (427,1304) (505,588) (505,588) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_16()V ERROR java.lang.RuntimeException (427,1304) (427,1304) (505,588) (505,588) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_17()V ERROR java.lang.RuntimeException (427,1304) (427,1304) (505,588) (505,588) 
daikon.test.split.SplitterFactoryTest:testmisc_Fib_main_18()V ERROR java.lang.RuntimeException (427,1304) (427,1304) (505,588) (505,588) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_19()V ERROR java.lang.RuntimeException (427,1304) (427,1304) (505,588) (505,588) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_20()V ERROR java.lang.RuntimeException (427,1304) (427,1304) (505,588) (505,588) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_21()V ERROR java.lang.RuntimeException (427,1304) (427,1304) (505,588) (505,588) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_22()V ERROR java.lang.RuntimeException (427,1304) (427,1304) (505,588) (505,588) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_23()V ERROR java.lang.RuntimeException (427,1304) (427,1304) (505,588) (505,588) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_24()V ERROR java.lang.RuntimeException (427,1304) (427,1304) (505,588) (505,588) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_25()V ERROR java.lang.RuntimeException (427,1304) (427,1304) (505,588) (505,588) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_26()V ERROR java.lang.RuntimeException (427,1304) (427,1304) (505,588) (505,588) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_27()V ERROR java.lang.RuntimeException (427,1304) (427,1304) (505,588) (505,588) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_28()V ERROR java.lang.RuntimeException (427,1304) (427,1304) (505,588) (505,588) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_29()V ERROR java.lang.RuntimeException (427,1304) (427,1304) (505,588) (505,588) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_30()V ERROR java.lang.RuntimeException (427,1304) (427,1304) (505,588) (505,588) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_31()V ERROR java.lang.RuntimeException (427,1304) (427,1304) (505,588) (505,588) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_32()V ERROR java.lang.RuntimeException (427,1304) (427,1304) (505,588) (505,588) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__33()V ERROR java.lang.RuntimeException (427,1304) (427,1304) (505,588) (505,588) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__34()V ERROR java.lang.RuntimeException (427,1304) (427,1304) (505,588) (505,588) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__35()V ERROR java.lang.RuntimeException (427,1304) (427,1304) (505,588) (505,588) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__36()V ERROR java.lang.RuntimeException (427,1304) (427,1304) (505,588) (505,588) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__37()V ERROR java.lang.RuntimeException (427,1304) (427,1304) (505,588) (505,588) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__38()V ERROR java.lang.RuntimeException (427,1304) (427,1304) (505,588) (505,588) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__39()V ERROR java.lang.RuntimeException (427,1304) (427,1304) (505,588) (505,588) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__40()V ERROR java.lang.RuntimeException (427,1304) (427,1304) (505,588) (505,588) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__41()V ERROR java.lang.RuntimeException (427,1304) (427,1304) (505,588) (505,588) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__42()V ERROR java.lang.RuntimeException (427,1304) (427,1304) (505,588) (505,588) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__43()V ERROR java.lang.RuntimeException (427,1304) (427,1304) (505,588) (505,588) 

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameter;)V
jtb.JavaParser:jj_3_21()Z
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
jtb.syntaxtree.Statement:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_105()Z
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptSlice2:arity()I
jtb.JavaParser:jj_3R_75()Z
daikon.inv.unary.UpperBoundCore:computeConfidence()D
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Type;)V
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
jtb.syntaxtree.TypeArgument:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.CompilationUnit:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:ClassOrInterfaceDeclaration(Ljtb.syntaxtree.NodeChoice;Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ClassOrInterfaceBody;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
jtb.syntaxtree.ResultType:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_109()Z
jtb.JavaCharStream:getBeginLine()I
daikon.Quant:memberOf(I[I)Z
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.tools.jtb.Ast:getParent(Ljava.lang.Class;Ljtb.syntaxtree.Node;)Ljtb.syntaxtree.Node; | ASSIGN | 30834 | = null
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
jtb.JavaParser:jj_3R_85()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:jj_2_5(I)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
daikon.ProglangType:baseIsIntegral()Z
jtb.JavaParser:jj_3R_86()Z
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
jtb.syntaxtree.NodeListOptional:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PackageDeclaration;)V
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.Quant:eltsLteIndex([I)Z
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.AdditiveExpression:accept(Ljtb.visitor.Visitor;)V
daikon.ProglangType:isScalar()Z
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.VarInfoName:name()Ljava.lang.String;
jtb.syntaxtree.VariableDeclaratorId:VariableDeclaratorId(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.ArraysMDE:min([I)I
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_124()Z
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:isSubset([D[D)Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_96()Z
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
utilMDE.ArraysMDE:concat([I[I)[I
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.diff.Node:getUserRight()Ljava.lang.Object;
jtb.JavaParser:jj_3R_118()Z
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_72()Z
utilMDE.MathMDE:negate(I)I
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.ReturnStatement:accept(Ljtb.visitor.Visitor;)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
jtb.JavaParser:jj_3R_106()Z
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.inv.Invariant:justified()Z
jtb.syntaxtree.NodeOptional:present()Z
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
jtb.JavaParser:jj_3R_97()Z
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_110()Z
daikon.inv.unary.LowerBoundCore:computeProbability()D
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_47()Z
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
utilMDE.ArraysMDE:sum([[D)D
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.ProglangType:isFloat()Z
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
jtb.JavaParser:jj_3R_101()Z
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
jtb.JavaParser:jj_3R_100()Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
jtb.JavaParser:jj_3R_57()Z
jtb.JavaParser:jj_3R_63()Z
jtb.JavaParser:jj_2_16(I)Z
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
jtb.syntaxtree.MultiplicativeExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBody;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.tools.jtb.Ast:getPackage(Ljtb.syntaxtree.CompilationUnit;)Ljava.lang.String;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:pairwiseGT([I[I)Z
daikon.ProglangType:isArray()Z
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
jtb.JavaParser:jj_3R_108()Z
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalOrExpression;)V
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArguments;)V
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryPrefix;)V
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.Quant:eq(II)Z
daikon.ProglangType:baseIsFloat()Z
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_2_25(I)Z
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ResultType;)V
jtb.JavaParser:jj_scan_token(I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
utilMDE.OrderedPairIterator:setnext2()V
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
jtb.JavaParser:jj_3_14()Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.ValueTuple:isMissingFlow(I)Z
daikon.Quant:eltwiseNotEqual([I)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.Quant:subsetOf([I[I)Z
daikon.PptTopLevel:name()Ljava.lang.String;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_161()Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaCharStream:ReadByte()C
jtb.syntaxtree.TypeArguments:accept(Ljtb.visitor.Visitor;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_58()Z
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.RelationalExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:lexNotEqual([I[I)Z
daikon.inv.unary.UpperBoundCore:calc_range()J
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
jtb.syntaxtree.NullLiteral:accept(Ljtb.visitor.Visitor;)V
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.Quant:pairwiseNotEqual([I[I)Z
utilMDE.Intern:intern([I)[I
jtb.JavaParser:jj_3R_87()Z
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.Quant:pairwiseLT([I[I)Z
daikon.VarInfo:simplify_name()Ljava.lang.String;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AndExpression;)V
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeList:NodeList()V
daikon.inv.Invariants:Invariants()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.Quant:setDiff([I[I)[I
daikon.Quant:eltsGTE([II)Z
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:gt(DD)Z
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeDeclaration;)V
daikon.tools.jtb.Ast:getClassName(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_163()Z
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quant:eltwiseEqual([I)Z
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
jtb.JavaParser:jj_2_12(I)Z
jtb.JavaParser:jj_3R_54()Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.Positive:enabled()Z
utilMDE.UtilMDE:lineNumberFileReader(Ljava.io.File;)Ljava.io.LineNumberReader;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
utilMDE.MathMDE:bitwiseComplement(I)I
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
utilMDE.FuzzyFloat:lt(DD)Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.BlockStatement:accept(Ljtb.visitor.Visitor;)V
daikon.PptName:isCombinedExitPoint()Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
utilMDE.Assert:assertTrue(Z)V
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String; | OPERATOR | 128699 | < -> <=
jtb.syntaxtree.ConditionalOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
jtb.JavaParser:jj_2_14(I)Z
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
jtb.syntaxtree.Type:accept(Ljtb.visitor.Visitor;)V
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
jtb.syntaxtree.TypeDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
jtb.JavaCharStream:getBeginColumn()I
jtb.JavaParser:jj_3R_74()Z
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.Debug:logDetail()Z
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.EqualityExpression;)V
jtb.JavaParser:jj_3R_107()Z
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:pairwiseEqual([I[I)Z
jtb.JavaParser:jj_3_10()Z
jtb.JavaParser:jj_2_35(I)Z
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfo:name()Ljava.lang.String;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
utilMDE.FuzzyFloat:indexOf([D[D)I
jtb.JavaParser:jj_2_13(I)Z
jtb.JavaParser:jj_2_15(I)Z
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.ProglangType:isPseudoArray()Z
daikon.PptSlice1:num_samples()I
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.Quant:eltsGteIndex([I)Z
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.inv.unary.scalar.NonModulus:enabled()Z
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:gte(II)Z
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaCharStream:readChar()C
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.JavaParser:jj_3R_117()Z
utilMDE.MathMDE:mod_positive(II)I
jtb.syntaxtree.ClassOrInterfaceBody:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:sum([D)D
jtb.JavaParser:jj_3R_120()Z
jtb.syntaxtree.NodeListOptional:present()Z
daikon.Quant:eltwiseGT([I)Z
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.Quant:lexEqual([I[I)Z
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArgument;)V
jtb.JavaParser:jj_3R_149()Z
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.inv.ValueSet:ValueSet(I)V
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReturnStatement;)V
jtb.JavaCharStream:BeginToken()C
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Intern:internSubsequence([JII)[J
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
jtb.JavaParser:jj_3_36()Z
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
jtb.syntaxtree.NodeListOptional:elements()Ljava.util.Enumeration;
daikon.Quant:eq(JJ)Z
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:min_max([I)[I
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;)Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.diff.RootNode:RootNode()V
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Simple:isLiteralConstant()Z
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.Intern:numIntArrays()I
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.Quant:subsetOf([F[D)Z
daikon.PptSlice0:initInvariantsSeen()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeSequence;)V
daikon.Debug:logOn()Z
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.MathMDE:gcd_differences([I)I
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
jtb.JavaParser:jj_3R_81()Z
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
jtb.syntaxtree.TypeParameters:accept(Ljtb.visitor.Visitor;)V
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
utilMDE.MathMDE:missing_numbers([I)[I | CONSTANT | 18577 | 0 -> -1
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
jtb.JavaParser:jj_3R_49()Z
jtb.JavaParser:jj_3R_69()Z
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Statement;)V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
utilMDE.FuzzyFloat:indexOf([DD)I
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_55()Z
jtb.syntaxtree.ReferenceType:accept(Ljtb.visitor.Visitor;)V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_126()Z
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.PptName:isEnterPoint()Z
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.MathMDE:gcd(JJ)J
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;)V
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Block;)V
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
utilMDE.Intern:internSubsequence([III)[I
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
daikon.Quant:eltwiseLTE([I)Z
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.inv.Invariant:isWorthPrinting()Z
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.Quant:eq(FF)Z
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE:sign(I)I
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.VarInfoName.Add:amount()Ljava.lang.String;
jtb.syntaxtree.ShiftExpression:accept(Ljtb.visitor.Visitor;)V
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryExpression;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AdditiveExpression;)V
jtb.JavaParser:jj_3R_50()Z
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.ElementsFinder:inPre()Z
jtb.JavaParser:jj_3R_67()Z
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.Quant:pairwiseSquare([I[I)Z
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
utilMDE.MathMDE:gcd([I)I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.VarInfo:new_ppt()V
utilMDE.FuzzyFloat:lte(DD)Z
daikon.inv.Invariant:logOn()Z
jtb.syntaxtree.MethodDeclarator:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:lexGTE([I[I)Z
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double; | ASSIGN | 17372 | = null
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3_12()Z
daikon.ValueTuple:tuplemodHasModified(I)Z
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
jtb.JavaParser:jj_2_36(I)Z
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_51()Z
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.AndExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_60()Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.ProglangType:dimensions()I
utilMDE.ArraysMDE:element_range([I)I
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
daikon.ProglangType:baseIsScalar()Z
daikon.ModBitTracker:num_samples()I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.BlockStatement;)V
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.PostfixExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_68()Z
jtb.JavaParser:jj_3R_80()Z
daikon.Quant:subsetOf([F[F)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
jtb.syntaxtree.ExclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
jtb.JavaParser:jj_3R_123()Z
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.Quant:isReverse([I[I)Z
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:getToken(I)Ljtb.Token;
jtb.JavaParser:jj_2_18(I)Z
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
jtb.syntaxtree.FormalParameter:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.Literal:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.Quant:eltwiseLT([I)Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
jtb.JavaParser:jj_3R_122()Z
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
utilMDE.UtilMDE:lineNumberFileReader(Ljava.lang.String;)Ljava.io.LineNumberReader;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
jtb.syntaxtree.EqualityExpression:accept(Ljtb.visitor.Visitor;)V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.Invariant:format()Ljava.lang.String;
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3_19()Z
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ImportDeclaration;)V
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.Ppt:Ppt()V
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_98()Z
utilMDE.ArraysMDE:sorted([I)Z
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
jtb.JavaParser:jj_3R_104()Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.Quant:eltsGT([II)Z
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.Quant:eq(DD)Z
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.NodeChoice:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.Block:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.Quant:pairwiseLTE([I[I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InstanceOfExpression;)V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.inv.Invariant:logDetail()Z
jtb.JavaParser:jj_3R_134()Z
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.test.TestAst.ClassOrInterfaceDeclarationHarvester:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
jtb.syntaxtree.FormalParameters:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.WeakIdentityHashMap:indexFor(II)I
utilMDE.ArraysMDE:indexOf([II)I
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_52()Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.Token:newToken(I)Ljtb.Token;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
jtb.syntaxtree.TypeParameter:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V
daikon.inv.filter.InvariantFilters:InvariantFilters()V
jtb.JavaParser:jj_3R_164()Z
jtb.JavaParser:jj_3_1()Z
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.Quant:subsetOf([D[F)Z
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
jtb.syntaxtree.ConditionalExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.Quant:subsetOf([J[J)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Name;)V
daikon.inv.unary.scalar.NonModulus:updateResults()V
jtb.JavaParser:jj_3R_114()Z
daikon.Quant:subsetOf([D[D)Z
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ConditionalAndExpression:accept(Ljtb.visitor.Visitor;)V
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.inv.Invariant:getConfidence()D
daikon.Quant:lt(II)Z
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
jtb.syntaxtree.TypeBound:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.inv.OutputFormat:toString()Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.Quant:noDups([I)Z
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.Modifiers:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_16()Z
jtb.syntaxtree.NodeToken:accept(Ljtb.visitor.Visitor;)V
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.config.Configuration:apply(Ljava.lang.String;)V
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.MethodDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap:processQueue()V
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3_3()Z
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.Quant:slice([III)[I
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
utilMDE.FuzzyFloat:eq(DD)Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.syntaxtree.TypeArgument:accept(Ljtb.visitor.Visitor;)V
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:concat([I[I)[I
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:computeConfidence()D
jtb.syntaxtree.ClassOrInterfaceBody:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName:repr()Ljava.lang.String;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.Quant:eltsNotEqual([II)Z
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3_13()Z
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
jtb.syntaxtree.VariableDeclaratorId:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_56()Z
jtb.JavaParser:jj_3R_115()Z
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
jtb.syntaxtree.ImportDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.ProglangType:isPointerFileRep()Z
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.Quant:union([I[I)[I
daikon.Quant:eltsLTE([II)Z
daikon.Quant:eltsLtIndex([I)Z
jtb.syntaxtree.Name:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
jtb.syntaxtree.InclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ClassOrInterfaceBody:ClassOrInterfaceBody(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_180()Z
jtb.syntaxtree.NodeOptional:accept(Ljtb.visitor.Visitor;)V
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.VarInfoName.Elements:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
daikon.Quant:lexLT([I[I)Z
daikon.Quant:eltwiseGTE([I)Z
utilMDE.MathMDE:pow_fast(II)I
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.FuzzyFloat:ne(DD)Z
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
jtb.JavaParser:jj_3_18()Z
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
utilMDE.ArraysMDE:sum([I)I
jtb.syntaxtree.PrimaryExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_2_1(I)Z
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
jtb.syntaxtree.Expression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_ntk()I
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:accept(Ljtb.visitor.Visitor;)V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
jtb.JavaParser:jj_2_4(I)Z
jtb.JavaParser:jj_3R_88()Z
daikon.Quant:memberOf(S[S)Z
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
jtb.JavaParser:jj_3_15()Z
jtb.JavaParser:jj_2_21(I)Z
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_136()Z
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.PptSlice0:arity()I
jtb.JavaCharStream:GetImage()Ljava.lang.String;
jtb.JavaParser:jj_2_3(I)Z
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Modifiers;)V
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
utilMDE.MathMDE:gcd(II)I
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
jtb.JavaParser:jj_3_30()Z
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:jj_3_27()Z
daikon.Quant:lexGT([I[I)Z
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
jtb.JavaParser:jj_3_5()Z
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3_28()Z
daikon.diff.Node:children()Ljava.util.Iterator;
jtb.JavaParser:jj_3_25()Z
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
utilMDE.Intern:intern([J)[J
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InclusiveOrExpression;)V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReferenceType;)V
daikon.ValueTuple:size()I
utilMDE.LimitedSizeIntSet:size()I
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:hashCode()I
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.VarInfo:jml_name()Ljava.lang.String;
jtb.JavaParser:jj_3R_77()Z
jtb.JavaParser:jj_3R_135()Z
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.InstanceOfExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_116()Z
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.Quant:setEqual([I[I)Z
daikon.Quant:lexLTE([I[I)Z
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.CompilationUnit;)V
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalAndExpression;)V
jtb.JavaParser:jj_3R_119()Z
daikon.VarInfoName:ioa_name()Ljava.lang.String;
daikon.Quant:eltsGtIndex([I)Z
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.ClassOrInterfaceType:accept(Ljtb.visitor.Visitor;)V
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
jtb.JavaParser:jj_3R_169()Z
jtb.JavaParser:jj_3_22()Z
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:jj_3R_148()Z
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.OrderedPairIterator:hasNext()Z
jtb.JavaParser:jj_3_4()Z
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.FormalParameter:FormalParameter(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Type;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.VariableDeclaratorId;)V
jtb.JavaParser:jj_3_35()Z
daikon.diff.Node:Node()V
jtb.syntaxtree.TypeDeclaration:TypeDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.SimpleLog:SimpleLog(Z)V
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.test.InvariantFormatTester:execute()Z
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE:pow(II)I
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalExpression;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
jtb.JavaParser:jj_3_17()Z
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.Quant:subsetOf([S[S)Z
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.Quant:intersection([I[I)[I
jtb.JavaParser:jj_3R_73()Z
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PostfixExpression;)V
utilMDE.ArraysMDE:fn_inverse([II)[I
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3R_103()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Literal;)V
daikon.test.FormatTestCase:passes()Z
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.PptSlice1:arity()I
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.Quant:eltsEqualIndex([I)Z
jtb.syntaxtree.NodeSequence:accept(Ljtb.visitor.Visitor;)V
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
utilMDE.OrderedPairIterator:setnext1()V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments;
jtb.JavaParser:jj_3R_70()Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:subarray([JII)[J
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_2_17(I)Z
daikon.diff.Node:add(Ljava.lang.Object;)V
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.PrintAllVisitor:bufPrintln()V
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.Quant:pairwiseDivides([I[I)Z
jtb.syntaxtree.PrimaryPrefix:accept(Ljtb.visitor.Visitor;)V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.Quant:sameLength([I[I)Z
daikon.VarInfo:java_name()Ljava.lang.String;
jtb.JavaParser:jj_3_20()Z
jtb.JavaParser:jj_3R_133()Z
daikon.ModBitTracker:num_vars()I
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:prob_or(DD)D
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
utilMDE.ArraysMDE:subarray([III)[I
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameters;)V
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
jtb.JavaCharStream:getEndLine()I
jtb.syntaxtree.TypeDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_61()Z
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:FormalParameter()Ljtb.syntaxtree.FormalParameter;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ShiftExpression;)V
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
utilMDE.Options.OptionInfo:argument_required()Z
daikon.ModBitTracker:ModBitTracker(I)V
utilMDE.FuzzyFloat:gte(DD)Z
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.Quant:gt(II)Z
jtb.syntaxtree.FormalParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaCharStream:getEndColumn()I
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.ModBitTracker:num_sets()I
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
jtb.syntaxtree.VariableDeclaratorId:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpression;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_102()Z
jtb.JavaParser:jj_3R_53()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Expression;)V
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:VariableDeclaratorId()Ljtb.syntaxtree.VariableDeclaratorId;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.VarInfo:relate_var()V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:jj_3R_62()Z
utilMDE.ArraysMDE:max([I)I
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.Quant:ne(II)Z
jtb.JavaParser:jj_3R_89()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_162()Z
daikon.Quant:eltsLT([II)Z
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_2_10(I)Z
daikon.ValueTuple:isMissing(I)Z
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.PackageDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.ProglangType:isIntegral()Z
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3_29()Z
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.Quant:lte(II)Z
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.diff.InvMap:InvMap()V
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MultiplicativeExpression;)V
jtb.JavaParser:jj_3R_210()Z
jtb.JavaCharStream:backup(I)V
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:esc_name()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
utilMDE.ArraysMDE:fn_identity(I)[I
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameters;)V
jtb.JavaParser:jj_3R_137()Z
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
jtb.syntaxtree.TypeArguments:TypeArguments(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeArgument;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ExclusiveOrExpression;)V
jtb.JavaParser:jj_3R_125()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.RelationalExpression;)V
daikon.inv.Invariant:prob_and(DDD)D
daikon.Quant:memberOf(F[D)Z
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.Quant:memberOf(D[F)Z
jtb.syntaxtree.ClassOrInterfaceDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_99()Z
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.Quant:eltsEqual([II)Z
daikon.ModBitTracker:split(I)I
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_121()Z
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.inv.filter.ObviousFilter:ObviousFilter()V
jtb.syntaxtree.TypeArguments:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeBound;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:sum([[I)I
jtb.JavaParser:jj_3R_48()Z
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
jtb.JavaParser:jj_3R_76()Z
utilMDE.LimitedSizeIntSet:add(I)V
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
jtb.syntaxtree.UnaryExpression:accept(Ljtb.visitor.Visitor;)V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.JavaCharStream:FillBuff()V
jtb.syntaxtree.NodeSequence:elements()Ljava.util.Enumeration;
daikon.Quant:memberOf(F[F)Z
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclarator;)V
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;Z)Z
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
utilMDE.WeakHasherMap:size()I
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:memberOf(J[J)Z
utilMDE.MathMDE:mod_positive(JJ)J
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:subsetOf([B[I)Z
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.VarInfo:isPointer()Z
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
jtb.syntaxtree.CompilationUnit:CompilationUnit(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NullLiteral;)V
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.inv.Invariant:prob_and(DD)D

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
1289 2 1290 2 275 2 242 2 934 2 196 2 944 4 292 2 1288 2 
459 2 1075 6 1160 2 815 2 1177 2 190 6 1261 2 476 6 1125 2 584 2 1011 2 
840 6 642 6 709 6 270 2 843 2 931 2 879 2 693 4 383 2 196 2 143 4 292 2 636 6 
1107 12 987 16 691 4 1108 4 4 8 407 2 1088 2 81 16 342 2 192 4 344 8 884 28 1319 8 196 6 292 6 576 26 237 6 623 2 87 8 433 4 919 6 512 2 1037 10 793 10 56 10 523 16 1307 10 1126 2 1040 2 1273 10 
149 6 595 4 
441 2 
425 4 338 2 1234 2 1275 2 379 2 1110 2 674 2 1241 2 862 2 127 2 307 2 766 2 599 2 350 2 639 2 1161 2 471 2 88 2 870 2 222 2 923 2 478 2 528 2 1040 2 1286 2 1290 2 232 2 1048 4 196 4 976 2 1010 2 292 4 1183 2 154 2 710 4 981 2 665 2 1055 2 713 4 457 2 35 2 77 2 1230 2 1059 2 
1107 16 987 20 4 15 1175 2 406 2 1235 4 81 20 1153 5 323 8 884 36 574 4 1319 6 196 4 292 4 576 33 237 4 1013 2 200 4 679 3 433 2 919 4 1037 6 793 13 56 13 89 6 1194 6 523 20 274 4 1307 13 1126 2 962 4 1273 13 1199 4 
1241 2 1076 2 113 2 
239 2 566 2 211 2 257 2 285 2 287 2 484 2 861 10 1230 2 596 2 1242 2 1138 2 801 22 335 2 
440 2 1107 2 987 2 1150 2 4 2 1233 2 720 2 81 2 194 2 884 6 1318 2 237 2 576 4 433 2 1037 4 793 2 56 2 523 2 524 2 1307 2 279 2 1084 2 1273 2 
1107 4 200 4 987 8 793 4 89 6 56 4 81 8 1194 6 192 2 523 8 884 16 1307 4 962 4 348 2 1273 4 1253 2 576 12 
1026 2 99 2 284 2 377 2 451 2 562 2 859 2 533 2 898 6 470 2 
1232 2 441 2 1136 2 1300 2 170 2 449 2 57 2 1021 2 1251 2 1022 2 
847 2 161 16 849 2 428 2 951 3 341 3 853 4 258 2 7 3 763 3 1113 3 1031 2 764 1 594 2 675 2 507 2 1279 2 1206 3 1280 24 1281 16 1036 1 602 16 770 2 683 3 271 2 11 2 94 2 686 8 1211 2 610 1 967 2 612 2 613 2 615 2 1291 3 532 1 781 2 288 2 20 4 102 4 698 2 445 2 196 34 1137 2 365 24 292 32 447 2 448 1 366 4 980 2 789 1 790 2 1144 4 892 2 792 2 1145 2 1222 3 452 1 295 1 453 2 1306 2 371 1 296 2 372 6 37 8 719 2 460 2 722 3 990 2 726 2 303 2 46 2 215 4 386 2 1070 1 635 2 48 32 1244 2 1162 32 388 2 814 6 916 2 135 2 644 2 312 2 733 2 53 2 1077 2 55 2 1329 2 994 2 1333 2 648 2 649 2 1085 2 563 2 565 2 318 2 399 2 400 2 827 1 829 2 1086 1 932 2 830 5 1336 3 1258 1 322 2 1178 2 656 1 571 2 1007 2 658 8 1262 2 937 2 572 2 150 2 1009 1 408 2 410 2 151 2 69 2 152 2 329 12 1185 6 492 3 242 2 660 6 661 2 662 2 1346 2 754 2 1268 2 418 2 244 1 1018 2 75 12 667 2 583 2 1348 2 155 2 421 2 333 1 845 2 945 2 585 2 251 4 947 4 1201 16 
716 2 196 2 
196 4 1249 2 1353 2 
1106 2 
1 2 2 6 3 2 1028 2 5 2 1030 2 8 2 9 2 1034 2 10 42 680 54 1038 2 681 2 682 4 353 4 12 2 685 2 687 2 357 2 690 4 14 6 15 4 358 2 17 4 1045 2 695 2 1047 2 697 2 1049 2 21 2 701 2 1050 2 1051 2 24 2 1052 2 367 2 707 2 26 2 29 2 30 2 712 4 31 94 714 94 33 2 715 2 374 246 376 18 378 2 40 2 721 6 42 4 723 2 724 50 380 18 43 94 381 86 45 2 727 94 1068 56 729 4 49 2 731 2 732 4 391 2 52 86 1078 2 1079 2 395 6 738 2 58 2 396 6 1082 4 1083 2 59 44 402 2 404 4 403 94 746 4 1090 2 63 2 1092 2 748 2 67 2 68 2 70 42 751 2 752 2 1096 2 412 2 413 48 417 2 419 34 1102 2 76 2 1103 4 423 30 758 2 426 2 79 2 762 4 1114 4 1116 2 86 2 1119 94 432 2 1120 2 1121 4 435 16 90 14 771 4 772 4 775 4 1124 2 776 96 438 2 96 18 97 2 1128 4 778 4 98 2 1130 4 1134 2 1133 4 780 2 101 2 782 4 1135 2 442 4 784 2 786 2 105 2 787 2 106 56 446 56 1141 2 450 2 1143 94 111 50 114 14 795 2 796 2 454 2 115 2 117 2 1148 2 803 6 1149 2 119 2 805 74 120 4 461 6 1151 2 1152 4 121 30 463 8 126 2 810 2 1157 2 1158 16 1159 2 468 4 812 2 130 2 132 2 133 2 134 2 1163 2 136 4 137 2 1164 4 138 4 1165 2 474 28 473 4 817 2 819 22 142 2 821 4 822 4 482 2 823 2 825 2 828 2 1173 2 144 4 1174 2 1176 2 831 2 832 2 485 2 146 2 148 2 487 8 489 4 490 12 1182 2 838 4 1184 2 153 2 841 2 1187 2 842 2 1190 8 1191 4 1193 8 1195 4 493 2 156 2 157 4 497 12 1200 2 1202 4 501 2 851 2 852 50 502 42 1203 4 164 2 165 2 166 2 860 4 508 2 865 2 866 30 509 2 171 2 511 2 174 2 175 8 513 2 176 6 179 2 520 2 521 2 1209 2 871 2 872 4 874 12 530 2 875 2 876 44 184 2 877 2 185 2 187 2 878 2 188 358 880 2 189 6 881 2 193 22 1217 62 885 6 1218 2 1219 2 1220 94 886 2 198 2 890 2 537 2 891 4 538 4 893 52 894 2 896 4 540 2 1228 4 899 2 543 2 542 2 900 2 544 2 545 4 902 2 903 2 905 2 906 2 1237 2 1238 2 550 94 909 2 911 2 551 4 213 4 553 2 216 246 1243 4 217 6 1246 2 1247 2 1248 2 219 2 920 96 559 104 558 2 925 20 928 2 1252 2 224 4 930 2 227 2 1256 2 935 2 568 2 231 22 1259 2 234 2 939 2 238 4 577 16 1266 2 1267 18 940 2 243 2 579 2 582 2 942 12 248 2 247 4 1271 4 1272 4 250 8 946 90 252 86 586 4 587 2 591 2 953 2 261 2 262 2 1276 4 593 2 954 4 956 12 1278 246 264 74 957 2 267 4 958 18 601 2 1282 2 604 2 606 2 272 8 273 4 277 2 607 14 608 2 963 4 1285 2 1287 18 614 2 1292 2 968 2 1295 2 617 36 289 2 1297 2 619 18 972 2 1298 56 982 2 625 46 1302 2 1303 2 294 2 983 18 628 4 629 2 298 12 630 62 299 2 631 4 1310 48 632 2 300 6 304 2 306 2 992 10 308 94 309 2 638 94 311 2 640 2 1323 62 641 18 1325 2 645 2 993 50 313 2 995 16 1332 2 997 4 317 4 650 2 319 2 651 2 320 2 1002 2 653 44 1337 2 1005 2 654 2 1006 2 1008 16 325 8 1342 2 326 2 1012 2 1014 2 1015 2 1017 2 664 6 666 2 1347 2 332 2 668 2 1349 2 1350 2 1351 2 671 12 337 4 336 12 
181 2 1122 1 236 2 1100 2 
181 2 834 2 
181 2 32 2 1241 2 1108 2 19 2 458 2 1044 2 
181 2 32 2 960 2 
181 2 32 2 209 2 
621 2 1186 2 1100 2 
181 2 32 2 
1186 2 1264 2 
181 2 816 2 
1186 2 324 2 1100 2 
363 2 240 2 1100 2 
1140 2 1100 2 684 2 
160 2 1213 2 1100 2 
756 2 201 2 1100 2 
1186 2 269 2 
181 2 207 2 
363 2 634 2 
1140 2 514 2 
382 2 1213 2 
756 2 858 2 
1186 2 1067 2 
349 2 756 2 
1213 2 985 2 
1140 2 61 2 
363 2 837 2 
1186 2 384 2 324 2 1100 2 
1186 2 384 2 324 2 229 2 1100 2 
1186 2 1100 2 1095 2 
1186 2 560 2 1100 2 
769 2 1294 2 122 2 966 2 
1241 2 458 2 92 2 807 2 
1241 2 835 2 19 2 458 2 92 2 807 2 
181 2 32 2 254 2 1241 2 1108 2 458 2 
457 2 768 2 
1241 2 1108 2 799 2 458 2 
1213 2 672 2 
756 2 255 2 
363 2 1192 2 
1140 2 836 2 
857 2 756 2 1140 2 
756 2 1140 2 961 2 
756 2 1140 2 904 2 
756 2 1140 2 569 2 
1111 6 1241 2 1181 2 387 2 128 2 637 6 131 2 458 2 
1186 2 1223 2 
616 2 745 4 1041 2 1255 2 1327 2 882 2 736 2 696 2 420 2 1250 2 525 2 444 2 1299 2 609 2 801 6 677 4 749 2 1320 2 
477 2 1100 2 
155 2 
847 2 853 4 258 2 764 4 1279 2 177 4 271 2 93 2 355 2 686 2 1211 2 965 2 967 2 613 2 20 2 102 2 445 2 1137 2 196 26 699 2 292 26 447 2 366 2 790 2 1144 4 892 2 452 2 453 2 1057 2 372 2 717 2 719 2 990 2 1236 2 1061 2 48 6 1244 2 1162 4 814 4 135 2 1077 2 994 2 394 2 648 2 1333 2 998 4 649 2 565 2 398 2 1171 2 399 2 400 2 318 2 1335 2 936 2 1178 2 656 2 1262 4 408 2 410 2 69 6 152 2 1185 2 329 8 242 2 660 6 659 2 754 2 418 2 74 2 75 8 159 2 947 4 251 4 585 2 1201 6 
847 2 853 4 258 2 764 2 1279 2 600 2 177 4 770 2 271 2 93 2 94 2 355 2 686 2 1211 2 965 2 967 2 613 2 20 2 102 2 445 2 196 26 1137 2 699 2 292 26 447 2 366 2 790 2 1144 4 892 2 452 2 453 2 1057 2 372 2 717 2 719 2 990 2 1236 2 1061 2 48 6 1244 2 1162 4 814 6 135 2 644 2 1077 2 994 2 648 2 1333 2 998 4 649 2 565 2 744 2 398 2 1171 2 399 2 400 2 318 2 1335 2 1178 2 656 2 1262 4 408 2 410 2 69 6 152 2 1185 2 329 8 242 2 660 6 754 2 418 2 74 2 75 8 1020 2 159 2 947 4 251 4 585 2 1201 6 
82 2 
708 2 202 2 
847 2 459 4 1024 2 210 10 462 2 853 2 258 2 41 2 1239 2 910 4 430 4 912 2 991 2 1117 2 1075 6 1160 2 510 2 135 2 959 2 869 2 646 4 1077 2 476 6 141 2 777 2 315 2 95 2 929 2 1170 4 399 2 1293 2 969 2 970 2 1177 2 190 6 1091 4 1215 2 290 2 1137 2 196 12 23 2 700 2 1011 4 703 2 291 2 292 6 575 2 327 2 888 2 199 8 1016 4 660 4 892 2 941 2 1231 2 800 2 669 2 718 8 496 2 251 2 
847 2 1024 2 459 4 210 10 462 2 853 2 258 2 41 2 1239 2 910 4 912 2 430 4 913 2 991 2 1117 2 1075 6 1160 2 510 2 1035 2 135 2 959 2 869 2 646 4 1077 2 476 8 141 2 777 2 315 2 95 2 929 2 1170 4 399 2 1293 2 969 2 970 2 1177 2 190 8 1091 4 1261 2 1215 2 1137 2 196 12 23 2 700 2 108 4 1011 4 703 2 292 6 291 2 575 2 327 2 888 2 199 8 1016 4 660 4 892 2 941 2 1231 2 669 2 800 2 718 8 251 2 
459 2 1075 2 969 2 1016 4 959 2 41 2 1239 2 190 2 1215 2 910 2 430 4 1231 2 991 2 1011 2 669 2 800 2 291 2 327 2 
847 2 459 4 1024 2 210 6 462 2 853 2 258 2 41 2 1239 2 910 4 430 4 912 2 991 2 1117 2 1075 4 1160 2 510 2 135 2 959 2 869 2 646 4 1077 2 476 6 141 2 777 2 315 2 95 2 929 2 1170 4 399 2 1293 2 969 2 970 2 190 6 1091 4 1261 2 1215 2 290 2 1137 2 196 12 23 2 700 2 1011 4 703 2 291 2 292 6 575 2 327 2 888 2 199 4 1016 4 660 4 892 2 941 2 1231 2 800 2 669 2 718 4 496 2 251 2 
847 2 459 4 1024 2 210 6 462 2 853 2 258 2 41 2 1239 2 910 4 430 4 912 2 991 2 1117 2 1075 6 1160 2 510 2 135 2 959 2 869 2 646 4 1077 2 476 6 141 2 777 2 315 2 95 2 929 2 1170 4 399 2 1293 2 969 2 970 2 190 4 1091 4 1215 2 290 2 1137 2 196 12 23 2 700 2 1011 4 703 2 291 2 292 6 575 2 327 2 888 2 199 4 1016 4 660 4 892 2 941 2 584 2 1231 2 800 2 669 2 718 4 496 2 251 2 
847 2 459 4 1024 2 210 6 462 2 853 2 258 2 41 2 1239 2 910 4 430 4 912 2 991 2 1117 2 1075 6 1160 2 510 2 135 2 959 2 869 2 646 4 1077 2 476 6 141 2 777 2 315 2 95 2 929 2 1170 4 399 2 1293 2 969 2 970 2 1177 2 190 6 1091 4 1215 2 290 2 1137 2 196 12 23 2 700 2 1011 4 703 2 291 2 292 6 575 2 327 2 888 2 199 8 1016 4 660 4 892 2 941 2 1231 2 800 2 669 2 718 4 496 2 251 2 
847 2 459 4 1024 2 210 10 462 2 853 2 258 2 41 2 1239 2 910 4 430 4 912 2 991 2 1117 2 1075 8 1160 2 510 2 135 2 959 2 869 2 646 4 1077 2 476 8 141 2 777 2 315 2 95 2 929 2 1170 4 399 2 1293 2 969 2 970 2 1177 2 190 6 1091 4 1215 2 290 2 1137 2 196 12 23 2 700 2 1011 4 703 2 291 2 292 6 575 2 327 2 888 2 199 8 1016 4 660 4 892 2 941 2 584 2 1231 2 800 2 669 2 718 8 251 2 496 2 
847 2 459 4 1024 2 210 10 462 2 853 2 258 2 41 2 1239 2 910 4 430 4 912 2 991 2 1117 2 1075 6 1160 2 510 2 135 2 959 2 869 2 646 4 1077 2 476 6 141 2 777 2 315 2 95 2 929 2 1170 4 399 2 1293 2 969 2 970 2 1177 2 190 6 1091 4 1215 2 290 2 1137 2 196 12 23 2 700 2 1011 4 703 2 291 2 292 6 575 2 327 2 888 2 199 8 1016 4 660 4 892 2 941 2 1231 2 800 2 669 2 718 8 496 2 251 2 
847 2 1024 2 340 6 853 4 503 6 167 1 864 1 168 6 510 2 172 2 678 2 177 4 515 6 869 2 519 1 518 2 527 6 686 2 356 2 689 2 1042 2 190 4 1215 2 20 2 1216 2 196 46 700 2 23 2 703 4 366 2 888 2 889 2 25 2 199 2 892 2 1056 1 1057 4 716 6 372 2 717 2 1231 2 546 2 210 2 1236 2 1239 2 41 2 910 4 912 2 730 1 48 8 1244 2 1075 8 1077 2 220 6 922 2 221 2 740 7 929 2 565 2 399 2 400 2 567 10 1091 6 1260 8 1093 2 408 2 410 2 575 2 69 6 242 2 580 1 941 2 754 2 418 2 755 6 75 4 245 7 1270 1 584 4 249 2 251 4 947 4 1106 6 592 2 258 2 260 2 429 2 430 4 1117 2 84 2 959 2 770 2 1283 2 94 2 777 2 278 2 95 4 967 2 613 2 1293 2 1131 6 283 2 969 2 970 2 102 2 1137 2 788 2 292 24 291 2 447 12 979 1 110 4 1144 4 453 2 1308 6 118 6 800 2 804 2 459 4 990 2 462 2 809 6 465 2 991 2 813 2 469 2 1160 4 1162 2 814 6 1324 2 135 2 646 4 994 2 476 12 818 2 141 2 1330 1 1331 2 315 2 649 2 316 2 999 4 1170 8 1335 2 1004 6 1178 2 1011 4 152 2 327 2 329 4 1185 2 330 2 660 6 1016 4 1019 2 1198 6 669 2 496 2 1201 6 1353 6 
1106 6 847 2 1024 2 340 6 592 2 853 4 258 2 260 2 503 6 429 2 430 4 1117 2 84 2 168 6 510 2 172 2 678 2 959 2 869 2 515 6 177 4 1283 2 770 2 518 2 94 2 777 2 278 2 527 6 686 2 356 2 95 4 967 2 689 2 613 2 1293 2 1131 6 969 2 283 2 1042 2 970 2 190 8 1215 2 20 4 102 4 1216 2 196 48 1137 2 23 2 788 2 700 2 703 4 447 12 291 2 292 26 366 4 888 2 25 2 889 2 199 6 110 4 1144 4 892 2 453 2 1057 4 716 6 1308 6 372 2 118 6 717 2 1231 2 800 2 1313 2 804 2 546 2 459 4 210 2 1236 2 462 2 990 2 41 2 1239 2 809 6 910 4 465 2 912 2 991 2 469 2 813 2 48 8 1244 2 1160 4 1075 8 1162 2 1324 2 814 6 135 2 646 4 1077 2 922 2 220 6 221 2 994 2 476 12 818 2 141 2 1331 2 315 2 316 2 649 2 999 4 565 2 1170 8 929 2 400 2 399 2 1335 2 567 10 1177 4 1004 6 1091 6 1260 8 1178 2 1093 2 1262 2 408 2 1011 4 410 2 69 6 575 2 152 2 327 2 1185 2 329 8 330 2 242 2 1016 4 660 6 1344 2 941 2 754 2 418 2 755 6 75 8 1019 2 1198 6 249 2 669 2 496 2 947 4 251 4 1353 6 1201 6 
1106 6 847 2 1024 2 340 6 592 2 853 4 258 2 260 2 503 6 429 2 430 4 1117 2 84 2 168 6 510 2 172 2 678 2 959 2 869 2 515 6 177 4 1283 2 770 2 518 2 94 2 777 2 278 2 527 6 686 2 356 2 95 4 967 2 689 2 613 2 1293 2 1131 6 969 2 283 2 1042 2 970 2 190 8 1215 2 20 4 102 4 1216 2 1137 2 196 48 23 2 788 2 700 2 703 4 447 12 291 2 292 26 366 4 888 2 25 2 889 2 199 6 110 4 1144 4 892 2 453 2 1057 4 716 6 1308 6 372 2 118 6 717 2 1231 2 800 2 718 4 1313 2 804 2 546 2 459 4 210 6 1236 2 462 2 990 2 41 2 1239 2 809 6 910 4 465 2 912 2 991 2 469 2 813 2 48 8 1244 2 1160 4 1075 8 1162 2 1324 2 814 6 135 2 646 4 1077 2 922 2 220 6 221 2 994 2 476 12 818 2 141 2 1331 2 315 2 316 2 649 2 999 4 565 2 1170 8 929 2 400 2 399 2 1335 2 567 10 1177 4 1004 6 1091 6 1260 8 1178 2 1093 2 1262 2 408 2 1011 4 410 2 69 6 575 2 152 2 327 2 1185 2 329 8 330 2 242 2 1016 4 660 6 1344 2 941 2 754 2 418 2 755 6 75 8 1019 2 1198 6 249 2 669 2 496 2 947 4 251 4 1353 6 1201 6 
847 2 1024 2 499 2 340 12 853 4 503 6 676 2 168 12 510 2 678 2 869 2 177 6 515 6 518 2 522 2 527 6 686 4 356 2 689 2 13 6 1042 2 190 10 1215 2 20 4 1216 2 196 52 700 2 23 2 703 4 366 4 888 2 889 2 25 2 199 6 892 2 1057 4 716 12 372 4 717 2 1231 2 718 4 901 6 546 2 210 6 1236 4 1239 2 41 2 910 4 912 2 48 12 1244 2 1075 10 1077 2 220 6 922 2 221 2 739 2 929 2 565 2 399 2 400 2 567 8 230 6 1091 6 1261 2 1260 8 1093 2 1262 2 408 2 410 2 575 2 69 8 242 2 941 2 754 2 418 2 755 6 75 10 584 2 249 2 251 4 947 4 1106 12 950 2 592 2 258 2 260 2 429 2 430 4 1117 2 84 2 959 2 770 2 1283 2 94 2 777 2 278 2 964 6 95 4 967 2 613 2 1293 2 1131 6 283 2 969 2 970 2 102 4 975 2 1137 2 788 2 978 6 292 24 291 2 447 10 110 4 1144 4 453 2 456 6 798 2 1308 6 118 6 800 2 1313 2 804 2 459 4 990 2 462 2 809 6 1154 6 465 2 633 6 991 2 813 2 469 2 1160 4 1162 4 1324 2 814 6 135 2 646 4 994 2 476 16 818 2 141 2 1331 2 315 2 649 2 316 2 999 4 1169 6 1170 8 1000 2 1335 2 1177 4 1004 12 1178 2 1011 4 152 2 327 2 329 10 1185 4 330 2 660 6 1016 4 1344 2 1019 2 1198 6 669 2 496 2 1201 8 1353 12 
1170 2 929 2 1024 2 459 4 1293 2 1177 2 210 4 970 2 1091 2 190 6 1215 2 912 2 430 2 196 4 700 2 991 2 1011 4 1117 2 291 2 575 2 888 2 327 2 1160 2 1075 6 199 6 1016 2 959 2 646 2 476 4 777 2 315 2 669 2 800 2 718 4 496 2 
847 2 1024 2 590 2 853 4 258 2 430 2 83 2 1117 2 172 2 959 2 177 4 770 2 352 2 94 2 777 2 967 2 613 2 1293 2 970 2 190 6 1215 2 196 28 1137 2 700 2 292 24 447 4 291 2 888 2 199 6 892 2 1144 4 1145 2 453 2 1057 2 372 3 717 2 800 2 459 4 1316 2 210 2 990 2 912 2 1066 3 991 2 48 8 1244 2 1160 2 1075 6 1162 3 814 6 135 2 312 2 646 2 1077 2 994 2 476 4 735 2 315 2 1170 2 929 2 565 2 399 2 400 2 1335 2 1177 2 567 2 1091 2 1178 2 1007 2 408 2 1011 4 410 2 575 2 69 6 152 2 327 2 1185 3 242 2 1016 2 660 6 941 2 754 2 418 2 155 2 669 2 496 2 251 4 947 4 1201 6 
929 2 1257 2 700 2 
929 2 1257 2 700 2 
847 2 80 2 853 4 258 2 764 2 430 2 510 2 869 2 1283 2 770 2 94 2 95 2 967 2 613 2 1042 2 359 2 190 12 1215 4 20 4 102 4 196 24 1137 2 23 2 700 6 703 4 292 16 447 4 366 4 705 2 888 2 368 2 199 6 110 2 1144 4 892 2 453 2 205 4 986 2 1057 6 297 2 717 2 1231 2 800 2 718 4 459 4 210 6 990 2 41 2 1063 2 910 4 125 2 305 2 914 2 48 2 1244 2 1075 12 1160 4 50 2 1162 2 814 6 135 2 646 2 1077 2 476 16 649 4 999 2 565 2 929 4 1170 4 1172 2 398 4 399 2 400 2 1335 2 1257 2 567 2 1177 4 1091 4 1178 2 1261 4 147 2 1263 2 408 2 235 2 1011 4 410 2 69 2 575 2 152 2 329 4 330 2 411 2 242 2 660 6 1016 2 754 2 418 2 755 2 75 4 494 2 584 4 158 4 669 2 947 4 251 4 1201 2 
1025 2 969 2 110 2 892 2 567 2 202 2 922 2 755 2 818 2 494 2 1033 2 196 4 235 2 305 2 447 2 292 2 1139 2 
847 2 853 4 258 2 430 2 510 2 869 2 1283 2 770 2 94 2 95 4 967 2 613 2 1042 2 359 4 1043 2 190 12 1215 4 20 4 102 4 196 24 1137 2 23 2 700 6 703 4 292 16 447 2 366 4 888 2 199 6 1144 4 892 2 453 2 205 4 986 2 1057 6 297 2 717 2 1231 2 800 2 718 4 459 4 210 6 990 2 41 2 1063 2 910 4 125 2 1155 2 305 2 914 2 48 2 1244 2 1075 12 1160 4 50 2 1162 4 814 6 135 2 646 2 1077 2 476 16 141 2 649 4 999 2 1170 4 565 2 929 4 398 4 399 2 400 2 1335 2 1257 2 1177 4 1091 4 1178 2 1261 4 147 2 64 2 1263 2 408 2 235 2 1011 4 410 2 69 2 575 2 152 2 329 4 330 2 1188 2 411 2 1189 2 242 2 660 6 1016 2 754 2 418 2 755 2 75 4 494 2 584 4 158 4 669 2 947 4 251 4 1201 2 
847 2 853 4 258 2 764 1 430 2 510 2 869 2 1283 2 770 2 94 2 95 4 967 2 613 2 779 2 1042 2 359 2 190 12 1215 4 20 4 102 4 104 2 196 24 1137 2 23 2 700 6 703 4 292 16 447 4 366 4 888 2 199 6 110 2 1144 4 892 2 626 2 453 2 205 4 986 2 1057 6 297 2 717 2 1231 2 800 2 718 4 459 4 210 6 990 2 41 2 1063 2 910 4 125 2 305 2 914 2 48 2 915 2 1244 2 1075 12 1160 4 50 2 1162 2 814 6 135 2 646 2 1077 2 476 16 141 2 649 4 999 2 565 2 929 4 1170 4 398 4 399 2 400 2 1335 2 1257 2 567 2 1177 4 1091 4 1178 2 1261 4 147 2 1263 2 408 2 235 2 1011 4 410 2 69 2 575 2 152 2 329 4 330 2 411 2 242 2 660 6 1016 2 754 2 418 2 844 2 755 2 75 4 494 2 584 4 158 4 669 2 947 4 251 4 1201 2 
847 2 161 4 0 2 498 2 499 2 4 4 850 2 162 10 853 4 855 2 856 2 504 6 6 2 343 10 345 2 1032 1 1204 2 346 2 347 2 863 2 1205 2 169 2 867 2 868 2 173 2 178 2 177 12 517 2 516 12 352 2 522 2 180 2 1208 2 523 8 182 4 526 2 1210 2 355 2 686 20 688 2 529 2 186 1 1214 10 360 24 361 12 1046 2 883 2 191 10 362 2 1216 2 884 16 195 2 534 2 699 2 196 64 22 16 702 4 887 16 197 2 706 4 1221 2 369 1 892 2 370 2 895 2 1053 2 203 2 897 2 539 3 204 4 541 2 1226 2 1227 22 1057 2 1229 2 372 16 717 2 373 2 38 4 546 2 39 2 547 12 1060 2 549 2 1236 46 1061 2 907 2 908 4 1064 14 1066 2 552 2 47 2 1069 2 1071 2 728 2 1073 16 48 28 1244 4 1245 1 51 2 389 16 917 4 919 4 390 2 556 2 1077 2 393 2 56 4 734 2 737 2 1080 2 739 2 1081 2 561 1 926 2 742 2 564 4 743 2 223 2 397 2 565 2 400 4 399 2 401 2 226 2 60 2 406 2 62 2 570 2 747 4 65 4 66 2 233 4 1094 4 573 6 408 6 938 1 409 2 410 2 69 14 576 12 750 3 241 16 242 4 71 2 1097 4 414 4 1098 4 754 6 1099 1 418 2 73 2 74 14 1101 14 75 25 1269 2 246 2 249 2 422 2 757 2 1273 4 1105 2 947 20 251 4 948 2 949 4 1107 6 589 2 950 2 759 14 590 2 760 2 952 12 592 2 81 8 258 2 1109 3 259 2 761 1 1112 3 765 6 83 2 597 2 85 2 767 2 602 4 434 2 770 9 89 6 93 2 773 2 94 9 436 2 1127 12 611 2 962 4 965 2 967 2 613 2 281 2 1129 2 283 2 100 2 286 2 783 1 973 2 103 2 974 2 975 2 1137 2 788 2 109 2 447 2 292 52 1301 2 622 4 293 2 791 4 112 6 1144 18 1142 2 452 2 793 4 1305 2 453 2 627 2 984 14 455 2 116 4 1147 2 798 2 1307 4 1309 2 1311 2 1314 4 806 2 1315 2 1316 2 987 8 988 2 301 2 990 2 123 2 124 2 1319 6 1156 2 811 2 129 4 813 4 310 2 1321 6 1322 2 1162 19 814 39 135 2 647 2 139 2 1328 2 1166 3 994 2 314 2 996 2 1168 2 649 4 481 2 824 3 1171 2 652 2 1000 2 321 2 1003 2 1338 2 833 4 1339 1 1178 2 656 2 657 2 1180 2 1340 2 488 3 1341 4 1343 2 152 2 1185 19 329 24 1013 4 660 6 1345 2 663 1 1197 2 495 10 1023 2 159 2 1201 14 846 2 
1185 2 1315 2 1162 2 1129 2 177 2 1060 2 162 2 549 2 1236 6 1109 2 994 2 191 2 123 2 6 2 343 4 657 2 1226 2 439 2 196 2 372 2 292 2 69 2 48 2 1201 2 
1185 2 1315 2 1162 2 1129 2 177 2 1060 2 162 2 549 2 1236 6 1109 2 994 2 191 2 123 2 6 2 343 4 657 2 1226 2 439 2 196 2 372 2 292 2 69 2 48 2 1201 2 
1185 2 1315 2 1162 2 1129 2 177 2 1060 2 162 2 549 2 1236 6 1109 2 994 2 191 2 123 2 6 2 343 4 657 2 1226 2 439 2 196 2 372 2 292 2 69 2 48 2 1201 2 
161 2 1129 2 500 3 987 2 339 2 1027 2 1001 2 81 2 1062 2 694 4 1296 4 884 5 1112 3 1277 2 1319 4 385 2 488 3 196 10 107 2 292 4 1118 4 576 4 48 2 598 4 1185 3 1162 3 919 2 602 2 112 6 557 2 72 2 793 2 1225 4 56 2 994 2 774 2 523 2 1307 2 1273 2 949 2 
1107 2 161 2 1129 2 500 2 987 2 4 2 339 2 1027 2 1001 2 81 2 1062 2 694 4 1296 4 884 4 1112 2 1277 2 1319 4 385 2 488 2 196 10 107 2 292 4 1118 4 576 4 48 2 598 4 1185 2 1162 2 919 2 602 2 112 6 557 2 72 2 793 2 1225 4 56 2 994 2 774 2 523 2 1307 2 1126 2 1273 2 949 2 
1107 2 161 2 1129 2 500 2 987 2 4 2 339 2 1027 2 1001 2 81 2 1062 2 694 4 1296 4 884 4 1112 2 1277 2 1319 4 385 2 488 2 196 10 107 2 292 4 1118 4 576 4 48 2 598 4 1185 2 1162 2 919 2 602 2 112 6 557 2 72 2 793 2 1225 4 56 2 994 2 774 2 523 2 1307 2 1126 2 1273 2 949 2 
1107 2 161 2 1129 2 500 2 987 2 4 2 339 2 1027 2 1001 2 81 2 1062 2 694 4 1296 4 884 4 1112 2 1277 2 1319 4 385 2 488 2 196 10 107 2 292 4 1118 4 576 4 48 2 598 4 1185 2 1162 2 919 2 602 2 112 6 557 2 72 2 793 2 1225 4 56 2 994 2 774 2 523 2 1307 2 1126 2 1273 2 949 2 
1107 4 161 2 1129 2 500 2 987 2 4 4 339 2 1027 2 1001 2 81 2 1062 2 694 4 1296 4 884 4 1112 2 1277 2 1319 4 385 2 488 2 196 10 107 2 292 4 1118 4 576 4 48 2 598 4 1185 2 1162 2 919 2 602 2 112 6 557 2 72 2 793 2 1225 4 56 2 994 2 774 2 523 2 1307 2 1126 4 1273 2 949 2 
498 2 1254 2 218 2 145 2 927 2 480 2 
618 2 971 2 1240 2 218 2 921 2 208 2 74 2 
1026 1 351 1 989 2 603 2 578 1 472 1 1146 2 392 2 91 2 302 2 486 2 1196 2 859 1 1137 2 196 10 943 2 1104 2 670 2 206 2 292 8 1334 2 168 2 1312 2 1265 2 483 2 265 2 
1107 5 987 6 4 2 81 6 674 2 1153 4 323 2 884 16 214 2 1319 4 196 6 467 2 292 6 576 12 154 2 917 2 919 2 793 6 89 4 393 2 56 6 274 2 523 6 140 2 354 2 1307 6 1126 2 962 2 481 2 1273 6 
27 2 918 2 1029 2 1039 2 694 2 655 2 1296 2 276 2 1179 2 464 1 196 1 479 4 292 1 491 2 253 2 1074 6 375 2 598 2 
27 4 918 2 1029 2 1039 4 694 2 655 2 1296 2 276 2 1179 4 479 4 491 2 253 2 1074 6 375 2 598 2 
27 8 918 2 1029 2 1039 8 694 2 655 8 1296 2 276 2 1179 8 464 1 196 1 479 4 292 1 491 2 253 6 1074 10 375 2 598 2 
27 2 918 2 1029 2 1039 2 694 2 1296 2 276 2 1179 2 479 2 491 2 1074 2 375 2 598 2 
0 2 850 2 673 2 760 2 163 2 761 1 504 6 1032 2 1204 2 347 2 169 2 173 2 434 3 770 4 517 2 773 2 94 4 180 2 1208 2 688 2 873 2 286 2 783 2 362 2 973 2 534 2 195 2 196 38 702 4 887 2 109 2 292 34 197 2 706 4 622 4 293 2 791 5 369 2 1144 16 370 2 539 4 204 4 1227 16 1229 2 1309 2 1058 2 802 2 38 4 39 2 988 2 907 2 1064 14 552 2 1156 2 811 2 310 2 1244 4 1245 2 814 32 389 2 390 2 647 2 54 2 139 2 1166 3 924 1 737 2 561 2 926 2 564 4 652 2 321 2 1003 2 1339 2 570 2 65 4 66 2 233 4 408 6 938 2 839 2 71 2 753 2 754 6 663 1 1099 2 75 4 1269 2 1197 2 947 18 1105 2 
1274 2 38 4 256 2 850 2 548 2 808 2 163 2 854 2 725 2 955 2 1064 6 263 2 764 2 1065 2 466 2 552 2 554 2 431 2 1072 2 1244 2 266 2 814 42 555 2 390 2 1326 2 1123 2 605 2 54 2 139 2 1207 2 773 2 1284 2 737 2 1167 2 280 2 820 2 1127 6 926 2 183 2 741 2 531 2 1212 4 826 2 692 2 226 4 321 2 228 2 933 2 18 2 405 2 1089 2 1339 4 65 2 362 2 785 2 443 2 364 2 408 2 196 46 535 4 977 2 702 4 109 2 938 2 292 44 704 2 622 4 624 2 791 2 28 2 711 2 1144 20 370 2 415 2 1224 2 416 2 754 2 794 2 539 6 204 2 75 38 1269 2 34 4 1229 2 1197 2 36 2 334 2 802 2 1058 2 947 20 
848 2 78 2 673 2 760 2 163 2 504 6 1032 2 1204 2 506 2 1115 2 169 2 266 2 268 8 173 2 434 4 770 6 517 2 773 2 1284 6 94 6 180 2 1208 2 437 2 688 2 692 2 1132 2 286 2 783 2 362 2 973 2 195 2 534 4 196 44 702 4 109 2 292 40 620 8 197 2 706 6 622 4 293 2 28 6 791 6 711 2 1144 18 1054 2 204 4 797 2 1227 14 1229 2 1058 2 802 2 38 4 39 2 988 2 808 6 907 2 212 2 1317 2 1064 10 44 8 552 4 1156 2 1244 2 310 2 1245 2 814 40 390 2 54 2 1166 2 475 2 926 2 564 6 652 2 1003 2 1087 2 1339 2 570 2 65 6 66 2 233 2 408 4 839 2 331 2 71 2 754 4 75 14 1197 2 1352 4 1105 2 947 20 424 2 
38 6 256 2 850 4 548 2 163 2 761 2 1064 8 1032 2 764 2 552 2 1244 2 1245 2 814 38 389 2 390 2 434 6 770 10 54 2 139 4 773 2 94 10 737 4 561 4 926 2 873 2 225 2 16 2 321 4 1339 2 65 2 783 4 362 2 408 2 196 28 702 6 887 10 109 2 292 26 328 2 622 6 536 2 624 2 369 2 711 2 791 2 1144 14 370 4 753 2 754 2 663 2 1099 2 539 6 204 2 75 14 1269 4 1227 10 1229 2 1197 2 802 2 1058 2 947 14 
581 2 
282 1 588 1 643 1 427 1 505 1 1304 1 
282 1 588 1 643 1 427 1 505 1 1304 1 
282 1 588 1 643 1 427 1 505 1 1304 1 
282 1 588 1 643 1 427 1 505 1 1304 1 
282 1 588 1 643 1 427 1 505 1 1304 1 
282 1 588 1 643 1 427 1 505 1 1304 1 
282 1 588 1 643 1 427 1 505 1 1304 1 
282 1 588 1 643 1 427 1 505 1 1304 1 
282 1 588 1 643 1 427 1 505 1 1304 1 
282 1 588 1 643 1 427 1 505 1 1304 1 
282 1 588 1 643 1 427 1 505 1 1304 1 
282 1 588 1 643 1 427 1 505 1 1304 1 
282 1 588 1 643 1 427 1 505 1 1304 1 
282 1 588 1 643 1 427 1 505 1 1304 1 
282 1 588 1 643 1 427 1 505 1 1304 1 
282 1 588 1 643 1 427 1 505 1 1304 1 
282 1 588 1 643 1 427 1 505 1 1304 1 
282 1 588 1 643 1 427 1 505 1 1304 1 
282 1 588 1 643 1 427 1 505 1 1304 1 
282 1 588 1 643 1 427 1 505 1 1304 1 
282 1 588 1 643 1 427 1 505 1 1304 1 
282 1 588 1 643 1 427 1 505 1 1304 1 
282 1 588 1 643 1 427 1 505 1 1304 1 
282 1 588 1 643 1 427 1 505 1 1304 1 
282 1 588 1 643 1 427 1 505 1 1304 1 
282 1 588 1 643 1 427 1 505 1 1304 1 
282 1 588 1 643 1 427 1 505 1 1304 1 
282 1 588 1 643 1 427 1 505 1 1304 1 
282 1 588 1 643 1 427 1 505 1 1304 1 
282 1 588 1 643 1 427 1 505 1 1304 1 
282 1 588 1 643 1 427 1 505 1 1304 1 
282 1 588 1 643 1 427 1 505 1 1304 1 
282 1 588 1 643 1 427 1 505 1 1304 1 
282 1 588 1 643 1 427 1 505 1 1304 1 
282 1 588 1 643 1 427 1 505 1 1304 1 
282 1 588 1 643 1 427 1 505 1 1304 1 
282 1 588 1 643 1 427 1 505 1 1304 1 
282 1 588 1 643 1 427 1 505 1 1304 1 
282 1 588 1 643 1 427 1 505 1 1304 1 
282 1 588 1 643 1 427 1 505 1 1304 1 
282 1 588 1 643 1 427 1 505 1 1304 1 
282 1 588 1 643 1 427 1 505 1 1304 1 
282 1 588 1 643 1 427 1 505 1 1304 1 
282 1 588 1 643 1 427 1 505 1 1304 1 

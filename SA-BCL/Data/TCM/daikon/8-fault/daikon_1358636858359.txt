#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR utilMDE.Assert$AssertionException (111,716) (111,716) (185,532,927,934,965) (185,532,927,934,965) (185,532,927,934,965) 
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.NullPointerException 961 715 873 664 785 630 271 980 680 619 259 236 121 718 42 324 561 778 911 44 233 976 524 766 337 742 771 312 48 
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 331 721 182 847 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V ERROR java.lang.Error 469 257 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V ERROR java.lang.Error 469 257 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V ERROR java.lang.Error 469 257 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V ERROR java.lang.Error 469 257 
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 445 930 978 
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 445 930 978 
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:gcd([I)I
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.Quant:eltsNotEqualIndex([I)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.Quant:eltsLTE([II)Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_2_3(I)Z
jtb.JavaParser:jj_3R_47()Z
jtb.JavaParser:jj_3R_75()Z
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaCharStream:FillBuff()V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfo:java_name()Ljava.lang.String;
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName:esc_name()Ljava.lang.String;
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltsGT([II)Z
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParserTokenManager:MoreLexicalActions()V
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.MathMDE:negate(I)I
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.FuzzyFloat:eq(DD)Z
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
jtb.JavaParser:jj_2_12(I)Z
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.VarInfo:simplify_name()Ljava.lang.String;
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.VarInfo:jml_name()Ljava.lang.String;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
utilMDE.MathMDE:sign(I)I
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.ProglangType:isScalar()Z
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
jtb.JavaParser:jj_3_10()Z
daikon.inv.unary.UpperBoundCore:computeConfidence()D
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.PptName:isCombinedExitPoint()Z
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.Quant:eq(FF)Z
jtb.JavaParser:jj_3R_52()Z
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_2_5(I)Z
daikon.VarInfo:new_ppt()V
daikon.VarInfoName:hashCode()I
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.Quant:eltsLteIndex([I)Z
jtb.JavaCharStream:getEndLine()I
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_88()Z
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
jtb.JavaParser:jj_ntk()I
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
utilMDE.Options.OptionInfo:argument_required()Z
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.ProglangType:dimensions()I
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.ProglangType:isArray()Z
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
jtb.JavaParser:jj_3R_86()Z
daikon.PptSlice0:initInvariantsSeen()V
utilMDE.Assert:assertTrue(Z)V
daikon.Quant:eltsGTE([II)Z
daikon.inv.Invariant:prob_or(DD)D
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.Quant:subsetOf([S[S)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
utilMDE.WeakHasherMap:size()I
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
utilMDE.FuzzyFloat:lte(DD)Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
jtb.JavaParser:jj_3R_76()Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
utilMDE.ArraysMDE:element_range([I)I
jtb.JavaParser:jj_3R_117()Z
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.Quant:setEqual([I[I)Z
utilMDE.Intern:intern([J)[J
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.inv.Invariants:Invariants()V
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:noDups([I)Z
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.ProglangType:baseIsScalar()Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
jtb.JavaParser:jj_3_14()Z
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
jtb.JavaParser:jj_3R_96()Z
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_2_1(I)Z
utilMDE.FuzzyFloat:gte(DD)Z
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.Quant:pairwiseLTE([I[I)Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:jj_3R_56()Z
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
daikon.ProglangType:isIntegral()Z
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
jtb.JavaParser:jj_3R_114()Z
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([J)Z | ASSIGN | 58337 | = null
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3_21()Z
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.MathMDE:mod_positive(II)I
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.Quant:eltsEqual([II)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
jtb.JavaParser:jj_3R_48()Z
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
jtb.Token:newToken(I)Ljtb.Token;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.ValueTuple:isMissingFlow(I)Z
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:gt(DD)Z
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext2()V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_123()Z
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
jtb.JavaCharStream:getBeginLine()I
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
jtb.JavaParser:jj_3R_120()Z
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:concat([I[I)[I
utilMDE.ArraysMDE:sorted([I)Z
daikon.Quant:eltsGteIndex([I)Z
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.inv.unary.LowerBoundCore:computeProbability()D
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_61()Z
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.Quant:memberOf(F[F)Z
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.MathMDE:bitwiseComplement(I)I
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_148()Z
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.Invariant:prob_and(DD)D
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_87()Z
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
jtb.JavaCharStream:ReadByte()C
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.Quant:eltsNotEqual([II)Z
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.Quant:memberOf(F[D)Z
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_2_21(I)Z
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.Quant:lexEqual([I[I)Z
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ModBitTracker:num_samples()I
daikon.Debug:logDetail()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.diff.PrintAllVisitor:bufPrintln()V
jtb.JavaParser:jj_3R_97()Z
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
jtb.JavaCharStream:BeginToken()C
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.ModBitTracker:split(I)I
daikon.VarComparabilityImplicit:toString()Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.ModBitTracker:num_vars()I
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
utilMDE.WeakHasherMap:processQueue()V
jtb.JavaParser:jj_3R_122()Z
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.Quant:lexGTE([I[I)Z
utilMDE.MathMDE:pow_fast(II)I
utilMDE.LimitedSizeIntSet:add(I)V
utilMDE.FuzzyFloat:lt(DD)Z
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.Quant:union([I[I)[I
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.Quant:sameLength([I[I)Z
jtb.JavaParser:jj_2_15(I)Z
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.PptSlice1:num_samples()I
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.Quant:pairwiseGT([I[I)Z
daikon.ProglangType:isPseudoArray()Z
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.PptName:PptName(Ljava.lang.String;)V
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_60()Z
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 3923 | = null
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.Quant:memberOf(D[F)Z
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.test.FormatTestCase:passes()Z
jtb.JavaParser:jj_3_4()Z
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
jtb.JavaParser:jj_3R_133()Z
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
utilMDE.MathMDE:gcd(JJ)J
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.Quant:pairwiseLT([I[I)Z
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3_36()Z
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.Quant:lexNotEqual([I[I)Z
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.inv.Invariant:getConfidence()D
jtb.JavaParser:jj_3R_121()Z
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.Quant:eltsEqualIndex([I)Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.VarInfoName.Add:amount()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Invariant:isWorthPrinting()Z
utilMDE.OrderedPairIterator:setnext1()V
daikon.Quant:pairwiseDivides([I[I)Z
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.Quant:subsetOf([F[D)Z
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_54()Z
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.ModBitTracker:num_sets()I
jtb.JavaParser:jj_3_1()Z
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltwiseLTE([I)Z
jtb.JavaParser:jj_3R_118()Z
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z | CONDITION | 4097 | if (x) -> if (!x)
daikon.Quant:subsetOf([D[D)Z
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V | ASSIGN | 25295 | = null
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.Quant:eltwiseLT([I)Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
utilMDE.LimitedSizeIntSet:size()I
utilMDE.ArraysMDE:sum([[I)I
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.Quant:lexGT([I[I)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.inv.filter.InvariantFilters:InvariantFilters()V
jtb.JavaParser:jj_3R_116()Z
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.PptSlice0:arity()I
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.Quant:eq(DD)Z
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_81()Z
daikon.Quant:isReverse([I[I)Z
daikon.Debug:logOn()Z
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.Quant:memberOf(I[I)Z
daikon.PptSlice2:arity()I
jtb.JavaParser:jj_3R_134()Z
utilMDE.Intern:intern([I)[I
daikon.Quant:ne(II)Z
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.Quant:gte(II)Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.inv.Invariant:prob_and(DDD)D
jtb.JavaParser:jj_3R_119()Z
daikon.Quant:concat([I[I)[I
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
utilMDE.Intern:internSubsequence([JII)[J
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.inv.filter.ObviousFilter:ObviousFilter()V
jtb.JavaParser:jj_scan_token(I)Z
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ProglangType:baseIsIntegral()Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.Quant:memberOf(S[S)Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
jtb.JavaCharStream:getEndColumn()I
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Quant:lte(II)Z
utilMDE.MathMDE:gcd_differences([I)I
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.FuzzyFloat:ne(DD)Z
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:gt(II)Z
jtb.JavaParser:jj_3R_163()Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.diff.Node:add(Ljava.lang.Object;)V
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaCharStream:getBeginColumn()I
daikon.inv.Invariant:logDetail()Z
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_62()Z
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.Invariant:logOn()Z
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral; | RETURN | 92129 | return null
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
jtb.JavaParser:jj_2_36(I)Z
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_63()Z
daikon.Quant:eltwiseNotEqual([I)Z
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:sum([[D)D
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.Ppt:Ppt()V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_53()Z
utilMDE.ArraysMDE:sum([D)D
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.ValueTuple:isMissing(I)Z
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
jtb.JavaParser:jj_3_3()Z
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.PptName:isEnterPoint()Z
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.test.FormatTestCase.SingleOutputTestCase:getDiffString()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:ioa_name()Ljava.lang.String;
jtb.JavaParser:jj_3_5()Z
jtb.JavaParser:jj_3R_57()Z
daikon.Quant:pairwiseSquare([I[I)Z
daikon.Quant:lexLT([I[I)Z
daikon.Quant:pairwiseEqual([I[I)Z
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
jtb.JavaParser:jj_3R_50()Z
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:intern([D)[D
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.PptTopLevel:name()Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
utilMDE.ArraysMDE:min([I)I
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual; | RETURN | 1527 | return null
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.Quant:memberOf(J[J)Z
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.Quant:intersection([I[I)[I
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
jtb.JavaParser:jj_3R_51()Z
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3_15()Z
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:subarray([III)[I
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
utilMDE.Intern:internSubsequence([III)[I
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.inv.Invariant:justified()Z
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.Quant:eltsLT([II)Z
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
jtb.JavaParser:jj_3R_68()Z
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.Quant:subsetOf([J[J)Z
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.Quant:setDiff([I[I)[I
jtb.JavaParser:jj_3R_49()Z
jtb.syntaxtree.NodeOptional:NodeOptional()V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
jtb.JavaParser:jj_3R_58()Z
jtb.JavaParser:jj_2_16(I)Z
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:lexLTE([I[I)Z
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
utilMDE.ArraysMDE:max([I)I
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.diff.RootNode:RootNode()V
daikon.Quant:eq(II)Z
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.diff.InvMap:InvMap()V
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:subarray([JII)[J
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3_35()Z
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_55()Z
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
jtb.JavaParser:jj_2_10(I)Z
utilMDE.ArraysMDE:isSubarray([I[II)Z
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.filter.ParentFilter:ParentFilter()V
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.VarInfoName:repr()Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.Quant:eltwiseEqual([I)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
jtb.JavaParser:jj_3R_85()Z
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.unary.scalar.NonModulus:enabled()Z
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.Quant:lt(II)Z
daikon.Quant:subsetOf([I[I)Z
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
utilMDE.MathMDE:pow(II)I
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Quant:eltwiseGT([I)Z
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
jtb.JavaParser:jj_2_14(I)Z
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.OrderedPairIterator:hasNext()Z
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.VarInfoName:name()Ljava.lang.String;
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
utilMDE.ArraysMDE:min_max([I)[I
daikon.Quant:eltsGtIndex([I)Z
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
jtb.JavaParser:jj_2_4(I)Z
daikon.PptSlice1:arity()I
daikon.simplify.SimpUtil:formatInteger(J)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.test.InvariantFormatTester:execute()Z
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
jtb.syntaxtree.NodeList:NodeList()V
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.MathMDE:missing_numbers([I)[I
daikon.Quant:subsetOf([D[F)Z
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.VarInfo:name()Ljava.lang.String;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
utilMDE.Intern:numIntArrays()I
daikon.Quant:slice([III)[I
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.VarInfoName:ioa_name()Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaCharStream:readChar()C
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
jtb.JavaParser:jj_2_35(I)Z
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_115()Z
daikon.Quant:subsetOf([F[F)Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaCharStream:backup(I)V
jtb.JavaParser:jj_3R_161()Z
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
jtb.JavaParser:jj_3R_135()Z
utilMDE.MathMDE:gcd(II)I
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.FormatTestCase:getDiffString()Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([ZZ)I
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3_22()Z
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:jj_3R_89()Z
daikon.inv.Invariant:prob_is_ge(DD)D
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
utilMDE.FuzzyFloat:FuzzyFloat()V
jtb.JavaParser:jj_3R_69()Z
daikon.diff.Node:Node()V
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
utilMDE.ArraysMDE:indexOf([II)I
daikon.inv.unary.scalar.NonZero:enabled()Z
jtb.JavaParser:jj_3_13()Z
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
jtb.JavaParser:jj_2_13(I)Z
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
daikon.ModBitTracker:ModBitTracker(I)V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:sum([I)I
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.MathMDE:modulus([I)[I
daikon.config.Configuration.ConfigException:ConfigException(Ljava.lang.String;Ljava.lang.Throwable;)V
daikon.Quant:eltwiseGTE([I)Z
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
daikon.Quant:eltsLtIndex([I)Z
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.ValueSet:ValueSet(I)V
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
utilMDE.SimpleLog.LongVal:LongVal(J)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:eq(JJ)Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.NodeFinder:inPre()Z
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:jj_3_12()Z
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.VarInfo:relate_var()V
jtb.JavaParser:jj_3R_162()Z
daikon.Quant:subsetOf([B[I)Z
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3_16()Z
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.ValueTuple:size()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
659 6 908 2 59 2 576 4 801 2 119 2 505 2 419 2 546 2 99 2 775 2 515 2 830 2 626 2 478 2 555 2 971 2 653 4 430 2 357 2 877 2 320 2 325 2 
659 14 830 4 32 2 478 8 555 4 350 4 653 12 872 2 430 4 356 6 357 5 530 2 546 8 759 6 142 4 775 8 325 4 
57 4 571 4 1 2 821 4 4 4 916 10 860 2 177 62 334 2 542 6 181 2 37 2 803 2 920 2 737 2 739 4 122 8 375 4 678 2 128 4 103 4 592 2 1007 4 972 2 194 14 392 2 937 2 258 2 904 4 140 2 49 2 27 2 436 2 758 10 199 4 402 4 906 2 287 2 695 2 230 4 
238 2 989 2 993 2 583 2 97 2 681 2 523 2 597 2 880 2 364 2 
609 2 660 2 762 2 795 2 821 4 618 2 410 2 954 2 579 2 920 2 738 2 241 2 122 2 964 2 128 2 278 2 190 2 17 2 838 2 388 2 487 2 197 2 263 2 
111 4 725 4 659 53 908 18 464 4 91 4 730 2 768 2 576 6 10 6 546 32 98 2 775 32 474 6 923 6 515 4 966 4 551 6 830 16 746 8 381 2 478 32 555 16 79 2 971 2 280 2 350 4 653 48 482 2 253 6 430 16 135 4 716 4 357 22 356 6 656 4 759 6 142 4 325 16 
542 2 122 2 287 2 
75 2 967 2 35 22 575 10 336 2 51 2 863 2 941 2 276 2 760 2 213 2 166 2 40 2 123 2 
716 2 111 2 379 2 335 2 77 2 486 4 557 2 263 2 400 2 
793 2 810 2 710 2 346 6 246 2 219 6 763 2 443 6 769 2 125 2 881 2 
111 2 820 2 384 6 615 2 700 6 193 2 562 4 716 2 957 2 226 6 817 6 568 4 438 2 
111 6 762 2 659 28 908 8 696 2 32 4 412 4 576 10 211 2 546 16 98 2 775 16 14 8 454 2 515 6 551 8 745 2 830 10 478 16 555 10 870 8 971 4 653 26 430 10 135 6 357 12 716 6 528 2 692 4 325 10 
162 4 450 6 
681 2 
113 2 
716 2 936 2 
716 4 520 2 265 2 
111 22 232 1 116 1 767 6 888 1 503 2 502 1 369 2 371 2 372 2 895 5 510 2 513 2 383 2 382 2 781 2 132 2 782 1 786 2 657 1 145 2 792 1 794 6 662 1 150 4 913 2 538 2 413 2 541 2 424 1 557 2 931 2 934 2 285 3 940 2 691 1 567 2 54 2 170 2 56 2 175 2 292 1 180 4 962 2 185 2 707 5 73 2 965 2 74 4 311 2 191 1 973 1 716 24 979 2 605 1 610 4 614 6 991 2 205 2 206 1 997 1 865 1 475 2 748 1 224 2 754 4 1009 1 1010 2 640 1 
0 2 233 2 495 8 234 8 496 4 236 2 766 2 497 4 7 2 8 4 501 10 504 40 771 2 772 46 9 2 11 2 508 2 243 2 514 4 16 2 778 2 779 4 521 8 248 4 19 2 254 2 785 2 524 2 525 48 24 2 25 2 259 2 260 2 531 28 262 6 534 10 30 2 536 176 271 2 539 20 273 2 38 2 275 2 549 46 42 2 808 4 43 2 809 2 44 2 811 2 561 2 282 146 48 2 565 2 52 14 58 48 60 6 62 4 63 2 295 2 578 4 581 4 584 46 70 4 299 4 72 2 589 2 831 2 310 2 309 6 312 2 313 46 599 2 601 2 82 2 602 2 603 2 606 2 85 2 324 2 326 8 90 46 611 14 850 2 851 4 855 2 617 4 93 2 619 2 859 4 332 2 95 24 337 2 341 2 866 24 100 146 629 2 630 2 632 16 873 2 358 2 361 2 109 2 114 46 117 2 643 2 644 4 893 146 121 2 897 2 126 8 650 4 378 2 129 8 131 36 901 4 385 2 902 2 394 2 396 4 143 2 909 46 406 2 910 4 911 2 409 2 664 2 915 4 667 2 416 20 921 2 922 2 158 8 924 2 679 4 161 6 426 8 680 2 682 2 427 46 933 8 935 2 165 4 688 2 167 14 694 4 439 20 948 10 172 4 174 2 178 2 956 8 447 8 704 2 961 2 960 4 184 16 183 46 706 6 452 4 708 4 455 4 968 22 711 22 192 2 458 4 715 2 975 2 976 2 718 2 980 2 723 4 724 26 202 4 728 4 729 4 985 36 467 8 204 14 208 46 995 2 994 14 742 2 215 2 1000 2 1001 6 1002 20 749 2 751 4 752 12 223 8 1011 4 227 46 1014 4 1015 36 761 2 
327 2 947 1 516 2 
671 2 690 2 122 2 741 2 692 2 512 2 244 2 
741 2 512 2 134 2 
741 2 788 2 512 2 
360 2 509 2 516 2 
741 2 512 2 
196 2 516 2 
288 2 741 2 
647 2 360 2 516 2 
518 2 405 2 360 2 
169 2 360 2 577 2 
360 2 366 2 570 2 
883 2 787 2 360 2 
774 2 516 2 
741 2 607 2 
484 2 518 2 
466 2 577 2 
806 2 570 2 
787 2 974 2 
428 2 516 2 
787 2 242 2 
822 2 570 2 
89 2 577 2 
518 2 981 2 
647 2 360 2 516 2 300 2 
415 2 647 2 360 2 516 2 300 2 
360 2 444 2 516 2 
360 2 645 2 516 2 
220 2 840 2 548 2 882 2 
240 2 690 2 522 2 122 2 
345 2 240 2 690 2 522 2 122 2 244 2 
690 2 122 2 741 2 692 2 722 2 512 2 
838 2 152 2 
690 2 122 2 692 2 878 2 
570 2 21 2 
112 2 787 2 
518 2 703 2 
5 2 577 2 
646 2 787 2 577 2 
787 2 735 2 577 2 
787 2 489 2 577 2 
333 2 787 2 577 2 
857 2 122 2 547 6 160 2 429 2 563 2 977 6 690 2 
115 2 6 2 291 2 35 6 389 2 903 2 714 4 685 2 256 2 470 2 668 2 543 2 506 4 861 2 1012 2 996 2 69 2 451 2 
360 2 849 2 
360 2 741 2 673 2 
3 2 741 2 
786 2 
111 26 641 2 767 4 503 2 369 2 371 2 773 2 895 2 510 2 898 2 383 2 382 2 781 2 132 2 390 2 136 2 137 2 264 2 792 2 794 4 267 4 148 2 913 2 150 4 538 2 413 2 540 2 541 6 669 2 557 2 931 2 932 2 432 2 814 8 816 2 691 2 693 2 818 2 819 4 286 2 54 2 170 2 56 6 574 2 175 6 176 2 824 2 955 2 180 4 962 2 707 2 73 2 74 4 832 2 314 2 716 26 979 2 845 2 604 2 462 4 610 4 614 6 991 2 207 4 864 2 214 2 475 2 343 2 342 2 867 8 106 2 224 2 1010 2 359 2 757 2 110 2 
111 26 641 2 767 6 503 2 369 2 371 2 773 2 895 2 510 2 898 2 383 2 382 2 781 2 386 2 132 2 390 2 136 2 137 2 264 2 792 2 794 4 267 4 148 2 913 2 150 4 538 2 413 2 541 6 669 2 557 2 931 2 932 2 432 2 814 8 816 2 940 2 691 2 693 2 818 2 819 4 286 2 567 2 54 2 170 2 56 6 574 2 175 6 955 2 180 4 962 2 707 2 73 2 74 4 832 2 595 2 314 2 716 26 979 2 845 2 604 2 462 4 610 4 614 6 621 2 991 2 207 2 864 2 214 2 475 2 343 2 342 2 867 8 747 2 106 2 224 2 1010 2 359 2 757 2 110 2 
434 2 461 2 
839 2 
945 4 170 2 111 6 493 4 492 2 949 4 699 2 173 2 443 6 573 8 500 2 65 2 580 4 770 2 825 2 503 2 180 2 705 2 13 2 962 2 120 2 649 2 456 2 710 4 383 2 781 2 783 2 716 12 529 4 322 2 658 10 793 2 31 2 852 2 614 4 913 2 150 2 799 2 153 2 96 2 157 2 740 4 743 2 553 2 810 4 346 6 219 6 104 2 683 8 351 2 163 2 634 2 684 2 225 2 224 2 874 2 433 2 635 2 881 2 231 2 
111 6 945 4 170 2 493 4 492 2 949 4 699 2 173 2 573 8 443 6 293 4 500 2 580 4 770 2 825 2 503 2 180 2 705 2 13 2 962 2 120 2 649 2 456 2 710 4 246 2 383 2 781 2 783 2 716 12 841 2 529 4 322 2 658 10 793 2 31 2 852 2 663 2 614 4 150 2 913 2 799 2 153 2 96 2 157 2 740 4 743 2 553 2 810 4 346 8 219 8 104 2 683 8 351 2 163 2 634 2 684 2 225 2 224 2 874 2 433 2 881 2 231 2 
493 2 553 2 810 2 31 2 710 2 219 2 949 4 852 2 104 2 443 2 634 2 225 2 433 2 157 2 120 2 740 4 743 2 231 2 
945 4 170 2 111 6 493 4 492 2 949 4 699 2 173 2 443 4 573 4 500 2 65 2 580 4 770 2 825 2 503 2 180 2 705 2 13 2 962 2 120 2 649 2 456 2 710 4 246 2 383 2 781 2 783 2 716 12 529 4 322 2 658 6 31 2 852 2 614 4 913 2 150 2 799 2 153 2 96 2 157 2 740 4 743 2 553 2 810 4 346 6 219 6 104 2 683 4 351 2 163 2 634 2 684 2 225 2 224 2 874 2 433 2 635 2 881 2 231 2 
945 4 170 2 111 6 493 4 492 2 763 2 949 4 699 2 173 2 443 6 573 4 500 2 65 2 580 4 770 2 825 2 503 2 180 2 705 2 13 2 962 2 120 2 649 2 456 2 710 4 383 2 781 2 783 2 716 12 529 4 322 2 658 6 31 2 852 2 614 4 913 2 150 2 799 2 153 2 96 2 157 2 740 4 743 2 553 2 810 4 346 6 219 4 104 2 683 4 351 2 163 2 634 2 684 2 225 2 224 2 874 2 433 2 635 2 881 2 231 2 
945 4 170 2 111 6 493 4 492 2 949 4 699 2 173 2 443 6 573 4 500 2 65 2 580 4 770 2 825 2 503 2 180 2 705 2 13 2 962 2 120 2 649 2 456 2 710 4 383 2 781 2 783 2 716 12 529 4 322 2 658 6 793 2 31 2 852 2 614 4 913 2 150 2 799 2 153 2 96 2 157 2 740 4 743 2 553 2 810 4 346 6 219 6 104 2 683 8 351 2 163 2 634 2 684 2 225 2 224 2 874 2 433 2 635 2 881 2 231 2 
945 4 170 2 111 6 493 4 492 2 763 2 949 4 699 2 173 2 443 8 573 8 500 2 65 2 580 4 770 2 825 2 503 2 180 2 705 2 13 2 962 2 120 2 649 2 456 2 710 4 383 2 781 2 783 2 716 12 529 4 322 2 658 10 793 2 31 2 852 2 614 4 150 2 913 2 799 2 153 2 96 2 157 2 740 4 743 2 553 2 810 4 346 8 219 6 104 2 683 8 351 2 163 2 634 2 684 2 225 2 224 2 874 2 433 2 635 2 881 2 231 2 
945 4 170 2 111 6 493 4 492 2 949 4 699 2 173 2 443 6 573 8 500 2 65 2 580 4 770 2 825 2 503 2 180 2 705 2 13 2 962 2 120 2 649 2 456 2 710 4 383 2 781 2 783 2 716 12 529 4 322 2 658 10 793 2 31 2 852 2 614 4 913 2 150 2 799 2 153 2 96 2 157 2 740 4 743 2 553 2 810 4 346 6 219 6 104 2 683 8 351 2 163 2 634 2 684 2 225 2 224 2 874 2 433 2 635 2 881 2 231 2 
492 2 493 4 494 1 763 4 765 1 767 6 498 2 500 2 770 2 503 2 13 4 510 12 245 6 781 2 250 2 783 2 23 2 527 6 529 4 264 2 265 6 535 1 537 2 794 2 31 2 538 2 799 2 272 2 541 8 277 6 45 1 810 4 553 2 552 6 557 2 814 4 567 2 54 2 56 6 574 2 64 2 580 6 825 2 66 2 585 2 586 6 73 2 74 4 303 2 305 2 832 4 308 2 593 2 315 2 598 10 845 2 322 2 86 6 610 4 612 2 852 2 614 6 96 2 623 2 339 2 338 6 864 2 867 4 346 12 104 2 351 2 631 2 634 2 874 4 635 2 363 6 881 4 111 24 365 1 113 6 369 2 370 1 371 2 894 4 895 2 120 2 898 2 648 6 649 2 900 1 383 2 382 2 132 2 137 2 141 6 401 2 658 2 146 6 661 2 150 4 913 2 665 8 914 7 413 2 153 2 417 2 418 2 157 2 677 2 423 2 425 6 683 2 163 2 931 2 684 2 932 2 936 6 431 2 433 2 940 2 693 2 170 2 945 8 442 2 949 4 698 4 699 2 173 2 950 2 951 6 443 8 175 6 180 4 705 2 962 2 707 2 456 2 710 4 716 46 459 2 979 2 201 7 462 4 986 1 988 2 991 2 734 2 207 1 740 4 475 2 743 2 219 4 1008 2 224 2 225 2 483 1 1010 2 755 2 757 2 1013 2 231 2 
111 26 113 6 493 4 492 2 767 6 498 2 500 2 770 2 503 2 369 2 371 2 895 2 894 4 13 4 120 2 510 12 648 6 898 2 245 6 649 2 382 2 383 2 781 2 250 2 132 2 783 2 23 2 137 2 527 6 529 4 141 6 401 2 264 2 265 6 658 2 146 6 661 2 537 2 793 4 31 2 794 2 665 8 913 2 150 4 799 2 538 2 413 2 272 2 153 2 541 8 417 2 418 2 157 2 277 6 677 2 552 6 553 2 810 4 423 2 425 6 557 2 683 6 163 2 931 2 684 2 932 4 431 2 936 6 433 2 814 8 940 2 819 2 693 4 567 2 54 2 56 6 945 8 170 2 442 2 698 4 949 4 950 2 173 2 699 2 951 6 443 8 175 6 574 4 64 2 580 6 825 2 180 4 705 2 66 2 962 2 585 2 586 6 707 2 73 2 74 4 305 2 303 2 456 2 832 4 308 2 710 4 593 2 315 2 598 10 716 48 459 2 979 2 845 2 322 2 86 6 462 4 610 4 612 2 852 2 614 6 988 2 734 2 991 2 96 2 623 2 338 6 339 2 864 2 740 4 475 2 743 2 102 2 867 8 346 12 219 8 104 2 351 2 631 2 352 2 634 2 1008 2 225 2 224 2 874 4 1010 2 635 2 755 2 1013 2 757 2 363 6 881 4 231 2 
111 26 113 6 493 4 492 2 767 6 498 2 500 2 770 2 503 2 369 2 371 2 895 2 894 4 13 4 120 2 510 12 648 6 898 2 245 6 649 2 382 2 383 2 781 2 250 2 132 2 783 2 23 2 137 2 527 6 529 4 141 6 401 2 264 2 265 6 658 6 146 6 661 2 537 2 793 4 31 2 794 2 665 8 913 2 150 4 799 2 538 2 413 2 272 2 153 2 541 8 417 2 418 2 157 2 277 6 677 2 552 6 553 2 810 4 423 2 425 6 557 2 683 6 163 2 931 2 684 2 932 4 431 2 936 6 433 2 814 8 940 2 819 2 693 4 567 2 54 2 56 6 945 8 170 2 442 2 698 4 949 4 950 2 173 2 699 2 951 6 573 4 443 8 175 6 574 4 64 2 580 6 825 2 180 4 705 2 66 2 962 2 585 2 586 6 707 2 73 2 74 4 305 2 303 2 456 2 832 4 308 2 710 4 593 2 315 2 598 10 716 48 459 2 979 2 845 2 322 2 86 6 462 4 610 4 612 2 852 2 614 6 988 2 734 2 991 2 96 2 623 2 338 6 339 2 864 2 740 4 475 2 743 2 102 2 867 8 346 12 219 8 104 2 351 2 631 2 352 2 634 2 1008 2 225 2 224 2 874 4 1010 2 635 2 755 2 1013 2 757 2 363 6 881 4 231 2 
492 2 493 4 763 2 767 6 498 2 500 2 770 2 503 2 13 4 510 10 245 6 246 2 781 2 250 2 783 2 23 2 527 12 28 2 529 4 264 2 265 12 793 4 537 2 794 4 31 2 538 2 799 2 272 2 541 12 277 6 810 4 553 2 552 6 557 2 814 10 564 2 819 2 567 2 54 2 56 8 573 4 574 4 61 6 64 2 580 6 825 2 585 2 586 6 73 2 74 4 303 2 305 2 832 4 308 2 78 6 593 2 596 2 315 2 317 6 598 8 845 4 322 2 86 6 610 4 612 2 852 2 614 6 96 2 623 2 339 2 338 6 864 4 625 2 102 2 867 10 346 16 104 2 351 2 631 2 352 2 634 2 874 4 635 2 107 6 363 12 881 4 111 24 113 12 369 2 371 2 894 4 895 4 120 2 898 2 648 12 649 2 383 2 382 2 132 2 137 2 905 2 141 6 401 2 658 6 146 6 661 2 150 4 913 2 665 8 413 2 153 2 154 6 417 2 418 2 157 2 677 2 423 2 425 6 683 6 163 2 931 2 684 2 932 4 936 12 431 2 433 2 940 2 938 2 693 4 168 2 170 2 945 8 442 2 949 4 698 4 699 2 173 2 950 2 951 6 443 10 175 8 953 6 180 4 705 2 962 2 707 4 456 2 710 4 716 52 459 2 979 2 462 6 727 6 988 2 733 6 991 2 734 2 740 4 472 6 475 2 743 2 219 10 1008 2 224 2 225 2 1010 2 755 2 228 2 757 2 1013 2 231 2 
945 2 492 2 793 2 949 2 173 2 852 2 699 2 573 4 443 6 153 2 580 2 825 2 96 2 705 2 120 2 157 2 740 2 743 2 456 2 810 4 346 4 710 4 219 6 104 2 683 6 163 2 351 2 684 2 225 2 716 4 635 2 529 2 881 2 658 4 231 2 
111 24 492 2 767 6 118 2 503 2 369 2 371 2 895 3 120 2 510 4 898 2 383 2 382 2 781 2 132 2 783 2 784 2 786 2 529 2 532 2 264 2 658 2 793 2 794 3 149 3 150 4 913 2 538 2 413 2 153 2 541 8 157 2 810 4 279 2 927 2 557 2 683 6 163 2 931 2 684 2 940 2 939 2 567 2 54 2 945 2 170 2 56 6 949 2 173 2 699 2 443 6 175 6 580 2 825 2 446 2 180 4 705 2 962 2 66 2 707 3 73 2 74 4 456 2 832 2 710 4 598 2 716 28 979 2 462 4 610 4 852 2 614 6 991 2 96 2 740 2 475 2 743 2 346 4 219 6 104 2 351 2 224 2 225 2 635 2 1010 2 756 2 757 2 881 2 231 2 
456 2 411 2 153 2 
456 2 411 2 153 2 
111 16 493 4 763 4 767 6 500 2 499 4 770 2 503 2 369 2 371 2 894 2 13 4 510 4 246 4 130 2 383 2 382 2 781 2 249 2 132 2 391 2 255 2 137 4 529 2 264 2 658 6 793 4 794 2 913 2 150 4 666 2 799 2 538 2 411 2 413 2 272 2 153 6 541 2 553 2 810 4 425 2 557 2 683 6 931 2 932 4 433 2 814 4 689 2 940 2 693 4 567 2 54 2 170 2 56 2 944 2 945 4 946 2 698 2 949 2 573 4 443 12 574 4 175 2 64 2 580 4 180 4 705 2 962 2 827 2 73 2 74 4 456 4 832 6 710 4 80 2 598 2 716 24 979 2 87 2 610 4 726 2 614 6 991 2 207 2 96 2 740 2 475 2 743 4 477 2 867 4 346 16 868 2 219 12 1006 2 104 2 348 2 106 4 224 2 874 2 875 4 876 2 1010 2 755 2 757 2 881 4 231 2 
111 2 537 2 31 2 698 2 425 2 1006 2 348 2 255 2 598 2 283 2 94 2 716 4 434 2 503 2 23 2 510 2 569 2 
111 16 493 4 763 4 767 6 500 2 499 4 770 2 503 2 369 2 371 2 894 2 13 4 510 2 649 2 246 4 130 2 383 2 382 2 781 2 249 2 132 2 255 2 137 4 26 2 529 2 264 2 658 6 793 4 794 4 913 2 150 4 799 2 538 2 411 2 413 2 272 2 153 6 541 2 553 2 810 4 425 2 557 2 559 2 683 6 931 2 932 4 433 2 814 4 689 2 940 2 693 4 567 2 54 2 945 4 170 2 56 2 944 2 946 2 949 2 573 4 443 12 574 4 175 2 64 2 580 4 180 4 705 2 962 2 73 2 74 4 456 4 306 2 832 6 710 4 80 2 713 2 716 24 979 2 610 4 726 4 614 6 858 2 991 2 96 2 740 2 475 2 743 4 477 2 867 4 346 16 868 2 219 12 1006 2 104 2 348 2 106 4 224 2 874 4 875 4 876 2 1010 2 755 2 757 2 881 4 231 2 
111 16 493 4 763 4 767 6 500 2 499 4 770 2 503 2 369 2 371 2 894 2 13 4 510 4 649 2 246 4 130 2 383 2 382 2 781 2 249 2 132 2 255 2 137 4 529 2 533 2 264 2 658 6 793 4 794 2 913 2 150 4 799 2 538 2 411 2 413 2 272 2 153 6 541 2 544 2 805 2 553 2 810 4 425 2 557 2 683 6 931 2 932 4 433 2 686 2 814 4 689 2 940 2 693 4 567 2 54 2 170 2 56 2 944 2 945 4 946 2 698 2 949 2 573 4 443 12 574 4 175 2 64 2 580 4 180 4 705 2 962 2 73 2 74 4 456 4 832 6 710 4 80 2 598 2 716 24 842 2 979 2 610 4 726 2 614 6 991 2 207 1 96 2 740 2 475 2 743 4 477 2 867 4 346 16 868 2 219 12 1006 2 104 2 348 2 106 4 224 2 874 4 875 4 876 2 1010 2 755 2 757 2 881 4 231 2 
111 18 885 2 642 2 767 6 889 4 503 2 369 2 371 2 895 2 896 2 510 2 898 2 376 1 15 2 380 2 651 2 383 2 382 2 780 2 781 2 132 2 251 2 18 2 20 2 393 2 654 2 138 2 401 2 789 2 148 2 794 2 150 4 913 2 538 2 413 2 917 2 919 2 155 2 541 8 420 2 41 2 557 2 931 2 46 2 814 2 940 2 567 2 942 2 53 2 54 2 170 2 56 6 572 2 950 2 175 6 180 4 182 2 962 2 68 1 829 2 587 2 707 2 73 2 188 2 74 4 303 2 832 2 833 2 591 2 835 2 836 2 594 2 716 24 979 2 845 2 721 2 847 2 83 1 982 2 88 2 462 4 610 4 613 2 331 2 614 6 854 2 987 1 468 2 734 2 992 2 991 2 339 2 624 2 864 2 340 2 216 2 475 2 867 2 480 2 1008 2 224 2 1010 2 637 2 757 2 1013 2 638 2 491 2 
56 2 462 2 111 2 794 3 764 2 34 2 701 2 175 2 620 2 239 2 541 2 895 3 449 2 898 2 707 3 925 3 744 2 928 2 834 2 560 2 716 2 719 1 655 2 845 6 321 4 
56 2 462 2 111 2 794 2 764 2 34 2 701 2 175 2 620 2 239 2 541 2 895 2 449 2 898 2 707 2 925 2 744 2 928 2 834 2 560 2 716 2 655 2 845 6 321 4 
56 2 462 2 111 2 794 2 764 2 34 2 701 2 175 2 620 2 239 2 541 2 895 2 449 2 898 2 707 2 925 2 744 2 928 2 834 2 560 2 716 2 655 2 845 6 321 4 
111 4 659 5 266 2 147 2 794 3 912 4 237 6 367 2 541 2 802 3 826 4 12 3 156 2 546 2 775 2 187 2 124 3 674 2 898 2 377 2 707 3 550 2 101 4 1005 2 551 4 830 2 344 4 478 2 555 2 928 2 105 2 349 2 653 4 430 2 716 10 135 2 717 2 261 2 229 4 325 2 
111 4 659 4 266 2 908 2 147 2 794 2 912 4 237 6 367 2 541 2 802 2 826 4 12 2 156 2 546 2 98 2 775 2 187 2 124 2 674 2 898 2 377 2 707 2 550 2 101 4 1005 2 551 4 830 2 344 4 478 2 555 2 928 2 105 2 349 2 653 4 430 2 357 2 716 10 135 2 717 2 261 2 229 4 325 2 
111 4 659 4 266 2 908 2 147 2 794 2 912 4 237 6 367 2 541 2 802 2 826 4 12 2 156 2 546 2 98 2 775 2 187 2 124 2 674 2 898 2 377 2 707 2 550 2 101 4 1005 2 551 4 830 2 344 4 478 2 555 2 928 2 105 2 349 2 653 4 430 2 357 2 716 10 135 2 717 2 261 2 229 4 325 2 
111 4 659 4 266 2 908 2 147 2 794 2 912 4 237 6 367 2 541 2 802 2 826 4 12 2 156 2 546 2 98 2 775 2 187 2 124 2 674 2 898 2 377 2 707 2 550 2 101 4 1005 2 551 4 830 2 344 4 478 2 555 2 928 2 105 2 349 2 653 4 430 2 357 2 716 10 135 2 717 2 261 2 229 4 325 2 
111 4 659 4 266 2 908 4 147 2 794 2 912 4 237 6 367 2 541 2 802 2 826 4 12 2 156 2 546 2 98 4 775 2 187 2 124 2 674 2 898 2 377 2 707 2 550 2 101 4 1005 2 551 4 830 2 344 4 478 2 555 2 928 2 105 2 349 2 653 4 430 2 357 4 716 10 135 2 717 2 261 2 229 4 325 2 
886 2 329 2 652 2 813 2 403 2 511 2 
148 2 329 2 844 2 952 2 490 2 828 2 298 2 
111 8 983 1 440 2 471 1 334 1 803 1 545 2 209 2 373 2 448 2 210 2 962 2 457 2 302 2 304 2 590 2 519 2 627 2 353 2 716 10 318 2 485 1 687 2 527 2 323 2 1016 2 
111 6 725 2 659 15 908 3 887 2 990 2 10 4 546 6 39 2 98 2 775 6 301 2 551 4 830 6 746 2 478 6 556 2 555 6 350 2 871 2 281 2 653 12 482 1 430 6 716 6 356 4 135 2 357 4 47 2 843 2 325 6 
111 1 127 1 101 2 344 2 969 2 853 2 269 4 469 2 716 1 179 2 257 2 582 6 108 2 319 2 297 2 826 2 
179 2 257 2 101 2 582 4 344 2 108 2 319 4 826 2 297 2 269 4 853 2 753 2 469 2 
111 1 127 1 101 2 344 2 853 2 269 4 753 2 469 2 716 1 179 2 257 2 582 4 108 2 319 4 297 2 826 2 
179 2 257 2 101 2 582 2 344 2 108 2 319 2 826 2 297 2 269 2 853 2 469 2 
111 34 884 2 2 2 767 32 368 2 890 2 374 2 376 1 387 2 18 16 133 2 395 4 138 2 139 2 397 2 398 4 907 4 29 2 144 1 790 2 791 4 404 2 407 2 268 4 796 2 408 4 33 2 798 2 151 2 413 4 36 2 414 2 670 2 807 2 421 2 159 6 675 2 676 2 926 4 554 2 930 2 931 6 284 2 164 2 814 4 435 4 940 4 566 2 567 4 943 2 55 4 171 2 702 2 445 2 958 2 959 2 68 3 186 2 588 2 74 18 76 2 835 2 837 5 600 2 716 38 195 2 978 2 846 2 83 4 610 16 328 2 463 2 465 2 616 14 987 1 856 2 732 2 622 2 212 2 999 2 475 6 1004 2 628 2 869 2 354 2 355 2 488 2 879 2 362 2 639 2 
111 44 441 2 697 2 767 42 294 2 702 2 445 2 958 2 507 2 71 2 963 2 453 2 188 4 74 20 517 2 189 2 709 2 76 2 307 2 899 2 247 2 970 2 837 2 252 2 600 2 81 2 133 2 316 2 22 2 716 46 526 2 395 4 139 2 195 2 978 2 198 2 398 4 460 2 848 2 404 2 608 2 610 20 465 4 407 2 268 4 408 2 92 2 330 2 270 2 203 2 616 6 151 2 413 2 731 2 207 2 736 2 274 2 862 2 804 2 672 4 473 2 212 2 998 2 475 2 476 4 1003 2 217 2 926 2 1004 2 422 2 554 2 218 4 479 2 221 2 347 2 222 2 930 2 812 2 931 2 633 2 636 2 814 38 435 6 815 2 50 2 488 2 566 2 362 2 437 2 491 6 
111 40 884 2 2 2 767 40 368 2 891 2 890 2 892 2 517 6 776 2 777 2 899 6 387 2 18 14 133 2 22 2 395 4 397 2 398 4 399 2 907 2 29 2 791 6 790 2 268 4 407 2 408 6 796 4 797 2 798 2 151 2 413 2 36 2 414 2 918 2 670 2 274 2 159 6 926 4 676 2 929 4 930 2 558 8 931 4 284 2 164 2 814 14 940 6 566 2 567 6 55 6 289 2 171 2 290 2 823 2 702 4 445 2 296 8 68 4 186 2 588 2 74 20 76 2 837 6 600 2 716 44 978 2 198 2 720 2 846 2 83 2 84 2 610 18 328 2 465 2 984 2 616 10 856 2 622 2 473 6 999 2 475 4 1004 2 628 2 869 2 750 2 481 8 355 2 879 2 362 2 639 2 
111 26 235 2 767 38 702 2 445 2 958 4 67 2 68 6 376 2 588 2 74 14 76 2 835 2 837 2 18 10 133 2 600 2 716 28 395 6 138 10 139 4 978 2 398 6 846 2 200 2 404 4 463 2 610 14 465 2 407 2 268 6 408 2 616 8 987 2 800 2 151 2 413 2 207 2 274 2 212 4 807 4 475 2 675 2 1004 2 926 2 554 4 479 2 347 2 930 2 931 2 354 2 435 6 814 14 50 2 488 4 940 10 566 2 567 10 879 4 362 2 943 2 
712 2 

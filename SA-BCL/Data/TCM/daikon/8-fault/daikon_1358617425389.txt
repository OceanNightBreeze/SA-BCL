#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V FAILED junit.framework.AssertionFailedError (1104,1209) 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V ERROR java.lang.NullPointerException 1435 440 
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.NullPointerException 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V PASSED
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V ERROR java.lang.NullPointerException 498 498 398 398 
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V ERROR java.lang.NullPointerException 1350 (1208,1504) (767,793) (767,793) 
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 581 519 1541 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V ERROR java.lang.NullPointerException 166 716 
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_0()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_1()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_2()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_3()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_4()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_5()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_6()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_7()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_8()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_9()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_10()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_11()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_12()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_13()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_14()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_15()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_16()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_17()V PASSED
daikon.test.split.SplitterFactoryTest:testmisc_Fib_main_18()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_19()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_20()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_21()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_22()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_23()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_24()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_25()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_26()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_27()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_28()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_29()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_30()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_31()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_32()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__33()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__34()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__35()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__36()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__37()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__38()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__39()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__40()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__41()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__42()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__43()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
jtb.JavaParser:jj_3R_74()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
utilMDE.MathMDE:pow_fast(II)I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
jtb.syntaxtree.VariableDeclaratorId:VariableDeclaratorId(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.suppress.NISuppression:NISuppression(Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.inv.Invariant:logOn()Z
daikon.Quant:eq(II)Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
jtb.syntaxtree.ReturnStatement:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat:gt(DD)Z
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_106()Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_esc()Ljava.lang.String; | ASSIGN | 7126 | = null
jtb.syntaxtree.TypeArgument:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_100()Z
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.Quant:subsetOf([I[I)Z
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.visitor.TreeFormatter:space(I)Ljtb.visitor.FormatCommand;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
daikon.inv.unary.string.OneOfString:format_daikon()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:subsetOf([S[S)Z
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
jtb.JavaParser:jj_3R_54()Z
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.inv.unary.sequence.EltOneOf:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.suppress.NISuppression:NISuppression([Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
jtb.JavaParser:jj_3R_115()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameters;)V
daikon.PptSlice2:arity()I
jtb.syntaxtree.BlockStatement:accept(Ljtb.visitor.Visitor;)V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.NumericInt.Divides:get_proto(Z)Ldaikon.inv.Invariant;
daikon.inv.unary.string.OneOfString:is_type()Z
daikon.inv.Invariant:getConfidence()D
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.VarInfo:new_ppt()V
daikon.VarInfo:get_enclosing_var()Ldaikon.VarInfo;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.ProglangType:baseIsScalar()Z
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.inv.unary.sequence.EltNonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.stringsequence.EltOneOfString:add_modified([Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.simplify.LemmaStack:noticeInt(J)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PostfixExpression;)V
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:lexGT([I[I)Z
daikon.inv.unary.sequence.EltUpperBound:format_esc()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.unary.sequence.EltOneOf:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.tools.jtb.Ast:removeWhitespace(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.stringsequence.EltOneOfString:format_simplify()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Literal;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBody;)V
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.stringsequence.EltOneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.VarInfo:relate_var()V
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MultiplicativeExpression;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_2_5(I)Z
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.ProglangType:baseIsFloat()Z
jtb.JavaParser:jj_3R_86()Z
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
utilMDE.ArraysMDE:min_max([I)[I | CONDITION | 6730 | if (x) -> if (!x)
daikon.inv.unary.sequence.EltwiseIntLessThan:format_esc()Ljava.lang.String;
jtb.syntaxtree.NodeOptional:NodeOptional()V
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
daikon.inv.binary.twoSequence.PairwiseIntEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltNonZero:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.inv.unary.sequence.EltNonZero:is_pointer()Z
jtb.syntaxtree.ClassOrInterfaceDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I | ASSIGN | 53531 | = null
daikon.ProglangType:isPseudoArray()Z
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
jtb.syntaxtree.ClassOrInterfaceBody:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfo:isIOASet()Z
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljava.lang.String;Ljava.lang.String;Ljava.util.List;)Z
jtb.syntaxtree.TypeArguments:TypeArguments(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeArgument;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.Positive:enabled()Z
jtb.JavaCharStream:getBeginColumn()I
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.OrderedPairIterator:hasNext()Z
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_72()Z
daikon.inv.unary.sequence.EltOneOf:enabled()Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.inv.unary.sequence.EltUpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Ppt:indexOf(Ljava.lang.String;)I
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.inv.Invariant:prob_and(DDD)D
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.Quant:setEqual([I[I)Z
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.ModBitTracker:split(I)I
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.FuzzyFloat:lte(DD)Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.tools.jtb.PptNameMatcher:typeMatch(Ljava.lang.String;Ljtb.syntaxtree.FormalParameter;)Z
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
utilMDE.FuzzyFloat:gte(DD)Z
jtb.JavaParser:jj_3R_210()Z
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
daikon.tools.jtb.Ast:getParameters(Ljtb.syntaxtree.MethodDeclaration;)Ljava.util.List;
daikon.VarInfoName:ioa_name()Ljava.lang.String;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.Modifiers:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
jtb.JavaParser:jj_3_15()Z
daikon.VarInfoName.InorderFlattener:nodes()Ljava.util.List;
jtb.JavaParser:jj_3_5()Z
daikon.inv.unary.sequence.EltOneOf:sort_rep()V
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.stringsequence.EltOneOfString:enabled()Z
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.EltNonZero:enabled()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;)V
daikon.Quant:noDups([I)Z
jtb.syntaxtree.ConditionalExpression:accept(Ljtb.visitor.Visitor;)V
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.inv.unary.sequence.NoDuplicates:format_ioa()Ljava.lang.String;
daikon.VarInfo:dbc_name()Ljava.lang.String;
jtb.syntaxtree.TypeDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltOneOf:get_proto()Ldaikon.inv.Invariant;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.Divides:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.UtilMDE:split(Ljava.lang.String;Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:subsetOf([F[D)Z
jtb.JavaParser:jj_3_20()Z
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_ioa()Ljava.lang.String;
jtb.JavaParser:jj_2_15(I)Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:enabled()Z
daikon.inv.unary.sequence.EltUpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.suppress.NISuppressee:swap()Ldaikon.suppress.NISuppressee;
daikon.inv.unary.scalar.NonModulus:updateResults()V
jtb.visitor.TreeFormatter:TreeFormatter(II)V
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
daikon.inv.unary.stringsequence.EltOneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
jtb.syntaxtree.MethodDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.Quant:subsetOf([D[F)Z
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_125()Z
jtb.syntaxtree.ClassOrInterfaceType:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AdditiveExpression;)V
daikon.VarInfoName.Elements:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE:pow(II)I
utilMDE.Intern:numIntArrays()I
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
jtb.syntaxtree.RelationalExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.Quant:eltwiseGTE([I)Z
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
daikon.test.TestQuant:removeAdjacentDups([I)[I
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName:simplify_name()Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.TypeDeclaration:TypeDeclaration(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_16()Z
jtb.JavaParser:jj_3R_70()Z
jtb.JavaParser:jj_3R_114()Z
daikon.Quant:subsetOf([J[J)Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.Quant:eltsGtIndex([I)Z
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_ntk()I
daikon.Quant:eltwiseLT([I)Z
jtb.JavaParser:jj_3_14()Z
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
jtb.syntaxtree.InstanceOfExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.EltLowerBound:format_simplify()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.MathMDE:gcd(II)I
utilMDE.ArraysMDE:subarray([JII)[J
jtb.JavaParser:jj_3R_108()Z
jtb.syntaxtree.VariableDeclaratorId:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReturnStatement;)V
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.inv.unary.string.OneOfString:enabled()Z
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.Quantify.QuantFlags:include_index()Ljava.util.EnumSet;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:gcd([I)I
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InclusiveOrExpression;)V
jtb.JavaParser:jj_3_13()Z
jtb.JavaParser:jj_3R_88()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.EqualityExpression;)V
jtb.JavaParser:jj_2_16(I)Z
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.inv.binary.BinaryInvariant:is_symmetric()Z
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.Quant:eltsGTE([II)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
jtb.visitor.TreeFormatter:add(Ljtb.visitor.FormatCommand;)V
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:lexLTE([I[I)Z
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_85()Z
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.MathMDE:missing_numbers([I)[I
daikon.ProglangType:elementIsIntegral()Z
daikon.inv.unary.sequence.NoDuplicates:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:getDiffString()Ljava.lang.String;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.test.TestAst:checkMatch(Ljava.lang.String;Ljtb.syntaxtree.MethodDeclaration;Ldaikon.tools.jtb.PptNameMatcher;)V
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.syntaxtree.ClassOrInterfaceDeclaration:ClassOrInterfaceDeclaration(Ljtb.syntaxtree.NodeChoice;Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ClassOrInterfaceBody;)V
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
jtb.JavaParser:jj_2_14(I)Z
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ImportDeclaration;)V
jtb.syntaxtree.Name:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NullLiteral:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.string.SingleString:SingleString(Ldaikon.PptSlice;)V
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
utilMDE.Options.OptionInfo:argument_required()Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.Quant:pairwiseGTE([I[I)Z
utilMDE.UtilMDE:removeWhitespaceAround(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_149()Z
jtb.syntaxtree.ReferenceType:accept(Ljtb.visitor.Visitor;)V
daikon.suppress.NISuppressee:NISuppressee(Ljava.lang.Class;Z)V
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.inv.unary.sequence.EltNonZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfo:simplify_name()Ljava.lang.String;
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_25()Z
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.unary.sequence.EltOneOf:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArgument;)V
daikon.Quant:subsetOf([B[I)Z
jtb.JavaParser:jj_3R_180()Z
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.tools.jtb.Ast:getName(Ljtb.syntaxtree.MethodDeclaration;)Ljava.lang.String;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.inv.unary.stringsequence.SingleStringSequence:var()Ldaikon.VarInfo;
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.inv.Invariant:format()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.NoDuplicates:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:domainTypeIOA()Ljava.lang.String;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:PairwiseIntLessThan(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
jtb.JavaParser:jj_3R_169()Z
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
jtb.syntaxtree.AndExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.string.OneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:subsetOf([F[F)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Block;)V
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
jtb.JavaParser:jj_3R_67()Z
jtb.syntaxtree.NodeListOptional:present()Z
daikon.VarComparabilityNone:indexType(I)Ldaikon.VarComparability;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_49()Z
jtb.JavaParser:jj_3R_133()Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.ProglangType:baseIsString()Z
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor.1:visit(Ljtb.syntaxtree.TypeParameter;)V
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.Quant:slice([III)[I
daikon.Ppt:find_var_by_name(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
utilMDE.UtilMDE:removeWhitespaceBefore(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.VarInfoName.ElementsFinder:inPre()Z
jtb.syntaxtree.FormalParameters:accept(Ljtb.visitor.Visitor;)V
utilMDE.FuzzyFloat:indexOf([D[D)I
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.ModBitTracker:num_sets()I
daikon.inv.Invariant:prob_or(DD)D
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.tools.jtb.SimpleTreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
utilMDE.UtilMDE:lineNumberFileReader(Ljava.lang.String;)Ljava.io.LineNumberReader;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
jtb.syntaxtree.TypeDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.syntaxtree.ClassOrInterfaceBody:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ReferenceType;)V
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.string.OneOfString:runValue(Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:enabled()Z
daikon.tools.jtb.SimpleTreeDumper:printToken(Ljava.lang.String;)V
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Statement;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:maxsep_point([J[J)[I
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_ioa()Ljava.lang.String;
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.Type:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_2_3(I)Z
daikon.inv.unary.string.OneOfString:format_ioa()Ljava.lang.String;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_50()Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoSequence.TwoSequence:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3_10()Z
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.PackageDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
utilMDE.ArraysMDE:max([I)I
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.inv.unary.sequence.EltNonZero:EltNonZero(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_2_13(I)Z
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.ValueSet.ValueSetString:ValueSetString(I)V
utilMDE.UtilMDE:splitLines(Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.CompilationUnit;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfo:isDerived()Z
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.inv.unary.sequence.EltNonZero:format_daikon()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.BlockStatement;)V
jtb.syntaxtree.ConditionalOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
jtb.syntaxtree.NodeChoice:getParent()Ljtb.syntaxtree.Node;
jtb.JavaParser:jj_3_36()Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.inv.unary.sequence.NoDuplicates:format_simplify()Ljava.lang.String;
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_daikon()Ljava.lang.String;
daikon.ValueTuple:isMissing(I)Z
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
jtb.JavaParser:getToken(I)Ljtb.Token;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.FormalParameter;)V
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.stringsequence.EltOneOfString:EltOneOfString(Ldaikon.PptSlice;)V
daikon.inv.unary.stringsequence.SingleStringSequence:SingleStringSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
jtb.syntaxtree.FormalParameter:accept(Ljtb.visitor.Visitor;)V
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.inv.unary.stringsequence.EltOneOfString:is_type()Z
jtb.syntaxtree.MethodDeclarator:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
jtb.JavaCharStream:getEndColumn()I
jtb.visitor.TreeFormatter:space()Ljtb.visitor.FormatCommand;
jtb.JavaParser:jj_3R_109()Z
daikon.inv.unary.stringsequence.EltOneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptTopLevel:name()Ljava.lang.String;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.test.FormatTestCase:passes()Z
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;)V
daikon.inv.ValueSet.ValueSetStringArray:ValueSetStringArray(I)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InstanceOfExpression;)V
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
jtb.JavaParser:jj_3R_87()Z
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
utilMDE.FuzzyFloat:ne(DD)Z
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.inv.unary.string.OneOfString:format_simplify()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.InorderFlattener:InorderFlattener(Ldaikon.VarInfoName;)V
daikon.Quantify.IOAQuantification:getClosingExp()Ljava.lang.String;
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
jtb.syntaxtree.FormalParameter:FormalParameter(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Type;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.VariableDeclaratorId;)V
jtb.JavaParser:jj_3_3()Z
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.PptSlice1:arity()I
jtb.JavaParser:jj_3_17()Z
jtb.JavaParser:jj_3R_135()Z
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quantify.IOAQuantification:getFreeVar(I)Ldaikon.Quantify.Term;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:enabled()Z
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.VarInfoName:name()Ljava.lang.String;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeSequence;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PackageDeclaration;)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.Quant:eltsEqualIndex([I)Z
jtb.JavaParser:jj_3R_120()Z
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.inv.unary.sequence.EltOneOf:format_simplify()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_2_12(I)Z
daikon.Quant:eltsGteIndex([I)Z
daikon.inv.binary.twoScalar.TwoScalar:get_swap()Z
utilMDE.Assert:assertTrue(Z)V
daikon.Quant:lexNotEqual([I[I)Z
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.inv.OutputFormat:isJavaFamily()Z
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.inv.unary.sequence.EltUpperBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_esc()Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_daikon()Ljava.lang.String;
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
jtb.syntaxtree.TypeArguments:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:hashCode()I
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.tools.jtb.Ast.1GetParametersVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
daikon.VarInfo:is_direct_non_slice_array()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ResultType;)V
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.inv.unary.stringsequence.EltOneOfString:format_esc()Ljava.lang.String;
jtb.syntaxtree.NodeOptional:accept(Ljtb.visitor.Visitor;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:ungenerify(Ljtb.syntaxtree.ClassOrInterfaceType;)V
jtb.JavaParser:jj_3R_52()Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.Quant:pairwiseSquare([I[I)Z
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AndExpression;)V
daikon.PptSlice1:num_samples()I
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.OrderedPairIterator:setnext2()V
daikon.Quant:concat([I[I)[I
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.Debug:logOn()Z
daikon.inv.unary.scalar.NonModulus:enabled()Z
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.VarInfoName:hasNodeOfType(Ljava.lang.Class;)Z
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.NumericInt.Divides:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3_28()Z
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeBound;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.test.TestAst.MethodDeclarationHarvester:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameter;)V
daikon.ProglangType:isScalar()Z
daikon.inv.filter.InvariantFilter:InvariantFilter()V
jtb.JavaParser:jj_scan_token(I)Z
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V | ASSIGN | 746 | = null
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.inv.unary.sequence.EltOneOf:format_daikon()Ljava.lang.String;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.Divides:Divides(Ldaikon.PptSlice;Z)V
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
daikon.VarInfo:simplify_quantify(Ljava.util.EnumSet;[Ldaikon.VarInfo;)[Ljava.lang.String;
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_102()Z
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltsNotEqual([II)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:PairwiseIntGreaterThan(Ldaikon.PptSlice;)V
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariants:Invariants()V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.inv.binary.twoScalar.LinearBinaryCore:maxsep_indices()[I
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
jtb.syntaxtree.FormalParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.inv.Invariant:isWorthPrinting()Z
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
jtb.syntaxtree.CompilationUnit:accept(Ljtb.visitor.Visitor;)V
daikon.tools.jtb.SimpleTreeDumper:SimpleTreeDumper(Ljava.io.Writer;)V
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.PptName:getSignature()Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat()V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;)V
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
jtb.JavaParser:jj_3R_69()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryPrefix;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameters;)V
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.LinearBinary:add_modified(JJI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3_21()Z
daikon.Quant:eltsLtIndex([I)Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:gte(II)Z
daikon.tools.jtb.Ast:getType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalAndExpression;)V
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
jtb.JavaParser:jj_3R_75()Z
daikon.Quantify.IOAQuantification:getFreeVarName(I)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.FormatCommand:getNumCommands()I
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
jtb.JavaParser:VariableDeclaratorId()Ljtb.syntaxtree.VariableDeclaratorId;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
utilMDE.MathMDE:sign(I)I
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.Quant:eltsLTE([II)Z
jtb.syntaxtree.PrimaryExpression:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
jtb.syntaxtree.NodeChoice:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.InorderFlattener:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_104()Z
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpression;)V
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:FormalParameter()Ljtb.syntaxtree.FormalParameter;
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;Ldaikon.VarInfo;)V
daikon.Quant:pairwiseEqual([I[I)Z
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
jtb.JavaParser:jj_3R_163()Z
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ProglangType:isIntegral()Z
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaCharStream:FillBuff()V
daikon.Quantify.QuantFlags:adjacent()Ljava.util.EnumSet;
jtb.visitor.TreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
jtb.JavaParser:jj_3R_126()Z
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.test.FormatTestCase:getDiffString()Ljava.lang.String;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.inv.unary.stringsequence.EltOneOfString:subarray_rep()Ljava.lang.String;
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.inv.unary.sequence.EltOneOf:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_simplify()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_esc()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:computeProbability()D
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
utilMDE.UtilMDE:escapeNonASCII(C)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
utilMDE.WeakHasherMap:size()I
daikon.inv.Invariant:simplify_format_string(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfo:ioa_name()Ljava.lang.String;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.unary.sequence.EltUpperBound:enabled()Z
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.MathMDE:mod_positive(JJ)J
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:subsetOf([D[D)Z
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_148()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeDeclaration;)V
daikon.PptName:isEnterPoint()Z
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.Quant:eq(FF)Z
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptMap:asCollection()Ljava.util.Collection;
utilMDE.UtilMDE:removeWhitespaceAfter(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.syntaxtree.CompilationUnit:getParent()Ljtb.syntaxtree.Node;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_esc()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.tools.jtb.Ast:print(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.ModBitTracker:num_vars()I
daikon.inv.unary.sequence.EltUpperBound:format_ioa()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.Quantify.FreeVar:name()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quantify.IOAQuantification:getMembershipRestriction(I)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_63()Z
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
jtb.JavaParser:jj_3R_56()Z
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.inv.unary.sequence.EltOneOf:is_boolean()Z
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:gt(II)Z
daikon.inv.unary.sequence.NoDuplicates:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.tools.jtb.Ast:create(Ljava.lang.String;Ljava.lang.String;)Ljtb.syntaxtree.Node;
jtb.syntaxtree.Block:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.VarComparabilityNone:elementType()Ldaikon.VarComparability;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:eltwiseEqual([I)Z
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_58()Z
jtb.JavaParser:jj_2_10(I)Z
jtb.JavaCharStream:backup(I)V
jtb.syntaxtree.NodeListOptional:elements()Ljava.util.Enumeration;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_simplify()Ljava.lang.String;
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:getParent()Ljtb.syntaxtree.Node;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:intersection([I[I)[I
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_164()Z
daikon.VarInfo:has_typeof()Z
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:set_bi_linear(JJJJ)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaCharStream:getEndLine()I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NullLiteral;)V
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameters;)V
daikon.tools.jtb.Ast:typeMatch(Ljava.lang.String;Ljava.lang.String;)Z
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
jtb.Token:newToken(I)Ljtb.Token;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_daikon()Ljava.lang.String;
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReferenceType;)V
jtb.JavaParser:jj_3_29()Z
daikon.Quant:lexLT([I[I)Z
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
jtb.visitor.TreeFormatter:TreeFormatter()V
jtb.syntaxtree.PrimaryPrefix:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_136()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameter;)V
jtb.JavaParser:jj_3R_89()Z
daikon.ProglangType:isArray()Z
daikon.inv.binary.twoSequence.TwoSequence:var1()Ldaikon.VarInfo;
utilMDE.Intern:intern([D)[D
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:isIOAArray()Z
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
daikon.PptName:getFullClassName()Ljava.lang.String;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
utilMDE.Intern:internSubsequence([JII)[J
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclarator;)V
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_119()Z
jtb.JavaParser:jj_2_18(I)Z
utilMDE.MathMDE:negate(I)I
jtb.JavaParser:jj_3R_161()Z
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.NodeSequence:elements()Ljava.util.Enumeration;
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.PptName:getMethodName()Ljava.lang.String;
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eltsEqual([II)Z
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_123()Z
daikon.inv.unary.string.SingleString:valid_types([Ldaikon.VarInfo;)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.RelationalExpression;)V
jtb.syntaxtree.TypeDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfo:get_all_simple_names()Ljava.util.List;
utilMDE.Stopwatch:Stopwatch(Z)V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
jtb.JavaParser:jj_3R_76()Z
daikon.Quantify.QuantFlags:element_wise()Ljava.util.EnumSet;
daikon.inv.unary.sequence.EltUpperBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:sameLength([I[I)Z
daikon.inv.unary.sequence.EltwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_simplify()Ljava.lang.String;
daikon.VarInfo:name()Ljava.lang.String;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.TypeParameter:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.JavaParser:jj_3R_110()Z
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalOrExpression;)V
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V
daikon.ProglangType:baseIsIntegral()Z
daikon.Quant:isReverse([I[I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryExpression;)V
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.string.OneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.inv.unary.sequence.EltNonZero:format_ioa()Ljava.lang.String;
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.NodeSequence:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
daikon.tools.jtb.PptNameMatcher:extractPptArgs(Ldaikon.PptName;)Ljava.util.List;
daikon.Quant:setDiff([I[I)[I
daikon.inv.Invariant:justified()Z
jtb.syntaxtree.ClassOrInterfaceDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_2_17(I)Z
daikon.inv.unary.sequence.EltNonZero:format_simplify()Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.inv.unary.sequence.EltOneOf:subarray_rep()Ljava.lang.String;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfo:apply_subscript(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_103()Z
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.LowerBoundCore:calc_range()J
jtb.JavaParser:jj_3R_53()Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_ioa()Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:sort_rep()V
daikon.inv.unary.string.OneOfString:sort_rep()V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.suppress.NISuppressee:NISuppressee(Ljava.lang.Class;I)V
daikon.inv.unary.sequence.EltOneOf:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_68()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.Quantify.QuantifyReturn:QuantifyReturn(Ldaikon.VarInfo;)V
daikon.tools.jtb.Ast:getClassName(Ljtb.syntaxtree.Node;)Ljava.lang.String;
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:enabled()Z
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
utilMDE.FuzzyFloat:eq(DD)Z
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.Quant:eltsGT([II)Z
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
jtb.JavaParser:jj_2_36(I)Z
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
daikon.VarInfo:simplify_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.ValueSet:ValueSet(I)V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.MethodDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.FormatCommand:FormatCommand(II)V
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.LinearBinaryCore:find_bi_linear(JJJJ[D)Z
jtb.JavaParser:jj_2_35(I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.tools.jtb.PptNameMatcher:getUngenerifiedType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.ProglangType:dimensions()I
jtb.syntaxtree.NodeToken:trimSpecials()V
utilMDE.OrderedPairIterator:setnext1()V
daikon.Quant:eltsLT([II)Z
daikon.tools.jtb.Ast:getParent(Ljava.lang.Class;Ljtb.syntaxtree.Node;)Ljtb.syntaxtree.Node;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljtb.syntaxtree.Node;)Z
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.inv.unary.string.OneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.NodeToken:numSpecials()I
daikon.inv.unary.sequence.EltNonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
daikon.Quant:memberOf(I[I)Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoSequence.TwoSequence:var2()Ldaikon.VarInfo;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.Node:Node()V
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.inv.Invariant:logDetail()Z
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:jml_name()Ljava.lang.String;
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;Z)Z
daikon.inv.unary.sequence.NoDuplicates:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.Quantify.IOAQuantification:getQuantifierExp()Ljava.lang.String;
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3_18()Z
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.Debug:logDetail()Z
jtb.JavaParser:jj_3R_137()Z
daikon.test.TestAst.ClassOrInterfaceDeclarationHarvester:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
jtb.syntaxtree.TypeArguments:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ClassOrInterfaceBody:ClassOrInterfaceBody(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.PptSlice0:arity()I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Modifiers;)V
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.Quant:memberOf(J[J)Z
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:pairwiseGT([I[I)Z
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.suppress.NISuppression:NISuppression(Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
jtb.syntaxtree.CompilationUnit:CompilationUnit(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:pairwiseLT([I[I)Z
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Ppt:Ppt()V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:base()Ljava.lang.String;
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:repr()Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3_35()Z
daikon.inv.unary.sequence.EltUpperBound:EltUpperBound(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltOneOf:format_esc()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Name;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.VarComparabilityNone:comparable(Ldaikon.VarComparabilityNone;Ldaikon.VarComparabilityNone;)Z
daikon.inv.binary.twoScalar.IntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
utilMDE.LimitedSizeIntSet:add(I)V
jtb.syntaxtree.NodeSequence:elementAt(I)Ljtb.syntaxtree.Node;
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.string.OneOfString:format_esc()Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
jtb.syntaxtree.ClassOrInterfaceBody:getParent()Ljtb.syntaxtree.Node;
daikon.VarInfo:isDerivedSubSequenceOf()Ldaikon.VarInfo;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
jtb.JavaParser:jj_3R_62()Z
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
jtb.JavaCharStream:getBeginLine()I
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.ProglangType:isFloat()Z
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:format_ioa()Ljava.lang.String;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
utilMDE.FuzzyFloat:set_rel_diff(D)V
jtb.syntaxtree.NodeList:NodeList()V
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
jtb.JavaCharStream:UpdateLineColumn(C)V
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.WeakHasherMap:processQueue()V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.inv.unary.sequence.NoDuplicates:enabled()Z
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfo:isPointer()Z
jtb.JavaParser:jj_2_1(I)Z
daikon.Quant:eltwiseLTE([I)Z
utilMDE.FuzzyFloat:lt(DD)Z
utilMDE.ArraysMDE:concat([I[I)[I
jtb.JavaParser:jj_3R_116()Z
jtb.JavaParser:jj_3R_107()Z
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.VariableDeclaratorId:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.inv.unary.string.OneOfString:add_modified(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.diff.RootNode:RootNode()V
jtb.syntaxtree.ConditionalAndExpression:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:memberOf(F[D)Z
jtb.JavaParser:jj_3R_80()Z
daikon.inv.unary.sequence.EltOneOf:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.ValueTuple:size()I
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
utilMDE.LimitedSizeIntSet:size()I
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.visitor.TreeFormatter:processList(Ljtb.syntaxtree.NodeListInterface;Ljtb.visitor.FormatCommand;)V
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
jtb.syntaxtree.NodeToken:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalExpression;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:get_proto()Ldaikon.inv.Invariant;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
jtb.JavaCharStream:ReadByte()C
jtb.JavaParser:jj_3R_96()Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan()V
daikon.VarInfo:isPrestate()Z
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:PairwiseIntEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.Quant:pairwiseDivides([I[I)Z
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_55()Z
jtb.JavaParser:jj_3_27()Z
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.stringsequence.SingleStringSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_simplify()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
jtb.JavaParser:jj_3_19()Z
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.tools.jtb.Ast:quickFixForInternalComment(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
utilMDE.UtilMDE.NullableStringComparator:compare(Ljava.lang.String;Ljava.lang.String;)I
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.NoDuplicates:NoDuplicates(Ldaikon.PptSlice;)V
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;II)V
daikon.VarInfoName.Elements:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.visitor.TreeDumper:TreeDumper(Ljava.io.Writer;)V
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.inv.unary.scalar.NonZero:enabled()Z
jtb.JavaParser:jj_3R_57()Z
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
daikon.Quantify:quantify([Ldaikon.VarInfo;)[Ldaikon.Quantify.QuantifyReturn;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.TwoSequence:TwoSequence(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
jtb.JavaParser:jj_3R_162()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeToken;)V
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.inv.unary.sequence.EltUpperBound:format_simplify()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_daikon()Ljava.lang.String;
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.syntaxtree.ExclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.TreeDumper:printToken(Ljava.lang.String;)V
jtb.syntaxtree.TypeBound:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_121()Z
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.inv.binary.twoScalar.LinearBinaryCore:add_modified(JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltNonZero:format_esc()Ljava.lang.String;
daikon.Quant:eq(JJ)Z
daikon.PptName:PptName(Ljava.lang.String;)V
utilMDE.ArraysMDE:min([I)I
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
jtb.syntaxtree.InclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.string.OneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3_1()Z
utilMDE.Intern:intern([I)[I
daikon.inv.unary.string.OneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
utilMDE.UtilMDE:escapeNonASCII(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:lexEqual([I[I)Z
jtb.JavaParser:jj_3R_48()Z
daikon.inv.unary.stringsequence.EltOneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
jtb.JavaParser:jj_3R_134()Z
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Elements:ioa_name_impl()Ljava.lang.String;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
jtb.JavaParser:jj_3_4()Z
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.SeqIndexIntNonEqual:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltwiseIntComparison:EltwiseIntComparison(Ldaikon.PptSlice;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
daikon.PptSlice0:initInvariantsSeen()V
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
utilMDE.Intern:intern([J)[J
daikon.inv.binary.twoSequence.PairwiseIntLessThan:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_101()Z
daikon.Quant:eq(DD)Z
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Quant:memberOf(S[S)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:EltwiseIntLessThan(Ldaikon.PptSlice;)V
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3_22()Z
jtb.visitor.FormatCommand:getCommand()I
daikon.Quant:memberOf(F[F)Z
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
utilMDE.UtilMDE:lineNumberFileReader(Ljava.io.File;)Ljava.io.LineNumberReader;
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
jtb.syntaxtree.AdditiveExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Expression;)V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan(Ldaikon.PptSlice;)V
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
jtb.syntaxtree.PostfixExpression:accept(Ljtb.visitor.Visitor;)V
daikon.tools.jtb.Ast:create(Ljava.lang.String;[Ljava.lang.Class;[Ljava.lang.Object;Ljava.lang.String;)Ljtb.syntaxtree.Node;
jtb.syntaxtree.Statement:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName:inOrderTraversal()Ljava.util.Collection;
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_simplify(Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.EltOneOf:EltOneOf(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.UnaryExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.Quant:eltwiseNotEqual([I)Z
daikon.tools.jtb.PptNameMatcher:PptNameMatcher(Ljtb.syntaxtree.Node;)V
daikon.ModBitTracker:ModBitTracker(I)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.suppress.NISuppressionSet:NISuppressionSet([Ldaikon.suppress.NISuppression;)V
daikon.ProglangType:isString()Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual()V
daikon.ModBitTracker:num_samples()I
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:element_range([I)I
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
jtb.JavaCharStream:BeginToken()C
daikon.tools.jtb.Ast:getPackage(Ljtb.syntaxtree.CompilationUnit;)Ljava.lang.String;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.inv.binary.twoScalar.IntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_117()Z
daikon.Quantify.IOAQuantification:getVarIndexedString(I)Ljava.lang.String;
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.TypeArgument:accept(Ljtb.visitor.Visitor;)V
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArguments;)V
jtb.JavaParser:jj_3R_77()Z
jtb.visitor.TreeFormatter:placeToken(Ljtb.syntaxtree.NodeToken;II)V
daikon.inv.unary.sequence.EltUpperBound:format_daikon()Ljava.lang.String;
jtb.JavaParser:jj_3_30()Z
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
daikon.diff.InvMap:InvMap()V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.string.SingleString:var()Ldaikon.VarInfo;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_ioa()Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quantify.QuantFlags:distinct()Ljava.util.EnumSet;
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:jj_3R_81()Z
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String; | CONSTANT | 11304 | 2 -> 0
jtb.JavaParser:jj_3R_118()Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.ProglangType:isPointerFileRep()Z
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.suppress.NISuppressor:swap()Ldaikon.suppress.NISuppressor;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quantify.Term:ioa_name()Ljava.lang.String;
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.inv.Invariant:prob_and(DD)D
jtb.JavaParser:jj_3R_61()Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
jtb.syntaxtree.ImportDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.Quant:ne(II)Z
daikon.inv.unary.string.OneOfString:OneOfString(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.diff.DetailedStatisticsVisitor:freq(II)D
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Type;)V
daikon.PptName:toString()Ljava.lang.String;
jtb.syntaxtree.Literal:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.filter.InvariantFilters:InvariantFilters()V
jtb.JavaParser:jj_3R_124()Z
jtb.JavaParser:jj_2_21(I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.VarInfo:apply_subscript(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:gcd_differences([I)I
daikon.Quant:memberOf(D[F)Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:enabled()Z
daikon.inv.unary.sequence.EltOneOf:format_ioa()Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:format_daikon()Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:modulus([I)[I
daikon.inv.unary.sequence.NoDuplicates:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.Quant:eltsLteIndex([I)Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.test.InvariantFormatTester:execute()Z
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
utilMDE.Intern:internSubsequence([III)[I
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
jtb.syntaxtree.ShiftExpression:accept(Ljtb.visitor.Visitor;)V
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.ValueTuple:isMissingFlow(I)Z
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_2_25(I)Z
daikon.inv.unary.stringsequence.EltOneOfString:get_proto()Ldaikon.inv.Invariant;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.NodeOptional:present()Z
daikon.Quant:lexGTE([I[I)Z
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_2_4(I)Z
jtb.JavaParser:jj_3R_97()Z
daikon.suppress.NISuppressionSet:swap()Ldaikon.suppress.NISuppressionSet;
jtb.JavaParser:jj_3R_99()Z
daikon.tools.jtb.Ast:format(Ljtb.syntaxtree.Node;)Ljava.lang.String;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
jtb.syntaxtree.MultiplicativeExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.InorderFlattener:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;)Z
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.Type;)V
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String;
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:union([I[I)[I
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:copy(Ljava.util.HashMap;)Ljava.util.HashMap;
daikon.VarInfoName.Elements:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.NodeSequence:getParent()Ljtb.syntaxtree.Node;
daikon.inv.unary.stringsequence.EltOneOfString:runValue([Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.inv.unary.UpperBoundCore:wouldChange(J)Z
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.Intern:internStrings([Ljava.lang.String;)V
jtb.JavaCharStream:readChar()C
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_60()Z
jtb.JavaParser:jj_3R_122()Z
daikon.PptName:isCombinedExitPoint()Z
daikon.PptTopLevel:getInvariants()Ljava.util.List;
utilMDE.MathMDE:mod_positive(II)I
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.TypeParameters:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ResultType:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.VarInfoName:isLiteralConstant()Z
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
utilMDE.ArraysMDE:subarray([III)[I
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:eltwiseGT([I)Z
daikon.inv.unary.string.OneOfString:get_proto()Ldaikon.inv.Invariant;
jtb.visitor.TreeFormatter:processList(Ljtb.syntaxtree.NodeListInterface;)V
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
jtb.syntaxtree.EqualityExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE:gcd(JJ)J
utilMDE.MathMDE:bitwiseComplement(I)I
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.inv.unary.sequence.EltwiseIntLessThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_47()Z
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.inv.filter.ObviousFilter:ObviousFilter()V
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ShiftExpression;)V
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_daikon()Ljava.lang.String;
jtb.JavaParser:JavaParser(Ljava.io.Reader;)V
jtb.JavaParser:jj_3R_51()Z
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.Quantify.IOAQuantification:IOAQuantification([Ldaikon.VarInfo;)V
daikon.PptTopLevel.CondIterator:hasNext()Z
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.inv.unary.sequence.EltOneOf:is_hashcode()Z
daikon.Quant:lt(II)Z
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_105()Z
daikon.Quant:lte(II)Z
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ExclusiveOrExpression;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
jtb.JavaParser:jj_3_12()Z
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_98()Z
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
jtb.syntaxtree.NodeListOptional:accept(Ljtb.visitor.Visitor;)V
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.Quant:pairwiseLTE([I[I)Z
jtb.syntaxtree.Expression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName:hasTypeOf()Z
jtb.JavaParser:jj_3R_73()Z
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
1225 4 1173 2 505 2 580 2 50 2 173 2 1159 2 638 2 539 2 
1081 6 145 2 1623 2 687 6 998 6 1237 2 1098 2 1177 2 163 2 1276 2 346 2 
1173 2 750 2 446 4 638 2 394 6 1665 2 1559 2 1669 6 437 6 42 2 124 2 1551 6 210 4 
1363 6 329 10 1598 8 1173 6 293 2 1155 4 989 8 1134 10 193 4 1234 12 970 2 100 2 798 26 153 2 524 10 1185 16 717 28 1034 4 1612 4 1544 2 1489 10 1355 8 1189 10 638 6 1067 16 1418 8 535 2 1315 6 1195 16 291 2 
1020 4 1361 6 
344 2 
1104 2 121 2 503 2 173 2 1308 2 
329 15 1363 4 1173 4 921 4 989 19 1134 15 1324 4 1113 6 1234 22 66 4 1515 2 1632 6 100 2 798 47 1537 6 1405 4 1185 32 524 6 717 52 200 2 1034 2 1489 15 933 2 1311 4 1285 2 160 8 1189 15 419 2 1382 6 638 4 979 3 165 6 960 4 615 5 1067 32 1170 4 1418 6 1315 4 1195 32 
1104 2 1292 2 365 2 
112 2 452 2 20 2 1199 2 183 2 1209 2 774 2 502 2 592 10 1182 2 739 2 322 2 1058 22 177 2 
329 2 1510 2 989 2 1134 2 1234 2 798 4 253 2 1185 2 524 4 717 6 128 2 1034 2 1264 2 1489 2 1286 2 1189 2 1067 2 842 2 479 2 1315 2 1195 2 538 2 402 2 
329 4 1185 8 717 16 1155 2 1489 4 1311 4 1134 4 1189 4 165 6 1234 4 1067 8 1204 2 1170 4 798 12 15 2 1195 8 1537 6 
1104 6 758 14 292 10 1622 2 269 2 1604 4 6 2 1530 2 791 2 1652 2 99 2 121 2 499 2 657 2 339 2 252 2 440 2 365 4 1538 2 312 2 908 2 1244 2 1435 2 977 2 814 2 1523 4 1292 2 
523 2 344 2 647 2 1262 2 313 2 736 2 686 2 1044 2 364 2 1132 2 
541 1 986 2 1390 3 542 14 1576 1 988 21 215 2 992 2 546 2 116 2 1393 2 891 2 1396 2 119 2 1397 3 549 1 1398 2 1399 2 120 2 1307 2 1309 1 660 4 906 3 1121 2 667 2 131 2 1310 3 555 2 1411 3 1005 2 1412 2 1220 2 135 2 673 27 31 1 1592 2 1131 2 1319 2 357 6 1015 28 1137 6 1327 2 363 2 1428 2 44 2 255 2 157 2 694 2 1142 6 52 2 1520 2 474 2 812 2 167 2 813 14 939 4 168 2 478 2 55 2 373 2 943 2 172 2 60 2 822 5 1249 2 487 21 1347 2 707 1 1050 3 174 3 948 2 829 2 712 2 67 2 1256 1 278 2 1636 2 1259 1 387 3 74 1 1542 2 75 14 1265 1 1066 2 1162 2 838 1 1164 2 958 14 1546 2 1165 1 505 2 188 4 619 2 288 1 1077 3 1173 32 1369 2 966 6 734 4 1176 2 516 1 298 2 858 2 1479 2 1478 3 859 2 1374 2 741 1 1085 1 1092 2 1095 1 974 2 105 2 638 30 1491 2 640 4 879 2 
1173 2 306 2 
1173 4 1502 2 164 2 
455 2 
1 2 884 6 2 64 4 2 431 4 1298 48 1297 6 432 4 1299 14 1300 30 10 6 9 4 894 2 12 2 895 46 1303 88 896 4 899 2 1307 2 439 6 17 6 18 2 904 26 905 6 22 2 445 16 24 12 25 2 1312 6 449 118 28 6 29 204 1314 4 913 4 914 8 915 228 451 8 916 140 920 4 453 24 457 30 34 2 35 4 1322 6 462 92 926 2 464 4 928 2 1326 2 465 2 466 4 1329 4 469 2 470 10 49 4 1331 2 473 30 934 198 1333 2 1332 4 935 6 937 8 476 6 938 2 940 198 1337 2 1339 4 942 70 58 2 482 94 484 2 59 14 483 28 944 50 945 2 61 6 488 4 492 12 494 2 950 4 951 6 496 4 497 2 952 4 1352 2 71 2 954 2 955 2 76 112 956 16 957 2 79 2 508 46 82 6 1365 2 964 2 91 8 92 2 94 6 513 8 95 6 968 2 517 4 1375 2 521 2 1376 2 1377 2 1378 4 972 8 104 4 975 30 1380 2 976 2 531 6 106 2 107 6 978 4 980 244 532 6 109 2 984 2 985 8 536 4 1387 2 537 2 1388 28 1389 6 1391 2 543 2 114 2 115 2 990 30 545 2 994 6 1395 8 995 4 123 106 1401 6 999 30 554 4 1406 6 1407 26 130 4 1408 6 557 2 558 4 1413 2 134 6 559 66 1417 2 1007 4 1008 22 1421 6 138 2 139 2 1424 2 1011 2 566 22 140 12 1013 6 1014 12 143 198 570 198 569 8 571 198 572 4 1427 2 573 2 1017 6 148 2 150 2 1023 244 1025 2 577 2 1030 2 1028 2 1434 160 1036 2 159 2 158 2 161 2 1439 4 1438 198 585 6 1040 4 587 6 589 4 1443 60 1445 2 1446 30 1049 26 1448 2 595 18 1054 4 1055 2 179 2 606 4 1453 26 1063 2 1064 12 608 6 609 2 184 2 185 2 186 2 1455 26 613 2 1456 2 1457 20 1459 2 614 4 1068 6 1463 182 1069 4 1464 2 1466 2 1468 6 1072 2 1073 6 1469 22 189 82 622 244 1076 2 623 4 190 2 626 30 1080 10 628 28 191 10 1477 4 1480 2 1483 2 1083 4 1486 30 194 14 635 20 1086 2 1087 198 1089 98 196 2 1488 6 198 2 1093 2 1096 328 202 6 638 10 204 6 208 2 1101 2 643 2 213 2 1496 2 653 2 1110 2 1111 2 1112 2 1115 2 654 2 1116 2 656 12 218 10 220 2 222 2 659 46 1119 26 1120 2 664 4 1122 10 228 16 230 12 1503 4 671 6 1128 46 672 2 233 2 1130 2 236 4 676 18 675 204 677 4 679 2 1506 4 239 2 243 2 244 2 1512 24 684 6 246 132 247 2 1513 2 248 86 1514 6 250 6 1517 2 1518 2 1139 2 1141 2 257 4 1519 6 696 2 1143 6 258 2 260 6 697 4 699 2 263 2 1148 12 1149 2 265 64 705 2 1152 12 708 14 710 2 711 4 271 2 272 20 273 2 274 4 1533 182 276 2 275 2 1534 2 714 566 281 4 1160 8 282 68 722 20 284 60 1168 2 1171 2 724 4 1547 6 725 2 1172 2 727 2 728 2 289 6 1173 10 1174 198 1175 18 294 2 296 6 295 22 1553 2 738 2 1183 20 1557 2 302 12 740 2 1560 224 743 20 746 8 745 4 308 2 1188 2 1187 376 748 2 1565 26 1564 2 315 6 751 112 316 60 754 8 1191 4 318 6 317 2 319 4 1567 2 1568 8 1569 112 1570 6 1571 20 756 74 1197 4 757 6 330 4 1201 30 1202 2 761 4 1203 2 1580 4 1206 6 765 2 337 4 1584 4 769 2 771 2 772 2 773 2 1211 4 1587 4 1216 6 1218 2 777 2 779 6 781 2 347 2 784 4 1591 2 787 6 349 2 1595 432 1597 2 1600 2 1601 30 353 28 1227 8 1231 6 789 2 1229 386 790 2 356 46 792 2 1605 2 358 4 359 12 1233 2 360 6 796 6 1607 14 1239 2 1608 6 1240 432 800 192 367 8 802 2 803 2 1241 26 368 14 805 6 807 6 806 2 369 54 811 4 816 2 372 2 817 112 1618 8 819 48 821 2 1620 6 377 60 1627 4 378 2 1628 6 830 52 1254 4 381 26 1633 6 1255 2 1634 2 383 2 385 2 386 10 1638 26 1639 4 1261 2 837 2 396 2 1266 8 1267 2 847 4 848 2 853 2 1649 2 409 106 857 16 1653 6 1271 2 861 4 864 28 1656 32 865 4 1277 26 415 2 1279 20 1658 14 869 2 870 12 1282 4 1283 2 418 6 872 192 1663 328 875 8 876 132 877 2 423 2 422 6 878 4 424 2 425 336 1667 6 1668 84 1290 4 1671 2 1291 290 880 4 1295 4 
1353 2 749 1 1002 2 14 2 
911 2 14 2 
924 2 1104 2 1094 2 1612 2 961 2 14 2 264 2 
1094 2 169 2 14 2 
33 2 1094 2 14 2 
1508 2 1016 2 1002 2 
1094 2 14 2 
1508 2 987 2 
14 2 729 2 
1508 2 1002 2 809 2 
1135 2 1002 2 770 2 
1666 2 1002 2 900 2 
1127 2 1002 2 1650 2 
366 2 1646 2 1002 2 
1508 2 910 2 
1426 2 14 2 
283 2 770 2 
1198 2 900 2 
1650 2 1616 2 
262 2 1646 2 
1508 2 625 2 
1646 2 636 2 
280 2 1650 2 
1539 2 900 2 
766 2 770 2 
1508 2 1328 2 1002 2 809 2 
1508 2 639 2 1328 2 1002 2 809 2 
1508 2 1002 2 1251 2 
1508 2 1002 2 681 2 
689 2 78 2 221 2 1224 2 
45 2 1379 2 73 2 0 2 1366 4 868 2 1370 2 245 2 1124 2 421 2 1217 2 382 2 1058 6 862 2 1306 2 219 2 1524 2 277 4 
931 2 1002 2 
1104 2 1200 2 961 2 688 2 
1104 2 1200 2 961 2 1583 2 688 2 264 2 
1104 2 1094 2 1612 2 961 2 14 2 1026 2 
203 2 1032 2 
441 2 1104 2 1612 2 961 2 
1060 2 1650 2 
1646 2 328 2 
1082 2 770 2 
795 2 900 2 
1646 2 946 2 900 2 
334 2 1646 2 900 2 
1646 2 900 2 85 2 
1646 2 1561 2 900 2 
1104 2 797 2 1655 2 953 2 1118 6 961 2 621 6 703 2 
1508 2 982 2 
1162 2 
646 2 3 2 1497 2 116 2 1578 2 1579 2 119 2 1396 2 1398 2 1307 2 1309 4 660 4 1121 2 444 2 131 2 1005 8 1220 2 135 2 673 4 783 2 31 2 1317 2 680 2 355 2 357 2 1015 6 1137 6 794 4 1235 2 363 2 1428 2 256 2 157 2 694 2 1142 4 474 2 813 6 168 2 373 2 1341 2 1249 2 1347 2 948 2 829 2 1253 2 712 6 67 2 498 2 1452 4 1454 2 612 2 1066 2 393 2 1164 2 1165 2 505 2 188 4 619 8 1360 2 398 2 83 2 1074 4 732 2 1173 26 89 2 966 2 734 4 1176 2 307 2 1562 2 1281 2 105 2 1664 2 638 26 640 4 642 2 
646 2 3 2 1497 2 546 2 116 2 1578 2 1579 2 119 2 1396 2 1398 2 1307 2 1309 2 660 4 1121 2 444 2 131 2 1412 2 1005 8 1220 2 135 2 673 4 783 2 31 2 1317 2 680 2 567 2 355 2 357 2 1015 6 1137 6 794 4 363 2 1428 2 256 2 157 2 694 2 1142 6 474 2 813 6 168 2 373 2 1341 2 1249 2 1347 2 948 2 829 2 1253 2 712 6 67 2 1452 4 1454 2 612 2 1066 2 393 2 1163 2 1164 2 1165 2 505 2 188 4 619 8 1360 2 83 2 1074 4 732 2 1173 26 89 2 966 2 734 4 1176 2 305 2 307 2 1562 2 1281 2 105 2 1099 2 1664 2 638 26 640 4 642 2 
1511 2 
286 2 611 2 
540 2 1346 2 116 2 829 2 993 2 1350 2 762 4 119 2 335 2 597 2 1398 2 598 4 998 6 767 2 1307 2 1536 2 1260 2 182 4 1121 2 392 2 1215 4 447 8 1589 2 395 2 346 2 285 2 287 2 1504 2 1644 2 188 2 1358 2 1467 2 678 2 1173 12 1602 2 1269 8 1603 2 734 2 793 2 1081 6 146 2 145 4 1137 4 687 6 1237 2 1428 2 866 2 310 2 1660 4 579 10 1661 2 752 2 1098 4 874 2 638 6 1100 4 983 2 110 2 588 2 111 2 
540 2 1346 2 116 2 829 2 993 2 1350 2 762 4 119 2 335 2 597 2 1398 2 598 4 998 8 767 2 1307 2 1536 2 1260 2 182 4 1121 2 392 2 1215 4 447 8 1589 2 395 2 346 2 1643 4 285 2 1462 2 287 2 188 2 1504 2 1644 2 1358 2 1467 2 1548 2 678 2 1173 12 1269 8 1603 2 734 2 793 2 1081 6 146 2 145 4 1137 4 687 8 1237 2 1428 2 1276 2 310 2 1660 4 579 10 1661 2 752 2 1098 4 874 2 638 6 1100 4 983 2 110 2 588 2 111 2 
1660 2 1346 2 392 2 1215 4 1098 2 874 2 1589 2 793 2 1081 2 145 2 1100 4 983 2 1504 2 597 2 1467 2 687 2 110 2 767 2 
540 2 1346 2 116 2 829 2 993 2 1350 2 762 4 119 2 335 2 597 2 1398 2 598 4 998 6 767 2 1307 2 1536 2 1260 2 182 4 1121 2 392 2 1215 4 447 4 1589 2 395 2 346 2 285 2 287 2 1504 2 1644 2 188 2 1358 2 1467 2 678 2 1173 12 1602 2 1269 4 1603 2 734 2 793 2 1081 4 146 2 145 4 1137 4 687 6 1428 2 866 2 1276 2 310 2 1660 4 579 6 1661 2 752 2 1098 4 874 2 638 6 1100 4 983 2 110 2 588 2 111 2 
540 2 1346 2 1623 2 116 2 829 2 993 2 1350 2 762 4 119 2 335 2 597 2 1398 2 598 4 998 6 767 2 1307 2 1536 2 1260 2 182 4 1121 2 392 2 1215 4 447 4 1589 2 395 2 346 2 285 2 287 2 1504 2 1644 2 188 2 1358 2 1467 2 678 2 1173 12 1602 2 1269 4 1603 2 734 2 793 2 1081 6 146 2 145 4 1137 4 687 4 1428 2 866 2 310 2 1660 4 579 6 1661 2 752 2 1098 4 874 2 638 6 1100 4 983 2 110 2 588 2 111 2 
540 2 1346 2 116 2 829 2 993 2 1350 2 762 4 119 2 335 2 597 2 1398 2 598 4 998 6 767 2 1307 2 1536 2 1260 2 182 4 1121 2 392 2 1215 4 447 8 1589 2 395 2 346 2 285 2 287 2 1504 2 1644 2 188 2 1358 2 1467 2 678 2 1173 12 1602 2 1269 4 1603 2 734 2 793 2 1081 6 146 2 145 4 1137 4 687 6 1237 2 1428 2 866 2 310 2 1660 4 579 6 1661 2 752 2 1098 4 874 2 638 6 1100 4 983 2 110 2 588 2 111 2 
540 2 1346 2 1623 2 116 2 829 2 993 2 1350 2 762 4 119 2 335 2 597 2 1398 2 598 4 998 8 767 2 1307 2 1536 2 1260 2 182 4 1121 2 392 2 1215 4 447 8 1589 2 395 2 346 2 285 2 287 2 1504 2 1644 2 188 2 1358 2 1467 2 678 2 1173 12 1602 2 1269 8 1603 2 734 2 793 2 1081 8 146 2 145 4 1137 4 687 6 1237 2 1428 2 866 2 310 2 1660 4 579 10 1661 2 752 2 1098 4 874 2 638 6 1100 4 983 2 110 2 588 2 111 2 
540 2 1346 2 116 2 829 2 993 2 1350 2 762 4 119 2 335 2 597 2 1398 2 598 4 998 6 767 2 1307 2 1536 2 1260 2 182 4 1121 2 392 2 1215 4 447 8 1589 2 395 2 346 2 285 2 287 2 1504 2 1644 2 188 2 1358 2 1467 2 678 2 1173 12 1602 2 1269 8 1603 2 734 2 793 2 1081 6 146 2 145 4 1137 4 687 6 1237 2 1428 2 866 2 310 2 1660 4 579 10 1661 2 752 2 1098 4 874 2 638 6 1100 4 983 2 110 2 588 2 111 2 
889 2 1114 2 13 10 1307 2 1309 1 660 4 1121 2 447 2 26 6 1502 6 1126 2 1504 2 673 2 678 2 455 6 685 6 1137 6 687 4 1516 1 929 2 694 12 1142 6 474 2 261 2 486 2 1346 2 1347 2 1528 2 65 6 709 2 948 2 1350 2 712 6 67 2 713 7 1536 2 1354 2 1164 2 285 2 505 2 287 2 1358 2 83 2 732 2 1173 46 89 2 510 2 966 2 297 2 734 4 1176 2 1181 1 1556 2 742 2 306 6 310 2 971 2 527 2 973 1 105 2 752 2 1384 2 533 7 983 2 110 2 111 2 1572 6 540 2 332 8 116 2 546 2 1578 2 993 4 760 2 1394 1 762 8 119 2 1396 2 335 2 1398 2 998 12 767 2 1586 2 131 2 1215 4 1589 2 1412 2 346 4 1005 4 776 1 1220 2 135 2 1223 6 1422 1 1010 2 1603 2 357 2 793 2 145 4 1015 8 146 4 794 4 1238 6 1022 2 363 2 1428 2 1027 4 152 2 804 2 579 2 157 2 1039 6 813 6 168 2 588 2 373 2 825 4 1249 2 1623 4 1250 2 829 2 1631 1 597 2 598 6 1059 2 599 2 834 2 1635 2 605 6 1260 2 182 4 836 6 392 2 612 4 1066 2 393 2 395 2 188 4 1644 2 1467 2 619 4 1268 2 855 6 1081 8 632 6 633 2 634 2 866 2 414 6 416 6 1660 4 1662 1 1661 2 1098 4 874 2 638 24 1100 4 205 2 640 4 1102 2 209 1 
540 2 332 8 1578 2 546 2 116 2 760 2 889 2 993 4 762 8 1114 2 1396 2 119 2 335 2 1398 2 13 10 998 12 767 2 1307 2 660 4 1121 2 1586 2 131 4 1215 4 1502 6 26 6 447 6 133 2 1589 2 1005 8 346 4 1412 2 1126 2 1220 2 135 2 673 2 1504 2 1223 6 678 2 455 6 1010 2 1603 2 357 2 793 2 685 6 146 4 1015 8 145 4 1137 6 794 4 687 8 929 2 1237 4 1022 2 1238 6 363 2 1027 4 1428 2 152 2 804 2 579 2 694 12 157 4 1142 6 1039 6 474 2 813 6 261 2 168 2 700 2 588 2 373 4 486 2 825 4 1249 2 1346 2 1347 2 1250 2 1528 2 65 6 709 2 948 2 829 2 1350 2 712 6 67 2 597 2 598 6 1059 2 599 2 834 2 1536 2 1452 2 605 6 1635 2 1260 2 182 4 836 6 1354 2 612 4 392 2 1066 2 393 2 1164 2 395 2 285 2 505 2 287 2 1644 2 188 4 1358 2 619 8 1467 2 83 2 732 2 1173 48 89 2 510 2 1268 2 297 2 966 2 855 6 734 4 1176 2 1556 2 1081 8 632 6 633 2 742 2 634 2 306 6 866 2 414 6 416 6 527 2 971 2 310 2 1660 4 105 2 1661 2 752 2 1098 4 874 2 638 26 205 2 1384 2 1100 4 983 2 640 4 110 2 1572 6 111 2 1102 2 
540 2 332 8 1578 2 546 2 116 2 760 2 889 2 993 4 762 8 1114 2 1396 2 119 2 335 2 1398 2 13 10 998 12 767 2 1307 2 660 4 1121 2 1586 2 131 4 1215 4 1502 6 26 6 447 6 133 2 1589 2 1005 8 346 4 1412 2 1126 2 1220 2 135 2 673 2 1504 2 1223 6 678 2 455 6 1010 2 1603 2 357 2 793 2 685 6 146 4 1015 8 145 4 1137 6 794 4 687 8 929 2 1237 4 1022 2 1238 6 363 2 1027 4 1428 2 152 2 804 2 579 6 694 12 157 4 1142 6 1039 6 474 2 813 6 261 2 168 2 700 2 588 2 373 4 486 2 825 4 1249 2 1346 2 1347 2 1250 2 1528 2 65 6 709 2 948 2 829 2 1350 2 712 6 67 2 597 2 598 6 1059 2 599 2 834 2 1536 2 1452 2 605 6 1635 2 1260 2 182 4 836 6 1354 2 612 4 392 2 1066 2 393 2 1164 2 395 2 285 2 505 2 287 2 1644 2 188 4 1358 2 619 8 1467 2 83 2 732 2 1173 48 89 2 510 2 1268 2 1269 4 297 2 966 2 855 6 734 4 1176 2 1556 2 1081 8 632 6 633 2 742 2 634 2 306 6 866 2 414 6 416 6 527 2 971 2 310 2 1660 4 105 2 1661 2 752 2 1098 4 874 2 638 26 205 2 1384 2 1100 4 983 2 640 4 110 2 1572 6 111 2 1102 2 
540 2 1173 4 1269 4 1603 2 793 2 1081 4 145 2 762 2 1350 2 335 2 687 4 998 4 1237 2 767 2 866 2 1536 2 310 2 804 2 182 2 579 4 131 2 157 2 392 2 1215 2 1661 2 447 6 1098 2 874 2 1005 2 346 2 285 2 1100 2 287 2 983 2 1644 2 1504 2 619 2 1467 2 373 2 111 2 
540 2 1173 4 1269 4 1603 2 793 2 1081 6 145 4 762 2 1350 2 335 2 687 6 598 2 998 4 1237 2 767 2 866 2 1536 2 310 2 182 2 579 4 392 2 1215 2 1661 2 447 6 1098 4 874 2 346 2 285 2 1100 2 287 2 983 2 1644 2 1504 2 1467 2 111 2 
540 2 215 2 8 2 116 2 546 2 762 2 119 2 1396 2 335 2 1398 2 998 4 13 2 767 2 1307 2 660 4 1121 2 1215 2 447 6 346 2 1412 2 1220 2 135 2 1504 2 673 3 1133 2 1603 2 460 2 357 3 793 2 145 4 1015 8 1137 6 794 4 687 6 1237 2 363 2 1428 2 579 2 694 4 1142 6 695 2 474 2 813 6 1147 2 168 2 588 2 1249 2 1347 2 829 2 948 2 1350 2 712 6 67 2 598 2 1536 2 182 2 392 2 612 2 1162 2 1066 2 1164 2 839 3 285 2 505 2 287 2 1644 2 188 4 1467 2 732 2 1173 28 89 2 966 3 734 4 1176 2 1479 2 1081 6 1374 2 634 2 866 2 310 2 1661 2 105 2 1098 4 874 2 638 24 1100 2 640 4 983 2 111 2 
540 2 501 2 1661 2 
540 2 501 2 1661 2 
540 4 211 2 650 2 1497 4 546 2 116 2 993 4 433 2 762 4 119 2 1398 2 13 2 998 16 1307 2 1309 2 660 4 1121 2 443 2 1499 4 131 4 1215 2 447 6 1589 2 1005 4 1412 2 346 4 1414 2 1220 2 135 2 673 2 1504 2 350 2 678 2 788 2 1596 2 1423 2 146 2 1015 2 145 4 1137 6 687 12 1237 4 363 2 1027 2 1428 2 579 6 157 4 694 4 1615 2 1142 6 474 2 813 2 168 2 373 4 825 2 1249 2 1347 2 1153 2 1623 4 65 2 948 2 829 2 1629 4 1350 2 712 2 67 2 598 4 1536 2 1635 2 1260 2 182 2 501 2 612 6 392 2 1066 2 393 4 1164 2 395 2 505 2 188 4 619 4 1467 4 1647 2 732 2 1173 24 89 2 1268 2 1269 4 734 4 1176 2 299 2 1081 12 1084 2 413 2 1276 4 971 2 1660 4 1661 6 105 2 1098 4 638 16 1100 2 640 4 755 2 110 2 327 2 
527 2 1173 4 155 2 1346 2 1121 2 611 2 1528 2 694 2 1615 2 65 2 638 2 1414 2 841 2 13 2 788 2 1403 2 1027 2 
540 4 211 2 544 2 650 2 1497 4 546 2 116 2 993 4 762 4 119 2 1398 2 998 16 1307 2 660 4 1208 2 1121 2 443 2 1499 4 131 4 1215 2 447 6 1589 2 1005 4 1412 2 346 4 1414 2 1220 2 135 2 673 4 1504 2 678 2 788 2 1318 2 1423 2 146 4 1015 2 145 4 1137 6 687 12 1237 4 363 2 1428 2 579 6 157 4 694 2 1615 2 1142 6 474 2 813 2 168 2 373 4 825 2 1249 2 1347 2 1153 4 1623 4 65 2 948 2 829 2 1629 4 1350 2 712 2 67 2 598 4 1536 2 1635 2 1260 2 182 2 501 2 612 6 392 2 1066 2 393 4 1164 2 395 2 505 2 188 4 619 4 1467 4 1647 2 732 2 1173 24 89 2 1268 2 1269 4 734 4 1176 2 299 2 1081 12 518 2 413 2 1276 4 971 2 1660 4 1661 6 105 2 752 2 1098 4 638 16 1100 2 640 4 755 2 427 2 110 2 327 2 
540 4 211 2 650 2 1497 4 546 2 116 2 993 4 762 4 119 2 1398 2 13 2 998 16 1307 2 16 2 1309 1 660 4 1121 2 443 2 1499 4 131 4 1215 2 447 6 1589 2 1005 4 1412 2 346 4 1414 2 1220 2 135 2 673 2 1504 2 1593 2 678 2 788 2 1226 2 1423 2 146 4 1015 2 145 4 1137 6 687 12 1237 4 363 2 1027 2 1428 2 579 6 157 4 694 4 1615 2 1142 6 474 2 813 2 168 2 373 4 825 2 1249 2 1347 2 1153 2 1623 4 267 2 65 2 948 2 829 2 1629 4 1350 2 712 2 67 2 598 4 1536 2 1635 2 1260 2 182 2 501 2 612 6 392 2 1066 2 393 4 1164 2 395 2 505 2 188 4 619 4 1467 4 1647 2 732 2 1173 24 89 2 1268 2 1269 4 734 4 1176 2 299 2 1081 12 413 2 1276 4 971 2 1660 4 528 2 1661 6 105 2 752 2 1098 4 638 16 1100 2 640 4 755 2 110 2 327 2 
881 36 882 2 428 50 886 2 3 2 7 2 8 2 887 2 888 2 1301 4 1302 24 434 3 890 66 891 2 435 2 11 1 892 16 436 4 1304 2 1305 2 897 2 898 8 438 2 1307 2 901 2 1309 1 902 2 442 2 19 4 906 2 907 4 23 2 909 36 1311 4 912 3 1313 2 450 36 31 2 1316 2 917 2 918 2 1319 5 919 10 456 36 922 67 921 4 1320 16 1321 2 923 2 36 2 460 2 37 3 38 72 925 2 927 18 39 2 463 36 40 2 1325 20 1327 2 41 4 929 2 930 6 468 2 43 2 46 2 1330 2 47 50 471 52 472 2 932 2 51 2 936 80 475 3 474 40 53 2 1335 36 939 14 477 2 478 7 54 16 1336 2 55 2 56 4 941 2 480 16 57 3 481 2 1340 2 943 2 1341 2 60 2 485 2 1343 2 1344 4 487 23 489 2 490 36 1347 40 491 6 63 4 64 12 493 32 495 2 949 36 948 2 1349 2 67 2 1351 2 68 2 69 2 500 4 75 32 1354 2 77 2 958 56 1356 2 959 14 1357 3 505 8 507 3 1359 2 80 2 81 18 83 46 86 2 963 2 1363 4 1364 2 1367 72 87 16 90 2 510 2 93 2 512 2 511 2 965 20 1369 2 966 16 514 2 967 4 1371 2 1372 3 516 6 97 36 519 2 969 3 520 2 101 2 100 2 102 2 525 20 526 12 103 2 974 2 529 2 105 2 530 2 1384 2 981 6 108 2 113 4 1390 3 542 14 1392 16 988 16 989 6 991 2 116 2 546 142 547 2 1393 2 118 2 117 2 548 2 119 2 1396 2 549 1 1397 2 551 2 550 2 1398 2 996 20 1399 2 997 1 122 2 1400 2 553 2 1402 24 126 2 127 2 1404 2 1000 2 129 8 1001 2 555 2 132 4 1409 18 1411 2 556 4 1004 2 1003 2 1412 144 1005 106 560 12 135 4 561 6 562 3 1006 6 1416 2 136 6 1418 6 563 3 1419 3 1420 2 137 3 565 2 141 2 1012 4 142 2 568 6 1425 2 144 20 1015 86 574 2 1018 4 1019 4 576 2 1021 2 151 2 1024 6 578 2 1429 2 1428 2 1430 2 1029 2 1031 2 152 2 1431 2 154 2 1432 1 1033 2 156 2 1035 20 581 2 1037 16 1038 2 160 8 1437 18 165 6 583 2 1042 14 1041 2 168 2 586 2 1043 10 1442 2 1045 3 590 92 1444 2 172 2 1046 2 1047 36 1048 260 1447 16 593 2 1050 2 1051 92 1449 4 1053 20 1052 2 1056 2 176 4 1057 20 596 10 1451 4 178 2 600 2 1062 2 180 36 602 20 603 20 604 36 181 2 607 36 1065 10 612 2 1066 8 1458 2 187 50 1460 36 1461 2 1067 12 615 6 616 16 617 2 188 6 1071 2 1465 2 619 111 1470 2 620 4 1077 3 1472 24 1473 2 1474 4 1475 2 1476 36 1079 20 629 3 192 36 1478 2 1482 2 631 2 1484 16 630 2 1485 2 1487 2 1085 4 1088 2 195 20 197 10 1090 2 199 2 200 4 1092 2 1097 14 201 2 1489 6 637 1 1490 16 638 464 1491 2 640 188 206 2 1492 36 207 48 642 52 1493 1 1102 8 645 2 644 2 1494 2 1105 2 212 2 1106 48 648 2 649 2 214 2 1108 2 1109 20 216 16 1495 72 652 2 217 2 1498 2 1114 8 655 36 1117 2 658 36 660 224 661 16 662 4 1121 2 665 14 1500 66 666 36 667 2 223 2 1123 2 225 2 226 2 227 2 229 2 1125 36 231 2 670 2 669 2 232 2 1126 2 673 69 234 1 1129 1 674 2 235 4 1131 2 238 2 240 4 1509 3 680 2 1133 2 241 92 242 36 1134 6 1137 8 1138 72 249 2 1515 2 251 4 690 14 691 36 255 2 692 2 1140 26 694 4 1142 512 1520 5 695 2 1521 36 1522 20 259 39 1144 36 1146 2 698 18 261 4 701 2 702 36 1150 3 1151 2 704 4 1525 2 1526 2 706 2 1527 4 266 72 1154 2 268 52 707 1 1529 2 1156 4 270 2 1157 2 1531 2 1532 2 712 14 1535 3 279 2 278 2 718 2 1541 2 717 24 719 2 720 3 721 2 1164 2 1166 2 723 20 1165 3 1546 2 1167 2 1169 4 1550 2 290 2 730 1 731 36 732 2 1173 579 733 2 1552 4 1555 2 1554 2 734 6 1176 2 1178 4 735 2 1180 2 1179 16 300 2 737 2 301 16 1558 8 303 4 304 36 1184 7 747 72 744 2 1562 2 1185 12 1563 3 1566 1 1189 6 1190 1 1192 2 320 2 1193 24 321 52 324 1 326 2 1194 3 1195 12 1196 16 329 6 1574 8 1576 1 1575 20 331 10 759 2 333 2 1578 58 1582 2 1581 2 763 2 764 2 1205 2 340 2 1207 2 343 2 341 2 1585 4 1586 2 1210 2 1213 4 1214 36 1588 2 1219 2 1220 2 778 2 1221 3 1590 2 782 30 783 2 1592 2 786 14 1594 2 351 2 352 4 354 2 1230 2 357 46 1232 2 1606 2 1234 10 794 12 361 3 1236 2 798 18 363 2 801 8 1242 1 1243 20 1611 2 808 4 1614 102 1246 36 1245 3 1247 4 810 2 812 2 370 2 813 26 1617 2 815 2 371 2 818 2 1248 18 374 2 376 32 375 2 823 16 824 2 827 4 826 2 1249 2 1621 4 1250 2 1625 2 828 16 1626 3 829 2 1253 2 831 2 1630 7 832 2 380 2 1256 1 833 2 384 16 834 2 1257 2 1258 2 1637 2 387 2 390 20 389 2 1263 10 391 2 838 1 1642 20 393 10 839 2 840 16 1645 8 843 4 846 2 844 48 849 16 851 2 852 2 400 20 399 2 401 36 403 20 1648 2 404 2 854 6 406 2 405 3 407 2 856 2 410 2 859 2 1270 14 1272 28 411 2 863 54 1274 3 867 20 1278 4 1659 2 1281 2 871 10 1284 20 420 2 1287 2 1288 7 426 4 1289 2 1670 18 1293 2 879 2 1294 2 1674 2 
1173 2 966 2 629 2 36 2 357 2 1015 2 794 2 1396 2 712 2 596 2 412 2 692 2 871 4 1263 2 721 2 227 2 638 2 1287 2 813 2 673 2 1340 2 851 2 83 6 326 2 
1173 2 966 2 629 2 36 2 357 2 1015 2 794 2 1396 2 712 2 596 2 412 2 692 2 871 4 1263 2 721 2 227 2 638 2 1287 2 813 2 673 2 1340 2 851 2 83 6 326 2 
1173 2 966 2 629 2 36 2 357 2 1015 2 794 2 1396 2 712 2 596 2 412 2 692 2 871 4 1263 2 721 2 227 2 638 2 1287 2 813 2 673 2 1340 2 851 2 83 6 326 2 
329 2 1363 2 1173 10 1079 4 5 2 1134 2 36 2 357 3 144 4 1302 3 1015 2 1396 2 1325 4 1061 2 798 4 1402 3 522 3 867 4 526 2 1185 2 388 2 717 5 75 2 1614 6 1489 2 132 2 417 2 1189 2 582 2 958 2 638 4 506 4 1067 2 673 3 1418 4 1672 2 170 2 1471 2 237 2 1195 2 
329 2 5 2 989 2 1302 2 1396 2 1061 2 1402 2 388 2 717 4 75 2 132 2 958 2 1067 2 506 4 673 2 1418 4 1471 2 237 2 1363 2 1173 10 1079 4 36 2 1134 2 357 2 144 4 1015 2 1234 2 1325 4 100 2 798 4 522 2 1185 2 526 2 867 4 1614 6 1489 2 417 2 582 2 1189 2 638 4 1672 2 170 2 1195 2 
329 2 5 2 989 2 1302 2 1396 2 1061 2 1402 2 388 2 717 4 75 2 132 2 958 2 1067 2 506 4 673 2 1418 4 1471 2 237 2 1363 2 1173 10 1079 4 36 2 1134 2 357 2 144 4 1015 2 1234 2 1325 4 100 2 798 4 522 2 1185 2 526 2 867 4 1614 6 1489 2 417 2 582 2 1189 2 638 4 1672 2 170 2 1195 2 
329 2 5 2 989 2 1302 2 1396 2 1061 2 1402 2 388 2 717 4 75 2 132 2 958 2 1067 2 506 4 673 2 1418 4 1471 2 237 2 1363 2 1173 10 1079 4 36 2 1134 2 357 2 144 4 1015 2 1234 2 1325 4 100 2 798 4 522 2 1185 2 526 2 867 4 1614 6 1489 2 417 2 582 2 1189 2 638 4 1672 2 170 2 1195 2 
329 2 5 2 989 4 1302 2 1396 2 1061 2 1402 2 388 2 717 4 75 2 132 2 958 2 1067 2 506 4 673 2 1418 4 1471 2 237 2 1363 2 1173 10 1079 4 36 2 1134 2 357 2 144 4 1015 2 1234 4 1325 4 100 4 798 4 522 2 1185 2 526 2 867 4 1614 6 1489 2 417 2 582 2 1189 2 638 4 1672 2 170 2 1195 2 
166 2 716 2 
342 2 311 2 48 2 1296 2 642 2 1371 2 1212 2 
1173 10 509 1 454 2 885 2 1624 1 6 1 1078 2 1373 2 552 2 252 1 1428 2 1158 2 72 2 1280 1 1433 2 345 2 26 2 638 8 1440 2 780 2 1222 2 962 2 1549 2 32 2 171 2 1362 2 
329 6 1363 2 1173 6 645 2 921 2 989 2 1134 6 594 2 1234 5 39 2 100 2 798 12 500 2 1185 6 1091 2 717 16 1489 6 1311 2 160 2 1189 6 638 6 165 4 615 4 1067 6 845 2 1418 4 325 2 1594 2 1195 6 1674 2 
1540 4 1173 1 662 2 693 2 1079 2 947 2 638 1 144 2 379 2 96 1 575 2 1325 2 1441 2 641 2 1385 2 1507 2 820 6 591 2 
1540 4 662 4 693 2 1079 2 947 4 144 2 379 2 575 2 1325 2 1441 2 641 2 1385 4 591 2 1507 2 820 6 
1540 4 1173 1 662 8 693 2 1079 2 947 8 638 1 144 2 379 2 96 1 575 2 1325 2 1441 2 641 6 1385 8 591 8 1507 2 820 10 
1540 2 662 2 693 2 1079 2 947 2 144 2 379 2 575 2 1325 2 1441 2 1385 2 1507 2 820 2 
881 6 1574 7 216 4 1495 16 331 8 546 58 434 6 893 12 655 6 768 90 125 4 1309 4 658 6 903 2 660 112 661 4 909 42 666 6 1410 26 1214 10 1123 8 668 8 912 2 1125 6 1412 58 135 8 1415 2 1505 1 450 10 785 24 137 2 1009 2 456 10 922 22 241 92 242 6 683 4 461 4 37 2 38 36 1136 26 1138 17 147 6 463 24 930 4 1609 4 254 24 691 6 47 12 1246 6 1142 248 936 50 1037 4 1334 4 1521 6 474 14 259 8 1144 10 1335 42 54 4 56 4 702 24 590 84 1248 15 823 4 1619 8 1344 2 1047 10 1048 124 266 16 490 6 1347 14 268 4 1348 2 949 24 1051 34 175 2 1630 11 1057 2 70 2 384 4 601 2 1535 2 180 6 604 6 607 6 1640 4 610 18 719 8 835 24 389 8 1161 8 1460 6 619 28 618 10 397 90 620 4 401 6 84 4 731 6 1367 18 1173 150 87 4 624 2 1476 6 1651 10 192 6 1179 4 860 4 1484 4 301 4 1654 2 97 6 304 6 1184 7 969 4 1275 10 747 16 314 2 1381 2 873 2 638 134 981 4 640 88 1492 6 1673 2 1194 2 1573 4 
1619 2 883 2 1103 2 1047 2 1345 2 1048 6 62 2 266 4 490 2 1347 2 430 2 651 4 1495 4 546 3 434 3 175 2 338 2 601 2 1309 2 660 20 21 2 1543 2 719 2 835 2 389 2 1214 2 1123 2 224 2 504 4 775 2 448 2 1412 3 135 2 27 2 1415 2 618 2 619 37 450 2 850 2 726 2 785 2 1075 2 401 2 1009 2 1367 2 1173 46 1368 2 456 2 88 2 624 2 242 2 1012 4 627 2 682 2 1651 2 459 2 408 2 192 2 1323 2 38 2 1481 2 1138 2 98 2 304 2 149 2 467 2 969 1 362 2 1273 2 799 2 1275 2 747 4 1609 2 309 2 254 2 1186 2 1246 2 471 6 314 2 1142 45 1436 2 162 2 474 2 638 44 259 6 1144 2 1383 2 584 2 1145 2 640 20 534 2 323 4 
881 4 429 8 430 2 331 4 216 4 1495 10 546 28 434 2 336 16 655 4 658 4 660 44 661 4 663 8 909 8 1501 4 1123 2 1214 4 1125 4 1412 30 135 2 1415 2 450 6 348 16 30 4 564 4 137 2 1599 2 456 4 241 24 242 4 1228 2 37 2 38 6 1138 10 930 2 799 10 578 2 1610 4 691 4 47 14 1613 8 1246 4 1142 104 936 8 1037 4 1521 4 474 6 259 6 1144 4 1335 16 54 4 56 4 1338 4 702 8 590 24 1248 8 823 4 1047 4 1048 24 266 10 1347 6 490 4 1051 30 175 2 1450 8 70 2 384 4 601 2 180 4 604 4 715 4 607 4 719 2 389 2 1641 4 1545 2 1460 4 1070 2 619 14 620 4 401 4 731 4 1367 10 1173 78 87 4 88 2 624 2 515 2 1476 4 192 4 1179 4 1481 2 1484 4 301 4 1654 2 97 4 304 4 1184 3 747 10 309 10 1657 32 314 2 638 70 640 36 1492 4 534 10 
1047 2 1048 8 1574 1 266 6 1347 2 490 4 268 2 430 2 1495 6 331 4 546 12 1051 6 434 2 1630 1 175 2 601 2 1535 2 1309 2 660 14 903 2 719 2 389 2 1123 2 1214 2 912 1 1412 12 135 2 1415 2 619 14 450 2 850 2 620 2 401 4 1173 28 1367 2 1009 2 624 2 456 2 922 9 242 4 192 4 38 2 1138 2 304 4 930 2 747 6 1246 4 314 2 1142 40 474 2 638 26 259 4 1144 2 981 2 640 14 56 2 1673 2 1248 5 1194 2 
1252 2 
1107 1 1577 1 458 1 1386 1 753 1 1342 1 
1107 1 1577 1 458 1 1386 1 753 1 1342 1 
1107 1 1577 1 458 1 1386 1 753 1 1342 1 
1107 1 1577 1 458 1 1386 1 753 1 1342 1 
1107 1 1577 1 458 1 1386 1 753 1 1342 1 
1107 1 1577 1 458 1 1386 1 753 1 1342 1 
1107 1 1577 1 458 1 1386 1 753 1 1342 1 
1107 1 1577 1 458 1 1386 1 753 1 1342 1 
1107 1 1577 1 458 1 1386 1 753 1 1342 1 
1107 1 1577 1 458 1 1386 1 753 1 1342 1 
1107 1 1577 1 458 1 1386 1 753 1 1342 1 
1107 1 1577 1 458 1 1386 1 753 1 1342 1 
1107 1 1577 1 458 1 1386 1 753 1 1342 1 
1107 1 1577 1 458 1 1386 1 753 1 1342 1 
1107 1 1577 1 458 1 1386 1 753 1 1342 1 
1107 1 1577 1 458 1 1386 1 753 1 1342 1 
1107 1 1577 1 458 1 1386 1 753 1 1342 1 
1107 1 1577 1 458 1 1386 1 753 1 1342 1 
1107 1 1577 1 458 1 1386 1 753 1 1342 1 
1107 1 1577 1 458 1 1386 1 753 1 1342 1 
1107 1 1577 1 458 1 1386 1 753 1 1342 1 
1107 1 1577 1 458 1 1386 1 753 1 1342 1 
1107 1 1577 1 458 1 1386 1 753 1 1342 1 
1107 1 1577 1 458 1 1386 1 753 1 1342 1 
1107 1 1577 1 458 1 1386 1 753 1 1342 1 
1107 1 1577 1 458 1 1386 1 753 1 1342 1 
1107 1 1577 1 458 1 1386 1 753 1 1342 1 
1107 1 1577 1 458 1 1386 1 753 1 1342 1 
1107 1 1577 1 458 1 1386 1 753 1 1342 1 
1107 1 1577 1 458 1 1386 1 753 1 1342 1 
1107 1 1577 1 458 1 1386 1 753 1 1342 1 
1107 1 1577 1 458 1 1386 1 753 1 1342 1 
1107 1 1577 1 458 1 1386 1 753 1 1342 1 
1107 1 1577 1 458 1 1386 1 753 1 1342 1 
1107 1 1577 1 458 1 1386 1 753 1 1342 1 
1107 1 1577 1 458 1 1386 1 753 1 1342 1 
1107 1 1577 1 458 1 1386 1 753 1 1342 1 
1107 1 1577 1 458 1 1386 1 753 1 1342 1 
1107 1 1577 1 458 1 1386 1 753 1 1342 1 
1107 1 1577 1 458 1 1386 1 753 1 1342 1 
1107 1 1577 1 458 1 1386 1 753 1 1342 1 
1107 1 1577 1 458 1 1386 1 753 1 1342 1 
1107 1 1577 1 458 1 1386 1 753 1 1342 1 
1107 1 1577 1 458 1 1386 1 753 1 1342 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V ERROR java.lang.NullPointerException 779 
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR utilMDE.Assert$AssertionException (57,324) (57,324) (53,155,354,539,934) (53,155,354,539,934) (53,155,354,539,934) 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V PASSED
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 588 138 1219 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 988 688 858 1197 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 988 688 858 1197 
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 988 688 858 1197 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 988 688 858 1197 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfo:simplify_name()Ljava.lang.String;
jtb.syntaxtree.VariableDeclaratorId:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.test.TestAst:checkMatch(Ljava.lang.String;Ljtb.syntaxtree.MethodDeclaration;Ldaikon.tools.jtb.PptNameMatcher;)V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
utilMDE.Options.OptionInfo:argument_required()Z
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.UtilMDE:splitLines(Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
jtb.syntaxtree.NodeListOptional:elements()Ljava.util.Enumeration;
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.Debug:logDetail()Z
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3_35()Z
utilMDE.WeakHasherMap:size()I
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.Quant:lt(II)Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_117()Z
jtb.JavaParser:jj_3R_114()Z
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
jtb.JavaParser:jj_3R_102()Z
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.VarInfoName:name()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:indexOf([ZZ)I
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
jtb.JavaParser:jj_3R_110()Z
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
jtb.JavaParser:jj_3_19()Z
utilMDE.UtilMDE:removeWhitespaceAfter(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameters;)V
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
jtb.visitor.TreeFormatter:placeToken(Ljtb.syntaxtree.NodeToken;II)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_116()Z
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeBound;)V
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
utilMDE.FuzzyFloat:gt(DD)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName:ioa_name()Ljava.lang.String;
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.VarComparabilityImplicit:alwaysComparable()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
jtb.syntaxtree.ImportDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_2_1(I)Z
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_118()Z
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBody;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
jtb.JavaCharStream:getEndLine()I
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_48()Z
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.VarInfo:isPointer()Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_124()Z
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
jtb.JavaParser:jj_3R_115()Z
jtb.JavaParser:jj_3_21()Z
jtb.JavaParser:jj_2_13(I)Z
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
jtb.JavaParser:jj_3R_88()Z
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3_36()Z
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
utilMDE.FuzzyFloat:indexOf([DD)I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.Quant:lexNotEqual([I[I)Z
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:jj_3_18()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InclusiveOrExpression;)V
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
jtb.JavaParserTokenManager:MoreLexicalActions()V
jtb.visitor.TreeFormatter:space(I)Ljtb.visitor.FormatCommand;
jtb.JavaParser:jj_3R_72()Z
jtb.visitor.TreeFormatter:TreeFormatter(II)V
jtb.JavaParser:jj_3R_68()Z
utilMDE.Intern:intern([J)[J
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:lexEqual([I[I)Z
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.inv.filter.ParentFilter:ParentFilter()V
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
utilMDE.FuzzyFloat:gte(DD)Z
daikon.Quant:eltsLT([II)Z
jtb.JavaParser:jj_3R_63()Z
daikon.Quant:gt(II)Z
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
jtb.JavaParser:jj_3R_58()Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_85()Z
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
jtb.visitor.TreeFormatter:processList(Ljtb.syntaxtree.NodeListInterface;Ljtb.visitor.FormatCommand;)V
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.ArraysMDE:indexOf([II)I
jtb.syntaxtree.FormalParameters:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeToken:accept(Ljtb.visitor.Visitor;)V
utilMDE.FuzzyFloat:indexOf([D[D)I
jtb.JavaParser:jj_3R_96()Z
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameters;)V
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.ValueSet:ValueSet(I)V
jtb.syntaxtree.NodeSequence:elements()Ljava.util.Enumeration;
daikon.VarInfo:esc_name()Ljava.lang.String;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.VarInfo:jml_name()Ljava.lang.String;
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_51()Z
jtb.JavaParser:jj_2_5(I)Z
daikon.PptName:isCombinedExitPoint()Z
daikon.ProglangType:isScalar()Z
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
jtb.JavaParser:jj_3_5()Z
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.Quant:concat([I[I)[I
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.PptSlice1:num_samples()I
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
daikon.test.TestAst.MethodDeclarationHarvester:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Name;)V
jtb.JavaParser:jj_3R_106()Z
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.Quant:lte(II)Z
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpression;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeListOptional;)V
daikon.ValueTuple:size()I
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ValueTuple:isMissingFlow(I)Z
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
jtb.syntaxtree.TypeParameter:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.diff.PrintAllVisitor:bufPrintln()V
jtb.JavaParser:jj_3R_87()Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArgument;)V
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InstanceOfExpression;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_49()Z
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:copy(Ljava.util.HashMap;)Ljava.util.HashMap;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_3_15()Z
utilMDE.ArraysMDE:subarray([III)[I
jtb.JavaParser:jj_3R_122()Z
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_80()Z
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_2_25(I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ResultType;)V
daikon.inv.OutputFormat:isJavaFamily()Z
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_180()Z
utilMDE.ArraysMDE:min_max([I)[I
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_125()Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor.1:visit(Ljtb.syntaxtree.TypeParameter;)V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_69()Z
jtb.JavaParser:jj_3_12()Z
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ExclusiveOrExpression;)V
daikon.ModBitTracker:split(I)I
jtb.JavaParser:jj_3_16()Z
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3_27()Z
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
jtb.JavaParser:jj_3R_70()Z
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.NodeOptional:accept(Ljtb.visitor.Visitor;)V
daikon.inv.Invariant:format()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryExpression;)V
daikon.simplify.LemmaStack:noticeInt(J)V
jtb.JavaParser:jj_3R_54()Z
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_89()Z
daikon.inv.unary.UpperBoundCore:calc_modulus()J
jtb.visitor.TreeDumper:printToken(Ljava.lang.String;)V
jtb.syntaxtree.FormalParameter:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3R_104()Z
jtb.syntaxtree.TypeArgument:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
jtb.JavaParser:jj_3R_123()Z
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
jtb.visitor.TreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.Quant:memberOf(S[S)Z
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_73()Z
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.config.Configuration.ConfigException:ConfigException(Ljava.lang.String;Ljava.lang.Throwable;)V
daikon.Quant:eltsGtIndex([I)Z
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.Quant:memberOf(F[F)Z
daikon.ProglangType:baseIsFloat()Z
daikon.Quant:eltwiseGT([I)Z
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AndExpression;)V
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
utilMDE.Assert:assertTrue(Z)V
daikon.Quant:subsetOf([S[S)Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.JavaParser:jj_3R_47()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments;
jtb.syntaxtree.CompilationUnit:CompilationUnit(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
jtb.JavaParser:jj_3_20()Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
daikon.Quant:eltsNotEqualIndex([I)Z
jtb.syntaxtree.NodeListOptional:getParent()Ljtb.syntaxtree.Node;
jtb.syntaxtree.TypeArguments:accept(Ljtb.visitor.Visitor;)V
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eq(DD)Z
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeOptional;)V
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
utilMDE.SimpleLog.LongVal:LongVal(J)V
jtb.JavaParser:jj_3R_103()Z
utilMDE.MathMDE:mod_positive(JJ)J
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.syntaxtree.PostfixExpression:accept(Ljtb.visitor.Visitor;)V
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_105()Z
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V
utilMDE.LimitedSizeIntSet:add(I)V
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
jtb.JavaParser:jj_3R_52()Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameter;)V
daikon.Quant:eltsNotEqual([II)Z
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:sign(I)I | CONSTANT | 2622 | 0 -> -1
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:eltwiseGTE([I)Z
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.Quant:subsetOf([F[D)Z
utilMDE.OrderedPairIterator:setnext1()V
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
jtb.syntaxtree.TypeArgument:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.Quant:pairwiseNotEqual([I[I)Z
jtb.JavaParser:jj_3R_86()Z
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
jtb.JavaCharStream:readChar()C
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
jtb.JavaCharStream:FillBuff()V
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_97()Z
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.Quant:pairwiseGTE([I[I)Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_ntk()I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
jtb.syntaxtree.TypeDeclaration:TypeDeclaration(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljtb.syntaxtree.Node;)Z
jtb.syntaxtree.AdditiveExpression:accept(Ljtb.visitor.Visitor;)V
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:jj_3R_81()Z
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.syntaxtree.NodeSequence:elementAt(I)Ljtb.syntaxtree.Node;
jtb.JavaParser:getToken(I)Ljtb.Token;
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
jtb.JavaParser:jj_2_17(I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ProglangType:elementType()Ldaikon.ProglangType;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
jtb.visitor.FormatCommand:getNumCommands()I
jtb.JavaParser:jj_3R_100()Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ShiftExpression;)V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
daikon.VarInfo:ioa_name()Ljava.lang.String;
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
daikon.tools.jtb.SimpleTreeDumper:printToken(Ljava.lang.String;)V
daikon.Quant:setDiff([I[I)[I
jtb.JavaCharStream:ReadByte()C
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Statement;)V
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.Quant:eltsLteIndex([I)Z
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
jtb.JavaParser:jj_3_1()Z
jtb.syntaxtree.ClassOrInterfaceDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.tools.jtb.PptNameMatcher:PptNameMatcher(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:VariableDeclaratorId()Ljtb.syntaxtree.VariableDeclaratorId;
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
jtb.syntaxtree.MethodDeclarator:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.ClassOrInterfaceBody:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.Expression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_121()Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.Quant:slice([III)[I
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
utilMDE.WeakHasherMap:processQueue()V
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.PptName:getSignature()Ljava.lang.String;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
jtb.syntaxtree.CompilationUnit:getParent()Ljtb.syntaxtree.Node;
jtb.syntaxtree.MethodDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.EqualityExpression:accept(Ljtb.visitor.Visitor;)V
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
jtb.JavaCharStream:getBeginColumn()I
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
jtb.visitor.TreeFormatter:space()Ljtb.visitor.FormatCommand;
jtb.syntaxtree.TypeArguments:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:sum([D)D
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
jtb.syntaxtree.NodeToken:trimSpecials()V
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:sorted([I)Z
daikon.Quant:eltsGT([II)Z
utilMDE.ArraysMDE:concat([I[I)[I
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
jtb.syntaxtree.NodeSequence:getParent()Ljtb.syntaxtree.Node;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.Quant:noDups([I)Z
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
jtb.syntaxtree.ClassOrInterfaceBody:getParent()Ljtb.syntaxtree.Node;
daikon.Quant:eltsLTE([II)Z
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_135()Z
daikon.Quant:lexLTE([I[I)Z
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.inv.Invariant:justified()Z
jtb.JavaParser:jj_3R_60()Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:hashCode()I
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
utilMDE.UtilMDE:removeWhitespaceBefore(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.PptName:isEnterPoint()Z
daikon.Quant:subsetOf([D[F)Z
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.ProglangType:isFloat()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameters;)V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.Quant:lexLT([I[I)Z
jtb.syntaxtree.ReferenceType:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.Type;)V
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.ExclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_120()Z
daikon.tools.jtb.Ast:create(Ljava.lang.String;[Ljava.lang.Class;[Ljava.lang.Object;Ljava.lang.String;)Ljtb.syntaxtree.Node;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
jtb.syntaxtree.FormalParameter:accept(Ljtb.visitor.Visitor;)V
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:FormalParameter()Ljtb.syntaxtree.FormalParameter;
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
daikon.tools.jtb.Ast:getPackage(Ljtb.syntaxtree.CompilationUnit;)Ljava.lang.String;
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NullLiteral;)V
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.Quant:pairwiseGT([I[I)Z
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;)V
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
jtb.JavaParser:jj_3R_119()Z
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.test.FormatTestCase:passes()Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReturnStatement;)V
jtb.JavaParser:jj_3R_67()Z
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.NodeListOptional:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaCharStream:getBeginLine()I
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
jtb.syntaxtree.Block:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.ProglangType:isPseudoArray()Z
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.ProglangType:dimensions()I
daikon.ValueTuple:isMissingNonsensical(I)Z
jtb.syntaxtree.NodeChoice:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3_25()Z
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
jtb.JavaParser:jj_3R_62()Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.tools.jtb.Ast:getParameters(Ljtb.syntaxtree.MethodDeclaration;)Ljava.util.List;
jtb.syntaxtree.TypeDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameter;)V
jtb.JavaParser:jj_3_28()Z
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AdditiveExpression;)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.ModBitTracker:ModBitTracker(I)V
jtb.syntaxtree.TypeArguments:TypeArguments(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeArgument;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.NodeChoice:getParent()Ljtb.syntaxtree.Node;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.PptSlice1:arity()I
jtb.visitor.TreeDumper:TreeDumper(Ljava.io.Writer;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.ArraysMDE:element_range([I)I
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_50()Z
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.ValueTuple:isMissing(I)Z
utilMDE.ArraysMDE:subarray([JII)[J
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
utilMDE.OrderedPairIterator:hasNext()Z
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:sum([[I)I
jtb.syntaxtree.TypeBound:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.Quant:sameLength([I[I)Z
daikon.ProglangType:isPointerFileRep()Z
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
jtb.syntaxtree.TypeDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
jtb.syntaxtree.NodeOptional:present()Z
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE:pow_fast(II)I
jtb.syntaxtree.NodeOptional:NodeOptional()V
jtb.JavaCharStream:getEndColumn()I
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.Quant:memberOf(F[D)Z
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
daikon.Quant:memberOf(I[I)Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
jtb.syntaxtree.ConditionalExpression:accept(Ljtb.visitor.Visitor;)V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.Quant:eltwiseNotEqual([I)Z
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Block;)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
jtb.syntaxtree.PrimaryPrefix:accept(Ljtb.visitor.Visitor;)V
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.Quant:eltsGteIndex([I)Z
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eltsGTE([II)Z
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.ModBitTracker:num_vars()I
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.Quant:memberOf(J[J)Z
utilMDE.Intern:intern([D)[D
daikon.Quant:eltwiseLTE([I)Z
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.Quant:isReverse([I[I)Z
jtb.JavaCharStream:GetImage()Ljava.lang.String;
jtb.JavaParser:jj_3R_55()Z
daikon.Quant:pairwiseDivides([I[I)Z
daikon.tools.jtb.SimpleTreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.NodeListOptional:present()Z
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArguments;)V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
jtb.JavaParser:jj_3R_164()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.PptSlice2:arity()I
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:enabled()Z
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.filter.ObviousFilter:ObviousFilter()V
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.FuzzyFloat:isSubset([D[D)Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.Debug:logOn()Z
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.Quant:eltwiseLT([I)Z
jtb.syntaxtree.ClassOrInterfaceDeclaration:ClassOrInterfaceDeclaration(Ljtb.syntaxtree.NodeChoice;Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ClassOrInterfaceBody;)V
daikon.Quant:eq(JJ)Z
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.Ppt:Ppt()V
daikon.Quant:lexGTE([I[I)Z
daikon.tools.jtb.PptNameMatcher:typeMatch(Ljava.lang.String;Ljtb.syntaxtree.FormalParameter;)Z
jtb.syntaxtree.InstanceOfExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:memberOf(D[F)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
daikon.PptName:toString()Ljava.lang.String;
daikon.Quant:subsetOf([D[D)Z
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
jtb.visitor.TreeFormatter:TreeFormatter()V
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List; | ASSIGN | 60402 | = null
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.diff.InvMap:toString()Ljava.lang.String;
jtb.syntaxtree.AndExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;II)V
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.Quant:eltsEqual([II)Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.Quant:lexGT([I[I)Z
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
jtb.JavaCharStream:backup(I)V
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.FuzzyFloat:ne(DD)Z
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_57()Z
daikon.inv.Invariants:Invariants()V
daikon.diff.RootNode:RootNode()V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceBody:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_136()Z
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:esc_name()Ljava.lang.String;
jtb.JavaParser:jj_3R_74()Z
jtb.JavaParser:jj_3R_98()Z
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
jtb.JavaParser:jj_3R_61()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Expression;)V
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
jtb.syntaxtree.Literal:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
utilMDE.LimitedSizeIntSet:size()I
daikon.ProglangType:baseIsIntegral()Z
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
utilMDE.Intern:internSubsequence([III)[I
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.diff.InvMap:InvMap()V
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.syntaxtree.NullLiteral:accept(Ljtb.visitor.Visitor;)V
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.Quant:subsetOf([I[I)Z
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.tools.jtb.Ast:getType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclarator;)V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.TypeDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:prob_and(DDD)D
utilMDE.FuzzyFloat:lt(DD)Z
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
jtb.syntaxtree.MultiplicativeExpression:accept(Ljtb.visitor.Visitor;)V
daikon.tools.jtb.Ast:create(Ljava.lang.String;Ljava.lang.String;)Ljtb.syntaxtree.Node;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:ungenerify(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PackageDeclaration;)V
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
jtb.syntaxtree.NodeList:NodeList()V
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.tools.jtb.Ast.1GetParametersVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_99()Z
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.MathMDE:gcd(JJ)J
jtb.JavaParser:jj_2_14(I)Z
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.PackageDeclaration:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
jtb.JavaParser:jj_3_30()Z
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_161()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:union([I[I)[I
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
jtb.JavaParser:jj_2_18(I)Z
jtb.JavaParser:jj_3R_107()Z
utilMDE.MathMDE:pow(II)I
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakIdentityHashMap:indexFor(II)I
jtb.syntaxtree.NodeSequence:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PostfixExpression;)V
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.syntaxtree.UnaryExpression:accept(Ljtb.visitor.Visitor;)V
daikon.tools.jtb.Ast:getClassName(Ljtb.syntaxtree.Node;)Ljava.lang.String;
jtb.JavaParser:jj_3R_169()Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
jtb.visitor.TreeFormatter:add(Ljtb.visitor.FormatCommand;)V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
jtb.syntaxtree.ClassOrInterfaceBody:ClassOrInterfaceBody(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.ProglangType:isArray()Z
daikon.Quant:subsetOf([B[I)Z
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Modifiers;)V
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
daikon.Quant:subsetOf([J[J)Z
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_2_4(I)Z
jtb.JavaParser:jj_3_17()Z
jtb.JavaParser:jj_3_3()Z
jtb.JavaParser:jj_3R_56()Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.PptTopLevel:name()Ljava.lang.String;
jtb.JavaParser:jj_3R_162()Z
jtb.JavaParser:jj_2_3(I)Z
utilMDE.ArraysMDE:min([I)I
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_134()Z
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant:getConfidence()D
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.Quant:eltwiseEqual([I)Z
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.Name:accept(Ljtb.visitor.Visitor;)V
daikon.test.TestQuant:removeAdjacentDups([I)[I
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.tools.jtb.SimpleTreeDumper:SimpleTreeDumper(Ljava.io.Writer;)V
jtb.JavaParser:jj_2_15(I)Z
daikon.inv.Invariant:prob_and(DD)D
jtb.JavaParser:jj_3R_133()Z
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
jtb.JavaParser:jj_3_10()Z
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.tools.jtb.PptNameMatcher:getUngenerifiedType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.CompilationUnit;)V
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_126()Z
jtb.JavaParser:jj_2_10(I)Z
jtb.JavaParser:jj_3_4()Z
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName; | ASSIGN | 63682 | = null
daikon.Quant:pairwiseLTE([I[I)Z
utilMDE.Intern:internSubsequence([JII)[J
daikon.inv.Invariant:logOn()Z
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.Quant:pairwiseEqual([I[I)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.VarInfo:relate_var()V
jtb.syntaxtree.ConditionalOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_2_16(I)Z
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.MathMDE:negate(I)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
jtb.JavaParser:jj_2_36(I)Z
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.Quant:ne(II)Z
daikon.VarInfoName.Simple:isLiteralConstant()Z
jtb.JavaParser:jj_3R_109()Z
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
utilMDE.ArraysMDE:max([I)I
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
jtb.JavaParser:jj_2_35(I)Z
jtb.JavaParser:jj_3_29()Z
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.ProglangType:isIntegral()Z
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalOrExpression;)V
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.inv.unary.UpperBoundCore:computeProbability()D
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
jtb.JavaParser:jj_3R_77()Z
jtb.JavaParser:jj_3R_101()Z
daikon.inv.unary.scalar.NonModulus:updateResults()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.RelationalExpression;)V
daikon.ProglangType:baseIsScalar()Z
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
jtb.JavaCharStream:BeginToken()C
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReferenceType;)V
jtb.JavaParser:jj_3R_75()Z
utilMDE.Intern.SequenceAndIndices:hashCode()I
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.ModBitTracker:num_sets()I
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.PptName:getMethodName()Ljava.lang.String;
jtb.visitor.TreeFormatter:processList(Ljtb.syntaxtree.NodeListInterface;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.EqualityExpression;)V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.PptSlice0:initInvariantsSeen()V
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
jtb.syntaxtree.Type:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ResultType:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_76()Z
daikon.PptName:getFullClassName()Ljava.lang.String;
daikon.tools.jtb.Ast:format(Ljtb.syntaxtree.Node;)Ljava.lang.String;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.test.TestAst.ClassOrInterfaceDeclarationHarvester:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.tools.jtb.Ast:quickFixForInternalComment(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljava.lang.String;Ljava.lang.String;Ljava.util.List;)Z
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.Quant:pairwiseLT([I[I)Z
jtb.JavaParser:jj_3R_148()Z
daikon.inv.unary.scalar.UpperBound:enabled()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.VarInfoName.Elements:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
jtb.JavaParser:jj_3R_210()Z
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.VariableDeclaratorId:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
daikon.Quant:eq(FF)Z
daikon.inv.unary.scalar.Positive:enabled()Z
daikon.Quant:eltsLtIndex([I)Z
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.tools.jtb.Ast:removeWhitespace(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.BlockStatement:accept(Ljtb.visitor.Visitor;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.tools.jtb.Ast:getParent(Ljava.lang.Class;Ljtb.syntaxtree.Node;)Ljtb.syntaxtree.Node;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
jtb.JavaParser:jj_3R_137()Z
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
utilMDE.FuzzyFloat:lte(DD)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ImportDeclaration;)V
daikon.tools.jtb.PptNameMatcher:extractPptArgs(Ldaikon.PptName;)Ljava.util.List;
daikon.inv.unary.scalar.NonModulus:enabled()Z
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.MethodDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeDeclaration;)V
jtb.syntaxtree.ReturnStatement:accept(Ljtb.visitor.Visitor;)V
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
jtb.syntaxtree.VariableDeclaratorId:VariableDeclaratorId(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
jtb.syntaxtree.RelationalExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
jtb.syntaxtree.ShiftExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfo:name()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.Quant:eltsEqualIndex([I)Z
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.inv.Invariant:isWorthPrinting()Z
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_53()Z
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryPrefix;)V
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
jtb.syntaxtree.Statement:accept(Ljtb.visitor.Visitor;)V
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.PptSlice0:arity()I
utilMDE.UtilMDE:split(Ljava.lang.String;Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:jj_3R_108()Z
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
jtb.Token:newToken(I)Ljtb.Token;
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfo:new_ppt()V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeSequence;)V
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
jtb.JavaParser:jj_3_14()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.BlockStatement;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
jtb.JavaParser:jj_3R_149()Z
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Literal;)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
jtb.syntaxtree.ClassOrInterfaceType:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
utilMDE.OrderedPairIterator:setnext2()V
daikon.tools.jtb.Ast:typeMatch(Ljava.lang.String;Ljava.lang.String;)Z
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:sum([I)I
utilMDE.Intern:intern([I)[I
daikon.Quant:eq(II)Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaCharStream:UpdateLineColumn(C)V
utilMDE.ArraysMDE:noDuplicates([D)Z | ASSIGN | 57849 | = null
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Type;)V
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.test.InvariantFormatTester:execute()Z
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.inv.Invariant:prob_or(DD)D
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
utilMDE.FuzzyFloat:eq(DD)Z
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
daikon.Quant:intersection([I[I)[I
daikon.Quant:pairwiseSquare([I[I)Z
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3_22()Z
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.Quant:setEqual([I[I)Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_scan_token(I)Z
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.tools.jtb.Ast:print(Ljtb.syntaxtree.Node;)Ljava.lang.String;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ReferenceType;)V
jtb.syntaxtree.PrimaryExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.CompilationUnit:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalAndExpression;)V
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual; | RETURN | 1527 | return null
jtb.syntaxtree.Modifiers:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalExpression;)V
daikon.tools.jtb.Ast:getName(Ljtb.syntaxtree.MethodDeclaration;)Ljava.lang.String;
daikon.Quant:gte(II)Z
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.UtilMDE:removeWhitespaceAround(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
jtb.JavaParser:jj_2_12(I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MultiplicativeExpression;)V
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.Invariant:logDetail()Z
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.diff.Node:children()Ljava.util.Iterator;
jtb.JavaParser:JavaParser(Ljava.io.Reader;)V
utilMDE.Intern:numIntArrays()I
daikon.Quant:subsetOf([F[F)Z
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.diff.Node:Node()V
jtb.syntaxtree.FormalParameter:FormalParameter(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Type;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.VariableDeclaratorId;)V
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
jtb.JavaParser:jj_3_13()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.ConditionalAndExpression:accept(Ljtb.visitor.Visitor;)V
daikon.PptTopLevel:getInvariants()Ljava.util.List;
jtb.JavaParser:jj_3R_163()Z
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
jtb.syntaxtree.NodeToken:numSpecials()I
jtb.syntaxtree.TypeParameters:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_2_21(I)Z
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
daikon.ModBitTracker:num_samples()I
jtb.visitor.FormatCommand:FormatCommand(II)V
jtb.syntaxtree.InclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
utilMDE.ArraysMDE:sum([[D)D
jtb.visitor.FormatCommand:getCommand()I
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
jtb.syntaxtree.UnaryExpressionNotPlusMinus:accept(Ljtb.visitor.Visitor;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
40 2 374 2 1020 2 518 2 57 2 837 4 1208 2 623 2 324 2 
1117 2 1223 2 926 2 1200 6 185 2 899 2 643 2 392 6 884 2 655 2 147 6 
554 4 330 2 1291 6 903 6 1252 2 357 4 468 2 57 2 276 2 918 6 605 2 720 6 324 2 
879 4 1062 8 1227 2 1233 12 843 2 544 28 134 6 57 6 59 10 741 16 893 10 347 4 149 8 990 2 821 8 1204 6 478 10 675 16 522 10 1123 2 909 16 569 2 119 4 161 8 235 26 240 10 242 4 650 2 1018 2 324 6 
779 2 
911 2 
40 2 498 2 575 2 538 2 1227 2 1030 2 661 2 255 4 701 2 1152 2 399 2 1203 2 946 2 674 2 70 2 156 2 952 2 639 2 640 2 1213 2 1307 2 454 2 39 2 494 2 
1222 4 460 2 1063 2 127 4 1066 6 207 4 886 4 1233 22 388 8 544 51 134 4 57 4 59 15 741 32 893 6 347 2 474 2 594 6 149 6 669 2 1204 4 478 15 670 4 522 15 675 32 1123 2 909 32 954 6 235 47 161 19 718 4 1007 5 917 6 529 2 876 6 960 4 240 15 1104 3 324 4 
263 2 1266 2 70 2 
750 2 729 2 807 10 1234 22 599 2 1125 2 1128 2 115 2 159 2 737 2 869 2 143 2 65 2 395 2 
329 2 1106 2 1233 2 976 2 544 6 59 2 15 2 345 2 1284 2 741 2 893 4 429 2 347 2 1204 2 478 2 27 2 522 2 675 2 909 2 161 2 235 4 606 2 240 2 
879 2 127 4 670 4 478 4 522 4 675 8 1233 4 909 8 544 16 1146 2 954 6 235 12 59 4 741 8 876 6 619 2 240 4 
383 2 1016 2 412 2 
806 2 9 2 1072 2 359 2 1159 2 335 2 601 2 911 2 658 2 1170 2 
166 2 577 2 5 1 247 1 804 2 503 2 1232 2 808 2 93 2 171 2 736 2 811 4 738 6 341 1 1149 1 813 1 177 2 746 1 184 1 1247 1 753 2 1249 5 354 2 1092 1 681 5 1002 2 526 4 761 6 450 2 1267 1 1013 2 1171 2 922 2 1273 2 533 4 607 2 536 2 1176 1 694 2 838 2 539 2 1180 2 770 6 1186 2 1279 4 53 2 1031 2 938 2 57 24 471 1 1034 2 66 2 396 4 1035 2 944 2 780 1 553 2 151 1 1208 2 633 2 314 1 407 1 873 1 956 1 571 3 491 1 410 1 165 2 324 22 
870 2 57 2 
868 2 57 4 974 2 
1226 2 
1 2 4 22 653 28 6 2 656 8 659 2 12 8 13 64 660 2 662 14 664 2 17 140 665 16 18 2 23 2 22 2 26 2 671 4 672 2 673 224 679 198 678 106 31 30 32 2 680 2 33 2 35 2 36 4 684 2 687 6 41 2 691 2 693 2 44 2 695 6 47 2 48 8 50 4 697 6 51 8 56 2 57 10 700 2 58 20 61 30 63 14 706 28 68 160 73 2 714 2 716 2 76 2 78 4 77 4 80 4 722 106 723 4 82 30 84 6 725 30 87 198 726 336 727 2 88 2 89 4 730 26 732 2 734 2 735 2 96 2 100 66 101 2 745 20 102 2 749 2 104 8 103 46 106 2 108 2 110 2 756 2 114 6 758 2 117 2 763 2 123 2 124 2 764 6 125 6 767 132 129 6 128 118 130 4 772 2 131 2 132 4 133 26 140 28 775 4 145 2 148 4 150 4 786 6 787 2 788 26 152 8 154 46 157 8 794 2 158 386 160 26 800 132 164 4 803 228 167 244 169 2 808 2 810 4 173 4 174 4 175 2 814 2 815 12 817 2 820 2 183 46 186 2 822 2 190 16 193 2 825 2 196 12 826 14 197 2 829 6 828 4 199 2 830 4 831 6 203 12 205 6 835 2 208 328 839 4 840 6 844 2 847 20 849 6 215 22 216 198 853 2 220 4 862 8 225 4 866 4 226 12 229 6 227 26 232 4 872 2 875 26 237 4 874 6 877 18 241 14 243 30 244 20 245 2 880 4 246 2 881 2 882 22 885 20 248 2 249 6 887 4 251 112 889 2 253 2 254 2 892 46 894 4 260 2 262 6 900 2 901 2 898 2 265 74 266 32 904 4 906 24 269 6 910 6 271 4 914 2 274 2 915 2 919 244 920 6 921 2 923 6 279 2 924 4 925 2 281 4 285 204 927 4 287 6 930 2 289 4 936 2 292 2 935 10 294 48 295 2 940 2 941 2 942 2 943 4 296 2 945 6 297 2 298 26 301 112 302 30 303 4 950 4 305 48 307 4 951 2 310 2 312 2 311 2 313 4 957 4 321 6 324 10 327 4 328 64 970 2 968 12 331 12 972 8 332 2 973 12 975 4 334 2 336 2 977 12 338 4 339 26 344 112 981 2 346 8 982 4 983 2 985 2 984 2 986 8 987 2 351 2 355 204 356 10 995 84 360 2 1003 6 1006 2 367 6 1008 4 370 4 1012 52 371 2 373 12 376 4 1021 2 380 4 384 2 1025 2 387 2 1032 2 390 2 1033 2 394 12 1038 6 1036 2 1037 2 398 2 400 432 1042 2 401 2 402 112 1045 4 404 26 1047 2 1048 2 1049 2 1051 6 408 68 1055 94 1058 60 409 290 411 2 1059 198 1060 50 1061 2 413 2 414 6 1065 2 1069 2 1070 8 1074 6 417 2 418 2 419 2 421 8 422 4 424 6 1076 60 425 2 1078 2 1082 28 431 4 432 2 1083 6 1085 2 1084 30 435 2 1086 8 436 6 438 2 440 2 1087 2 1088 2 442 2 443 30 1090 8 445 432 1094 2 1095 2 1096 2 1098 28 452 70 451 6 1100 92 457 4 458 4 459 2 461 6 1107 2 464 2 463 8 465 2 1108 2 466 6 1109 6 1110 2 469 6 470 30 1115 8 1116 6 1118 4 477 192 481 2 480 198 483 4 1126 2 1129 4 1130 2 484 2 1132 4 486 2 487 6 490 198 489 2 492 4 493 12 496 10 497 2 1133 6 502 4 501 2 1137 4 1138 6 1140 6 1141 6 1143 2 1145 6 1147 6 512 2 515 4 521 2 1156 2 524 6 525 2 1161 18 1162 2 1163 4 1164 2 1166 6 528 16 1169 6 1172 10 1173 2 535 14 1178 198 1179 2 542 4 541 54 543 2 1183 244 1188 60 1189 6 1190 18 1191 14 1192 2 547 6 548 30 549 26 1196 6 551 22 1201 2 1198 86 1199 2 556 46 557 6 558 2 559 4 561 6 560 2 562 2 565 4 563 2 1207 4 1209 2 570 6 1212 376 1217 24 578 30 1235 2 585 2 584 4 587 182 1239 2 592 6 593 2 595 328 1250 2 598 20 600 2 1255 2 1256 566 1260 4 1259 6 1261 6 1262 4 602 2 1264 6 1265 88 603 198 1268 10 1269 6 1270 2 608 6 1274 8 1275 2 1276 20 1277 6 1278 2 614 192 615 2 1283 26 618 10 620 2 622 2 624 2 1289 6 1290 2 625 2 626 182 1292 60 1295 6 628 16 629 2 631 6 1297 4 1299 98 634 12 635 4 638 20 1300 14 1301 2 1302 2 1304 4 1305 6 645 4 647 4 1308 4 1310 82 1311 6 
666 2 947 1 1205 2 397 2 
1205 2 337 2 
204 2 969 2 1240 2 685 2 70 2 1205 2 242 2 
685 2 1205 2 1253 2 
685 2 851 2 1205 2 
666 2 1023 2 721 2 
685 2 1205 2 
797 2 1023 2 
381 2 1205 2 
666 2 993 2 1023 2 
666 2 1097 2 1271 2 
666 2 989 2 146 2 
666 2 202 2 567 2 
666 2 406 2 29 2 
964 2 1023 2 
689 2 1205 2 
755 2 1271 2 
719 2 146 2 
319 2 202 2 
29 2 386 2 
1023 2 1153 2 
699 2 29 2 
315 2 202 2 
455 2 146 2 
1113 2 1271 2 
666 2 136 2 993 2 1023 2 
666 2 136 2 993 2 121 2 1023 2 
666 2 1023 2 724 2 
666 2 1241 2 1023 2 
967 2 42 2 7 2 467 2 
204 2 500 2 70 2 189 2 
912 2 204 2 969 2 500 2 70 2 189 2 
204 2 685 2 70 2 1205 2 444 2 242 2 
504 2 454 2 
204 2 70 2 472 2 242 2 
499 2 202 2 
709 2 29 2 
144 2 1271 2 
513 2 146 2 
540 2 146 2 29 2 
516 2 146 2 29 2 
801 2 146 2 29 2 
762 2 146 2 29 2 
495 6 204 2 1182 6 46 2 979 2 54 2 742 2 70 2 
1023 2 1043 2 
325 2 768 2 1022 2 1234 6 308 2 933 2 757 2 773 2 682 2 1111 2 937 4 717 2 317 2 391 2 1285 2 589 2 532 2 348 4 
666 2 632 2 
171 2 
965 2 2 2 166 2 503 2 654 2 808 2 809 2 10 2 811 4 14 2 343 2 1149 2 1148 8 177 6 178 2 1154 2 681 2 1002 2 526 4 37 8 366 4 200 2 1171 2 1014 2 533 4 694 2 838 6 1180 2 1186 2 52 2 1031 2 57 26 1034 2 1035 6 1195 2 553 2 555 2 1208 2 1057 2 239 2 577 2 1232 2 93 2 250 2 94 4 738 4 1237 2 1079 2 1247 2 752 2 753 2 1249 2 447 2 761 6 450 2 1273 2 1272 2 607 2 928 2 286 2 770 4 1279 4 938 2 778 2 944 2 299 2 300 2 475 2 630 4 482 4 633 2 637 2 795 2 485 2 642 2 324 26 
965 2 2 2 166 2 804 2 503 2 654 2 1136 2 808 2 811 4 14 2 343 2 1149 2 1148 8 177 6 178 2 1154 2 681 2 1002 2 526 4 37 8 366 4 200 2 1171 2 1014 2 533 4 536 2 694 2 838 6 1180 2 1186 2 52 2 1031 2 57 26 1034 2 1035 6 1195 2 553 2 555 2 1208 2 239 2 577 2 1232 2 93 2 250 2 94 4 738 6 1237 2 1079 2 1244 2 1247 2 752 2 753 2 1249 2 447 2 761 6 450 2 1273 2 1272 2 607 2 928 2 286 2 770 4 1279 4 938 2 778 2 944 2 781 2 299 2 300 2 475 2 630 4 791 2 482 2 633 2 637 2 795 2 485 2 642 2 324 26 
1236 2 
948 2 860 2 
1200 2 377 2 185 2 111 2 655 2 1181 2 306 2 812 4 846 2 1282 2 236 2 1306 2 392 2 62 2 852 2 530 2 372 2 1288 4 
1223 2 577 2 1228 2 503 2 582 2 808 2 655 4 91 2 812 4 811 2 97 4 980 2 176 2 16 2 816 2 99 2 591 2 185 4 439 2 1248 2 111 2 34 2 913 2 760 2 761 4 530 2 372 2 531 2 1171 2 375 2 926 2 377 2 1181 2 841 4 1279 2 774 2 846 2 1282 4 57 12 850 2 392 4 62 2 852 2 147 6 1288 4 944 2 553 2 1200 6 627 2 949 6 863 2 306 2 1296 2 633 2 236 2 163 4 1306 2 1056 4 1218 4 324 6 
577 2 1228 2 503 2 582 2 884 2 808 2 655 4 91 2 812 4 811 2 97 4 980 2 176 2 16 2 816 2 99 2 591 2 185 4 439 2 1248 2 111 2 34 2 913 2 760 2 761 4 530 2 372 2 531 2 1171 2 375 2 926 2 377 2 1181 2 841 4 1279 2 774 2 846 2 1282 4 57 12 850 2 392 6 62 2 852 2 147 6 1288 4 944 2 553 2 1200 4 627 2 949 6 863 2 306 2 1296 2 633 2 236 2 163 4 1306 2 1056 4 1218 4 324 6 
577 2 1228 2 503 2 582 2 808 2 655 4 91 2 812 4 811 2 97 4 980 2 176 2 16 2 816 2 99 2 591 2 185 4 439 2 1248 2 899 2 111 2 34 2 913 2 760 2 761 4 530 2 372 2 531 2 1171 2 375 2 926 2 377 2 1181 2 841 4 1279 2 774 2 846 2 1282 4 57 12 850 2 392 6 62 2 852 2 147 6 1288 4 944 2 553 2 1200 6 627 2 949 6 863 2 306 2 1296 2 633 2 236 2 163 8 1306 2 1056 4 1218 4 324 6 
577 2 1228 2 503 2 582 2 884 2 808 2 655 4 91 2 811 2 812 4 97 4 980 2 176 2 16 2 816 2 99 2 591 2 185 4 439 2 1248 2 899 2 111 2 34 2 913 2 760 2 761 4 530 2 372 2 531 2 1171 2 375 2 926 2 377 2 1181 2 841 8 1279 2 774 2 846 2 1282 4 57 12 850 2 392 8 62 2 852 2 147 8 1288 4 944 2 553 2 1200 6 627 2 949 10 863 2 306 2 1296 2 633 2 236 2 163 8 1306 2 1056 4 1218 4 324 6 
577 2 1228 2 503 2 582 2 808 2 655 4 91 2 812 4 811 2 97 4 980 2 176 2 16 2 816 2 99 2 591 2 185 4 439 2 1248 2 899 2 111 2 34 2 913 2 760 2 761 4 530 2 372 2 531 2 1171 2 375 2 926 2 377 2 1181 2 841 8 1279 2 774 2 846 2 1282 4 57 12 850 2 392 6 62 2 852 2 147 6 1288 4 944 2 553 2 1200 6 627 2 949 10 863 2 306 2 1296 2 633 2 236 2 163 8 1306 2 1056 4 1218 4 324 6 
2 2 326 2 971 2 333 2 655 4 974 6 342 2 16 2 980 2 21 2 24 6 991 10 362 2 681 2 1002 2 34 2 37 4 366 4 369 6 1010 2 372 2 375 2 377 2 694 2 1031 2 57 46 392 8 62 2 1034 2 1035 6 705 1 405 6 1056 4 415 8 91 2 93 2 738 6 97 8 99 2 748 1 752 2 105 2 439 2 753 12 111 2 1091 6 761 6 760 2 120 2 450 2 126 2 770 2 774 2 139 1 147 12 778 2 1119 2 784 6 1122 6 153 2 482 1 795 2 163 2 166 2 804 2 503 2 805 2 506 2 1135 7 808 2 811 4 812 4 1148 4 177 6 816 4 1151 6 185 4 520 4 1158 2 191 6 526 4 530 2 531 2 1171 2 533 4 536 2 838 8 1180 2 1181 2 1186 2 846 2 845 2 850 2 213 1 852 2 217 2 219 2 855 2 553 2 1200 4 222 1 555 2 223 7 857 2 859 6 863 2 1208 2 870 6 234 2 236 2 1218 6 1224 1 577 2 1228 2 1226 6 579 1 1232 2 582 2 884 4 1237 2 890 2 258 2 591 4 1245 2 1246 1 1249 2 1248 2 1251 2 1254 2 907 2 913 2 272 4 278 6 1273 2 607 2 926 4 286 2 931 2 1279 4 1280 2 938 2 1282 4 617 2 1287 6 1288 4 944 2 299 2 300 2 627 2 949 2 1296 2 306 2 633 2 637 4 316 6 1306 2 646 2 648 1 1309 2 962 6 324 24 
2 2 326 2 166 2 971 2 804 2 805 2 503 2 333 2 506 2 974 6 655 4 808 2 812 4 811 4 342 2 1148 8 980 2 16 2 1151 6 816 4 177 6 21 2 24 6 991 10 185 4 520 4 1158 2 191 6 1160 2 362 2 681 2 1002 2 34 2 526 4 37 8 366 4 369 6 1010 2 530 2 531 2 372 2 1171 2 533 4 375 2 536 2 377 2 694 2 838 8 1180 2 1181 2 1186 2 845 2 846 2 1031 2 57 48 850 2 392 8 62 2 852 2 1034 2 217 2 1035 6 219 2 855 2 1200 8 553 2 555 2 857 2 859 6 863 2 1208 2 234 2 405 6 870 6 236 2 1056 4 1218 6 415 8 577 2 1226 6 1228 2 582 2 1232 2 91 2 93 2 94 2 97 8 738 6 1237 4 890 2 99 2 258 2 591 4 1245 2 105 2 752 2 753 12 439 2 1248 2 1249 2 899 4 1251 2 111 2 1091 6 1254 2 907 2 272 4 913 2 760 2 761 6 120 2 450 2 278 6 1273 2 607 2 126 2 926 4 286 2 931 2 770 2 1279 4 774 2 1280 2 938 2 1282 4 617 2 1287 6 147 12 1288 4 778 4 944 2 299 2 1119 2 300 4 784 6 627 2 949 2 1122 6 153 2 306 2 1296 2 633 2 637 4 795 2 316 6 163 6 1306 2 646 2 1309 2 323 2 962 6 324 26 
2 2 326 2 166 2 971 2 804 2 805 2 503 2 333 2 506 2 974 6 655 4 808 2 812 4 811 4 342 2 1148 8 980 2 16 2 1151 6 816 4 177 6 21 2 24 6 991 10 185 4 520 4 1158 2 191 6 1160 2 362 2 681 2 1002 2 34 2 526 4 37 8 366 4 369 6 1010 2 530 2 531 2 372 2 1171 2 533 4 375 2 536 2 377 2 694 2 838 8 1180 2 1181 2 841 4 1186 2 845 2 846 2 1031 2 57 48 850 2 392 8 62 2 852 2 1034 2 217 2 1035 6 219 2 855 2 1200 8 553 2 555 2 857 2 859 6 863 2 1208 2 234 2 405 6 870 6 236 2 1056 4 1218 6 415 8 577 2 1226 6 1228 2 582 2 1232 2 91 2 93 2 94 2 97 8 738 6 1237 4 890 2 99 2 258 2 591 4 1245 2 105 2 752 2 753 12 439 2 1248 2 1249 2 899 4 1251 2 111 2 1091 6 1254 2 907 2 272 4 913 2 760 2 761 6 120 2 450 2 278 6 1273 2 607 2 126 2 926 4 286 2 931 2 770 2 1279 4 774 2 1280 2 938 2 1282 4 617 2 1287 6 147 12 1288 4 778 4 944 2 299 2 1119 2 300 4 784 6 627 2 949 6 1122 6 153 2 306 2 1296 2 633 2 637 4 795 2 316 6 163 6 1306 2 646 2 1309 2 323 2 962 6 324 26 
2 2 326 2 971 2 333 2 655 4 974 12 342 2 980 2 16 2 21 2 24 6 991 8 362 2 681 4 1002 2 34 2 364 2 37 10 366 6 369 12 1010 2 372 2 375 2 377 2 694 2 43 6 1031 2 389 2 57 52 392 10 62 2 703 6 1034 2 1035 8 710 6 1046 6 405 6 1056 4 415 8 91 2 93 2 94 2 738 6 97 8 99 2 752 4 105 2 439 2 753 10 111 2 1091 6 761 6 760 2 120 2 450 2 1099 2 126 2 462 6 766 2 770 4 774 2 776 2 147 16 778 4 1119 2 784 6 1122 6 153 2 1127 6 795 2 799 2 163 6 162 2 166 2 804 2 805 2 503 2 506 2 808 2 1142 6 811 4 812 4 1148 10 177 8 816 4 1151 12 185 4 520 4 1158 2 191 12 1160 2 526 4 530 2 531 2 1171 2 533 4 536 2 1177 2 836 6 838 12 1180 2 1181 2 1186 2 841 4 846 2 845 2 850 2 852 2 217 2 219 2 855 2 1200 10 553 2 555 2 857 2 859 6 863 2 1208 2 234 2 870 12 236 2 1218 6 1223 2 577 2 1228 2 1226 12 1232 2 582 2 884 2 1237 4 890 2 258 2 591 4 1245 2 899 4 1249 4 1248 2 1251 2 1254 2 913 2 272 4 278 6 1273 2 607 2 926 4 286 2 931 2 1279 4 293 6 1280 2 938 2 1282 4 617 2 1287 6 1288 4 944 2 299 4 300 4 627 2 949 6 1296 2 306 2 633 2 637 4 316 6 1306 2 646 2 1309 2 323 2 962 6 324 24 
926 2 375 2 582 2 1181 2 655 4 91 2 841 4 812 2 846 2 97 2 57 4 16 2 392 6 99 2 62 2 147 4 1288 2 1200 6 185 4 439 2 899 2 949 4 863 2 1296 2 34 2 913 2 760 2 163 6 236 2 1306 2 1056 2 530 2 531 2 372 2 1218 2 
2 2 166 2 804 2 503 2 655 4 808 2 171 2 812 2 811 4 16 2 177 6 663 3 179 2 185 4 991 2 681 3 1002 2 526 4 34 2 366 4 530 2 531 2 372 2 1171 2 533 4 536 2 375 2 694 2 838 8 1180 2 1181 2 1186 2 1031 2 846 2 211 2 57 28 850 2 392 6 62 2 1034 2 1035 6 1200 6 553 2 555 2 69 2 863 2 1208 2 236 2 1056 2 1218 2 577 2 582 2 1232 2 91 2 93 2 97 2 738 6 99 2 439 2 753 4 899 2 1249 3 908 2 907 2 913 2 761 6 760 2 450 2 1273 2 607 2 282 2 926 2 770 3 934 2 1279 4 938 2 147 4 1288 2 944 2 949 2 1296 2 633 2 155 2 637 2 795 2 1131 2 163 6 1306 2 324 24 
577 2 1228 2 503 2 582 2 808 2 655 4 91 2 812 4 811 2 97 4 980 2 176 2 16 2 816 2 99 2 591 2 185 4 439 2 1248 2 899 2 111 2 34 2 913 2 760 2 761 4 530 2 372 2 531 2 1171 2 375 2 926 2 377 2 1181 2 841 8 1279 2 774 2 846 2 1282 4 57 12 850 2 392 6 62 2 852 2 147 6 1288 4 944 2 553 2 1200 6 627 2 949 10 863 2 306 2 1296 2 633 2 236 2 163 8 1306 2 1056 4 1218 4 324 6 
1223 2 577 2 1228 2 503 2 582 2 808 2 655 4 91 2 811 2 812 4 97 4 980 2 16 2 816 2 99 2 591 2 185 4 439 2 1248 2 899 2 111 2 28 4 34 2 913 2 1005 2 760 2 761 4 530 2 372 2 1171 2 375 2 926 2 377 2 1181 2 841 8 1279 2 774 2 846 2 1282 4 57 12 850 2 392 6 62 2 852 2 147 8 1288 4 944 2 1039 2 553 2 1200 8 627 2 949 10 863 2 306 2 1296 2 633 2 236 2 163 8 1306 2 1056 4 1218 4 324 6 
198 2 16 2 582 2 
198 2 16 2 582 2 
2 2 166 2 804 2 503 2 333 2 808 2 655 4 811 4 812 2 340 2 1148 4 16 6 816 4 177 2 818 2 182 2 991 2 185 4 520 2 195 2 1002 2 526 4 198 2 37 4 38 2 372 2 1171 2 1017 2 533 4 536 2 377 2 694 2 838 2 1180 2 1186 2 841 4 49 4 1031 2 846 4 848 2 57 24 392 12 1034 2 1035 2 553 2 1200 12 555 2 1208 2 233 2 1056 2 1218 4 85 2 1223 4 577 2 1228 2 1232 2 582 4 884 4 93 2 586 4 738 6 97 4 1237 4 99 2 591 2 437 2 753 4 1248 2 899 4 113 2 272 2 913 2 761 6 450 2 1273 2 607 2 126 2 926 4 286 4 770 2 1279 4 774 2 938 2 1282 4 147 16 1288 2 778 4 944 2 1120 2 300 4 785 2 949 6 304 2 306 2 790 2 482 2 633 2 637 6 642 4 163 6 958 2 1306 2 646 2 962 2 322 2 324 16 
437 2 991 2 753 2 353 2 520 2 948 2 111 2 790 2 362 2 1029 2 234 2 38 2 57 4 98 2 1171 2 962 2 324 2 
2 2 166 2 804 2 503 2 333 2 808 2 655 4 811 4 812 2 1148 4 980 2 16 6 816 4 177 2 818 2 182 2 185 4 195 2 1002 2 526 4 683 2 198 2 37 4 38 2 372 2 1171 2 1017 2 533 4 1019 2 536 2 377 2 694 2 838 2 1180 2 1186 2 841 4 49 4 1031 2 846 4 57 24 392 12 1034 2 1035 2 221 2 553 2 1200 12 555 2 224 2 1208 2 233 2 1056 2 1218 4 85 4 1223 4 577 2 1228 2 1232 2 582 4 884 4 93 2 586 4 97 4 738 6 1237 4 99 2 261 2 591 4 437 2 753 2 1248 2 899 4 113 2 272 2 913 2 761 6 450 2 1273 2 607 2 126 2 926 4 286 4 770 4 1279 4 774 2 938 2 1282 4 147 16 1288 2 778 4 944 2 300 4 785 2 949 6 790 2 306 2 633 2 637 6 642 4 163 6 958 2 1306 2 646 2 962 2 322 2 324 16 
2 2 166 2 804 2 503 2 333 2 808 2 655 4 811 4 812 2 1148 4 980 2 16 6 816 4 177 2 818 2 182 2 991 2 185 4 25 2 520 2 195 2 1002 2 526 4 198 2 37 4 38 2 368 2 372 2 1171 2 1015 2 1017 2 533 4 536 2 377 2 694 2 838 2 1180 2 1186 2 841 4 49 4 1031 2 846 4 57 24 392 12 1034 2 1035 2 553 2 1200 12 555 2 71 2 1208 2 233 2 1056 2 1218 4 85 2 1223 4 577 2 1228 2 1232 2 582 4 884 4 93 2 586 4 738 6 97 4 1237 4 99 2 591 4 437 2 753 4 1248 2 899 4 113 2 272 2 913 2 761 6 450 2 1273 2 607 2 126 2 926 4 286 4 770 2 1279 4 774 2 938 2 1282 4 147 16 621 2 1288 2 778 4 944 2 300 4 785 2 949 6 306 2 790 2 482 1 633 2 637 6 642 4 163 6 958 2 1306 2 646 2 962 2 322 2 324 16 
3 16 2 2 651 2 654 2 8 2 978 2 657 2 343 2 663 2 667 4 988 2 992 2 668 4 669 2 670 4 675 8 996 2 997 2 998 2 361 6 363 4 681 16 1001 2 1002 2 1004 2 364 2 37 25 366 12 1009 3 378 2 694 2 379 2 382 2 1024 2 45 16 1027 2 385 2 1028 1 52 2 1031 6 55 4 389 2 57 54 702 4 60 12 59 4 1034 2 1035 14 67 14 708 2 69 2 72 4 712 2 1044 2 715 2 1050 4 1052 4 1054 2 86 2 1064 2 728 2 416 2 731 1 1073 2 92 4 93 2 95 2 738 20 740 2 1077 12 1080 2 427 2 741 8 744 2 751 4 752 46 753 2 109 2 441 14 1089 2 446 2 1093 2 116 2 761 6 448 2 450 2 122 16 1099 2 456 2 1102 2 1101 2 1103 2 460 4 765 14 1105 2 766 2 770 19 771 2 134 4 135 2 137 2 138 2 1112 2 1114 4 776 2 777 2 473 2 149 6 1119 2 476 2 1121 2 478 4 789 6 479 2 482 1 1124 2 792 2 795 2 1131 2 799 2 161 4 162 2 488 2 166 4 1134 2 804 6 503 2 168 12 505 2 506 2 808 2 1139 2 508 2 1144 2 172 12 811 4 1149 2 1148 24 177 14 178 2 819 2 514 2 181 2 1155 2 188 2 522 4 824 12 523 2 192 2 526 12 1167 2 1168 16 200 2 201 3 1171 2 534 4 533 10 832 2 1174 2 537 2 536 6 206 2 838 28 1180 2 1185 4 1186 2 1187 6 544 16 210 16 211 2 545 2 546 2 217 2 1195 2 854 2 553 2 856 10 861 2 564 2 1206 2 1208 4 228 10 566 1 867 4 568 2 1210 2 871 2 235 12 572 2 238 2 240 4 1219 2 1220 10 1221 4 1225 2 577 2 1229 2 1230 6 580 2 1232 4 1233 6 583 2 250 14 888 2 252 2 1238 3 588 2 891 2 590 12 257 2 259 4 895 2 1245 2 897 2 1247 2 1249 19 596 24 1251 2 1257 3 267 4 1258 2 908 2 909 8 1263 2 273 2 1273 2 1272 2 607 6 609 2 286 4 288 10 932 4 290 10 291 4 1279 4 938 2 939 2 616 3 1281 2 617 4 1286 2 944 2 299 20 1293 2 1298 2 633 2 309 2 636 2 637 2 954 6 641 2 644 2 959 2 318 4 1309 2 961 2 324 44 
1064 2 1134 2 838 2 583 2 8 2 770 2 939 2 1238 2 57 2 177 2 1035 2 854 2 752 6 856 2 1249 2 1121 2 403 2 228 2 681 2 795 2 1093 2 366 2 1220 4 324 2 
1064 2 1134 2 838 2 583 2 8 2 770 2 939 2 1238 2 57 2 177 2 1035 2 854 2 752 6 856 2 1249 2 1121 2 403 2 228 2 681 2 795 2 1093 2 366 2 1220 4 324 2 
1064 2 1134 2 838 2 583 2 8 2 770 2 939 2 1238 2 57 2 177 2 1035 2 854 2 752 6 856 2 1249 2 1121 2 403 2 228 2 681 2 795 2 1093 2 366 2 1220 4 324 2 
833 2 574 2 283 2 966 2 284 2 610 2 838 2 612 4 932 2 770 3 544 5 134 2 509 2 616 3 57 10 59 2 1150 4 741 2 428 4 19 4 704 3 149 4 1249 3 478 2 1121 2 902 2 789 6 522 2 675 2 713 2 267 2 909 2 795 2 365 4 235 4 1052 2 201 3 240 2 83 2 324 4 
574 2 966 2 1233 2 509 2 741 2 1150 4 428 4 19 4 1249 2 902 2 675 2 522 2 267 2 909 2 365 4 201 2 833 2 283 2 284 2 610 2 838 2 612 4 770 2 932 2 544 4 134 2 616 2 57 10 59 2 704 2 149 4 1121 2 478 2 789 6 1123 2 713 2 795 2 1052 2 235 4 161 2 240 2 83 2 324 4 
574 2 966 2 1233 2 509 2 741 2 1150 4 428 4 19 4 1249 2 902 2 675 2 522 2 267 2 909 2 365 4 201 2 833 2 283 2 284 2 610 2 838 2 612 4 770 2 932 2 544 4 134 2 616 2 57 10 59 2 704 2 149 4 1121 2 478 2 789 6 1123 2 713 2 795 2 1052 2 235 4 161 2 240 2 83 2 324 4 
574 2 966 2 1233 2 509 2 741 2 1150 4 428 4 19 4 1249 2 902 2 675 2 522 2 267 2 909 2 365 4 201 2 833 2 283 2 284 2 610 2 838 2 612 4 770 2 932 2 544 4 134 2 616 2 57 10 59 2 704 2 149 4 1121 2 478 2 789 6 1123 2 713 2 795 2 1052 2 235 4 161 2 240 2 83 2 324 4 
574 2 966 2 1233 4 509 2 741 2 1150 4 428 4 19 4 1249 2 902 2 675 2 522 2 267 2 909 2 365 4 201 2 833 2 283 2 284 2 610 2 838 2 612 4 770 2 932 2 544 4 134 2 616 2 57 10 59 2 704 2 149 4 1121 2 478 2 789 6 1123 4 713 2 795 2 1052 2 235 4 161 4 240 2 83 2 324 4 
739 2 511 2 891 2 81 2 878 2 20 2 
426 2 1215 2 994 2 81 2 905 2 1071 2 250 2 
611 1 1067 2 209 2 613 2 698 1 57 10 256 2 212 2 214 2 218 2 350 2 783 2 519 2 711 2 677 1 633 2 270 2 796 2 1303 2 527 2 1053 1 916 1 369 2 686 2 649 2 324 8 
692 2 651 2 1233 5 388 2 544 16 134 2 57 6 59 6 741 6 64 2 552 2 149 4 751 2 670 2 478 6 675 6 522 6 358 2 1123 2 1206 2 30 2 909 6 954 4 235 12 161 2 1007 4 960 2 240 6 573 2 324 6 
652 2 1041 4 612 2 769 2 11 2 793 2 999 2 75 2 230 2 118 2 798 7 365 2 57 1 275 2 1150 2 430 2 433 1 324 1 
652 4 1041 4 612 2 769 2 11 2 793 4 999 2 75 4 230 2 118 2 798 6 365 2 275 2 1150 2 430 2 
652 8 1041 4 612 2 769 2 11 2 793 8 999 6 75 8 230 2 118 2 798 10 365 2 57 1 275 2 1150 2 430 8 433 1 324 1 
652 2 1041 2 612 2 769 2 11 2 793 2 75 2 230 2 118 2 798 2 365 2 275 2 1150 2 
0 2 804 2 170 2 508 2 988 2 187 2 1157 2 997 2 998 2 363 2 1000 2 1004 2 526 12 827 2 1165 2 37 16 533 10 688 2 1174 2 832 4 536 2 378 2 1185 6 1027 2 1028 4 1031 4 55 6 57 34 1193 2 550 2 1197 2 1040 2 858 2 566 2 1214 2 238 2 572 2 883 2 1232 2 733 1 420 4 738 20 423 2 1075 2 1242 2 1081 2 109 2 754 3 112 2 277 2 1102 2 1103 2 280 2 607 4 609 2 929 2 291 6 141 2 142 4 473 2 782 4 476 2 482 2 955 2 644 2 963 2 324 32 
1197 2 688 2 533 4 1174 2 607 2 988 2 536 4 804 4 858 2 1232 2 112 2 482 2 526 4 1031 2 510 2 738 10 37 4 1075 2 57 12 644 2 238 2 324 12 
416 1 804 6 581 2 1232 4 508 2 1144 2 738 18 1075 2 740 1 1243 2 988 2 109 2 824 2 997 2 998 2 363 4 526 10 1004 2 37 4 1168 2 122 2 1102 2 1103 2 688 2 533 8 280 2 1174 2 607 6 832 2 536 6 609 2 378 2 1024 1 1185 4 1027 2 1028 2 291 4 1031 6 55 4 57 28 473 2 1197 2 550 2 476 2 858 2 636 1 566 2 644 2 238 2 572 2 324 26 
0 2 576 2 804 4 90 4 1068 4 1231 2 1232 2 507 2 95 4 510 2 738 40 1075 2 1077 6 1081 2 743 2 896 2 180 2 349 2 434 2 747 2 517 4 988 2 352 2 107 2 823 2 264 2 597 2 676 2 1157 2 112 2 268 2 194 2 759 2 526 18 827 2 37 30 1165 2 449 2 1011 2 604 2 453 2 277 2 688 2 533 18 690 2 607 2 1174 2 536 4 834 2 1175 6 929 2 1184 2 1026 2 842 2 291 2 1031 2 57 42 393 2 1193 2 1194 2 1197 2 1202 2 707 2 1294 2 858 2 482 2 865 2 864 2 74 2 953 2 231 2 1211 2 79 2 644 2 1216 2 238 2 320 2 802 2 324 42 
696 2 

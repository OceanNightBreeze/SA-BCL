#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 148 605 217 713 814 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 415 415 922 509 784 
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.Quant:eltsLteIndex([I)Z
jtb.JavaParser:jj_3R_49()Z
daikon.Quant:subsetOf([F[D)Z
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.diff.InvMap:InvMap()V
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
utilMDE.MathMDE:gcd([I)I
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant:logOn()Z
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.Quant:lexGT([I[I)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_55()Z
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:eltsEqual([II)Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.inv.Invariant:justified()Z
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.Quant:memberOf(F[D)Z
jtb.JavaParser:jj_3R_85()Z
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
jtb.JavaParser:generateParseException()Ljtb.ParseException;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.Quant:eltwiseLT([I)Z
daikon.Debug:logDetail()Z
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptSlice2:arity()I
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
utilMDE.ArraysMDE:sum([[I)I
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfo:new_ppt()V
utilMDE.ArraysMDE:indexOf([II)I
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.diff.Node:Node()V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
jtb.JavaParser:jj_3R_133()Z
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.VarInfoName:hashCode()I
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
utilMDE.MathMDE:modulus([I)[I
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.VarInfoName:name()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_51()Z
daikon.Quant:memberOf(S[S)Z
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.Quant:pairwiseSquare([I[I)Z
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:subsetOf([J[J)Z
daikon.ValueTuple:isMissing(I)Z
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.ValueTuple:isMissingNonsensical(I)Z
jtb.JavaCharStream:BeginToken()C
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.Quant:eltsNotEqual([II)Z
daikon.Quant:subsetOf([D[F)Z
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.Quant:eltwiseEqual([I)Z
daikon.Quant:subsetOf([F[F)Z
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
utilMDE.WeakHasherMap:size()I
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo; | ASSIGN | 22517 | = null
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.inv.ValueSet:ValueSet(I)V
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
jtb.JavaParser:jj_3_16()Z
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Quant:pairwiseLTE([I[I)Z
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
utilMDE.Options.OptionInfo:argument_required()Z
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.PptName:isCombinedExitPoint()Z
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict([I)[I
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
utilMDE.FuzzyFloat:indexOf([D[D)I
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
utilMDE.ArraysMDE:min([I)I
utilMDE.ArraysMDE:element_range([I)I
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.VarInfoName.ElementsFinder:inPre()Z
utilMDE.ArraysMDE:fn_identity(I)[I
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
utilMDE.Intern:intern([I)[I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase; | ASSIGN | 14799 | = null
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:noDups([I)Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.UpperBound:enabled()Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.ProglangType:isPseudoArray()Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.Quant:eltwiseGT([I)Z
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaCharStream:ReadByte()C
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
jtb.JavaParser:jj_3R_53()Z
daikon.Quant:eq(FF)Z
jtb.JavaParser:jj_3R_48()Z
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:mod_positive(II)I
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ProglangType:baseIsScalar()Z
jtb.JavaCharStream:getEndLine()I
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.ModBitTracker:num_samples()I
jtb.Token:newToken(I)Ljtb.Token;
utilMDE.ArraysMDE:max([I)I
daikon.Quant:eltsLtIndex([I)Z
daikon.Ppt:Ppt()V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.Assert:assertTrue(Z)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.UpperBoundCore:calc_modulus()J
jtb.JavaParser:jj_3R_162()Z
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.Quant:subsetOf([S[S)Z
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.Quant:eq(JJ)Z
daikon.Quant:slice([III)[I
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
utilMDE.ArraysMDE:sorted([I)Z
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.Quant:setDiff([I[I)[I
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
utilMDE.FuzzyFloat:isSubset([D[D)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.Quant:pairwiseGTE([I[I)Z
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.Quant:eltwiseLTE([I)Z
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_134()Z
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.Quant:eltsGtIndex([I)Z
daikon.PptTopLevel.CondIterator:hasNext()Z
jtb.JavaCharStream:getBeginLine()I
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
utilMDE.MathMDE:missing_numbers([I)[I
daikon.Quant:eltwiseNotEqual([I)Z
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
jtb.JavaCharStream:backup(I)V
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.Quant:eltwiseGTE([I)Z
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I | CONDITION | 18003 | if (x) -> if (!x)
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.Quant:lexLTE([I[I)Z
daikon.Quant:intersection([I[I)[I
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:sum([D)D
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.Quant:isReverse([I[I)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.inv.unary.scalar.NonModulus:enabled()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName; | ASSIGN | 4561 | = null
daikon.Quant:gt(II)Z
jtb.JavaParser:jj_3_1()Z
daikon.Quant:eltsLT([II)Z
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.Quant:lexEqual([I[I)Z
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
jtb.JavaCharStream:readChar()C
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.Quant:gte(II)Z
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.ArraysMDE:subarray([JII)[J
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.inv.Invariants:Invariants()V
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
utilMDE.MathMDE:negate(I)I
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.Quant:memberOf(J[J)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:concat([I[I)[I
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Invariant:isWorthPrinting()Z
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:lexNotEqual([I[I)Z
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_57()Z
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:relate_var()V
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.diff.RootNode:RootNode()V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
utilMDE.FuzzyFloat:ne(DD)Z
daikon.ProglangType:baseIsIntegral()Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.Quant:lt(II)Z
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
utilMDE.MathMDE:gcd_differences([I)I
utilMDE.LimitedSizeIntSet:add(I)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
utilMDE.FuzzyFloat:lt(DD)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:subarray([III)[I
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
jtb.JavaParser:jj_ntk()I
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Invariant:logDetail()Z
daikon.ValueTuple:size()I
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
utilMDE.WeakIdentityHashMap:indexFor(II)I
jtb.JavaParser:jj_2_16(I)Z
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.Quant:eltsGT([II)Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
utilMDE.WeakHasherMap:processQueue()V
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
utilMDE.MathMDE:pow_fast(II)I
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.Quant:lexLT([I[I)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
jtb.JavaParser:jj_2_1(I)Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:gt(DD)Z
jtb.JavaParser:jj_3R_135()Z
daikon.Quant:lte(II)Z
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
jtb.JavaParser:jj_3R_50()Z
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.ProglangType:isScalar()Z
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:ne(II)Z
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.inv.Invariant:prob_and(DD)D
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.PptSlice0:arity()I
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.ModBitTracker:num_sets()I
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.Invariant:prob_and(DDD)D
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaCharStream:getEndColumn()I
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.Quant:setEqual([I[I)Z
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.ModBitTracker:split(I)I
daikon.Quant:pairwiseGT([I[I)Z
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
utilMDE.MathMDE:sign(I)I
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
utilMDE.ArraysMDE:sum([I)I
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ProglangType:dimensions()I
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.FuzzyFloat:lte(DD)Z
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Intern:internSubsequence([III)[I
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.Quant:lexGTE([I[I)Z
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.ProglangType:isIntegral()Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
jtb.JavaCharStream:FillBuff()V
daikon.Quant:subsetOf([I[I)Z
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
jtb.JavaParser:jj_3R_161()Z
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.Debug:logOn()Z
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
jtb.JavaParser:jj_3R_47()Z
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:eltsLTE([II)Z
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
utilMDE.Intern:intern([J)[J
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
daikon.Quant:eq(II)Z
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.Quant:eltsEqualIndex([I)Z
utilMDE.OrderedPairIterator:setnext2()V
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:eq(DD)Z
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.PptSlice0:initInvariantsSeen()V
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I | CONSTANT | 65761 | 0 -> 1
daikon.ModBitTracker:num_vars()I
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.Quant:eltsGteIndex([I)Z
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
utilMDE.Intern:internSubsequence([JII)[J
utilMDE.ArraysMDE:concat([I[I)[I
jtb.JavaParser:jj_3R_54()Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.Quant:union([I[I)[I
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.inv.Invariant:format()Ljava.lang.String;
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_58()Z
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern:intern([D)[D
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.Quant:memberOf(D[F)Z
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_scan_token(I)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
utilMDE.FuzzyFloat:gte(DD)Z
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
jtb.ParseException:getMessage()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.inv.filter.InvariantFilter:InvariantFilter()V
utilMDE.ArraysMDE:min_max([I)[I
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ValueTuple:tuplemodHasModified(I)Z
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:subsetOf([D[D)Z
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.VarInfoName:isLiteralConstant()Z
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.inv.unary.UpperBoundCore:calc_range()J
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.test.InvariantFormatTester:execute()Z
daikon.ModBitTracker:ModBitTracker(I)V
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.test.TestQuant:removeAdjacentDups([I)[I
jtb.JavaCharStream:getBeginColumn()I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext1()V
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:eq(DD)Z
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.Quant:memberOf(F[F)Z
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.Quant:sameLength([I[I)Z
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.ProglangType:isArray()Z
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.PptSlice1:arity()I
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:pairwiseEqual([I[I)Z
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
jtb.JavaParser:jj_3R_56()Z
jtb.JavaParser:jj_3R_163()Z
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Invariant:prob_or(DD)D
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.PptName:isEnterPoint()Z
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ValueTuple:isMissingFlow(I)Z
utilMDE.ArraysMDE:sum([[D)D
utilMDE.MathMDE:gcd(JJ)J
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.Quant:eltsGTE([II)Z
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
utilMDE.MathMDE:pow(II)I
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
utilMDE.MathMDE:gcd(II)I
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
jtb.JavaParser:jj_3R_52()Z
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.Quant:pairwiseDivides([I[I)Z
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
utilMDE.LimitedSizeIntSet:size()I
daikon.PptSlice1:num_samples()I
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.inv.Invariant:getConfidence()D
utilMDE.OrderedPairIterator:hasNext()Z
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:subsetOf([B[I)Z
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
jtb.ParseException:ParseException(Ljava.lang.String;)V
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.Quant:memberOf(I[I)Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfo:name()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
utilMDE.Intern:numIntArrays()I
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.Quant:pairwiseLT([I[I)Z
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
770 2 925 4 202 2 37 2 427 2 714 2 276 2 529 2 63 2 
106 2 932 2 13 2 823 6 857 2 221 2 772 6 163 2 523 2 88 2 718 6 
432 2 211 4 700 4 254 6 276 2 353 2 909 2 714 2 567 6 680 6 547 6 954 2 549 2 
533 4 701 6 189 2 739 2 670 2 776 4 775 4 442 2 5 2 137 8 204 8 166 26 449 8 714 6 343 12 581 4 792 29 879 2 383 2 795 16 86 16 276 6 215 6 689 10 490 8 281 16 858 10 834 10 568 10 366 10 
527 4 456 6 
765 2 
809 2 196 2 197 2 134 2 5 2 373 2 7 2 448 2 622 2 271 2 210 2 79 2 83 4 520 2 147 2 319 2 320 2 395 2 767 2 101 2 37 2 403 2 891 2 335 2 338 2 596 2 168 2 903 2 410 2 653 2 959 2 115 2 798 4 121 2 496 2 731 2 301 4 
398 4 608 6 701 4 945 2 669 2 194 2 105 6 372 6 776 2 135 4 643 6 228 2 166 48 449 6 678 4 714 4 817 6 343 22 144 4 821 8 962 2 792 54 879 2 795 32 86 32 276 4 906 2 635 6 215 4 689 16 490 18 91 4 281 32 858 16 126 4 834 6 568 16 766 4 366 16 
141 2 720 2 395 2 
327 2 115 2 225 2 193 2 39 2 709 2 512 10 578 2 833 22 785 2 180 2 283 2 531 2 665 2 
133 2 776 2 166 4 343 2 291 2 630 2 552 2 792 6 795 2 420 2 86 2 358 2 215 2 689 2 490 2 972 2 281 2 858 2 298 2 834 4 568 2 366 2 100 2 
398 4 792 16 795 8 86 8 372 6 775 2 643 6 689 4 91 4 281 8 166 12 545 2 858 4 900 2 568 4 343 4 366 4 
328 4 186 2 471 2 160 2 866 10 943 62 197 4 261 14 615 4 644 2 9 2 11 4 952 4 379 2 899 2 649 2 478 4 311 2 720 6 141 2 414 4 313 4 632 2 457 2 295 2 351 4 905 10 796 2 798 4 361 2 422 4 759 2 528 4 282 2 395 8 99 2 587 4 101 2 913 2 572 2 
66 2 164 2 744 2 44 2 55 2 558 2 826 2 493 2 765 2 570 2 
607 2 502 2 131 8 503 2 611 2 505 3 506 6 257 1 259 3 871 6 508 2 613 2 510 2 618 2 262 2 513 32 746 1 263 16 266 2 747 2 515 4 876 2 627 2 273 6 381 5 749 2 145 1 146 1 754 2 880 2 276 32 525 2 524 3 526 2 885 24 393 2 27 1 760 2 28 4 394 2 150 2 532 2 158 2 401 2 38 2 773 2 774 1 895 2 779 2 407 3 647 2 169 2 904 24 49 6 788 1 293 2 791 2 415 2 551 2 793 2 656 2 56 3 421 2 559 2 799 2 563 1 564 2 427 2 910 2 181 2 662 2 663 32 914 2 434 2 918 4 435 2 668 2 438 2 67 1 195 2 921 2 672 2 444 4 923 2 446 2 307 2 813 16 70 2 200 3 308 2 577 1 676 3 815 2 679 16 208 2 310 8 681 1 76 2 82 2 934 2 458 3 315 4 684 2 318 2 824 2 827 1 829 1 464 2 585 3 830 2 92 4 693 2 321 2 98 2 697 3 322 2 222 2 223 3 698 2 835 2 329 8 590 2 838 2 227 2 334 2 949 3 708 1 594 2 230 2 232 2 233 2 110 2 714 34 716 2 956 1 957 1 850 16 723 2 724 2 963 12 599 2 852 2 352 2 855 4 360 2 604 4 978 2 
255 2 714 2 
606 2 714 4 624 2 
881 2 
367 14 251 2 0 2 3 2 610 10 870 8 741 2 8 18 10 8 743 10 875 50 264 14 15 6 625 6 270 14 877 2 878 2 516 4 519 2 755 2 391 18 25 2 392 4 30 2 761 8 152 4 762 2 636 14 763 4 530 2 535 6 161 2 543 2 289 2 43 2 290 2 783 2 782 32 408 14 789 2 548 4 652 8 53 2 174 4 417 2 907 6 561 2 908 2 801 2 565 2 428 8 183 10 429 50 187 12 188 8 303 2 576 2 579 2 819 14 820 10 80 2 78 2 212 2 213 14 84 14 685 2 936 2 89 2 216 2 584 2 691 2 467 2 695 2 325 10 836 14 944 2 705 2 947 6 340 12 229 2 108 2 342 2 846 2 237 2 347 14 719 2 851 2 725 4 117 14 356 2 355 4 728 2 246 50 975 2 249 2 498 2 
592 2 238 1 712 2 844 2 
712 2 911 2 
533 2 961 2 960 2 400 2 395 2 712 2 818 2 
960 2 639 2 712 2 
960 2 712 2 686 2 
603 2 844 2 409 2 
960 2 712 2 
603 2 32 2 
122 2 712 2 
603 2 844 2 859 2 
974 2 844 2 440 2 
416 2 844 2 154 2 
580 2 844 2 642 2 
337 2 518 2 844 2 
603 2 128 2 
362 2 712 2 
57 2 440 2 
339 2 416 2 
580 2 239 2 
518 2 380 2 
603 2 717 2 
518 2 736 2 
580 2 345 2 
2 2 416 2 
272 2 440 2 
603 2 844 2 426 2 859 2 
603 2 844 2 426 2 495 2 859 2 
603 2 919 2 844 2 
111 2 603 2 844 2 
481 2 159 2 600 2 977 2 
129 2 113 4 722 4 296 2 771 2 4 2 305 2 42 2 123 2 463 2 842 2 109 2 804 2 833 6 205 2 939 2 35 2 250 2 
475 2 844 2 
469 2 961 2 395 2 740 2 
469 2 758 2 961 2 395 2 740 2 818 2 
324 2 533 2 961 2 960 2 395 2 712 2 
147 2 220 2 
306 2 533 2 961 2 395 2 
580 2 562 2 
518 2 894 2 
418 2 440 2 
699 2 416 2 
416 2 518 2 574 2 
416 2 399 2 518 2 
26 2 416 2 518 2 
416 2 518 2 677 2 
132 2 304 2 786 6 961 2 52 2 935 6 395 2 127 2 
603 2 330 2 
914 2 
252 2 607 2 502 2 503 2 611 2 506 2 871 2 510 2 618 2 262 2 377 2 513 6 515 2 876 2 273 6 146 2 276 26 386 2 760 2 150 2 637 2 887 2 773 2 893 2 779 2 49 4 790 2 415 2 793 2 564 2 805 2 425 2 427 2 910 2 663 4 434 2 918 4 668 2 67 2 923 2 444 4 672 2 307 2 674 4 675 4 815 2 679 6 208 2 310 2 75 2 82 2 315 2 937 2 92 4 693 2 321 4 222 2 590 2 103 2 227 2 230 2 232 2 714 26 235 2 112 2 723 2 599 6 963 8 724 2 486 2 854 2 855 4 360 2 604 2 
252 2 607 2 502 2 503 2 611 2 506 2 871 2 510 2 618 2 262 2 513 6 515 2 876 2 273 6 146 2 276 26 526 1 386 2 760 2 150 2 887 2 773 2 893 2 779 2 49 5 790 2 415 2 793 2 564 2 805 2 425 2 427 2 910 2 663 4 184 2 434 2 918 4 668 2 67 2 923 2 444 4 672 2 307 2 308 1 674 4 675 4 815 2 309 2 679 6 208 2 310 2 75 2 82 2 315 2 461 2 937 2 92 4 693 2 321 4 222 2 590 2 103 2 227 2 230 2 232 2 714 26 112 2 723 2 599 6 963 8 724 2 486 2 854 2 855 4 360 2 604 2 978 2 
286 2 
682 2 555 2 
607 2 1 4 863 2 737 2 503 2 370 2 611 2 507 4 612 2 671 2 6 2 443 2 444 2 617 2 928 2 815 2 453 2 932 4 273 4 823 6 751 10 85 4 274 2 523 4 276 6 87 2 279 4 149 4 94 2 93 2 221 2 886 2 888 4 773 2 163 2 772 6 227 2 840 2 777 8 645 2 897 2 648 2 167 2 232 2 714 12 902 2 344 2 718 6 51 2 721 2 655 2 243 2 556 2 359 2 657 8 967 2 855 2 492 2 247 2 664 2 
607 2 1 4 863 2 737 2 503 2 370 2 611 2 507 4 612 2 671 2 444 2 6 2 443 2 617 2 928 2 815 2 453 2 932 4 273 4 751 10 823 6 85 4 274 2 276 6 523 4 87 2 279 4 828 2 149 4 94 2 93 2 221 2 888 4 773 2 163 2 772 8 227 2 840 2 777 8 645 2 897 2 648 2 232 2 714 12 902 2 344 2 346 4 718 8 51 2 721 2 655 2 243 2 556 2 359 2 657 8 967 2 855 2 120 2 492 2 857 2 247 2 664 2 
932 2 51 2 1 2 863 2 655 2 243 2 823 2 370 2 85 4 523 2 87 2 507 4 359 2 6 2 443 2 492 2 664 2 718 2 
607 2 1 4 863 2 737 2 503 2 370 2 611 2 507 4 612 2 671 2 6 2 443 2 444 2 617 2 928 2 815 2 453 2 932 4 273 4 823 4 751 6 85 4 274 2 523 4 276 6 87 2 279 4 149 4 94 2 93 2 221 2 886 2 888 4 773 2 772 6 227 2 840 2 777 4 645 2 897 2 648 2 167 2 232 2 714 12 902 2 344 2 718 6 51 2 721 2 655 2 243 2 556 2 359 2 657 4 967 2 855 2 492 2 857 2 247 2 664 2 
607 2 1 4 863 2 737 2 503 2 370 2 611 2 507 4 612 2 671 2 6 2 443 2 444 2 617 2 928 2 13 2 815 2 453 2 932 4 273 4 823 6 751 6 85 4 274 2 523 4 276 6 87 2 279 4 149 4 94 2 93 2 221 2 886 2 888 4 773 2 772 6 227 2 840 2 777 4 645 2 897 2 648 2 167 2 232 2 714 12 902 2 344 2 718 4 51 2 721 2 655 2 243 2 556 2 359 2 657 4 967 2 855 2 492 2 247 2 664 2 
607 2 1 4 863 2 737 2 503 2 370 2 611 2 507 4 612 2 671 2 6 2 443 2 444 2 617 2 928 2 815 2 453 2 932 4 273 4 823 6 751 6 85 4 274 2 523 4 276 6 87 2 279 4 149 4 94 2 93 2 221 2 886 2 888 4 773 2 163 2 772 6 227 2 840 2 777 4 645 2 897 2 648 2 167 2 232 2 714 12 902 2 344 2 718 6 51 2 721 2 655 2 243 2 556 2 359 2 657 8 967 2 855 2 492 2 247 2 664 2 
607 2 1 4 863 2 737 2 503 2 370 2 611 2 507 4 612 2 671 2 444 2 6 2 443 2 617 2 928 2 13 2 815 2 453 2 932 4 273 4 823 8 751 10 85 4 274 2 523 4 276 6 87 2 279 4 149 4 94 2 93 2 221 2 886 2 888 4 773 2 163 2 772 8 227 2 840 2 777 8 645 2 897 2 648 2 167 2 232 2 714 12 902 2 344 2 718 6 51 2 721 2 655 2 243 2 556 2 359 2 657 8 967 2 855 2 492 2 247 2 664 2 
607 2 1 4 863 2 737 2 503 2 370 2 611 2 507 4 612 2 671 2 6 2 443 2 444 2 617 2 928 2 815 2 453 2 932 4 273 4 823 6 751 10 85 4 274 2 523 4 276 6 87 2 279 4 149 4 94 2 93 2 221 2 886 2 888 4 773 2 163 2 772 6 227 2 840 2 777 8 645 2 897 2 648 2 167 2 232 2 714 12 902 2 344 2 718 6 51 2 721 2 655 2 243 2 556 2 359 2 657 8 967 2 855 2 492 2 247 2 664 2 
499 2 1 4 737 2 253 6 502 2 738 2 503 2 255 6 506 2 507 4 742 2 510 2 6 2 262 2 13 4 513 8 515 2 16 6 273 6 751 2 274 2 522 2 276 24 523 4 526 2 22 4 21 6 279 6 24 10 760 2 34 4 539 2 773 2 772 12 40 2 779 2 49 6 51 2 793 2 556 2 58 2 797 7 297 2 60 2 300 7 308 2 815 2 310 2 82 2 823 8 315 2 85 4 317 2 87 2 92 4 831 2 586 1 93 2 94 2 590 2 331 2 840 4 845 2 344 2 599 6 854 4 359 2 855 4 119 2 601 8 604 2 364 2 365 2 606 6 607 2 863 2 864 6 865 1 611 2 370 2 612 2 871 2 617 2 378 2 628 2 386 2 881 6 149 8 150 2 886 2 888 4 156 6 889 2 406 6 645 2 897 2 648 2 902 2 415 2 172 6 655 2 657 2 427 2 910 2 663 2 664 2 431 1 918 4 433 1 441 2 671 2 444 4 923 2 443 2 199 2 201 1 674 4 926 6 928 4 929 6 927 2 450 2 931 6 679 6 453 2 932 4 462 2 688 6 687 1 937 2 690 6 693 12 221 4 222 2 941 6 703 2 472 2 227 2 230 2 232 2 714 46 718 4 240 2 721 2 723 2 483 2 243 2 963 4 484 2 486 2 967 2 726 1 729 1 973 2 491 2 492 2 494 2 247 2 735 1 
499 2 606 6 607 2 1 4 863 2 864 6 737 2 253 6 738 2 502 2 503 2 255 6 370 2 611 2 506 2 507 4 871 2 612 2 742 2 6 2 510 2 617 2 262 2 513 8 378 2 515 4 628 2 16 6 273 6 751 2 522 2 274 2 523 4 276 26 881 6 21 6 386 2 22 4 526 2 279 6 24 10 760 2 149 8 150 2 34 4 886 2 888 4 156 6 889 2 539 2 772 12 163 4 773 2 406 6 40 2 779 2 645 2 897 2 648 2 902 2 49 6 51 2 415 2 172 6 655 2 793 2 556 2 58 2 657 6 297 2 60 2 427 2 910 2 663 2 664 2 918 4 441 2 671 2 443 2 923 2 444 4 199 2 924 2 308 2 926 6 674 4 927 2 929 6 928 4 931 6 450 2 815 2 679 6 310 2 453 2 932 4 81 2 82 2 823 8 315 4 85 4 317 2 87 2 688 6 462 2 937 2 690 6 831 2 693 12 92 4 94 2 221 4 93 2 321 2 222 2 941 6 703 2 590 2 331 2 472 2 227 2 840 4 230 2 232 2 845 2 714 48 344 2 718 8 240 2 721 2 483 2 723 2 484 2 963 8 243 2 599 6 486 2 854 4 359 2 967 2 119 2 855 4 601 8 491 2 973 2 492 2 364 2 604 4 494 2 247 2 365 2 
499 2 606 6 607 2 1 4 863 2 864 6 737 2 253 6 738 2 502 2 503 2 255 6 370 2 611 2 506 2 507 4 871 2 612 2 742 2 6 2 510 2 617 2 262 2 513 8 378 2 515 4 628 2 16 6 273 6 751 6 522 2 274 2 523 4 276 26 881 6 21 6 386 2 22 4 526 2 279 6 24 10 760 2 149 8 150 2 34 4 886 2 888 4 156 6 889 2 539 2 772 12 163 4 773 2 406 6 40 2 777 4 779 2 645 2 897 2 648 2 902 2 49 6 51 2 415 2 172 6 655 2 793 2 556 2 58 2 657 6 297 2 60 2 427 2 910 2 663 2 664 2 918 4 441 2 671 2 443 2 923 2 444 4 199 2 924 2 308 2 926 6 674 4 927 2 929 6 928 4 931 6 450 2 815 2 679 6 310 2 453 2 932 4 81 2 82 2 823 8 315 4 85 4 317 2 87 2 688 6 462 2 937 2 690 6 831 2 693 12 92 4 94 2 221 4 93 2 321 2 222 2 941 6 703 2 590 2 331 2 472 2 227 2 840 4 230 2 232 2 845 2 714 48 344 2 718 8 240 2 721 2 483 2 723 2 484 2 599 6 963 8 243 2 486 2 854 4 359 2 967 2 119 2 855 4 601 8 491 2 973 2 492 2 364 2 604 4 494 2 247 2 365 2 
499 2 1 4 737 2 253 6 502 2 738 2 503 2 255 12 506 4 507 4 742 2 510 2 6 2 262 2 12 2 13 2 513 12 515 4 16 6 273 6 751 6 274 2 522 2 276 24 523 4 526 2 22 4 21 6 279 6 24 8 760 2 34 4 539 2 773 2 772 16 777 4 40 2 288 6 779 2 49 6 51 2 554 2 793 2 556 2 58 2 297 2 60 2 808 6 308 2 815 2 310 4 73 6 81 2 82 2 823 10 315 4 85 4 317 2 87 2 92 4 831 2 94 2 93 2 321 2 590 2 331 2 840 4 845 2 344 2 599 8 354 6 854 4 359 2 855 4 119 2 601 8 604 4 364 2 857 2 365 2 606 12 607 2 863 2 864 6 369 6 611 2 370 2 612 2 871 4 617 2 378 2 628 2 386 2 881 12 149 8 150 2 886 2 888 4 396 6 156 6 889 2 163 4 406 6 645 2 897 2 648 2 902 2 415 2 172 6 655 2 657 6 659 2 427 2 910 2 663 4 664 2 666 2 918 4 920 2 439 6 441 2 671 2 444 4 923 2 443 2 199 2 924 2 674 6 926 12 927 2 930 2 928 4 929 6 450 2 931 6 679 8 453 2 932 4 462 2 688 12 937 4 690 6 693 10 221 4 222 2 941 12 224 2 703 2 472 2 227 2 230 2 232 2 714 52 718 10 240 2 721 2 241 6 723 2 243 2 963 10 484 2 486 2 964 6 967 2 245 2 973 2 491 2 492 2 494 2 247 2 
888 2 863 2 737 2 772 4 163 2 507 2 612 2 777 4 671 2 443 2 6 2 617 2 897 2 648 2 714 4 344 2 718 6 453 2 51 2 932 4 751 4 243 2 823 6 85 2 274 2 523 4 87 2 279 2 967 2 657 6 149 2 492 2 221 2 93 2 886 2 
607 2 863 2 737 2 502 2 503 2 611 2 506 3 507 2 868 2 871 3 612 2 510 2 6 2 617 2 262 2 513 8 273 6 751 2 274 2 523 4 276 24 526 2 386 2 279 2 24 2 149 2 150 2 886 2 888 2 401 2 772 4 163 2 773 2 779 2 897 2 648 2 49 6 413 2 51 2 415 2 793 2 657 6 427 2 910 2 663 3 914 2 915 2 918 4 671 2 444 4 923 2 443 2 70 2 308 2 674 4 447 3 815 2 679 6 453 2 932 4 82 2 823 6 85 2 87 2 92 4 693 4 221 2 93 2 222 2 590 2 227 2 230 2 232 2 714 28 344 2 718 6 723 2 483 2 599 6 243 2 852 2 486 2 965 2 854 2 967 2 855 4 492 2 247 2 125 2 
737 2 694 2 274 2 
737 2 694 2 274 2 
252 4 607 2 1 4 863 2 501 4 737 4 502 2 503 2 370 2 611 2 507 2 510 2 6 4 872 2 513 2 13 4 514 2 623 2 515 4 273 6 17 2 751 6 633 2 274 6 276 16 523 4 22 2 526 2 386 2 279 4 757 2 24 2 760 4 149 4 150 2 34 2 153 2 888 2 769 2 773 2 163 4 772 16 405 2 40 2 777 4 779 2 648 2 902 2 49 6 51 2 415 2 793 2 556 2 657 6 661 2 427 2 910 2 663 2 664 2 918 4 441 2 923 2 444 4 308 2 928 2 931 2 815 2 679 2 453 2 932 4 82 2 823 12 315 4 85 2 460 2 214 4 92 4 693 4 694 2 221 4 938 2 222 2 590 2 704 2 227 2 840 4 474 2 841 2 230 2 232 2 714 24 718 12 955 2 721 2 723 2 349 2 963 4 599 2 486 2 854 6 855 4 604 4 857 4 365 2 
171 2 638 2 555 2 611 2 460 2 867 2 317 2 276 2 359 2 474 2 24 2 693 2 931 2 34 2 938 2 60 2 714 4 
252 4 607 2 1 4 863 2 501 4 737 4 502 2 503 2 370 2 611 2 507 2 510 2 6 4 872 2 513 2 13 4 515 4 273 6 17 2 751 6 633 2 274 6 276 16 523 4 22 2 526 2 386 2 756 2 279 4 760 4 149 4 150 2 888 2 769 2 773 2 163 4 772 16 405 2 40 2 777 4 779 2 648 2 902 2 49 6 51 2 415 2 793 2 556 2 657 6 661 2 427 2 910 2 663 4 664 2 918 4 441 2 923 2 444 4 308 2 928 4 931 2 815 2 207 2 679 2 453 2 932 4 82 2 823 12 315 4 85 2 460 2 214 4 92 4 693 2 694 2 94 2 221 4 938 2 222 2 590 2 704 2 227 2 840 4 474 2 841 2 230 2 232 2 714 24 847 2 718 12 955 2 958 2 721 2 723 2 349 4 963 4 599 2 486 2 854 6 855 4 489 2 604 4 857 4 365 2 
252 4 607 2 1 4 863 2 501 4 737 4 502 2 503 2 370 2 611 2 504 2 507 2 510 2 6 4 872 2 513 2 13 4 515 4 273 6 17 2 751 6 633 2 274 6 276 16 523 4 22 2 526 2 386 2 279 4 24 2 760 4 149 4 150 2 34 2 888 2 769 2 285 2 773 2 163 4 772 16 405 2 40 2 287 2 777 4 779 2 165 2 648 2 902 2 49 6 51 2 415 2 793 2 556 2 657 6 661 2 427 2 910 2 663 2 664 2 918 4 441 2 923 2 444 4 308 2 928 4 931 2 815 2 679 2 453 2 932 4 82 2 823 12 315 4 85 2 460 2 214 4 218 2 92 4 693 4 694 2 94 2 221 4 938 2 222 2 590 2 704 2 227 2 840 4 474 2 841 2 230 2 232 2 714 24 718 12 955 2 721 2 723 2 349 2 963 4 599 2 486 2 854 6 855 4 604 4 857 4 365 2 
77 2 415 2 157 2 933 2 148 2 882 2 68 2 217 2 658 2 473 2 814 2 745 2 546 2 713 2 714 4 605 2 
537 4 332 2 506 3 871 3 812 2 262 2 674 2 646 2 341 2 513 2 138 2 46 2 714 2 268 2 679 2 412 1 599 2 485 3 276 2 937 6 602 2 465 2 803 2 663 3 468 2 
599 2 537 4 485 2 332 2 276 2 506 2 812 2 871 2 937 6 262 2 602 2 465 2 341 2 646 2 674 2 513 2 138 2 803 2 46 2 268 2 714 2 679 2 663 2 468 2 
599 2 537 4 485 2 332 2 276 2 506 2 812 2 871 2 937 6 262 2 602 2 465 2 341 2 646 2 674 2 513 2 138 2 803 2 46 2 268 2 714 2 679 2 663 2 468 2 
65 2 536 2 701 2 226 2 812 2 871 3 41 2 262 2 107 2 71 4 166 4 513 2 449 4 263 2 714 10 451 2 850 2 792 6 795 2 487 4 419 2 86 2 488 2 276 4 20 3 884 2 969 2 689 2 389 3 219 2 660 4 281 2 730 3 566 4 858 2 568 2 96 6 663 3 366 2 861 4 
65 2 536 2 701 2 226 2 812 2 871 2 41 2 262 2 107 2 71 4 166 4 513 2 449 4 263 2 714 10 451 2 343 2 850 2 792 4 879 2 795 2 487 4 419 2 86 2 488 2 276 4 20 2 884 2 969 2 689 2 389 2 219 2 490 2 660 4 281 2 730 2 566 4 858 2 568 2 96 6 663 2 366 2 861 4 
65 2 536 2 701 2 226 2 812 2 871 2 41 2 262 2 107 2 71 4 166 4 513 2 449 4 263 2 714 10 451 2 343 2 850 2 792 4 879 2 795 2 487 4 419 2 86 2 488 2 276 4 20 2 884 2 969 2 689 2 389 2 219 2 490 2 660 4 281 2 730 2 566 4 858 2 568 2 96 6 663 2 366 2 861 4 
65 2 536 2 701 2 226 2 812 2 871 2 41 2 262 2 107 2 71 4 166 4 513 2 449 4 263 2 714 10 451 2 343 2 850 2 792 4 879 2 795 2 487 4 419 2 86 2 488 2 276 4 20 2 884 2 969 2 689 2 389 2 219 2 490 2 660 4 281 2 730 2 566 4 858 2 568 2 96 6 663 2 366 2 861 4 
65 2 536 2 701 2 226 2 812 2 871 2 41 2 262 2 107 2 71 4 166 4 513 2 449 4 263 2 714 10 451 2 343 4 850 2 792 4 879 4 795 2 487 4 419 2 86 2 488 2 276 4 20 2 884 2 969 2 689 2 389 2 219 2 490 4 660 4 281 2 730 2 566 4 858 2 568 2 96 6 663 2 366 2 861 4 
326 2 588 2 598 2 892 2 807 2 36 2 
323 2 18 2 19 2 425 2 277 2 278 2 36 2 
573 2 500 2 534 2 890 2 540 2 541 2 641 2 616 2 619 2 620 2 265 1 815 2 899 1 714 10 269 2 550 2 54 2 114 2 116 2 276 8 557 2 388 1 688 2 800 1 732 2 572 1 
185 2 942 2 701 2 371 2 258 2 372 4 231 2 166 12 449 4 714 6 650 2 343 3 821 2 792 16 879 2 795 6 86 6 276 6 635 4 970 2 689 6 280 2 490 2 91 2 281 6 731 2 126 2 858 6 568 6 366 6 
589 2 582 7 190 2 575 2 276 1 333 2 966 2 390 4 856 2 660 2 203 1 692 2 71 2 714 1 898 2 292 2 284 2 861 2 
589 2 582 6 190 2 575 2 333 4 966 2 390 4 660 2 856 4 692 4 71 2 898 2 292 2 284 2 861 2 
589 8 582 10 190 2 575 2 276 1 333 8 966 2 390 4 660 2 856 8 203 1 692 8 71 2 714 1 898 2 292 6 284 2 861 2 
582 2 190 2 575 2 333 2 966 2 390 2 660 2 856 2 692 2 71 2 898 2 284 2 861 2 
368 2 862 2 130 42 256 24 260 4 869 6 509 2 374 84 873 10 376 6 511 6 621 2 14 8 139 2 748 18 626 90 140 6 143 2 142 50 631 8 517 8 521 24 634 4 752 4 753 2 384 6 275 2 276 126 526 56 23 4 29 2 33 4 151 6 764 2 404 2 640 24 542 6 544 6 896 8 780 4 781 24 45 6 784 2 901 9 48 6 49 234 50 4 411 32 170 30 654 4 415 8 553 6 175 6 794 4 560 12 59 4 176 6 423 2 802 6 61 4 178 10 179 4 182 6 667 2 917 4 918 84 191 6 436 4 437 24 302 2 811 12 922 2 923 14 445 6 673 4 308 56 206 6 816 4 209 6 72 6 452 26 683 14 316 4 583 1 92 108 466 116 95 6 97 4 696 8 470 24 102 24 837 12 706 2 839 12 707 6 948 4 336 13 593 2 950 2 476 8 230 14 710 6 595 6 711 4 843 6 714 138 953 4 597 26 715 6 236 42 480 92 479 90 482 8 853 4 357 2 968 6 971 6 727 20 363 4 124 6 976 10 497 10 248 12 733 4 860 3 734 2 
916 2 918 20 810 4 192 2 811 4 509 2 922 2 923 2 136 2 445 2 69 2 198 6 308 2 375 2 267 4 14 2 209 2 72 2 74 2 140 2 683 2 454 2 455 2 631 2 750 2 822 2 459 2 314 2 276 44 385 2 526 2 387 2 23 4 90 2 31 2 832 2 92 20 466 6 696 2 768 2 155 4 397 2 470 2 538 2 102 38 837 4 162 2 104 2 640 2 946 2 707 2 948 2 591 2 336 2 896 6 778 2 780 2 781 2 476 2 230 2 45 2 784 2 714 46 234 2 715 2 787 2 49 44 411 2 651 2 848 2 415 2 553 2 348 2 173 2 175 2 244 2 118 2 968 2 423 2 177 2 802 2 424 2 976 2 178 2 497 2 62 2 248 4 299 2 569 2 571 4 860 2 430 2 
368 4 862 2 130 8 609 4 260 4 869 4 509 2 374 24 376 4 873 8 511 4 874 16 140 4 629 8 142 8 631 2 382 32 752 4 384 4 276 70 526 30 883 4 23 2 29 2 33 4 151 4 397 2 402 8 404 2 542 4 544 4 778 2 896 6 45 4 784 2 47 2 49 104 651 2 411 6 170 30 294 4 415 2 553 4 175 4 794 4 560 14 59 4 176 4 423 2 177 2 802 4 61 4 806 4 182 4 912 2 64 2 917 4 916 10 918 36 437 8 811 10 922 2 923 6 445 4 673 2 308 28 209 6 72 4 312 4 683 10 454 10 316 4 825 2 466 24 92 44 95 4 940 16 696 2 702 8 102 14 837 10 706 2 707 4 336 10 476 2 230 6 710 4 595 4 843 4 951 4 714 78 953 4 477 8 715 4 236 16 480 24 848 10 849 2 242 2 350 4 357 4 968 4 971 4 363 4 124 4 248 10 733 4 
368 2 918 14 436 2 811 6 509 2 922 2 923 2 445 4 673 2 308 12 873 6 72 4 209 2 140 2 683 2 143 2 631 2 753 2 275 2 276 26 526 12 23 2 92 14 466 8 764 2 696 2 397 2 837 6 102 14 707 2 336 2 593 2 896 4 778 2 950 2 476 2 230 2 45 2 784 2 714 28 901 2 234 2 715 4 48 2 49 40 411 2 170 6 415 2 553 4 175 2 357 2 968 4 727 10 423 2 802 4 61 4 248 6 299 2 860 2 
614 2 

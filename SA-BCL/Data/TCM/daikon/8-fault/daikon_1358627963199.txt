#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V ERROR java.lang.NullPointerException (932,1353) 
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR daikon.config.Configuration$ConfigException (13,283,321,605,1220) (13,283,321,605,1220) (13,283,321,605,1220) 
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V PASSED
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 564 1283 468 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V ERROR java.lang.NullPointerException 290 8 
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 598 657 350 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 352 352 352 598 657 350 
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 352 352 702 598 657 350 
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_0()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_1()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_2()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_3()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_4()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_5()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_6()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_7()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_8()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_9()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_10()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_11()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_12()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_13()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_14()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_15()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_16()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_17()V PASSED
daikon.test.split.SplitterFactoryTest:testmisc_Fib_main_18()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_19()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_20()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_21()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_22()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_23()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_24()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_25()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_26()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_27()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_28()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_29()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_30()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_31()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_32()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__33()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__34()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__35()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__36()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__37()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__38()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__39()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__40()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__41()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__42()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__43()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.Quant:lte(II)Z
daikon.test.TestAst.ClassOrInterfaceDeclarationHarvester:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
jtb.JavaParser:jj_3R_169()Z
jtb.syntaxtree.NodeList:NodeList()V
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
jtb.JavaParser:jj_2_10(I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ExclusiveOrExpression;)V
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.tools.jtb.Ast:typeMatch(Ljava.lang.String;Ljava.lang.String;)Z
daikon.Quant:eltwiseGT([I)Z
utilMDE.SimpleLog.LongVal:LongVal(J)V
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
jtb.JavaParser:jj_3R_105()Z
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
daikon.ValueTuple:isMissing(I)Z
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String; | RETURN | 128825 | return null
utilMDE.FuzzyFloat:FuzzyFloat()V
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_76()Z
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.PptName:toString()Ljava.lang.String;
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.PptName:getSignature()Ljava.lang.String;
jtb.visitor.FormatCommand:getCommand()I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.EqualityExpression;)V
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
utilMDE.FuzzyFloat:lte(DD)Z
daikon.Quant:setDiff([I[I)[I
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.inv.unary.UpperBoundCore:calc_range()J
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:bitwiseComplement(I)I
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_2_35(I)Z
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:pairwiseLT([I[I)Z
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.Quant:pairwiseSquare([I[I)Z
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.Quant:lexNotEqual([I[I)Z
jtb.syntaxtree.AndExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:indexOf([II)I | OPERATOR | 13879 | == -> !=
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Name;)V
jtb.syntaxtree.Statement:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:subsetOf([J[J)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
jtb.JavaParser:jj_3R_123()Z
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.VarInfo:new_ppt()V
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3_20()Z
jtb.syntaxtree.NodeListOptional:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J | OPERATOR | 17476 | - -> <<
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;)Z
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.inv.Invariant:prob_is_ge(DD)D
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:lexLT([I[I)Z
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_98()Z
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
jtb.JavaParser:JavaParser(Ljava.io.Reader;)V
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.Quant:eltsLT([II)Z
jtb.JavaParser:jj_2_18(I)Z
jtb.JavaParser:jj_3R_122()Z
daikon.VarInfo:dbc_name()Ljava.lang.String;
jtb.JavaParser:jj_3R_107()Z
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.Intern:intern([J)[J
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.FuzzyFloat:eq(DD)Z
daikon.PptName:isCombinedExitPoint()Z
jtb.syntaxtree.UnaryExpression:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.TreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
jtb.visitor.FormatCommand:getNumCommands()I
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.TypeArguments:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3_35()Z
daikon.inv.Invariant:prob_or(DD)D
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_97()Z
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
utilMDE.MathMDE:mod_positive(JJ)J
daikon.diff.Node:Node()V
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.ProglangType:isPointerFileRep()Z
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.ModBitTracker:ModBitTracker(I)V
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
utilMDE.Intern.SequenceAndIndices:hashCode()I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
jtb.JavaParser:jj_3R_85()Z
jtb.JavaCharStream:getBeginColumn()I
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
jtb.JavaParser:jj_3R_126()Z
utilMDE.ArraysMDE:sum([[I)I
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Expression;)V
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
jtb.syntaxtree.ExclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.Quant:gt(II)Z
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ProglangType:baseIsScalar()Z
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.Ppt:Ppt()V
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.MathMDE:missing_numbers([I)[I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameter;)V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
jtb.syntaxtree.Literal:accept(Ljtb.visitor.Visitor;)V
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments;
daikon.ProglangType:dimensions()I
daikon.Quant:eltsEqual([II)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArgument;)V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.Quant:eltsNotEqualIndex([I)Z
jtb.syntaxtree.ClassOrInterfaceBody:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_161()Z
daikon.ValueTuple:isMissingFlow(I)Z
jtb.JavaParser:jj_3R_137()Z
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.tools.jtb.Ast:getPackage(Ljtb.syntaxtree.CompilationUnit;)Ljava.lang.String;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltwiseLT([I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ShiftExpression;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
jtb.JavaParser:jj_3R_114()Z
jtb.JavaParser:jj_3R_109()Z
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.TestUtilMDE:lsis_test(I)V
jtb.JavaParser:jj_2_17(I)Z
jtb.syntaxtree.ConditionalOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:memberOf(D[F)Z
daikon.PptName:getFullClassName()Ljava.lang.String;
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljava.lang.String;Ljava.lang.String;Ljava.util.List;)Z
jtb.JavaParser:jj_3R_48()Z
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.ShiftExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_54()Z
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.Quant:eltwiseGTE([I)Z
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
jtb.JavaParser:jj_3R_77()Z
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.tools.jtb.Ast:getType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
jtb.syntaxtree.PrimaryExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeSequence:elements()Ljava.util.Enumeration;
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.VarInfoName.Elements:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.MethodDeclaration:getParent()Ljtb.syntaxtree.Node;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
jtb.syntaxtree.ConditionalAndExpression:accept(Ljtb.visitor.Visitor;)V
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeBound;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MultiplicativeExpression;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalOrExpression;)V
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:sum([[D)D
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
jtb.syntaxtree.NodeChoice:getParent()Ljtb.syntaxtree.Node;
daikon.PptSlice2:arity()I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_25()Z
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_115()Z
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
jtb.syntaxtree.TypeArgument:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.tools.jtb.Ast.1GetParametersVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Statement;)V
utilMDE.Assert:assertTrue(Z)V
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
jtb.syntaxtree.ImportDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.Debug:logDetail()Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.PptSlice0:arity()I
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_103()Z
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.UtilMDE:removeWhitespaceAround(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InclusiveOrExpression;)V
daikon.diff.RootNode:RootNode()V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
utilMDE.Intern:internStrings([Ljava.lang.String;)V
jtb.JavaParser:jj_2_13(I)Z
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.ClassOrInterfaceBody:ClassOrInterfaceBody(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.ArraysMDE:isSubarray([I[II)Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
jtb.JavaParser:jj_3R_119()Z
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:getToken(I)Ljtb.Token;
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
jtb.JavaParser:jj_scan_token(I)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.FormalParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:lexEqual([I[I)Z
daikon.test.FormatTestCase.SingleOutputTestCase:getDiffString()Ljava.lang.String;
daikon.VarInfoName:name()Ljava.lang.String;
jtb.JavaParser:jj_2_1(I)Z
daikon.ProglangType:isArray()Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_81()Z
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
jtb.syntaxtree.ReferenceType:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:eltwiseNotEqual([I)Z
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.Quant:eltsGT([II)Z
utilMDE.UtilMDE:lineNumberFileReader(Ljava.lang.String;)Ljava.io.LineNumberReader;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName:esc_name()Ljava.lang.String;
jtb.JavaParser:jj_3R_60()Z
daikon.inv.unary.scalar.Positive:enabled()Z
jtb.JavaParser:jj_3R_58()Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
jtb.syntaxtree.FormalParameter:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfo:jml_name()Ljava.lang.String;
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
utilMDE.UtilMDE:removeWhitespaceBefore(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:subsetOf([I[I)Z
jtb.syntaxtree.Block:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:lt(II)Z
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_162()Z
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
utilMDE.FuzzyFloat:gt(DD)Z
utilMDE.FuzzyFloat:indexOf([D[D)I
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.tools.jtb.SimpleTreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.Invariant:format()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeOptional;)V
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:eltsNotEqual([II)Z
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeSequence:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:computeProbability()D
utilMDE.Intern:internSubsequence([III)[I
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
jtb.JavaParser:jj_3_29()Z
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
jtb.JavaParser:jj_3R_210()Z
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
jtb.JavaCharStream:BeginToken()C
daikon.PptTopLevel:getInvariants()Ljava.util.List;
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:memberOf(F[F)Z
jtb.syntaxtree.NullLiteral:accept(Ljtb.visitor.Visitor;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaCharStream:readChar()C
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_80()Z
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.Quant:eq(II)Z
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
jtb.syntaxtree.NodeSequence:getParent()Ljtb.syntaxtree.Node;
jtb.JavaParser:jj_3_1()Z
utilMDE.MathMDE:pow_fast(II)I
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.unary.scalar.NonModulus:updateResults()V
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljtb.syntaxtree.Node;)Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.Quant:eq(DD)Z
daikon.tools.jtb.PptNameMatcher:typeMatch(Ljava.lang.String;Ljtb.syntaxtree.FormalParameter;)Z
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
jtb.visitor.TreeDumper:TreeDumper(Ljava.io.Writer;)V
daikon.test.TestQuant:removeAdjacentDups([I)[I
jtb.syntaxtree.TypeParameters:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PackageDeclaration;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameters;)V
jtb.JavaParser:jj_3R_61()Z
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
jtb.syntaxtree.TypeDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
utilMDE.FuzzyFloat:indexOf([DD)I
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.Quant:eltsLTE([II)Z
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
jtb.syntaxtree.CompilationUnit:getParent()Ljtb.syntaxtree.Node;
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.InvariantFormatTester:execute()Z
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.tools.jtb.Ast:getClassName(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
jtb.JavaParser:jj_3R_89()Z
jtb.syntaxtree.TypeDeclaration:TypeDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:pairwiseDivides([I[I)Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
jtb.JavaParser:jj_3R_74()Z
daikon.inv.unary.LowerBoundCore:calc_range()J
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.Quant:eltsGtIndex([I)Z
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
jtb.syntaxtree.NodeToken:trimSpecials()V
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:justified()Z
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.Type;)V
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:pairwiseEqual([I[I)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.TreeFormatter:space()Ljtb.visitor.FormatCommand;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:jj_2_12(I)Z
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.Quant:slice([III)[I
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:subarray([JII)[J
utilMDE.MathMDE:pow(II)I
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:sum([D)D
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameter;)V
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
jtb.JavaParser:jj_3_14()Z
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
jtb.JavaParser:jj_3R_57()Z
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.InvMap:InvMap()V
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:concat([I[I)[I
jtb.syntaxtree.FormalParameter:FormalParameter(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Type;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.VariableDeclaratorId;)V
jtb.syntaxtree.InclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:memberOf(S[S)Z
utilMDE.Intern:internSubsequence([JII)[J
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Literal;)V
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
jtb.syntaxtree.ClassOrInterfaceType:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.Quant:pairwiseGT([I[I)Z
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:element_range([I)I
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.test.FormatTestCase:passes()Z
daikon.diff.InvMap:toString()Ljava.lang.String;
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:isScalar()Z
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_2_36(I)Z
daikon.Quant:eq(JJ)Z
daikon.tools.jtb.Ast:removeWhitespace(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.PptSlice1:arity()I
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3_10()Z
daikon.PptSlice0:initInvariantsSeen()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NullLiteral;)V
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
jtb.JavaParser:jj_3R_50()Z
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
jtb.syntaxtree.Name:accept(Ljtb.visitor.Visitor;)V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_ntk()I
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_2_4(I)Z
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfo:relate_var()V
jtb.JavaParser:jj_3R_163()Z
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_136()Z
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.test.FormatTestCase:getDiffString()Ljava.lang.String;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
jtb.syntaxtree.ClassOrInterfaceDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_2_25(I)Z
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;II)V
jtb.JavaCharStream:backup(I)V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.inv.OutputFormat:isJavaFamily()Z
utilMDE.MathMDE:gcd(II)I
jtb.JavaParser:jj_3R_68()Z
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.inv.Invariant:prob_and(DD)D
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.Quant:subsetOf([B[I)Z
jtb.syntaxtree.NodeListOptional:getParent()Ljtb.syntaxtree.Node;
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
utilMDE.UtilMDE:removeWhitespaceAfter(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
jtb.syntaxtree.TypeArgument:accept(Ljtb.visitor.Visitor;)V
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.BlockStatement;)V
jtb.syntaxtree.ResultType:accept(Ljtb.visitor.Visitor;)V
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeSequence;)V
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
jtb.JavaParser:jj_3_19()Z
utilMDE.MathMDE:modulus([I)[I
jtb.syntaxtree.NodeListOptional:present()Z
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3_4()Z
daikon.ProglangType:isFloat()Z
jtb.JavaParser:jj_3R_52()Z
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfo:isPointer()Z
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
utilMDE.ArraysMDE:min_max([I)[I
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.tools.jtb.Ast:format(Ljtb.syntaxtree.Node;)Ljava.lang.String;
utilMDE.LimitedSizeIntSet:size()I
daikon.Quant:concat([I[I)[I
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
utilMDE.ArraysMDE:max([I)I
jtb.JavaParser:jj_3R_180()Z
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.FormalParameters:accept(Ljtb.visitor.Visitor;)V
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_2_3(I)Z
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeDeclaration;)V
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.CompilationUnit:CompilationUnit(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
jtb.visitor.TreeDumper:printToken(Ljava.lang.String;)V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
jtb.syntaxtree.ReturnStatement:accept(Ljtb.visitor.Visitor;)V
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.PackageDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:subarray([III)[I
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
utilMDE.Intern:intern([I)[I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ImportDeclaration;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReturnStatement;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_108()Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
jtb.syntaxtree.ClassOrInterfaceBody:getParent()Ljtb.syntaxtree.Node;
daikon.Quant:memberOf(F[D)Z
daikon.tools.jtb.PptNameMatcher:extractPptArgs(Ldaikon.PptName;)Ljava.util.List;
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:sameLength([I[I)Z
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
utilMDE.FuzzyFloat:ne(DD)Z
daikon.Debug:logOn()Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap:size()I
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.NodeListOptional:elements()Ljava.util.Enumeration;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.diff.Node:children()Ljava.util.Iterator;
jtb.JavaParser:jj_3_3()Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBody;)V
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.test.TestAst.MethodDeclarationHarvester:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.Quant:subsetOf([F[D)Z
jtb.syntaxtree.MethodDeclarator:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.syntaxtree.VariableDeclaratorId:VariableDeclaratorId(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameters;)V
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.Quant:gte(II)Z
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
utilMDE.MathMDE:sign(I)I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
jtb.JavaParser:jj_3R_120()Z
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.UtilMDE:splitLines(Ljava.lang.String;)[Ljava.lang.String;
utilMDE.MathMDE:gcd([I)I
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.VarInfoName:hashCode()I
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
jtb.visitor.TreeFormatter:processList(Ljtb.syntaxtree.NodeListInterface;Ljtb.visitor.FormatCommand;)V
jtb.visitor.TreeFormatter:processList(Ljtb.syntaxtree.NodeListInterface;)V
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_125()Z
jtb.syntaxtree.Modifiers:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.TreeFormatter:placeToken(Ljtb.syntaxtree.NodeToken;II)V
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
jtb.JavaParser:jj_3R_124()Z
utilMDE.WeakHasherMap:processQueue()V
jtb.visitor.TreeFormatter:space(I)Ljtb.visitor.FormatCommand;
utilMDE.OrderedPairIterator:setnext2()V
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.Quant:eltsGteIndex([I)Z
utilMDE.UtilMDE:lineNumberFileReader(Ljava.io.File;)Ljava.io.LineNumberReader;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.Invariant:logOn()Z
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:enabled()Z
utilMDE.OrderedPairIterator:hasNext()Z
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_134()Z
daikon.test.TestAst:checkMatch(Ljava.lang.String;Ljtb.syntaxtree.MethodDeclaration;Ldaikon.tools.jtb.PptNameMatcher;)V
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor.1:visit(Ljtb.syntaxtree.TypeParameter;)V
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3_28()Z
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.Quant:noDups([I)Z
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
jtb.JavaParser:jj_3R_96()Z
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3_5()Z
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
jtb.syntaxtree.RelationalExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaCharStream:getEndColumn()I
daikon.ProglangType:isPseudoArray()Z
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.Quant:memberOf(I[I)Z
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltsEqualIndex([I)Z
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
jtb.JavaCharStream:getBeginLine()I
daikon.PptName:isEnterPoint()Z
jtb.JavaParser:jj_3R_70()Z
daikon.Quant:lexGT([I[I)Z
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.JavaParser:jj_3_18()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AndExpression;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
jtb.syntaxtree.NodeOptional:present()Z
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
jtb.syntaxtree.NodeToken:numSpecials()I
daikon.PptSlice1:num_samples()I
jtb.JavaParser:jj_2_16(I)Z
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat:gte(DD)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryExpression;)V
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.inv.Invariant:isWorthPrinting()Z
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:ne(II)Z
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.inv.Invariant:getConfidence()D
jtb.JavaParser:jj_3_13()Z
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
jtb.syntaxtree.NodeToken:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_47()Z
daikon.tools.jtb.SimpleTreeDumper:SimpleTreeDumper(Ljava.io.Writer;)V
daikon.inv.Invariants:Invariants()V
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.VarInfoName:toString()Ljava.lang.String;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_100()Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.tools.jtb.PptNameMatcher:PptNameMatcher(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalExpression;)V
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
utilMDE.MathMDE:gcd_differences([I)I
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
jtb.syntaxtree.TypeDeclaration:accept(Ljtb.visitor.Visitor;)V
utilMDE.LimitedSizeIntSet:add(I)V
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.tools.jtb.SimpleTreeDumper:printToken(Ljava.lang.String;)V
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Quant:isReverse([I[I)Z
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList; | ASSIGN | 61874 | = null
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.diff.PrintAllVisitor:bufPrintln()V
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PostfixExpression;)V
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryPrefix;)V
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
jtb.JavaParser:jj_3R_116()Z
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
jtb.JavaParser:jj_3R_72()Z
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
jtb.syntaxtree.TypeParameter:accept(Ljtb.visitor.Visitor;)V
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.inv.unary.scalar.UpperBound:enabled()Z
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.Quant:subsetOf([F[F)Z
utilMDE.UtilMDE:split(Ljava.lang.String;Ljava.lang.String;)[Ljava.lang.String;
daikon.tools.jtb.Ast:print(Ljtb.syntaxtree.Node;)Ljava.lang.String;
jtb.JavaParser:jj_3R_62()Z
jtb.syntaxtree.MethodDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:negate(I)I
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:memberOf(J[J)Z
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_106()Z
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.tools.jtb.Ast:create(Ljava.lang.String;Ljava.lang.String;)Ljtb.syntaxtree.Node;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.ClassOrInterfaceBody:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.VariableDeclaratorId:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
jtb.JavaParser:jj_3R_75()Z
jtb.JavaParser:jj_3R_55()Z
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
daikon.Quant:subsetOf([D[F)Z
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:eltsGTE([II)Z
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.RelationalExpression;)V
jtb.syntaxtree.NodeChoice:accept(Ljtb.visitor.Visitor;)V
daikon.ValueTuple:size()I
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.ProglangType:baseIsFloat()Z
jtb.syntaxtree.BlockStatement:accept(Ljtb.visitor.Visitor;)V
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
jtb.JavaParser:jj_3R_135()Z
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_86()Z
jtb.JavaParser:jj_3R_99()Z
jtb.syntaxtree.TypeBound:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
jtb.JavaParser:jj_3_27()Z
daikon.tools.jtb.Ast:create(Ljava.lang.String;[Ljava.lang.Class;[Ljava.lang.Object;Ljava.lang.String;)Ljtb.syntaxtree.Node;
jtb.syntaxtree.AdditiveExpression:accept(Ljtb.visitor.Visitor;)V
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.Invariant:logDetail()Z
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
daikon.Quant:eq(FF)Z
jtb.syntaxtree.ClassOrInterfaceDeclaration:ClassOrInterfaceDeclaration(Ljtb.syntaxtree.NodeChoice;Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ClassOrInterfaceBody;)V
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.tools.jtb.Ast:getParent(Ljava.lang.Class;Ljtb.syntaxtree.Node;)Ljtb.syntaxtree.Node;
daikon.VarInfoName.Simple:isLiteralConstant()Z
jtb.JavaParser:jj_3R_101()Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaCharStream:FillBuff()V
jtb.syntaxtree.Type:accept(Ljtb.visitor.Visitor;)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
jtb.Token:newToken(I)Ljtb.Token;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ReferenceType;)V
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.tools.jtb.Ast:getName(Ljtb.syntaxtree.MethodDeclaration;)Ljava.lang.String;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.tools.jtb.Ast:quickFixForInternalComment(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.syntaxtree.EqualityExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_2_21(I)Z
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.MathMDE:mod_positive(II)I
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.VarInfoName.ElementsFinder:inPre()Z
jtb.JavaParser:jj_3R_133()Z
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;Z)Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParser:jj_3R_104()Z
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:name()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
jtb.JavaParser:jj_3R_149()Z
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.PptName:getMethodName()Ljava.lang.String;
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
jtb.JavaParser:jj_3R_117()Z
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:eltsLtIndex([I)Z
daikon.VarInfoName:simplify_name()Ljava.lang.String;
jtb.syntaxtree.VariableDeclaratorId:accept(Ljtb.visitor.Visitor;)V
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParser:jj_3R_69()Z
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArguments;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AdditiveExpression;)V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.TypeArguments:accept(Ljtb.visitor.Visitor;)V
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReferenceType;)V
jtb.syntaxtree.PrimaryPrefix:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3_21()Z
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
utilMDE.ArraysMDE:indexOf([ZZ)I
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
jtb.JavaParser:jj_3R_56()Z
jtb.JavaParser:jj_3R_51()Z
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:jj_3_15()Z
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:eltsLteIndex([I)Z
daikon.Quant:lexGTE([I[I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclarator;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InstanceOfExpression;)V
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
jtb.syntaxtree.NodeSequence:elementAt(I)Ljtb.syntaxtree.Node;
jtb.syntaxtree.Expression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3_12()Z
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_87()Z
daikon.VarInfo:simplify_name()Ljava.lang.String;
jtb.JavaParser:jj_3R_110()Z
daikon.Quant:pairwiseLTE([I[I)Z
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
jtb.visitor.TreeFormatter:add(Ljtb.visitor.FormatCommand;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_164()Z
jtb.JavaParser:jj_3_30()Z
utilMDE.ArraysMDE:min([I)I
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
jtb.JavaParser:jj_3R_63()Z
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;)V
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:ioa_name()Ljava.lang.String;
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName; | RETURN | 30246 | return null
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker; | RETURN | 1469 | return null
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.tools.jtb.Ast:getParameters(Ljtb.syntaxtree.MethodDeclaration;)Ljava.util.List;
utilMDE.Intern:intern([D)[D
daikon.Quant:union([I[I)[I
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
jtb.JavaParser:VariableDeclaratorId()Ljtb.syntaxtree.VariableDeclaratorId;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.CompilationUnit:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:subsetOf([D[D)Z
jtb.JavaParser:jj_3R_53()Z
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpression;)V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.FormalParameter;)V
jtb.JavaParser:FormalParameter()Ljtb.syntaxtree.FormalParameter;
jtb.syntaxtree.MultiplicativeExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3_16()Z
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.config.Configuration.ConfigException:ConfigException(Ljava.lang.String;Ljava.lang.Throwable;)V
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:copy(Ljava.util.HashMap;)Ljava.util.HashMap;
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalAndExpression;)V
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;)V
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V | STATEMENT | 2624 | stmt -> ;
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
jtb.JavaParser:jj_2_5(I)Z
jtb.JavaParser:jj_3R_121()Z
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_2_15(I)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.ProglangType:baseIsIntegral()Z
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:setEqual([I[I)Z
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ResultType;)V
jtb.JavaCharStream:ReadByte()C
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_67()Z
jtb.visitor.TreeFormatter:TreeFormatter()V
daikon.tools.jtb.PptNameMatcher:getUngenerifiedType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:getParent()Ljtb.syntaxtree.Node;
utilMDE.MathMDE:gcd(JJ)J
jtb.JavaParser:jj_3R_118()Z
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.ValueSet:ValueSet(I)V
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
jtb.JavaParser:jj_3_36()Z
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
jtb.JavaParser:jj_3_17()Z
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
jtb.syntaxtree.NodeOptional:accept(Ljtb.visitor.Visitor;)V
jtb.JavaCharStream:getEndLine()I
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.Quant:lexLTE([I[I)Z
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.filter.InvariantFilters:InvariantFilters()V
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:prob_and(DDD)D
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;Ljava.lang.String;)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_49()Z
jtb.syntaxtree.InstanceOfExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.OrderedPairIterator:setnext1()V
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.Quant:eltwiseLTE([I)Z
jtb.visitor.FormatCommand:FormatCommand(II)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
jtb.JavaParser:jj_2_14(I)Z
daikon.PptSlice0.ImplicationWrapper:hashCode()I
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Type;)V
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.JavaParser:jj_3R_88()Z
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
jtb.JavaParser:jj_3R_102()Z
jtb.syntaxtree.TypeArguments:TypeArguments(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeArgument;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
jtb.syntaxtree.TypeDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.ProglangType:isIntegral()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameters;)V
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.Quant:eltwiseEqual([I)Z
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Modifiers;)V
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.FuzzyFloat:lt(DD)Z
utilMDE.Intern:numIntArrays()I
jtb.JavaParser:jj_3_22()Z
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_73()Z
utilMDE.ArraysMDE:sum([I)I
jtb.syntaxtree.PostfixExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_148()Z
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
utilMDE.Options.OptionInfo:argument_required()Z
jtb.visitor.TreeFormatter:TreeFormatter(II)V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;)V
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Block;)V
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.Quant:subsetOf([S[S)Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:ungenerify(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.diff.Node:Node(LutilMDE.Pair;)V
jtb.syntaxtree.ConditionalExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.Quant:intersection([I[I)[I
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.CompilationUnit;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
921 2 694 4 343 2 279 2 903 2 218 2 155 2 237 2 459 2 
416 2 1301 6 790 2 819 2 620 2 806 6 952 2 1005 6 9 2 489 2 186 2 
528 6 947 4 279 2 603 6 1291 2 669 2 234 2 596 2 46 4 792 6 360 2 237 2 635 6 
1141 2 371 8 109 6 314 2 897 4 1335 10 732 6 804 10 408 16 173 2 523 2 525 10 835 26 988 16 550 2 1051 2 840 4 279 6 726 4 756 8 923 10 1349 8 1077 10 441 30 928 16 149 8 1259 4 237 6 212 12 399 2 
1353 4 932 4 
697 2 
897 2 1335 2 732 2 804 2 1337 2 408 2 525 2 361 2 835 4 645 2 988 2 1068 2 251 2 754 2 302 2 905 2 923 4 1349 2 821 2 1077 2 441 6 928 2 212 2 
740 4 1103 2 840 2 356 2 1335 4 502 6 139 6 804 4 408 8 1077 4 525 4 835 12 441 15 928 8 187 4 988 8 212 5 
87 2 1143 2 541 4 421 2 401 4 593 2 980 2 782 4 520 4 962 4 883 2 315 6 293 4 524 2 141 2 180 2 918 4 432 2 943 2 1281 2 54 2 625 62 789 2 865 4 705 2 674 2 34 2 1364 2 606 10 1303 2 1075 14 849 2 562 4 659 4 690 4 778 2 779 4 563 4 637 10 1159 8 
697 2 833 2 162 2 232 2 1347 2 37 2 977 2 21 2 796 2 1122 2 
527 2 386 2 463 2 67 2 1194 2 562 2 158 2 700 2 690 4 1341 2 260 2 1159 2 
109 4 422 2 331 4 897 2 1335 16 732 4 595 6 139 6 804 16 1294 6 408 32 525 16 835 48 548 6 988 32 1110 4 1051 2 753 8 740 4 279 4 1300 2 604 6 502 6 629 2 756 6 923 6 1349 18 324 2 658 4 1077 16 1366 2 441 54 310 2 928 32 237 4 187 4 212 22 1210 4 1121 4 
141 2 315 2 1159 2 
384 2 385 2 114 22 1003 2 881 2 1310 2 1336 2 16 2 47 2 751 10 29 2 721 2 458 2 480 2 
263 2 781 1 831 2 358 2 44 1 1083 2 1004 2 885 1 409 2 1125 1 1084 2 178 6 752 2 786 5 459 2 551 2 501 2 837 4 1254 2 13 2 279 22 1255 2 1220 2 1346 2 147 2 321 2 791 4 506 4 609 2 237 24 189 4 1306 1 419 2 286 2 761 1 151 1 933 2 68 6 764 1 568 2 617 2 1355 6 70 2 619 2 982 1 427 1 429 1 1275 2 339 1 1108 2 1319 2 1234 2 816 5 345 1 1322 2 862 2 902 4 628 2 35 1 255 1 79 2 1035 2 490 2 1327 2 953 2 1243 1 677 1 1118 3 
135 2 
237 2 86 2 
237 4 1293 2 646 2 
353 2 713 4 714 2 1043 4 355 4 715 2 717 12 1045 2 2 2 718 64 3 2 720 48 4 20 6 8 7 6 362 22 722 6 1049 2 12 6 724 4 366 12 367 16 19 2 1057 112 1058 28 25 2 26 2 373 6 729 112 374 24 1060 198 1061 4 375 20 376 2 734 6 1062 2 733 4 1064 2 378 2 735 328 379 4 380 2 1066 2 1065 2 1067 2 736 2 383 2 1069 70 32 12 1070 8 741 4 388 30 1072 6 36 30 1073 2 391 2 1074 2 390 204 393 12 394 6 395 244 38 2 39 88 1079 4 40 2 745 2 41 4 402 2 42 6 747 2 45 2 406 2 1081 2 1084 2 1086 2 411 198 413 4 1089 2 52 2 415 6 55 2 56 28 1090 2 755 2 57 2 1093 2 1095 2 757 140 758 112 420 2 1101 14 760 2 762 6 1104 2 423 432 66 6 424 2 765 182 766 2 426 2 1105 2 71 12 72 6 1106 46 768 8 770 6 430 4 431 4 1111 30 75 2 76 2 436 8 1114 4 77 30 440 2 439 2 774 8 81 2 443 2 85 16 82 328 1117 22 1119 74 445 20 447 14 448 4 449 4 94 14 450 4 451 46 454 2 455 2 1123 2 1124 26 1127 6 784 30 1129 26 787 2 788 8 1132 2 1134 6 1133 50 101 26 465 4 1135 2 104 2 105 30 1137 2 794 8 1140 2 107 2 795 8 797 2 798 4 799 2 470 4 469 2 800 10 801 20 112 4 1144 2 472 160 803 2 805 4 116 6 476 2 477 2 117 48 118 4 1148 4 123 12 1149 4 812 2 481 2 483 2 1152 14 820 2 488 132 130 2 1157 8 823 4 824 2 827 6 494 10 134 2 829 2 136 2 495 2 497 4 498 4 138 26 499 2 834 26 1164 6 836 2 1169 8 1170 6 1171 132 1173 64 1175 2 839 6 1177 32 146 6 843 198 504 20 1181 4 848 2 509 2 511 2 512 2 1183 2 850 6 1185 2 513 2 514 4 150 22 1187 4 516 20 154 198 153 4 853 4 1188 16 518 2 854 2 1192 2 856 92 1193 2 1196 2 157 2 160 6 857 198 1198 6 859 2 864 6 863 2 867 224 166 6 529 4 167 106 531 60 532 2 533 4 1209 2 536 2 539 8 876 98 543 2 878 4 879 2 1213 82 882 6 545 6 1214 2 1215 2 546 6 1216 4 1218 6 179 4 554 6 553 2 181 16 890 60 557 86 891 2 1222 4 188 6 1224 4 566 2 1226 6 191 12 896 386 194 26 570 20 572 2 1229 4 574 18 1230 6 573 20 900 4 197 2 1231 6 1232 4 200 4 1236 4 901 8 576 2 202 2 578 8 1238 6 204 2 580 198 1240 6 906 290 583 2 207 4 584 118 907 2 589 12 211 52 213 6 1245 2 591 6 592 192 215 2 216 2 1246 30 594 4 220 6 219 2 913 2 912 6 223 2 1248 8 597 12 916 6 915 6 599 68 226 2 227 2 1250 12 228 4 920 4 230 6 1251 2 601 2 1253 2 231 4 1256 2 1257 4 235 4 924 2 607 28 927 2 610 4 1261 6 237 10 1262 432 929 30 1263 2 238 2 1264 2 239 2 241 2 612 2 242 6 1266 2 935 10 243 244 1267 4 614 2 938 6 245 60 939 2 1268 2 247 2 621 2 941 6 1271 2 1273 30 622 2 250 2 1278 2 1277 2 623 4 252 6 944 30 1280 4 624 2 1282 2 627 2 950 2 254 14 1284 204 630 2 256 6 633 26 257 6 634 228 258 2 259 2 1285 198 1287 182 262 4 957 22 264 6 1289 60 638 26 960 6 966 10 268 2 1296 4 644 2 271 2 969 2 1298 4 649 4 274 12 1299 6 275 2 650 2 651 2 277 4 279 10 278 6 653 8 972 10 973 6 974 2 282 4 654 4 655 2 656 26 975 6 660 2 662 6 1305 4 663 6 288 2 1308 46 292 8 666 244 295 4 1312 24 296 6 1313 4 671 2 1315 2 1317 2 299 18 1318 12 673 2 301 46 990 2 1321 4 991 66 1323 14 304 2 992 26 675 336 306 28 676 2 307 46 996 6 995 6 311 106 998 376 313 2 679 2 1002 2 1333 10 1334 94 316 30 1006 2 1338 2 1339 4 681 4 318 4 1007 2 1340 2 1008 2 1342 6 1343 28 319 2 1009 4 320 566 683 2 1348 4 1010 2 687 84 325 2 1015 6 692 112 1016 192 693 8 329 4 1021 6 1354 6 1025 4 1026 198 1357 18 335 2 1028 2 337 54 699 2 701 2 1029 2 1030 14 703 8 1361 6 1032 2 1033 26 348 2 1034 6 349 2 707 2 1039 2 1041 2 712 2 1367 4 
749 2 31 1 428 2 1138 2 
196 2 428 2 
1365 2 846 2 428 2 446 2 665 2 726 2 1159 2 
846 2 1258 2 428 2 
846 2 372 2 428 2 
931 2 749 2 887 2 
846 2 428 2 
887 2 193 2 
392 2 428 2 
749 2 887 2 500 2 
749 2 60 2 776 2 
749 2 168 2 1184 2 
749 2 1 2 560 2 
749 2 954 2 377 2 
1325 2 887 2 
428 2 338 2 
210 2 776 2 
1304 2 168 2 
20 2 1 2 
236 2 377 2 
887 2 851 2 
808 2 377 2 
1 2 486 2 
1155 2 168 2 
776 2 1115 2 
326 2 749 2 887 2 500 2 
326 2 749 2 65 2 887 2 500 2 
749 2 887 2 479 2 
749 2 887 2 63 2 
678 2 875 2 434 2 5 2 
695 2 544 2 665 2 1159 2 
1211 2 446 2 695 2 544 2 665 2 1159 2 
846 2 428 2 48 2 665 2 726 2 1159 2 
964 2 832 2 
521 2 665 2 726 2 1159 2 
1 2 340 2 
1013 2 377 2 
776 2 103 2 
168 2 461 2 
89 2 168 2 377 2 
168 2 1288 2 377 2 
860 2 168 2 377 2 
168 2 1156 2 377 2 
665 2 719 6 246 2 456 6 49 2 559 2 793 2 1159 2 
887 2 281 2 
648 2 414 2 971 2 577 2 746 2 114 6 222 2 404 2 1356 2 1011 2 1223 2 767 2 73 4 129 2 442 4 1040 2 987 2 549 2 
749 2 100 2 
1319 2 
538 2 88 2 781 2 880 2 358 2 178 6 1048 2 643 2 886 2 785 2 786 2 459 2 99 2 279 26 791 4 369 2 189 4 1059 2 286 2 24 2 894 2 568 6 668 2 1309 2 381 2 807 2 816 2 1322 6 387 2 902 4 993 2 1242 4 389 2 586 2 587 2 588 2 590 2 1332 2 831 2 1004 2 1084 2 752 2 600 4 501 2 837 4 1254 2 1176 4 1255 6 842 2 147 2 1346 2 1180 2 1096 8 1097 2 609 2 1260 2 237 26 419 2 328 8 933 2 68 4 937 2 1191 2 70 2 1355 4 522 4 1195 2 1275 2 1108 2 862 2 345 2 628 2 79 2 1035 2 953 2 636 2 
780 2 538 2 88 2 781 2 880 2 358 2 178 6 1048 2 643 2 886 2 785 2 786 2 459 2 99 2 279 26 280 2 791 4 369 2 189 4 1059 2 286 2 24 2 894 2 568 6 668 2 1309 2 816 2 1322 6 387 2 902 4 993 2 389 2 586 2 587 2 588 2 590 2 1332 2 831 2 1004 2 1083 2 1084 2 752 2 600 4 501 2 837 4 1254 2 1176 4 1255 6 147 2 1346 2 1180 2 1096 8 1097 2 609 2 1260 2 237 26 419 2 328 8 933 2 68 6 937 2 617 2 1191 2 70 2 1355 4 522 4 1195 2 1275 2 1108 2 704 2 862 2 345 2 628 2 79 2 1035 2 632 2 953 2 636 2 
225 2 
1018 2 276 2 
540 2 772 2 416 2 1301 2 819 2 78 2 806 2 297 4 976 2 926 2 1274 2 1217 2 1158 2 510 2 143 4 1286 2 711 2 759 2 
540 2 1161 6 1162 2 358 2 96 2 1005 6 1084 2 9 2 1088 2 178 4 1217 2 1130 2 143 4 412 2 272 2 1168 2 416 4 279 6 1092 2 1301 4 147 2 322 2 976 2 926 2 510 2 237 12 691 4 189 2 1014 2 759 4 419 2 286 2 517 2 70 2 475 2 115 2 806 6 297 4 1274 2 1316 4 810 2 1109 2 124 4 858 2 772 2 1360 4 1112 2 902 2 164 4 581 2 819 4 78 2 1206 2 952 2 1207 2 1328 2 1158 2 953 2 1286 2 711 2 
540 2 1161 6 1162 2 358 2 96 2 1005 6 1084 2 9 2 1088 2 178 4 1217 2 1130 2 143 4 412 2 272 2 1168 2 416 4 279 6 1092 2 1301 6 147 2 322 2 976 2 926 2 510 2 237 12 691 4 189 2 1014 2 759 4 419 2 286 2 517 2 70 2 475 2 115 2 806 4 297 4 1274 2 1316 4 810 2 1109 2 124 4 858 2 772 2 1360 4 1112 2 902 2 164 4 581 2 819 4 78 2 1206 2 489 2 1207 2 1328 2 1158 2 953 2 1286 2 711 2 
540 2 1161 6 1162 2 358 2 96 2 1005 6 1084 2 9 2 1088 2 178 4 1217 2 1130 2 143 4 412 2 272 2 1168 2 416 4 279 6 1092 2 1301 6 790 2 147 2 322 2 976 2 926 2 510 2 237 12 691 4 189 2 1014 2 759 4 419 2 286 2 517 2 70 2 475 2 115 2 806 6 297 4 1274 2 1316 8 810 2 1109 2 124 4 858 2 772 2 1360 4 1112 2 902 2 164 4 581 2 819 4 78 2 1206 2 1207 2 1328 2 1158 2 953 2 1286 2 711 2 
540 2 1161 10 1162 2 358 2 96 2 1005 8 1084 2 9 2 1088 2 178 4 1217 2 1130 2 143 4 412 2 272 2 1168 2 416 4 279 6 1092 2 1301 8 790 2 147 2 322 2 976 2 926 2 510 2 237 12 691 4 189 2 1014 2 759 4 419 2 286 2 517 2 70 2 475 2 115 2 806 6 297 4 1274 2 1316 8 810 2 1109 2 124 4 858 2 772 2 1360 4 1112 2 902 2 164 8 581 2 819 4 78 2 1206 2 489 2 1207 2 1328 2 1158 2 953 2 1286 2 711 2 
540 2 1161 10 1162 2 358 2 96 2 1005 6 1084 2 9 2 1088 2 178 4 1217 2 1130 2 143 4 412 2 272 2 1168 2 416 4 279 6 1092 2 1301 6 790 2 147 2 322 2 976 2 926 2 510 2 237 12 691 4 189 2 1014 2 759 4 419 2 286 2 517 2 70 2 475 2 115 2 806 6 297 4 1274 2 1316 8 810 2 1109 2 124 4 858 2 772 2 1360 4 1112 2 902 2 164 8 581 2 819 4 78 2 1206 2 1207 2 1328 2 1158 2 953 2 1286 2 711 2 
540 2 877 6 358 2 884 2 1047 1 9 4 178 6 1048 2 1217 2 552 6 1053 4 723 2 889 6 558 2 561 2 185 2 189 4 24 2 894 2 731 1 568 6 739 2 902 4 387 2 203 2 581 2 389 2 1242 1 586 4 587 2 588 2 908 2 217 2 1083 2 1084 2 1088 2 752 12 412 2 1252 2 1254 2 416 4 1255 8 1092 2 1096 4 926 2 609 2 417 2 1098 1 237 46 419 2 759 4 64 2 933 2 934 2 68 6 616 2 244 2 617 2 70 2 1107 2 1274 2 1275 2 248 6 1108 2 1109 2 772 2 1112 2 628 2 78 2 79 2 953 2 1286 2 86 6 88 2 1290 1 961 1 1292 2 96 2 786 2 1130 4 459 2 272 2 968 6 646 6 99 2 279 24 102 6 1301 8 466 7 791 4 976 2 661 1 284 2 286 2 802 2 291 2 667 1 475 2 806 4 983 2 297 4 1314 2 1316 2 810 2 811 10 124 6 816 2 818 2 482 6 1322 6 819 4 489 4 1158 2 1328 2 825 6 1001 2 1330 6 135 6 1161 2 496 4 830 6 831 2 1162 2 1004 2 1005 12 143 4 501 2 1167 6 1168 2 837 4 1176 4 1346 2 147 2 322 4 845 1 508 2 510 2 691 4 1014 2 1186 6 328 4 517 2 1190 7 1355 2 1027 2 858 2 861 1 1360 8 862 2 346 6 868 8 1206 2 1035 2 351 2 1207 2 534 2 870 2 1038 2 535 2 711 2 873 2 
540 2 88 4 877 6 358 2 884 2 1292 2 96 2 9 4 1048 2 178 6 1217 2 1130 4 786 2 459 2 272 2 968 6 646 6 552 6 723 2 1053 4 889 6 99 2 279 26 102 6 790 4 1301 8 558 2 791 4 561 2 185 2 976 2 727 2 284 2 189 4 286 2 24 2 894 2 802 2 291 2 568 6 475 2 983 2 806 8 297 4 1314 2 1316 6 810 2 122 2 811 10 124 6 739 2 816 2 482 6 818 2 1322 6 387 4 902 4 203 2 581 2 819 4 389 2 586 4 587 4 588 2 1328 2 1158 2 825 6 1001 2 1330 6 135 6 1161 2 908 2 496 4 217 2 830 6 831 2 1162 2 1004 2 1083 2 1005 12 1084 2 1088 2 752 12 600 2 143 4 412 2 1167 6 501 2 1168 2 1252 2 837 4 1254 2 1176 4 416 4 1255 8 1092 2 147 2 1346 2 322 4 1096 8 926 2 508 2 417 2 609 2 510 2 237 48 691 4 1014 2 759 4 419 2 1186 6 328 8 64 2 933 2 934 2 517 2 68 6 616 2 244 2 617 2 1355 2 70 2 1027 2 1107 2 1274 2 248 6 1275 2 1108 2 1109 2 858 2 772 2 1360 8 1112 2 862 2 346 6 628 2 868 8 78 2 79 2 1206 2 1035 2 351 2 534 2 1207 2 870 2 1038 2 953 2 535 2 86 6 1286 2 711 2 873 2 
540 2 88 4 877 6 358 2 884 2 1292 2 96 2 9 4 1048 2 178 6 1217 2 1130 4 786 2 459 2 272 2 968 6 646 6 552 6 723 2 1053 4 889 6 99 2 279 26 102 6 790 4 1301 8 558 2 791 4 561 2 185 2 976 2 727 2 284 2 189 4 286 2 24 2 894 2 802 2 291 2 568 6 475 2 983 2 806 8 297 4 1314 2 1316 6 810 2 122 2 811 10 124 6 739 2 816 2 482 6 818 2 1322 6 387 4 902 4 203 2 581 2 819 4 389 2 586 4 587 4 588 2 1328 2 1158 2 825 6 1001 2 1330 6 135 6 908 2 1161 6 496 4 217 2 830 6 831 2 1162 2 1004 2 1083 2 1005 12 1084 2 1088 2 752 12 600 2 143 4 412 2 1167 6 501 2 1168 2 1252 2 837 4 1254 2 1176 4 416 4 1255 8 1092 2 1346 2 147 2 322 4 1096 8 926 2 508 2 417 2 609 2 510 2 237 48 691 4 1014 2 759 4 419 2 1186 6 328 8 64 2 933 2 934 2 517 2 68 6 616 2 244 2 617 2 1355 2 70 2 1027 2 1107 2 1274 2 248 6 1275 2 1108 2 1109 2 858 2 772 2 1360 8 1112 2 862 2 346 6 628 2 164 4 868 8 78 2 79 2 1206 2 1035 2 351 2 534 2 1207 2 870 2 1038 2 953 2 535 2 86 6 1286 2 711 2 873 2 
540 2 877 12 357 6 358 2 884 2 172 6 9 4 178 6 1048 4 1217 2 552 6 1052 2 1053 4 889 6 725 2 558 2 368 6 561 2 185 2 727 2 189 4 24 2 894 2 568 8 898 2 738 6 739 2 902 4 387 4 203 2 581 2 389 2 586 4 587 4 398 6 588 4 908 2 217 2 910 6 1083 2 1084 2 1088 2 752 10 600 2 412 2 50 6 1252 2 922 2 1254 2 416 4 1255 12 1092 2 1096 10 926 2 609 2 417 2 237 52 419 2 759 4 64 2 933 2 934 2 68 6 616 2 244 2 617 2 70 2 1107 2 1274 2 1275 2 248 6 1108 2 1109 2 772 2 1112 2 628 2 78 2 79 2 952 2 953 2 1286 2 86 12 88 4 265 6 93 2 963 2 1292 2 96 2 97 6 786 4 1130 4 459 2 272 2 968 6 646 12 99 2 279 24 102 6 1301 10 790 4 791 4 976 2 284 2 286 2 802 2 291 2 475 2 806 10 983 2 297 4 119 2 1314 2 1316 6 810 2 122 2 811 8 124 6 816 4 818 2 482 6 1322 8 819 4 489 2 1158 2 1328 2 825 6 1001 2 1330 6 135 12 1161 6 496 4 830 6 831 2 1162 2 1004 2 1005 16 143 4 501 2 1167 12 1168 2 837 4 1176 6 147 2 1346 2 503 2 322 4 508 2 510 2 691 4 1014 2 1186 12 328 10 517 2 1355 4 1027 2 858 2 1360 8 862 2 346 6 164 4 868 8 1206 2 1035 2 351 2 1207 2 534 2 870 2 1038 2 535 2 711 2 873 2 
540 2 1161 4 517 2 1162 2 96 2 475 2 806 6 1005 4 297 2 9 2 1217 2 1316 6 143 2 1109 2 412 2 272 2 124 2 858 2 772 2 1360 2 416 4 790 2 164 4 1301 6 581 2 819 4 78 2 1206 2 926 2 1207 2 510 2 1158 2 237 4 691 2 1014 2 
540 2 358 2 96 2 9 2 639 2 178 6 1217 2 786 3 459 2 272 2 723 2 99 2 279 24 790 2 1301 6 791 4 1056 2 283 2 189 4 286 2 24 2 894 2 568 6 475 2 806 6 297 2 1316 6 1319 2 811 2 124 2 816 3 1322 6 902 4 581 2 819 4 586 2 1158 2 1161 2 831 2 1162 2 1004 2 1083 2 1005 4 1084 2 1088 2 752 4 143 2 412 2 501 2 837 4 1254 2 1176 4 416 4 1255 8 605 2 147 2 1346 2 61 2 926 2 609 2 510 2 237 28 691 2 1014 2 419 2 933 2 517 2 763 3 68 6 617 2 70 2 1355 3 1275 2 1108 2 1109 2 858 2 772 2 1360 2 626 2 862 2 628 2 949 2 78 2 1206 2 79 2 1035 2 1207 2 710 2 953 2 
540 2 1161 10 1162 2 358 2 96 2 1005 6 1084 2 9 2 1088 2 178 4 1217 2 1130 2 143 4 412 2 272 2 1168 2 416 4 279 6 1092 2 1301 6 790 2 147 2 322 2 976 2 926 2 510 2 237 12 691 4 189 2 1014 2 759 4 419 2 286 2 517 2 70 2 475 2 115 2 806 6 297 4 1274 2 1316 8 810 2 1109 2 124 4 858 2 772 2 1360 4 1112 2 902 2 164 8 581 2 819 4 78 2 1206 2 1207 2 1328 2 1158 2 953 2 1286 2 711 2 
540 2 1161 10 1162 2 358 2 96 2 1005 8 1084 2 9 2 1088 2 178 4 1217 2 1130 2 143 4 412 2 272 2 1168 2 1172 2 279 6 416 4 1092 2 1301 6 790 2 147 2 322 2 688 4 976 2 926 2 510 2 237 12 189 2 691 4 1014 2 759 4 419 2 286 2 517 2 70 2 475 2 806 8 297 4 1274 2 1316 8 810 2 1109 2 813 2 124 4 772 2 1360 4 1112 2 902 2 164 8 581 2 819 4 78 2 1206 2 952 2 1207 2 1328 2 1158 2 953 2 1286 2 711 2 
475 2 1014 2 405 2 
475 2 1014 2 405 2 
540 4 88 4 358 2 9 4 1128 2 178 6 1217 2 1130 2 459 2 1053 2 889 2 279 16 462 2 1301 12 790 4 791 4 561 2 18 2 565 2 189 4 286 2 24 2 110 2 894 2 730 2 979 4 568 2 475 4 806 12 297 2 1316 6 810 2 811 2 124 4 1322 2 387 4 902 4 1326 2 819 4 1242 1 389 4 489 4 309 2 586 6 587 4 1328 2 400 2 1161 6 496 2 831 2 1162 2 405 2 1004 2 1083 2 1005 16 1084 2 752 4 143 2 501 2 1168 2 837 4 1254 2 1174 2 416 4 1255 2 841 4 1094 2 147 2 1346 2 322 4 1096 4 417 2 609 2 237 24 1100 2 691 2 1014 6 759 4 419 2 328 4 933 2 1023 2 68 6 698 2 937 4 1024 2 617 2 70 2 1355 2 1274 2 1275 2 1108 2 74 2 772 2 344 2 1360 4 862 2 628 2 164 4 79 2 1206 2 1035 2 952 4 953 2 711 2 873 2 
276 2 889 2 113 2 279 2 496 2 1094 2 976 2 309 2 1128 2 508 2 752 2 237 4 811 2 535 2 10 2 1219 2 286 2 
540 4 88 4 358 2 9 4 1128 2 178 6 1217 2 1130 4 459 2 1053 2 889 2 279 16 462 2 1301 12 790 4 791 4 561 2 18 2 108 2 565 2 189 4 286 2 24 2 894 2 730 2 979 4 568 2 473 2 475 4 806 12 297 2 1316 6 810 2 124 4 1322 2 387 4 902 4 819 4 389 4 489 4 131 2 309 2 586 6 587 4 1328 2 214 2 1161 6 831 2 1162 2 405 2 1004 2 1083 2 1005 16 1084 2 752 2 143 2 501 2 1168 2 837 4 1254 2 1174 4 416 4 1255 2 841 4 1094 2 147 2 1346 2 322 4 1096 4 417 2 609 2 237 24 1100 2 691 2 1014 6 759 4 419 2 328 4 933 2 519 2 68 6 698 2 937 4 1024 2 617 2 70 2 1355 4 1274 2 1275 2 1108 2 74 2 772 2 344 2 1360 4 1112 2 862 2 628 2 164 4 79 2 1206 2 1035 2 952 4 953 2 711 2 873 2 
540 4 88 4 358 2 9 4 1128 2 178 6 1217 2 1130 4 459 2 1053 2 889 2 279 16 462 2 1301 12 790 4 791 4 561 2 18 2 565 2 189 4 285 2 286 2 24 2 894 2 730 2 979 4 568 2 475 4 806 12 297 2 1316 6 810 2 811 2 124 4 1322 2 387 4 902 4 819 4 389 4 1242 1 489 4 309 2 586 6 587 4 1328 2 132 2 493 2 1161 6 496 2 831 2 1162 2 405 2 1004 2 1083 2 1005 16 1084 2 752 4 143 2 501 2 1168 2 837 4 1254 2 1174 2 416 4 1255 2 841 4 1094 2 147 2 1346 2 322 4 1096 4 417 2 609 2 237 24 1100 2 691 2 1014 6 759 4 419 2 930 2 328 4 933 2 68 6 698 2 937 4 1024 2 617 2 70 2 1355 2 1274 2 1275 2 1108 2 74 2 772 2 344 2 1360 4 1112 2 862 2 628 2 1363 2 164 4 79 2 1206 2 1035 2 952 4 953 2 711 2 873 2 
0 2 354 2 1044 2 880 2 716 2 358 2 171 2 359 2 174 4 176 2 1046 2 547 10 178 6 1048 44 363 12 886 2 1050 2 364 2 11 2 14 2 182 3 556 2 725 2 1221 2 558 2 369 2 17 2 892 14 1056 2 370 4 187 4 1225 2 189 4 564 2 22 4 23 2 24 2 27 2 895 2 568 14 1063 3 898 2 569 2 1228 2 899 2 571 4 30 2 382 2 1233 2 575 2 902 4 579 2 203 2 904 2 742 2 582 2 1239 2 1241 2 389 2 1076 2 206 6 1077 4 1078 2 585 2 743 2 586 2 209 2 588 18 212 6 1244 2 909 2 407 2 914 2 748 2 1082 12 1083 9 408 8 750 2 1084 2 1249 2 1087 2 752 2 917 2 602 12 53 2 922 2 1254 4 1255 28 58 2 756 6 59 1 925 2 1096 22 608 2 1097 2 61 2 609 2 928 8 237 64 1099 16 419 2 1102 2 64 4 933 2 763 2 936 2 68 43 69 14 617 9 618 2 425 2 70 2 1270 2 1272 2 1275 4 249 2 1108 6 1279 2 433 2 435 2 773 4 948 2 628 6 253 2 1283 2 951 2 438 14 629 4 79 2 631 2 441 14 80 2 1116 14 83 2 777 2 953 2 636 12 90 2 91 2 781 2 958 2 92 22 93 2 962 2 963 2 95 2 452 2 1292 2 783 2 457 4 639 2 967 2 640 3 267 2 269 2 642 2 786 16 459 4 460 2 647 8 273 2 98 2 99 2 279 52 464 3 791 20 1139 2 106 12 659 2 468 2 1307 2 286 2 1142 2 109 4 111 2 291 2 471 1 981 4 1311 2 294 2 804 4 670 4 983 2 1147 4 298 2 1146 2 985 4 119 2 478 2 988 8 989 2 1150 2 815 2 125 6 816 19 817 4 818 2 126 4 1322 14 303 2 1151 2 1324 3 484 2 128 2 487 2 1154 2 310 2 822 2 997 2 492 2 1329 4 1000 2 828 1 133 2 1331 8 137 2 831 2 1335 4 680 2 1004 2 835 12 142 2 682 4 501 2 837 18 838 2 1176 12 1344 2 1345 2 145 4 685 4 502 6 1346 2 147 2 686 2 503 2 1179 2 323 2 1180 2 1349 4 505 2 1351 2 1182 14 327 2 1019 2 328 23 1020 2 152 10 330 4 852 2 696 2 1022 2 855 4 1191 2 334 2 1355 19 156 2 1195 2 525 4 1358 12 526 14 702 4 1199 4 1200 14 342 2 1201 2 862 2 345 2 1031 4 865 2 866 2 1362 2 1204 2 165 2 706 3 708 4 709 2 530 2 1035 2 869 2 352 18 170 2 710 2 871 2 1208 2 872 10 537 2 874 14 
152 2 568 2 1063 2 1355 2 1249 2 1146 2 547 2 1048 6 786 2 1150 2 53 2 816 2 99 2 575 2 1176 2 1322 2 279 2 1255 2 1344 2 184 2 631 2 209 2 237 2 872 4 
152 2 568 2 1063 2 1355 2 1249 2 1146 2 547 2 1048 6 786 2 1150 2 53 2 816 2 99 2 575 2 1176 2 1322 2 279 2 1255 2 1344 2 184 2 631 2 209 2 237 2 872 4 
152 2 568 2 1063 2 1355 2 1249 2 1146 2 547 2 1048 6 786 2 1150 2 53 2 816 2 99 2 575 2 1176 2 1322 2 279 2 1255 2 1344 2 184 2 631 2 209 2 237 2 872 4 
109 2 330 2 567 2 403 2 192 4 1335 2 804 2 1355 3 408 2 174 2 525 2 177 4 835 4 1249 2 641 4 199 2 270 2 988 2 946 2 816 3 99 2 279 4 1324 3 1255 2 127 4 182 3 756 4 1302 3 844 2 1055 2 1077 2 206 6 441 4 1037 4 928 2 1329 2 237 10 611 2 999 2 893 2 
403 2 1335 2 408 2 174 2 1249 2 835 4 177 4 641 4 270 2 1051 2 99 2 279 4 1255 2 182 2 756 4 844 2 1302 2 1349 2 1055 2 928 2 237 10 611 2 893 2 109 2 330 2 567 2 192 4 804 2 1355 2 525 2 199 2 988 2 816 2 946 2 1324 2 127 4 206 6 1077 2 441 4 1037 4 1329 2 212 2 999 2 
403 2 1335 2 408 2 174 2 1249 2 835 4 177 4 641 4 270 2 1051 2 99 2 279 4 1255 2 182 2 756 4 844 2 1302 2 1349 2 1055 2 928 2 237 10 611 2 893 2 109 2 330 2 567 2 192 4 804 2 1355 2 525 2 199 2 988 2 816 2 946 2 1324 2 127 4 206 6 1077 2 441 4 1037 4 1329 2 212 2 999 2 
403 2 1335 2 408 2 174 2 1249 2 835 4 177 4 641 4 270 2 1051 2 99 2 279 4 1255 2 182 2 756 4 844 2 1302 2 1349 2 1055 2 928 2 237 10 611 2 893 2 109 2 330 2 567 2 192 4 804 2 1355 2 525 2 199 2 988 2 816 2 946 2 1324 2 127 4 206 6 1077 2 441 4 1037 4 1329 2 212 2 999 2 
403 2 1335 2 408 2 174 2 1249 2 835 4 177 4 641 4 270 2 1051 4 99 2 279 4 1255 2 182 2 756 4 844 2 1302 2 1349 4 1055 2 928 2 237 10 611 2 893 2 109 2 330 2 567 2 192 4 804 2 1355 2 525 2 199 2 988 2 816 2 946 2 1324 2 127 4 206 6 1077 2 441 4 1037 4 1329 2 212 4 999 2 
1269 2 1272 2 1320 2 485 2 62 2 437 2 
190 2 888 2 163 2 418 2 221 2 636 2 437 2 
432 1 201 2 1235 1 365 1 28 2 279 8 1113 2 290 2 305 2 266 2 1205 2 147 2 524 1 8 2 1126 2 410 2 159 2 744 1 237 10 672 2 1017 2 
109 2 331 2 1335 5 804 5 408 6 525 5 835 11 1046 2 300 2 988 6 51 2 753 2 1051 4 945 2 279 6 1031 2 604 4 502 3 629 1 756 4 148 2 1349 6 1350 2 324 1 1077 5 441 12 170 2 928 6 237 6 187 2 212 6 261 2 
542 2 664 2 279 1 192 2 332 2 15 2 1227 2 333 6 195 2 984 4 689 2 1037 2 641 2 1166 2 120 2 737 2 237 1 814 1 
542 2 664 2 192 2 332 2 15 2 1227 4 333 6 195 2 984 4 689 2 1037 2 641 2 1166 4 120 4 737 2 
542 6 664 8 279 1 192 2 332 2 15 2 1227 8 333 10 195 2 984 4 689 2 1037 2 641 2 1166 8 120 8 737 2 237 1 814 1 
192 2 332 2 15 2 1227 2 333 2 195 2 984 2 689 2 1037 2 641 2 1166 2 120 2 737 2 
956 10 0 2 1044 6 965 2 783 4 457 4 642 4 1297 4 273 4 970 4 11 8 1054 4 279 62 464 3 791 32 657 2 467 2 17 4 892 16 370 6 1142 4 287 4 728 2 981 12 474 10 571 11 1147 6 985 6 986 4 30 4 989 4 33 4 126 12 1151 4 1071 16 904 4 994 2 1153 4 208 2 308 4 1078 6 828 1 133 4 1080 10 407 4 1247 2 1083 13 1163 16 598 2 917 4 919 4 229 2 144 2 837 28 838 4 1254 2 684 2 233 2 59 3 323 4 237 70 328 15 515 16 1019 4 1265 4 68 67 615 2 1189 2 855 10 617 13 334 4 940 1 156 4 1270 4 1108 6 702 12 942 2 433 4 342 2 773 6 1201 4 1202 4 628 6 951 4 1036 4 350 2 869 4 352 20 871 4 444 2 777 2 1120 4 537 4 1042 4 
1160 2 0 2 959 2 1044 2 1083 6 914 2 967 2 598 2 642 2 229 2 837 10 1254 2 279 20 58 2 791 10 657 2 323 2 59 2 925 2 892 6 370 4 237 22 328 12 895 2 68 32 615 2 855 2 617 6 569 2 571 2 1147 4 985 2 1108 2 989 2 815 2 342 2 773 4 628 2 904 2 1204 2 165 2 994 2 1242 2 350 2 208 2 1078 2 352 6 397 2 777 2 1000 2 
1160 2 828 2 0 2 133 2 1044 1 965 2 407 2 914 2 783 2 317 2 1083 6 457 4 967 2 598 2 642 2 917 2 1050 2 229 2 837 16 273 2 838 2 1254 4 11 2 279 34 58 2 791 18 323 2 59 2 657 2 925 2 467 2 17 2 892 14 370 4 237 38 1307 2 23 1 1019 2 1142 2 328 4 895 2 68 38 981 4 855 4 617 6 569 2 334 2 571 4 156 2 1147 4 1270 2 30 2 985 4 1108 6 702 4 989 2 815 2 433 2 342 2 773 4 1201 2 126 4 303 2 1151 2 579 1 628 6 128 2 904 2 1204 2 165 2 951 2 438 2 350 2 869 2 1078 2 352 8 822 2 871 2 1116 2 777 2 1000 2 537 2 
955 2 956 2 0 2 959 2 1080 2 1212 2 43 2 911 2 453 2 140 2 1082 6 1083 6 914 2 224 2 1085 2 175 2 967 2 1165 2 598 2 642 2 1131 2 229 2 837 20 1254 2 652 2 279 44 555 2 1345 4 183 2 1178 2 58 2 233 2 791 20 59 2 323 2 1136 2 657 2 925 2 847 2 1012 2 892 6 507 2 237 46 370 4 328 36 728 2 240 4 613 2 978 2 289 2 895 2 68 48 855 2 474 2 617 6 1145 2 571 2 198 2 1147 4 985 2 769 2 1197 2 1108 2 121 2 989 2 161 2 1276 2 815 2 1359 2 771 2 342 2 773 4 347 2 1237 2 628 2 1203 2 904 2 165 6 994 2 1242 2 205 4 350 2 169 2 1078 2 775 2 396 2 397 2 491 2 826 4 777 2 312 2 
336 2 
341 1 1091 1 1295 1 809 1 84 1 1352 1 
341 1 1091 1 1295 1 809 1 84 1 1352 1 
341 1 1091 1 1295 1 809 1 84 1 1352 1 
341 1 1091 1 1295 1 809 1 84 1 1352 1 
341 1 1091 1 1295 1 809 1 84 1 1352 1 
341 1 1091 1 1295 1 809 1 84 1 1352 1 
341 1 1091 1 1295 1 809 1 84 1 1352 1 
341 1 1091 1 1295 1 809 1 84 1 1352 1 
341 1 1091 1 1295 1 809 1 84 1 1352 1 
341 1 1091 1 1295 1 809 1 84 1 1352 1 
341 1 1091 1 1295 1 809 1 84 1 1352 1 
341 1 1091 1 1295 1 809 1 84 1 1352 1 
341 1 1091 1 1295 1 809 1 84 1 1352 1 
341 1 1091 1 1295 1 809 1 84 1 1352 1 
341 1 1091 1 1295 1 809 1 84 1 1352 1 
341 1 1091 1 1295 1 809 1 84 1 1352 1 
341 1 1091 1 1295 1 809 1 84 1 1352 1 
341 1 1091 1 1295 1 809 1 84 1 1352 1 
341 1 1091 1 1295 1 809 1 84 1 1352 1 
341 1 1091 1 1295 1 809 1 84 1 1352 1 
341 1 1091 1 1295 1 809 1 84 1 1352 1 
341 1 1091 1 1295 1 809 1 84 1 1352 1 
341 1 1091 1 1295 1 809 1 84 1 1352 1 
341 1 1091 1 1295 1 809 1 84 1 1352 1 
341 1 1091 1 1295 1 809 1 84 1 1352 1 
341 1 1091 1 1295 1 809 1 84 1 1352 1 
341 1 1091 1 1295 1 809 1 84 1 1352 1 
341 1 1091 1 1295 1 809 1 84 1 1352 1 
341 1 1091 1 1295 1 809 1 84 1 1352 1 
341 1 1091 1 1295 1 809 1 84 1 1352 1 
341 1 1091 1 1295 1 809 1 84 1 1352 1 
341 1 1091 1 1295 1 809 1 84 1 1352 1 
341 1 1091 1 1295 1 809 1 84 1 1352 1 
341 1 1091 1 1295 1 809 1 84 1 1352 1 
341 1 1091 1 1295 1 809 1 84 1 1352 1 
341 1 1091 1 1295 1 809 1 84 1 1352 1 
341 1 1091 1 1295 1 809 1 84 1 1352 1 
341 1 1091 1 1295 1 809 1 84 1 1352 1 
341 1 1091 1 1295 1 809 1 84 1 1352 1 
341 1 1091 1 1295 1 809 1 84 1 1352 1 
341 1 1091 1 1295 1 809 1 84 1 1352 1 
341 1 1091 1 1295 1 809 1 84 1 1352 1 
341 1 1091 1 1295 1 809 1 84 1 1352 1 
341 1 1091 1 1295 1 809 1 84 1 1352 1 

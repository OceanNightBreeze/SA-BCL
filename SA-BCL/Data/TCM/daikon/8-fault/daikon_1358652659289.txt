#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR utilMDE.Assert$AssertionException (313,914) (313,914) 257 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 668 983 780 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 669 935 802 
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 669 935 802 
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_0()V ERROR java.lang.RuntimeException (231,757) (231,757) (533,974) (533,974) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_1()V ERROR java.lang.RuntimeException (231,757) (231,757) (533,974) (533,974) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_2()V ERROR java.lang.RuntimeException (231,757) (231,757) (533,974) (533,974) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_3()V ERROR java.lang.RuntimeException (231,757) (231,757) (533,974) (533,974) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_4()V ERROR java.lang.RuntimeException (231,757) (231,757) (533,974) (533,974) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_5()V ERROR java.lang.RuntimeException (231,757) (231,757) (533,974) (533,974) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_6()V ERROR java.lang.RuntimeException (231,757) (231,757) (533,974) (533,974) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_7()V ERROR java.lang.RuntimeException (231,757) (231,757) (533,974) (533,974) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_8()V ERROR java.lang.RuntimeException (231,757) (231,757) (533,974) (533,974) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_9()V ERROR java.lang.RuntimeException (231,757) (231,757) (533,974) (533,974) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_10()V ERROR java.lang.RuntimeException (231,757) (231,757) (533,974) (533,974) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_11()V ERROR java.lang.RuntimeException (231,757) (231,757) (533,974) (533,974) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_12()V ERROR java.lang.RuntimeException (231,757) (231,757) (533,974) (533,974) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_13()V ERROR java.lang.RuntimeException (231,757) (231,757) (533,974) (533,974) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_14()V ERROR java.lang.RuntimeException (231,757) (231,757) (533,974) (533,974) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_15()V ERROR java.lang.RuntimeException (231,757) (231,757) (533,974) (533,974) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_16()V ERROR java.lang.RuntimeException (231,757) (231,757) (533,974) (533,974) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_17()V ERROR java.lang.RuntimeException (231,757) (231,757) (533,974) (533,974) 
daikon.test.split.SplitterFactoryTest:testmisc_Fib_main_18()V ERROR java.lang.RuntimeException (231,757) (231,757) (533,974) (533,974) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_19()V ERROR java.lang.RuntimeException (231,757) (231,757) (533,974) (533,974) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_20()V ERROR java.lang.RuntimeException (231,757) (231,757) (533,974) (533,974) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_21()V ERROR java.lang.RuntimeException (231,757) (231,757) (533,974) (533,974) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_22()V ERROR java.lang.RuntimeException (231,757) (231,757) (533,974) (533,974) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_23()V ERROR java.lang.RuntimeException (231,757) (231,757) (533,974) (533,974) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_24()V ERROR java.lang.RuntimeException (231,757) (231,757) (533,974) (533,974) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_25()V ERROR java.lang.RuntimeException (231,757) (231,757) (533,974) (533,974) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_26()V ERROR java.lang.RuntimeException (231,757) (231,757) (533,974) (533,974) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_27()V ERROR java.lang.RuntimeException (231,757) (231,757) (533,974) (533,974) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_28()V ERROR java.lang.RuntimeException (231,757) (231,757) (533,974) (533,974) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_29()V ERROR java.lang.RuntimeException (231,757) (231,757) (533,974) (533,974) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_30()V ERROR java.lang.RuntimeException (231,757) (231,757) (533,974) (533,974) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_31()V ERROR java.lang.RuntimeException (231,757) (231,757) (533,974) (533,974) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_32()V ERROR java.lang.RuntimeException (231,757) (231,757) (533,974) (533,974) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__33()V ERROR java.lang.RuntimeException (231,757) (231,757) (533,974) (533,974) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__34()V ERROR java.lang.RuntimeException (231,757) (231,757) (533,974) (533,974) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__35()V ERROR java.lang.RuntimeException (231,757) (231,757) (533,974) (533,974) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__36()V ERROR java.lang.RuntimeException (231,757) (231,757) (533,974) (533,974) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__37()V ERROR java.lang.RuntimeException (231,757) (231,757) (533,974) (533,974) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__38()V ERROR java.lang.RuntimeException (231,757) (231,757) (533,974) (533,974) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__39()V ERROR java.lang.RuntimeException (231,757) (231,757) (533,974) (533,974) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__40()V ERROR java.lang.RuntimeException (231,757) (231,757) (533,974) (533,974) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__41()V ERROR java.lang.RuntimeException (231,757) (231,757) (533,974) (533,974) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__42()V ERROR java.lang.RuntimeException (231,757) (231,757) (533,974) (533,974) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__43()V ERROR java.lang.RuntimeException (231,757) (231,757) (533,974) (533,974) 

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
jtb.JavaParser:jj_3R_96()Z
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.JavaCharStream:getEndColumn()I
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.VarInfo:new_ppt()V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.VarInfoName.Elements:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.JavaCharStream:getBeginLine()I
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
jtb.JavaParser:jj_3R_89()Z
daikon.Quant:eltwiseLT([I)Z
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eq(JJ)Z
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
daikon.Quant:subsetOf([I[I)Z
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
jtb.JavaCharStream:FillBuff()V
daikon.Quant:eltwiseEqual([I)Z
jtb.JavaParser:jj_3R_57()Z
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.Quant:eltsGTE([II)Z
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.JavaParser:jj_2_4(I)Z
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
utilMDE.MathMDE:pow(II)I
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
jtb.JavaParser:jj_3_3()Z
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_2_35(I)Z
jtb.JavaParser:jj_3R_134()Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:gt(DD)Z
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
utilMDE.WeakHasherMap:processQueue()V
jtb.JavaCharStream:getBeginColumn()I
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
jtb.JavaParser:jj_3_24()Z
utilMDE.Intern:internSubsequence([III)[I
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:memberOf(D[F)Z
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_85()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3_15()Z
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.VarInfoName:toString()Ljava.lang.String;
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
jtb.JavaParser:jj_3R_62()Z
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.ProglangType:isArray()Z
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.Quant:lexNotEqual([I[I)Z
daikon.ProglangType:isPointerFileRep()Z
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
utilMDE.Intern:internSubsequence([JII)[J
jtb.JavaParser:jj_3R_162()Z
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
jtb.JavaParser:jj_3R_61()Z
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.Quant:subsetOf([S[S)Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
utilMDE.MathMDE:missing_numbers([I)[I
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.VarInfo:relate_var()V
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:subsetOf([D[D)Z
utilMDE.Intern.SequenceAndIndices:hashCode()I
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.ValueTuple:isMissingFlow(I)Z
jtb.JavaParser:jj_3R_55()Z
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.Quant:eltsLT([II)Z
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.Quant:subsetOf([B[I)Z
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
utilMDE.FuzzyFloat:FuzzyFloat()V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_60()Z
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.ProglangType:isScalar()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:setEqual([I[I)Z
daikon.Quant:sameLength([I[I)Z
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.Quant:eq(II)Z
daikon.Quant:ne(II)Z
jtb.JavaParser:jj_scan_token(I)Z
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.ModBitTracker:num_samples()I
daikon.Quant:lexLT([I[I)Z
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.Quant:gte(II)Z
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.Quant:subsetOf([F[F)Z
daikon.Quant:pairwiseLTE([I[I)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
jtb.JavaParser:jj_3_1()Z
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_2_21(I)Z
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
jtb.JavaParser:jj_3_12()Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
utilMDE.MathMDE:mod_positive(II)I
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.ProglangType:baseIsIntegral()Z
jtb.JavaParser:generateParseException()Ljtb.ParseException;
daikon.PptName:isEnterPoint()Z
jtb.JavaParser:jj_2_1(I)Z
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn; | ASSIGN | 107780 | = null
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
jtb.Token:newToken(I)Ljtb.Token;
jtb.JavaParser:jj_3R_50()Z
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;)Z
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
jtb.JavaParser:jj_3_14()Z
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
jtb.JavaParserTokenManager:jjStopAtPos(II)I
utilMDE.SimpleLog:SimpleLog(Z)V
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
jtb.JavaParser:jj_3_35()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.ProglangType:baseIsScalar()Z
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.PptSlice0:arity()I
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
jtb.JavaParser:jj_3R_116()Z
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.PptSlice2:arity()I
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.Quant:lte(II)Z
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
utilMDE.LimitedSizeIntSet:add(I)V
daikon.diff.RootNode:RootNode()V
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE:gcd(II)I
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
jtb.JavaParser:jj_3_5()Z
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_2_14(I)Z
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
utilMDE.Options.OptionInfo:argument_required()Z
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
utilMDE.FuzzyFloat:eq(DD)Z
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.ArraysMDE:isSubset([D[D)Z
utilMDE.OrderedPairIterator:setnext1()V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.ProglangType:baseIsFloat()Z
jtb.JavaParser:jj_3_13()Z
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
utilMDE.FuzzyFloat:lt(DD)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParser:jj_3R_48()Z
daikon.Quant:eq(FF)Z
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:sum([[D)D
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.test.FormatTestCase:getDiffString()Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3_22()Z
daikon.Quant:slice([III)[I
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_2_36(I)Z
jtb.JavaParser:jj_2_15(I)Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.inv.unary.LowerBoundCore:calc_modulus()J
jtb.JavaParser:jj_3R_76()Z
utilMDE.MathMDE:pow_fast(II)I
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.Quant:memberOf(I[I)Z
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.ValueTuple:isMissing(I)Z
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.Quant:pairwiseLT([I[I)Z
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.ValueTuple:size()I
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
jtb.JavaParser:jj_3R_119()Z
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.inv.Invariant:prob_and(DD)D
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParser:jj_3R_115()Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.inv.Invariant:logDetail()Z
daikon.inv.filter.InvariantFilters:InvariantFilters()V
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.diff.Node:Node()V
daikon.Quant:pairwiseNotEqual([I[I)Z
utilMDE.UtilMDE:lineNumberFileReader(Ljava.io.File;)Ljava.io.LineNumberReader;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
utilMDE.ArraysMDE:concat([I[I)[I
daikon.Quant:memberOf(F[D)Z
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.Quant:subsetOf([J[J)Z
daikon.Quant:eltsLtIndex([I)Z
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
jtb.JavaParser:jj_ntk()I
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant; | RETURN | 2425 | return null
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:min_max([I)[I
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
utilMDE.MathMDE:gcd(JJ)J
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:subarray([JII)[J
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.ModBitTracker:num_vars()I
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
jtb.JavaParser:jj_2_13(I)Z
daikon.inv.ValueSet:ValueSet(I)V
utilMDE.FuzzyFloat:indexOf([DD)I
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
utilMDE.ArraysMDE:max([I)I
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
utilMDE.WeakHasherMap.EntrySet:size()I
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.PptSlice0:initInvariantsSeen()V
jtb.JavaParser:jj_3R_51()Z
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.Quant:eltsEqual([II)Z
daikon.inv.Invariants:Invariants()V
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
jtb.JavaParser:jj_3R_87()Z
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
utilMDE.SimpleLog.LongVal:LongVal(J)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_114()Z
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.Quant:eltsGT([II)Z
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfo:dbc_name()Ljava.lang.String; | RETURN | 99658 | return null
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Add:amount()Ljava.lang.String;
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoName:name()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ValueTuple:tuplemodHasModified(I)Z
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
jtb.JavaParser:jj_3R_88()Z
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3_16()Z
daikon.Quant:memberOf(F[F)Z
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:lte(DD)Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
jtb.JavaParser:jj_3R_163()Z
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
jtb.ParseException:ParseException(Ljava.lang.String;)V
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;)V
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eltwiseGT([I)Z
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern:intern([J)[J
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_69()Z
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
jtb.JavaParser:jj_3_21()Z
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
utilMDE.MathMDE:negate(I)I
daikon.Quant:intersection([I[I)[I
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.ModBitTracker:ModBitTracker(I)V
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
jtb.JavaParser:jj_3R_121()Z
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
utilMDE.MathMDE:modulus([I)[I
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
jtb.JavaParser:jj_2_24(I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
jtb.syntaxtree.NodeList:NodeList()V
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.UpperBoundCore:computeConfidence()D
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.inv.Invariant:logOn()Z
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.Quant:eltsGtIndex([I)Z
jtb.JavaParser:jj_3R_120()Z
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:eltsGteIndex([I)Z
daikon.ModBitTracker:split(I)I
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.ProglangType:dimensions()I
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:sum([[I)I
jtb.JavaParser:jj_3_4()Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:isFloat()Z
utilMDE.ArraysMDE:sorted([I)Z
jtb.JavaParser:jj_3R_81()Z
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
jtb.JavaCharStream:ReadByte()C
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
jtb.JavaParser:jj_3R_56()Z
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_135()Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
daikon.Quant:lt(II)Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.test.FormatTestCase:passes()Z
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
utilMDE.Intern:intern([I)[I
utilMDE.WeakHasherMap:size()I
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.LimitedSizeIntSet:size()I
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:isWorthPrinting()Z
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.PptSlice1:num_samples()I
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.PptSlice1:arity()I
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
jtb.JavaParser:jj_2_10(I)Z
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
jtb.JavaParser:jj_3R_133()Z
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.inv.Invariant:justified()Z
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Quant:subsetOf([D[F)Z
daikon.Quant:eltsEqualIndex([I)Z
daikon.VarInfoName:ioa_name()Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.PptName:isCombinedExitPoint()Z
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:repr()Ljava.lang.String;
jtb.JavaParser:jj_3R_68()Z
daikon.Quant:lexEqual([I[I)Z
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
jtb.JavaParser:jj_3_36()Z
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.UpperBound:enabled()Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.MathMDE:gcd([I)I
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object; | RETURN | 21115 | return null
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.InvMap:InvMap()V
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
utilMDE.UtilMDE:lineNumberFileReader(Ljava.lang.String;)Ljava.io.LineNumberReader;
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;Z)Z
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.Quant:isReverse([I[I)Z
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:pairwiseEqual([I[I)Z
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_2_12(I)Z
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.VarInfo:name()Ljava.lang.String;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:lexGT([I[I)Z
utilMDE.ArraysMDE:element_range([I)I
daikon.test.InvariantFormatTester:execute()Z
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.ParseException:getMessage()Ljava.lang.String;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
jtb.JavaParser:jj_3R_63()Z
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.Quant:memberOf(J[J)Z
daikon.Quant:eq(DD)Z
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_2_5(I)Z
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase.SingleOutputTestCase:getDiffString()Ljava.lang.String;
utilMDE.MathMDE:gcd_differences([I)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
jtb.JavaParser:jj_3R_75()Z | CONDITION | 195429 | if (x) -> if (!x)
jtb.JavaParser:jj_3R_97()Z
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.Quant:gt(II)Z
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
jtb.JavaCharStream:getEndLine()I
jtb.syntaxtree.NodeToken:trimSpecials()V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
jtb.JavaParser:jj_2_3(I)Z
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.Quant:noDups([I)Z
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.Quant:pairwiseGT([I[I)Z
jtb.JavaParser:jj_3R_122()Z
utilMDE.FuzzyFloat:gte(DD)Z
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
utilMDE.ArraysMDE:noDuplicates([I)Z
jtb.JavaParser:jj_2_16(I)Z
daikon.Debug:logOn()Z
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:lexGTE([I[I)Z
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.config.Configuration:apply(Ljava.lang.String;)V
jtb.JavaParser:jj_3R_53()Z
daikon.Quant:concat([I[I)[I
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltsLteIndex([I)Z
jtb.JavaParser:jj_3R_47()Z
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
daikon.VarInfo:simplify_name()Ljava.lang.String;
jtb.JavaParser:jj_3R_148()Z
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
utilMDE.Intern:numIntArrays()I
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
utilMDE.OrderedPairIterator:hasNext()Z
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.diff.Node:add(Ljava.lang.Object;)V
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
utilMDE.ArraysMDE:sum([I)I
daikon.Quant:subsetOf([F[D)Z
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltwiseLTE([I)Z
daikon.inv.unary.scalar.NonModulus:updateResults()V
utilMDE.ArraysMDE:sum([D)D
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.JavaCharStream:backup(I)V
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.inv.unary.scalar.Positive:enabled()Z
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
utilMDE.MathMDE:sign(I)I
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([II)I
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.Quant:eltsNotEqual([II)Z
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
utilMDE.Assert:assertTrue(Z)V
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_118()Z
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
jtb.JavaParser:jj_3R_49()Z
daikon.PptTopLevel:name()Ljava.lang.String;
jtb.JavaParser:CastExpression()Ljtb.syntaxtree.CastExpression;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:isIntegral()Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:jj_3R_123()Z
jtb.JavaParser:jj_3R_86()Z
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.Quant:lexLTE([I[I)Z
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.Quant:union([I[I)[I
daikon.Quant:setDiff([I[I)[I
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
utilMDE.ArraysMDE:min([I)I
daikon.ModBitTracker:num_sets()I
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3_10()Z
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
jtb.JavaParserTokenManager:MoreLexicalActions()V
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_54()Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.VarInfoName:hashCode()I
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.Quant:pairwiseSquare([I[I)Z
daikon.ProglangType:isPseudoArray()Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.Invariant:prob_and(DDD)D
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.Quant:memberOf(S[S)Z
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
jtb.JavaCharStream:BeginToken()C
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Invariant:getConfidence()D
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.MathMDE:mod_positive(JJ)J
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.Quant:eltwiseNotEqual([I)Z
utilMDE.ArraysMDE:subarray([III)[I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_52()Z
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
daikon.VarInfo:isPointer()Z
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
jtb.JavaCharStream:readChar()C
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.Quant:eltsLTE([II)Z
daikon.Ppt:Ppt()V
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.Debug:logDetail()Z
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat:indexOf([D[D)I
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:eltwiseGTE([I)Z
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.PptTopLevel:getInvariants()Ljava.util.List;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.OrderedPairIterator:setnext2()V
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.Quant:pairwiseDivides([I[I)Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
jtb.JavaParser:jj_3R_58()Z
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
jtb.JavaParser:jj_3R_161()Z
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.FuzzyFloat:ne(DD)Z
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
daikon.VarInfoName:esc_name()Ljava.lang.String;
jtb.JavaParser:jj_3R_117()Z
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.inv.Invariant:prob_or(DD)D
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.inv.filter.ObviousFilter:ObviousFilter()V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
914 2 269 2 146 2 313 2 470 2 1022 2 116 2 710 2 683 4 
662 2 376 2 12 6 909 2 704 2 274 2 871 2 296 6 690 2 193 2 1066 6 
300 2 820 6 914 2 313 2 10 6 433 4 898 6 842 2 1076 6 961 2 482 4 131 2 39 2 
112 2 908 4 680 6 548 6 225 2 8 8 631 10 914 6 448 12 313 6 986 2 352 10 130 8 240 2 1092 8 92 26 278 10 1032 2 194 16 62 10 573 4 641 8 331 16 67 10 899 29 434 2 1047 4 74 2 1006 4 706 16 
406 6 30 4 
882 2 
709 2 1050 2 774 2 914 4 313 4 839 2 450 2 163 2 779 2 319 4 602 2 326 2 98 2 532 2 618 2 536 2 621 2 799 2 679 2 177 2 951 2 116 2 402 2 875 2 350 2 878 2 638 2 566 2 885 2 281 2 1032 2 135 2 365 4 491 2 970 2 494 2 423 4 893 2 71 2 643 2 1044 2 825 2 902 4 295 2 
748 2 205 2 
292 2 135 2 731 2 
303 2 574 2 65 2 721 2 1082 10 837 2 122 2 290 22 447 2 517 2 518 2 1056 2 357 2 799 2 
680 2 867 2 681 2 869 2 804 2 631 2 448 2 712 2 352 4 452 2 278 2 1092 2 92 4 194 2 62 2 692 2 288 2 331 2 67 2 899 6 1047 2 828 2 706 2 
568 6 908 2 378 2 924 2 194 8 62 4 331 8 791 4 67 4 631 4 448 5 1002 4 899 15 744 6 278 4 92 12 706 8 
219 14 545 2 263 2 304 4 1 4 349 2 49 2 50 2 451 2 159 62 317 4 125 2 559 2 779 4 276 10 808 4 746 2 280 2 135 8 244 4 667 2 530 2 1036 2 287 2 423 4 531 4 893 2 577 2 1103 10 1039 4 754 2 793 4 758 4 292 2 582 2 615 4 941 4 900 2 77 2 731 6 
475 2 273 2 846 2 239 2 882 2 930 2 23 2 286 2 204 2 855 2 
830 2 444 2 306 3 446 2 6 1 152 14 7 2 156 3 711 2 9 2 313 32 989 2 841 2 162 1 843 4 168 2 850 2 322 2 716 1 169 2 20 2 330 1 336 2 724 6 468 4 623 1 470 2 626 2 345 1 627 2 346 2 188 2 1018 2 737 2 738 2 1026 2 485 1 745 2 359 2 492 2 888 4 197 1 198 2 752 2 1034 6 202 2 368 2 206 2 209 1 1046 6 371 2 214 2 907 3 78 2 217 1 380 2 221 12 83 8 513 1 514 1 914 30 775 1 776 2 1060 6 923 1 1068 5 665 1 245 6 929 2 246 3 249 2 101 6 934 6 394 1 792 1 938 2 255 2 257 2 677 2 950 2 267 1 1088 2 124 6 409 2 410 2 272 2 127 2 689 2 563 2 964 2 565 2 415 2 811 8 416 2 967 4 569 2 1099 2 693 4 429 1 141 1 
313 2 645 2 
313 4 975 2 384 2 
1087 2 
829 2 587 14 586 2 589 2 834 4 2 6 836 8 309 4 5 46 840 4 598 8 17 34 321 40 851 4 19 20 21 46 608 2 25 2 333 4 853 22 27 2 337 2 858 4 856 2 32 2 616 2 619 2 37 2 40 2 861 6 343 2 344 2 866 2 42 2 44 4 348 8 874 46 48 2 636 4 53 2 639 2 57 16 60 2 61 4 889 46 63 2 68 46 369 2 73 2 647 146 374 8 81 2 911 24 85 4 86 10 652 2 654 4 656 2 658 14 917 2 387 2 661 4 91 8 93 2 920 20 95 2 922 8 389 2 663 2 926 4 928 2 99 2 393 2 675 4 939 8 106 2 676 4 940 2 942 46 108 2 109 2 113 4 115 2 955 4 117 4 956 6 686 4 405 2 687 2 960 2 959 2 126 2 411 2 963 4 413 24 412 2 133 4 691 12 417 22 418 2 421 46 426 2 427 20 430 2 432 2 976 14 702 2 435 46 705 4 149 2 440 28 445 4 982 34 157 2 991 46 165 2 714 4 994 14 456 4 170 2 171 2 725 6 1007 24 730 2 1009 2 471 2 1014 4 1015 2 183 178 474 2 1017 2 735 2 476 8 736 10 1020 2 481 2 1031 146 489 16 199 4 1035 2 203 46 1043 48 1045 2 498 2 502 2 211 2 762 4 503 2 216 6 215 2 507 4 222 2 224 4 771 2 773 2 229 46 230 4 233 8 519 4 238 20 1062 36 784 2 243 2 526 2 1067 2 527 2 1073 4 786 2 251 8 795 2 1080 4 550 2 1085 8 1083 2 806 4 555 10 557 2 271 2 561 12 562 146 564 2 567 8 1094 2 812 2 282 2 813 2 814 6 284 4 571 2 1102 2 1104 4 821 2 583 2 584 2 826 46 827 2 299 8 
397 2 161 1 181 2 174 2 
181 2 671 2 
135 2 560 2 72 2 599 2 355 2 181 2 1006 2 
355 2 181 2 173 2 
33 2 355 2 181 2 
765 2 182 2 174 2 
355 2 181 2 
182 2 467 2 
181 2 905 2 
770 2 182 2 174 2 
191 2 364 2 174 2 
196 2 816 2 174 2 
835 2 259 2 174 2 
664 2 904 2 174 2 
43 2 182 2 
1005 2 181 2 
191 2 26 2 
816 2 883 2 
259 2 541 2 
664 2 1058 2 
719 2 182 2 
664 2 610 2 
597 2 259 2 
857 2 816 2 
191 2 408 2 
726 2 770 2 182 2 174 2 
726 2 770 2 182 2 103 2 174 2 
1069 2 182 2 174 2 
971 2 182 2 174 2 
134 2 628 2 424 2 428 2 
135 2 400 2 72 2 852 2 
135 2 400 2 72 2 599 2 852 2 946 2 
135 2 72 2 355 2 181 2 1006 2 947 2 
839 2 831 2 
338 2 135 2 72 2 1006 2 
483 2 259 2 
664 2 46 2 
142 2 191 2 
1033 2 816 2 
664 2 816 2 187 2 
664 2 816 2 943 2 
664 2 816 2 778 2 
664 2 816 2 844 2 
449 2 1095 6 135 2 575 2 894 2 72 2 727 6 945 2 
248 2 182 2 
195 2 508 2 718 2 981 2 401 2 789 2 310 2 790 4 28 2 121 2 290 6 155 2 876 2 407 4 129 2 977 2 600 2 79 2 
174 2 1063 2 
677 2 
830 2 147 2 150 2 446 2 152 4 7 2 711 2 313 26 841 2 990 2 455 2 168 2 169 6 606 2 716 4 607 2 336 2 724 4 462 4 1004 2 341 2 468 4 623 2 470 2 626 2 625 2 627 2 184 2 1018 2 737 2 1026 2 880 2 879 2 745 2 888 4 492 8 1034 6 368 2 1040 2 759 2 1046 2 903 2 75 2 214 2 380 2 221 6 228 2 914 26 1054 2 385 2 776 8 1071 2 925 2 249 2 934 6 792 2 797 2 257 2 264 2 404 2 1088 2 1089 2 124 2 409 2 127 2 563 2 416 2 967 4 569 2 1099 2 1100 4 1101 4 420 2 693 4 699 2 824 2 
830 2 147 2 0 2 150 2 446 2 152 4 7 2 711 2 313 26 989 2 841 2 455 2 168 2 169 6 606 2 716 2 336 2 854 2 724 6 462 4 1004 2 341 2 468 4 623 2 41 2 470 2 626 2 625 2 627 2 184 2 1018 2 737 2 738 2 1026 2 880 2 879 2 745 2 888 4 492 8 1034 6 368 2 1040 2 759 2 1046 2 903 2 75 2 214 2 380 2 221 6 228 2 914 26 1054 2 385 2 776 8 1071 2 925 2 666 2 249 2 934 6 792 2 797 2 257 2 264 2 404 2 1088 2 1089 2 124 2 409 2 127 2 563 2 416 2 967 4 569 2 1099 2 1100 4 1101 4 420 2 693 4 699 2 
633 2 
717 2 787 2 
585 2 218 2 439 2 910 2 223 2 308 2 512 2 89 2 711 2 914 6 313 12 12 6 847 2 1061 2 1066 6 662 4 168 2 327 2 927 10 998 4 249 2 332 8 250 2 612 2 722 2 672 2 396 4 339 2 254 2 535 8 1003 4 728 2 258 2 678 2 468 2 262 2 626 2 118 2 549 2 871 4 1019 2 873 4 270 4 737 2 52 2 274 2 563 2 193 2 1096 2 416 2 572 2 888 2 1034 4 753 2 495 2 576 2 1037 2 895 4 208 2 296 6 
585 2 218 2 439 2 909 2 910 2 308 2 512 2 914 6 89 2 711 2 313 12 158 2 12 8 847 2 1061 2 782 2 1066 8 662 4 168 2 327 2 927 10 998 4 249 2 332 8 250 2 612 2 672 2 396 4 339 2 254 2 535 8 1003 4 728 2 258 2 678 2 468 2 262 2 1010 4 626 2 118 2 549 2 871 4 1019 2 873 4 270 4 737 2 52 2 274 2 563 2 193 2 1096 2 416 2 572 2 888 2 1034 4 753 2 495 2 576 2 1037 2 895 4 208 2 296 6 
662 2 439 2 572 2 512 2 753 2 871 2 1019 2 1037 2 612 2 895 2 270 4 208 2 396 4 339 2 254 2 296 2 678 2 1066 2 
585 2 218 2 439 2 909 2 910 2 223 2 308 2 512 2 89 2 711 2 914 6 313 12 12 6 847 2 1061 2 1066 6 662 4 168 2 327 2 927 6 998 4 249 2 332 4 250 2 612 2 722 2 672 2 396 4 339 2 254 2 535 4 1003 4 728 2 258 2 678 2 468 2 262 2 626 2 118 2 549 2 871 4 1019 2 873 4 270 4 737 2 52 2 563 2 193 2 1096 2 416 2 572 2 888 2 1034 4 753 2 495 2 576 2 1037 2 895 4 208 2 296 4 
585 2 218 2 439 2 910 2 223 2 308 2 512 2 89 2 711 2 914 6 313 12 12 6 847 2 1061 2 1066 4 662 4 168 2 327 2 927 6 998 4 249 2 332 4 250 2 612 2 722 2 672 2 396 4 339 2 254 2 535 4 1003 4 728 2 258 2 678 2 468 2 262 2 626 2 118 2 549 2 871 4 1019 2 873 4 270 4 737 2 52 2 563 2 193 2 1096 2 416 2 572 2 888 2 1034 4 753 2 495 2 576 2 1037 2 895 4 208 2 704 2 296 6 
585 2 218 2 439 2 910 2 223 2 308 2 512 2 89 2 711 2 914 6 313 12 12 6 847 2 1061 2 1066 6 662 4 168 2 327 2 927 6 998 4 249 2 332 4 250 2 612 2 722 2 672 2 396 4 339 2 254 2 535 8 1003 4 728 2 258 2 678 2 468 2 262 2 626 2 118 2 549 2 871 4 1019 2 873 4 270 4 737 2 52 2 274 2 563 2 193 2 1096 2 416 2 572 2 888 2 1034 4 753 2 495 2 576 2 1037 2 895 4 208 2 296 6 
585 2 218 2 439 2 910 2 223 2 308 2 512 2 89 2 711 2 914 6 313 12 12 8 847 2 1061 2 1066 6 662 4 168 2 327 2 927 10 998 4 249 2 332 8 250 2 612 2 722 2 672 2 396 4 339 2 254 2 535 8 1003 4 728 2 258 2 678 2 468 2 262 2 626 2 118 2 549 2 871 4 1019 2 873 4 270 4 737 2 52 2 274 2 563 2 193 2 1096 2 416 2 572 2 888 2 1034 4 753 2 495 2 576 2 1037 2 895 4 208 2 704 2 296 8 
585 2 218 2 439 2 910 2 223 2 308 2 512 2 89 2 711 2 914 6 313 12 12 6 847 2 1061 2 1066 6 662 4 168 2 327 2 927 10 998 4 249 2 332 8 250 2 612 2 722 2 672 2 396 4 339 2 254 2 535 8 1003 4 728 2 258 2 678 2 468 2 262 2 626 2 118 2 549 2 871 4 1019 2 873 4 270 4 737 2 52 2 274 2 563 2 193 2 1096 2 416 2 572 2 888 2 1034 4 753 2 495 2 576 2 1037 2 895 4 208 2 296 6 
585 2 830 2 590 10 591 2 308 2 593 2 7 2 311 1 313 46 595 4 12 12 841 12 601 6 847 2 603 7 849 2 323 8 327 2 612 2 336 2 339 2 626 2 627 2 347 6 871 4 873 6 51 6 52 2 880 2 55 2 363 2 888 4 368 2 895 4 69 2 70 2 896 1 645 6 903 2 375 1 648 2 380 2 910 2 384 6 914 24 89 2 662 4 391 2 927 2 100 1 392 1 934 6 102 6 936 2 672 2 673 2 396 4 107 2 678 2 118 2 404 2 688 2 124 2 409 2 127 2 962 2 416 2 967 4 966 6 693 4 695 6 140 2 699 4 704 4 978 6 439 2 446 2 152 2 711 2 989 2 713 4 168 2 169 6 716 1 997 6 998 8 999 2 724 6 1003 4 465 6 728 4 468 4 470 2 732 2 734 6 1018 2 1019 2 477 2 478 2 479 2 737 2 738 2 1025 6 1026 2 192 1 745 2 193 4 492 4 1034 6 753 2 495 2 1037 2 208 2 759 2 760 2 1046 2 214 2 1048 2 218 2 220 2 221 8 223 2 512 2 1052 2 1053 2 1055 2 520 1 776 4 237 2 1061 2 1066 4 528 2 249 2 1072 2 250 2 254 2 1074 6 535 2 797 2 257 2 258 2 262 4 549 2 1088 2 1087 6 556 2 270 4 558 6 1091 1 563 2 1096 2 569 2 1098 2 1099 2 572 2 1101 4 819 7 576 2 289 1 580 2 296 8 
585 2 830 2 439 2 590 10 591 2 593 2 308 2 446 2 152 2 7 2 711 2 313 48 595 4 12 12 713 4 841 12 989 2 601 6 847 2 849 2 168 2 323 8 169 6 327 2 997 6 998 8 999 2 612 2 336 2 724 6 339 2 1003 4 465 6 728 4 468 4 470 2 732 2 626 2 627 2 734 6 347 6 871 4 873 6 1019 2 1018 2 477 2 478 2 479 2 737 2 738 2 1025 6 51 6 1026 4 52 2 880 2 55 2 193 4 745 2 488 2 363 2 492 8 888 4 1034 6 495 2 753 2 1037 2 496 2 368 2 895 4 69 2 70 2 208 2 759 2 1046 2 760 2 645 6 903 2 214 4 1048 2 648 2 218 2 220 2 380 4 221 8 910 2 223 2 512 2 1052 2 384 6 89 2 914 26 1053 2 1055 2 237 2 776 8 1061 2 1066 8 662 4 391 2 528 2 927 2 1072 2 249 2 250 2 934 6 102 6 936 2 672 2 673 2 396 4 1074 6 107 2 254 2 535 6 797 2 257 2 258 2 678 2 262 4 118 2 549 2 404 2 1087 6 1088 2 556 2 688 2 270 4 558 6 124 2 409 2 127 2 274 4 563 2 962 2 1096 2 416 2 966 6 967 4 569 2 1098 2 1100 2 572 2 1099 2 1101 4 576 2 693 4 695 6 140 2 580 2 699 4 978 6 296 8 
585 2 439 2 830 2 590 10 591 2 593 2 308 2 446 2 152 2 7 2 711 2 313 48 595 4 12 12 713 4 841 12 989 2 601 6 847 2 849 2 168 2 323 8 169 6 327 2 997 6 998 8 999 2 332 4 612 2 336 2 724 6 339 2 1003 4 465 6 728 4 468 4 470 2 732 2 626 2 627 2 734 6 347 6 871 4 873 6 1019 2 1018 2 477 2 478 2 479 2 737 2 738 2 1025 6 51 6 1026 4 52 2 880 2 55 2 193 4 745 2 488 2 363 2 492 8 888 4 1034 6 495 2 753 2 1037 2 496 2 368 2 895 4 69 2 70 2 208 2 759 2 1046 2 760 2 645 6 903 2 214 4 1048 2 648 2 218 2 220 2 380 4 221 8 910 2 223 2 512 2 1052 2 384 6 89 2 914 26 1053 2 1055 2 237 2 776 8 1061 2 1066 8 662 4 391 2 528 2 927 6 1072 2 249 2 250 2 934 6 102 6 936 2 672 2 673 2 396 4 1074 6 107 2 254 2 535 6 797 2 257 2 258 2 678 2 262 4 118 2 549 2 404 2 1087 6 1088 2 556 2 688 2 270 4 558 6 124 2 409 2 127 2 274 4 563 2 962 2 1096 2 416 2 966 6 967 4 569 2 1098 2 1100 2 572 2 1099 2 1101 4 576 2 693 4 695 6 140 2 580 2 699 4 978 6 296 8 
585 2 830 2 588 6 590 8 591 2 308 2 593 2 7 2 313 52 595 4 314 6 12 16 841 10 601 6 847 2 16 6 849 2 323 8 327 2 332 4 612 2 336 2 339 2 626 2 627 2 347 6 871 4 873 6 51 6 52 2 880 2 55 2 56 2 363 2 886 6 888 4 368 2 895 4 69 2 70 2 645 12 903 4 76 2 648 2 380 4 909 2 910 2 87 2 384 12 914 24 89 2 662 4 391 2 927 6 934 8 670 2 102 6 936 2 672 2 673 2 396 4 107 2 678 2 118 2 403 6 404 4 688 2 124 4 409 2 127 2 962 2 416 2 967 4 966 12 693 4 695 12 140 2 699 4 704 2 703 2 978 12 439 2 446 2 152 4 711 2 984 6 989 2 713 4 168 2 169 8 997 6 998 8 999 2 460 2 724 6 1003 4 465 6 728 4 468 4 470 2 732 2 734 6 1018 2 1019 2 477 2 478 2 479 2 737 2 738 2 1025 6 1024 6 1026 4 743 2 745 2 193 4 488 2 492 10 1034 6 753 2 495 2 1037 2 496 2 208 2 759 2 760 2 1046 4 214 4 1048 2 218 2 220 2 221 12 223 2 512 2 1052 2 1053 2 1055 2 776 10 1061 2 1066 10 528 2 249 2 1072 2 250 2 534 2 254 2 1074 6 535 6 797 2 257 2 1077 6 258 2 262 4 549 2 1086 6 1088 2 1087 12 556 2 270 4 558 6 274 4 563 2 1096 2 569 2 1098 2 1100 2 1099 2 572 2 1101 6 576 2 580 2 296 10 
585 2 218 2 439 2 118 2 223 2 549 2 871 4 873 2 1019 2 89 2 313 4 270 2 12 4 274 2 1061 2 847 2 193 2 1066 6 1096 2 662 4 927 4 998 2 332 4 495 2 753 2 250 2 1037 2 576 2 612 2 208 2 396 2 254 2 1003 2 535 6 296 6 
585 2 830 2 439 2 590 2 446 2 152 3 7 2 711 2 9 2 313 28 12 4 989 2 841 4 847 2 168 2 169 6 998 2 612 2 723 2 336 2 724 6 1003 2 468 4 470 2 626 2 627 2 871 4 873 2 1018 2 1019 2 737 2 738 2 880 2 193 2 745 2 59 2 888 4 1034 6 202 2 753 2 495 2 1037 2 368 2 208 2 759 2 1046 3 218 2 221 8 223 2 914 24 89 2 237 2 918 3 1061 2 525 2 783 2 1066 6 662 4 927 2 249 2 250 2 934 6 672 2 396 2 254 2 535 6 677 2 257 2 800 2 118 2 549 2 1088 2 270 2 124 3 409 2 127 2 274 2 563 2 565 2 1096 2 416 2 967 4 569 2 1099 2 1101 4 576 2 693 4 699 2 296 6 
1096 2 250 2 466 2 
1096 2 250 2 466 2 
830 2 708 4 590 2 4 2 446 2 152 2 7 2 711 2 312 2 313 24 595 2 12 16 713 2 989 2 841 4 168 2 716 2 169 2 997 2 24 2 998 4 332 4 612 2 336 2 724 6 1003 2 728 4 466 2 468 4 470 2 626 2 627 2 871 4 873 4 1018 2 737 2 632 2 738 2 634 2 1026 4 52 2 880 2 742 2 55 2 745 2 193 4 363 2 492 4 888 4 1034 6 753 4 755 4 368 2 895 4 1040 4 69 2 208 2 759 2 373 2 761 2 214 4 380 4 221 2 768 2 909 4 910 2 1051 2 512 2 914 16 232 2 234 2 776 4 386 2 242 2 1066 12 662 4 927 6 249 2 250 6 934 2 396 2 535 6 797 4 258 2 262 2 118 2 549 2 1088 2 123 2 270 2 409 2 127 2 274 4 563 2 809 2 1096 4 416 2 967 4 569 2 572 2 1099 2 693 4 699 6 144 2 704 4 296 12 
283 2 768 2 590 2 997 2 249 2 787 2 201 2 914 2 479 2 313 4 841 2 105 2 339 2 713 2 761 2 373 2 648 2 
830 2 708 4 446 2 152 4 7 2 711 2 312 4 313 24 595 2 12 16 989 2 841 2 168 2 716 1 169 2 997 2 327 2 998 4 24 2 332 4 612 2 336 2 724 6 1003 2 464 2 728 4 466 2 468 4 470 2 626 2 627 2 871 4 873 4 1018 2 737 2 632 2 738 2 634 2 1026 4 52 2 880 2 742 2 55 2 745 2 193 4 363 2 492 4 888 4 1034 6 753 4 755 4 368 2 895 4 1040 4 69 2 208 2 759 2 373 2 761 2 214 4 213 2 380 4 221 2 768 2 909 4 910 2 650 2 1051 2 512 2 914 16 232 2 653 2 776 4 1066 12 662 4 927 6 249 2 250 6 934 2 396 2 535 6 256 2 797 4 258 2 262 4 118 2 549 2 1088 2 123 2 270 2 409 2 127 2 274 4 563 2 809 2 1096 4 416 2 967 4 569 2 572 2 1099 2 693 4 699 6 144 2 704 4 296 12 
148 2 830 2 708 4 590 2 446 2 152 2 7 2 711 2 312 2 313 24 595 2 12 16 713 2 989 2 841 4 168 2 716 1 169 2 327 2 997 2 24 2 998 4 332 4 612 2 336 2 724 6 1003 2 728 4 466 2 468 4 865 2 470 2 626 2 627 2 871 4 873 4 1018 2 737 2 632 2 738 2 634 2 1026 4 52 2 880 2 742 2 55 2 745 2 193 4 363 2 492 4 888 4 1034 6 753 4 755 4 368 2 895 4 1040 4 69 2 208 2 759 2 373 2 761 2 214 4 380 4 221 2 768 2 909 4 910 2 1051 2 512 2 914 16 232 2 776 4 90 2 388 2 1066 12 662 4 927 6 249 2 250 6 934 2 396 2 535 6 797 4 539 2 258 2 262 4 118 2 549 2 1088 2 123 2 270 2 409 2 127 2 274 4 563 2 809 2 1096 4 416 2 967 4 569 2 572 2 1099 2 693 4 699 6 144 2 704 4 296 12 
830 2 301 2 832 4 302 2 304 2 1 2 307 2 592 2 7 2 313 64 838 2 315 2 13 2 317 2 841 2 845 2 320 10 14 12 848 2 604 2 15 2 325 16 606 2 324 2 328 2 22 10 329 2 331 8 336 6 334 2 29 2 614 2 617 3 35 6 620 3 859 2 860 16 862 2 864 2 863 14 623 2 868 24 626 2 627 2 870 2 45 10 631 4 877 2 353 2 637 4 879 2 358 16 884 4 640 2 54 6 56 2 59 2 362 2 887 2 888 4 62 4 64 2 641 6 642 2 368 2 67 4 897 2 899 16 903 46 646 2 906 2 377 2 80 4 649 2 82 2 381 10 912 4 382 2 383 2 651 2 87 2 913 2 914 52 655 2 916 2 385 2 915 2 659 2 660 2 918 2 92 12 921 4 97 2 931 4 933 2 668 2 934 14 101 4 395 2 670 2 937 2 674 2 104 4 944 2 110 2 949 2 111 2 114 2 954 2 120 2 958 5 404 20 124 16 409 4 128 2 127 2 962 2 416 2 967 20 969 2 136 2 419 2 138 2 137 2 422 2 693 18 694 2 698 2 143 14 431 2 699 2 700 2 145 2 701 2 703 2 979 4 437 12 706 8 147 14 707 4 441 1 442 2 150 2 980 2 446 4 152 19 983 2 711 2 448 6 987 2 988 4 989 4 453 2 992 2 995 2 167 2 168 2 996 16 169 14 716 2 720 14 459 2 172 2 723 2 460 2 724 34 175 4 1000 6 1001 2 1002 4 1004 2 176 2 468 4 470 4 179 2 1012 2 732 2 473 4 472 2 185 14 1016 4 1018 6 478 2 1021 2 737 2 738 4 1023 2 739 4 741 16 1028 12 1027 2 484 2 1030 2 743 2 744 6 487 12 745 2 194 8 748 2 490 4 492 26 493 2 750 2 1034 6 1038 2 1039 2 1041 2 207 2 1042 2 759 2 497 2 210 2 1046 19 760 2 501 2 212 4 504 4 764 2 505 2 506 2 767 2 220 2 221 28 510 10 772 2 226 2 227 2 515 2 516 2 236 2 235 2 1055 2 776 24 522 3 1059 2 523 4 241 2 780 2 783 2 1064 4 1065 4 1071 2 1070 4 244 2 528 4 245 4 247 2 249 2 534 2 792 2 794 2 253 3 1075 2 537 2 797 4 538 2 257 2 800 2 801 4 543 2 544 2 547 2 548 4 551 2 552 2 265 2 1084 20 553 2 266 2 268 2 1088 2 1089 2 1090 4 807 2 563 2 1092 4 278 4 279 2 569 2 1097 2 285 2 1099 2 1101 12 817 2 822 4 291 3 823 2 581 2 1105 2 293 2 297 6 1106 2 298 4 
221 2 954 2 84 2 510 2 45 2 152 2 914 2 313 2 124 2 235 2 169 2 328 2 22 4 1101 2 934 2 1038 2 207 2 1042 2 581 2 253 2 1046 2 903 6 257 2 1106 2 
221 2 954 2 84 2 510 2 45 2 152 2 914 2 313 2 124 2 235 2 169 2 328 2 22 4 1101 2 934 2 1038 2 207 2 1042 2 581 2 253 2 1046 2 903 6 257 2 1106 2 
221 2 954 2 84 2 510 2 45 2 152 2 914 2 313 2 124 2 235 2 169 2 328 2 22 4 1101 2 934 2 1038 2 207 2 1042 2 581 2 253 2 1046 2 903 6 257 2 1106 2 
707 2 1079 2 221 2 548 2 684 2 152 3 88 4 803 2 805 2 631 2 914 4 313 10 11 2 522 3 164 3 278 2 92 4 194 2 968 2 390 4 245 2 529 4 62 2 788 2 641 4 331 2 101 2 613 4 67 2 972 2 31 4 581 2 899 5 1046 3 35 6 620 3 622 2 257 2 540 2 706 2 
707 2 1079 2 221 2 548 2 684 2 152 2 88 4 803 2 805 2 631 2 914 4 448 2 313 10 11 2 522 2 164 2 240 2 278 2 1092 2 92 4 194 2 968 2 390 4 245 2 529 4 62 2 788 2 641 4 331 2 101 2 613 4 67 2 972 2 31 4 581 2 899 4 1046 2 35 6 620 2 622 2 257 2 540 2 706 2 
707 2 1079 2 221 2 548 2 684 2 152 2 88 4 803 2 805 2 631 2 914 4 448 2 313 10 11 2 522 2 164 2 240 2 278 2 1092 2 92 4 194 2 968 2 390 4 245 2 529 4 62 2 788 2 641 4 331 2 101 2 613 4 67 2 972 2 31 4 581 2 899 4 1046 2 35 6 620 2 622 2 257 2 540 2 706 2 
707 2 1079 2 221 2 548 2 684 2 152 2 88 4 803 2 805 2 631 2 914 4 448 2 313 10 11 2 522 2 164 2 240 2 278 2 1092 2 92 4 194 2 968 2 390 4 245 2 529 4 62 2 788 2 641 4 331 2 101 2 613 4 67 2 972 2 31 4 581 2 899 4 1046 2 35 6 620 2 622 2 257 2 540 2 706 2 
707 2 1079 2 221 2 548 2 684 2 152 2 88 4 803 2 805 2 631 2 914 4 448 4 313 10 11 2 522 2 164 2 240 4 278 2 1092 4 92 4 194 2 968 2 390 4 245 2 529 4 62 2 788 2 641 4 331 2 101 2 613 4 67 2 972 2 31 4 581 2 899 4 1046 2 35 6 620 2 622 2 257 2 540 2 706 2 
379 2 431 2 815 2 1013 2 635 2 881 2 
147 2 570 2 1013 2 151 2 578 2 166 2 139 2 
438 2 399 2 178 2 952 2 766 2 443 2 186 2 349 1 914 8 50 1 313 10 160 2 563 2 132 2 454 1 360 2 785 2 749 2 891 1 366 2 367 2 611 2 973 2 463 2 500 1 978 2 
111 2 180 2 546 2 548 2 685 2 914 6 631 6 350 2 313 6 448 5 315 2 1057 4 524 2 240 2 744 4 92 12 278 6 1092 2 194 6 1070 2 62 6 331 6 641 4 205 2 67 6 643 2 1002 2 899 15 1078 2 706 6 
261 4 953 6 733 2 529 2 153 2 47 2 613 2 335 2 629 2 914 1 313 1 594 2 351 2 985 2 31 2 657 2 354 2 38 1 
261 4 953 6 733 2 529 2 153 4 47 4 613 2 335 2 629 4 594 2 351 2 985 2 31 2 657 2 354 2 
261 4 953 10 733 2 529 2 153 8 47 8 613 2 335 2 629 8 914 1 313 1 594 6 351 2 985 2 31 2 657 2 354 8 38 1 
261 2 953 2 733 2 529 2 153 2 47 2 613 2 335 2 629 2 351 2 985 2 31 2 657 2 
832 4 301 2 302 2 313 38 987 2 316 2 989 4 845 1 15 2 167 2 715 2 459 2 172 1 336 6 724 32 614 2 175 4 1001 2 864 2 176 2 1012 2 473 4 870 2 185 14 1018 6 738 4 1023 2 353 2 741 2 358 2 640 2 490 4 492 4 493 2 750 2 64 2 210 2 646 2 212 4 764 2 506 2 767 1 649 2 511 2 772 2 383 2 227 2 914 34 516 2 655 2 236 2 916 2 659 2 523 4 1059 2 241 2 921 4 1065 4 97 2 931 4 669 2 935 2 674 2 110 2 948 1 801 5 544 2 543 2 802 2 551 2 552 2 1084 10 958 3 1090 4 409 4 128 2 1093 2 279 2 967 18 969 2 422 2 693 16 698 2 145 2 700 2 1105 2 701 2 436 2 
506 2 1049 2 832 4 649 2 833 2 769 2 305 4 980 4 772 2 3 2 914 44 313 46 596 2 236 2 316 2 318 2 659 2 777 2 993 2 1065 2 96 2 605 2 97 2 18 2 716 2 457 2 931 4 932 2 458 2 935 2 669 2 461 2 336 2 724 42 175 2 252 2 674 4 34 2 796 2 36 4 340 2 110 2 864 2 801 2 260 2 542 2 624 2 544 2 1011 2 802 2 473 4 682 2 185 6 872 2 551 2 1018 2 554 2 957 2 189 2 630 2 1023 2 409 2 740 2 1028 6 1029 2 275 2 810 2 640 2 414 2 486 2 279 2 965 2 747 2 967 20 490 6 492 38 890 2 818 2 200 2 64 2 892 2 693 20 66 2 696 2 644 2 901 4 210 2 499 2 372 2 763 2 
301 2 832 4 302 2 154 2 313 44 316 2 989 6 15 2 167 2 715 2 457 6 336 4 724 40 175 6 1001 2 340 2 729 2 342 2 176 2 1012 2 473 4 185 10 1018 4 189 6 630 6 480 2 738 6 353 2 356 8 486 2 58 8 361 2 492 14 493 2 751 2 750 2 370 2 646 2 212 4 764 2 506 2 649 2 767 2 509 2 772 2 227 2 914 40 516 2 655 2 916 2 659 4 521 2 1059 2 523 2 241 2 94 2 921 6 781 2 1065 4 96 2 97 2 931 4 669 2 935 2 674 2 798 2 801 6 543 2 544 2 802 2 119 8 551 2 552 2 1084 6 1090 6 409 2 128 4 277 2 279 2 967 20 693 18 425 2 698 2 697 2 145 2 700 2 1105 2 436 2 
832 6 506 2 649 2 767 6 511 2 772 2 914 26 313 28 987 2 236 4 989 10 316 2 659 2 845 2 919 2 1065 2 97 2 716 2 931 6 609 2 172 2 935 2 669 2 336 2 724 38 175 2 674 2 110 4 469 2 801 2 544 2 1081 2 802 2 473 6 870 4 185 8 551 2 1018 2 958 2 1084 10 190 2 738 10 1023 4 409 2 741 2 358 10 1093 2 640 4 279 2 486 2 965 2 967 14 490 6 492 14 890 2 818 2 64 4 693 14 579 4 701 2 210 4 294 2 
1008 2 
757 1 231 1 974 1 398 1 756 1 533 1 
757 1 231 1 974 1 398 1 756 1 533 1 
757 1 231 1 974 1 398 1 756 1 533 1 
757 1 231 1 974 1 398 1 756 1 533 1 
757 1 231 1 974 1 398 1 756 1 533 1 
757 1 231 1 974 1 398 1 756 1 533 1 
757 1 231 1 974 1 398 1 756 1 533 1 
757 1 231 1 974 1 398 1 756 1 533 1 
757 1 231 1 974 1 398 1 756 1 533 1 
757 1 231 1 974 1 398 1 756 1 533 1 
757 1 231 1 974 1 398 1 756 1 533 1 
757 1 231 1 974 1 398 1 756 1 533 1 
757 1 231 1 974 1 398 1 756 1 533 1 
757 1 231 1 974 1 398 1 756 1 533 1 
757 1 231 1 974 1 398 1 756 1 533 1 
757 1 231 1 974 1 398 1 756 1 533 1 
757 1 231 1 974 1 398 1 756 1 533 1 
757 1 231 1 974 1 398 1 756 1 533 1 
757 1 231 1 974 1 398 1 756 1 533 1 
757 1 231 1 974 1 398 1 756 1 533 1 
757 1 231 1 974 1 398 1 756 1 533 1 
757 1 231 1 974 1 398 1 756 1 533 1 
757 1 231 1 974 1 398 1 756 1 533 1 
757 1 231 1 974 1 398 1 756 1 533 1 
757 1 231 1 974 1 398 1 756 1 533 1 
757 1 231 1 974 1 398 1 756 1 533 1 
757 1 231 1 974 1 398 1 756 1 533 1 
757 1 231 1 974 1 398 1 756 1 533 1 
757 1 231 1 974 1 398 1 756 1 533 1 
757 1 231 1 974 1 398 1 756 1 533 1 
757 1 231 1 974 1 398 1 756 1 533 1 
757 1 231 1 974 1 398 1 756 1 533 1 
757 1 231 1 974 1 398 1 756 1 533 1 
757 1 231 1 974 1 398 1 756 1 533 1 
757 1 231 1 974 1 398 1 756 1 533 1 
757 1 231 1 974 1 398 1 756 1 533 1 
757 1 231 1 974 1 398 1 756 1 533 1 
757 1 231 1 974 1 398 1 756 1 533 1 
757 1 231 1 974 1 398 1 756 1 533 1 
757 1 231 1 974 1 398 1 756 1 533 1 
757 1 231 1 974 1 398 1 756 1 533 1 
757 1 231 1 974 1 398 1 756 1 533 1 
757 1 231 1 974 1 398 1 756 1 533 1 
757 1 231 1 974 1 398 1 756 1 533 1 

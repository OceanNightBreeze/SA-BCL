#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V ERROR java.lang.NullPointerException 1281 492 102 
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V PASSED
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V FAILED junit.framework.AssertionFailedError (194,431) 314 
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V ERROR java.lang.ArrayIndexOutOfBoundsException 548 
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 222 1365 1295 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR utilMDE.Assert$AssertionException (790,870) (790,870) 723 1182 141 277 199 
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_0()V ERROR java.lang.RuntimeException (450,1082) (450,1082) (617,884) (617,884) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_1()V ERROR java.lang.RuntimeException (450,1082) (450,1082) (617,884) (617,884) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_2()V ERROR java.lang.RuntimeException (450,1082) (450,1082) (617,884) (617,884) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_3()V ERROR java.lang.RuntimeException (450,1082) (450,1082) (617,884) (617,884) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_4()V ERROR java.lang.RuntimeException (450,1082) (450,1082) (617,884) (617,884) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_5()V ERROR java.lang.RuntimeException (450,1082) (450,1082) (617,884) (617,884) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_6()V ERROR java.lang.RuntimeException (450,1082) (450,1082) (617,884) (617,884) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_7()V ERROR java.lang.RuntimeException (450,1082) (450,1082) (617,884) (617,884) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_8()V ERROR java.lang.RuntimeException (450,1082) (450,1082) (617,884) (617,884) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_9()V ERROR java.lang.RuntimeException (450,1082) (450,1082) (617,884) (617,884) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_10()V ERROR java.lang.RuntimeException (450,1082) (450,1082) (617,884) (617,884) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_11()V ERROR java.lang.RuntimeException (450,1082) (450,1082) (617,884) (617,884) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_12()V ERROR java.lang.RuntimeException (450,1082) (450,1082) (617,884) (617,884) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_13()V ERROR java.lang.RuntimeException (450,1082) (450,1082) (617,884) (617,884) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_14()V ERROR java.lang.RuntimeException (450,1082) (450,1082) (617,884) (617,884) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_15()V ERROR java.lang.RuntimeException (450,1082) (450,1082) (617,884) (617,884) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_16()V ERROR java.lang.RuntimeException (450,1082) (450,1082) (617,884) (617,884) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_17()V ERROR java.lang.RuntimeException (450,1082) (450,1082) (617,884) (617,884) 
daikon.test.split.SplitterFactoryTest:testmisc_Fib_main_18()V ERROR java.lang.RuntimeException (450,1082) (450,1082) (617,884) (617,884) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_19()V ERROR java.lang.RuntimeException (450,1082) (450,1082) (617,884) (617,884) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_20()V ERROR java.lang.RuntimeException (450,1082) (450,1082) (617,884) (617,884) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_21()V ERROR java.lang.RuntimeException (450,1082) (450,1082) (617,884) (617,884) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_22()V ERROR java.lang.RuntimeException (450,1082) (450,1082) (617,884) (617,884) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_23()V ERROR java.lang.RuntimeException (450,1082) (450,1082) (617,884) (617,884) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_24()V ERROR java.lang.RuntimeException (450,1082) (450,1082) (617,884) (617,884) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_25()V ERROR java.lang.RuntimeException (450,1082) (450,1082) (617,884) (617,884) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_26()V ERROR java.lang.RuntimeException (450,1082) (450,1082) (617,884) (617,884) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_27()V ERROR java.lang.RuntimeException (450,1082) (450,1082) (617,884) (617,884) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_28()V ERROR java.lang.RuntimeException (450,1082) (450,1082) (617,884) (617,884) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_29()V ERROR java.lang.RuntimeException (450,1082) (450,1082) (617,884) (617,884) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_30()V ERROR java.lang.RuntimeException (450,1082) (450,1082) (617,884) (617,884) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_31()V ERROR java.lang.RuntimeException (450,1082) (450,1082) (617,884) (617,884) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_32()V ERROR java.lang.RuntimeException (450,1082) (450,1082) (617,884) (617,884) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__33()V ERROR java.lang.RuntimeException (450,1082) (450,1082) (617,884) (617,884) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__34()V ERROR java.lang.RuntimeException (450,1082) (450,1082) (617,884) (617,884) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__35()V ERROR java.lang.RuntimeException (450,1082) (450,1082) (617,884) (617,884) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__36()V ERROR java.lang.RuntimeException (450,1082) (450,1082) (617,884) (617,884) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__37()V ERROR java.lang.RuntimeException (450,1082) (450,1082) (617,884) (617,884) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__38()V ERROR java.lang.RuntimeException (450,1082) (450,1082) (617,884) (617,884) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__39()V ERROR java.lang.RuntimeException (450,1082) (450,1082) (617,884) (617,884) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__40()V ERROR java.lang.RuntimeException (450,1082) (450,1082) (617,884) (617,884) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__41()V ERROR java.lang.RuntimeException (450,1082) (450,1082) (617,884) (617,884) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__42()V ERROR java.lang.RuntimeException (450,1082) (450,1082) (617,884) (617,884) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__43()V ERROR java.lang.RuntimeException (450,1082) (450,1082) (617,884) (617,884) 

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParser:jj_3R_72()Z
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_2_13(I)Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:ungenerify(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.VarInfoName.Add:amount()Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext1()V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.PptName:toString()Ljava.lang.String;
daikon.ProglangType:isPseudoArray()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Name;)V
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.Quant:concat([I[I)[I
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
utilMDE.ArraysMDE:sum([D)D
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_135()Z
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.ModBitTracker:num_vars()I
utilMDE.LimitedSizeIntSet:add(I)V
jtb.syntaxtree.TypeDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
jtb.JavaParser:jj_2_5(I)Z
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.TypeBound:accept(Ljtb.visitor.Visitor;)V
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.visitor.FormatCommand:getNumCommands()I
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.Quant:subsetOf([I[I)Z
daikon.Quant:memberOf(F[F)Z
jtb.JavaParser:jj_3R_96()Z
jtb.JavaParser:jj_3R_62()Z
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
jtb.JavaParser:jj_3R_89()Z
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.Quant:subsetOf([J[J)Z
utilMDE.ArraysMDE:noDuplicates([J)Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
utilMDE.MathMDE:bitwiseComplement(I)I
jtb.JavaParser:jj_3R_122()Z
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalOrExpression;)V
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:elements()Ljava.util.Enumeration;
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.ModBitTracker:num_samples()I
jtb.visitor.TreeFormatter:space()Ljtb.visitor.FormatCommand;
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
jtb.syntaxtree.ConditionalOrExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_70()Z
daikon.Quant:eltsEqualIndex([I)Z
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_53()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalExpression;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameter;)V
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.MathMDE:nonmodulus_strict([I)[I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalAndExpression;)V
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:element_range([I)I
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
utilMDE.ArraysMDE:min([I)I
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.test.TestQuant:removeAdjacentDups([I)[I
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
daikon.PptName:getMethodName()Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([D)Z
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_117()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NullLiteral;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
jtb.syntaxtree.NodeOptional:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:pairwiseGT([I[I)Z
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_2_16(I)Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParser:FormalParameter()Ljtb.syntaxtree.FormalParameter;
jtb.JavaParser:jj_3R_67()Z
jtb.JavaParser:jj_3_4()Z | CONSTANT | 185855 | 87 -> 0
jtb.JavaCharStream:getEndLine()I
jtb.JavaParser:jj_scan_token(I)Z
jtb.syntaxtree.PrimaryPrefix:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltsEqual([II)Z
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
jtb.syntaxtree.NodeListOptional:getParent()Ljtb.syntaxtree.Node;
jtb.JavaParser:jj_3R_80()Z
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
utilMDE.Intern:internSubsequence([JII)[J
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.UtilMDE:removeWhitespaceAround(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfoName:ioa_name()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_148()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Literal;)V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
jtb.JavaParser:jj_3_25()Z
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
daikon.Quant:gte(II)Z
jtb.syntaxtree.BlockStatement:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.Quant:eltwiseGTE([I)Z
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
jtb.syntaxtree.FormalParameter:accept(Ljtb.visitor.Visitor;)V
daikon.tools.jtb.PptNameMatcher:PptNameMatcher(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.Quant:subsetOf([F[D)Z
utilMDE.FuzzyFloat:gte(DD)Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
jtb.syntaxtree.ResultType:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
utilMDE.ArraysMDE:indexOf([II)I
jtb.syntaxtree.TypeDeclaration:TypeDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.Quant:gt(II)Z
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.JavaParser:jj_3R_108()Z
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.Quant:eltsGT([II)Z
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.Quant:eltsGTE([II)Z
daikon.test.FormatTestCase:passes()Z
daikon.VarInfoName.Simple:isLiteralConstant()Z
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.tools.jtb.Ast:removeWhitespace(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.simplify.LemmaStack:noticeInt(J)V
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:elementType()Ldaikon.ProglangType;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ModBitTracker:split(I)I
jtb.JavaParser:jj_3R_133()Z
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
jtb.JavaParser:jj_3R_98()Z
daikon.inv.filter.InvariantFilter:InvariantFilter()V
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.Quant:setEqual([I[I)Z
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.PptSlice0:initInvariantsSeen()V
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeSequence;)V
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:getParent()Ljtb.syntaxtree.Node;
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.InvMap:toString()Ljava.lang.String;
jtb.syntaxtree.MethodDeclaration:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
utilMDE.UtilMDE:removeWhitespaceBefore(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_102()Z
daikon.VarInfo:dbc_name()Ljava.lang.String;
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
daikon.tools.jtb.SimpleTreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
jtb.visitor.TreeFormatter:space(I)Ljtb.visitor.FormatCommand;
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_2_15(I)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object; | RETURN | 32728 | return null
daikon.tools.jtb.Ast:typeMatch(Ljava.lang.String;Ljava.lang.String;)Z
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:pairwiseGTE([I[I)Z
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:memberOf(D[F)Z
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.Intern:internSubsequence([III)[I
daikon.Quant:lexLTE([I[I)Z
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.test.TestAst.MethodDeclarationHarvester:visit(Ljtb.syntaxtree.MethodDeclaration;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
jtb.JavaParser:jj_3R_69()Z
daikon.inv.Invariant:prob_and(DD)D
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
jtb.syntaxtree.TypeArgument:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBody;)V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.NodeList:NodeList()V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_2_25(I)Z
jtb.JavaCharStream:getBeginColumn()I
jtb.JavaParser:jj_3R_51()Z
utilMDE.FuzzyFloat:FuzzyFloat()V
utilMDE.ArraysMDE:subarray([JII)[J
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
jtb.visitor.TreeFormatter:processList(Ljtb.syntaxtree.NodeListInterface;Ljtb.visitor.FormatCommand;)V
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
jtb.syntaxtree.NodeToken:numSpecials()I
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
utilMDE.MathMDE:gcd(II)I
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.tools.jtb.Ast:getParent(Ljava.lang.Class;Ljtb.syntaxtree.Node;)Ljtb.syntaxtree.Node;
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_3()Z
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceBody:getParent()Ljtb.syntaxtree.Node;
daikon.Quant:isReverse([I[I)Z
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.NonModulus:updateResults()V
jtb.syntaxtree.ReferenceType:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.FormatCommand:getCommand()I
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:min_max([I)[I
utilMDE.ArraysMDE:isSubset([D[D)Z
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Intern:intern([J)[J
daikon.VarInfo:name()Ljava.lang.String;
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
jtb.JavaParser:jj_3R_163()Z
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
utilMDE.MathMDE:missing_numbers([I)[I
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.ProglangType:isIntegral()Z
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.diff.Node:Node()V
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.FuzzyFloat:lte(DD)Z
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
jtb.JavaParser:jj_3R_109()Z
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
jtb.syntaxtree.TypeDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3_22()Z
jtb.syntaxtree.NodeToken:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
utilMDE.UtilMDE:lineNumberFileReader(Ljava.lang.String;)Ljava.io.LineNumberReader;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_134()Z
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.EqualityExpression;)V
jtb.JavaParser:jj_2_36(I)Z
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.diff.RootNode:RootNode()V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
jtb.JavaParser:jj_3R_55()Z
utilMDE.Intern.SequenceAndIndices:hashCode()I
jtb.JavaParser:jj_3R_57()Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
jtb.JavaParser:jj_3R_88()Z
jtb.JavaParser:jj_3_28()Z
daikon.Quant:pairwiseSquare([I[I)Z
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.inv.Invariant:getConfidence()D
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.NodeSequence:elements()Ljava.util.Enumeration;
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;)Z
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:mod_positive(JJ)J
jtb.JavaParser:jj_3R_116()Z
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_210()Z
jtb.syntaxtree.EqualityExpression:accept(Ljtb.visitor.Visitor;)V
daikon.tools.jtb.Ast:format(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpression;)V
jtb.JavaParser:jj_3R_119()Z
jtb.JavaCharStream:readChar()C
jtb.JavaParser:jj_3_13()Z
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:pairwiseEqual([I[I)Z
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ExclusiveOrExpression;)V
utilMDE.ArraysMDE:sum([[I)I
jtb.JavaParser:jj_3R_114()Z
daikon.inv.unary.UpperBoundCore:calc_range()J
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.FormalParameter;)V
jtb.JavaParser:jj_3_30()Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.ArraysMDE:fn_is_permutation([I)Z
jtb.visitor.TreeDumper:printToken(Ljava.lang.String;)V
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_2_17(I)Z
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:VariableDeclaratorId()Ljtb.syntaxtree.VariableDeclaratorId;
utilMDE.Intern:intern([D)[D
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
utilMDE.FuzzyFloat:gt(DD)Z
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.filter.ObviousFilter:ObviousFilter()V
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
daikon.Quant:eltwiseNotEqual([I)Z
daikon.ProglangType:baseIsFloat()Z
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.JavaParser:jj_3R_77()Z
daikon.diff.InvMap:InvMap()V
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.Type;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
jtb.syntaxtree.AndExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ConditionalAndExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.Quant:ne(II)Z
jtb.syntaxtree.NodeOptional:present()Z
daikon.Quant:lexGT([I[I)Z
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.inv.Invariant:justified()Z
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.MathMDE:gcd(JJ)J
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.inv.Invariants:Invariants()V
daikon.inv.unary.scalar.LowerBound:enabled()Z
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
daikon.Quant:eltsGteIndex([I)Z | CONSTANT | 179520 | 0 -> -1
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.ProglangType:isArray()Z
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
jtb.visitor.TreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_85()Z
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:prob_or(DD)D
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryPrefix;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;II)V
jtb.syntaxtree.CompilationUnit:getParent()Ljtb.syntaxtree.Node;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_60()Z
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
jtb.JavaParser:jj_3R_75()Z
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.Modifiers:accept(Ljtb.visitor.Visitor;)V
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3_10()Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MultiplicativeExpression;)V
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.UtilMDE:removeWhitespaceAfter(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.MathMDE:mod_positive(II)I
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.inv.unary.UpperBoundCore:calc_modulus()J
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
utilMDE.UtilMDE:splitLines(Ljava.lang.String;)[Ljava.lang.String;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ResultType;)V
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
jtb.JavaParser:jj_3R_180()Z
utilMDE.MathMDE:gcd([I)I
jtb.JavaParser:jj_3R_101()Z
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.ModBitTracker:ModBitTracker(I)V
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;)V
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AndExpression;)V
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:pairwiseNotEqual([I[I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ShiftExpression;)V
jtb.syntaxtree.Literal:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern:internStrings([Ljava.lang.String;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Expression;)V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
jtb.syntaxtree.ClassOrInterfaceBody:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.ArraysMDE:fn_is_total([I)Z
jtb.JavaParser:jj_2_18(I)Z
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.inv.unary.LowerBoundCore:calc_range()J
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceDeclaration:ClassOrInterfaceDeclaration(Ljtb.syntaxtree.NodeChoice;Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ClassOrInterfaceBody;)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaCharStream:ReadByte()C
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PostfixExpression;)V
jtb.syntaxtree.ShiftExpression:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
jtb.syntaxtree.ImportDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.VariableDeclaratorId:VariableDeclaratorId(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.Quant:memberOf(F[D)Z
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_2_12(I)Z
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
utilMDE.Intern:numIntArrays()I
daikon.VarInfoName:esc_name()Ljava.lang.String;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.Quant:eltwiseLT([I)Z
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.diff.Node:children()Ljava.util.Iterator;
utilMDE.ArraysMDE:sum([[D)D
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.tools.jtb.Ast.1GetParametersVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
jtb.JavaParser:jj_3R_50()Z
jtb.JavaParser:jj_3R_110()Z
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:copy(Ljava.util.HashMap;)Ljava.util.HashMap;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceType:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE:gcd_differences([I)I
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.Quant:memberOf(J[J)Z
jtb.syntaxtree.TypeArguments:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.Quant:pairwiseLT([I[I)Z
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.inv.OutputFormat:isJavaFamily()Z
jtb.syntaxtree.Name:accept(Ljtb.visitor.Visitor;)V
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.TypeParameters:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:eltsLtIndex([I)Z
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.ModBitTracker:num_sets()I
jtb.syntaxtree.NodeChoice:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameter;)V
utilMDE.WeakIdentityHashMap:indexFor(II)I
utilMDE.OrderedPairIterator:hasNext()Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.PptTopLevel.CondIterator:hasNext()Z
jtb.syntaxtree.CompilationUnit:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_100()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:jj_3_17()Z
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.UtilMDE:lineNumberFileReader(Ljava.io.File;)Ljava.io.LineNumberReader;
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.NodeToken;)V
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeBound;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
utilMDE.MathMDE:modulus([I)[I
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
jtb.JavaParser:jj_3_14()Z
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
jtb.syntaxtree.UnaryExpression:accept(Ljtb.visitor.Visitor;)V
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ReferenceType;)V
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Debug:logOn()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Type;)V
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.Quant:union([I[I)[I
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.JavaParser:jj_3R_61()Z
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_ntk()I
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.PptSlice2:arity()I
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.Debug:logDetail()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArguments;)V
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Block;)V
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
jtb.JavaParser:jj_3R_104()Z
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.tools.jtb.PptNameMatcher:extractPptArgs(Ldaikon.PptName;)Ljava.util.List;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_118()Z
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_54()Z
jtb.syntaxtree.NullLiteral:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.syntaxtree.RelationalExpression:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:intersection([I[I)[I
jtb.JavaParser:jj_3R_103()Z
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.visitor.TreeFormatter:placeToken(Ljtb.syntaxtree.NodeToken;II)V
jtb.syntaxtree.TypeDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.test.TestAst.ClassOrInterfaceDeclarationHarvester:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:accept(Ljtb.visitor.Visitor;)V
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eltsGtIndex([I)Z
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.NodeChoice:getParent()Ljtb.syntaxtree.Node;
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:sign(I)I
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceBody:ClassOrInterfaceBody(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.NodeFinder:inPre()Z
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
jtb.JavaParser:jj_3R_58()Z
daikon.Quant:subsetOf([D[D)Z
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
jtb.JavaParser:jj_3R_49()Z
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3_15()Z
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakHasherMap:processQueue()V
daikon.Quant:lexGTE([I[I)Z
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.diff.PrintAllVisitor:bufPrintln()V
jtb.syntaxtree.NodeSequence:elementAt(I)Ljtb.syntaxtree.Node;
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ValueTuple:size()I
daikon.VarInfoName:name()Ljava.lang.String;
jtb.syntaxtree.FormalParameter:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_161()Z
daikon.PptName:isCombinedExitPoint()Z
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
utilMDE.Assert:assertTrue(Z)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:jml_name()Ljava.lang.String;
jtb.JavaParser:jj_3_35()Z
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
jtb.syntaxtree.TypeArguments:TypeArguments(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeArgument;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.syntaxtree.VariableDeclaratorId:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.Quant:memberOf(S[S)Z
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;Ljava.lang.String;)V
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
jtb.syntaxtree.MethodDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.JavaParser:jj_3R_169()Z
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Modifiers;)V
jtb.JavaParser:JavaParser(Ljava.io.Reader;)V
jtb.JavaParser:jj_2_1(I)Z
jtb.syntaxtree.MultiplicativeExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_52()Z
daikon.Quant:eq(II)Z
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_81()Z
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
jtb.syntaxtree.TypeArgument:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_2_35(I)Z
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.PptSlice1:num_samples()I
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.Quant:sameLength([I[I)Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.tools.jtb.Ast:getClassName(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryExpression;)V
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.ProglangType:dimensions()I
daikon.tools.jtb.SimpleTreeDumper:SimpleTreeDumper(Ljava.io.Writer;)V
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
jtb.JavaParser:jj_3R_105()Z
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.tools.jtb.Ast:getPackage(Ljtb.syntaxtree.CompilationUnit;)Ljava.lang.String;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3_18()Z
daikon.Quant:eltwiseLTE([I)Z
daikon.Quant:eltwiseGT([I)Z
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ProglangType:baseIsScalar()Z
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfo:relate_var()V
daikon.diff.DetailedStatisticsVisitor:freq(II)D
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
utilMDE.FuzzyFloat:indexOf([D[D)I
jtb.syntaxtree.Type:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:memberOf(I[I)Z
jtb.syntaxtree.NodeToken:trimSpecials()V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.CompilationUnit:CompilationUnit(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
jtb.JavaParser:jj_3R_76()Z
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
jtb.syntaxtree.NodeSequence:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.BlockStatement;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PackageDeclaration;)V
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
jtb.JavaParser:jj_3_29()Z
jtb.JavaParser:jj_3R_124()Z
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljtb.syntaxtree.Node;)Z
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_136()Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:lt(II)Z
jtb.visitor.TreeFormatter:add(Ljtb.visitor.FormatCommand;)V
utilMDE.LimitedSizeIntSet:size()I
utilMDE.ArraysMDE:max([I)I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
utilMDE.SimpleLog:SimpleLog(Z)V
jtb.JavaParser:jj_3R_106()Z
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments;
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_162()Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeSequence:getParent()Ljtb.syntaxtree.Node;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.RelationalExpression;)V
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AdditiveExpression;)V
jtb.JavaParser:jj_3_20()Z
daikon.ValueTuple:isMissingFlow(I)Z
daikon.VarInfoName:hashCode()I
jtb.syntaxtree.ReturnStatement:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName:isLiteralConstant()Z
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_97()Z
daikon.Quant:eltsNotEqual([II)Z
jtb.JavaCharStream:getBeginLine()I
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.Node:getUserRight()Ljava.lang.Object;
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
jtb.JavaParser:jj_3_21()Z
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
jtb.JavaCharStream:GetImage()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
utilMDE.Fmt:i(I)Ljava.lang.Integer;
jtb.syntaxtree.Statement:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
jtb.JavaParser:jj_2_21(I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InclusiveOrExpression;)V
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.tools.jtb.PptNameMatcher:getUngenerifiedType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltsLT([II)Z
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.Quant:subsetOf([F[F)Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
jtb.syntaxtree.FormalParameter:FormalParameter(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Type;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
jtb.JavaParser:jj_3_19()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
utilMDE.MathMDE:negate(I)I
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameters;)V
daikon.PptName:getFullClassName()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;)V
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.inv.Invariant:isWorthPrinting()Z
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;Z)Z
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
jtb.JavaParser:jj_3R_86()Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.MathMDE:pow_fast(II)I
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
jtb.syntaxtree.ClassOrInterfaceBody:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.inv.unary.scalar.Modulus:enabled()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InstanceOfExpression;)V
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.MethodDeclarator:accept(Ljtb.visitor.Visitor;)V
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_73()Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
jtb.visitor.FormatCommand:FormatCommand(II)V
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext2()V
jtb.JavaParser:jj_2_10(I)Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3_36()Z
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
jtb.syntaxtree.NodeListOptional:present()Z
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
jtb.syntaxtree.Expression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_48()Z
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3_27()Z
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.Quant:slice([III)[I | CONDITION | 160611 | if (x) -> if (!x)
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:pairwiseDivides([I[I)Z
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:indexOf([ZZ)I
jtb.JavaCharStream:backup(I)V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:sum([I)I
utilMDE.FuzzyFloat:lt(DD)Z
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_123()Z
jtb.syntaxtree.UnaryExpressionNotPlusMinus:accept(Ljtb.visitor.Visitor;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.tools.jtb.Ast:getParameters(Ljtb.syntaxtree.MethodDeclaration;)Ljava.util.List;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeDeclaration;)V
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
jtb.syntaxtree.InstanceOfExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_107()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_74()Z
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Invariant:logOn()Z
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName; | ASSIGN | 4767 | = null
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
jtb.Token:newToken(I)Ljtb.Token;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.tools.jtb.SimpleTreeDumper:printToken(Ljava.lang.String;)V
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_115()Z
daikon.Ppt:Ppt()V
daikon.tools.jtb.Ast:print(Ljtb.syntaxtree.Node;)Ljava.lang.String;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReturnStatement;)V
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.Quant:lte(II)Z
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
utilMDE.WeakHasherMap:size()I
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.TreeFormatter:processList(Ljtb.syntaxtree.NodeListInterface;)V
jtb.syntaxtree.VariableDeclaratorId:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
jtb.JavaParser:jj_3R_125()Z
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_16()Z
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
jtb.JavaParser:jj_2_3(I)Z
utilMDE.UtilMDE:split(Ljava.lang.String;Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.inv.unary.scalar.NonZero:is_pointer()Z
utilMDE.FuzzyFloat:ne(DD)Z
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.Quant:pairwiseLTE([I[I)Z
jtb.syntaxtree.PackageDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:subarray([III)[I
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
jtb.syntaxtree.ConditionalExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
jtb.JavaCharStream:FillBuff()V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor.1:visit(Ljtb.syntaxtree.TypeParameter;)V
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
utilMDE.MathMDE:pow(II)I
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
utilMDE.FuzzyFloat:eq(DD)Z
jtb.syntaxtree.AdditiveExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.WeakHasherMap.EntrySet:size()I
jtb.syntaxtree.PostfixExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_56()Z
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
jtb.JavaParser:jj_3R_121()Z
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
jtb.JavaParser:jj_3_12()Z
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
daikon.VarInfo:new_ppt()V
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
jtb.visitor.TreeFormatter:TreeFormatter(II)V
daikon.Quant:subsetOf([D[F)Z
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:lexNotEqual([I[I)Z
jtb.JavaParser:jj_3R_126()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclarator;)V
jtb.visitor.TreeFormatter:TreeFormatter()V
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
jtb.JavaParser:jj_3R_120()Z
daikon.Quant:lexLT([I[I)Z
daikon.Quant:subsetOf([S[S)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArgument;)V
jtb.syntaxtree.TypeParameter:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
jtb.syntaxtree.ExclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Statement;)V
daikon.Quant:noDups([I)Z
daikon.test.InvariantFormatTester:execute()Z
jtb.JavaParser:jj_3R_87()Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.JavaParser:jj_3R_47()Z
jtb.JavaCharStream:BeginToken()C
daikon.Quant:eltwiseEqual([I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameters;)V
daikon.Quant:eq(DD)Z
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.test.TestAst:checkMatch(Ljava.lang.String;Ljtb.syntaxtree.MethodDeclaration;Ldaikon.tools.jtb.PptNameMatcher;)V
daikon.tools.jtb.Ast:create(Ljava.lang.String;Ljava.lang.String;)Ljtb.syntaxtree.Node;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.InclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.PptName:getSignature()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.FormalParameters:accept(Ljtb.visitor.Visitor;)V
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
jtb.JavaCharStream:getEndColumn()I
jtb.syntaxtree.PrimaryExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_5()Z
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.tools.jtb.Ast:getType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_68()Z
daikon.tools.jtb.Ast:create(Ljava.lang.String;[Ljava.lang.Class;[Ljava.lang.Object;Ljava.lang.String;)Ljtb.syntaxtree.Node;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.inv.Invariant:format()Ljava.lang.String;
jtb.JavaParser:jj_2_14(I)Z
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.inv.unary.LowerBoundCore:computeConfidence()D
utilMDE.ArraysMDE:noDuplicates([I)Z
utilMDE.Intern:intern([I)[I
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljava.lang.String;Ljava.lang.String;Ljava.util.List;)Z
daikon.tools.jtb.Ast:getName(Ljtb.syntaxtree.MethodDeclaration;)Ljava.lang.String;
jtb.JavaParser:jj_3R_137()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ImportDeclaration;)V
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.inv.ValueSet:ValueSet(I)V
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_149()Z
daikon.ValueTuple:isMissing(I)Z
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:sorted([I)Z
daikon.ProglangType:baseIsIntegral()Z
daikon.Quant:eltsLTE([II)Z
utilMDE.Options.OptionInfo:argument_required()Z
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.inv.Invariant:prob_and(DDD)D
jtb.JavaParser:jj_3R_164()Z
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:logDetail()Z
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptName:isEnterPoint()Z
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.ProglangType:isScalar()Z
daikon.PptSlice0:arity()I
jtb.JavaParser:jj_3R_99()Z
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.visitor.TreeDumper:TreeDumper(Ljava.io.Writer;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
jtb.syntaxtree.Block:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.Quant:eltsLteIndex([I)Z
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
jtb.syntaxtree.TypeArguments:accept(Ljtb.visitor.Visitor;)V
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.tools.jtb.PptNameMatcher:typeMatch(Ljava.lang.String;Ljtb.syntaxtree.FormalParameter;)Z
jtb.JavaParser:getToken(I)Ljtb.Token;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReferenceType;)V
daikon.Quant:eq(JJ)Z
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.PptSlice1:arity()I
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameters;)V
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:subsetOf([B[I)Z
daikon.inv.filter.ParentFilter:ParentFilter()V
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:concat([I[I)[I
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.Quant:eq(FF)Z
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
jtb.JavaParser:jj_2_4(I)Z
daikon.ProglangType:isFloat()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.Quant:setDiff([I[I)[I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.tools.jtb.Ast:quickFixForInternalComment(Ljava.lang.String;)Ljava.lang.String;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_63()Z
daikon.Quant:lexEqual([I[I)Z
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
jtb.JavaParser:jj_3_1()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.CompilationUnit;)V
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
575 2 636 2 726 2 790 2 997 4 729 2 32 2 870 2 476 2 
47 2 479 2 732 2 19 2 305 2 304 2 11 6 588 2 337 2 16 6 1107 6 
178 4 179 6 823 2 395 2 4 2 960 4 1273 2 927 6 731 6 790 2 1219 6 885 2 870 2 
192 26 213 16 898 2 753 4 1100 4 29 12 413 30 43 10 851 10 45 10 149 2 826 10 332 10 1239 4 1362 2 790 6 1336 6 772 8 493 16 290 2 367 6 473 8 887 2 746 2 121 4 558 8 433 8 87 16 324 2 870 6 
254 6 616 4 
1194 2 
192 4 213 2 1232 2 1211 2 753 2 67 2 43 2 29 2 413 6 851 2 45 2 704 2 826 4 332 2 679 2 1198 2 1336 2 493 2 914 2 558 2 1378 2 1255 2 87 2 
192 12 213 8 985 2 341 6 1213 4 29 5 43 4 413 15 851 4 45 4 332 4 121 2 265 4 978 6 87 8 88 2 493 8 
279 2 611 2 969 4 376 2 68 2 537 2 247 2 755 2 597 4 109 2 757 2 1281 2 361 2 707 4 1264 2 492 2 830 2 709 2 1392 2 102 2 1393 2 344 10 555 2 144 2 1165 36 1087 2 1251 2 894 2 1071 2 720 6 1044 2 431 6 389 2 
1002 2 1194 2 81 2 837 2 640 2 36 2 1203 2 685 2 185 2 1350 2 
751 2 1307 4 327 2 1122 2 1029 2 790 4 977 2 887 2 342 2 795 2 936 2 1185 2 998 2 431 2 1141 2 670 2 26 2 66 2 1144 2 481 2 632 2 1098 2 1148 2 729 2 194 2 109 2 1335 2 111 2 361 4 362 2 768 2 445 2 770 2 600 2 494 2 116 2 642 2 1347 2 687 2 207 4 964 4 502 2 870 4 373 2 
1119 4 192 48 213 32 753 2 509 4 436 4 1213 4 43 16 875 2 413 54 29 22 851 16 45 16 826 6 332 16 265 4 1362 2 236 2 790 4 1106 4 1336 4 313 2 978 6 1243 6 772 6 493 32 367 4 496 6 341 6 227 4 780 2 644 2 1086 2 586 6 917 6 558 18 525 8 87 32 870 4 
969 2 537 2 431 2 
1057 2 1145 2 737 2 394 2 194 2 1112 2 655 2 512 2 962 2 513 2 187 2 1253 22 1230 10 78 2 
3 1 970 2 701 2 1076 3 1258 2 613 5 6 2 614 2 7 2 170 3 790 34 96 2 1366 2 1179 2 1367 2 791 2 620 2 792 6 1267 2 251 2 1370 2 422 2 1085 2 340 2 1182 2 343 2 1373 4 521 2 18 2 993 2 891 2 188 2 994 2 429 2 1186 2 527 2 1380 2 1188 4 999 3 1093 2 1383 1 1095 2 435 2 809 16 439 2 359 8 108 24 634 2 197 2 1285 2 733 2 365 1 545 4 1291 3 636 2 1013 2 735 6 202 4 637 1 368 12 549 2 551 16 1201 6 1014 1 452 3 1113 2 912 2 120 2 645 3 1020 2 1399 2 275 1 1115 1 561 2 921 2 211 2 1210 2 821 1 1027 4 752 2 565 3 215 2 1125 1 48 1 1312 1 470 2 288 2 378 16 660 4 50 4 220 2 572 2 225 2 1314 2 135 2 57 3 383 3 934 2 231 2 232 2 1041 2 842 1 584 2 1042 2 296 2 590 2 1320 3 297 2 1137 3 1324 24 940 2 671 2 1140 1 595 6 942 2 1047 2 1330 2 946 4 948 16 1332 2 1422 2 1152 1 1153 8 1425 2 311 2 152 2 1157 2 1242 2 773 2 1159 3 859 12 1342 2 775 2 683 1 1343 2 319 32 958 2 1348 32 1064 1 1432 2 161 2 1068 2 865 1 501 2 1252 2 1166 2 697 2 869 8 870 32 
568 2 
1019 2 790 2 
1353 2 790 4 307 2 
325 2 1073 4 1074 2 326 2 1075 6 328 2 700 4 702 2 5 2 8 2 333 8 706 86 708 2 13 46 1083 4 14 18 339 98 1084 2 347 4 712 12 348 2 713 2 349 2 1089 6 718 12 20 2 1092 6 722 4 22 12 1094 8 352 2 25 2 724 14 28 4 728 192 356 54 357 4 1102 2 358 2 30 2 730 16 1104 4 1105 112 360 328 363 2 33 4 366 2 1108 8 734 290 35 2 740 2 739 4 1110 2 742 2 741 204 1111 2 37 2 744 4 369 2 747 84 370 4 41 14 750 20 1118 2 1123 2 754 14 1124 2 44 2 46 2 1126 336 1128 4 49 12 1130 6 1131 4 51 4 380 2 52 20 382 2 55 26 56 2 386 2 61 2 1134 2 759 2 62 6 63 2 64 376 1142 228 762 60 393 2 764 6 1150 30 69 30 1151 6 73 6 396 2 1154 2 75 118 398 2 767 4 76 2 1156 2 400 2 401 386 402 2 403 2 1161 4 777 2 776 24 1163 6 82 140 1164 2 90 4 782 4 410 4 783 2 1171 4 784 68 785 198 1172 2 414 6 92 6 1176 2 93 2 415 2 790 10 418 12 98 4 99 6 100 4 1180 24 101 2 427 112 794 26 428 12 797 6 103 6 104 2 800 2 801 12 803 10 432 4 434 4 804 16 806 2 808 30 1191 4 440 2 1193 198 811 4 441 2 1195 30 1199 46 812 6 447 244 114 2 115 2 448 2 1200 2 117 2 1202 6 814 6 1204 2 119 6 118 30 1205 6 816 2 453 28 455 30 818 20 819 4 461 8 460 6 459 2 122 204 1208 2 820 2 124 2 822 6 1214 2 464 2 465 2 466 6 467 30 1215 2 1216 8 827 4 468 432 125 2 469 60 126 4 1217 6 1220 2 128 6 129 2 1221 2 130 2 131 198 831 2 133 6 1222 4 132 566 833 2 835 2 838 4 1224 182 145 4 146 2 840 2 843 4 1227 10 1226 2 1231 2 846 2 480 6 1235 4 482 2 849 14 484 2 485 2 853 2 854 182 1241 6 488 4 489 2 491 2 153 8 856 8 860 2 495 48 861 4 158 28 159 6 498 2 1247 112 1248 6 162 2 1254 6 163 2 866 2 868 46 1256 6 870 10 167 6 1257 4 507 2 508 6 874 2 877 12 1259 30 879 22 1260 112 171 2 881 2 517 2 177 2 1265 32 1266 2 1269 2 1271 4 181 2 889 2 182 22 183 2 522 2 892 2 893 160 526 4 529 6 895 2 530 6 531 28 1276 2 1277 8 193 2 533 224 1278 4 899 10 900 26 540 2 901 4 195 6 541 8 902 6 1282 30 903 4 543 2 200 132 1287 26 1288 22 1290 6 201 6 547 2 907 2 1293 6 909 2 1296 4 205 2 1298 4 1299 198 1301 8 915 12 916 2 208 2 1304 2 919 132 563 48 1305 26 1309 6 566 4 216 2 1311 2 925 4 928 6 570 26 569 6 1313 8 571 4 574 2 576 2 224 2 577 2 578 2 226 8 579 4 932 8 228 4 582 2 583 10 1317 4 935 2 1318 198 1319 6 587 12 589 6 938 4 1321 2 1322 2 939 4 1323 2 1325 2 1326 2 1328 26 594 8 1327 26 943 2 1331 46 234 20 949 88 1333 18 951 22 952 16 238 4 1337 2 1338 2 1339 2 1340 4 956 2 957 2 1344 14 961 4 603 60 963 28 1352 2 242 14 605 8 1354 2 607 2 608 6 244 2 610 2 968 10 612 2 1358 2 972 2 248 2 974 30 976 2 619 6 250 6 981 244 982 6 1368 2 983 4 986 2 255 244 987 2 1371 20 989 2 1372 328 1374 6 992 2 623 28 996 4 626 6 627 6 629 6 1382 4 1384 26 260 2 631 2 1003 2 1005 12 1006 2 1007 4 1008 2 1387 2 264 6 1388 4 266 16 1389 50 1009 106 267 2 269 2 1012 4 270 30 271 4 638 8 639 2 1016 4 1015 4 1396 66 643 2 1017 6 272 4 273 10 1398 6 274 4 1400 2 1024 6 648 20 1025 2 1028 6 278 12 280 2 651 2 1032 2 654 2 283 2 1405 14 1406 2 1034 26 284 2 1409 94 661 432 1036 198 1411 64 663 6 664 6 292 4 1416 92 665 64 666 4 1417 2 667 4 1039 2 1040 2 1043 2 669 6 1045 106 298 82 300 2 671 2 301 6 302 18 1048 6 1419 6 1420 46 675 20 306 74 1424 52 1051 2 309 26 1052 2 1426 8 1053 6 312 6 1055 6 681 198 1056 2 316 20 1429 2 1060 192 320 2 684 2 688 2 321 198 1065 70 1067 6 691 4 322 4 692 4 1069 2 694 8 693 2 1070 2 1434 4 1435 4 1072 60 
904 2 625 2 920 2 323 1 
904 2 905 2 
774 2 381 2 1412 2 673 2 54 2 1063 2 839 2 1272 2 711 2 285 2 1302 4 1407 2 186 2 883 2 1284 2 1253 6 65 4 1390 2 
763 2 920 2 
24 2 431 2 1410 2 314 2 
24 2 113 2 778 2 431 2 1410 2 314 2 
1423 2 1239 2 904 2 431 2 967 2 314 2 
1335 2 1294 2 
1136 2 729 2 431 2 314 2 
219 2 1207 2 
995 2 221 2 
166 2 1059 2 
1349 2 214 2 
1283 2 214 2 995 2 
291 2 214 2 995 2 
534 2 214 2 995 2 
852 2 214 2 995 2 
1310 2 1263 2 314 2 1245 6 779 6 1316 2 1249 2 431 2 
532 2 137 2 
815 2 1239 2 904 2 113 2 431 2 967 2 314 2 
904 2 246 2 967 2 
53 2 904 2 967 2 
532 2 353 2 920 2 
904 2 967 2 
532 2 143 2 
1035 2 904 2 
532 2 471 2 920 2 
166 2 715 2 920 2 
1234 2 214 2 920 2 
1207 2 920 2 123 2 
995 2 920 2 282 2 
532 2 1300 2 
518 2 904 2 
166 2 682 2 
944 2 214 2 
945 2 1207 2 
180 2 995 2 
532 2 94 2 
548 2 
1207 2 825 2 
1377 2 214 2 
166 2 725 2 
532 2 471 2 1430 2 920 2 
1275 2 532 2 471 2 1430 2 920 2 
532 2 920 2 1139 2 
532 2 442 2 920 2 
385 2 40 2 980 2 591 2 
297 2 
330 2 614 2 790 26 96 2 1366 6 1367 2 792 2 1267 2 251 2 1182 2 343 2 521 2 429 2 717 2 1186 2 1188 4 802 2 1383 2 359 2 634 2 545 4 636 2 1292 2 906 2 735 4 202 4 368 8 549 2 1201 6 1394 2 912 2 1020 2 275 4 561 2 211 2 1210 2 1027 4 752 2 1308 4 287 2 378 6 660 2 50 2 220 2 572 2 1037 2 1314 2 135 2 474 2 1315 2 584 2 296 2 1229 2 1138 2 671 2 1140 2 595 2 942 4 946 2 1330 2 599 2 311 2 1157 2 1428 4 405 2 1342 2 859 8 1061 2 775 2 1343 2 319 4 497 2 958 2 1348 6 1252 2 870 26 
0 2 614 2 790 26 96 2 1366 6 1367 2 792 2 1267 2 251 2 340 2 1182 2 343 2 521 2 429 2 717 2 1186 2 1188 4 802 2 1383 2 439 2 359 2 634 2 545 4 636 2 1292 2 906 2 735 6 202 4 368 8 549 2 1201 6 1394 2 912 2 1020 2 275 2 561 2 211 2 1210 2 1027 4 752 2 1308 4 656 2 378 6 660 2 50 2 220 2 572 2 1037 2 1314 2 135 2 474 2 1315 2 584 2 1042 2 296 2 1229 2 1138 2 671 2 1140 2 595 2 942 4 946 2 1330 2 1238 2 599 2 311 2 1157 2 1428 4 1342 2 859 8 1061 2 775 2 1343 2 319 4 497 2 958 2 1348 6 1252 2 870 26 
959 2 
678 2 315 2 
871 2 411 2 245 2 1031 2 787 4 614 2 973 2 286 2 1363 2 417 4 11 6 790 12 572 2 1367 2 384 2 16 6 426 2 140 2 293 2 1038 2 258 2 621 2 1376 2 346 2 1183 2 523 2 714 10 19 2 189 2 716 2 588 4 390 2 1188 2 671 2 392 4 630 2 23 4 304 2 1097 2 1103 2 732 4 1196 8 953 4 1107 6 545 2 317 8 1160 2 549 2 1201 4 686 4 862 2 1020 2 1433 2 1252 2 457 2 559 2 456 2 560 2 1402 2 870 6 
871 2 411 2 245 2 1031 2 787 4 614 2 973 2 286 2 417 4 11 8 790 12 572 2 1367 2 384 2 426 2 16 6 140 2 293 2 1038 2 258 2 621 2 1376 2 346 2 1183 2 523 2 714 10 19 2 189 2 716 2 588 4 1188 2 390 2 671 2 630 2 392 4 23 4 304 2 305 2 1097 2 1103 2 732 4 1196 8 953 4 1107 8 545 2 317 8 1160 2 549 2 738 4 1201 4 38 2 686 4 863 2 1020 2 1433 2 1252 2 559 2 456 2 457 2 560 2 870 6 1402 2 
392 4 871 2 1160 2 1097 2 1031 2 16 2 686 2 1103 2 1376 2 1183 2 732 2 523 2 417 4 588 2 559 2 456 2 457 2 1107 2 
871 2 411 2 245 2 1031 2 787 4 614 2 973 2 286 2 1363 2 417 4 11 6 790 12 572 2 1367 2 384 2 16 4 426 2 140 2 293 2 1038 2 258 2 621 2 1376 2 346 2 1183 2 523 2 714 6 19 2 189 2 716 2 588 4 390 2 1188 2 671 2 392 4 630 2 23 4 305 2 1097 2 1103 2 732 4 1196 4 953 4 1107 6 545 2 317 4 1160 2 549 2 1201 4 686 4 862 2 1020 2 1433 2 1252 2 457 2 559 2 456 2 560 2 1402 2 870 6 
871 2 411 2 245 2 1031 2 787 4 614 2 47 2 973 2 286 2 1363 2 417 4 11 6 790 12 572 2 1367 2 384 2 16 6 426 2 140 2 293 2 1038 2 258 2 621 2 1376 2 346 2 1183 2 523 2 714 6 19 2 189 2 716 2 588 4 390 2 1188 2 671 2 392 4 630 2 23 4 1097 2 1103 2 732 4 1196 4 953 4 1107 4 545 2 317 4 1160 2 549 2 1201 4 686 4 862 2 1020 2 1433 2 1252 2 457 2 559 2 456 2 560 2 1402 2 870 6 
871 2 411 2 245 2 1031 2 787 4 614 2 973 2 286 2 1363 2 417 4 11 6 790 12 572 2 1367 2 384 2 16 6 426 2 140 2 293 2 1038 2 258 2 621 2 1376 2 346 2 1183 2 523 2 714 6 19 2 189 2 716 2 588 4 390 2 1188 2 671 2 392 4 630 2 23 4 304 2 1097 2 1103 2 732 4 1196 8 953 4 1107 6 545 2 317 4 1160 2 549 2 1201 4 686 4 862 2 1020 2 1433 2 1252 2 457 2 559 2 456 2 560 2 1402 2 870 6 
871 2 411 2 245 2 1031 2 787 4 614 2 47 2 973 2 286 2 1363 2 417 4 11 8 790 12 572 2 1367 2 384 2 16 8 426 2 140 2 293 2 1038 2 258 2 621 2 1376 2 346 2 1183 2 523 2 714 10 19 2 189 2 716 2 588 4 390 2 1188 2 671 2 392 4 630 2 23 4 304 2 1097 2 1103 2 732 4 1196 8 953 4 1107 6 545 2 317 8 1160 2 549 2 1201 4 686 4 862 2 1020 2 1433 2 1252 2 457 2 559 2 456 2 560 2 1402 2 870 6 
871 2 411 2 245 2 1031 2 787 4 614 2 973 2 286 2 1363 2 417 4 11 6 790 12 572 2 1367 2 384 2 16 6 426 2 140 2 293 2 1038 2 258 2 621 2 1376 2 346 2 1183 2 523 2 714 10 19 2 189 2 716 2 588 4 390 2 1188 2 671 2 392 4 630 2 23 4 304 2 1097 2 1103 2 732 4 1196 8 953 4 1107 6 545 2 317 8 1160 2 549 2 1201 4 686 4 862 2 1020 2 1433 2 1252 2 457 2 559 2 456 2 560 2 1402 2 870 6 
871 2 505 2 2 1 1077 2 169 2 9 6 516 1 11 12 1267 2 1270 2 343 2 16 8 17 2 521 2 346 2 523 2 714 2 19 4 189 2 716 2 1090 6 719 2 351 2 23 6 535 1 1097 2 1096 6 539 4 1279 2 1103 2 359 2 732 4 1107 4 545 4 546 2 1292 2 735 6 202 4 368 4 549 2 910 2 743 1 1297 2 912 2 1114 1 913 6 559 2 918 6 560 2 1116 4 752 2 218 6 47 4 1127 7 378 6 568 6 220 2 50 2 572 2 384 4 581 2 588 4 390 2 392 4 1329 2 595 2 1146 2 946 2 1330 2 1334 6 953 4 954 6 1160 2 1342 2 775 12 958 2 1348 8 243 7 411 2 245 2 787 8 1174 2 614 2 1359 2 973 2 1175 10 1363 2 1178 2 417 4 790 46 95 6 1366 6 1367 2 792 2 988 1 1182 2 426 2 793 2 991 2 621 2 257 2 258 2 1376 2 1183 2 429 2 1188 4 802 2 630 2 805 2 439 2 1385 2 1386 6 1196 2 444 6 636 2 1201 6 1394 4 451 2 1019 6 1020 2 817 2 1021 8 457 2 456 2 458 2 1402 2 649 1 1210 2 1027 4 650 6 1031 2 1408 1 286 2 657 2 658 1 660 2 1218 2 135 2 140 2 293 2 1038 4 841 6 1042 2 296 2 671 2 672 2 1236 2 307 6 855 2 311 2 1428 4 859 4 1061 2 319 2 686 4 1066 2 1433 2 1252 2 503 2 870 24 
871 2 505 2 411 2 245 2 1077 2 787 8 169 2 1174 2 1359 2 614 2 973 2 1175 10 9 6 1363 2 1178 2 95 6 790 48 11 12 417 4 1366 6 1367 2 792 2 1267 2 1270 2 343 2 1182 2 793 2 426 2 16 8 17 2 991 2 521 2 258 2 257 2 621 2 1376 2 346 2 1183 2 523 2 714 2 19 4 189 2 716 2 429 2 1090 6 719 2 802 2 1188 4 351 2 805 2 23 6 630 2 1096 6 1097 2 1101 2 539 4 1279 2 1385 2 1103 2 439 2 359 2 1386 6 732 4 1196 6 444 6 1107 8 545 4 546 2 636 2 1292 2 735 6 202 4 368 8 549 2 910 2 1201 6 1394 4 1297 2 451 2 912 2 913 6 1019 6 1020 2 817 2 1021 8 918 6 456 2 559 2 457 2 458 2 1116 4 560 2 1402 2 1210 2 1027 4 752 2 650 6 1031 2 218 6 286 2 378 6 568 6 657 2 1218 2 660 4 50 4 220 2 572 2 135 2 384 4 140 2 293 2 1038 4 581 2 841 6 296 2 588 4 1042 2 390 2 845 2 392 4 671 2 672 2 1329 2 595 2 942 2 1146 2 1236 2 304 4 1330 2 946 4 307 6 1334 6 855 2 311 2 953 4 954 6 1428 4 1160 2 1342 2 859 8 775 12 1061 2 319 2 958 2 686 4 1348 8 1066 2 1433 2 1252 2 503 2 870 26 
871 2 505 2 411 2 245 2 1077 2 787 8 169 2 1174 2 1359 2 614 2 973 2 1175 10 9 6 1363 2 1178 2 95 6 790 48 11 12 417 4 1366 6 1367 2 792 2 1267 2 1270 2 343 2 1182 2 793 2 426 2 16 8 17 2 991 2 521 2 258 2 257 2 621 2 1376 2 346 2 1183 2 523 2 714 6 19 4 189 2 716 2 429 2 1090 6 719 2 802 2 1188 4 351 2 805 2 23 6 630 2 1096 6 1097 2 1101 2 539 4 1279 2 1385 2 1103 2 439 2 359 2 1386 6 732 4 1196 6 444 6 1107 8 545 4 546 2 636 2 1292 2 735 6 202 4 368 8 549 2 910 2 1201 6 1394 4 1297 2 451 2 912 2 913 6 1019 6 1020 2 817 2 1021 8 918 6 456 2 559 2 457 2 458 2 1116 4 560 2 1402 2 1210 2 1027 4 752 2 650 6 1031 2 218 6 286 2 378 6 568 6 657 2 1218 2 660 4 50 4 220 2 572 2 135 2 384 4 140 2 293 2 1038 4 581 2 841 6 296 2 588 4 1042 2 390 2 845 2 392 4 671 2 672 2 1329 2 595 2 942 2 1146 2 1236 2 304 4 1330 2 946 4 307 6 1334 6 855 2 953 4 311 2 954 6 1428 4 317 4 1160 2 1342 2 859 8 775 12 1061 2 319 2 958 2 686 4 1348 8 1066 2 1433 2 1252 2 503 2 870 26 
871 2 505 2 1077 2 169 2 9 6 1261 6 10 6 11 16 1267 2 1270 2 343 2 16 10 17 2 521 2 346 2 523 2 714 6 19 4 189 2 716 2 1090 6 719 2 351 2 23 6 1097 2 1096 12 536 6 1101 2 538 6 539 4 1279 2 1103 2 359 4 732 4 1107 10 545 4 546 2 1292 2 735 6 202 4 368 10 549 2 910 2 1297 2 912 2 913 6 559 2 918 12 560 2 1116 4 752 2 218 6 47 2 378 8 568 12 220 2 50 4 572 2 384 4 581 2 760 6 588 4 390 2 392 4 1329 2 595 4 942 2 1146 2 946 4 1330 2 947 2 1334 6 953 4 954 6 1160 2 1342 2 775 10 602 6 958 2 1348 12 1356 2 411 2 245 2 1173 6 787 8 1174 2 614 2 1359 2 973 2 1175 8 1363 2 1178 2 417 4 790 52 95 6 249 2 1366 8 1367 2 792 4 253 2 1182 2 426 2 793 2 258 2 621 2 257 2 1376 2 1183 2 1184 2 429 2 1188 4 802 4 630 2 805 2 439 2 1385 2 1386 6 1196 6 444 6 636 2 1201 6 1394 4 451 2 1019 12 1020 2 817 2 1021 8 457 2 456 2 458 2 1402 2 1210 2 1027 4 650 6 1031 2 286 2 657 2 660 4 1218 2 135 2 140 2 293 2 1038 4 841 12 1042 2 296 2 1228 6 845 2 671 2 672 2 304 4 305 2 1236 2 483 6 307 12 855 2 311 2 1244 2 317 4 1428 6 859 10 1061 2 319 4 1431 2 686 4 1066 2 690 2 1433 2 1252 2 503 2 870 24 
23 2 630 2 392 2 871 2 304 2 245 2 1097 2 787 2 1103 2 973 2 732 4 1196 6 1363 2 790 4 953 2 11 4 417 2 1107 6 317 4 426 2 16 6 140 2 346 2 523 2 714 4 19 2 1433 2 189 2 716 2 588 4 456 2 559 2 457 2 560 2 1402 2 
871 2 245 2 970 2 787 2 1258 2 614 2 973 2 1175 2 1363 2 11 4 417 2 790 28 1366 6 1367 2 792 3 1267 2 1182 2 343 2 16 6 426 2 521 2 991 2 346 2 523 2 714 2 19 2 189 2 429 2 716 2 1188 4 23 2 630 2 1095 2 1097 2 439 2 1103 2 732 4 443 2 1196 6 364 2 1011 2 1107 6 545 4 636 2 1292 2 735 6 202 4 549 2 1201 6 1394 2 912 2 1020 2 457 2 559 2 456 2 560 2 1402 2 1210 2 1027 4 752 2 824 2 378 6 220 2 572 2 135 2 1414 2 140 2 294 3 588 4 1042 2 296 2 297 2 390 2 392 2 671 2 595 3 304 2 953 2 311 2 1428 4 1342 2 1061 2 775 4 319 3 958 2 1348 8 1433 2 1252 2 870 24 
973 2 897 2 1433 2 
973 2 897 2 1433 2 
871 2 698 4 505 2 411 2 787 4 614 2 973 6 1175 2 790 24 417 2 11 16 176 2 1366 2 1367 2 338 2 1267 2 1270 2 1182 2 343 2 16 12 521 2 621 2 1376 2 346 2 523 4 714 6 19 4 429 2 1188 4 23 4 897 2 539 2 439 2 263 2 732 4 1196 6 444 2 1010 2 1107 12 545 4 636 2 1292 2 735 6 202 4 368 4 549 2 1201 6 641 2 1394 6 911 2 1020 2 275 2 457 2 1116 2 560 2 647 2 1210 2 1027 4 752 2 922 2 47 4 286 2 377 2 378 2 657 2 1129 2 660 4 50 4 220 2 572 2 135 2 1223 2 384 4 229 2 59 4 1038 2 1042 2 296 2 588 4 671 2 392 2 304 4 305 4 596 2 1330 4 946 4 151 2 599 4 311 2 953 2 317 4 1160 2 406 2 859 4 1342 2 1061 2 775 4 319 2 958 2 686 4 1348 2 83 2 1433 4 1252 2 695 2 870 16 
406 2 1223 2 775 2 204 2 1031 2 539 2 911 2 1385 2 678 2 677 2 581 2 1175 2 585 2 444 2 790 4 1367 2 870 2 
871 2 698 4 505 2 411 2 787 4 614 2 973 6 174 2 790 24 417 2 11 16 176 4 1366 2 1367 2 338 2 1267 2 421 2 1270 2 1182 2 343 2 16 12 521 2 621 2 258 2 1376 2 346 2 523 4 714 6 19 4 429 2 1188 4 23 4 897 2 439 2 263 2 732 4 1196 6 444 2 1010 2 1107 12 545 4 636 2 1292 2 735 6 202 4 368 4 549 2 1201 6 1394 6 911 2 1020 2 457 2 1116 2 560 2 276 2 647 2 1210 2 1027 4 752 2 922 2 47 4 286 2 377 2 378 2 657 2 1129 2 660 4 50 4 220 2 572 2 289 2 135 2 1223 2 384 4 59 4 1038 4 1042 2 296 2 588 4 671 2 392 2 304 4 305 4 1330 4 946 4 308 2 151 2 599 4 953 2 311 2 317 4 1160 2 406 2 859 4 1342 2 1061 2 775 2 319 4 958 2 686 4 1348 2 83 2 1433 4 1252 2 870 16 
871 2 698 4 505 2 411 2 787 4 614 2 973 6 1175 2 790 24 417 2 11 16 176 2 1366 2 1367 2 338 2 1267 2 1270 2 1182 2 343 2 16 12 521 2 621 2 258 2 1376 2 346 2 523 4 714 6 19 4 429 2 1188 4 23 4 897 2 1190 2 539 2 439 2 263 2 732 4 1196 6 444 2 1010 2 1107 12 545 4 636 2 1292 2 735 6 202 4 368 4 549 2 1201 6 1394 6 911 2 1020 2 275 1 457 2 1116 2 560 2 647 2 1210 2 1027 4 752 2 922 2 47 4 286 2 377 2 378 2 657 2 127 2 1129 2 660 4 50 4 220 2 572 2 135 2 1223 2 384 4 59 4 1038 4 1042 2 296 2 588 4 671 2 392 2 593 2 1233 2 304 4 305 4 1330 4 946 4 151 2 599 4 311 2 953 2 317 4 1160 2 406 2 859 4 1342 2 1061 2 775 4 319 2 958 2 686 4 1348 2 83 2 1433 4 1252 2 86 2 870 16 
1355 2 1 2 1170 4 1357 4 873 4 510 2 413 8 703 6 1174 2 332 2 614 2 173 22 880 4 334 6 335 2 175 2 790 28 975 1 1080 2 12 2 1365 2 1366 10 1264 2 420 2 1367 2 1369 1 792 6 1267 2 519 2 1181 2 520 2 423 6 341 6 343 2 1182 2 521 2 1375 6 429 2 717 4 190 2 350 2 1091 2 802 6 1188 4 1189 2 351 2 1381 2 805 2 192 6 261 2 355 2 106 2 29 4 810 2 437 2 1279 2 438 2 439 2 359 6 110 2 265 4 443 2 542 2 268 4 544 6 1286 4 1011 2 545 4 1391 2 636 2 546 2 1292 2 735 6 202 4 368 10 1295 2 549 2 1109 4 1201 6 1394 2 552 6 912 2 644 4 39 4 454 2 1020 2 817 2 558 4 1022 2 42 2 209 2 210 2 1210 2 213 4 1027 4 279 2 752 2 564 2 755 2 43 2 45 2 824 2 378 10 930 2 222 2 220 2 223 1 572 2 662 2 1132 2 135 2 1414 2 139 2 294 2 388 2 1135 1 1418 2 1225 4 233 4 1042 2 296 2 668 2 299 2 671 2 1046 2 303 4 595 6 1330 2 851 2 598 4 766 1 676 4 1240 2 487 2 1155 2 311 2 77 2 680 4 493 4 1427 2 1428 8 859 10 1342 2 775 2 319 6 156 6 958 2 1348 16 241 2 1066 2 781 2 1252 2 966 2 85 4 1436 2 87 4 504 2 870 22 
761 2 595 3 412 4 923 2 1078 3 378 2 790 2 1366 2 472 2 1428 2 792 3 1058 2 407 2 319 3 1415 2 1348 2 912 2 745 2 864 2 1303 2 624 2 1274 2 802 6 870 2 
761 2 595 2 412 4 923 2 1078 2 378 2 790 2 1366 2 472 2 1428 2 792 2 1058 2 407 2 319 2 1415 2 1348 2 912 2 745 2 864 2 1303 2 624 2 1274 2 802 6 870 2 
761 2 595 2 412 4 923 2 1078 2 378 2 790 2 1366 2 472 2 1428 2 792 2 1058 2 407 2 319 2 1415 2 1348 2 912 2 745 2 864 2 1303 2 624 2 1274 2 802 6 870 2 
192 4 213 2 354 2 850 2 948 2 43 2 413 5 851 2 70 2 45 2 1421 2 332 2 397 3 235 4 790 10 931 4 772 4 493 2 367 2 710 4 155 4 736 2 792 3 1341 4 551 2 319 3 1348 2 990 6 345 2 912 2 477 2 499 2 799 2 1401 2 1274 2 21 2 391 3 1117 3 87 2 870 4 
192 4 213 2 354 2 850 2 948 2 43 2 29 2 413 4 851 2 70 2 45 2 1421 2 332 2 397 2 235 4 1362 2 790 10 931 4 772 4 493 2 367 2 710 4 155 4 736 2 792 2 1341 4 551 2 319 2 1348 2 990 6 345 2 912 2 477 2 499 2 799 2 558 2 1401 2 1274 2 21 2 391 2 1117 2 87 2 870 4 
192 4 213 2 354 2 850 2 948 2 43 2 29 2 413 4 851 2 70 2 45 2 1421 2 332 2 397 2 235 4 1362 2 790 10 931 4 772 4 493 2 367 2 710 4 155 4 736 2 792 2 1341 4 551 2 319 2 1348 2 990 6 345 2 912 2 477 2 499 2 799 2 558 2 1401 2 1274 2 21 2 391 2 1117 2 87 2 870 4 
192 4 213 2 354 2 850 2 948 2 43 2 29 2 413 4 851 2 70 2 45 2 1421 2 332 2 397 2 235 4 1362 2 790 10 931 4 772 4 493 2 367 2 710 4 155 4 736 2 792 2 1341 4 551 2 319 2 1348 2 990 6 345 2 912 2 477 2 499 2 799 2 558 2 1401 2 1274 2 21 2 391 2 1117 2 87 2 870 4 
192 4 213 2 354 2 850 2 948 2 43 2 29 4 413 4 851 2 70 2 45 2 1421 2 332 2 397 2 235 4 1362 4 790 10 931 4 772 4 493 2 367 2 710 4 155 4 736 2 792 2 1341 4 551 2 319 2 1348 2 990 6 345 2 912 2 477 2 499 2 799 2 558 4 1401 2 1274 2 21 2 391 2 1117 2 87 2 870 4 
79 2 196 2 807 2 1088 2 717 2 71 2 142 2 
331 2 79 2 890 2 542 2 259 2 1280 2 
478 2 1001 2 1026 2 727 2 1096 2 652 2 31 2 614 2 882 2 790 10 237 2 769 2 490 2 858 2 601 2 1345 2 553 1 689 2 60 1 1087 1 524 2 1250 2 1251 1 1023 1 870 8 89 2 
628 2 192 12 213 6 765 2 413 15 43 6 29 4 851 6 45 6 332 6 172 2 110 2 265 2 1362 2 790 6 1106 2 313 1 493 6 772 4 367 2 1109 2 341 4 795 2 586 4 558 3 525 2 42 2 462 2 87 6 373 2 870 6 
155 2 710 2 1168 2 847 2 888 2 138 2 58 2 876 2 1192 2 160 2 1197 2 105 2 931 2 
1168 2 155 2 710 2 847 2 888 2 206 2 138 2 58 2 876 4 1192 2 160 6 1197 2 790 1 1206 1 419 2 105 2 931 2 870 1 
155 2 710 2 1168 4 847 4 206 2 888 2 138 2 58 2 876 4 1192 4 160 6 1197 2 419 2 105 2 931 2 
155 2 710 2 1168 8 847 8 206 8 888 2 138 2 58 2 876 4 1192 8 160 10 1197 2 790 1 1206 1 419 6 105 2 931 2 870 1 
165 8 872 4 168 4 506 90 699 6 786 84 511 2 878 92 705 4 1360 6 334 20 416 8 336 2 790 140 1262 24 975 9 1364 4 1081 4 979 4 97 26 1369 6 1268 6 252 2 15 8 424 2 256 12 1182 8 1375 4 796 6 798 4 184 6 1379 4 430 6 528 2 1000 6 191 42 723 8 27 26 262 12 439 56 635 6 112 6 199 2 1289 50 735 234 202 84 908 10 34 12 813 13 550 116 449 6 1395 32 554 90 1397 1 1018 4 556 4 749 10 557 4 371 6 275 2 372 18 646 4 277 2 212 2 1027 108 1120 42 374 6 463 2 1306 24 281 4 924 6 1403 2 217 4 1404 2 567 4 929 10 829 4 659 6 220 14 223 10 832 2 836 6 135 14 136 2 387 5 141 2 475 6 933 6 230 12 147 6 1135 6 148 6 1042 56 844 6 592 4 941 2 1147 24 1237 6 1149 8 1050 2 486 24 310 12 1054 6 154 4 680 31 1158 2 771 4 404 24 318 2 80 6 859 24 1162 8 1246 4 955 24 1062 2 157 2 239 6 1346 14 240 6 409 8 965 8 1167 4 164 6 606 2 867 4 696 2 870 128 
1209 2 374 2 1027 20 1306 2 609 2 375 2 1169 2 699 2 281 4 217 2 971 2 329 2 653 2 1033 2 615 2 880 6 1361 2 1177 2 416 2 929 2 790 46 1079 2 220 2 573 2 984 4 134 2 834 2 1268 2 886 2 135 2 15 6 1413 2 256 4 580 2 1182 2 139 4 141 2 933 2 1133 2 622 2 147 2 295 2 1042 2 937 2 721 2 1187 2 844 2 1000 2 723 2 896 2 1143 2 1147 2 633 2 1237 2 674 2 107 2 1149 2 439 2 72 2 150 2 950 2 74 2 399 2 310 4 198 4 112 2 199 2 446 2 404 2 857 2 735 44 908 2 202 20 34 4 813 2 859 38 550 6 1395 2 157 2 1346 2 604 4 409 2 749 2 1351 2 500 2 557 2 371 2 275 2 965 2 562 2 277 2 870 44 
872 4 168 2 699 4 91 8 786 24 878 24 788 32 705 4 615 10 789 16 515 8 514 4 1360 4 416 2 790 78 1079 2 1262 8 618 2 979 4 1268 4 15 6 424 2 425 2 256 10 1182 2 796 4 184 4 1379 4 430 4 1187 10 191 16 1000 4 723 4 1004 2 1099 16 262 14 439 30 635 4 112 4 199 2 1289 8 735 104 34 10 202 36 203 2 813 10 550 24 449 4 1395 6 1018 4 371 4 646 4 277 2 1209 2 212 4 1027 44 1120 8 374 4 1121 4 1212 4 281 2 1403 2 924 4 1030 4 756 8 567 4 828 4 379 2 829 4 220 6 223 8 834 2 758 4 836 4 135 6 136 4 141 2 475 4 933 4 147 6 1135 3 148 4 1042 28 844 4 592 4 941 2 1237 4 848 2 72 2 1049 8 310 10 1054 4 680 30 859 14 1062 2 157 2 239 4 1346 10 240 4 409 2 84 4 500 10 965 2 1167 4 867 4 164 4 870 70 
212 2 1027 14 374 2 168 2 699 2 281 2 1404 2 334 10 416 2 336 2 1079 2 790 28 975 1 220 2 223 5 1369 1 1268 4 252 2 135 2 15 4 136 2 256 6 1182 2 141 2 933 4 1375 2 147 2 1042 12 528 2 844 2 1000 4 723 2 1237 4 107 2 439 12 72 2 950 2 1050 2 310 6 112 4 199 2 680 6 735 40 202 14 34 6 859 14 813 2 550 8 1395 2 157 2 1346 2 409 2 371 4 965 2 275 2 606 2 1167 4 277 2 870 26 
926 2 
748 1 884 1 617 1 450 1 408 1 1082 1 
748 1 884 1 617 1 450 1 408 1 1082 1 
748 1 884 1 617 1 450 1 408 1 1082 1 
748 1 884 1 617 1 450 1 408 1 1082 1 
748 1 884 1 617 1 450 1 408 1 1082 1 
748 1 884 1 617 1 450 1 408 1 1082 1 
748 1 884 1 617 1 450 1 408 1 1082 1 
748 1 884 1 617 1 450 1 408 1 1082 1 
748 1 884 1 617 1 450 1 408 1 1082 1 
748 1 884 1 617 1 450 1 408 1 1082 1 
748 1 884 1 617 1 450 1 408 1 1082 1 
748 1 884 1 617 1 450 1 408 1 1082 1 
748 1 884 1 617 1 450 1 408 1 1082 1 
748 1 884 1 617 1 450 1 408 1 1082 1 
748 1 884 1 617 1 450 1 408 1 1082 1 
748 1 884 1 617 1 450 1 408 1 1082 1 
748 1 884 1 617 1 450 1 408 1 1082 1 
748 1 884 1 617 1 450 1 408 1 1082 1 
748 1 884 1 617 1 450 1 408 1 1082 1 
748 1 884 1 617 1 450 1 408 1 1082 1 
748 1 884 1 617 1 450 1 408 1 1082 1 
748 1 884 1 617 1 450 1 408 1 1082 1 
748 1 884 1 617 1 450 1 408 1 1082 1 
748 1 884 1 617 1 450 1 408 1 1082 1 
748 1 884 1 617 1 450 1 408 1 1082 1 
748 1 884 1 617 1 450 1 408 1 1082 1 
748 1 884 1 617 1 450 1 408 1 1082 1 
748 1 884 1 617 1 450 1 408 1 1082 1 
748 1 884 1 617 1 450 1 408 1 1082 1 
748 1 884 1 617 1 450 1 408 1 1082 1 
748 1 884 1 617 1 450 1 408 1 1082 1 
748 1 884 1 617 1 450 1 408 1 1082 1 
748 1 884 1 617 1 450 1 408 1 1082 1 
748 1 884 1 617 1 450 1 408 1 1082 1 
748 1 884 1 617 1 450 1 408 1 1082 1 
748 1 884 1 617 1 450 1 408 1 1082 1 
748 1 884 1 617 1 450 1 408 1 1082 1 
748 1 884 1 617 1 450 1 408 1 1082 1 
748 1 884 1 617 1 450 1 408 1 1082 1 
748 1 884 1 617 1 450 1 408 1 1082 1 
748 1 884 1 617 1 450 1 408 1 1082 1 
748 1 884 1 617 1 450 1 408 1 1082 1 
748 1 884 1 617 1 450 1 408 1 1082 1 
748 1 884 1 617 1 450 1 408 1 1082 1 

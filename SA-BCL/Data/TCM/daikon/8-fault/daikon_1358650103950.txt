#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V ERROR java.lang.Error 429 
utilMDE.TestUtilMDE:testOptions()V ERROR utilMDE.Options$ArgException 1031 
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.NullPointerException (27,33,50,79,183,188,214,245,279,304,344,363,395,407,460,471,481,505,549,560,618,621,625,626,646,662,677,746,897,1032,1035,1041,1087,1116,1130,1144,1152,1181,1189,1233,1277,1296) 546 103 (27,33,50,79,183,188,214,245,279,304,344,363,395,407,460,471,481,505,549,560,618,621,625,626,646,662,677,746,897,1032,1035,1041,1087,1116,1130,1144,1152,1181,1189,1233,1277,1296) 1057 103 (27,33,50,79,183,188,214,245,279,304,344,363,395,407,460,471,481,505,549,560,618,621,625,626,646,662,677,746,897,1032,1035,1041,1087,1116,1130,1144,1152,1181,1189,1233,1277,1296) 1016 (27,33,50,79,183,188,214,245,279,304,344,363,395,407,460,471,481,505,549,560,618,621,625,626,646,662,677,746,897,1032,1035,1041,1087,1116,1130,1144,1152,1181,1189,1233,1277,1296) 1254 (27,33,50,79,183,188,214,245,279,304,344,363,395,407,460,471,481,505,549,560,618,621,625,626,646,662,677,746,897,1032,1035,1041,1087,1116,1130,1144,1152,1181,1189,1233,1277,1296) 553 (27,33,50,79,183,188,214,245,279,304,344,363,395,407,460,471,481,505,549,560,618,621,625,626,646,662,677,746,897,1032,1035,1041,1087,1116,1130,1144,1152,1181,1189,1233,1277,1296) 459 (27,33,50,79,183,188,214,245,279,304,344,363,395,407,460,471,481,505,549,560,618,621,625,626,646,662,677,746,897,1032,1035,1041,1087,1116,1130,1144,1152,1181,1189,1233,1277,1296) 129 (27,33,50,79,183,188,214,245,279,304,344,363,395,407,460,471,481,505,549,560,618,621,625,626,646,662,677,746,897,1032,1035,1041,1087,1116,1130,1144,1152,1181,1189,1233,1277,1296) 302 (27,33,50,79,183,188,214,245,279,304,344,363,395,407,460,471,481,505,549,560,618,621,625,626,646,662,677,746,897,1032,1035,1041,1087,1116,1130,1144,1152,1181,1189,1233,1277,1296) 71 (27,33,50,79,183,188,214,245,279,304,344,363,395,407,460,471,481,505,549,560,618,621,625,626,646,662,677,746,897,1032,1035,1041,1087,1116,1130,1144,1152,1181,1189,1233,1277,1296) 657 (27,33,50,79,183,188,214,245,279,304,344,363,395,407,460,471,481,505,549,560,618,621,625,626,646,662,677,746,897,1032,1035,1041,1087,1116,1130,1144,1152,1181,1189,1233,1277,1296) 288 (27,33,50,79,183,188,214,245,279,304,344,363,395,407,460,471,481,505,549,560,618,621,625,626,646,662,677,746,897,1032,1035,1041,1087,1116,1130,1144,1152,1181,1189,1233,1277,1296) 251 (27,33,50,79,183,188,214,245,279,304,344,363,395,407,460,471,481,505,549,560,618,621,625,626,646,662,677,746,897,1032,1035,1041,1087,1116,1130,1144,1152,1181,1189,1233,1277,1296) 310 (27,33,50,79,183,188,214,245,279,304,344,363,395,407,460,471,481,505,549,560,618,621,625,626,646,662,677,746,897,1032,1035,1041,1087,1116,1130,1144,1152,1181,1189,1233,1277,1296) 1022 (27,33,50,79,183,188,214,245,279,304,344,363,395,407,460,471,481,505,549,560,618,621,625,626,646,662,677,746,897,1032,1035,1041,1087,1116,1130,1144,1152,1181,1189,1233,1277,1296) 1295 (27,33,50,79,183,188,214,245,279,304,344,363,395,407,460,471,481,505,549,560,618,621,625,626,646,662,677,746,897,1032,1035,1041,1087,1116,1130,1144,1152,1181,1189,1233,1277,1296) 1119 (27,33,50,79,183,188,214,245,279,304,344,363,395,407,460,471,481,505,549,560,618,621,625,626,646,662,677,746,897,1032,1035,1041,1087,1116,1130,1144,1152,1181,1189,1233,1277,1296) 651 (27,33,50,79,183,188,214,245,279,304,344,363,395,407,460,471,481,505,549,560,618,621,625,626,646,662,677,746,897,1032,1035,1041,1087,1116,1130,1144,1152,1181,1189,1233,1277,1296) 1188 103 (27,33,50,79,183,188,214,245,279,304,344,363,395,407,460,471,481,505,549,560,618,621,625,626,646,662,677,746,897,1032,1035,1041,1087,1116,1130,1144,1152,1181,1189,1233,1277,1296) 1238 103 (27,33,50,79,183,188,214,245,279,304,344,363,395,407,460,471,481,505,549,560,618,621,625,626,646,662,677,746,897,1032,1035,1041,1087,1116,1130,1144,1152,1181,1189,1233,1277,1296) 857 (27,33,50,79,183,188,214,245,279,304,344,363,395,407,460,471,481,505,549,560,618,621,625,626,646,662,677,746,897,1032,1035,1041,1087,1116,1130,1144,1152,1181,1189,1233,1277,1296) 863 (27,33,50,79,183,188,214,245,279,304,344,363,395,407,460,471,481,505,549,560,618,621,625,626,646,662,677,746,897,1032,1035,1041,1087,1116,1130,1144,1152,1181,1189,1233,1277,1296) 844 103 (27,33,50,79,183,188,214,245,279,304,344,363,395,407,460,471,481,505,549,560,618,621,625,626,646,662,677,746,897,1032,1035,1041,1087,1116,1130,1144,1152,1181,1189,1233,1277,1296) 1125 103 (27,33,50,79,183,188,214,245,279,304,344,363,395,407,460,471,481,505,549,560,618,621,625,626,646,662,677,746,897,1032,1035,1041,1087,1116,1130,1144,1152,1181,1189,1233,1277,1296) 890 103 (27,33,50,79,183,188,214,245,279,304,344,363,395,407,460,471,481,505,549,560,618,621,625,626,646,662,677,746,897,1032,1035,1041,1087,1116,1130,1144,1152,1181,1189,1233,1277,1296) 475 (27,33,50,79,183,188,214,245,279,304,344,363,395,407,460,471,481,505,549,560,618,621,625,626,646,662,677,746,897,1032,1035,1041,1087,1116,1130,1144,1152,1181,1189,1233,1277,1296) 863 (27,33,50,79,183,188,214,245,279,304,344,363,395,407,460,471,481,505,549,560,618,621,625,626,646,662,677,746,897,1032,1035,1041,1087,1116,1130,1144,1152,1181,1189,1233,1277,1296) 830 322 103 (27,33,50,79,183,188,214,245,279,304,344,363,395,407,460,471,481,505,549,560,618,621,625,626,646,662,677,746,897,1032,1035,1041,1087,1116,1130,1144,1152,1181,1189,1233,1277,1296) 890 103 (27,33,50,79,183,188,214,245,279,304,344,363,395,407,460,471,481,505,549,560,618,621,625,626,646,662,677,746,897,1032,1035,1041,1087,1116,1130,1144,1152,1181,1189,1233,1277,1296) 861 (27,33,50,79,183,188,214,245,279,304,344,363,395,407,460,471,481,505,549,560,618,621,625,626,646,662,677,746,897,1032,1035,1041,1087,1116,1130,1144,1152,1181,1189,1233,1277,1296) 863 (27,33,50,79,183,188,214,245,279,304,344,363,395,407,460,471,481,505,549,560,618,621,625,626,646,662,677,746,897,1032,1035,1041,1087,1116,1130,1144,1152,1181,1189,1233,1277,1296) 605 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 175 455 622 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V FAILED junit.framework.AssertionFailedError 377 1308 
daikon.test.VarInfoNameTest:testSubscript()V ERROR utilMDE.Assert$AssertionException (689,1146) (689,1146) 86 533 768 1308 
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 533 768 1308 
daikon.test.VarInfoNameTest:testJML()V ERROR utilMDE.Assert$AssertionException (689,1146) (689,1146) 86 533 768 1308 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
jtb.JavaParser:jj_2_15(I)Z
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eq(II)Z
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3_3()Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
utilMDE.LimitedSizeIntSet:size()I
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
jtb.JavaParser:jj_3R_109()Z
daikon.VarInfo:isPointer()Z
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.TypeBound:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.test.FormatTestCase.SingleOutputTestCase:getDiffString()Ljava.lang.String;
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:numIntArrays()I
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBody;)V
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.Invariants:Invariants()V
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.PptName:isCombinedExitPoint()Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParser:jj_3R_75()Z
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
jtb.JavaParser:jj_3_20()Z
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:lexEqual([I[I)Z
utilMDE.FuzzyFloat:set_rel_diff(D)V
jtb.JavaParser:jj_3R_108()Z
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PackageDeclaration;)V
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.PackageDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.LowerBoundCore:calc_modulus()J
jtb.syntaxtree.MethodDeclarator:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.EqualityExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_161()Z
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.inv.Invariant:isWorthPrinting()Z
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.CompilationUnit;)V
daikon.Quant:subsetOf([F[F)Z
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName:isLiteralConstant()Z
daikon.VarInfoName.Simple:isLiteralConstant()Z
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:pairwiseEqual([I[I)Z
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V | CONDITION | 10865 | if (x) -> if (!x)
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
jtb.JavaParser:jj_3R_123()Z
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
daikon.Quant:eltsLT([II)Z
jtb.JavaParser:jj_3R_148()Z
jtb.JavaParser:jj_3R_137()Z
utilMDE.ArraysMDE:indexOf([I[I)I
jtb.JavaParser:jj_3R_115()Z
jtb.syntaxtree.NodeChoice:accept(Ljtb.visitor.Visitor;)V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.FuzzyFloat:FuzzyFloat()V
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
jtb.JavaCharStream:getBeginColumn()I
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:jj_3R_48()Z
daikon.Quant:eltwiseNotEqual([I)Z
jtb.JavaParser:jj_3R_120()Z
utilMDE.ArraysMDE:element_range([I)I
jtb.syntaxtree.RelationalExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_72()Z
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
jtb.JavaParser:jj_3R_51()Z
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
utilMDE.MathMDE:sign(I)I
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.Invariant:prob_and(DDD)D
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaCharStream:BeginToken()C
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
jtb.JavaParser:jj_2_10(I)Z
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.NodeListOptional:present()Z
jtb.syntaxtree.FormalParameter:FormalParameter(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Type;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_63()Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:passes()Z
daikon.Quant:pairwiseGTE([I[I)Z
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
utilMDE.ArraysMDE:min_max([I)[I
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeSequence;)V
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_80()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AdditiveExpression;)V
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3_1()Z
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.Quant:gte(II)Z
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeToken:trimSpecials()V
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptTopLevel.CondIterator:hasNext()Z
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeBound;)V
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_180()Z
jtb.JavaParser:jj_3_5()Z
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.FormalParameters:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.NonZero:enabled()Z
utilMDE.MathMDE:gcd_differences([I)I
daikon.Quant:eltwiseLT([I)Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_77()Z
jtb.JavaParser:jj_3R_106()Z
utilMDE.ArraysMDE:indexOf([ZZ)I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_116()Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;)V
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
jtb.JavaParser:jj_2_16(I)Z
jtb.JavaParser:jj_2_3(I)Z
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
jtb.syntaxtree.InclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_scan_token(I)Z
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
jtb.JavaCharStream:getEndColumn()I
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.Quant:union([I[I)[I
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.UpperBoundCore:calc_range()J
utilMDE.ArraysMDE:concat([I[I)[I
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.test.TestAst.ClassOrInterfaceDeclarationHarvester:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_54()Z
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.TypeArgument:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReturnStatement;)V
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
utilMDE.ArraysMDE:sum([[D)D
utilMDE.FuzzyFloat:gte(DD)Z
jtb.JavaParser:jj_3_14()Z
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.ExclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_49()Z
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:computeConfidence()D
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_99()Z
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:pairwiseGT([I[I)Z
daikon.ModBitTracker:ModBitTracker(I)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
jtb.JavaParser:jj_3_17()Z
jtb.syntaxtree.InstanceOfExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_136()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_60()Z
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.TypeParameter:accept(Ljtb.visitor.Visitor;)V
daikon.ValueTuple:isMissing(I)Z
jtb.syntaxtree.ConditionalAndExpression:accept(Ljtb.visitor.Visitor;)V
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.Quant:pairwiseSquare([I[I)Z
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.PptSlice1:num_samples()I
jtb.JavaParser:jj_2_18(I)Z
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.ProglangType:isPseudoArray()Z
jtb.syntaxtree.ClassOrInterfaceDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_2_21(I)Z
jtb.JavaParser:jj_3R_105()Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:subarray([III)[I
utilMDE.MathMDE:mod_positive(II)I
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.Quant:eltwiseGTE([I)Z
jtb.JavaParserTokenManager:MoreLexicalActions()V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName:name()Ljava.lang.String;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:lexLTE([I[I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.ProglangType:baseIsFloat()Z
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.inv.filter.InvariantFilters:InvariantFilters()V
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.VarInfoName.Elements:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ImportDeclaration;)V
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:sameLength([I[I)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
jtb.syntaxtree.ClassOrInterfaceDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
jtb.JavaCharStream:FillBuff()V
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
jtb.JavaParser:jj_3R_117()Z
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
jtb.JavaParser:jj_3R_69()Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:subsetOf([B[I)Z
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.Quant:subsetOf([F[D)Z
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
jtb.syntaxtree.Modifiers:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReferenceType;)V
jtb.Token:newToken(I)Ljtb.Token;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_2_13(I)Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.Quant:noDups([I)Z
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.Quant:memberOf(D[F)Z
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeDeclaration;)V
jtb.JavaParser:jj_3R_122()Z
daikon.ModBitTracker:num_vars()I
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.Quant:gt(II)Z
jtb.JavaParser:jj_3_25()Z
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.Quant:eltsGteIndex([I)Z
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:fn_compose([I[I)[I
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
daikon.PptSlice1:arity()I
daikon.ProglangType:isFloat()Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.Quant:subsetOf([S[S)Z
daikon.Quant:lexNotEqual([I[I)Z
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_70()Z
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
jtb.JavaParser:jj_3_29()Z
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
utilMDE.MathMDE:gcd(JJ)J
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName; | ASSIGN | 99550 | = null
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
jtb.syntaxtree.ShiftExpression:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Statement;)V
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.Quant:pairwiseLT([I[I)Z
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.syntaxtree.NodeSequence:elements()Ljava.util.Enumeration;
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
jtb.JavaParser:jj_3R_164()Z
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameter;)V
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.PptSlice0:initInvariantsSeen()V
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpression;)V
daikon.inv.unary.scalar.Modulus:enabled()Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
jtb.JavaParser:jj_2_1(I)Z
daikon.Quant:eltsGTE([II)Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
jtb.JavaParser:jj_3R_103()Z
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
jtb.JavaParser:jj_3R_126()Z
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalExpression;)V
daikon.inv.unary.LowerBoundCore:calc_range()J
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eltsGtIndex([I)Z
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
jtb.syntaxtree.TypeDeclaration:TypeDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
jtb.JavaParser:jj_2_25(I)Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
utilMDE.WeakHasherMap:processQueue()V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.inv.unary.scalar.UpperBound:enabled()Z
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.Positive:enabled()Z
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:hashCode()I
utilMDE.Intern:internSubsequence([JII)[J
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.ProglangType:dimensions()I
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
jtb.syntaxtree.PostfixExpression:accept(Ljtb.visitor.Visitor;)V
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;)V
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
jtb.syntaxtree.AdditiveExpression:accept(Ljtb.visitor.Visitor;)V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_2_36(I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InstanceOfExpression;)V
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.Quant:lte(II)Z
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.inv.Invariant:getConfidence()D
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
jtb.JavaParser:FormalParameter()Ljtb.syntaxtree.FormalParameter;
utilMDE.ArraysMDE:noDuplicates([D)Z
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
jtb.JavaCharStream:getBeginLine()I
utilMDE.ArraysMDE:fn_is_permutation([I)Z
jtb.JavaParser:jj_3_28()Z
utilMDE.MathMDE:missing_numbers([I)[I
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
jtb.syntaxtree.FormalParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.ProglangType:isScalar()Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.Quant:isReverse([I[I)Z
jtb.JavaParser:jj_3R_68()Z
daikon.Quant:memberOf(F[D)Z
daikon.inv.OutputFormat:isJavaFamily()Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.syntaxtree.CompilationUnit:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
jtb.JavaParser:jj_3R_89()Z
jtb.JavaCharStream:getEndLine()I
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
utilMDE.FuzzyFloat:lt(DD)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ShiftExpression;)V
jtb.JavaParser:jj_3R_81()Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MultiplicativeExpression;)V
daikon.test.InvariantFormatTester:execute()Z
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Expression;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.RelationalExpression;)V
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
utilMDE.FuzzyFloat:eq(DD)Z
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
jtb.JavaParser:jj_3_4()Z
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AndExpression;)V
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
jtb.syntaxtree.TypeDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeOptional:accept(Ljtb.visitor.Visitor;)V
daikon.diff.Node:Node()V
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
utilMDE.WeakHasherMap:size()I
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.AndExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.ModBitTracker:split(I)I
jtb.syntaxtree.NodeList:NodeList()V
jtb.JavaParser:jj_3R_107()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ExclusiveOrExpression;)V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.ModBitTracker:num_samples()I
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
jtb.syntaxtree.ClassOrInterfaceBody:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_52()Z
jtb.JavaParser:jj_3R_85()Z
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameters;)V
jtb.syntaxtree.NodeToken:accept(Ljtb.visitor.Visitor;)V
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:ClassOrInterfaceDeclaration(Ljtb.syntaxtree.NodeChoice;Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ClassOrInterfaceBody;)V
jtb.JavaParser:jj_3_21()Z
utilMDE.MathMDE:mod_positive(JJ)J
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
jtb.JavaParser:jj_2_14(I)Z
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.syntaxtree.CompilationUnit:CompilationUnit(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.inv.Invariant:logOn()Z
daikon.ProglangType:isArray()Z
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_210()Z
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_50()Z
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltsLtIndex([I)Z
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.diff.DetailedStatisticsVisitor:freq(II)D
jtb.JavaParser:jj_3_12()Z
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_102()Z
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfo:name()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.VarInfo:relate_var()V
daikon.Quant:ne(II)Z
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.Quant:lexGTE([I[I)Z
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.Name:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Modifiers;)V
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.JavaParser:jj_3_10()Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
utilMDE.ArraysMDE:sorted([I)Z
daikon.Quant:subsetOf([I[I)Z
utilMDE.OrderedPairIterator:setnext1()V
jtb.JavaParser:jj_2_4(I)Z
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:indexFor(II)I
jtb.JavaParser:jj_3R_110()Z
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
jtb.syntaxtree.ReferenceType:accept(Ljtb.visitor.Visitor;)V
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.Ppt:Ppt()V
daikon.Quant:pairwiseLTE([I[I)Z
daikon.ProglangType:baseIsScalar()Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.inv.ValueSet:ValueSet(I)V
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.Quant:concat([I[I)[I
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
jtb.JavaParser:jj_2_35(I)Z
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
utilMDE.MathMDE:pow_fast(II)I
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
utilMDE.Intern:intern([J)[J
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.Quant:eltwiseLTE([I)Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_62()Z
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.Quant:slice([III)[I
daikon.Debug:logDetail()Z
utilMDE.ArraysMDE:fn_inverse([II)[I
jtb.JavaParser:jj_3R_58()Z
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.Quant:memberOf(F[F)Z
daikon.ValueTuple:isMissingFlow(I)Z
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Invariant:logDetail()Z
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_73()Z
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.ClassOrInterfaceType:accept(Ljtb.visitor.Visitor;)V
utilMDE.OrderedPairIterator:hasNext()Z
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
jtb.JavaParser:jj_3_35()Z
jtb.JavaParser:jj_3R_135()Z
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
jtb.JavaParser:VariableDeclaratorId()Ljtb.syntaxtree.VariableDeclaratorId;
jtb.JavaParser:jj_3R_101()Z
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.syntaxtree.ClassOrInterfaceBody:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_74()Z
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.diff.RootNode:RootNode()V
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.Quant:memberOf(I[I)Z
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
jtb.syntaxtree.Block:accept(Ljtb.visitor.Visitor;)V
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
jtb.JavaParser:jj_3_19()Z
daikon.Quant:setEqual([I[I)Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.ArraysMDE:min([I)I
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.inv.filter.ObviousFilter:ObviousFilter()V
jtb.JavaParser:jj_3R_124()Z
jtb.syntaxtree.BlockStatement:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.Quant:subsetOf([D[D)Z
jtb.syntaxtree.TypeDeclaration:accept(Ljtb.visitor.Visitor;)V
utilMDE.FuzzyFloat:isSubset([D[D)Z
jtb.syntaxtree.NodeListOptional:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression; | RETURN | 83887 | return null
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.PptSlice0:arity()I
daikon.Quant:memberOf(J[J)Z
jtb.JavaParser:jj_3_13()Z
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.inv.unary.LowerBoundCore:computeProbability()D
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.MathMDE:pow(II)I
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:pairwiseDivides([I[I)Z
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
jtb.syntaxtree.NodeSequence:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
jtb.syntaxtree.TypeArguments:TypeArguments(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeArgument;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_87()Z
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.ArraysMDE:sum([I)I
daikon.Quant:subsetOf([D[F)Z
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.syntaxtree.TypeParameters:accept(Ljtb.visitor.Visitor;)V
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext2()V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
jtb.syntaxtree.NodeOptional:NodeOptional()V
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.inv.Invariant:format()Ljava.lang.String;
utilMDE.FuzzyFloat:indexOf([D[D)I
utilMDE.FuzzyFloat:gt(DD)Z
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_118()Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.VarInfo:jml_name()Ljava.lang.String; | RETURN | 102411 | return null
jtb.JavaCharStream:backup(I)V
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.Quant:setDiff([I[I)[I
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:subarray([JII)[J
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.diff.Node:children()Ljava.util.Iterator;
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
jtb.JavaParser:jj_3_15()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.JavaParser:jj_3R_163()Z
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptName:isEnterPoint()Z
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
utilMDE.MathMDE:gcd([I)I
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
jtb.syntaxtree.VariableDeclaratorId:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.Quant:eltsLteIndex([I)Z
daikon.Debug:logOn()Z
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.ProglangType:isIntegral()Z
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
jtb.JavaParser:jj_3R_149()Z
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltsLTE([II)Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
utilMDE.ArraysMDE:sum([D)D
daikon.test.FormatTestCase:getDiffString()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
utilMDE.Intern:intern([D)[D
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.inv.Invariant:justified()Z
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.VarInfo:java_name()Ljava.lang.String;
jtb.syntaxtree.UnaryExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
jtb.JavaParser:jj_ntk()I
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_169()Z
jtb.syntaxtree.ConditionalOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:eltsEqual([II)Z
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z | STATEMENT | 22110 | stmt -> ;
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.Quant:eq(DD)Z
daikon.inv.Invariant:prob_and(DD)D
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PostfixExpression;)V
jtb.JavaParser:jj_3_36()Z
daikon.Quant:eltwiseGT([I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclarator;)V
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InclusiveOrExpression;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_133()Z
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_61()Z
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:getToken(I)Ljtb.Token;
daikon.Quant:subsetOf([J[J)Z
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.ValueTuple:size()I
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
daikon.ModBitTracker:num_sets()I
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 10199 | = null
jtb.syntaxtree.UnaryExpressionNotPlusMinus:accept(Ljtb.visitor.Visitor;)V
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_162()Z
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.TypeArguments:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_134()Z
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeListOptional:elements()Ljava.util.Enumeration;
jtb.syntaxtree.ClassOrInterfaceBody:ClassOrInterfaceBody(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_100()Z
jtb.JavaParser:jj_3R_104()Z
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
jtb.syntaxtree.NodeOptional:present()Z
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Block;)V
daikon.diff.InvMap:toString()Ljava.lang.String;
jtb.JavaParser:jj_3R_98()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
jtb.JavaParser:jj_3R_56()Z
utilMDE.MathMDE:negate(I)I
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
utilMDE.FuzzyFloat:ne(DD)Z
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.Intern.SequenceAndIndices:hashCode()I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.EqualityExpression;)V
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.inv.unary.UpperBoundCore:calc_modulus()J
jtb.syntaxtree.Expression:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
jtb.syntaxtree.MethodDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.BlockStatement;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
jtb.syntaxtree.VariableDeclaratorId:VariableDeclaratorId(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_97()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptSlice2:arity()I
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ResultType;)V
utilMDE.ArraysMDE:max([I)I
utilMDE.Assert:assertTrue(Z)V
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:internStrings([Ljava.lang.String;)V
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalOrExpression;)V
jtb.JavaParserTokenManager:jjStopAtPos(II)I
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ImportDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaCharStream:UpdateLineColumn(C)V
jtb.JavaCharStream:GetImage()Ljava.lang.String;
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([I)Z
utilMDE.LimitedSizeIntSet:add(I)V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.Quant:lt(II)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
jtb.JavaParser:jj_3R_76()Z
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.Quant:intersection([I[I)[I
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalAndExpression;)V
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.Quant:eq(JJ)Z
jtb.syntaxtree.ReturnStatement:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_2_5(I)Z
daikon.ProglangType:baseIsIntegral()Z
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
jtb.JavaParser:jj_3R_57()Z
daikon.diff.InvMap:InvMap()V
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | CONSTANT | 4201 | 0 -> -1
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
jtb.JavaParser:jj_2_12(I)Z
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.ProglangType:isPointerFileRep()Z
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
utilMDE.Intern:intern([I)[I
utilMDE.Options.ArgException:ArgException(Ljava.lang.String;)V
jtb.JavaParser:jj_3R_114()Z
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_121()Z
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
utilMDE.ArraysMDE:sum([[I)I
jtb.JavaParser:jj_3R_96()Z
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.inv.Invariant:prob_or(DD)D
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltsNotEqual([II)Z
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Name;)V
jtb.JavaCharStream:ReadByte()C
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_119()Z
daikon.Quant:memberOf(S[S)Z
jtb.syntaxtree.Statement:accept(Ljtb.visitor.Visitor;)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
jtb.JavaParser:jj_3R_47()Z
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.VarInfoName:ioa_name()Ljava.lang.String;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaCharStream:readChar()C
daikon.Quant:eltwiseEqual([I)Z
jtb.JavaParser:jj_3_22()Z
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.MultiplicativeExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfo:new_ppt()V
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.JavaParser:jj_2_17(I)Z
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
utilMDE.ArraysMDE:fn_is_total([I)Z
jtb.JavaParser:jj_3R_88()Z
jtb.JavaParser:jj_3_27()Z
daikon.Quant:eltsEqualIndex([I)Z
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.Quant:lexGT([I[I)Z
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3_16()Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.FuzzyFloat:lte(DD)Z
utilMDE.MathMDE:gcd(II)I
jtb.JavaParser:jj_3_18()Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameters;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_53()Z
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
jtb.JavaParser:jj_3R_86()Z
daikon.Quant:lexLT([I[I)Z
jtb.JavaParser:jj_3R_67()Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.Quant:eltsGT([II)Z
jtb.JavaParser:jj_3R_125()Z
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
jtb.syntaxtree.ConditionalExpression:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Type;)V
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
jtb.syntaxtree.Type:accept(Ljtb.visitor.Visitor;)V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
utilMDE.ArraysMDE:isSubarray([I[II)Z
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Intern:internSubsequence([III)[I
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:indexOf([II)I
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
jtb.syntaxtree.ResultType:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_55()Z
jtb.JavaParser:jj_3_30()Z
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:eq(FF)Z
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
15 4 1168 2 1062 2 689 2 383 2 762 2 1146 2 834 2 595 2 
772 6 254 2 1278 2 793 2 451 2 11 2 910 6 755 6 992 2 818 2 642 2 
854 2 728 6 258 2 760 6 1146 2 523 4 721 2 988 6 532 2 689 2 1184 2 758 6 629 4 
541 2 1304 2 584 10 433 12 543 2 656 4 1306 2 216 10 1232 16 705 2 292 8 503 4 529 10 504 8 1143 8 570 10 85 26 1212 6 530 16 144 10 936 2 1146 6 151 2 68 29 689 6 784 6 326 4 669 16 1115 8 1061 4 
155 4 551 6 
315 2 
1288 2 900 2 522 2 196 2 1063 2 197 2 1167 2 913 2 620 2 1260 2 320 2 1000 2 273 2 960 2 236 2 577 2 128 2 739 2 1221 2 580 2 1304 2 712 2 284 2 1009 2 244 2 1310 4 753 2 101 2 412 2 1185 4 973 2 138 2 834 2 837 2 977 2 181 4 507 2 1145 2 1146 4 800 4 425 2 689 4 556 2 853 2 
1249 2 584 16 256 2 53 2 433 22 656 2 524 2 926 4 216 16 881 8 1232 32 705 2 338 4 1294 4 374 6 179 6 292 18 529 16 570 16 1143 6 85 48 1212 4 530 32 218 6 1314 6 144 6 1146 4 109 2 401 4 68 54 846 6 1003 6 689 4 1004 4 1005 4 784 4 669 32 512 2 1303 4 
429 2 197 2 381 2 
161 2 916 2 712 2 1107 2 483 2 634 22 1095 10 917 2 862 2 43 2 905 2 285 2 1270 2 614 2 
584 2 654 2 655 2 433 2 656 2 24 2 949 2 349 2 216 2 564 2 1232 2 292 2 529 2 570 2 1212 2 85 4 530 2 144 4 736 2 68 6 663 2 1108 2 669 2 
601 2 570 4 584 4 85 12 530 8 433 4 401 4 68 16 1003 6 216 4 1232 8 669 8 179 6 1303 4 528 2 1061 2 529 4 
603 2 141 2 1093 2 228 2 1025 2 197 4 381 2 781 2 880 2 963 2 352 2 1271 6 429 2 582 2 538 2 327 2 
1031 2 1136 2 7 2 1213 2 91 2 
727 12 729 2 986 2 903 2 1159 4 806 1 1161 2 389 2 314 24 563 1 1255 2 1256 2 911 2 569 2 82 4 81 2 6 2 734 5 994 2 735 2 8 2 397 2 162 1 492 2 998 2 915 2 999 2 1169 2 163 2 1171 3 664 2 1082 2 738 2 1173 1 496 1 325 2 166 2 922 3 19 1 329 2 670 2 242 1 330 2 1090 3 331 2 586 1 587 2 825 3 172 1 21 2 929 16 590 2 1097 1 748 6 501 2 752 2 1273 2 1012 2 596 2 595 2 838 2 933 2 1102 3 841 6 339 12 606 2 185 24 1280 1 186 2 683 2 510 2 1193 32 423 2 607 3 1017 1 29 4 609 1 1282 3 1110 2 689 34 610 2 1111 2 1112 2 765 6 432 4 767 16 694 8 347 2 769 2 521 1 696 16 770 2 1024 2 525 2 1290 2 1205 3 34 3 439 3 442 2 119 2 1027 2 866 2 954 2 867 2 39 8 869 2 778 2 707 2 271 2 123 2 1217 2 1299 2 46 2 278 2 207 32 540 4 208 2 462 6 465 4 791 2 636 3 878 2 967 3 969 2 1137 4 971 2 1309 2 1138 1 1140 2 1141 2 975 2 976 16 61 1 645 8 886 4 297 2 298 2 1146 32 149 2 382 2 889 2 1058 2 384 2 477 2 1324 2 1246 2 557 2 1326 2 72 1 
689 2 952 2 
689 4 145 2 1030 2 
1224 2 
0 4 657 2 658 2 989 2 4 2 660 8 661 2 662 2 317 2 318 2 319 4 10 2 322 2 16 2 323 2 668 30 667 2 17 2 1006 2 324 2 1007 2 20 2 332 2 672 4 673 4 23 2 26 4 336 4 337 50 1013 2 678 48 677 2 680 2 681 2 27 2 1016 2 28 2 684 12 688 2 687 2 344 2 691 2 1018 6 346 2 30 4 1019 44 1021 2 1020 4 1022 2 31 2 33 22 704 2 37 2 38 2 40 2 355 94 1032 2 709 2 708 2 357 2 1033 2 45 4 360 2 362 2 44 2 363 2 1035 2 711 94 48 2 365 12 1038 12 366 90 50 2 1039 4 52 2 369 2 1041 2 55 2 1043 4 714 4 1045 4 56 2 58 12 372 2 60 2 373 2 1047 4 720 16 1052 2 378 18 64 2 380 28 1055 2 722 2 70 2 1057 2 71 2 1060 2 74 4 1066 4 1069 62 1068 4 388 2 1070 2 733 2 79 2 1071 4 1072 4 394 4 395 2 396 94 87 2 1077 18 88 8 1078 2 398 12 1079 2 1080 2 1081 2 1084 22 740 12 741 4 742 8 1087 2 1089 6 1092 4 407 2 95 18 746 4 408 18 97 2 1096 2 410 4 99 16 750 8 100 2 756 2 102 2 103 30 1103 2 414 2 759 2 761 2 106 2 107 4 419 48 108 2 422 2 426 2 764 2 1116 2 436 44 434 2 115 42 437 2 1119 2 440 2 118 94 449 2 1123 94 453 2 779 2 125 4 1125 2 1128 2 127 18 782 42 1129 2 1130 2 129 2 785 2 130 2 131 2 459 2 134 4 460 2 461 30 790 8 1135 2 466 18 1139 14 796 2 139 72 469 2 1144 2 471 4 473 2 147 2 148 2 475 2 1148 2 152 94 1150 2 801 4 1152 2 1153 44 1154 4 479 22 481 2 1157 2 1158 2 486 2 156 4 488 4 158 2 1164 52 1163 246 1165 4 813 2 491 2 493 16 494 2 817 4 164 26 1172 2 165 2 167 74 1176 18 821 2 822 4 498 4 173 2 827 2 1180 2 500 2 828 2 830 2 831 2 1181 2 1183 2 833 4 1188 2 505 2 1189 26 183 18 508 2 184 2 844 2 1192 2 187 2 188 2 1195 4 849 2 1198 2 516 6 515 4 852 2 192 2 519 2 856 2 857 2 1201 8 858 2 195 4 861 2 198 4 1204 2 1206 36 863 26 527 2 865 2 203 2 871 22 1214 2 204 8 205 4 1219 18 535 2 1222 14 210 2 876 2 212 104 214 2 877 2 546 2 883 2 1233 4 549 2 1234 246 1235 20 1236 18 1238 2 553 2 1240 4 890 18 892 4 893 4 895 2 222 2 223 2 896 10 897 4 559 2 1250 246 226 2 899 2 560 2 902 62 1252 2 1253 2 561 2 904 2 1254 2 912 42 1258 2 914 2 234 2 573 48 235 2 1261 2 1262 2 576 2 920 18 578 94 579 94 581 2 923 2 241 18 585 2 1266 2 243 4 925 2 1268 4 245 2 1272 2 932 94 598 14 246 30 1275 2 248 2 247 4 1277 2 251 2 252 358 935 2 605 2 937 4 942 2 611 2 943 6 255 94 612 94 613 4 1283 4 1285 2 1287 2 946 2 616 4 261 46 618 2 947 2 1292 2 264 2 1293 56 619 2 267 2 1295 2 270 4 956 4 621 2 1296 2 1297 4 1300 2 625 2 626 2 275 4 279 2 965 2 1305 2 633 2 1307 2 286 22 288 2 972 4 289 4 1312 4 293 2 978 6 643 2 644 2 1316 2 1317 2 979 2 1318 4 1319 2 301 2 302 2 646 2 1320 62 647 8 303 2 304 48 980 4 305 2 307 2 308 4 650 2 983 2 310 2 651 22 1325 2 
367 2 122 2 114 1 5 2 
110 2 5 2 
840 2 230 2 571 2 1178 2 326 2 5 2 197 2 
840 2 850 2 5 2 
840 2 754 2 5 2 
367 2 730 2 597 2 
840 2 5 2 
1023 2 730 2 
5 2 1229 2 
367 2 89 2 730 2 
367 2 202 2 463 2 
367 2 766 2 413 2 
367 2 296 2 568 2 
367 2 176 2 1170 2 
1251 2 730 2 
5 2 126 2 
202 2 229 2 
413 2 792 2 
1034 2 568 2 
335 2 1170 2 
730 2 1263 2 
1170 2 420 2 
568 2 513 2 
413 2 970 2 
716 2 202 2 
367 2 89 2 730 2 42 2 
367 2 89 2 730 2 431 2 42 2 
367 2 882 2 730 2 
367 2 730 2 313 2 
1104 2 233 2 675 2 1142 2 
774 2 230 2 197 2 263 2 
774 2 230 2 571 2 260 2 197 2 263 2 
840 2 230 2 934 2 326 2 5 2 197 2 
1167 2 400 2 
798 2 230 2 326 2 197 2 
568 2 1291 2 
489 2 1170 2 
98 2 202 2 
984 2 413 2 
1170 2 413 2 1286 2 
1170 2 413 2 343 2 
1265 2 1170 2 413 2 
1170 2 732 2 413 2 
133 6 197 2 230 2 249 2 939 6 1220 2 985 2 743 2 
445 2 730 2 
870 2 901 2 860 2 634 6 699 2 1237 2 443 2 404 2 1323 2 807 2 1187 2 392 2 385 2 80 2 1029 4 1048 4 599 2 430 2 
367 2 77 2 
999 2 
803 4 727 8 729 2 986 2 227 2 903 2 1159 2 1161 2 806 4 1255 2 82 2 911 2 6 2 735 2 1257 2 9 2 8 2 814 2 397 4 915 2 998 2 12 2 664 2 1082 2 738 2 496 2 820 2 329 2 587 6 172 2 748 2 749 2 595 2 838 2 600 2 841 4 339 8 683 2 1193 6 29 4 689 26 610 2 427 2 765 6 432 2 769 2 770 2 32 2 1024 2 348 2 525 2 442 2 869 2 46 2 787 4 207 4 208 2 540 4 462 2 465 4 1227 2 1137 4 971 2 975 2 1046 2 976 6 547 2 645 2 297 2 1146 26 149 2 889 2 891 2 1242 2 477 2 1246 2 
803 4 727 8 729 2 986 2 227 2 903 2 1159 2 1161 2 806 2 1255 2 82 2 911 2 6 2 735 2 1257 2 9 2 8 2 397 4 915 2 998 2 1169 2 12 2 664 2 1082 2 738 2 496 2 820 2 329 2 587 6 172 2 748 2 749 2 178 2 595 2 838 2 1276 2 600 2 841 6 339 8 683 2 1193 6 29 4 689 26 610 2 427 2 1112 2 765 6 432 2 769 2 770 2 32 2 1024 2 525 2 442 2 869 2 46 2 787 4 207 4 540 4 208 2 462 2 465 4 1227 2 791 2 1137 4 971 2 975 2 1046 2 976 6 645 2 297 2 1146 26 149 2 889 2 891 2 1242 2 477 2 1246 2 154 2 
719 2 
962 2 1311 2 
1278 2 887 2 588 2 213 2 1134 2 818 2 2 2 941 2 648 2 627 2 906 2 1196 2 594 2 1186 2 910 2 835 4 755 2 652 4 
113 2 1 2 1117 2 1024 2 2 2 772 6 773 2 35 2 231 6 36 2 906 2 391 2 910 6 1209 2 160 2 869 2 1259 2 1124 2 11 2 818 4 958 2 624 2 873 2 627 2 276 2 628 2 1132 4 208 2 54 4 966 2 747 2 588 2 213 2 1134 2 465 2 545 2 637 2 137 4 793 2 334 4 594 2 1186 2 975 2 755 4 835 4 1278 4 297 2 887 2 299 4 1146 6 683 2 941 4 648 2 29 2 689 12 610 2 1196 2 765 4 514 2 652 4 
113 2 1 2 1117 2 1024 2 2 2 772 6 773 2 35 2 231 6 36 2 906 2 391 2 910 4 1209 2 160 2 869 2 1259 2 451 2 1124 2 11 2 818 4 958 2 624 2 873 2 627 2 276 2 628 2 1132 4 208 2 54 4 966 2 747 2 588 2 213 2 1134 2 465 2 545 2 637 2 137 4 334 4 594 2 1186 2 975 2 755 6 835 4 1278 4 297 2 887 2 299 4 1146 6 683 2 941 4 648 2 29 2 689 12 610 2 1196 2 765 4 514 2 652 4 
113 2 1 2 1117 2 1024 2 2 2 772 6 773 2 35 2 231 6 36 2 906 2 391 2 910 6 1209 2 160 2 869 2 1259 2 1124 2 11 2 818 4 958 2 624 2 873 2 627 2 276 2 628 2 1132 4 208 2 54 8 966 2 747 2 588 2 213 2 1134 2 465 2 545 2 637 2 137 4 334 4 594 2 1186 2 975 2 755 6 835 4 1278 4 297 2 887 2 299 4 1146 6 683 2 254 2 941 4 648 2 29 2 689 12 610 2 1196 2 765 4 514 2 652 4 
113 2 1 2 1117 2 1024 2 2 2 772 8 773 2 35 2 231 10 36 2 906 2 391 2 910 6 1209 2 160 2 869 2 1259 2 451 2 1124 2 11 2 818 4 958 2 624 2 873 2 627 2 276 2 628 2 1132 4 208 2 54 8 966 2 747 2 588 2 213 2 1134 2 465 2 545 2 637 2 137 8 334 4 594 2 1186 2 975 2 755 8 835 4 1278 4 297 2 887 2 299 4 1146 6 683 2 254 2 941 4 648 2 29 2 689 12 610 2 1196 2 765 4 514 2 652 4 
113 2 1 2 1117 2 1024 2 2 2 772 6 773 2 35 2 231 10 36 2 906 2 391 2 910 6 1209 2 160 2 869 2 1259 2 1124 2 11 2 818 4 958 2 624 2 873 2 627 2 276 2 628 2 1132 4 208 2 54 8 966 2 747 2 588 2 213 2 1134 2 465 2 545 2 637 2 137 8 334 4 594 2 1186 2 975 2 755 6 835 4 1278 4 297 2 887 2 299 4 1146 6 683 2 254 2 941 4 648 2 29 2 689 12 610 2 1196 2 765 4 514 2 652 4 
1 2 1159 2 484 2 2 2 1161 2 316 6 811 2 810 2 6 2 160 2 11 4 1169 2 13 2 818 4 664 2 820 2 169 2 329 2 1177 1 1008 2 823 4 333 2 1011 4 334 8 1186 2 835 4 838 2 1014 6 841 6 679 7 339 4 182 2 506 6 842 2 683 2 1193 8 29 4 689 46 1196 2 514 2 851 2 855 1 520 8 695 10 1024 2 1203 6 525 2 350 2 36 2 1028 2 1209 4 1030 6 869 2 356 1 873 4 874 6 1036 2 51 2 207 2 1223 1 208 2 540 4 1224 6 54 2 213 2 545 2 1230 2 59 6 370 2 1049 1 887 2 889 2 1239 6 221 2 555 2 725 2 727 4 729 2 75 6 76 2 562 1 78 1 231 2 906 2 391 2 1255 2 566 2 908 6 567 6 910 4 1074 7 82 2 735 2 1257 2 1259 2 572 6 915 2 1082 2 1091 6 587 6 747 2 588 2 748 2 749 2 594 2 755 8 595 2 1278 4 604 2 1279 2 941 4 610 2 427 4 1112 2 765 6 112 2 432 2 113 2 769 2 770 2 1117 2 772 12 773 2 442 2 952 6 120 2 451 4 1124 2 958 2 624 2 961 2 627 2 276 2 277 1 1132 4 787 4 628 2 280 2 281 2 1133 2 966 2 462 2 464 1 465 4 1134 2 1137 4 637 2 971 12 291 6 975 2 976 6 645 2 297 2 799 2 1146 24 299 6 648 2 802 2 982 2 652 4 
727 8 729 2 75 6 1 2 484 2 1159 4 76 2 2 2 1161 2 231 2 906 2 566 2 1255 2 391 2 567 6 908 6 316 6 910 8 810 2 811 2 82 4 160 2 6 2 1257 2 735 2 397 2 1259 2 572 6 915 2 11 4 1169 2 13 2 818 4 664 2 1082 2 820 2 169 2 329 2 1008 2 1091 6 587 6 823 4 747 2 588 2 333 2 748 2 749 2 1011 4 334 8 594 2 1186 2 595 2 835 4 755 8 838 2 1014 6 841 6 1278 4 604 2 182 2 339 8 842 2 506 6 1279 2 683 2 1193 8 254 4 941 4 29 4 689 48 610 2 427 4 1196 2 1112 2 765 6 112 2 514 2 851 2 432 4 113 2 520 8 769 2 695 10 697 2 770 2 1117 2 1024 2 1203 6 525 2 772 12 773 2 442 2 952 6 350 2 36 2 1028 2 1209 4 120 2 1030 6 869 2 1124 2 958 2 624 2 961 2 873 4 627 2 276 2 874 6 1036 2 628 2 787 4 1132 4 281 2 280 2 51 2 207 2 540 4 208 2 1224 6 1133 2 54 6 966 2 462 2 213 2 1134 2 465 4 545 2 971 12 637 2 1137 4 1230 2 59 6 370 2 291 6 975 2 976 6 645 2 799 2 887 2 297 2 299 6 1146 26 67 2 1239 6 889 2 648 2 802 2 221 2 982 2 555 2 725 2 652 4 
727 8 729 2 75 6 1 2 484 2 1159 4 76 2 2 2 1161 2 231 6 906 2 566 2 1255 2 391 2 567 6 908 6 316 6 910 8 810 2 811 2 82 4 160 2 6 2 1257 2 735 2 397 2 1259 2 572 6 915 2 11 4 1169 2 13 2 818 4 664 2 1082 2 820 2 169 2 329 2 1008 2 1091 6 587 6 823 4 747 2 588 2 333 2 748 2 749 2 1011 4 334 8 594 2 1186 2 595 2 835 4 755 8 838 2 1014 6 841 6 1278 4 604 2 182 2 339 8 842 2 506 6 1279 2 683 2 1193 8 254 4 941 4 29 4 689 48 610 2 427 4 1196 2 1112 2 765 6 112 2 514 2 851 2 432 4 113 2 520 8 769 2 695 10 697 2 770 2 1117 2 1024 2 1203 6 525 2 772 12 773 2 442 2 952 6 350 2 36 2 1028 2 1209 4 120 2 1030 6 869 2 1124 2 958 2 624 2 961 2 873 4 627 2 276 2 874 6 1036 2 628 2 787 4 1132 4 281 2 280 2 51 2 207 2 540 4 208 2 1224 6 1133 2 54 6 966 2 462 2 213 2 1134 2 465 4 545 2 971 12 637 2 1137 4 1230 2 137 4 59 6 370 2 291 6 975 2 976 6 645 2 799 2 297 2 887 2 299 6 1146 26 67 2 1239 6 648 2 889 2 802 2 221 2 982 2 555 2 725 2 652 4 
1 2 1156 6 987 2 1159 4 484 2 2 2 1161 2 316 12 811 2 810 2 6 2 160 2 993 6 11 4 1169 2 13 2 818 4 664 2 820 4 169 2 329 2 1008 2 823 4 333 2 1011 4 334 8 1186 2 835 4 838 2 1014 6 841 6 339 10 842 2 506 6 683 2 1193 12 29 4 689 52 1196 2 514 2 851 2 520 8 695 8 697 2 1024 2 1203 6 525 2 350 2 36 2 1028 2 1209 4 1030 12 354 2 869 2 531 2 1216 2 873 4 874 6 1036 2 51 2 207 4 540 4 208 2 1224 12 54 6 213 2 545 2 1230 2 59 6 370 2 887 2 67 2 889 2 1239 12 221 2 555 2 725 2 727 10 729 2 75 6 1064 2 76 2 231 6 906 2 391 2 1255 2 566 2 908 6 567 12 910 10 82 4 1076 2 735 2 1257 2 397 2 1259 2 572 6 915 2 90 6 1082 2 1083 6 1085 2 406 6 1091 6 587 8 747 2 588 2 748 4 749 2 594 2 755 10 595 2 1278 4 604 2 1279 2 254 4 941 4 610 2 427 4 1112 2 765 6 112 2 432 4 113 2 769 2 435 2 770 2 1117 2 262 6 1118 6 772 16 773 2 442 2 952 12 265 6 446 6 120 2 451 2 1124 2 958 2 624 2 961 2 627 2 276 2 628 2 1132 4 787 6 280 2 281 2 1133 2 966 2 462 4 465 4 1134 2 1137 4 637 2 971 10 137 4 793 2 291 6 975 2 976 8 645 4 297 2 799 2 1146 24 299 6 648 2 802 2 982 2 652 4 
54 6 747 2 1117 2 588 2 213 2 1134 2 545 2 772 4 773 2 637 2 137 4 231 4 391 2 334 2 910 6 835 2 755 6 1278 4 1259 2 1124 2 11 2 887 2 299 2 958 2 818 4 624 2 254 2 648 2 627 2 689 4 1196 2 276 2 1132 2 514 2 652 2 
729 2 1 2 804 2 1161 2 231 2 391 2 1255 2 910 6 81 2 6 2 735 2 1257 2 1259 2 11 2 999 2 1169 2 818 4 664 2 1082 2 329 2 587 6 747 2 588 2 927 2 748 3 749 2 334 2 755 6 835 2 595 2 838 2 841 6 1278 4 182 2 1191 3 683 2 1193 8 254 2 1194 2 29 4 610 2 689 28 427 2 1112 2 1196 2 765 6 514 2 769 2 695 2 770 2 1117 2 1024 2 525 2 772 4 773 2 442 2 869 2 778 2 1124 2 958 2 1299 2 624 2 627 2 276 2 1132 2 787 4 207 3 540 4 208 2 54 6 282 2 462 3 213 2 465 4 1134 2 545 2 1137 4 971 4 637 2 975 2 976 6 142 2 887 2 297 2 299 2 1146 24 648 2 889 2 652 2 
113 2 1 2 1117 2 1024 2 2 2 772 6 773 2 35 2 231 10 36 2 906 2 391 2 910 6 1209 2 160 2 869 2 1259 2 1124 2 11 2 818 4 958 2 624 2 873 2 627 2 276 2 628 2 1132 4 208 2 54 8 966 2 747 2 588 2 213 2 1134 2 465 2 545 2 637 2 137 8 334 4 594 2 1186 2 975 2 755 6 835 4 1278 4 297 2 887 2 299 4 1146 6 683 2 254 2 941 4 648 2 29 2 689 12 610 2 1196 2 765 4 514 2 652 4 
113 2 1 2 1117 2 1024 2 2 2 772 8 773 2 231 10 36 2 906 2 391 2 910 8 1209 2 160 2 869 2 1259 2 1124 2 11 2 818 4 624 2 873 2 627 2 276 2 628 2 1132 4 208 2 93 2 54 8 966 2 211 4 747 2 588 2 213 2 465 2 1134 2 545 2 637 2 25 2 137 8 793 2 334 4 594 2 1186 2 975 2 835 4 755 6 1278 4 297 2 887 2 1146 6 299 4 683 2 254 2 941 4 648 2 29 2 689 12 610 2 1196 2 765 4 514 2 652 4 
685 2 391 2 747 2 
685 2 391 2 747 2 
727 4 729 2 484 2 1159 4 806 2 1161 2 231 6 906 2 391 6 1255 2 910 12 82 4 393 2 735 2 1257 2 9 4 572 2 915 4 11 4 1169 2 818 4 664 2 1082 2 666 2 1175 4 168 2 329 2 1088 2 823 2 587 2 747 4 749 2 1011 2 177 2 334 4 594 2 1100 4 595 2 835 2 755 12 838 2 841 6 1278 4 339 4 253 2 683 2 1193 2 685 2 254 4 941 4 29 4 689 24 610 2 427 6 1112 2 1196 4 765 6 945 2 517 2 432 4 194 2 113 2 692 2 769 2 695 2 770 2 1024 2 525 2 772 16 442 2 526 2 350 2 351 2 36 2 703 2 1209 2 869 2 451 4 1124 2 873 4 1131 2 1036 2 1132 2 207 2 540 4 208 2 54 6 966 2 136 2 465 4 545 2 1137 4 971 4 137 4 371 2 793 4 975 2 976 2 294 2 297 2 887 2 299 4 1146 16 889 2 648 2 652 2 
1264 2 869 2 194 2 253 2 572 2 695 2 1146 2 2 2 971 2 1011 2 962 2 689 4 221 2 478 2 1037 2 169 2 517 2 
727 4 729 2 484 2 1159 4 806 1 1161 2 231 6 906 2 391 6 1255 2 910 12 82 4 393 2 735 2 1257 2 9 4 572 2 915 4 11 4 1169 2 818 4 664 2 1082 2 1175 4 921 2 329 2 1088 2 823 2 587 2 747 4 749 2 177 2 1269 2 334 4 594 2 1100 4 595 2 835 2 755 12 838 2 841 6 1278 4 339 4 253 2 683 2 1193 2 685 2 254 4 941 4 29 4 689 24 610 2 427 6 1112 2 1196 4 765 6 945 2 517 2 432 4 194 2 113 2 692 2 769 2 770 2 1024 2 525 2 772 16 442 2 701 2 526 2 350 2 36 2 1209 4 869 2 451 4 1124 2 873 4 1131 2 1036 2 628 2 1132 2 207 4 540 4 208 2 54 6 966 2 136 4 283 2 465 4 968 2 545 2 1137 4 971 2 137 4 371 2 793 4 975 2 976 2 294 2 297 2 887 2 299 4 1146 16 889 2 648 2 652 2 
727 4 729 2 484 2 1159 4 806 1 1161 2 231 6 906 2 391 6 1255 2 910 12 82 4 393 2 735 2 1257 2 9 4 572 2 915 4 11 4 1169 2 818 4 664 2 1082 2 1175 4 329 2 1088 2 823 2 587 2 747 4 749 2 1011 2 177 2 334 4 594 2 1100 4 595 2 835 2 755 12 838 2 841 6 1278 4 339 4 417 2 253 2 341 2 683 2 1193 2 685 2 254 4 941 4 29 4 689 24 610 2 427 6 1112 2 1196 4 765 6 945 2 190 2 517 2 432 4 194 2 113 2 692 2 769 2 695 2 770 2 1024 2 525 2 772 16 442 2 526 2 350 2 36 2 1209 4 869 2 451 4 1124 2 454 2 873 4 1131 2 1036 2 628 2 1132 2 207 2 540 4 208 2 54 6 966 2 136 2 465 4 545 2 57 2 1137 4 971 4 137 4 371 2 793 4 975 2 976 2 294 2 297 2 887 2 299 4 1146 16 889 2 648 2 652 2 
312 16 311 2 482 2 485 2 804 2 1161 2 805 2 806 2 1162 2 991 2 809 2 811 2 6 2 1166 2 995 16 996 2 1169 4 12 2 13 4 1001 2 14 2 664 6 819 2 1002 10 496 2 820 46 669 8 18 4 497 2 329 6 171 3 671 2 172 2 826 2 22 2 1179 2 499 2 174 3 175 2 1010 2 1182 12 676 2 832 4 179 6 836 2 838 2 839 2 1015 14 841 18 339 26 1191 2 509 2 682 6 683 2 1193 28 847 2 29 4 689 52 189 2 511 2 1197 2 345 4 193 2 693 2 696 4 32 2 1024 2 525 2 200 12 700 2 702 2 864 2 1208 2 1026 2 201 12 353 2 706 2 354 2 529 4 1210 4 869 2 530 8 531 2 1216 2 41 2 872 2 358 2 359 2 534 2 361 2 206 2 47 2 537 4 207 19 542 2 208 2 540 12 1040 6 53 4 875 2 1044 2 1228 4 1227 2 713 4 715 2 717 2 718 2 1230 2 216 4 370 2 1232 8 1046 2 376 2 548 2 217 2 379 2 66 2 220 10 552 2 69 2 68 16 554 2 889 2 1241 4 723 2 1242 2 891 2 724 4 555 2 894 2 1245 2 1247 14 558 2 1249 2 727 24 729 2 227 2 1064 2 1065 24 1067 4 566 2 1255 2 1076 2 84 2 570 4 735 4 85 12 915 4 401 4 918 2 575 2 1082 2 402 2 237 2 919 2 403 2 238 2 240 16 1085 2 405 2 583 2 584 4 744 6 924 2 587 14 96 2 589 12 927 2 930 2 748 19 749 2 931 12 1099 16 1274 2 595 4 1101 3 757 2 600 14 602 2 250 2 415 10 416 2 1105 2 1106 4 418 2 105 2 111 2 610 2 427 2 1112 4 765 6 944 2 428 4 1114 4 1284 2 767 4 257 4 769 2 433 6 435 2 770 4 617 2 1289 2 771 4 950 2 442 2 444 2 1120 2 775 2 776 2 953 10 1122 2 777 4 452 2 269 2 622 2 780 2 959 2 783 3 455 2 274 16 1302 2 784 4 787 12 457 10 631 2 630 6 632 2 282 2 135 4 462 16 465 4 971 2 1137 10 467 2 290 2 975 2 468 2 976 14 292 4 797 14 470 1 140 2 1143 6 472 2 474 3 1315 4 142 2 645 20 297 2 1146 42 300 2 150 2 1321 2 802 2 
558 2 207 2 693 2 171 2 587 2 462 2 1044 2 1289 2 748 2 991 2 976 2 6 2 415 2 66 2 418 2 1146 2 1193 2 424 2 1002 2 689 2 820 6 1197 2 787 2 457 4 
558 2 207 2 693 2 171 2 587 2 462 2 1044 2 1289 2 748 2 991 2 976 2 6 2 415 2 66 2 418 2 1146 2 1193 2 424 2 1002 2 689 2 820 6 1197 2 787 2 457 4 
558 2 207 2 693 2 171 2 587 2 462 2 1044 2 1289 2 748 2 991 2 976 2 6 2 415 2 66 2 418 2 1146 2 1193 2 424 2 1002 2 689 2 820 6 1197 2 787 2 457 4 
207 3 584 2 767 2 744 6 696 2 731 2 387 2 544 4 174 3 771 2 748 3 829 4 948 2 951 4 216 2 1232 2 157 3 955 4 6 2 529 2 570 2 1143 4 85 4 530 2 816 2 418 2 321 2 1146 4 957 2 421 2 737 4 1193 2 68 5 783 3 689 10 784 2 669 2 456 2 153 2 653 2 
207 2 584 2 767 2 744 6 433 2 696 2 731 2 387 2 544 4 174 2 771 2 748 2 829 4 948 2 951 4 216 2 1232 2 705 2 157 2 292 2 955 4 6 2 529 2 570 2 1143 4 85 4 530 2 816 2 418 2 321 2 1146 4 957 2 421 2 737 4 1193 2 68 4 783 2 689 10 784 2 669 2 456 2 153 2 653 2 
207 2 584 2 767 2 744 6 433 2 696 2 731 2 387 2 544 4 174 2 771 2 748 2 829 4 948 2 951 4 216 2 1232 2 705 2 157 2 292 2 955 4 6 2 529 2 570 2 1143 4 85 4 530 2 816 2 418 2 321 2 1146 4 957 2 421 2 737 4 1193 2 68 4 783 2 689 10 784 2 669 2 456 2 153 2 653 2 
207 2 584 2 767 2 744 6 433 2 696 2 731 2 387 2 544 4 174 2 771 2 748 2 829 4 948 2 951 4 216 2 1232 2 705 2 157 2 292 2 955 4 6 2 529 2 570 2 1143 4 85 4 530 2 816 2 418 2 321 2 1146 4 957 2 421 2 737 4 1193 2 68 4 783 2 689 10 784 2 669 2 456 2 153 2 653 2 
207 2 584 2 767 2 744 6 433 4 696 2 731 2 387 2 544 4 174 2 771 2 748 2 829 4 948 2 951 4 216 2 1232 2 705 4 157 2 292 4 955 4 6 2 529 2 570 2 1143 4 85 4 530 2 816 2 418 2 321 2 1146 4 957 2 421 2 737 4 1193 2 68 4 783 2 689 10 784 2 669 2 456 2 153 2 653 2 
62 2 444 2 884 2 146 2 1215 2 938 2 
600 2 812 2 574 2 615 2 62 2 1042 2 1160 2 
1200 1 1226 2 409 2 880 1 117 2 659 2 490 2 808 2 1050 2 1211 2 63 2 1053 2 297 2 1146 8 399 2 845 2 495 1 1151 1 781 1 1239 2 665 2 848 2 689 10 1301 2 981 2 309 2 
132 2 584 6 433 4 216 6 881 2 973 2 1232 6 338 2 705 2 374 4 179 4 292 2 837 2 529 6 570 6 1143 4 85 12 530 6 65 2 1315 2 1146 6 1149 2 401 2 68 16 1281 2 554 2 689 6 238 2 784 2 669 6 
368 2 518 2 94 4 1225 1 859 2 1146 1 544 2 829 2 674 2 689 1 593 2 390 7 565 2 885 2 266 2 1075 2 955 2 191 2 
368 2 518 2 94 4 859 2 544 2 829 2 674 2 390 6 593 4 565 2 885 2 266 4 1075 4 955 2 191 2 
368 2 518 2 94 4 1225 1 859 8 1146 1 544 2 829 2 674 2 689 1 390 10 593 8 565 2 885 6 266 8 1075 8 955 2 191 2 
368 2 518 2 94 2 544 2 829 2 674 2 390 2 593 2 565 2 266 2 1075 2 955 2 191 2 
224 4 898 2 1067 8 806 1 990 14 1162 16 1073 2 907 8 83 4 159 10 84 9 735 2 86 4 996 8 997 4 1169 28 14 2 664 6 403 4 1086 4 328 4 92 4 329 6 745 8 924 2 824 4 96 2 1094 4 1098 4 1010 4 591 4 592 10 751 2 502 4 839 4 841 102 180 4 339 16 1190 10 416 2 509 8 342 2 940 10 111 4 686 16 689 78 1112 26 1113 2 1114 24 1199 2 257 24 768 2 259 2 1202 5 617 4 698 4 438 4 116 2 1208 4 775 4 201 34 868 6 777 24 450 10 269 4 452 4 124 8 623 4 533 2 959 4 1218 10 710 4 364 32 206 4 964 2 786 4 49 2 458 4 539 4 540 44 209 5 788 4 789 5 635 4 879 4 1308 2 1137 36 287 4 638 4 290 6 795 11 974 6 639 1 640 2 375 4 641 6 377 2 295 4 143 10 550 6 1146 70 1054 2 1147 4 888 4 649 16 1243 2 1322 2 476 8 1244 4 726 2 
329 2 86 2 735 2 540 4 841 10 339 4 768 2 924 2 272 2 1169 4 96 2 1146 12 342 2 14 2 1308 2 533 2 1056 2 806 2 664 2 1137 4 689 12 1112 4 726 2 
257 4 768 2 312 2 617 2 1067 4 1162 2 1208 2 775 2 201 2 84 1 735 4 777 4 996 2 452 2 269 2 1169 6 41 1 14 2 533 2 959 2 664 6 206 2 403 2 240 2 329 6 540 10 924 2 96 2 1308 2 1010 2 717 2 1137 8 751 2 839 2 841 18 339 4 416 2 1146 24 509 2 219 2 342 2 111 2 689 26 1112 6 511 1 1114 4 1248 2 1199 2 
386 2 1155 2 73 2 480 2 898 2 225 2 257 2 768 2 199 4 3 2 487 4 438 2 806 2 441 2 1207 2 909 2 1121 2 159 2 447 2 448 2 868 6 121 2 86 2 735 2 450 2 232 2 815 2 268 2 272 2 1169 6 1298 2 623 2 1126 2 533 2 14 2 1218 2 664 2 1127 2 1174 2 964 2 239 2 536 4 170 2 329 2 540 18 924 2 788 2 96 2 1094 2 928 2 1267 2 1308 2 1137 18 215 2 591 2 1231 2 592 2 794 6 411 2 1051 2 841 42 1313 2 104 2 339 30 1190 2 843 2 143 2 1146 42 342 2 1056 2 608 2 1109 2 763 2 306 2 690 4 689 42 1112 6 1244 2 1059 2 726 2 
340 2 

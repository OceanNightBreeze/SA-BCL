#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V ERROR java.lang.Error 
utilMDE.TestUtilMDE:testOptions()V ERROR utilMDE.Options$ArgException 307 59 
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.ArrayIndexOutOfBoundsException 615 772 833 912 900 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 684 893 420 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_0()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_1()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_2()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_3()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_4()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_5()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_6()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_7()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_8()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_9()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_10()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_11()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_12()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_13()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_14()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_15()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_16()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_17()V PASSED
daikon.test.split.SplitterFactoryTest:testmisc_Fib_main_18()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_19()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_20()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_21()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_22()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_23()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_24()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_25()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_26()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_27()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_28()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_29()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_30()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_31()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_32()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__33()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__34()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__35()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__36()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__37()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__38()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__39()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__40()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__41()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__42()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__43()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.Quant:eltsLTE([II)Z
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.ValueTuple:size()I
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.inv.Invariant:justified()Z
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.Quant:memberOf(J[J)Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
utilMDE.Intern:internSubsequence([III)[I
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.ProglangType:isPointerFileRep()Z
utilMDE.ArraysMDE:subarray([JII)[J
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.Quant:pairwiseSquare([I[I)Z
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
utilMDE.Assert:assertTrue(Z)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.OrderedPairIterator:setnext2()V
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.ValueTuple:tuplemodHasModified(I)Z
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
utilMDE.ArraysMDE:indexOf([I[I)I
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.PptTopLevel:name()Ljava.lang.String;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.Quant:lexEqual([I[I)Z
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
utilMDE.MathMDE:negate(I)I
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:lexLTE([I[I)Z
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.Quant:eltwiseEqual([I)Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.Quant:eltsGtIndex([I)Z
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
utilMDE.MathMDE:mod_positive(II)I
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.FuzzyFloat:gte(DD)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.ModBitTracker:num_samples()I
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.PptSlice0:initInvariantsSeen()V
utilMDE.MathMDE:modulus([I)[I | OPERATOR | 8627 | % -> >>>
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.VarInfoName.ElementsFinder:inPre()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.diff.Node:Node()V
daikon.Quant:subsetOf([D[D)Z
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.Quant:eltsGT([II)Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
utilMDE.ArraysMDE:sorted([I)Z
daikon.Quant:subsetOf([F[F)Z
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.diff.Node:Node(LutilMDE.Pair;)V
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.VarInfo:new_ppt()V
utilMDE.ArraysMDE:subarray([III)[I
daikon.diff.RootNode:RootNode()V
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant:prob_or(DD)D
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.PptSlice2:arity()I
utilMDE.MathMDE:gcd_differences([I)I
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.VarInfoName:name()Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.FuzzyFloat:FuzzyFloat(D)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
utilMDE.MathMDE:gcd(JJ)J
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.Quant:setDiff([I[I)[I
daikon.inv.Invariant:logDetail()Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.Invariant:logOn()Z
daikon.inv.Invariants:Invariants()V
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.Quant:pairwiseLT([I[I)Z
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.Quant:memberOf(F[F)Z
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.ValueSet:ValueSet(I)V
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.Quant:eltsLtIndex([I)Z
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.Quant:lexLT([I[I)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:sum([[D)D
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:subsetOf([S[S)Z
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.Quant:lexGTE([I[I)Z
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;)V
daikon.Debug:logOn()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
utilMDE.UtilMDE:lineNumberFileReader(Ljava.io.File;)Ljava.io.LineNumberReader;
daikon.Quant:pairwiseGT([I[I)Z
daikon.ProglangType:baseIsIntegral()Z
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;Z)Z
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat:lt(DD)Z
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.ProglangType:dimensions()I
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
utilMDE.MathMDE:gcd(II)I
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:MoreLexicalActions()V
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.ProglangType:isScalar()Z
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.ValueTuple:isMissingFlow(I)Z
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V | CONDITION | 19542 | if (x) -> if (!x)
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptSlice1:arity()I
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.Quant:ne(II)Z
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
utilMDE.ArraysMDE:sum([I)I
daikon.Quant:lexGT([I[I)Z
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Quant:eltwiseLT([I)Z
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.Quant:noDups([I)Z
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.PptName:isCombinedExitPoint()Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.PptSlice0:arity()I
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.Quant:pairwiseDivides([I[I)Z
utilMDE.ArraysMDE:concat([I[I)[I
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:union([I[I)[I
daikon.Quant:subsetOf([F[D)Z
utilMDE.MathMDE:gcd([I)I
utilMDE.Intern:intern([D)[D
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.Quant:intersection([I[I)[I
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.FuzzyFloat:gt(DD)Z
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([ZZ)I
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.Quant:eltwiseLTE([I)Z
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.ParentFilter:ParentFilter()V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.LimitedSizeIntSet:size()I
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE:pow_fast(II)I
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eltsLT([II)Z
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.MathMDE:missing_numbers([I)[I
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
jtb.JavaCharStream:BeginToken()C
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.Quant:eq(JJ)Z
daikon.inv.unary.scalar.LowerBound:enabled()Z
utilMDE.OrderedPairIterator:setnext1()V
utilMDE.WeakHasherMap:processQueue()V
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:sum([[I)I
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.VarInfo:relate_var()V
daikon.Quant:pairwiseEqual([I[I)Z
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.test.InvariantFormatTester:execute()Z
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V | OPERATOR | 609 | != -> ==
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
utilMDE.ArraysMDE:isSubset([D[D)Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.Quant:eltsGteIndex([I)Z
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
utilMDE.ArraysMDE:min([I)I
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfo:name()Ljava.lang.String;
daikon.Quant:memberOf(I[I)Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.Debug:logDetail()Z
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:eq(DD)Z
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
utilMDE.ArraysMDE:indexOf([II)I
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:baseIsScalar()Z
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.filter.InvariantFilter:InvariantFilter()V
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.Quant:eltsGTE([II)Z
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;)Z
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
utilMDE.ArraysMDE:sum([D)D
utilMDE.ArraysMDE:noDuplicates([D)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.Quant:eq(II)Z
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:fn_is_permutation([I)Z
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.MathMDE:sign(I)I
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eltwiseNotEqual([I)Z
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.Quant:eq(FF)Z
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.VarInfo:isPointer()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ProglangType:baseIsFloat()Z
daikon.VarInfo:dbc_name()Ljava.lang.String;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.ModBitTracker:num_sets()I
daikon.ValueTuple:isMissing(I)Z
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.Quant:concat([I[I)[I
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:subsetOf([I[I)Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Options.OptionInfo:argument_required()Z
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.Quant:eltsLteIndex([I)Z
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.inv.Invariant:prob_and(DD)D
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:gt(II)Z
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
utilMDE.MathMDE:pow(II)I
daikon.ProglangType:isPseudoArray()Z
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
jtb.JavaCharStream:FillBuff()V
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
daikon.ModBitTracker:num_vars()I
jtb.JavaCharStream:readChar()C
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I | OPERATOR | 52438 | != -> >=
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.inv.unary.LowerBoundCore:computeProbability()D
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
utilMDE.UtilMDE:lineNumberFileReader(Ljava.lang.String;)Ljava.io.LineNumberReader;
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
utilMDE.Intern:intern([J)[J
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ProglangType:isFloat()Z
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.Quant:lexNotEqual([I[I)Z
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.ProglangType:isIntegral()Z
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.inv.Invariant:isWorthPrinting()Z
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ProglangType:isArray()Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.Quant:eltwiseGT([I)Z
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.PptName:isEnterPoint()Z
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.test.FormatTestCase:passes()Z
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Options.ArgException:ArgException(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:isReverse([I[I)Z
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.Quant:pairwiseLTE([I[I)Z
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.Quant:memberOf(S[S)Z
utilMDE.Intern:intern([I)[I
daikon.Quant:lt(II)Z
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.Quant:eltsEqualIndex([I)Z
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
utilMDE.ArraysMDE:max([I)I
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ModBitTracker:ModBitTracker(I)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.PptSlice1:num_samples()I
daikon.Quant:memberOf(D[F)Z
jtb.JavaCharStream:backup(I)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:slice([III)[I
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.VarInfoName:toString()Ljava.lang.String;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.ModBitTracker:split(I)I
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.Intern:numIntArrays()I
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.Quant:lte(II)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.Quant:subsetOf([J[J)Z
daikon.Quant:subsetOf([D[F)Z
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
utilMDE.LimitedSizeIntSet:add(I)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.VarInfoName.NodeFinder:inPre()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.Quant:memberOf(F[D)Z
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
utilMDE.Intern:internSubsequence([JII)[J
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.VarInfoName:ioa_name()Ljava.lang.String;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.Quant:eltsEqual([II)Z
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
utilMDE.ArraysMDE:element_range([I)I
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.Quant:setEqual([I[I)Z
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.Quant:subsetOf([B[I)Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.FuzzyFloat:ne(DD)Z
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfoName:repr()Ljava.lang.String;
utilMDE.OrderedPairIterator:hasNext()Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltwiseGTE([I)Z
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
jtb.JavaCharStream:ReadByte()C
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.Quant:gte(II)Z
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.Quant:eltsNotEqual([II)Z
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.inv.Invariant:getConfidence()D
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.VarInfoName:isLiteralConstant()Z
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.InvMap:InvMap()V
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
daikon.VarInfoName:hashCode()I
jtb.JavaParser:jj_ntk()I
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.FuzzyFloat:lte(DD)Z
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
utilMDE.ArraysMDE:min_max([I)[I
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.Ppt:Ppt()V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.Quant:sameLength([I[I)Z
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.inv.Invariant:prob_and(DDD)D
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.Quant:eq(DD)Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.MathMDE:mod_positive(JJ)J
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
utilMDE.WeakHasherMap:size()I
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
387 2 809 2 164 2 771 2 505 2 43 2 698 2 372 4 529 2 
45 6 953 2 239 2 407 6 783 2 623 2 435 2 859 2 384 6 52 2 860 2 
821 6 106 2 43 2 150 6 686 2 568 2 391 2 17 6 844 4 698 2 836 2 806 4 50 6 
472 4 204 10 882 2 177 10 408 10 584 4 585 2 153 4 638 6 31 2 155 8 283 16 516 10 807 2 716 6 449 10 221 8 291 8 166 4 43 6 362 8 235 16 395 16 21 2 370 2 68 12 24 2 698 6 700 26 633 28 
275 6 626 4 
765 2 
56 2 0 2 107 2 314 2 318 4 561 2 444 2 515 2 387 2 327 2 921 4 329 2 188 4 455 2 193 2 18 2 21 2 199 2 26 2 698 4 145 2 202 2 820 2 478 4 282 2 79 2 886 2 482 2 413 2 890 2 539 2 357 2 779 2 892 2 43 4 44 2 502 2 787 2 547 2 503 2 724 2 238 2 100 2 968 2 
472 2 204 15 408 15 151 6 177 6 585 2 948 6 559 2 799 2 638 4 827 4 283 32 587 2 483 4 516 15 713 2 716 4 449 15 221 19 776 5 89 4 291 6 567 6 622 4 64 6 43 4 389 4 170 2 460 3 394 4 896 6 235 32 395 32 342 4 698 4 68 22 700 47 665 8 633 52 
482 2 2 2 161 2 
918 2 348 2 178 2 409 2 136 2 708 2 99 2 547 2 269 2 659 2 773 2 830 10 466 22 489 2 
472 2 204 2 849 2 408 2 177 4 283 2 488 2 516 2 716 2 449 2 255 2 221 2 719 2 746 2 235 2 605 2 395 2 965 2 369 2 68 2 727 2 700 4 633 6 
204 4 408 4 389 4 584 2 948 6 896 6 394 4 283 8 235 8 395 8 463 2 68 4 516 4 449 4 700 12 185 2 633 16 
29 14 276 8 2 2 111 2 377 2 482 4 62 2 775 2 491 2 161 2 387 2 519 2 91 2 601 2 930 2 396 2 173 4 341 2 71 2 664 2 
88 2 687 2 361 2 765 2 573 2 59 2 439 2 438 2 37 2 447 2 307 2 
732 2 733 2 246 2 850 3 851 1 110 2 856 2 614 2 737 5 250 32 616 2 120 1 858 6 124 24 382 2 256 2 132 2 13 2 15 3 753 1 140 24 266 4 871 4 143 32 756 2 872 2 272 2 627 2 524 2 527 2 398 2 878 1 631 2 399 2 401 2 532 2 883 2 410 2 636 4 884 2 766 2 280 2 768 2 157 2 414 3 158 3 647 4 416 2 284 2 285 2 648 1 419 2 288 2 777 2 39 2 422 2 651 2 164 2 42 2 544 4 165 2 293 2 294 2 295 2 43 32 296 2 894 2 298 8 785 1 786 2 172 2 548 1 549 4 46 2 661 16 899 2 175 12 430 2 905 2 309 2 55 2 907 1 558 2 176 6 669 16 436 16 437 2 800 8 911 4 670 2 440 2 319 2 320 2 675 3 448 2 452 2 566 2 922 2 328 2 569 2 570 2 689 6 690 1 572 2 459 1 195 4 691 2 932 2 931 6 461 12 935 2 575 3 198 2 816 2 936 3 698 34 200 2 699 3 201 3 471 2 942 2 209 2 73 1 947 2 950 8 951 2 828 2 215 2 589 2 485 16 487 2 712 1 837 2 219 2 87 2 222 1 494 2 839 2 358 1 959 2 597 1 360 3 600 3 963 1 98 1 966 3 967 2 240 2 726 2 
698 2 679 2 
580 2 945 2 698 4 
169 2 
402 2 608 2 57 2 612 6 824 2 179 2 912 2 281 2 615 2 772 2 833 2 351 2 127 2 741 2 325 2 541 2 920 2 866 6 504 2 900 2 174 6 731 2 
510 2 212 1 941 2 77 2 
510 2 497 2 
510 2 482 2 462 2 260 2 166 2 701 2 344 2 
822 2 510 2 462 2 
510 2 462 2 571 2 
312 2 697 2 941 2 
510 2 462 2 
312 2 815 2 
881 2 510 2 
312 2 941 2 417 2 
205 2 873 2 941 2 
710 2 586 2 941 2 
249 2 751 2 941 2 
693 2 941 2 717 2 
312 2 82 2 
510 2 528 2 
873 2 317 2 
364 2 586 2 
676 2 751 2 
863 2 717 2 
312 2 722 2 
451 2 717 2 
751 2 85 2 
586 2 578 2 
873 2 211 2 
312 2 69 2 941 2 417 2 
656 2 312 2 69 2 941 2 417 2 
312 2 941 2 334 2 
41 2 312 2 941 2 
957 2 652 2 330 2 233 2 
556 2 335 2 482 2 701 2 
556 2 335 2 339 2 482 2 260 2 701 2 
510 2 482 2 462 2 166 2 183 2 701 2 
329 2 321 2 
736 2 482 2 166 2 701 2 
751 2 138 2 
717 2 492 2 
873 2 383 2 
4 2 586 2 
214 2 586 2 717 2 
586 2 75 2 717 2 
315 2 586 2 717 2 
586 2 717 2 244 2 
637 6 482 2 784 2 604 2 336 2 304 6 818 2 701 2 
312 2 749 2 
146 2 535 2 207 2 405 2 960 2 16 2 825 2 78 2 118 2 340 2 956 4 758 4 790 2 466 6 715 2 759 2 242 2 730 2 
877 2 941 2 
293 2 
373 2 374 2 733 2 246 2 1 2 105 2 375 2 110 2 250 6 120 2 858 5 135 2 266 4 143 4 268 2 756 2 23 2 524 2 878 2 883 2 636 4 278 2 884 2 639 4 647 2 416 2 284 2 285 6 419 2 777 2 39 2 651 1 164 2 422 2 544 2 165 2 43 26 295 4 294 2 296 2 549 2 46 2 661 6 427 2 899 2 175 8 310 2 55 2 558 2 432 2 176 2 437 2 911 4 800 2 319 2 320 1 922 2 328 2 689 2 459 4 691 2 195 4 692 2 931 6 461 8 935 2 816 2 698 26 343 2 209 2 951 2 837 2 959 2 843 2 237 4 967 2 726 2 848 2 
373 2 374 2 733 2 246 2 1 2 105 2 375 2 110 2 250 6 120 2 858 6 266 4 143 4 268 2 756 2 872 2 874 2 23 2 524 2 878 2 883 2 636 4 278 2 884 2 639 4 647 2 416 2 284 2 285 6 419 2 777 2 39 2 651 2 164 2 422 2 544 2 165 2 43 26 295 4 294 2 296 2 549 2 46 2 661 6 427 2 899 2 175 8 310 2 54 2 55 2 558 2 176 2 437 2 911 4 800 2 319 2 320 2 922 2 328 2 689 2 459 2 691 2 195 4 692 2 931 6 461 8 935 2 816 2 698 26 343 2 209 2 707 2 951 2 837 2 959 2 843 2 237 4 967 2 726 2 
94 2 
876 2 109 2 
434 2 557 2 796 4 909 2 435 2 854 2 437 2 60 2 117 4 119 2 914 4 182 2 617 8 859 4 384 6 682 2 63 10 326 2 328 2 813 2 195 2 270 2 694 2 931 4 757 2 523 2 875 2 524 2 144 2 629 2 698 12 944 2 407 6 636 2 154 4 884 2 479 2 709 2 953 2 954 8 711 4 486 2 590 2 36 2 284 2 159 2 891 2 718 2 653 2 783 4 43 6 167 4 603 2 723 2 500 2 365 2 45 6 658 2 46 2 726 2 
434 2 557 2 796 4 909 2 435 2 113 2 854 2 437 2 60 2 117 4 119 2 914 4 182 2 617 8 859 4 384 8 63 10 328 2 623 2 813 2 195 2 270 2 694 2 931 4 757 2 523 2 875 2 524 2 144 2 629 2 698 12 944 2 705 2 407 6 636 2 154 4 884 2 479 2 709 2 953 2 954 8 711 4 486 2 590 2 36 2 714 4 284 2 159 2 891 2 718 2 653 2 43 6 783 4 167 4 603 2 723 2 500 2 365 2 45 8 658 2 46 2 726 2 
653 2 557 2 783 2 407 2 909 2 167 4 813 2 854 2 723 2 45 2 117 4 658 2 270 2 757 2 711 2 523 2 859 2 159 2 
434 2 557 2 796 4 909 2 435 2 854 2 437 2 60 2 117 4 119 2 914 4 182 2 617 4 859 4 384 6 682 2 63 6 326 2 328 2 623 2 813 2 195 2 270 2 694 2 931 4 757 2 523 2 875 2 524 2 144 2 629 2 698 12 944 2 407 4 636 2 154 4 884 2 479 2 709 2 954 4 711 4 486 2 590 2 36 2 284 2 159 2 891 2 718 2 653 2 783 4 43 6 167 4 603 2 723 2 500 2 365 2 45 6 658 2 46 2 726 2 
434 2 557 2 796 4 909 2 435 2 854 2 437 2 60 2 117 4 119 2 914 4 182 2 617 4 859 4 384 6 682 2 63 6 326 2 328 2 813 2 195 2 270 2 694 2 931 4 757 2 523 2 875 2 524 2 144 2 629 2 698 12 944 2 407 6 636 2 154 4 884 2 479 2 709 2 954 4 711 4 486 2 590 2 36 2 284 2 159 2 891 2 718 2 653 2 783 4 43 6 167 4 603 2 723 2 500 2 365 2 45 4 658 2 46 2 726 2 52 2 
434 2 557 2 796 4 909 2 435 2 854 2 437 2 60 2 117 4 119 2 914 4 182 2 617 4 859 4 384 6 682 2 63 6 326 2 328 2 813 2 195 2 270 2 694 2 931 4 757 2 523 2 875 2 524 2 144 2 629 2 698 12 944 2 407 6 636 2 154 4 884 2 479 2 709 2 953 2 954 8 711 4 486 2 590 2 36 2 284 2 159 2 891 2 718 2 653 2 783 4 43 6 167 4 603 2 723 2 500 2 365 2 45 6 658 2 46 2 726 2 
434 2 557 2 796 4 909 2 435 2 854 2 437 2 60 2 117 4 119 2 914 4 182 2 617 8 859 4 384 8 682 2 63 10 326 2 328 2 813 2 195 2 270 2 694 2 931 4 757 2 523 2 875 2 524 2 144 2 629 2 698 12 944 2 407 8 636 2 154 4 884 2 479 2 709 2 953 2 954 8 711 4 486 2 590 2 36 2 284 2 159 2 891 2 718 2 653 2 783 4 43 6 167 4 603 2 723 2 500 2 365 2 45 6 658 2 46 2 726 2 52 2 
434 2 557 2 796 4 909 2 435 2 854 2 437 2 60 2 117 4 119 2 914 4 182 2 617 8 859 4 384 6 682 2 63 10 326 2 328 2 813 2 195 2 270 2 694 2 931 4 757 2 523 2 875 2 524 2 144 2 629 2 698 12 944 2 407 6 636 2 154 4 884 2 479 2 709 2 953 2 954 8 711 4 486 2 590 2 36 2 284 2 159 2 891 2 718 2 653 2 783 4 43 6 167 4 603 2 723 2 500 2 365 2 45 6 658 2 46 2 726 2 
733 2 246 12 1 2 250 8 253 2 9 4 744 6 518 2 520 2 19 1 266 4 270 2 757 2 271 8 523 2 23 2 524 2 531 6 36 2 284 2 285 6 39 2 544 2 43 24 783 4 296 2 45 4 549 2 789 1 46 2 300 2 550 2 305 2 52 4 310 4 55 2 557 2 796 6 316 4 800 2 801 2 60 2 319 2 320 2 564 6 63 2 328 2 331 2 813 2 816 2 580 6 823 1 81 1 590 2 86 6 93 2 603 4 365 2 101 2 368 1 846 2 103 6 373 2 853 2 854 2 117 4 119 2 858 6 859 4 384 12 621 6 869 2 870 1 141 2 143 2 875 2 144 2 629 2 879 6 148 6 407 8 883 2 406 2 636 4 154 8 884 2 639 4 642 2 156 6 888 6 647 2 416 2 889 2 159 2 891 2 651 2 164 2 422 2 653 2 165 2 167 4 169 6 658 2 898 2 661 6 662 2 175 4 428 2 663 2 906 1 434 2 176 2 668 2 909 2 435 4 437 2 911 4 672 2 914 4 182 4 679 6 682 2 184 2 919 1 922 2 191 2 689 2 458 2 194 10 195 4 691 2 931 6 694 2 461 4 935 2 695 6 464 2 938 2 698 46 470 2 944 2 209 2 477 7 709 2 479 2 954 2 711 4 213 2 955 2 486 2 218 1 490 7 718 2 959 2 226 2 962 6 723 2 500 2 726 2 729 6 
373 2 733 2 246 12 1 2 853 2 854 2 250 8 117 4 119 2 858 6 253 2 859 4 9 4 744 6 384 12 518 2 621 6 520 2 869 2 141 2 266 4 143 2 270 2 271 8 757 2 523 2 23 2 875 2 524 2 629 2 144 2 531 6 879 6 148 6 406 2 883 2 407 8 636 4 154 8 884 2 639 4 642 2 156 6 888 6 647 4 36 2 416 2 889 2 285 6 284 2 159 2 891 2 39 2 650 2 422 2 164 2 651 2 653 2 165 2 544 4 295 2 783 4 43 26 167 4 296 2 169 6 45 8 898 2 658 2 549 4 300 2 46 2 550 2 661 6 662 2 428 2 175 8 305 2 663 2 310 4 55 2 434 2 557 2 668 2 176 2 796 6 435 4 909 2 316 4 437 2 800 2 911 4 801 2 60 2 672 2 914 4 319 2 182 4 320 2 564 6 679 6 184 2 682 2 63 2 922 2 328 2 331 2 191 2 689 2 813 2 458 2 194 10 691 2 195 4 694 2 931 6 461 8 935 2 695 6 816 2 464 2 938 2 698 48 470 2 580 6 209 2 944 2 479 2 709 2 953 4 954 6 955 2 213 2 711 4 486 2 590 2 86 6 718 2 959 2 93 2 226 2 962 6 603 4 499 2 723 2 500 2 365 2 101 2 846 2 103 6 726 2 729 6 
373 2 733 2 246 12 1 2 853 2 854 2 250 8 117 4 119 2 617 4 858 6 253 2 859 4 9 4 744 6 384 12 518 2 621 6 520 2 869 2 141 2 266 4 143 2 270 2 271 8 757 2 523 2 23 2 875 2 524 2 629 2 144 2 531 6 879 6 148 6 406 2 407 8 883 2 636 4 154 8 884 2 639 4 642 2 156 6 888 6 647 4 36 2 416 2 889 2 285 6 284 2 159 2 891 2 39 2 650 2 422 2 164 2 651 2 653 2 165 2 544 4 295 2 783 4 43 26 167 4 296 2 169 6 45 8 898 2 658 2 549 4 300 2 46 2 550 2 661 6 662 2 428 2 175 8 305 2 663 2 310 4 55 2 434 2 557 2 668 2 176 2 796 6 435 4 909 2 316 4 437 2 800 2 911 4 801 2 60 2 672 2 319 2 914 4 182 4 320 2 564 6 679 6 184 2 682 2 63 6 922 2 328 2 331 2 191 2 689 2 813 2 458 2 194 10 691 2 195 4 694 2 931 6 461 8 935 2 695 6 816 2 464 2 938 2 698 48 470 2 580 6 209 2 944 2 479 2 709 2 953 4 954 6 955 2 213 2 711 4 486 2 590 2 86 6 718 2 959 2 93 2 226 2 962 6 603 4 499 2 723 2 500 2 365 2 101 2 846 2 103 6 726 2 729 6 
733 2 246 10 1 2 735 2 250 12 513 2 253 2 9 4 744 12 518 2 259 6 520 2 266 4 270 2 757 2 271 8 523 2 23 4 524 2 526 6 27 6 531 6 36 2 284 2 285 8 39 2 544 4 295 2 43 24 783 4 296 2 45 10 549 4 46 2 300 2 550 2 305 2 52 2 310 4 55 2 557 2 796 6 316 4 800 4 801 2 560 2 60 2 319 2 320 2 564 6 63 6 328 2 331 2 813 2 338 2 816 2 580 12 590 2 86 6 93 2 603 4 365 2 101 2 846 2 103 6 373 2 108 6 854 2 378 6 117 4 119 2 617 4 858 6 859 4 384 16 385 2 621 6 623 2 869 2 141 2 143 4 875 2 144 2 629 2 879 12 148 6 883 2 407 10 406 2 636 4 154 8 884 2 639 6 885 6 640 6 641 2 642 2 156 6 888 6 647 4 416 2 889 2 159 2 891 2 650 2 651 2 164 2 422 2 653 2 165 2 167 4 169 12 658 2 898 2 661 8 662 2 175 10 428 2 663 2 434 2 176 4 668 2 909 2 435 4 437 2 911 4 672 2 914 4 441 6 182 4 679 12 682 2 184 2 922 2 191 2 689 4 458 2 194 8 195 4 691 2 931 6 694 2 197 2 461 10 935 2 695 6 696 2 464 2 938 2 698 52 470 2 944 2 209 2 709 2 479 2 953 4 954 6 711 4 213 2 955 2 486 2 718 2 224 6 959 2 226 2 962 6 499 2 723 2 500 2 726 2 729 12 
557 2 944 2 796 2 407 6 435 2 909 2 154 2 854 2 60 2 709 2 117 2 953 2 914 2 954 6 617 4 486 2 36 2 859 4 384 4 682 2 63 4 783 4 167 2 813 2 500 2 365 2 45 6 694 2 270 2 757 2 523 2 875 2 629 2 144 2 698 4 
373 2 733 2 246 4 1 2 853 2 854 2 856 2 117 2 250 8 119 2 514 3 858 6 859 4 384 4 132 2 133 2 262 2 868 2 266 4 143 3 270 2 757 2 523 2 524 2 875 2 144 2 629 2 407 6 883 2 636 4 410 2 154 2 884 2 639 4 36 2 416 2 284 2 285 6 39 2 651 2 164 2 422 2 293 2 165 2 783 4 43 24 167 2 296 2 45 6 46 2 301 2 661 6 302 2 310 2 55 2 557 2 176 3 796 2 435 2 909 2 437 2 911 4 60 2 914 2 319 2 320 2 682 2 63 2 328 2 922 2 689 3 813 2 194 2 195 4 691 2 694 2 931 6 816 2 698 28 209 2 944 2 709 2 953 2 954 6 486 2 959 2 500 2 365 2 726 2 
770 2 144 2 500 2 
770 2 144 2 500 2 
373 2 733 2 246 4 1 2 379 4 380 2 250 2 117 2 251 2 617 4 858 6 859 4 9 2 384 16 747 2 623 4 137 2 266 4 143 2 754 2 757 2 523 2 524 2 144 4 534 2 761 4 883 2 407 12 636 4 278 4 154 4 884 2 770 2 888 2 647 4 646 2 416 2 284 2 285 2 649 2 159 2 39 2 651 2 164 2 163 2 653 2 544 4 165 2 43 16 783 4 167 2 296 2 45 12 549 4 46 2 661 2 175 4 431 2 52 4 310 6 55 2 796 4 58 2 909 4 435 4 316 2 437 2 911 4 319 2 914 2 182 2 320 2 63 6 187 2 922 2 328 2 333 2 459 2 194 2 691 2 195 4 929 2 931 6 694 2 461 4 935 4 816 2 698 24 470 2 209 2 479 2 709 2 953 4 954 6 213 2 711 4 481 2 590 2 718 2 223 2 959 2 603 4 500 6 846 2 726 2 243 2 
534 2 246 2 668 2 328 2 797 2 43 2 109 2 723 2 194 2 141 2 481 2 888 2 507 2 698 4 915 2 9 2 649 2 
509 2 373 2 733 2 246 2 1 2 379 4 380 4 250 2 117 2 251 2 617 4 858 6 859 4 384 16 623 4 137 2 266 4 143 4 754 2 757 2 523 2 524 2 144 4 534 2 761 4 883 2 407 12 636 4 278 4 154 4 884 2 770 2 888 2 647 4 646 2 416 2 284 2 285 2 649 2 159 2 891 2 39 2 651 2 164 2 163 2 653 2 544 4 165 2 43 16 783 4 167 2 296 2 45 12 549 4 46 2 661 2 175 4 431 2 52 4 310 6 55 2 796 4 58 2 909 4 435 4 316 2 437 2 911 4 914 2 319 2 182 4 320 2 63 6 922 2 328 2 691 2 195 4 931 6 694 2 461 4 935 4 816 2 698 24 470 2 209 2 583 2 479 2 709 2 953 4 954 6 480 2 213 2 711 4 481 2 832 2 590 2 355 2 718 2 223 2 959 2 603 4 500 6 846 2 726 2 243 2 
373 2 733 2 246 4 1 2 379 4 380 2 250 2 117 2 251 2 857 2 617 4 858 6 859 4 9 2 129 2 384 16 623 4 261 2 137 2 266 4 143 2 754 2 757 2 523 2 524 2 144 4 534 2 761 4 883 2 407 12 636 4 278 4 154 4 884 2 770 2 888 2 647 4 646 2 416 2 284 2 285 2 649 2 159 2 891 2 39 2 651 2 164 2 163 2 653 2 544 4 165 2 43 16 783 4 167 2 296 2 45 12 549 4 46 2 661 2 175 4 431 2 52 4 310 6 55 2 796 4 58 2 909 4 435 4 316 2 437 2 911 4 319 2 914 2 182 4 320 2 63 6 922 2 328 2 459 1 194 2 691 2 195 4 931 6 694 2 461 4 935 4 816 2 468 2 698 24 470 2 209 2 479 2 952 2 709 2 953 4 954 6 213 2 711 4 481 2 590 2 718 2 223 2 959 2 603 4 500 6 846 2 726 2 243 2 
733 2 246 2 1 2 734 10 511 2 250 18 514 2 738 10 254 2 253 2 742 24 516 2 517 10 745 2 12 2 262 2 752 2 266 4 268 2 22 2 23 42 524 2 274 2 25 2 760 2 30 4 32 2 283 4 33 2 34 2 35 2 285 12 284 2 287 1 538 2 542 4 39 2 778 2 780 3 43 24 296 2 545 4 546 10 301 2 46 2 550 2 305 2 51 2 792 10 310 2 55 2 800 16 319 2 805 1 320 2 563 2 324 2 328 2 812 12 337 2 816 2 817 2 577 2 68 4 70 2 343 2 819 2 579 2 72 6 345 2 346 2 826 2 80 2 588 2 354 2 592 2 356 4 598 2 92 10 95 2 843 2 363 2 367 2 371 2 374 10 105 2 375 2 112 14 116 2 120 2 858 6 618 2 126 2 125 2 133 2 389 4 865 14 868 2 624 2 392 4 393 2 143 11 395 4 878 2 633 7 147 4 406 2 883 2 408 2 636 4 152 2 884 2 639 10 643 12 887 1 644 10 645 4 416 2 418 2 160 2 420 2 422 2 164 2 651 2 423 2 165 2 893 2 168 2 654 2 896 6 897 4 427 2 661 12 175 18 903 2 176 11 910 2 437 2 911 4 181 2 672 2 673 6 443 4 445 2 677 8 449 2 680 4 453 2 684 2 922 2 190 2 457 2 191 2 689 11 458 2 927 14 691 2 195 4 692 2 931 6 934 10 461 18 935 4 937 2 698 30 939 10 700 6 203 2 204 2 206 2 208 10 209 2 943 2 473 2 946 2 475 2 484 2 217 1 713 4 220 2 221 4 721 10 958 4 959 2 961 6 229 14 501 8 231 1 234 4 235 4 236 2 726 2 241 2 728 2 
206 2 176 2 734 4 152 2 639 2 250 2 738 2 34 2 285 2 418 2 220 2 517 2 780 2 422 2 43 2 689 2 143 2 845 2 661 2 22 2 23 6 698 2 25 2 728 2 
206 2 176 2 734 4 152 2 639 2 250 2 738 2 34 2 285 2 418 2 220 2 517 2 780 2 422 2 43 2 689 2 143 2 845 2 661 2 22 2 23 6 698 2 25 2 728 2 
206 2 176 2 734 4 152 2 639 2 250 2 738 2 34 2 285 2 418 2 220 2 517 2 780 2 422 2 43 2 689 2 143 2 845 2 661 2 22 2 23 6 698 2 25 2 728 2 
204 2 762 3 703 2 313 2 408 2 152 2 669 2 638 2 283 2 250 2 121 2 831 2 485 2 516 2 838 2 449 2 493 4 40 4 90 3 683 2 291 4 422 2 292 6 43 4 498 2 134 3 602 2 521 2 689 3 657 2 143 3 235 2 395 2 397 4 273 4 847 4 698 10 700 4 632 2 633 6 
204 2 762 2 703 2 313 2 408 2 585 2 152 2 669 2 638 2 283 2 250 2 121 2 831 2 485 2 516 2 838 2 449 2 221 2 493 4 40 4 90 2 683 2 291 4 422 2 292 6 43 4 498 2 134 2 602 2 521 2 689 2 657 2 143 2 235 2 395 2 397 4 273 4 847 4 68 2 698 10 700 4 632 2 633 4 
204 2 762 2 703 2 313 2 408 2 585 2 152 2 669 2 638 2 283 2 250 2 121 2 831 2 485 2 516 2 838 2 449 2 221 2 493 4 40 4 90 2 683 2 291 4 422 2 292 6 43 4 498 2 134 2 602 2 521 2 689 2 657 2 143 2 235 2 395 2 397 4 273 4 847 4 68 2 698 10 700 4 632 2 633 4 
204 2 762 2 703 2 313 2 408 2 585 2 152 2 669 2 638 2 283 2 250 2 121 2 831 2 485 2 516 2 838 2 449 2 221 2 493 4 40 4 90 2 683 2 291 4 422 2 292 6 43 4 498 2 134 2 602 2 521 2 689 2 657 2 143 2 235 2 395 2 397 4 273 4 847 4 68 2 698 10 700 4 632 2 633 4 
204 2 762 2 703 2 313 2 408 2 585 4 152 2 669 2 638 2 283 2 250 2 121 2 831 2 485 2 516 2 838 2 449 2 221 4 493 4 40 4 90 2 683 2 291 4 422 2 292 6 43 4 498 2 134 2 602 2 521 2 689 2 657 2 143 2 235 2 395 2 397 4 273 4 847 4 68 4 698 10 700 4 632 2 633 4 
533 2 543 2 834 2 247 2 508 2 181 2 
374 2 925 2 508 2 940 2 867 2 808 2 38 2 
554 2 611 2 404 2 377 1 7 2 381 2 83 2 835 2 743 2 681 1 450 2 43 8 601 1 139 2 230 2 20 2 48 1 102 2 525 2 303 2 49 1 698 10 726 2 469 2 553 2 879 2 
204 6 0 2 408 6 473 2 585 2 638 2 826 2 283 6 483 2 516 6 449 6 539 2 221 2 776 4 291 4 862 2 43 6 14 2 389 2 625 2 896 4 235 6 234 2 196 2 395 6 698 6 68 5 700 12 665 2 633 16 
861 2 40 2 841 2 43 1 277 2 852 2 228 2 764 2 5 2 802 2 847 2 273 2 415 6 698 1 678 1 552 4 904 2 530 2 
861 2 40 2 841 2 277 4 852 2 228 4 764 2 5 4 802 2 847 2 273 2 415 6 552 4 904 2 530 2 
861 2 40 2 841 2 43 1 277 8 852 8 228 8 764 2 5 8 802 2 847 2 273 2 415 10 698 1 678 1 552 4 904 6 530 2 
861 2 40 2 841 2 277 2 228 2 764 2 5 2 802 2 847 2 273 2 415 2 552 2 530 2 
610 4 376 2 3 17 112 4 613 6 114 1 115 10 512 8 8 6 858 248 740 10 128 4 620 6 10 42 11 10 130 2 386 4 131 4 748 24 390 90 750 10 865 22 264 4 265 90 142 6 266 88 755 4 628 8 403 26 880 6 634 36 149 18 635 2 763 8 279 6 767 2 769 10 411 4 887 16 774 6 286 4 536 4 537 8 287 11 290 4 289 24 540 2 162 6 651 58 421 8 781 10 43 134 171 6 895 6 299 50 655 16 660 18 426 8 47 6 429 6 175 28 902 2 791 124 551 24 308 2 666 4 53 6 433 2 795 6 798 42 911 112 180 4 913 2 671 2 803 24 442 24 804 4 320 58 61 6 322 4 446 12 323 16 917 2 916 92 565 2 811 2 922 14 924 6 65 2 454 16 926 2 332 4 814 2 459 4 934 34 816 8 576 24 67 6 698 150 702 6 704 12 210 8 582 4 74 4 949 2 706 4 76 6 829 2 216 4 353 6 84 2 217 8 593 10 594 84 596 8 840 4 720 6 225 4 959 14 842 4 96 10 231 8 964 6 366 4 606 4 506 6 725 2 607 26 
53 2 609 2 311 2 667 2 3 2 911 20 855 2 115 2 671 2 803 2 562 4 8 2 252 2 674 2 739 2 320 2 61 2 858 44 740 2 323 4 565 2 257 2 11 2 186 2 922 2 923 2 685 2 189 2 65 2 454 4 864 2 750 2 688 4 926 2 263 2 264 2 192 2 459 2 522 2 266 20 267 2 928 2 933 4 66 2 576 2 816 2 698 46 28 2 400 2 634 2 581 2 347 2 210 2 763 2 476 2 706 2 279 2 350 2 769 2 412 2 352 2 644 6 84 2 591 2 537 2 593 2 289 2 595 2 596 6 495 2 651 2 421 2 720 4 781 2 782 2 959 2 599 2 43 44 227 2 95 4 96 2 895 2 655 4 232 2 660 2 429 2 175 38 725 2 791 6 104 2 306 2 793 2 
3 10 6 16 613 4 115 6 8 4 252 10 123 4 858 104 740 4 619 4 620 4 10 8 386 4 131 4 388 4 263 2 266 36 142 4 628 4 880 4 634 6 763 2 279 4 769 4 887 8 774 4 286 4 536 4 540 2 162 4 651 28 421 2 43 70 424 4 297 8 895 4 299 8 425 2 655 10 660 10 47 4 901 4 175 14 429 4 791 24 551 8 666 4 555 2 53 4 794 8 795 4 908 2 798 16 911 44 180 2 671 2 804 4 320 30 61 4 322 4 323 10 916 24 565 2 810 4 811 2 922 6 924 4 454 10 456 8 926 2 814 2 574 2 934 30 816 2 67 4 465 2 698 78 467 4 702 4 704 14 581 2 74 4 582 4 210 2 474 2 476 10 949 2 76 4 349 8 216 4 84 2 593 4 594 24 596 6 840 4 720 2 359 16 959 6 599 10 842 4 96 4 97 32 231 4 964 4 506 4 725 2 104 2 
53 4 433 2 376 2 3 2 112 2 911 14 180 2 115 2 671 2 8 4 320 12 61 4 858 40 740 2 323 6 565 2 130 2 922 2 454 6 65 2 865 10 263 2 926 2 459 2 266 14 934 6 816 2 628 4 698 28 634 2 74 2 210 2 582 2 763 2 279 4 829 2 411 2 769 2 887 6 217 2 84 2 287 2 593 2 596 4 421 2 651 12 720 2 959 2 43 26 96 2 895 4 655 6 232 2 660 2 175 14 429 4 725 2 791 8 308 2 
122 2 
258 1 788 1 496 1 248 1 630 1 245 1 
258 1 788 1 496 1 248 1 630 1 245 1 
258 1 788 1 496 1 248 1 630 1 245 1 
258 1 788 1 496 1 248 1 630 1 245 1 
258 1 788 1 496 1 248 1 630 1 245 1 
258 1 788 1 496 1 248 1 630 1 245 1 
258 1 788 1 496 1 248 1 630 1 245 1 
258 1 788 1 496 1 248 1 630 1 245 1 
258 1 788 1 496 1 248 1 630 1 245 1 
258 1 788 1 496 1 248 1 630 1 245 1 
258 1 788 1 496 1 248 1 630 1 245 1 
258 1 788 1 496 1 248 1 630 1 245 1 
258 1 788 1 496 1 248 1 630 1 245 1 
258 1 788 1 496 1 248 1 630 1 245 1 
258 1 788 1 496 1 248 1 630 1 245 1 
258 1 788 1 496 1 248 1 630 1 245 1 
258 1 788 1 496 1 248 1 630 1 245 1 
258 1 788 1 496 1 248 1 630 1 245 1 
258 1 788 1 496 1 248 1 630 1 245 1 
258 1 788 1 496 1 248 1 630 1 245 1 
258 1 788 1 496 1 248 1 630 1 245 1 
258 1 788 1 496 1 248 1 630 1 245 1 
258 1 788 1 496 1 248 1 630 1 245 1 
258 1 788 1 496 1 248 1 630 1 245 1 
258 1 788 1 496 1 248 1 630 1 245 1 
258 1 788 1 496 1 248 1 630 1 245 1 
258 1 788 1 496 1 248 1 630 1 245 1 
258 1 788 1 496 1 248 1 630 1 245 1 
258 1 788 1 496 1 248 1 630 1 245 1 
258 1 788 1 496 1 248 1 630 1 245 1 
258 1 788 1 496 1 248 1 630 1 245 1 
258 1 788 1 496 1 248 1 630 1 245 1 
258 1 788 1 496 1 248 1 630 1 245 1 
258 1 788 1 496 1 248 1 630 1 245 1 
258 1 788 1 496 1 248 1 630 1 245 1 
258 1 788 1 496 1 248 1 630 1 245 1 
258 1 788 1 496 1 248 1 630 1 245 1 
258 1 788 1 496 1 248 1 630 1 245 1 
258 1 788 1 496 1 248 1 630 1 245 1 
258 1 788 1 496 1 248 1 630 1 245 1 
258 1 788 1 496 1 248 1 630 1 245 1 
258 1 788 1 496 1 248 1 630 1 245 1 
258 1 788 1 496 1 248 1 630 1 245 1 
258 1 788 1 496 1 248 1 630 1 245 1 

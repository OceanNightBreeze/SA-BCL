#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V ERROR utilMDE.Assert$AssertionException (353,1507) 715 
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.NullPointerException 1223 347 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V ERROR utilMDE.Assert$AssertionException (353,1507) 715 1358 994 160 1146 1042 1515 58 (409,863) 958 (162,1148) (409,863) 334 (162,1148) 49 1511 
daikon.test.diff.DiffTester:testInvs1Invs1()V ERROR utilMDE.Assert$AssertionException (353,1507) 715 1358 994 160 1146 1042 1515 58 (409,863) 958 (162,1148) (409,863) 334 (162,1148) 49 1511 
daikon.test.diff.DiffTester:testInvs1Invs2()V ERROR utilMDE.Assert$AssertionException (353,1507) 715 1358 994 160 1146 1042 1515 58 (409,863) 958 (162,1148) (409,863) 334 (162,1148) 49 1511 
daikon.test.diff.DiffTester:testInvs1Invs3()V ERROR utilMDE.Assert$AssertionException (353,1507) 715 1358 994 160 1146 1042 1515 58 (409,863) 958 (162,1148) (409,863) 334 (162,1148) 49 1511 
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 63 1165 410 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR utilMDE.Assert$AssertionException (353,1507) (353,1507) 1048 657 1497 1186 961 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 779 1497 1186 961 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_0()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_1()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_2()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_3()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_4()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_5()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_6()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_7()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_8()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_9()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_10()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_11()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_12()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_13()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_14()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_15()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_16()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_17()V PASSED
daikon.test.split.SplitterFactoryTest:testmisc_Fib_main_18()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_19()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_20()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_21()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_22()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_23()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_24()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_25()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_26()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_27()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_28()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_29()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_30()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_31()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_32()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__33()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__34()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__35()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__36()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__37()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__38()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__39()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__40()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__41()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__42()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__43()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
jtb.JavaCharStream:getEndColumn()I
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
utilMDE.ArraysMDE:noDuplicates([D)Z
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.VariableDeclaratorId:VariableDeclaratorId(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
jtb.JavaParser:jj_3R_122()Z
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:lexGTE([I[I)Z
jtb.JavaCharStream:GetImage()Ljava.lang.String;
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.stringsequence.EltOneOfString:format_daikon()Ljava.lang.String;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Modifiers;)V
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
jtb.JavaParser:jj_3_1()Z
jtb.JavaParser:jj_3R_63()Z
daikon.ProglangType:elementType()Ldaikon.ProglangType;
jtb.JavaParser:jj_2_21(I)Z
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
utilMDE.Options.OptionInfo:argument_required()Z
daikon.VarInfo:simplify_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
jtb.JavaParser:jj_3_29()Z
daikon.Quant:pairwiseGT([I[I)Z
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarComparabilityImplicit:alwaysComparable()Z
jtb.JavaParser:jj_3R_73()Z
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.stringsequence.EltOneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
jtb.JavaParser:jj_2_3(I)Z
utilMDE.OrderedPairIterator:hasNext()Z
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.diff.InvMap:InvMap()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ResultType;)V
daikon.ProglangType:baseIsFloat()Z
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.Quant:slice([III)[I
jtb.syntaxtree.ClassOrInterfaceDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.Quant:eq(DD)Z
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltOneOf:EltOneOf(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_55()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReturnStatement;)V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase; | ASSIGN | 13092 | = null
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltUpperBound:format_ioa()Ljava.lang.String;
daikon.VarInfoName.Elements:ioa_name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.ArraysMDE:noDuplicates([J)Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.ProglangType:base()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.RelationalExpression;)V
jtb.JavaParser:jj_3R_86()Z
jtb.JavaParser:jj_3R_51()Z
jtb.JavaParser:jj_3R_134()Z
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
jtb.JavaParser:jj_3R_87()Z
daikon.VarInfoName.InorderFlattener:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.EqualityExpression:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:gte(II)Z
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
jtb.JavaParser:jj_3_4()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.ValueSet.ValueSetString:ValueSetString(I)V
daikon.Quant:lexEqual([I[I)Z
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3_28()Z
jtb.syntaxtree.NodeList:NodeList()V
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.Quant:memberOf(D[F)Z
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:set_bi_linear(JJJJ)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
jtb.syntaxtree.FormalParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltUpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:eltsGteIndex([I)Z
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.stringsequence.EltOneOfString:runValue([Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:isFloat()Z
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_116()Z
daikon.Quantify.QuantifyReturn:QuantifyReturn(Ldaikon.VarInfo;)V
jtb.JavaParser:jj_3R_67()Z
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
jtb.syntaxtree.AdditiveExpression:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeOptional;)V
daikon.ProglangType:isString()Z
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InclusiveOrExpression;)V
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.EltOneOf:is_hashcode()Z
daikon.VarInfoName:inOrderTraversal()Ljava.util.Collection;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_2_18(I)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:lexLTE([I[I)Z
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
utilMDE.MathMDE:pow_fast(II)I
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
utilMDE.ArraysMDE:subarray([JII)[J
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan()V
jtb.syntaxtree.CompilationUnit:CompilationUnit(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V | CONDITION | 681 | if (x) -> if (!x)
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_2_10(I)Z
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
jtb.syntaxtree.BlockStatement:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.Quant:eltsLT([II)Z
jtb.JavaCharStream:FillBuff()V
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
jtb.JavaParser:jj_3_5()Z
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:lexNotEqual([I[I)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.Quant:subsetOf([B[I)Z
jtb.syntaxtree.ConditionalAndExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.EltwiseIntComparison:EltwiseIntComparison(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.Type:accept(Ljtb.visitor.Visitor;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.VarInfoName:toString()Ljava.lang.String;
jtb.JavaParser:jj_3R_75()Z
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpression;)V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.unary.sequence.NoDuplicates:format_simplify()Ljava.lang.String;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.tools.jtb.Ast:getParent(Ljava.lang.Class;Ljtb.syntaxtree.Node;)Ljtb.syntaxtree.Node;
jtb.JavaParser:jj_3R_68()Z
utilMDE.Intern:intern([D)[D
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
jtb.syntaxtree.AndExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.VarInfo:jml_name()Ljava.lang.String;
utilMDE.Intern:internSubsequence([III)[I
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_76()Z
jtb.JavaCharStream:getBeginColumn()I
utilMDE.MathMDE:bitwiseComplement(I)I
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.inv.ValueSet.ValueSetStringArray:ValueSetStringArray(I)V
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_97()Z
utilMDE.FuzzyFloat:indexOf([D[D)I
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_105()Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfo:isIOAArray()Z
jtb.syntaxtree.ClassOrInterfaceBody:ClassOrInterfaceBody(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_100()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.InorderFlattener:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_164()Z
jtb.JavaParser:jj_3R_148()Z
daikon.inv.unary.string.OneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3_20()Z
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
utilMDE.ArraysMDE:min([I)I
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.inv.unary.sequence.EltOneOf:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.stringsequence.EltOneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaCharStream:readChar()C
jtb.JavaParser:jj_3R_180()Z
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.stringsequence.EltOneOfString:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:memberOf(F[D)Z
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.string.OneOfString:OneOfString(Ldaikon.PptSlice;)V
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.NodeListOptional:accept(Ljtb.visitor.Visitor;)V
daikon.PptTopLevel:getInvariants()Ljava.util.List;
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_47()Z
daikon.inv.unary.sequence.NoDuplicates:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
jtb.JavaParser:jj_3R_169()Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.ProglangType:isScalar()Z
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
jtb.syntaxtree.ReturnStatement:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.Expression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.LimitedSizeIntSet:size()I
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.MathMDE:sign(I)I
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:enabled()Z
jtb.syntaxtree.NodeSequence:accept(Ljtb.visitor.Visitor;)V
utilMDE.TestUtilMDE.1InternTest:test(Z)V
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
daikon.inv.binary.twoScalar.LinearBinary:add_modified(JJI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
daikon.Quant:ne(II)Z
daikon.inv.unary.sequence.EltUpperBound:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
jtb.syntaxtree.PrimaryPrefix:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
daikon.test.TestAst.ClassOrInterfaceDeclarationHarvester:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
utilMDE.MathMDE:gcd_differences([I)I
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.syntaxtree.FormalParameter:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName:simplify_name()Ljava.lang.String;
jtb.JavaParser:jj_3R_124()Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.ValueTuple:isMissingFlow(I)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
jtb.JavaParser:jj_3R_119()Z
jtb.syntaxtree.NodeSequence:elements()Ljava.util.Enumeration;
jtb.JavaParser:jj_3R_96()Z
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.VarInfo:domainTypeIOA()Ljava.lang.String;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.UtilMDE:lineNumberFileReader(Ljava.lang.String;)Ljava.io.LineNumberReader;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
jtb.JavaParser:jj_3R_53()Z
daikon.inv.unary.sequence.EltNonZero:format_ioa()Ljava.lang.String; | ASSIGN | 4396 | = null
daikon.PptSlice1:arity()I
daikon.inv.unary.sequence.EltNonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_61()Z
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.tools.jtb.Ast:getClassName(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.Quant:subsetOf([D[D)Z
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.Assert:assertTrue(Z)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:ClassOrInterfaceDeclaration(Ljtb.syntaxtree.NodeChoice;Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ClassOrInterfaceBody;)V
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
jtb.syntaxtree.TypeBound:accept(Ljtb.visitor.Visitor;)V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ExclusiveOrExpression;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.PostfixExpression:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.Quant:pairwiseEqual([I[I)Z
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_ioa()Ljava.lang.String;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.Quant:setEqual([I[I)Z
jtb.JavaParser:jj_3R_62()Z
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
jtb.JavaParser:jj_3R_70()Z
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_2_14(I)Z
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.Quantify.QuantFlags:distinct()Ljava.util.EnumSet;
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.VarInfo:get_enclosing_var()Ldaikon.VarInfo;
jtb.syntaxtree.NodeSequence:getParent()Ljtb.syntaxtree.Node;
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarComparabilityNone:elementType()Ldaikon.VarComparability;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.inv.Invariant:prob_or(DD)D
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.test.InvariantFormatTester:execute()Z
jtb.JavaParser:jj_3R_106()Z
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.VarInfo:isPrestate()Z
jtb.JavaParser:jj_2_36(I)Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
utilMDE.ArraysMDE:sum([D)D
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
jtb.JavaParser:jj_3R_69()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArguments;)V
daikon.VarInfo:name()Ljava.lang.String;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.inv.unary.sequence.EltOneOf:sort_rep()V
daikon.VarInfoName:name()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.Invariants:Invariants()V
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
jtb.JavaCharStream:getBeginLine()I
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
jtb.JavaParser:jj_3R_85()Z
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_60()Z
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltNonZero:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_52()Z
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.Quant:subsetOf([D[F)Z
daikon.ValueTuple:size()I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Node:Node()V
jtb.JavaParser:jj_3R_163()Z
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.PptName:isEnterPoint()Z
daikon.Quant:lexLT([I[I)Z
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
daikon.inv.unary.sequence.EltUpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.PptTopLevel.CondIterator:hasNext()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PackageDeclaration;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_ioa()Ljava.lang.String;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:baseIsIntegral()Z
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.Quant:eltwiseLTE([I)Z
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.inv.unary.string.OneOfString:enabled()Z
daikon.Quantify.QuantFlags:include_index()Ljava.util.EnumSet;
jtb.JavaParser:jj_3R_118()Z
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.Quant:union([I[I)[I
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Type;)V
daikon.inv.unary.stringsequence.EltOneOfString:format_esc()Ljava.lang.String;
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.PptSlice0:arity()I
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.ProglangType:isPointerFileRep()Z
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V | STATEMENT | 25787 | stmt -> ;
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.Literal:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
jtb.JavaParser:jj_3_27()Z
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.inv.unary.sequence.EltOneOf:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.Quant:intersection([I[I)[I
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
jtb.JavaParser:jj_3R_99()Z
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ImportDeclaration;)V
daikon.inv.unary.sequence.EltOneOf:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.TypeDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.MathMDE:gcd(JJ)J
daikon.VarInfo:simplify_quantify(Ljava.util.EnumSet;[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
jtb.syntaxtree.MethodDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalAndExpression;)V
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
jtb.Token:newToken(I)Ljtb.Token;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
utilMDE.MathMDE:modulus([I)[I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclarator;)V
jtb.JavaParser:jj_scan_token(I)Z
daikon.inv.unary.sequence.EltwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
jtb.JavaParser:jj_3R_74()Z
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameter;)V
utilMDE.ArraysMDE:concat([I[I)[I
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.Block:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:EltNonZero(Ldaikon.PptSlice;)V
daikon.VarInfo:get_all_simple_names()Ljava.util.List;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.Quant:eltsLTE([II)Z
utilMDE.ArraysMDE:sum([I)I
daikon.Quant:memberOf(S[S)Z
utilMDE.SimpleLog.LongVal:LongVal(J)V
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
jtb.JavaParser:jj_3R_149()Z
jtb.syntaxtree.FormalParameters:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MultiplicativeExpression;)V
daikon.Quantify.Term:ioa_name()Ljava.lang.String;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
jtb.syntaxtree.VariableDeclaratorId:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.VarComparabilityNone:comparable(Ldaikon.VarComparabilityNone;Ldaikon.VarComparabilityNone;)Z
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.inv.unary.stringsequence.EltOneOfString:sort_rep()V
daikon.VarInfoName.InorderFlattener:nodes()Ljava.util.List;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
jtb.syntaxtree.ClassOrInterfaceBody:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReferenceType;)V
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | RETURN | 98882 | return null
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.Quant:pairwiseLTE([I[I)Z
jtb.JavaParser:jj_3R_108()Z
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
jtb.JavaParser:jj_3_19()Z
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.inv.unary.stringsequence.EltOneOfString:enabled()Z
utilMDE.FuzzyFloat:lt(DD)Z
jtb.syntaxtree.InclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.stringsequence.SingleStringSequence:var()Ldaikon.VarInfo;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:check_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:wouldChange(J)Z
jtb.JavaParser:getToken(I)Ljtb.Token;
daikon.inv.unary.string.OneOfString:runValue(Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:format_daikon()Ljava.lang.String;
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.inv.unary.string.OneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameters;)V
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_2_12(I)Z
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
daikon.Quant:eq(JJ)Z
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
daikon.test.FormatTestCase.SingleOutputTestCase:getDiffString()Ljava.lang.String;
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Ppt:find_var_by_name(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.unary.sequence.EltNonZero:is_pointer()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
jtb.syntaxtree.UnaryExpression:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.ModBitTracker:num_sets()I
jtb.syntaxtree.FormalParameter:FormalParameter(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Type;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.VariableDeclaratorId;)V
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.VarInfoName.Elements:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Expression;)V
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:setDiff([I[I)[I
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.inv.unary.string.OneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
utilMDE.Intern:intern([I)[I
jtb.syntaxtree.NodeChoice:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName; | ASSIGN | 5656 | = null
jtb.JavaParser:jj_3R_109()Z
utilMDE.Intern:numIntArrays()I
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.Quant:eltsEqual([II)Z
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant:prob_is_ge(DD)D
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_120()Z
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
jtb.syntaxtree.TypeArgument:setParent(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:isArray()Z
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;)Z
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.diff.RootNode:RootNode()V
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.Quant:eltwiseGTE([I)Z
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.Quant:eltwiseEqual([I)Z
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.inv.unary.stringsequence.EltOneOfString:EltOneOfString(Ldaikon.PptSlice;)V
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
jtb.syntaxtree.TypeArguments:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:isLiteralConstant()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeSequence;)V
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.Quant:noDups([I)Z
jtb.syntaxtree.Statement:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.string.OneOfString:add_modified(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.NodeListOptional:getParent()Ljtb.syntaxtree.Node;
daikon.simplify.LemmaStack:noticeInt(J)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_simplify()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
jtb.JavaParser:jj_3R_121()Z
utilMDE.FuzzyFloat:FuzzyFloat(D)V
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.inv.Invariant:prob_and(DD)D | CONSTANT | 8716 | 1 -> -1
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryExpression;)V
daikon.inv.unary.sequence.EltOneOf:get_proto()Ldaikon.inv.Invariant;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.Quantify.QuantFlags:adjacent()Ljava.util.EnumSet;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Block;)V
daikon.inv.unary.sequence.EltOneOf:format_simplify()Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.inv.unary.sequence.EltwiseIntLessThan:EltwiseIntLessThan(Ldaikon.PptSlice;)V
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan(Ldaikon.PptSlice;)V
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ModBitTracker:num_vars()I
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
jtb.JavaParser:jj_2_25(I)Z
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_54()Z
jtb.syntaxtree.TypeParameters:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:simplify_name()Ljava.lang.String;
jtb.syntaxtree.ResultType:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.BlockStatement;)V
utilMDE.Intern:intern([J)[J
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
jtb.JavaParser:jj_3_14()Z
utilMDE.ArraysMDE:min_max([I)[I
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_2_15(I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryPrefix;)V
daikon.inv.unary.stringsequence.SingleStringSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.Quantify.IOAQuantification:getClosingExp()Ljava.lang.String;
daikon.Quant:lt(II)Z
utilMDE.FuzzyFloat:gte(DD)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:maxsep_indices()[I
daikon.VarInfo:isIOASet()Z
jtb.JavaParser:jj_3R_57()Z
jtb.syntaxtree.NodeListOptional:elements()Ljava.util.Enumeration;
daikon.Ppt:indexOf(Ljava.lang.String;)I
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
jtb.syntaxtree.NodeOptional:present()Z
daikon.inv.unary.sequence.EltOneOf:format_esc()Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:format_simplify()Ljava.lang.String;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.Quant:gt(II)Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.inv.unary.sequence.EltwiseIntLessThan:enabled()Z
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.ModBitTracker:split(I)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
utilMDE.WeakHasherMap.EntrySet:size()I
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
jtb.syntaxtree.ClassOrInterfaceDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_50()Z
daikon.Quant:eltsGTE([II)Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:fn_identity(I)[I
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.inv.unary.stringsequence.EltOneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_98()Z
daikon.VarInfo:apply_subscript(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3_35()Z
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ProglangType:isPseudoArray()Z
daikon.inv.unary.scalar.NonModulus:enabled()Z
jtb.JavaParser:jj_3R_72()Z
daikon.Quant:lte(II)Z
jtb.JavaParserTokenManager:MoreLexicalActions()V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.unary.sequence.EltNonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
jtb.JavaParser:jj_3_36()Z
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameters;)V
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.Debug:logDetail()Z
daikon.inv.unary.string.SingleString:var()Ldaikon.VarInfo;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_104()Z
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltOneOf:enabled()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.VarInfo:isDerivedSubSequenceOf()Ldaikon.VarInfo;
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.inv.unary.sequence.EltUpperBound:format_esc()Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
jtb.syntaxtree.MethodDeclarator:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3_22()Z
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
jtb.syntaxtree.NullLiteral:accept(Ljtb.visitor.Visitor;)V
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.inv.unary.sequence.EltNonZero:enabled()Z
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
jtb.JavaParser:jj_2_5(I)Z
jtb.syntaxtree.Modifiers:accept(Ljtb.visitor.Visitor;)V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.Debug:logOn()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalOrExpression;)V
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.VarInfoName.Elements:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
jtb.JavaParser:jj_3_30()Z
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_103()Z
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:jj_3_12()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Name;)V
jtb.syntaxtree.NodeChoice:getParent()Ljtb.syntaxtree.Node;
jtb.JavaParser:jj_3R_48()Z
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.syntaxtree.TypeArguments:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
jtb.JavaParser:jj_3R_210()Z
daikon.Quant:lexGT([I[I)Z
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
jtb.JavaParser:jj_3R_162()Z
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.NoDuplicates:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.NoDuplicates:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.inv.unary.stringsequence.EltOneOfString:format_ioa()Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:format_simplify()Ljava.lang.String;
jtb.syntaxtree.CompilationUnit:accept(Ljtb.visitor.Visitor;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.Quantify.IOAQuantification:getQuantifierExp()Ljava.lang.String;
daikon.Quant:pairwiseDivides([I[I)Z
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.PrimaryExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.EltUpperBound:enabled()Z
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat:ne(DD)Z
daikon.inv.unary.sequence.EltUpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_15()Z
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.InstanceOfExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:sorted([I)Z
utilMDE.ArraysMDE:sum([[I)I
daikon.inv.unary.sequence.EltOneOf:format_ioa()Ljava.lang.String;
jtb.JavaParser:jj_3R_136()Z
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.inv.unary.stringsequence.EltOneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.stringsequence.EltOneOfString:subarray_rep()Ljava.lang.String;
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.SequenceAndIndices:hashCode()I
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.inv.unary.string.OneOfString:format_daikon()Ljava.lang.String;
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ClassOrInterfaceBody:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:pairwiseGTE([I[I)Z
jtb.JavaParser:jj_2_17(I)Z
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.Quant:eq(II)Z
daikon.Quant:eltwiseNotEqual([I)Z
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.MultiplicativeExpression:accept(Ljtb.visitor.Visitor;)V
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.Quant:subsetOf([S[S)Z
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArgument;)V
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_126()Z
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:element_range([I)I
jtb.JavaParser:jj_2_35(I)Z
daikon.Quantify.IOAQuantification:getVarIndexedString(I)Ljava.lang.String;
daikon.Quantify:quantify([Ldaikon.VarInfo;)[Ldaikon.Quantify.QuantifyReturn;
jtb.JavaParser:jj_3R_49()Z
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.TypeParameter:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:subarray([III)[I
jtb.JavaParser:jj_3R_107()Z
daikon.Ppt:Ppt()V
jtb.syntaxtree.ImportDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:format_daikon()Ljava.lang.String;
jtb.syntaxtree.ReferenceType:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltsEqualIndex([I)Z
daikon.Quant:subsetOf([F[D)Z
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.MathMDE:mod_positive(JJ)J
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_esc()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:computeProbability()D
jtb.syntaxtree.PackageDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.EltOneOf:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_80()Z
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
jtb.syntaxtree.ExclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.PptSlice0:initInvariantsSeen()V
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
jtb.JavaParser:jj_3R_125()Z
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
jtb.syntaxtree.Name:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.FuzzyFloat:lte(DD)Z
daikon.ModBitTracker:ModBitTracker(I)V
daikon.inv.unary.sequence.EltOneOf:is_boolean()Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
utilMDE.MathMDE:mod_positive(II)I
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_esc()Ljava.lang.String;
utilMDE.WeakHasherMap:size()I
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:jj_3R_102()Z
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_123()Z
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
utilMDE.MathMDE:gcd([I)I
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.inv.Invariant:getConfidence()D
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_ioa()Ljava.lang.String;
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String; | RETURN | 30997 | return null
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AdditiveExpression;)V
daikon.inv.Invariant:logDetail()Z
jtb.syntaxtree.RelationalExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual(Ldaikon.PptSlice;)V
daikon.Quantify.IOAQuantification:getFreeVarName(I)Ljava.lang.String;
jtb.syntaxtree.TypeDeclaration:TypeDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.Quant:eltsLtIndex([I)Z
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.inv.unary.sequence.EltwiseIntLessThan:format_simplify()Ljava.lang.String;
jtb.JavaParser:jj_3R_135()Z
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.ModBitTracker:num_samples()I
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;)V
utilMDE.LimitedSizeIntSet:add(I)V
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat:gt(DD)Z
jtb.JavaParser:jj_3_3()Z
jtb.JavaParser:jj_3_25()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.VarComparabilityNone:indexType(I)Ldaikon.VarComparability;
daikon.inv.unary.stringsequence.EltOneOfString:add_modified([Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltUpperBound:EltUpperBound(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:hasTypeOf()Z
daikon.Quant:isReverse([I[I)Z
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.string.OneOfString:format_ioa()Ljava.lang.String;
jtb.JavaParser:jj_3R_114()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InstanceOfExpression;)V
daikon.ProglangType:baseIsString()Z
jtb.JavaParser:jj_3_10()Z
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
jtb.JavaParser:jj_3R_115()Z
daikon.Quant:eltwiseGT([I)Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.VarInfo:is_direct_non_slice_array()Z
daikon.inv.Invariant:simplify_format_string(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:pairwiseSquare([I[I)Z
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.stringsequence.SingleStringSequence:SingleStringSequence(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_2_13(I)Z
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:fn_is_permutation([I)Z
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.inv.unary.sequence.EltOneOf:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.OrderedPairIterator:setnext2()V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_simplify()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
utilMDE.ArraysMDE:noDuplicates([I)Z
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.PptSlice2:arity()I
daikon.inv.unary.sequence.EltUpperBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.UtilMDE:escapeNonASCII(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaCharStream:ReadByte()C
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
daikon.PptName:isCombinedExitPoint()Z
daikon.VarInfoName:hasNodeOfType(Ljava.lang.Class;)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
utilMDE.Intern:internSubsequence([JII)[J
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_daikon()Ljava.lang.String;
daikon.VarInfoName:ioa_name()Ljava.lang.String;
daikon.VarInfo:isDerived()Z
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V
utilMDE.OrderedPairIterator:setnext1()V
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:concat([I[I)[I
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual()V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.inv.unary.sequence.EltOneOf:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PostfixExpression;)V
jtb.JavaParser:FormalParameter()Ljtb.syntaxtree.FormalParameter;
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_101()Z
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.inv.unary.stringsequence.EltOneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.TypeDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.inv.unary.scalar.Positive:enabled()Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NullLiteral;)V
utilMDE.MathMDE:gcd(II)I
daikon.inv.binary.twoScalar.IntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ProglangType:dimensions()I
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.inv.unary.string.OneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.inv.unary.stringsequence.EltOneOfString:is_type()Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.ValueTuple:isMissing(I)Z
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_daikon()Ljava.lang.String;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
utilMDE.WeakHasherMap:processQueue()V
daikon.inv.unary.sequence.EltwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
jtb.syntaxtree.NodeToken:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaCharStream:getEndLine()I
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.inv.unary.string.SingleString:valid_types([Ldaikon.VarInfo;)Z
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.PptSlice1:num_samples()I
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
jtb.syntaxtree.ConditionalExpression:accept(Ljtb.visitor.Visitor;)V
daikon.tools.jtb.Ast:getPackage(Ljtb.syntaxtree.CompilationUnit;)Ljava.lang.String;
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:sum([[D)D
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.Quant:subsetOf([F[F)Z
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
utilMDE.UtilMDE:escapeNonASCII(C)Ljava.lang.String;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltsGtIndex([I)Z
daikon.inv.unary.sequence.EltwiseIntLessThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
jtb.JavaParser:jj_3_21()Z
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.string.OneOfString:format_simplify()Ljava.lang.String;
daikon.Quant:eltsNotEqual([II)Z
daikon.VarInfoName.InorderFlattener:InorderFlattener(Ldaikon.VarInfoName;)V
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.Quant:eltsGT([II)Z
jtb.syntaxtree.VariableDeclaratorId:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.TypeDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.Quant:eltwiseLT([I)Z
daikon.inv.Invariant:format()Ljava.lang.String;
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.inv.unary.sequence.EltLowerBound:format_simplify()Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:find_bi_linear(JJJJ[D)Z
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.Quantify.FreeVar:name()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_esc()Ljava.lang.String;
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltUpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeDeclaration;)V
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
utilMDE.ArraysMDE:indexOf([II)I
jtb.JavaParser:jj_3_17()Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.test.FormatTestCase:passes()Z
daikon.VarInfo:has_typeof()Z
daikon.Quant:pairwiseLT([I[I)Z
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_58()Z
jtb.syntaxtree.NodeListOptional:present()Z
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;Z)Z
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.VarInfo:new_ppt()V
jtb.JavaCharStream:BeginToken()C
jtb.JavaParser:jj_2_1(I)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeBound;)V
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:enabled()Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
daikon.ValueTuple:isMissingNonsensical(I)Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Elements:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:eq(FF)Z
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.Quant:memberOf(I[I)Z
jtb.JavaParser:jj_3R_56()Z
daikon.inv.Invariant:logOn()Z
daikon.inv.ValueSet:ValueSet(I)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.EqualityExpression;)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_13()Z
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
jtb.syntaxtree.ClassOrInterfaceType:accept(Ljtb.visitor.Visitor;)V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.CompilationUnit;)V
jtb.JavaParser:jj_3_18()Z
daikon.VarInfoName:hashCode()I
jtb.JavaCharStream:backup(I)V
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_77()Z
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
daikon.inv.unary.sequence.NoDuplicates:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;)V
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.test.FormatTestCase:getDiffString()Ljava.lang.String;
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:subsetOf([I[I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBody;)V
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:format_simplify()Ljava.lang.String;
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:relate_var()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE:negate(I)I
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
utilMDE.ArraysMDE:max([I)I
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AndExpression;)V
daikon.VarInfo:esc_name()Ljava.lang.String;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.TypeArgument:accept(Ljtb.visitor.Visitor;)V
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.FuzzyFloat:eq(DD)Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ShiftExpression;)V
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eltsLteIndex([I)Z
daikon.inv.unary.sequence.NoDuplicates:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
jtb.JavaParser:jj_3R_81()Z
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.Quantify.IOAQuantification:IOAQuantification([Ldaikon.VarInfo;)V
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
daikon.inv.unary.sequence.EltOneOf:subarray_rep()Ljava.lang.String;
jtb.JavaParser:jj_3R_133()Z
jtb.syntaxtree.TypeArguments:TypeArguments(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeArgument;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.Quant:subsetOf([J[J)Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
utilMDE.ArraysMDE:fn_is_total([I)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
jtb.syntaxtree.NodeOptional:accept(Ljtb.visitor.Visitor;)V
daikon.inv.Invariant:justified()Z
daikon.inv.unary.sequence.NoDuplicates:NoDuplicates(Ldaikon.PptSlice;)V
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.ConditionalOrExpression:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Statement;)V
daikon.Quantify.IOAQuantification:getMembershipRestriction(I)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.string.OneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
jtb.JavaParser:jj_2_4(I)Z
jtb.JavaParser:jj_ntk()I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.VarInfo:isPointer()Z
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3_16()Z
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.Quantify.IOAQuantification:getFreeVar(I)Ldaikon.Quantify.Term;
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.sequence.NoDuplicates:format_ioa()Ljava.lang.String;
jtb.JavaParser:jj_3R_88()Z
utilMDE.UtilMDE:lineNumberFileReader(Ljava.io.File;)Ljava.io.LineNumberReader;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Literal;)V
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
jtb.JavaParser:jj_3R_137()Z
daikon.VarInfo:apply_subscript(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.ShiftExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.inv.unary.string.OneOfString:sort_rep()V
daikon.inv.unary.string.SingleString:SingleString(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:add_modified(JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_110()Z
daikon.Quant:memberOf(J[J)Z
utilMDE.UtilMDE.NullableStringComparator:compare(Ljava.lang.String;Ljava.lang.String;)I
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments;
daikon.ProglangType:baseIsScalar()Z
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.EltNonZero:get_proto()Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ProglangType:isIntegral()Z
daikon.inv.unary.string.OneOfString:format_esc()Ljava.lang.String;
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.inv.unary.sequence.NoDuplicates:enabled()Z
jtb.JavaParser:jj_3R_117()Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalExpression;)V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.NoDuplicates:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.inv.unary.string.OneOfString:is_type()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.Quant:sameLength([I[I)Z
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.EltNonZero:format_esc()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.MathMDE:pow(II)I
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
jtb.JavaParser:jj_3R_89()Z
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.string.OneOfString:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_simplify(Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
jtb.JavaParser:VariableDeclaratorId()Ljtb.syntaxtree.VariableDeclaratorId;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:maxsep_point([J[J)[I
utilMDE.MathMDE:missing_numbers([I)[I
daikon.inv.OutputFormat:toString()Ljava.lang.String;
jtb.JavaParser:jj_3R_161()Z
jtb.JavaParser:jj_2_16(I)Z
daikon.Quant:memberOf(F[F)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
1507 2 353 2 599 2 511 2 293 4 38 2 575 2 560 2 1069 2 
1158 6 504 6 694 2 356 2 302 2 1123 2 1107 6 40 2 1535 2 852 2 14 2 
1507 2 434 2 316 2 1290 2 250 6 605 4 353 2 963 6 507 2 325 6 222 6 1008 4 615 2 
1260 2 939 8 343 16 980 8 213 4 1209 10 1461 26 738 10 1168 28 1263 2 500 12 414 4 653 6 353 6 1502 2 1270 16 388 2 327 16 1400 4 1145 2 1477 8 1507 6 753 6 228 2 956 8 188 10 164 2 832 10 579 10 974 4 
686 6 587 4 
141 2 
1260 2 169 2 1115 2 2 2 1170 2 353 4 177 2 726 2 71 2 1378 2 1507 4 805 2 490 2 806 2 261 2 1510 2 575 2 1284 4 967 2 1229 2 537 2 1230 2 314 4 1435 2 854 2 465 2 136 2 321 2 236 4 1531 2 923 2 924 2 240 2 988 2 549 2 864 2 424 2 756 4 1104 2 1062 2 1411 2 1412 2 107 2 884 2 
343 32 980 6 1209 15 738 15 1461 47 217 4 1168 52 500 22 1121 3 353 4 653 4 415 4 892 4 1502 2 1270 32 921 2 327 32 1400 2 1477 19 1507 4 1081 2 997 6 1200 4 753 4 100 8 603 2 712 6 1408 2 1328 2 693 6 1303 4 557 6 188 15 1459 4 1010 5 832 15 1037 6 579 6 1110 4 
490 2 1211 2 193 2 
1071 2 762 2 233 2 1386 22 113 2 710 2 1411 2 768 2 371 2 239 2 1013 2 594 2 817 2 911 10 
343 2 1209 2 738 2 1461 4 1168 6 439 2 500 2 653 2 784 2 1270 2 327 2 659 2 1400 2 72 2 1477 2 300 2 820 2 1033 2 790 2 456 2 188 2 832 2 579 4 
343 8 213 2 1209 4 738 4 1461 12 1168 16 500 4 712 6 557 6 1303 4 1270 8 327 8 188 4 832 4 1144 2 393 2 1110 4 
313 4 1040 2 1211 2 1439 4 1190 10 1520 4 889 2 519 2 1376 2 295 2 1522 62 1022 14 547 4 1343 4 387 4 726 2 1074 4 660 2 1532 2 1078 2 225 4 1175 4 990 4 490 8 552 2 527 2 1405 2 204 2 756 4 156 2 1543 2 967 4 1226 2 401 4 829 2 232 2 1333 2 193 6 1413 10 536 2 
914 2 141 2 551 2 639 2 849 2 534 2 1035 2 268 2 286 2 23 2 
110 2 836 1 486 2 112 2 1374 2 1265 2 7 2 565 2 681 3 390 2 1174 1 569 3 1181 2 845 2 691 3 1283 2 1085 4 400 3 308 3 1469 2 496 8 130 4 778 2 976 6 581 2 586 8 860 2 1295 2 140 2 38 2 862 4 1198 2 422 1 596 2 241 1 143 2 600 2 1002 2 151 2 1003 1 243 1 428 12 1005 2 50 2 1203 3 157 2 52 1 607 2 1486 3 606 2 1205 1 508 1 1304 2 431 12 510 2 794 3 56 2 880 1 1014 2 59 2 1108 2 1492 16 1493 2 886 2 342 2 1496 16 435 4 344 2 1019 2 796 1 887 2 249 2 349 2 1118 2 518 4 442 2 351 5 172 2 353 32 1122 2 1423 2 893 2 1503 16 801 6 355 2 1217 2 180 1 1124 24 358 2 1029 2 1507 34 897 2 729 2 898 1 452 2 1221 2 640 2 79 2 363 3 80 2 733 4 1326 2 532 1 1514 32 644 2 1227 2 1330 2 811 2 88 2 1433 2 1135 3 1335 2 1338 4 464 2 91 8 916 1 467 32 917 2 1441 6 1443 6 1236 2 656 2 919 1 1138 3 657 2 1529 2 1049 1 1143 2 376 2 1350 2 750 2 1537 2 928 2 1248 2 1451 2 1355 4 1060 2 671 2 1455 3 830 2 283 2 285 2 673 16 1065 24 1254 2 1366 2 1161 2 1162 2 1368 2 
1507 2 665 2 
1507 2 731 2 715 2 
406 2 
0 94 764 4 384 2 3 2 4 2 386 4 8 18 1171 4 11 52 389 12 12 2 1173 2 1177 2 1178 2 15 4 395 2 771 4 1180 2 18 4 772 34 1183 2 775 50 398 2 19 2 402 30 21 2 1188 12 407 30 25 2 27 2 411 2 1189 2 28 4 416 2 32 2 421 2 786 2 39 2 423 2 43 4 426 28 427 6 46 2 1201 2 48 2 791 2 792 2 55 2 61 4 62 2 437 94 438 2 1212 96 440 4 69 4 443 2 798 4 1214 94 70 2 1216 36 447 4 448 2 803 2 75 2 76 2 77 4 454 4 1222 2 78 4 1223 2 81 4 1224 4 808 6 85 2 810 2 1228 2 459 2 87 2 462 2 814 2 92 2 816 4 468 4 1241 2 98 4 1244 2 821 2 473 18 101 2 822 2 474 56 823 4 102 8 478 22 828 2 1250 4 1251 2 1252 4 1255 46 833 2 106 2 482 4 483 6 1266 2 487 2 1269 2 1271 8 838 2 118 2 1273 2 121 4 123 8 1282 2 127 18 847 2 848 2 494 2 850 2 129 2 1285 2 495 2 131 2 132 50 134 62 497 2 135 2 498 30 856 2 857 4 1291 4 1292 86 861 2 1296 94 1297 4 1298 2 502 2 867 4 1300 4 868 2 142 2 869 2 147 2 871 2 150 2 506 2 873 16 874 4 875 2 158 2 876 4 877 2 1305 2 878 2 879 6 512 2 882 2 514 2 1308 4 167 2 1312 2 520 2 891 4 174 4 176 2 179 2 895 2 522 2 523 2 184 44 525 94 528 2 529 358 1324 4 901 2 185 2 1327 2 531 2 906 2 535 2 189 2 1332 22 1331 2 191 2 192 2 1334 16 538 12 913 6 539 6 1337 2 1336 2 1339 94 197 2 542 2 920 6 922 2 1346 2 1345 2 1348 2 926 2 1351 2 1353 2 1354 2 203 6 555 6 556 2 930 20 206 2 931 2 932 86 208 2 935 10 1362 2 558 2 1365 4 561 2 938 2 1369 96 1372 8 1371 48 215 2 216 14 941 50 219 2 943 2 946 2 944 2 221 2 1381 2 570 2 571 12 1383 2 954 2 1384 6 962 6 1388 2 576 2 230 18 965 2 231 94 968 2 971 4 973 6 975 2 977 2 978 42 580 74 583 2 1395 2 589 2 238 14 983 12 591 2 595 2 991 44 1403 4 995 2 1404 4 242 2 998 2 1000 2 1001 2 602 2 1004 2 1006 2 1007 2 609 4 1009 4 245 2 246 2 616 2 617 2 619 2 1020 4 620 8 1021 16 1025 2 1027 4 1420 50 624 2 623 2 626 4 255 2 630 2 631 2 633 90 632 4 257 16 256 2 1426 2 1427 16 259 2 637 2 638 4 1428 2 642 2 643 94 266 2 265 246 267 2 1036 2 1038 18 1431 2 1039 2 1436 2 1437 44 272 2 1438 94 1442 2 276 86 654 54 658 2 278 2 1051 2 1447 4 279 4 1053 2 666 2 667 18 1452 104 669 2 1057 2 1453 2 282 2 1456 2 1457 8 1064 4 672 4 284 12 1068 2 288 2 289 2 1462 2 290 2 292 2 291 2 294 2 1464 2 680 2 1072 2 296 2 1073 2 684 4 299 56 301 4 1082 2 689 94 1087 2 309 2 1088 2 696 2 310 2 697 4 311 2 1090 8 312 2 699 56 1471 8 1092 2 702 2 1472 2 320 74 704 2 322 4 324 2 1474 48 706 2 1475 2 328 18 329 56 330 14 1478 2 331 42 709 18 1102 12 711 2 714 62 1105 62 337 4 1488 2 1491 246 1495 4 341 4 717 4 718 2 1499 2 347 2 1114 2 1116 2 354 2 724 2 1505 2 728 2 359 4 361 2 1128 4 730 2 1509 18 362 2 1512 2 1130 246 1131 12 1133 94 1134 2 365 2 739 2 1519 2 742 42 743 4 1137 4 1525 2 744 4 1530 2 1140 2 746 6 747 2 1536 2 377 2 749 2 752 2 1540 2 754 2 755 22 757 2 758 4 759 2 1545 4 1546 4 381 2 
1524 2 419 1 949 2 374 2 
148 2 949 2 
503 2 1320 2 490 2 1323 2 949 2 974 2 211 2 
1323 2 949 2 380 2 
1323 2 1361 2 949 2 
306 2 1524 2 1084 2 
1323 2 949 2 
306 2 661 2 
1246 2 949 2 
306 2 1524 2 375 2 
1524 2 1289 2 86 2 
1524 2 588 2 783 2 
1524 2 26 2 815 2 
1524 2 767 2 945 2 
306 2 692 2 
949 2 950 2 
1253 2 86 2 
783 2 469 2 
1093 2 815 2 
767 2 685 2 
306 2 985 2 
767 2 120 2 
1237 2 815 2 
1392 2 783 2 
86 2 1058 2 
306 2 1524 2 95 2 375 2 
306 2 1524 2 95 2 187 2 375 2 
306 2 1524 2 904 2 
306 2 1524 2 1098 2 
1309 2 1169 2 491 2 1286 2 
550 2 1319 2 450 2 271 2 1231 2 146 2 1386 6 196 2 350 2 959 2 1406 4 622 2 35 2 1489 2 986 2 57 4 108 2 1547 2 
1524 2 678 2 
540 2 1164 2 490 2 211 2 
540 2 1164 2 1320 2 490 2 481 2 211 2 
490 2 1323 2 645 2 949 2 974 2 211 2 
1115 2 701 2 
490 2 54 2 974 2 211 2 
1249 2 815 2 
767 2 799 2 
178 2 86 2 
783 2 548 2 
767 2 458 2 783 2 
767 2 783 2 152 2 
767 2 783 2 883 2 
767 2 10 2 783 2 
366 2 1398 2 1242 6 490 2 145 2 17 2 99 6 211 2 
306 2 890 2 
1304 2 
1070 2 110 2 486 2 765 4 6 2 1181 2 1283 1 229 2 1085 2 130 4 778 2 976 6 581 2 586 2 860 2 1295 2 1196 2 38 2 708 2 1002 2 428 8 157 2 606 2 431 8 793 2 56 2 1014 2 880 4 339 2 435 4 886 2 1415 2 1111 2 249 1 887 2 168 2 349 2 518 2 353 26 352 2 1026 4 1122 4 253 2 1503 6 801 2 893 2 180 2 358 2 1029 2 1507 26 897 2 1221 2 733 2 1326 2 80 2 1514 4 1227 2 1338 4 464 2 649 2 916 2 467 6 917 2 1441 2 275 2 1443 5 657 2 928 2 1537 2 1355 4 671 2 1060 2 1360 2 209 2 285 6 1254 2 1366 2 1368 2 
1070 2 110 2 486 2 765 4 6 2 1277 2 1181 2 1283 2 229 2 1085 2 130 4 778 2 976 6 581 2 586 2 860 2 1295 2 38 2 708 2 1002 2 428 8 1483 2 157 2 606 2 431 8 793 2 56 2 1014 2 880 2 339 2 435 4 886 2 1415 2 720 2 1111 2 887 2 249 2 168 2 349 2 518 2 353 26 352 2 1026 4 1122 4 1503 6 801 2 893 2 180 2 358 2 1029 2 1507 26 897 2 1221 2 733 2 1326 2 80 2 1514 4 1227 2 1338 4 464 2 649 2 916 2 467 6 917 2 1441 2 1443 6 657 2 1529 2 928 2 1537 2 1355 4 671 2 1060 2 1360 2 209 2 285 6 1254 2 1366 2 1368 2 
201 2 
336 2 224 2 
45 2 992 2 1148 2 1150 2 453 4 1094 2 690 2 49 2 1234 2 1511 2 1158 2 694 2 800 2 682 4 1160 2 881 2 1107 2 40 2 
435 2 1208 2 346 2 486 2 1 2 1262 2 1120 2 353 6 800 2 682 4 1315 2 1123 2 951 2 357 6 1507 12 16 2 1322 2 1221 2 453 4 690 2 1511 2 694 4 457 2 405 2 194 2 409 2 976 4 581 2 582 2 1094 2 90 4 1095 2 1234 2 651 2 917 2 546 4 1294 4 277 2 1099 2 1141 2 40 4 1535 2 45 2 992 4 1148 2 504 6 1150 2 1152 4 334 2 429 4 49 2 1355 2 1158 4 671 2 606 2 162 2 1160 2 1014 2 881 2 1107 6 
435 2 1208 2 346 2 486 2 1 2 1262 2 1120 2 353 6 800 2 682 4 1315 2 1123 2 951 2 357 6 1507 12 16 2 1322 2 1221 2 453 4 690 2 1511 2 694 4 457 2 405 2 194 2 852 2 409 2 976 4 581 2 582 2 1094 2 90 4 1095 2 1234 2 651 2 917 2 546 4 1294 4 277 2 1099 2 1141 2 40 4 45 2 992 4 1148 2 504 6 1150 2 1152 4 334 2 429 4 49 2 1355 2 1158 6 671 2 606 2 162 2 1160 2 1014 2 881 2 1107 4 
435 2 1208 2 346 2 486 2 1 2 1262 2 1120 2 353 6 800 2 682 4 1315 2 1123 2 951 2 357 6 14 2 1507 12 16 2 1322 2 1221 2 453 4 690 2 1511 2 694 4 457 2 405 2 194 2 409 2 976 4 581 2 582 2 1094 2 90 4 1095 2 1234 2 651 2 917 2 546 4 1294 4 277 2 1099 2 1141 2 40 4 45 2 992 4 1148 2 504 6 1150 2 1152 4 334 2 429 8 49 2 1355 2 1158 6 671 2 606 2 162 2 1160 2 1014 2 881 2 1107 6 
435 2 1208 2 346 2 486 2 1 2 1262 2 1120 2 353 6 800 2 682 4 1315 2 1123 2 951 2 357 10 14 2 1507 12 16 2 1322 2 1221 2 453 4 690 2 1511 2 694 4 457 2 405 2 194 2 852 2 409 2 976 4 581 2 582 2 1094 2 90 4 1095 2 1234 2 651 2 917 2 546 8 1294 4 277 2 1099 2 1141 2 40 4 45 2 992 4 1148 2 504 8 1150 2 1152 4 334 2 429 8 49 2 1355 2 1158 8 671 2 606 2 162 2 1160 2 1014 2 881 2 1107 6 
435 2 1208 2 346 2 486 2 1 2 1262 2 1120 2 353 6 800 2 682 4 1315 2 1123 2 951 2 357 10 14 2 1507 12 16 2 1322 2 1221 2 453 4 690 2 1511 2 694 4 457 2 405 2 194 2 409 2 976 4 581 2 582 2 1094 2 90 4 1095 2 1234 2 651 2 917 2 546 8 1294 4 277 2 1099 2 1141 2 40 4 45 2 992 4 1148 2 504 6 1150 2 1152 4 334 2 429 8 49 2 1355 2 1158 6 671 2 606 2 162 2 1160 2 1014 2 881 2 1107 6 
109 2 486 2 383 2 765 4 1 2 218 2 1262 2 115 4 682 4 566 2 951 2 690 2 958 2 1283 2 1085 2 694 4 1389 2 405 2 130 4 406 2 852 4 778 2 409 2 976 6 582 2 581 2 1094 2 584 2 586 2 1095 2 860 4 1294 4 1295 2 1099 2 38 2 863 2 40 4 45 2 992 4 994 2 504 12 870 2 334 2 428 4 429 2 49 2 1484 2 157 2 160 2 606 2 1487 2 162 2 431 4 715 2 56 2 1014 2 58 2 881 2 339 2 1107 4 435 4 1208 2 887 2 249 2 168 2 518 2 1120 2 352 2 353 20 1215 4 800 2 801 2 1503 6 1315 2 1123 4 358 2 1029 2 1507 32 1219 2 1220 2 1322 2 1221 2 453 4 731 2 1325 2 1326 2 733 2 1511 2 1430 2 1225 2 1514 2 1227 2 457 2 1329 2 1515 2 909 2 194 2 1338 4 1042 2 464 2 90 8 467 8 1234 2 1441 2 651 2 917 2 1526 2 1443 6 277 2 657 2 1146 2 1148 2 1150 2 928 2 665 2 751 2 1152 6 1355 4 827 2 1158 8 671 2 1358 2 934 2 285 6 209 2 1160 2 1254 2 1366 2 1368 2 
109 2 486 2 383 2 765 4 1 2 218 2 1262 2 115 4 682 4 566 2 951 2 14 4 690 2 958 2 1283 2 1085 4 694 4 1389 2 405 2 130 4 406 2 778 2 409 2 976 6 582 2 581 2 1094 2 584 2 586 2 1095 2 860 4 1294 4 1295 2 1099 2 38 2 863 2 40 4 45 2 992 4 994 2 504 12 870 2 334 2 428 6 429 6 49 2 1484 2 157 2 160 2 606 2 1487 2 162 2 431 6 715 2 56 2 1014 2 58 2 881 2 339 2 1107 8 435 4 1208 2 887 2 249 2 168 2 518 4 1120 2 352 2 353 20 1215 4 800 2 801 2 1503 6 1315 2 1123 4 358 2 1029 2 1507 32 1219 2 1220 2 1322 2 1221 2 453 4 731 2 1325 2 1326 2 733 4 1511 2 1430 2 1225 2 1514 2 1227 2 457 2 1329 2 1515 2 909 2 194 2 1338 4 1042 2 464 2 90 8 467 8 1234 2 1441 2 651 2 917 2 1526 2 1443 6 277 2 657 2 1146 2 1148 2 1150 2 928 2 665 2 751 2 1152 6 1355 4 827 2 1158 8 671 2 1358 2 934 2 285 6 209 2 1160 2 1254 2 1366 2 1368 2 
109 2 486 2 383 2 765 4 1 2 218 2 1262 2 115 4 682 4 566 2 951 2 14 4 690 2 958 2 1283 2 1085 4 694 4 1389 2 405 2 130 4 406 2 778 2 409 2 976 6 582 2 581 2 1094 2 584 2 586 2 1095 2 860 4 1294 4 1295 2 1099 2 38 2 863 2 40 4 45 2 992 4 994 2 504 12 870 2 334 2 428 6 429 6 49 2 1484 2 157 2 160 2 606 2 1487 2 162 2 431 6 715 2 56 2 1014 2 58 2 881 2 339 2 1107 8 435 4 1208 2 887 2 249 2 168 2 518 4 1120 2 352 2 353 20 1215 4 800 2 801 2 1503 6 1315 2 1123 4 357 4 358 2 1029 2 1507 32 1219 2 1220 2 1322 2 1221 2 453 4 731 2 1325 2 1326 2 733 4 1511 2 1430 2 1225 2 1514 2 1227 2 457 2 1329 2 1515 2 909 2 194 2 1338 4 1042 2 464 2 90 8 467 8 1234 2 1441 2 651 2 917 2 546 4 1526 2 1443 6 277 2 657 2 1146 2 1148 2 1150 2 928 2 665 2 751 2 1152 6 1355 4 827 2 1158 8 671 2 1358 2 934 2 285 6 209 2 1160 2 1254 2 1366 2 1368 2 
212 2 109 2 486 2 383 2 765 6 1 2 218 2 1262 2 115 4 682 4 683 2 566 2 951 2 14 4 690 2 958 2 1283 2 1085 4 694 4 1389 2 405 2 130 4 406 2 852 2 778 2 409 2 976 6 581 2 582 2 1094 2 584 2 586 2 1095 2 860 2 1294 4 1295 2 1099 2 38 2 863 2 40 4 45 2 992 4 994 2 504 16 870 2 334 2 428 6 429 6 49 2 1484 2 51 2 157 2 160 2 606 2 162 2 431 6 715 2 56 2 165 2 1014 2 58 2 881 2 339 2 1107 10 435 4 1208 2 887 2 249 2 168 2 518 4 1120 2 352 2 353 18 173 2 1215 4 800 2 801 4 1503 8 1315 2 1123 4 357 4 358 2 1029 2 1507 30 1219 2 1220 2 1322 2 1221 2 453 4 731 2 1326 2 733 4 1511 2 1430 2 1225 2 1514 4 1227 2 457 2 1329 2 1515 2 909 2 194 2 1338 4 1042 2 464 2 90 8 467 12 1234 2 1441 4 651 2 917 2 546 4 1526 2 1443 6 277 2 657 2 1146 2 1535 2 1148 2 1150 2 928 2 665 2 751 2 1152 6 929 2 1355 4 827 2 1158 10 671 2 1358 2 934 2 285 8 209 2 1160 2 1254 2 1366 2 1368 2 
1208 2 582 2 1094 2 90 2 1 2 1095 2 1262 2 1234 2 1120 2 651 2 546 4 1294 2 277 2 800 2 682 2 1315 2 1099 2 1123 2 357 4 40 4 14 2 1507 4 45 2 504 4 1150 2 453 2 1152 2 690 2 429 6 1158 6 694 4 457 2 405 2 1160 2 1107 6 
1370 2 486 2 765 4 1 2 1262 2 7 2 682 2 390 2 14 2 690 2 1283 2 694 4 405 2 130 4 778 2 976 6 581 2 582 2 1094 2 1095 2 860 4 1294 2 1295 2 1099 2 38 2 40 4 45 2 504 4 1302 3 429 6 157 2 606 2 1487 2 1304 2 56 2 1014 2 1107 6 339 2 435 4 1208 2 887 2 249 2 1213 2 1120 2 353 24 352 2 800 2 1503 6 801 3 1315 2 1123 2 357 2 358 2 1029 2 1507 28 1221 2 453 2 1325 2 1326 2 1514 3 457 2 1227 2 1330 2 194 2 813 2 1338 4 464 2 90 2 467 8 1234 2 917 2 1441 3 651 2 1443 6 277 2 657 2 373 2 663 2 928 2 1150 2 1152 2 1355 4 1158 6 671 2 209 2 285 6 1160 2 1366 2 1368 2 
435 2 1208 2 346 2 486 2 1 2 1262 2 1120 2 353 6 800 2 682 4 1315 2 1123 2 951 2 357 10 14 2 1507 12 16 2 1322 2 1221 2 453 4 690 2 1511 2 694 4 457 2 405 2 194 2 409 2 976 4 581 2 582 2 1094 2 90 4 1095 2 1234 2 651 2 917 2 546 8 1294 4 277 2 1099 2 1141 2 40 4 45 2 992 4 1148 2 504 6 1150 2 1152 4 334 2 429 8 49 2 1355 2 1158 6 671 2 606 2 162 2 1160 2 1014 2 881 2 1107 6 
435 2 1208 2 346 2 486 2 1 2 1262 2 1120 2 353 6 800 2 682 4 1315 2 1123 2 951 2 357 10 14 2 1507 12 16 2 1322 2 1221 2 453 4 690 2 1511 2 694 4 405 2 194 2 409 2 976 4 461 4 581 2 582 2 1094 2 90 4 1095 2 274 2 1234 2 651 2 917 2 546 8 1294 4 277 2 1099 2 40 4 1535 2 45 2 992 4 1148 2 504 8 1150 2 1152 4 1301 2 334 2 429 8 49 2 1355 2 1158 6 671 2 606 2 162 2 1160 2 1014 2 881 2 1107 8 
479 2 1 2 1262 2 
479 2 1 2 1262 2 
1163 2 214 2 486 2 1 6 1262 4 1375 2 115 2 682 2 951 2 14 4 690 2 958 2 1281 2 1283 2 1085 4 694 4 22 2 130 4 778 2 852 4 976 6 581 2 855 2 413 2 1095 2 860 4 1294 2 1295 2 38 2 40 4 45 4 992 4 504 16 334 2 428 4 429 6 49 2 789 2 157 2 606 2 162 2 431 4 432 2 793 4 56 2 880 2 1014 2 339 6 1107 12 435 4 346 2 887 2 249 2 1310 2 518 4 1120 2 353 16 352 2 1421 2 800 2 1503 2 1123 4 357 6 358 2 1507 24 1219 2 1322 4 1221 2 453 2 1325 2 733 4 1326 2 1514 2 1227 2 736 4 1338 4 1042 2 1232 4 464 2 1342 2 90 4 368 2 467 2 917 2 546 4 1443 6 657 2 1139 2 1050 2 1240 2 1535 4 1148 2 928 2 1152 4 1541 2 1355 4 671 2 1158 12 479 2 934 2 209 2 285 2 674 2 1254 4 1366 2 1368 2 
834 2 1507 4 676 2 486 2 553 2 1042 2 855 2 1450 2 1281 2 1325 2 860 2 1466 2 353 2 336 2 1421 2 432 2 881 2 
486 2 1 6 1262 4 115 2 682 2 1272 2 951 4 952 2 489 2 14 4 16 2 690 2 958 2 1281 2 1283 2 1085 4 694 4 22 2 130 4 778 2 852 4 976 6 581 2 855 2 1095 2 860 2 1294 2 1295 2 38 2 40 4 45 4 992 4 504 16 334 2 428 4 429 6 49 2 789 4 157 2 606 2 162 2 431 4 432 2 793 4 56 2 1014 2 339 6 1107 12 435 4 346 2 887 2 249 2 1310 2 518 4 1120 2 353 16 352 2 800 2 1503 2 1123 4 357 6 358 2 1507 24 1219 2 1322 4 1221 2 453 2 733 4 1326 2 1514 4 1227 2 736 4 646 2 1338 4 1042 2 1232 4 464 2 1342 2 90 4 368 2 467 2 369 2 917 2 546 4 1443 6 657 2 1139 2 1050 2 1240 2 1535 4 1148 2 928 2 1152 4 1541 2 1355 4 671 2 1158 12 479 2 934 2 209 2 285 2 674 2 1254 4 1366 2 1368 2 
486 2 1 6 1262 4 115 2 682 2 951 4 14 4 16 2 1385 2 955 2 688 2 690 2 958 2 1281 2 1283 2 1085 4 694 4 1468 2 22 2 130 4 778 2 852 4 976 6 581 2 855 2 1095 2 860 4 1294 2 1295 2 38 2 40 4 45 4 992 4 504 16 334 2 428 4 429 6 49 2 789 2 157 2 606 2 162 2 431 4 1012 2 432 2 793 4 56 2 880 1 1014 2 339 6 1107 12 435 4 346 2 887 2 249 2 1310 2 518 4 1120 2 353 16 352 2 1421 2 800 2 1503 2 1123 4 357 6 358 2 1507 24 1219 2 1322 4 1221 2 453 2 1325 2 733 4 1326 2 1514 2 1227 2 736 4 1338 4 1042 2 1232 4 464 2 1342 2 90 4 368 2 467 2 917 2 546 4 1443 6 657 2 1139 2 1050 2 1240 2 1535 4 1148 2 928 2 1152 4 1541 2 1355 4 671 2 1158 12 479 2 934 2 209 2 285 2 674 2 1254 4 1366 2 1368 2 
761 32 763 6 1165 2 1166 14 1167 1 765 12 766 18 1168 23 6 2 1172 2 13 4 1175 2 769 2 1176 2 1179 1 394 2 770 4 773 2 396 32 1182 4 397 2 1185 2 774 2 399 32 400 2 776 2 401 2 20 20 403 4 1187 2 777 102 24 10 778 2 779 46 410 2 780 2 781 29 412 24 1191 2 1192 2 1194 20 1193 4 30 2 29 72 417 2 1197 2 420 18 34 2 36 32 785 2 38 8 1198 2 41 32 42 32 1199 6 44 2 1200 4 787 4 47 4 428 94 430 10 51 2 50 2 1203 2 1204 2 53 2 431 97 56 2 795 14 1206 32 59 2 60 3 433 10 435 6 436 32 1209 6 797 32 1210 2 63 2 64 16 66 2 67 2 1213 2 65 2 441 2 68 2 442 2 801 46 1217 2 446 2 1218 2 804 2 74 22 807 2 1221 2 79 2 455 2 809 16 82 20 83 14 1227 2 84 2 811 2 812 4 460 2 813 2 463 2 464 2 91 12 466 14 467 76 1233 16 93 2 94 2 1238 2 96 2 1239 2 818 2 470 2 1245 2 1247 20 471 2 472 4 100 8 475 2 825 4 826 24 477 32 827 2 831 32 105 6 832 6 1257 2 1256 2 1254 10 1258 2 484 2 1259 2 111 2 486 2 1261 46 112 2 837 2 1264 58 1267 32 1268 2 1270 12 116 2 117 32 119 2 839 4 840 4 1275 32 1274 2 1276 2 122 2 841 2 124 4 1280 2 842 4 844 2 492 16 126 64 125 4 1283 130 493 2 128 18 496 12 130 168 851 20 853 2 1287 2 133 2 1288 18 499 2 858 1 500 10 859 1 860 4 138 8 501 2 1295 2 139 18 1299 2 862 4 865 2 866 2 143 2 144 20 870 4 872 4 505 2 151 2 1302 2 154 2 157 2 159 32 1303 4 161 32 509 5 880 1 165 2 1306 2 513 2 885 14 1307 2 166 1 887 2 168 46 888 2 515 3 517 18 516 4 171 32 170 8 1314 2 172 2 173 2 175 2 521 1 894 2 1316 2 180 2 1317 2 181 2 182 2 896 2 183 32 526 4 524 2 1321 2 899 2 900 2 903 16 905 2 530 2 1326 8 1328 2 907 2 908 84 533 1 188 6 190 232 909 2 910 2 912 2 195 2 1338 200 915 2 1341 42 916 2 543 74 917 2 544 3 545 18 198 3 199 2 1344 2 1347 4 925 2 1349 64 927 2 1352 2 928 2 202 2 554 4 929 4 1356 2 205 32 1355 6 557 6 933 32 1359 2 1360 2 937 4 936 2 1364 2 210 2 1363 2 1366 36 1367 2 559 58 1368 2 212 2 562 14 563 4 940 2 1373 2 1374 2 942 4 564 44 947 3 220 32 565 2 223 32 225 2 1379 2 567 14 953 2 569 2 568 20 1382 26 572 2 573 14 227 44 957 2 1387 4 960 10 229 2 966 64 969 12 1390 32 578 32 970 18 972 2 1391 2 976 8 1393 2 980 6 581 2 234 2 585 14 981 44 1394 2 586 52 982 2 235 84 1396 2 1397 2 590 2 984 2 592 32 1399 18 593 2 989 6 596 2 597 20 993 2 1401 14 1402 2 598 10 996 2 600 2 601 2 1005 2 1407 2 1408 4 607 2 1409 18 606 2 608 2 610 2 611 4 612 2 613 18 1010 6 244 18 614 2 1014 2 1015 8 1414 2 1017 4 1018 6 1415 2 1019 2 618 2 249 130 1416 64 1417 14 252 2 621 2 1024 3 254 8 1419 2 1422 3 625 2 627 2 628 2 629 8 1425 2 1029 2 634 2 635 11 258 4 1030 2 260 12 1031 32 1032 2 640 2 1429 2 641 2 1430 2 263 2 264 2 1034 2 644 2 1432 16 1434 2 269 4 270 2 1041 24 647 1 1043 32 648 2 649 48 273 3 1044 2 1441 16 652 2 655 2 1443 460 656 2 657 4 1444 16 1445 2 1049 2 1052 4 662 4 663 2 1448 2 664 2 1055 2 1054 2 1449 2 1056 24 668 10 280 2 281 33 671 2 1455 2 1063 2 1458 16 283 2 285 14 1065 12 673 48 1067 32 1460 12 1070 2 1461 18 1463 2 679 2 1074 2 681 2 1075 4 683 2 1076 2 1077 3 298 2 687 44 303 2 1083 18 304 2 691 2 307 2 1467 2 1086 2 695 3 1089 4 1091 2 315 2 1470 2 317 2 318 2 703 2 1096 2 1473 2 1097 4 323 22 707 2 705 18 327 12 1476 16 1477 6 1480 10 332 18 708 2 1481 3 1101 3 1482 14 1103 4 1484 2 1485 2 1486 2 338 2 1106 2 1490 14 339 2 1109 2 1108 2 340 2 1492 14 1494 1 1496 26 343 12 719 2 344 2 345 4 1111 2 1498 2 1112 2 721 64 1117 32 1500 24 348 46 1118 2 1119 2 353 410 352 2 723 2 1501 2 725 2 1502 2 1503 24 1504 2 355 2 727 3 1124 12 358 36 1506 14 1125 4 1507 512 729 2 1508 2 1127 16 1513 2 1514 58 734 2 1516 32 1132 32 735 1 1517 2 1135 2 367 4 1136 3 738 6 740 2 1520 2 1521 12 1527 2 1526 2 1528 2 370 2 1138 2 373 2 1142 18 1143 2 1147 2 1149 2 750 2 748 4 751 2 1151 64 1538 2 753 4 1539 2 1153 18 1154 2 1155 46 1156 18 1542 2 1157 14 1544 10 1159 4 378 2 760 2 382 2 1162 2 
765 2 168 6 467 2 252 2 1441 2 1192 2 1024 2 353 2 1501 2 801 2 1503 2 470 2 1029 2 1507 2 1276 2 598 2 668 4 957 2 960 2 1514 2 285 2 972 2 1391 2 408 2 
765 2 168 6 467 2 252 2 1441 2 1192 2 1024 2 353 2 1501 2 801 2 1503 2 470 2 1029 2 1507 2 1276 2 598 2 668 4 957 2 960 2 1514 2 285 2 972 2 1391 2 408 2 
765 2 168 6 467 2 252 2 1441 2 1192 2 1024 2 353 2 1501 2 801 2 1503 2 470 2 1029 2 1507 2 1276 2 598 2 668 4 957 2 960 2 1514 2 285 2 972 2 1391 2 408 2 
1496 2 343 2 980 4 1209 2 738 2 1461 4 1041 3 1168 5 541 2 1500 3 385 2 467 2 1194 4 353 4 9 2 1501 2 1270 2 801 3 327 2 97 2 1534 2 1029 2 1507 10 1318 2 144 4 200 2 753 2 1184 2 1514 3 186 2 20 4 103 4 188 2 404 3 832 2 673 2 777 6 851 4 1460 2 812 2 
1496 2 343 2 980 4 1209 2 738 2 1461 4 1041 2 1168 4 541 2 1500 2 385 2 500 2 467 2 1194 4 353 4 9 2 1501 2 1502 2 1270 2 801 2 327 2 97 2 1534 2 1477 2 1029 2 1507 10 1318 2 144 4 200 2 753 2 1184 2 1514 2 186 2 20 4 103 4 188 2 404 2 832 2 673 2 777 6 851 4 1460 2 812 2 
1496 2 343 2 980 4 1209 2 738 2 1461 4 1041 2 1168 4 541 2 1500 2 385 2 500 2 467 2 1194 4 353 4 9 2 1501 2 1502 2 1270 2 801 2 327 2 97 2 1534 2 1477 2 1029 2 1507 10 1318 2 144 4 200 2 753 2 1184 2 1514 2 186 2 20 4 103 4 188 2 404 2 832 2 673 2 777 6 851 4 1460 2 812 2 
1496 2 343 2 980 4 1209 2 738 2 1461 4 1041 2 1168 4 541 2 1500 2 385 2 500 2 467 2 1194 4 353 4 9 2 1501 2 1502 2 1270 2 801 2 327 2 97 2 1534 2 1477 2 1029 2 1507 10 1318 2 144 4 200 2 753 2 1184 2 1514 2 186 2 20 4 103 4 188 2 404 2 832 2 673 2 777 6 851 4 1460 2 812 2 
1496 2 343 2 980 4 1209 2 738 2 1461 4 1041 2 1168 4 541 2 1500 2 385 2 500 4 467 2 1194 4 353 4 9 2 1501 2 1502 4 1270 2 801 2 327 2 97 2 1534 2 1477 4 1029 2 1507 10 1318 2 144 4 200 2 753 2 1184 2 1514 2 186 2 20 4 103 4 188 2 404 2 832 2 673 2 777 6 851 4 1460 2 812 2 
155 2 964 2 247 2 516 2 114 2 1418 2 
964 2 649 2 1344 2 902 2 1440 2 319 2 1243 2 
675 2 737 2 248 1 89 1 1313 2 1523 2 353 8 488 2 326 2 372 2 1532 1 37 2 1507 10 451 2 636 2 149 2 843 1 788 2 1202 2 156 1 1225 2 1410 2 163 2 104 2 1066 2 1014 2 
343 6 1207 2 980 4 1209 6 1461 12 738 6 318 2 1168 16 500 5 1170 2 1314 2 353 6 1270 6 1502 2 327 6 864 2 1477 2 1507 6 1352 2 1321 2 1200 2 753 2 100 2 1387 2 604 2 557 4 1303 2 188 6 1010 4 832 6 
1507 1 360 2 425 2 144 2 782 1 787 2 824 4 353 1 1194 2 262 2 31 2 1195 2 418 6 379 2 948 2 987 2 1079 2 851 2 
360 2 425 4 144 2 787 4 824 4 262 2 1194 2 31 4 1195 2 418 6 379 2 948 2 987 2 1079 2 851 2 
1507 1 360 2 425 8 144 2 782 1 787 8 824 4 353 1 262 8 1194 2 31 8 1195 6 418 10 379 2 948 2 987 2 1079 2 851 2 
360 2 425 2 144 2 787 2 824 2 1194 2 31 2 418 2 379 2 948 2 987 2 1079 2 851 2 
485 4 835 4 761 4 763 4 1166 4 5 2 1267 4 220 4 117 4 223 4 1275 4 1179 4 573 4 574 10 396 6 126 10 961 2 1283 26 577 10 1186 2 966 6 1390 4 578 4 130 36 698 4 585 4 499 2 235 24 859 2 29 8 36 8 592 4 1100 8 42 4 41 4 1482 4 713 2 153 16 154 4 159 16 161 4 431 16 1011 8 795 4 1206 4 880 2 885 4 1016 2 1497 2 1018 5 436 4 249 28 721 10 1416 10 797 4 1113 2 1417 4 1117 4 251 2 1023 2 353 70 444 32 445 4 1424 8 358 6 802 4 1506 4 183 4 1507 78 635 8 1031 4 732 2 83 4 908 24 533 2 1132 4 1516 4 735 2 190 24 1338 44 195 2 1341 14 650 2 1043 4 741 2 543 30 466 4 1235 2 745 4 1443 102 655 2 657 2 1046 8 1047 2 1533 10 1446 2 1349 10 927 4 1147 2 819 16 1151 11 281 6 476 2 205 4 1454 4 477 4 933 8 1067 4 1366 6 287 1 
1494 2 1497 2 763 4 249 12 1416 6 721 6 1117 4 353 26 1267 4 117 4 521 2 358 2 1507 28 1275 2 635 6 526 2 1179 2 396 2 961 2 126 2 1283 12 1186 2 966 2 578 4 190 8 130 14 1518 2 195 2 1338 14 647 2 781 10 650 2 137 2 499 2 543 6 323 2 655 2 1443 40 657 2 1047 2 592 2 1349 6 42 2 41 4 927 2 1147 2 333 2 999 2 1151 2 872 2 281 4 476 2 205 2 154 2 477 4 431 14 509 2 880 2 1366 2 
761 6 763 8 1166 4 1267 6 220 6 1377 26 117 6 223 6 391 8 1080 4 226 4 1275 10 1380 4 1278 90 1179 6 1279 24 573 4 305 8 396 10 126 18 961 2 846 4 1283 58 1186 2 399 6 966 36 1390 6 578 6 130 88 979 18 700 10 781 22 585 4 137 2 499 8 235 92 859 4 323 4 237 4 29 50 592 10 36 24 41 6 42 10 1479 10 333 2 999 2 872 4 1482 4 154 4 1409 2 159 42 161 6 431 28 509 7 795 4 1206 6 880 4 1494 2 885 4 1016 2 716 26 1497 2 1018 5 436 6 249 58 1311 4 722 2 721 16 1416 16 797 6 515 2 1417 4 1117 6 171 24 353 134 521 2 358 14 1506 4 449 6 183 6 1507 150 1126 2 73 24 635 15 526 11 731 2 1031 6 1129 4 83 4 908 84 533 2 1132 6 1516 6 735 2 190 124 1338 112 195 8 647 2 1340 4 1341 12 1043 6 466 4 543 34 1235 2 918 10 1443 248 655 8 657 8 1047 2 1048 24 1349 16 927 4 1147 4 1151 16 281 8 670 2 205 10 477 6 207 90 1357 8 1061 4 933 42 480 12 831 24 1067 6 1366 14 
779 2 1497 2 1338 6 195 2 249 6 721 2 1416 2 650 2 499 2 353 14 1267 2 655 2 1443 18 297 2 657 2 1045 2 117 2 1047 2 358 2 1349 2 1507 14 1103 2 961 2 1283 6 1059 2 1186 2 431 8 578 2 364 2 190 2 880 2 130 6 1366 2 
1028 2 
1293 1 677 1 33 1 1465 1 335 1 392 1 
1293 1 677 1 33 1 1465 1 335 1 392 1 
1293 1 677 1 33 1 1465 1 335 1 392 1 
1293 1 677 1 33 1 1465 1 335 1 392 1 
1293 1 677 1 33 1 1465 1 335 1 392 1 
1293 1 677 1 33 1 1465 1 335 1 392 1 
1293 1 677 1 33 1 1465 1 335 1 392 1 
1293 1 677 1 33 1 1465 1 335 1 392 1 
1293 1 677 1 33 1 1465 1 335 1 392 1 
1293 1 677 1 33 1 1465 1 335 1 392 1 
1293 1 677 1 33 1 1465 1 335 1 392 1 
1293 1 677 1 33 1 1465 1 335 1 392 1 
1293 1 677 1 33 1 1465 1 335 1 392 1 
1293 1 677 1 33 1 1465 1 335 1 392 1 
1293 1 677 1 33 1 1465 1 335 1 392 1 
1293 1 677 1 33 1 1465 1 335 1 392 1 
1293 1 677 1 33 1 1465 1 335 1 392 1 
1293 1 677 1 33 1 1465 1 335 1 392 1 
1293 1 677 1 33 1 1465 1 335 1 392 1 
1293 1 677 1 33 1 1465 1 335 1 392 1 
1293 1 677 1 33 1 1465 1 335 1 392 1 
1293 1 677 1 33 1 1465 1 335 1 392 1 
1293 1 677 1 33 1 1465 1 335 1 392 1 
1293 1 677 1 33 1 1465 1 335 1 392 1 
1293 1 677 1 33 1 1465 1 335 1 392 1 
1293 1 677 1 33 1 1465 1 335 1 392 1 
1293 1 677 1 33 1 1465 1 335 1 392 1 
1293 1 677 1 33 1 1465 1 335 1 392 1 
1293 1 677 1 33 1 1465 1 335 1 392 1 
1293 1 677 1 33 1 1465 1 335 1 392 1 
1293 1 677 1 33 1 1465 1 335 1 392 1 
1293 1 677 1 33 1 1465 1 335 1 392 1 
1293 1 677 1 33 1 1465 1 335 1 392 1 
1293 1 677 1 33 1 1465 1 335 1 392 1 
1293 1 677 1 33 1 1465 1 335 1 392 1 
1293 1 677 1 33 1 1465 1 335 1 392 1 
1293 1 677 1 33 1 1465 1 335 1 392 1 
1293 1 677 1 33 1 1465 1 335 1 392 1 
1293 1 677 1 33 1 1465 1 335 1 392 1 
1293 1 677 1 33 1 1465 1 335 1 392 1 
1293 1 677 1 33 1 1465 1 335 1 392 1 
1293 1 677 1 33 1 1465 1 335 1 392 1 
1293 1 677 1 33 1 1465 1 335 1 392 1 
1293 1 677 1 33 1 1465 1 335 1 392 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 647 760 11 1261 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V ERROR java.lang.NullPointerException 469 1163 
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 386 706 1048 
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.inv.binary.twoSequence.PairwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
utilMDE.UtilMDE:escapeNonASCII(C)Ljava.lang.String;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.unary.stringsequence.SingleStringSequence:valid_types([Ldaikon.VarInfo;)Z
utilMDE.WeakIdentityHashMap:indexFor(II)I
jtb.JavaCharStream:getBeginLine()I
jtb.JavaParser:jj_3R_55()Z
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptName:isEnterPoint()Z
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.stringsequence.SingleStringSequence:var()Ldaikon.VarInfo;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
jtb.syntaxtree.NodeToken:trimSpecials()V
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:enabled()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I | CONSTANT | 11084 | 108 -> 1
daikon.inv.binary.twoSequence.PairwiseIntLessThan:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
jtb.JavaParser:jj_3R_52()Z
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.binary.twoScalar.TwoScalar:get_swap()Z
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.OrderedPairIterator:hasNext()Z
daikon.VarInfo:isPrestate()Z
daikon.inv.unary.sequence.EltNonZero:format_esc()Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
daikon.inv.unary.sequence.EltUpperBound:format_ioa()Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.inv.binary.twoSequence.TwoSequence:var2()Ldaikon.VarInfo;
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.PptSlice1:num_samples()I
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
utilMDE.Intern.SequenceAndIndices:hashCode()I
utilMDE.Intern:intern([D)[D
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
jtb.JavaCharStream:backup(I)V
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
daikon.Quant:subsetOf([S[S)Z
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.VarInfo:get_base_array_hashcode()Ldaikon.VarInfo;
daikon.Quant:pairwiseDivides([I[I)Z
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.inv.unary.sequence.EltUpperBound:format_esc()Ljava.lang.String;
daikon.test.FormatTestCase:getDiffString()Ljava.lang.String;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3_1()Z
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.diff.RootNode:RootNode()V
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.inv.binary.twoSequence.TwoSequence:TwoSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quantify.ESCQuantification:bld_quant(Ldaikon.VarInfo;Ldaikon.Quantify.Term;)Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltOneOf:sort_rep()V
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfo:is_typeof()Z
daikon.inv.unary.sequence.NoDuplicates:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.inv.unary.sequence.EltLowerBound:format_simplify()Ljava.lang.String;
daikon.inv.unary.string.OneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.ValueTuple:isMissing(I)Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
jtb.JavaParser:jj_2_1(I)Z
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.inv.unary.UpperBoundCore:wouldChange(J)Z
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.suppress.NISuppression:NISuppression(Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
daikon.VarInfo:get_lower_bound()Ldaikon.Quantify.Term;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:dimensions()I
daikon.inv.unary.sequence.EltwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.NumericInt.Divides:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:format_daikon()Ljava.lang.String;
daikon.inv.ValueSet.ValueSetStringArray:ValueSetStringArray(I)V
daikon.inv.unary.sequence.EltUpperBound:EltUpperBound(Ldaikon.PptSlice;)V
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
jtb.JavaParserTokenManager:jjStopAtPos(II)I
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
utilMDE.LimitedSizeIntSet:size()I
daikon.inv.unary.sequence.EltOneOf:EltOneOf(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;Ldaikon.VarInfo;)V
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
jtb.JavaCharStream:FillBuff()V
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltOneOf:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.VarComparabilityNone:indexType(I)Ldaikon.VarComparability;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
jtb.JavaCharStream:ReadByte()C
utilMDE.UtilMDE:escapeNonASCII(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.string.OneOfString:runValue(Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.inv.Invariants:Invariants()V
daikon.VarInfoName.NodeFinder:inPre()Z
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:pairwiseLT([I[I)Z
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaCharStream:getEndColumn()I
utilMDE.ArraysMDE:element_range([I)I
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.ModBitTracker:ModBitTracker(I)V
jtb.Token:newToken(I)Ljtb.Token;
daikon.VarInfo:ioa_name()Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([ZZ)I
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
jtb.JavaParser:jj_3R_135()Z
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_esc()Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.inv.Invariant:prob_and(DD)D
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.Quant:memberOf(I[I)Z
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quantify.IOAQuantification:getFreeVarName(I)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.EltNonZero:EltNonZero(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.string.OneOfString:OneOfString(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_ioa()Ljava.lang.String;
daikon.ProglangType:isPointerFileRep()Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_simplify()Ljava.lang.String;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.Quant:pairwiseSquare([I[I)Z
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.ProglangType:isScalar()Z
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.inv.unary.sequence.EltUpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:eltwiseGT([I)Z
daikon.VarInfo:has_typeof()Z
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.Quant:eltsGteIndex([I)Z
daikon.inv.unary.UpperBoundCore:calc_modulus()J
jtb.JavaParser:jj_3R_161()Z
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.Quantify.IOAQuantification:getVarIndexedString(I)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_ioa()Ljava.lang.String;
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
daikon.inv.Invariant:simplify_format_string(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quantify.IOAQuantification:getMembershipRestriction(I)Ljava.lang.String;
daikon.PptName:isCombinedExitPoint()Z
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.inv.unary.sequence.EltOneOf:format_ioa()Ljava.lang.String;
daikon.VarInfo:simplify_quantify(Ljava.util.EnumSet;[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.NumericInt.Divides:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.inv.unary.stringsequence.EltOneOfString:enabled()Z
daikon.VarInfo:isIOASet()Z
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.inv.unary.sequence.NoDuplicates:format_ioa()Ljava.lang.String;
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.Quantify.ESCQuantification:get_arr_vars_indexed(I)Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.VarInfo:java_name()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.NoDuplicates:format_simplify()Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
utilMDE.Assert:assertTrue(Z)V
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.Quant:slice([III)[I
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_133()Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.inv.unary.string.SingleString:SingleString(Ldaikon.PptSlice;)V
daikon.Ppt:find_var_by_name(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.PptSlice0:initInvariantsSeen()V
daikon.inv.unary.string.OneOfString:format_ioa()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.Quant:subsetOf([D[F)Z
utilMDE.WeakHasherMap:size()I
utilMDE.Options.OptionInfo:argument_required()Z
daikon.Quantify.IOAQuantification:getQuantifierExp()Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.inv.unary.stringsequence.EltOneOfString:format_simplify()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.VarInfo:get_base_array()Ldaikon.VarInfo;
daikon.Quantify.ESCQuantification:get_quantification()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_simplify()Ljava.lang.String; | CONSTANT | 5245 | 3 -> 0
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
jtb.JavaCharStream:getEndLine()I
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.ModBitTracker:num_vars()I
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.stringsequence.EltOneOfString:add_modified([Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.VarInfo:get_enclosing_var()Ldaikon.VarInfo;
daikon.inv.Invariant:logOn()Z
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:PairwiseIntGreaterThan(Ldaikon.PptSlice;)V
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.VarInfo:get_upper_bound()Ldaikon.Quantify.Term;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.Quant:subsetOf([F[F)Z
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
jtb.JavaCharStream:readChar()C
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.Quant:lexGT([I[I)Z
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_daikon()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.InvMap:toString()Ljava.lang.String;
utilMDE.ArraysMDE:sum([D)D
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfo:isDerived()Z
daikon.Quant:eltwiseLTE([I)Z
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
utilMDE.ArraysMDE:sum([I)I
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Quant:pairwiseLTE([I[I)Z
utilMDE.MathMDE:modulus([I)[I
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:PairwiseIntLessThan(Ldaikon.PptSlice;)V
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.inv.unary.sequence.EltOneOf:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_esc()Ljava.lang.String;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.PptSlice0:arity()I
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:enabled()Z
daikon.inv.unary.sequence.EltOneOf:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:enabled()Z
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.Quantify.QuantFlags:distinct()Ljava.util.EnumSet;
daikon.Quantify.FreeVar:name()Ljava.lang.String;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParser:jj_3R_51()Z
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eltsGTE([II)Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:lte(II)Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
utilMDE.FuzzyFloat:eq(DD)Z
utilMDE.Intern:intern([I)[I
daikon.ProglangType:isIntegral()Z
daikon.Quant:concat([I[I)[I
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.inv.unary.string.OneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.Quantify.IOAQuantification:getClosingExp()Ljava.lang.String;
daikon.inv.unary.string.OneOfString:is_type()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:runValue([JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_daikon()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D | ASSIGN | 35390 | = null
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.Quantify.IOAQuantification:getFreeVar(I)Ldaikon.Quantify.Term;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan()V
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:noDups([I)Z
daikon.Quant:subsetOf([B[I)Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.OrderedPairIterator:setnext2()V
daikon.Quant:ne(II)Z
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:enabled()Z
daikon.Quant:lexGTE([I[I)Z
daikon.ProglangType:baseIsString()Z
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:subarray([JII)[J
daikon.inv.unary.sequence.EltwiseIntLessThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_85()Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.inv.unary.sequence.EltUpperBound:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.ProglangType:isString()Z
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.Quant:eltsEqualIndex([I)Z
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:baseIsIntegral()Z
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:memberOf(S[S)Z
daikon.inv.unary.sequence.EltUpperBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.LinearBinaryCore:add_modified(JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.inv.unary.string.SingleString:var()Ldaikon.VarInfo;
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:isFloat()Z
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.inv.Invariant:isWorthPrinting()Z
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.VarInfo:get_array_var()Ldaikon.VarInfo;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.suppress.NISuppressionSet:NISuppressionSet([Ldaikon.suppress.NISuppression;)V
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quantify.SimplifyQuantification:get_quantification()Ljava.lang.String;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_simplify()Ljava.lang.String; | RETURN | 7449 | return null
daikon.Ppt:Ppt()V
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.string.OneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.string.OneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.NoDuplicates:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:enabled()Z
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.NumericInt.Divides:Divides(Ldaikon.PptSlice;Z)V
daikon.inv.Invariant:prob_or(DD)D
utilMDE.FuzzyFloat:gt(DD)Z
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.inv.unary.sequence.EltOneOf:enabled()Z
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.inv.unary.sequence.EltOneOf:format_daikon()Ljava.lang.String;
daikon.ProglangType:isArray()Z
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_47()Z
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.Quant:eltwiseEqual([I)Z
daikon.inv.unary.string.OneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:concat([I[I)[I
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String;
daikon.inv.ValueSet.ValueSetString:ValueSetString(I)V
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.Node:Node()V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
daikon.inv.binary.twoScalar.LinearBinaryCore:set_bi_linear(JJJJ)Ldaikon.inv.InvariantStatus;
daikon.Ppt:indexOf(Ljava.lang.String;)I
daikon.inv.unary.scalar.NonZero:is_pointer()Z
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltNonZero:enabled()Z
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:gte(DD)Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.inv.unary.sequence.EltOneOf:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
jtb.ParseException:ParseException(Ljava.lang.String;)V
daikon.inv.unary.stringsequence.EltOneOfString:sort_rep()V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.NoDuplicates:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_16()Z
daikon.inv.unary.sequence.EltNonZero:format_simplify()Ljava.lang.String;
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntComparison:EltwiseIntComparison(Ldaikon.PptSlice;)V
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.VarInfo:apply_subscript(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:hashCode()I
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:toString()Ljava.lang.String;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
utilMDE.Intern:internSubsequence([JII)[J
daikon.Quantify.SimplifyQuantification:SimplifyQuantification(Ljava.util.EnumSet;[Ldaikon.VarInfo;)V
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfo:jml_name()Ljava.lang.String;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quantify.Length:esc_name()Ljava.lang.String;
daikon.VarInfo:esc_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfo:old_var_names(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:maxsep_indices()[I
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_2_16(I)Z
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.unary.stringsequence.EltOneOfString:format_esc()Ljava.lang.String;
daikon.Quant:union([I[I)[I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_134()Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:logDetail()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.ModBitTracker:split(I)I
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:eltsLtIndex([I)Z
daikon.Quant:pairwiseGT([I[I)Z
daikon.ProglangType:base()Ljava.lang.String;
daikon.ValueTuple:isMissingFlow(I)Z
daikon.Quantify.Length:simplify_name()Ljava.lang.String;
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:eltsGtIndex([I)Z
daikon.inv.unary.stringsequence.EltOneOfString:is_type()Z
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.ProglangType:baseIsFloat()Z
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_simplify()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.Quant:memberOf(J[J)Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.VarInfo:get_all_simple_names()Ljava.util.List;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
utilMDE.MathMDE:gcd(JJ)J
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.Quantify.QuantFlags:adjacent()Ljava.util.EnumSet;
utilMDE.WeakHasherMap:processQueue()V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.Quant:eltsLteIndex([I)Z
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.Quant:subsetOf([D[D)Z
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
jtb.JavaParser:jj_scan_token(I)Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern:numIntArrays()I
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_esc()Ljava.lang.String;
daikon.Quant:eltsNotEqual([II)Z
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.unary.string.OneOfString:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:pairwiseEqual([I[I)Z
jtb.JavaParser:jj_3R_162()Z
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_ioa()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.NoDuplicates:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.Quantify.Term:name_with_offset(Ljava.lang.String;I)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.inv.unary.sequence.EltOneOf:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_esc()Ljava.lang.String;
daikon.test.FormatTestCase:passes()Z
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_esc()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.Quant:gt(II)Z
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.FuzzyFloat:ne(DD)Z
daikon.Quant:eltwiseNotEqual([I)Z
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.ModBitTracker:num_sets()I
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eq(JJ)Z
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
utilMDE.MathMDE:pow(II)I
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.inv.Invariant:justified()Z
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_daikon()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.VarInfo:is_direct_non_slice_array()Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:setDiff([I[I)[I
daikon.inv.unary.stringsequence.EltOneOfString:subarray_rep()Ljava.lang.String;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.ArraysMDE:min([I)I
daikon.suppress.NISuppression:NISuppression(Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.MathMDE:pow_fast(II)I
utilMDE.LimitedSizeIntSet:add(I)V
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:getDiffString()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.suppress.NISuppression:NISuppression([Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.Quantify.Term:ioa_name()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:subarray_rep()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.ValueTuple:tuplemodHasModified(I)Z
jtb.JavaCharStream:getBeginColumn()I
daikon.suppress.NISuppressor:swap()Ldaikon.suppress.NISuppressor;
daikon.inv.unary.stringsequence.EltOneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:enabled()Z
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.Quantify.SimplifyQuantification:get_index(I)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltNonZero:is_pointer()Z
daikon.Quantify.Constant:name()Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:generateParseException()Ljtb.ParseException;
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.sequence.EltNonZero:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:lt(II)Z
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.VarInfoName:name()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:format_daikon()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:format_esc()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_esc()Ljava.lang.String;
daikon.Quant:eltsEqual([II)Z
daikon.Quant:eltwiseLT([I)Z
daikon.PptSlice2:arity()I
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.PptSlice0.ImplicationWrapper:hashCode()I
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.Debug:logOn()Z
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:maxsep_point([J[J)[I
daikon.inv.unary.string.OneOfString:format_esc()Ljava.lang.String;
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quantify.Length:Length(Ldaikon.VarInfo;I)V
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.Quant:eq(DD)Z
daikon.Quant:lexLT([I[I)Z
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 7310 | = null
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_49()Z
jtb.JavaParser:jj_ntk()I
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_simplify()Ljava.lang.String;
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
utilMDE.UtilMDE.NullableStringComparator:compare(Ljava.lang.String;Ljava.lang.String;)I
daikon.VarComparabilityNone:comparable(Ldaikon.VarComparabilityNone;Ldaikon.VarComparabilityNone;)Z
daikon.inv.unary.string.OneOfString:format_simplify()Ljava.lang.String;
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.Quant:subsetOf([F[D)Z
daikon.inv.binary.twoSequence.TwoSequence:var1()Ldaikon.VarInfo;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.Quantify.Constant:Constant(I)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE:mod_positive(II)I
daikon.inv.unary.string.OneOfString:enabled()Z
daikon.inv.unary.string.OneOfString:add_modified(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant:prob_and(DDD)D
utilMDE.OrderedPairIterator:setnext1()V
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoAux:hashCode()I
daikon.inv.unary.stringsequence.SingleStringSequence:SingleStringSequence(Ldaikon.PptSlice;)V
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_daikon()Ljava.lang.String;
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaCharStream:BeginToken()C
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_50()Z
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.Quant:intersection([I[I)[I
daikon.suppress.NISuppressionSet:swap()Ldaikon.suppress.NISuppressionSet;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.Quant:eltsGT([II)Z
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.Quantify:get_flags(Z)Ljava.util.EnumSet;
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
utilMDE.ArraysMDE:subarray([III)[I
daikon.Quant:eq(II)Z
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.inv.unary.sequence.NoDuplicates:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.ElementsFinder:inPre()Z
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
jtb.JavaParser:jj_3R_56()Z
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.VarInfo:isPointer()Z
jtb.JavaParser:jj_3R_53()Z
daikon.Quantify.QuantFlags:element_wise()Ljava.util.EnumSet;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.MathMDE:negate(I)I
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.Quant:memberOf(F[F)Z
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.inv.unary.scalar.Positive:enabled()Z
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
jtb.JavaParser:jj_3R_48()Z
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.VarInfo:isDerivedSubSequenceOf()Ldaikon.VarInfo;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.VarComparabilityNone:elementType()Ldaikon.VarComparability;
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.Quantify.FreeVar:simplify_name()Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;)V
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.inv.unary.sequence.EltwiseIntLessThan:EltwiseIntLessThan(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_58()Z
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
daikon.Quant:eq(FF)Z
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.inv.unary.string.OneOfString:format_daikon()Ljava.lang.String;
utilMDE.Intern:intern([J)[J
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.inv.binary.twoScalar.NumericInt.Divides:get_proto(Z)Ldaikon.inv.Invariant;
daikon.Quant:sameLength([I[I)Z
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
jtb.JavaParser:jj_3R_57()Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:gte(II)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_ioa()Ljava.lang.String;
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.binary.twoScalar.IntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:lexEqual([I[I)Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:get_proto()Ldaikon.inv.Invariant;
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.inv.Invariant:getConfidence()D
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.Quant:isReverse([I[I)Z
daikon.inv.ValueSet:ValueSet(I)V
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:sum([[I)I
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.inv.unary.sequence.EltUpperBound:enabled()Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quantify.QuantFlags:include_index()Ljava.util.EnumSet;
daikon.inv.unary.sequence.EltOneOf:format_simplify()Ljava.lang.String;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:runValue([Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
daikon.suppress.NISuppressee:swap()Ldaikon.suppress.NISuppressee;
jtb.JavaParser:jj_3R_163()Z
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:gcd([I)I
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual()V
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.stringsequence.EltOneOfString:get_proto()Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:add_modified(JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoSequence.TwoSequence:valid_types([Ldaikon.VarInfo;)Z
utilMDE.FuzzyFloat:lt(DD)Z
daikon.ProglangType:baseIsScalar()Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.Quant:lexNotEqual([I[I)Z
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.binary.BinaryInvariant:is_symmetric()Z
jtb.ParseException:getMessage()Ljava.lang.String;
daikon.VarInfo:jml_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_ioa()Ljava.lang.String;
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.ProglangType:elementIsIntegral()Z
daikon.Quant:eltsLTE([II)Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:setEqual([I[I)Z
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:enabled()Z
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.suppress.NISuppressee:NISuppressee(Ljava.lang.Class;I)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:enabled()Z
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltNonZero:format_ioa()Ljava.lang.String;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.stringsequence.EltOneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:gcd(II)I
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.VarInfo:name()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:eltwiseGTE([I)Z
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_ioa()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_54()Z
daikon.VarInfo:domainTypeIOA()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:subsetOf([I[I)Z
daikon.VarInfoName:isLiteralConstant()Z
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.Quantify.SimplifyQuantification:get_closer()Ljava.lang.String;
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.LinearBinaryCore:find_bi_linear(JJJJ[D)Z
daikon.inv.unary.stringsequence.EltOneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.Quantify:quantify([Ldaikon.VarInfo;)[Ldaikon.Quantify.QuantifyReturn;
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.Quantify.IOAQuantification:IOAQuantification([Ldaikon.VarInfo;)V
daikon.Quantify.Term:simplify_name()Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.inv.unary.sequence.EltOneOf:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.suppress.NISuppressee:NISuppressee(Ljava.lang.Class;Z)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.inv.unary.string.SingleString:valid_types([Ldaikon.VarInfo;)Z
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
utilMDE.MathMDE:mod_positive(JJ)J
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.Intern:internSubsequence([III)[I
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.PptSlice1:arity()I
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.ArraysMDE:max([I)I
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.inv.unary.sequence.EltOneOf:is_boolean()Z
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:format_daikon()Ljava.lang.String;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
daikon.Quantify.ESCQuantification:ESCQuantification(Ljava.util.EnumSet;[Ldaikon.VarInfo;)V
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltOneOf:is_hashcode()Z
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.NoDuplicates:NoDuplicates(Ldaikon.PptSlice;)V
utilMDE.MathMDE:missing_numbers([I)[I
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.unary.string.OneOfString:sort_rep()V
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.ModBitTracker:num_samples()I
daikon.Quantify.QuantifyReturn:QuantifyReturn(Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.EltNonZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_simplify(Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfo:simplify_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:memberOf(F[D)Z
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.Quantify.SimplifyQuantification:get_arr_vars_indexed(I)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan(Ldaikon.PptSlice;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfo:isIOAArray()Z
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
utilMDE.MathMDE:sign(I)I
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.VarInfo:relate_var()V
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:min_max([I)[I
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:format_ioa()Ljava.lang.String;
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.inv.unary.stringsequence.EltOneOfString:EltOneOfString(Ldaikon.PptSlice;)V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.Debug:logDetail()Z
daikon.test.InvariantFormatTester:execute()Z
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ProglangType:isPseudoArray()Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.Stopwatch:Stopwatch(Z)V
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.Quant:eltsLT([II)Z
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.VarInfo:new_ppt()V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.Quantify.Term:esc_name()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:PairwiseIntEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.EltUpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.ValueTuple:size()I
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_daikon()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.Quant:memberOf(D[F)Z
daikon.Quant:pairwiseGTE([I[I)Z
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.ArraysMDE:sum([[D)D | STATEMENT | 9149 | stmt -> ;
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.Quant:subsetOf([J[J)Z
daikon.diff.InvMap:InvMap()V
daikon.Quant:lexLTE([I[I)Z
utilMDE.MathMDE:gcd_differences([I)I
utilMDE.FuzzyFloat:lte(DD)Z
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
454 2 318 4 906 2 722 2 976 2 272 2 854 2 500 6 536 2 630 2 1272 2 185 2 1103 2 1118 2 962 2 750 2 730 2 1190 2 169 2 1108 2 618 4 313 2 45 2 
185 8 1103 8 1118 8 318 12 169 5 1108 4 410 4 594 2 722 4 1084 6 276 2 1102 6 1232 4 500 14 854 4 536 4 800 2 
49 2 175 4 1198 4 809 2 1180 2 320 2 1077 2 1247 2 848 4 974 2 1252 4 1126 10 532 2 702 62 727 8 398 2 184 2 704 4 929 14 416 4 464 4 305 4 465 4 1208 2 785 2 786 2 1314 4 544 2 403 2 1106 2 191 4 288 2 193 2 681 2 291 4 1011 2 384 4 311 2 424 6 490 10 
1034 2 867 2 24 2 625 2 1023 2 228 2 8 2 1027 2 86 2 314 2 
757 2 176 2 131 4 425 2 511 2 237 2 810 2 545 2 295 2 
32 2 514 2 400 2 1283 2 258 6 608 2 933 6 128 2 483 6 773 2 1266 2 
388 6 1055 2 1238 4 858 2 391 2 779 6 171 2 237 2 1160 6 295 2 5 6 1164 2 414 4 
454 6 692 2 318 26 906 4 722 10 746 2 957 4 649 8 500 29 854 10 630 8 536 10 800 4 502 2 1103 16 185 16 633 2 959 2 1118 16 379 8 169 12 1146 4 1009 6 1108 10 618 10 237 6 1176 2 1299 2 295 6 46 8 
1114 6 709 4 
1027 2 
1252 2 803 2 1187 2 1052 2 1308 2 381 2 727 2 397 2 
899 8 454 4 318 48 1264 2 906 2 997 4 140 4 25 6 670 2 849 6 722 16 410 4 780 2 1084 6 326 2 1059 6 746 2 1002 4 1102 6 515 2 854 16 649 6 500 52 1232 4 536 16 630 18 1103 32 185 32 1118 32 357 4 79 2 169 22 1108 16 894 6 1009 4 237 4 618 6 295 4 47 4 
424 2 532 2 727 2 
652 2 969 2 470 2 767 10 1277 2 571 2 1315 2 850 2 607 2 735 2 977 2 1086 2 453 22 874 2 
570 2 
713 2 455 16 177 2 176 2 1244 1 457 1 1021 2 1246 2 459 24 719 2 1248 1 1250 2 627 4 275 2 3 2 181 2 871 2 873 2 376 2 875 2 729 2 9 2 1259 2 106 2 1169 2 636 3 1173 2 1174 2 802 2 953 1 16 4 295 32 1178 24 549 2 880 2 807 2 554 2 1033 2 556 4 22 2 474 2 1112 2 475 4 813 2 955 2 1117 3 561 6 394 1 395 1 563 8 209 2 888 2 650 6 651 2 1044 32 1186 2 1276 3 482 2 309 2 133 1 404 2 753 2 662 2 1193 2 218 16 755 2 1050 2 489 2 48 2 576 2 491 3 666 2 1281 2 577 2 900 2 139 2 493 2 578 2 1054 2 1053 1 323 2 1282 2 497 1 498 2 582 16 412 2 584 2 1203 2 329 2 1204 2 1285 1 674 3 1286 2 415 2 1061 2 829 3 230 2 58 3 59 2 676 3 148 2 149 2 986 2 421 2 153 5 339 2 683 2 237 34 1132 12 1071 6 240 2 428 1 509 2 599 3 69 2 159 2 1138 3 245 1 343 3 777 4 847 2 1139 1 1223 6 778 8 1224 2 853 2 1307 4 1001 2 1230 2 164 2 75 2 1087 16 1310 2 1233 2 519 1 356 1 167 4 1091 2 1007 2 80 8 84 3 935 1 523 32 938 4 1097 2 1014 2 866 2 
237 2 1191 2 
200 2 932 2 237 4 
174 14 1016 2 714 2 792 2 368 44 1099 2 942 14 945 2 946 4 97 8 371 44 1022 2 872 8 182 14 1025 14 728 32 6 14 282 12 7 2 377 6 188 2 635 4 108 2 731 4 15 2 18 10 20 10 21 2 641 14 550 2 1111 8 1032 2 738 2 643 8 299 2 126 2 745 8 127 6 648 4 399 2 303 2 655 4 485 4 896 2 405 2 1121 14 967 2 1196 2 50 14 137 2 905 6 904 2 971 2 824 14 1124 2 324 12 499 2 585 2 1129 2 330 14 1130 2 331 10 675 2 984 2 504 2 679 2 506 2 63 2 65 10 1070 2 338 2 1295 2 836 18 161 44 1140 2 604 2 1079 4 72 6 700 14 250 10 852 2 781 10 999 2 436 2 516 2 437 18 1004 2 612 2 614 2 257 2 784 2 445 2 1095 2 710 2 620 4 865 2 
1013 2 587 2 989 1 958 2 
268 2 958 2 
144 2 456 2 590 2 727 2 
144 2 456 2 590 2 727 2 658 2 335 2 
144 2 202 2 957 2 727 2 798 2 958 2 
316 2 480 2 
144 2 300 2 957 2 727 2 
449 2 951 2 
447 2 857 2 
1024 2 1271 2 
1101 2 765 2 
890 2 765 2 857 2 
1313 2 765 2 857 2 
765 2 857 2 370 2 
765 2 857 2 495 2 
717 2 144 2 226 2 1060 2 727 2 1165 2 361 6 43 6 
886 2 484 2 
144 2 947 2 202 2 957 2 727 2 958 2 335 2 
202 2 1105 2 958 2 
1144 2 202 2 958 2 
1049 2 1013 2 484 2 
202 2 958 2 
484 2 869 2 
734 2 958 2 
1013 2 737 2 484 2 
1013 2 1024 2 172 2 
765 2 1013 2 402 2 
449 2 1013 2 687 2 
1013 2 857 2 1303 2 
484 2 588 2 
768 2 958 2 
870 2 1024 2 
765 2 390 2 
449 2 252 2 
857 2 1134 2 
520 2 484 2 
857 2 255 2 
449 2 694 2 
724 2 765 2 
1024 2 686 2 
1040 2 1013 2 737 2 484 2 
1040 2 1013 2 1089 2 737 2 484 2 
56 2 1013 2 484 2 
1013 2 227 2 484 2 
105 2 801 2 1279 2 1127 2 
1311 4 889 4 783 2 1234 2 842 2 52 2 705 2 481 2 1302 2 1006 2 776 2 528 2 922 2 312 2 364 2 979 2 726 2 453 6 
1013 2 233 2 
1281 2 
713 2 455 6 176 2 365 2 1021 2 1246 2 94 2 719 2 1250 2 627 4 181 2 873 2 376 2 875 2 9 2 466 2 12 2 1169 2 1173 2 289 4 802 2 953 2 387 2 295 26 1179 2 556 2 475 4 1183 2 561 6 563 2 209 2 650 2 888 2 1044 4 891 2 309 2 572 2 662 2 753 4 1050 2 576 2 907 2 578 2 1053 2 1282 2 671 2 498 2 412 2 329 2 1061 2 59 2 149 2 986 2 421 2 237 26 1071 2 1132 8 1214 2 240 6 774 4 1076 2 603 2 777 2 1221 2 1223 4 606 2 1307 4 75 2 1310 2 167 4 1091 2 1007 2 523 6 938 2 
713 2 455 6 176 2 1021 2 1246 2 1153 2 719 2 1250 2 627 4 181 2 873 2 376 2 875 2 9 2 466 2 12 2 1169 2 1173 2 289 4 802 2 953 2 387 2 295 26 880 2 1179 2 556 2 475 4 1183 2 561 6 563 2 209 2 650 2 888 2 1044 4 891 2 309 2 572 2 662 2 753 4 1050 2 576 2 900 2 907 2 578 2 1053 2 1282 2 671 2 498 2 412 2 1204 2 329 2 1061 2 59 2 149 2 986 2 421 2 237 26 1071 2 1132 8 1214 2 240 6 774 4 1076 2 603 2 777 2 1223 6 925 2 606 2 1307 4 75 2 1310 2 167 4 615 2 1091 2 1007 2 523 6 938 2 
998 2 
145 2 173 2 
92 2 1 2 267 2 578 2 409 2 719 2 673 4 181 2 1254 2 376 2 632 2 10 2 1131 2 187 8 1209 4 149 2 986 2 987 4 1291 2 64 2 421 2 152 2 732 2 385 2 237 12 1213 2 67 4 238 8 1297 2 239 2 68 2 295 6 1110 4 597 4 199 2 243 2 558 2 246 10 739 2 1266 2 207 2 27 2 514 2 561 4 1307 2 354 2 609 2 1269 2 32 4 1312 2 400 4 167 2 1088 2 258 6 933 6 1090 2 37 2 483 6 574 2 1147 2 
92 2 1 2 578 2 1199 2 409 2 719 2 673 4 181 2 1254 2 376 2 632 2 1131 2 187 8 1209 4 149 2 986 2 987 4 1291 2 64 2 421 2 152 2 732 2 385 2 237 12 1213 2 238 8 67 4 1297 2 156 2 239 2 68 2 295 6 1110 4 597 4 199 2 243 2 558 2 431 4 246 10 739 2 1266 2 207 2 27 2 514 2 561 4 1307 2 354 2 609 2 608 2 1269 2 32 4 1312 2 400 4 167 2 1088 2 258 8 933 6 1090 2 37 2 483 8 574 2 1147 2 
32 2 1312 2 199 2 400 2 243 2 1088 2 933 2 483 2 409 2 64 2 207 2 27 2 732 2 67 4 673 2 239 2 354 2 597 4 
92 2 1 2 267 2 578 2 409 2 719 2 673 4 181 2 1254 2 376 2 632 2 10 2 1131 2 187 4 1209 4 149 2 986 2 987 4 1291 2 64 2 421 2 152 2 732 2 385 2 237 12 1213 2 67 4 238 4 1297 2 239 2 68 2 295 6 1110 4 597 4 199 2 243 2 558 2 246 6 739 2 1266 2 207 2 27 2 561 4 1307 2 354 2 609 2 608 2 1269 2 32 4 1312 2 400 4 167 2 1088 2 258 6 933 4 1090 2 37 2 483 6 574 2 1147 2 
92 2 1 2 267 2 578 2 409 2 719 2 673 4 181 2 1254 2 376 2 632 2 10 2 1131 2 187 4 1209 4 149 2 986 2 987 4 1291 2 64 2 421 2 152 2 732 2 385 2 237 12 1213 2 67 4 238 4 1297 2 239 2 68 2 295 6 1110 4 597 4 199 2 243 2 558 2 246 6 739 2 1266 2 207 2 27 2 561 4 1307 2 354 2 609 2 128 2 1269 2 32 4 1312 2 400 4 167 2 1088 2 258 6 933 6 1090 2 37 2 483 4 574 2 1147 2 
92 2 1 2 267 2 578 2 409 2 719 2 673 4 181 2 1254 2 376 2 632 2 10 2 1131 2 187 8 1209 4 149 2 986 2 987 4 1291 2 64 2 421 2 152 2 732 2 385 2 237 12 1213 2 67 4 238 4 1297 2 239 2 68 2 295 6 1110 4 597 4 199 2 243 2 558 2 246 6 739 2 1266 2 207 2 27 2 514 2 561 4 1307 2 354 2 609 2 1269 2 32 4 1312 2 400 4 167 2 1088 2 258 6 933 6 1090 2 37 2 483 6 574 2 1147 2 
92 2 1 2 267 2 578 2 409 2 719 2 673 4 181 2 1254 2 376 2 632 2 10 2 1131 2 187 8 1209 4 149 2 986 2 987 4 1291 2 64 2 421 2 152 2 732 2 385 2 237 12 1213 2 67 4 238 8 1297 2 239 2 68 2 295 6 1110 4 597 4 199 2 243 2 558 2 246 10 739 2 1266 2 207 2 27 2 514 2 561 4 1307 2 354 2 609 2 128 2 1269 2 32 4 1312 2 400 4 167 2 1088 2 258 8 933 8 1090 2 37 2 483 6 574 2 1147 2 
92 2 1 2 267 2 578 2 409 2 719 2 673 4 181 2 1254 2 376 2 632 2 10 2 1131 2 187 8 1209 4 149 2 986 2 987 4 1291 2 64 2 421 2 152 2 732 2 385 2 237 12 1213 2 67 4 238 8 1297 2 239 2 68 2 295 6 1110 4 597 4 199 2 243 2 558 2 246 10 739 2 1266 2 207 2 27 2 514 2 561 4 1307 2 354 2 609 2 1269 2 32 4 1312 2 400 4 167 2 1088 2 258 6 933 6 1090 2 37 2 483 6 574 2 1147 2 
1015 6 176 2 526 1 1 2 1021 2 719 2 720 2 181 2 725 2 376 2 875 12 10 2 9 2 187 2 542 2 12 2 543 2 1173 2 14 2 385 2 732 2 1177 7 880 2 1179 4 199 2 552 2 881 6 200 6 556 2 558 2 1035 2 23 2 739 4 27 2 207 2 1183 2 561 6 563 2 1042 8 32 4 212 2 400 4 1043 6 1185 6 1044 2 1045 2 1046 1 37 2 570 6 1047 2 1191 6 574 2 1050 2 44 6 900 2 578 2 409 2 412 2 911 2 1061 2 1209 6 916 2 421 2 64 2 237 46 67 4 917 2 1071 2 1213 4 239 2 1215 7 1072 1 68 2 240 6 597 4 242 6 1216 1 243 2 246 2 777 2 1223 6 1083 2 609 2 611 2 75 2 254 1 1088 2 258 12 1090 2 933 8 1091 2 260 6 446 2 1093 2 787 4 938 2 455 6 92 2 93 6 1246 2 943 2 1250 2 794 1 627 4 949 2 279 2 1254 2 632 2 466 2 1260 2 289 4 802 2 638 1 295 24 1110 4 808 2 642 2 473 6 471 6 1266 4 475 4 301 1 128 4 1269 2 650 2 963 1 483 4 663 2 136 6 1282 2 498 2 673 4 983 2 1131 2 505 2 678 2 149 2 986 2 987 8 1291 2 152 2 1297 2 1132 4 155 2 1300 6 348 10 1142 6 699 4 851 2 1307 4 354 2 1310 2 355 2 1312 2 167 4 1007 2 708 2 523 8 1147 2 
1015 6 455 6 176 2 92 2 1 2 93 6 1021 2 1246 2 943 2 719 2 720 2 1250 2 627 4 181 2 949 2 725 2 279 2 1254 2 376 2 875 12 632 2 9 2 10 2 187 6 466 2 542 2 543 2 12 2 1260 2 289 4 1173 2 14 2 802 2 732 2 385 2 295 26 1110 4 880 2 1179 4 552 2 808 2 199 2 642 2 200 6 881 6 556 4 558 2 1035 2 23 2 471 6 473 6 644 2 739 4 1266 4 475 4 207 2 27 2 1183 2 561 6 563 2 1042 8 1269 2 650 2 212 2 32 4 1185 6 1043 6 400 4 1044 2 1045 2 37 2 570 6 483 8 1047 2 39 2 1191 6 753 2 663 2 1050 2 574 2 44 6 136 6 900 2 578 2 409 2 1282 2 498 2 911 2 412 2 673 4 1061 2 983 2 1131 2 678 2 505 2 1209 6 149 2 986 2 916 2 987 8 1291 2 64 2 421 2 152 2 237 48 1213 4 1071 2 917 2 1132 8 1297 2 67 4 155 2 239 2 68 2 240 6 597 4 242 6 1300 6 243 2 246 2 777 4 1223 6 348 10 1142 6 699 4 514 4 1083 2 851 2 1307 4 609 2 354 2 611 2 75 2 355 2 1310 2 1312 2 167 4 1088 2 258 12 933 8 1090 2 1007 2 1091 2 260 6 446 2 1093 2 708 2 787 4 523 8 938 4 1147 2 
1015 6 455 6 176 2 92 2 1 2 93 6 1021 2 1246 2 943 2 719 2 720 2 1250 2 627 4 181 2 949 2 725 2 279 2 1254 2 376 2 875 12 632 2 9 2 10 2 187 6 466 2 542 2 543 2 12 2 1260 2 289 4 1173 2 14 2 802 2 732 2 385 2 295 26 1110 4 880 2 1179 4 552 2 808 2 199 2 642 2 200 6 881 6 556 4 558 2 1035 2 23 2 471 6 473 6 644 2 739 4 1266 4 475 4 207 2 27 2 1183 2 561 6 563 2 1042 8 1269 2 650 2 212 2 32 4 1185 6 1043 6 400 4 1044 2 1045 2 37 2 570 6 483 8 1047 2 39 2 1191 6 753 2 663 2 1050 2 574 2 44 6 136 6 900 2 578 2 409 2 1282 2 498 2 911 2 412 2 673 4 1061 2 983 2 1131 2 678 2 505 2 1209 6 149 2 986 2 916 2 987 8 1291 2 64 2 421 2 152 2 237 48 1213 4 1071 2 917 2 1132 8 1297 2 238 4 67 4 155 2 239 2 68 2 240 6 597 4 242 6 1300 6 243 2 246 6 777 4 1223 6 348 10 1142 6 699 4 514 4 1083 2 851 2 1307 4 609 2 354 2 611 2 75 2 355 2 1310 2 1312 2 167 4 1088 2 258 12 933 8 1090 2 1007 2 1091 2 260 6 446 2 1093 2 708 2 787 4 523 8 938 4 1147 2 
1015 6 176 2 1 2 1021 2 719 2 181 2 725 2 376 2 875 10 10 2 9 2 186 2 540 2 187 6 542 2 12 2 543 2 1173 2 382 2 14 2 383 6 385 2 732 2 880 2 1179 4 199 2 552 2 553 6 881 6 200 12 556 4 558 2 1035 2 23 2 739 4 740 2 27 2 207 2 1183 4 561 6 563 4 1042 8 29 6 32 4 212 2 400 4 1043 6 1185 6 1044 4 1045 2 37 2 570 12 1047 2 39 2 1191 12 753 2 574 2 1050 2 44 12 900 2 578 2 409 2 412 2 911 2 1061 2 1209 6 916 2 421 2 64 2 237 52 67 4 238 4 917 2 1071 4 1213 4 239 2 68 2 240 8 597 4 242 12 243 2 1217 2 246 6 777 4 1223 6 434 2 1083 2 609 2 608 2 611 2 75 2 256 6 1088 2 258 16 1090 2 933 10 1091 2 260 12 446 2 1093 2 787 4 87 6 938 4 455 8 92 2 93 6 1246 2 943 2 1250 2 627 4 949 2 279 2 1254 2 632 2 103 6 466 2 1260 2 289 6 802 2 295 24 1110 4 808 2 642 2 473 6 471 6 644 2 1266 4 475 4 128 2 1269 2 650 4 483 10 661 2 663 2 665 6 136 6 1282 2 498 2 1284 6 673 4 983 2 1131 2 505 2 678 2 149 2 986 2 987 8 1291 2 334 2 152 2 1297 2 1132 10 155 2 1300 6 696 6 348 8 1142 6 514 4 699 4 851 2 1307 4 354 2 1310 2 355 2 1312 2 167 4 1007 2 708 2 523 12 1147 2 
199 2 1 2 246 4 1266 2 409 2 514 2 27 2 609 2 354 2 1269 2 32 4 632 2 1312 2 400 4 10 2 1088 2 258 4 187 6 1209 2 933 6 37 2 483 6 987 2 152 2 237 4 385 2 1297 2 238 4 67 2 239 2 68 2 574 2 1110 2 1147 2 597 2 
455 6 176 2 1 2 1021 2 1246 2 719 2 1250 2 720 2 627 4 181 2 376 2 875 4 632 2 10 2 9 2 187 6 466 2 12 2 1173 2 289 4 802 2 385 2 295 24 1110 2 880 2 1179 2 1030 3 199 2 297 2 1266 2 475 4 884 2 27 2 561 6 818 2 1269 2 650 3 32 4 400 4 1044 3 1186 2 37 2 483 6 1193 2 1050 2 574 2 1281 2 900 2 578 2 409 2 1282 2 498 2 412 2 1061 2 1209 2 148 2 149 2 986 2 987 2 421 2 152 2 237 28 1297 2 67 2 1071 3 239 2 68 2 240 6 597 2 1074 2 246 2 1223 6 348 2 514 2 1307 4 354 2 609 2 75 2 1312 2 167 4 1088 2 258 4 933 6 1090 2 1091 2 1007 2 523 8 789 2 1147 2 
231 2 1297 2 152 2 
231 2 1297 2 152 2 
455 2 176 2 92 2 1021 2 1246 2 719 2 1250 2 627 4 181 2 725 2 1254 2 376 2 875 4 539 2 187 6 380 2 466 2 542 2 12 2 1173 2 802 2 385 2 196 2 295 16 880 2 1110 2 1179 6 199 2 556 4 739 2 1266 4 475 4 393 2 561 6 817 2 128 4 32 4 1043 2 400 4 1044 2 401 2 819 2 483 12 659 2 1050 2 900 2 667 2 578 2 1282 2 671 4 498 2 911 2 412 2 673 4 1061 2 231 2 1209 4 1065 2 149 2 986 2 507 2 987 4 1291 2 64 2 421 2 152 4 237 24 426 2 1213 4 1132 4 1297 6 67 2 238 4 990 4 240 2 597 2 243 2 244 2 246 6 845 2 777 4 1305 2 1222 2 1223 6 348 2 1081 4 699 2 514 4 1307 4 608 4 75 2 1310 4 1312 4 167 4 1088 2 258 16 933 12 1091 2 1007 2 787 2 523 2 452 2 938 4 1147 2 
875 2 212 2 1043 2 539 2 421 2 348 2 207 2 787 2 393 2 74 2 834 2 237 4 196 2 396 2 155 2 295 2 145 2 
455 2 176 2 92 2 1021 2 1246 2 719 2 1250 2 271 2 627 4 723 2 181 2 725 2 1254 2 376 2 875 2 539 2 187 6 380 2 466 2 542 2 12 2 1173 2 802 2 385 2 196 2 295 16 1110 2 880 2 1179 6 199 2 556 4 739 4 1266 4 475 4 393 2 561 6 817 2 128 4 32 4 1043 2 400 4 1044 4 819 2 483 12 659 2 573 2 1050 2 900 2 578 2 1282 2 671 4 498 2 911 2 412 2 673 4 1061 2 231 2 1131 2 1209 4 149 2 986 2 507 4 987 4 1291 2 64 2 421 2 152 4 237 24 426 2 1213 4 1132 4 1297 6 67 2 238 4 990 4 240 2 597 2 243 2 244 2 246 6 775 2 777 4 1305 2 1222 2 1223 6 1081 4 699 2 514 4 1307 4 608 4 75 2 1310 4 1312 4 167 4 1088 2 258 16 933 12 1091 2 1007 2 444 2 523 2 452 2 938 4 1147 2 
455 2 176 2 92 2 1021 2 1246 2 719 2 1250 2 627 4 181 2 725 2 1254 2 376 2 875 4 539 2 187 6 380 2 466 2 542 2 12 2 1173 2 802 2 385 2 196 2 295 16 880 2 1110 2 1179 6 199 2 556 4 739 4 1266 4 475 4 393 2 561 6 817 2 128 4 32 4 1043 2 400 4 1044 2 819 2 1275 2 483 12 659 2 1050 2 575 2 901 2 900 2 578 2 1282 2 671 4 498 2 911 2 412 2 673 4 1061 2 231 2 1131 2 1209 4 149 2 986 2 507 2 987 4 1291 2 64 2 421 2 152 4 237 24 426 2 1213 4 1132 4 1297 6 67 2 238 4 990 4 240 2 597 2 243 2 244 2 246 6 777 4 1305 2 1222 2 1223 6 249 2 348 2 1081 4 699 2 514 4 1307 4 608 4 75 2 1310 4 1312 4 167 4 1088 2 258 16 933 12 1091 2 1007 2 1240 2 787 2 523 2 452 2 938 4 1147 2 
0 2 2 16 1021 2 718 4 719 2 721 2 722 6 372 2 373 2 4 2 376 2 729 2 9 2 378 2 11 2 12 2 13 20 382 4 14 2 16 14 17 2 733 2 1028 2 387 2 736 2 19 2 1029 2 1030 2 1033 2 389 180 22 2 1036 2 741 2 740 2 1039 2 742 2 743 4 392 2 394 1 747 2 746 2 28 20 1041 6 30 1 33 104 34 2 1044 70 36 2 749 2 1045 2 752 2 38 30 404 2 40 2 754 20 755 2 42 2 1050 8 756 2 48 2 51 2 407 3 1053 3 408 2 55 44 1057 2 410 4 1058 2 759 2 413 2 760 2 761 4 415 2 762 2 1061 4 763 2 58 2 417 2 416 2 418 2 1062 2 60 2 61 2 1063 4 419 2 420 2 1064 2 766 4 1068 2 421 2 1069 1 422 2 423 2 769 4 770 4 1071 46 428 4 429 2 1073 2 1074 2 69 2 70 9 71 2 430 2 1076 2 1078 1 433 52 778 14 434 2 1080 2 73 20 1083 2 1082 2 435 2 1085 8 75 2 1087 34 77 2 79 2 442 2 80 14 443 114 81 2 1092 2 82 2 446 2 1094 1 83 2 448 2 1096 228 450 2 788 4 84 2 85 2 451 2 789 2 89 2 1098 2 90 10 455 26 791 2 91 3 793 2 458 2 1100 4 459 24 96 2 95 18 98 2 460 24 99 4 796 2 1102 6 461 12 797 2 799 4 1103 12 463 2 464 2 465 2 106 2 1104 2 1108 6 1107 2 1109 2 804 1 109 4 110 24 111 2 805 2 806 2 468 2 113 1 114 44 807 2 116 22 115 2 117 2 118 18 119 22 1112 2 121 2 812 2 123 4 122 2 475 6 1113 2 124 2 813 2 476 16 1115 3 125 3 1116 2 477 1 814 3 1117 2 815 2 818 2 479 2 129 2 1118 12 132 3 820 74 482 2 1120 2 135 4 1122 2 134 22 489 2 821 2 822 2 139 2 493 2 494 2 825 1 140 4 496 4 142 2 1125 2 143 2 498 4 826 4 1128 2 500 24 828 20 827 2 501 4 829 2 146 22 147 2 830 68 831 2 503 2 832 4 505 2 149 2 150 2 833 2 154 6 508 2 1132 188 1133 2 157 4 838 2 839 8 509 2 840 44 1135 10 841 24 1136 2 1137 2 159 2 1138 3 843 16 512 2 847 2 1141 24 162 16 849 6 851 2 853 2 163 2 515 4 164 7 855 2 165 2 854 6 166 2 1143 2 518 2 167 6 521 2 169 10 522 2 861 2 523 90 862 2 863 2 866 2 1149 18 1150 24 176 8 177 2 1151 24 1152 18 529 2 1154 2 1156 2 1155 2 868 2 1157 12 530 2 1158 48 180 2 531 2 181 2 871 2 533 24 1162 24 1161 24 536 6 183 48 875 4 185 12 537 3 1168 2 1167 2 1166 2 877 2 540 2 190 2 541 4 1170 2 1172 6 191 2 1174 2 878 2 194 2 546 44 1178 15 548 2 879 20 880 6 1179 2 551 2 554 5 555 2 198 2 552 2 557 24 203 2 883 2 884 2 885 44 1182 2 560 2 1184 2 1183 46 561 8 562 2 563 60 887 2 210 34 211 2 564 2 565 2 566 4 567 2 891 2 1188 6 1189 2 569 3 572 2 1192 8 898 2 217 2 218 14 1195 2 219 3 220 2 899 8 900 6 903 2 908 2 907 2 221 3 578 2 222 2 579 2 223 16 580 2 910 2 224 2 581 2 1201 2 582 102 1202 20 584 2 1203 2 586 2 1205 8 229 10 230 2 913 14 589 2 1207 3 591 2 914 4 1211 10 915 2 592 2 234 2 235 2 237 113 595 2 917 2 1214 54 240 14 241 2 600 2 599 2 598 6 601 2 918 2 919 2 602 2 245 1 1217 2 247 2 1219 48 603 2 1223 14 923 30 1225 2 251 2 605 2 1226 2 606 2 927 44 1227 2 1229 10 610 2 1230 2 253 18 611 4 928 2 613 14 930 2 931 2 1237 2 261 20 934 10 262 2 935 1 619 2 936 2 937 3 264 4 939 2 1241 8 1242 24 621 2 622 10 1243 2 623 2 1244 1 266 16 624 3 1245 24 941 2 1246 4 1248 1 269 2 270 24 1250 2 1249 80 626 24 627 6 273 1 948 1 274 2 275 2 1253 2 277 2 628 2 278 10 630 6 280 2 281 2 283 20 284 2 1256 2 1257 2 1258 3 1259 5 634 24 286 2 636 3 1260 10 287 52 290 2 289 12 291 2 953 2 1261 2 1262 104 639 4 295 68 294 2 640 156 1265 4 954 20 645 20 646 90 955 2 1268 1 647 2 649 6 650 16 302 2 304 2 961 2 1274 3 653 2 306 3 1276 2 964 2 307 2 657 2 310 2 661 2 966 2 315 24 317 2 968 102 318 18 319 2 970 16 321 44 972 6 322 20 323 2 668 2 1282 2 975 2 327 2 674 2 978 50 981 2 982 2 332 2 1287 40 1288 3 677 2 678 10 986 2 1290 2 988 4 334 2 337 2 1294 2 683 2 341 2 1298 2 991 2 688 34 993 4 690 24 994 2 342 2 343 2 695 6 996 2 995 24 345 2 344 2 698 4 347 2 350 10 1307 6 353 3 1309 4 1003 3 1310 10 703 2 1005 2 356 6 707 2 1007 2 360 44 1008 4 1009 4 708 2 1012 4 1014 2 1316 2 712 48 
455 2 1220 2 1182 2 1183 6 350 2 1227 2 1253 2 628 2 129 2 650 2 211 2 229 2 537 2 9 2 1044 2 934 4 289 2 237 2 217 2 1071 2 1122 2 523 2 240 2 295 2 
455 2 1220 2 1182 2 1183 6 350 2 1227 2 1253 2 628 2 129 2 650 2 211 2 229 2 537 2 9 2 1044 2 934 4 289 2 237 2 217 2 1071 2 1122 2 523 2 240 2 295 2 
455 2 1220 2 1182 2 1183 6 350 2 1227 2 1253 2 628 2 129 2 650 2 211 2 229 2 537 2 9 2 1044 2 934 4 289 2 237 2 217 2 1071 2 1122 2 523 2 240 2 295 2 
841 3 116 4 1150 3 119 4 318 4 715 2 921 2 846 2 1265 2 1157 2 722 2 582 2 1227 2 854 2 500 4 649 4 782 2 536 2 1087 2 185 2 1103 2 146 4 9 2 1118 2 1044 3 285 2 259 2 654 2 751 3 1108 2 1009 2 680 4 292 2 237 10 1071 3 112 2 134 4 523 2 295 4 968 6 
1150 2 318 4 715 2 1157 2 722 2 582 2 500 4 630 2 536 2 1103 2 185 2 146 4 9 2 285 2 1108 2 680 4 292 2 237 10 1071 2 112 2 295 4 841 2 116 4 119 4 921 2 1265 2 846 2 746 2 1227 2 649 4 854 2 1087 2 782 2 1118 2 1044 2 259 2 654 2 751 2 169 2 1009 2 523 2 134 4 968 6 
1150 2 318 4 715 2 1157 2 722 2 582 2 500 4 630 2 536 2 1103 2 185 2 146 4 9 2 285 2 1108 2 680 4 292 2 237 10 1071 2 112 2 295 4 841 2 116 4 119 4 921 2 1265 2 846 2 746 2 1227 2 649 4 854 2 1087 2 782 2 1118 2 1044 2 259 2 654 2 751 2 169 2 1009 2 523 2 134 4 968 6 
1150 2 318 4 715 2 1157 2 722 2 582 2 500 4 630 2 536 2 1103 2 185 2 146 4 9 2 285 2 1108 2 680 4 292 2 237 10 1071 2 112 2 295 4 841 2 116 4 119 4 921 2 1265 2 846 2 746 2 1227 2 649 4 854 2 1087 2 782 2 1118 2 1044 2 259 2 654 2 751 2 169 2 1009 2 523 2 134 4 968 6 
1150 2 318 4 715 2 1157 2 722 2 582 2 500 4 630 4 536 2 1103 2 185 2 146 4 9 2 285 2 1108 2 680 4 292 2 237 10 1071 2 112 2 295 4 841 2 116 4 119 4 921 2 1265 2 846 2 746 4 1227 2 649 4 854 2 1087 2 782 2 1118 2 1044 2 259 2 654 2 751 2 169 4 1009 2 523 2 134 4 968 6 
102 2 1017 2 374 2 1214 2 472 2 462 2 1092 2 
469 2 1017 2 1163 2 992 2 204 2 
525 2 689 2 510 2 809 1 823 1 1218 2 248 2 369 2 1306 1 744 2 795 1 956 2 181 2 104 2 358 2 892 2 785 1 107 2 1171 2 1292 2 682 2 237 10 340 2 772 2 295 8 242 2 
899 2 198 2 318 12 941 2 140 2 670 1 849 4 410 2 722 6 746 2 1102 4 500 15 854 6 649 4 536 6 630 3 631 2 1103 6 185 6 1118 6 420 2 656 2 169 4 1108 6 1009 2 237 6 770 2 427 2 451 2 295 6 864 2 
116 2 146 2 119 2 1273 2 882 2 366 2 985 2 432 4 1123 1 205 2 487 7 411 2 237 1 664 2 100 2 639 2 711 2 295 1 
116 2 146 2 119 2 1273 2 882 4 366 2 985 2 432 4 205 2 487 6 411 2 664 2 100 2 639 4 711 4 
116 2 146 2 119 2 1273 2 882 8 366 2 985 2 432 4 1123 1 205 8 487 10 411 6 237 1 664 2 100 2 639 8 711 8 295 1 
116 2 146 2 119 2 1273 2 882 2 366 2 985 2 432 2 487 2 664 2 100 2 639 2 711 2 
790 16 1018 4 940 6 367 4 1020 2 1246 14 627 112 1159 4 950 34 629 10 101 8 534 26 535 18 876 22 189 4 467 6 192 24 637 2 1175 24 195 2 386 2 295 134 547 124 880 58 197 11 1031 4 201 6 120 24 1181 8 1037 36 1038 6 298 84 559 6 475 88 206 12 742 8 26 26 1184 8 478 42 816 10 31 4 1270 6 130 6 748 4 960 4 961 8 1119 6 35 90 893 4 213 10 308 50 965 10 1048 2 215 4 895 4 1194 4 216 6 897 2 488 16 406 6 1197 6 1051 4 492 4 900 58 53 4 54 6 909 4 973 17 1056 1 225 2 498 14 325 4 672 6 912 10 1206 2 1061 8 1210 2 333 2 1212 18 62 8 1066 10 151 2 232 16 66 4 1293 6 237 150 236 6 1296 2 771 90 684 10 835 2 158 8 691 4 920 8 693 8 160 6 697 24 1304 12 346 16 1223 248 351 6 1000 2 352 4 1228 2 1231 6 517 42 438 24 439 4 1235 2 440 5 78 6 1236 24 706 2 441 10 1239 2 168 6 616 4 859 28 860 4 1010 92 362 6 617 2 170 4 363 6 263 8 88 2 265 4 524 6 
1280 2 790 2 900 3 902 2 1018 2 1019 2 716 4 54 2 1246 2 944 2 527 2 141 2 669 2 179 2 1200 2 498 2 627 12 583 2 758 2 57 2 980 2 1255 2 1206 2 1061 2 62 2 952 2 232 2 192 2 1293 2 293 2 237 28 386 2 596 2 685 2 837 2 295 28 547 2 880 3 1301 2 120 2 1075 2 844 2 697 2 346 2 1223 27 475 12 559 2 742 2 926 4 1184 2 701 2 130 2 440 2 961 2 706 2 856 4 660 2 859 20 1048 2 41 2 486 2 
790 10 367 4 940 4 1246 6 178 16 179 2 1251 4 627 44 101 4 950 30 629 4 535 10 375 4 1026 4 538 32 189 4 467 4 637 2 386 2 295 70 547 24 880 28 1263 10 1031 4 296 2 1037 6 1038 4 811 2 298 24 559 2 475 36 206 14 742 2 1267 2 1184 2 478 8 208 4 31 4 1270 4 748 4 130 4 961 2 568 8 893 4 213 4 214 16 308 8 965 6 1048 2 895 2 1278 8 1194 4 216 4 488 8 406 4 1197 4 1051 4 900 30 138 8 54 4 973 10 325 4 498 6 672 4 1206 2 1061 2 764 10 1210 2 333 2 1289 10 1067 2 232 10 593 2 336 8 1293 4 237 78 236 4 1296 2 684 4 158 6 693 4 160 4 513 2 346 10 1223 104 924 2 349 2 351 4 1231 4 517 16 1235 2 1236 8 78 4 706 2 1145 4 441 4 359 4 168 4 616 4 859 14 860 4 1010 24 362 4 170 4 363 4 1148 4 524 4 
790 6 900 12 53 2 367 2 1020 2 54 4 1246 2 973 2 225 2 179 2 498 2 627 14 629 2 950 6 535 2 1206 2 1061 2 876 10 151 2 232 6 1293 4 637 2 237 28 386 2 835 2 684 2 295 26 547 8 880 12 197 2 158 4 693 4 1181 2 1037 2 346 6 1223 40 475 14 559 2 742 2 1184 2 1228 2 76 2 130 4 440 2 78 4 961 2 706 2 441 2 213 2 859 14 965 2 1048 2 895 2 170 2 216 4 897 2 488 6 265 2 406 4 
328 2 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR utilMDE.Assert$AssertionException (764,1021) (764,1021) (8,17,324,805,1009) (8,17,324,805,1009) (8,17,324,805,1009) 
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 578 617 28 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V ERROR java.lang.NullPointerException 143 407 
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 87 751 836 
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_120()Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
utilMDE.ArraysMDE:fn_compose([I[I)[I
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.Invariant:logOn()Z
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern:internSubsequence([JII)[J
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;)V
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
daikon.inv.ValueSet:ValueSet(I)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
utilMDE.MathMDE:pow(II)I
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Quant:eltsLT([II)Z
daikon.test.InvariantFormatTester:execute()Z
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.PptTopLevel:name()Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
utilMDE.MathMDE:pow_fast(II)I
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.VarInfo:esc_name()Ljava.lang.String; | STATEMENT | 100148 | stmt -> ;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
utilMDE.ArraysMDE:sum([[I)I
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_163()Z
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:eltsLTE([II)Z
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
jtb.JavaCharStream:getBeginLine()I
daikon.Quant:pairwiseGT([I[I)Z
utilMDE.Intern:numIntArrays()I
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
jtb.JavaParser:jj_3_1()Z
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.diff.Node:add(Ljava.lang.Object;)V
jtb.JavaParser:jj_2_3(I)Z
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_2_25(I)Z
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.Quant:eltsLteIndex([I)Z
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quant:lexLTE([I[I)Z
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
utilMDE.MathMDE:gcd(JJ)J
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.ProglangType:isPseudoArray()Z
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.Debug:logDetail()Z
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
daikon.Quant:eltsNotEqual([II)Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.MathMDE:negate(I)I
utilMDE.ArraysMDE:subarray([III)[I
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
jtb.JavaParser:jj_3_13()Z
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
daikon.Quant:noDups([I)Z
jtb.JavaParser:jj_2_16(I)Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_88()Z
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
utilMDE.FuzzyFloat:gte(DD)Z
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker; | ASSIGN | 1095 | = null
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.Quant:subsetOf([J[J)Z
jtb.JavaParser:jj_3R_77()Z | STATEMENT | 172318 | stmt -> ;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3_36()Z
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
utilMDE.Intern:internSubsequence([III)[I
daikon.Quant:eltwiseGT([I)Z
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
utilMDE.FuzzyFloat:gt(DD)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
utilMDE.Intern:intern([D)[D
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.Quant:setEqual([I[I)Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.Quant:subsetOf([F[F)Z
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.inv.unary.LowerBoundCore:computeProbability()D
jtb.JavaParser:jj_3_12()Z
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
jtb.JavaParser:jj_3R_49()Z
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
jtb.JavaParser:jj_2_13(I)Z
jtb.JavaParser:jj_3_30()Z
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.Quant:eltsLtIndex([I)Z
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.inv.filter.ObviousFilter:ObviousFilter()V
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:memberOf(J[J)Z
daikon.Quant:eltsGtIndex([I)Z
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_86()Z
daikon.Quant:subsetOf([I[I)Z
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
utilMDE.FuzzyFloat:eq(DD)Z
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName; | RETURN | 3858 | return null
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.inv.Invariant:getConfidence()D
jtb.JavaParser:jj_3_5()Z
utilMDE.OrderedPairIterator:setnext2()V
utilMDE.WeakHasherMap:processQueue()V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
jtb.JavaParser:jj_3R_85()Z
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant:logDetail()Z
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([I[II)Z
utilMDE.MathMDE:sign(I)I
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
utilMDE.ArraysMDE:sum([I)I
daikon.VarInfoName:hashCode()I
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.NodeToken:trimSpecials()V
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
utilMDE.FuzzyFloat:ne(DD)Z
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.diff.InvMap:toString()Ljava.lang.String;
jtb.JavaParser:jj_3R_69()Z
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_56()Z
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.ProglangType:isScalar()Z
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.diff.Node:children()Ljava.util.Iterator;
jtb.JavaParser:jj_3R_51()Z
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.Quant:pairwiseDivides([I[I)Z
jtb.JavaParser:jj_3R_114()Z
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.ProglangType:dimensions()I
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:eltsEqual([II)Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfo:esc_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
jtb.JavaParser:jj_2_21(I)Z
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:lexGTE([I[I)Z
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
jtb.JavaParser:jj_2_5(I)Z
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:set_rel_diff(D)V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.Quant:subsetOf([D[D)Z
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.VarInfoName:repr()Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_161()Z
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
utilMDE.OrderedPairIterator:hasNext()Z
jtb.JavaParser:jj_3R_58()Z
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
jtb.JavaParser:jj_scan_token(I)Z
daikon.Quant:subsetOf([D[F)Z
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_50()Z
daikon.Quant:eltwiseEqual([I)Z
daikon.Quant:union([I[I)[I
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.Quant:slice([III)[I
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
utilMDE.FuzzyFloat:FuzzyFloat()V
utilMDE.WeakHasherMap:size()I
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptSlice1:num_samples()I
jtb.JavaParser:jj_3R_148()Z
jtb.JavaParser:jj_3R_55()Z
jtb.JavaParser:jj_3R_97()Z
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
jtb.JavaParser:jj_3R_63()Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:mod_positive(II)I
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.Quant:intersection([I[I)[I
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
utilMDE.ArraysMDE:sum([D)D
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
utilMDE.ArraysMDE:concat([I[I)[I
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
jtb.JavaParser:jj_2_29(I)Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
jtb.JavaParser:jj_3R_123()Z
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.VarInfo:relate_var()V
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
jtb.JavaParser:jj_3R_47()Z
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
utilMDE.ArraysMDE:element_range([I)I
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_115()Z
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:lexGT([I[I)Z
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.LimitedSizeIntSet:size()I
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_87()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
jtb.JavaParser:jj_3_35()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.Quant:ne(II)Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltwiseLT([I)Z
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant:isWorthPrinting()Z
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.ProglangType:isIntegral()Z
jtb.JavaCharStream:GetImage()Ljava.lang.String;
utilMDE.ArraysMDE:sum([[D)D
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
utilMDE.OrderedPairIterator:setnext1()V
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
jtb.JavaCharStream:UpdateLineColumn(C)V
utilMDE.FuzzyFloat:lte(DD)Z
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.inv.Invariant:prob_or(DD)D
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.diff.Node:Node(LutilMDE.Pair;)V
jtb.JavaParser:jj_3_29()Z
daikon.Quant:memberOf(D[F)Z
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariants:Invariants()V
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
jtb.JavaParser:jj_3R_57()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
jtb.JavaCharStream:ReadByte()C
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.Quant:pairwiseEqual([I[I)Z
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
daikon.inv.unary.LowerBoundCore:calc_range()J
jtb.JavaParser:jj_2_28(I)Z
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.Quant:subsetOf([S[S)Z
utilMDE.Intern:intern([J)[J
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_76()Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.Quant:gt(II)Z
daikon.VarInfoName:simplify_name()Ljava.lang.String;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
jtb.syntaxtree.NodeList:NodeList()V
jtb.JavaParser:jj_3R_53()Z
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:generateParseException()Ljtb.ParseException;
jtb.JavaParser:jj_3R_133()Z
jtb.JavaCharStream:BeginToken()C
jtb.JavaParser:jj_3_16()Z
utilMDE.Intern.SequenceAndIndices:hashCode()I
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
jtb.JavaCharStream:getEndColumn()I
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
jtb.JavaParser:jj_2_15(I)Z
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
jtb.JavaParser:jj_3_4()Z
daikon.Quant:eltsGteIndex([I)Z
daikon.inv.filter.InvariantFilter:InvariantFilter()V
jtb.JavaParser:jj_2_10(I)Z
daikon.Quant:gte(II)Z
jtb.ParseException:ParseException(Ljava.lang.String;)V
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.Quant:pairwiseLT([I[I)Z
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:max([I)I
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.JavaParser:jj_3R_62()Z
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.Quant:eltsGT([II)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.VarInfo:name()Ljava.lang.String;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParserTokenManager:jjStopAtPos(II)I
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
jtb.JavaParser:jj_3_25()Z
jtb.JavaParser:jj_3_3()Z
daikon.diff.RootNode:RootNode()V
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:calc_range()J
jtb.JavaParser:jj_3R_61()Z
daikon.Debug:logOn()Z
daikon.test.FormatTestCase:passes()Z
daikon.PptSlice0.ImplicationWrapper:hashCode()I
jtb.JavaParser:jj_3R_118()Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
jtb.JavaParser:jj_3_22()Z
daikon.inv.Invariant:prob_and(DDD)D
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:sameLength([I[I)Z
daikon.VarInfoName:name()Ljava.lang.String;
daikon.Quant:eq(FF)Z
jtb.JavaParser:jj_3R_75()Z
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParser:jj_3R_122()Z
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([I[I)I
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.LimitedSizeIntSet:add(I)V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
jtb.JavaParser:jj_2_27(I)Z
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.ArraysMDE:indexOf([II)I
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3_28()Z
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:calc_modulus()J
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:subsetOf([F[D)Z
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
jtb.JavaParser:jj_2_14(I)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_162()Z
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.PptSlice0:initInvariantsSeen()V
utilMDE.MathMDE:gcd(II)I
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.VarComparabilityImplicit:alwaysComparable()Z
jtb.JavaCharStream:getEndLine()I
utilMDE.ArraysMDE:sorted([I)Z
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:memberOf(F[D)Z
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.Quant:lt(II)Z
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.Quant:eltwiseLTE([I)Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.PptSlice1:arity()I
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.ModBitTracker:ModBitTracker(I)V
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
utilMDE.MathMDE:modulus([I)[I
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.VarInfoName.ElementsFinder:inPre()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
jtb.JavaParser:jj_3R_117()Z
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
jtb.JavaParser:jj_2_1(I)Z
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:lexEqual([I[I)Z
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
jtb.JavaCharStream:FillBuff()V
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
jtb.JavaParser:jj_3_14()Z
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
utilMDE.ArraysMDE:min_max([I)[I
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
daikon.inv.Invariant:justified()Z
daikon.PptSlice2:arity()I
utilMDE.WeakHasherMap.EntrySet:size()I
utilMDE.ArraysMDE:min([I)I
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.inv.Invariant:prob_and(DD)D
daikon.Quant:eltsEqualIndex([I)Z
daikon.Quant:lexNotEqual([I[I)Z
daikon.Quant:subsetOf([B[I)Z
jtb.JavaParser:jj_3R_54()Z
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
jtb.JavaParser:jj_3R_81()Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.JavaCharStream:backup(I)V
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.Quant:eq(II)Z
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
jtb.JavaParser:jj_3_21()Z
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.JavaParser:jj_2_36(I)Z
jtb.JavaParser:jj_3R_96()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.PptName:isCombinedExitPoint()Z
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.PptName:isEnterPoint()Z
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.InvMap:InvMap()V
jtb.JavaParser:jj_3R_135()Z
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.Quant:eltsNotEqualIndex([I)Z
jtb.JavaParser:jj_3R_121()Z
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.PptSlice0:arity()I
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.Quant:setDiff([I[I)[I
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
utilMDE.ArraysMDE:fn_identity(I)[I
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.OutputFormat:toString()Ljava.lang.String;
jtb.JavaParser:jj_3R_134()Z
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.diff.Node:Node()V
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ProglangType:baseIsScalar()Z
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant; | RETURN | 7501 | return null
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
jtb.JavaParser:jj_2_12(I)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.Quant:pairwiseSquare([I[I)Z
jtb.JavaParser:jj_ntk()I
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
jtb.JavaParser:jj_3R_80()Z
daikon.Quant:memberOf(I[I)Z
jtb.JavaParser:jj_2_35(I)Z
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ValueTuple:tuplemodHasModified(I)Z
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_48()Z
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.Quant:eltwiseGTE([I)Z
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3_15()Z
jtb.JavaCharStream:getBeginColumn()I
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
utilMDE.MathMDE:nonmodulus_strict([I)[I
utilMDE.ArraysMDE:noDuplicates([D)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_119()Z
daikon.VarInfoName:isLiteralConstant()Z
utilMDE.Options.OptionInfo:argument_required()Z
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
utilMDE.ArraysMDE:subarray([JII)[J
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_60()Z
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.Quant:pairwiseLTE([I[I)Z
daikon.Quant:isReverse([I[I)Z
utilMDE.Intern:intern([I)[I
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_89()Z
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.Quant:lexLT([I[I)Z
jtb.ParseException:getMessage()Ljava.lang.String;
daikon.config.Configuration.ConfigException:ConfigException(Ljava.lang.String;Ljava.lang.Throwable;)V
utilMDE.MathMDE:gcd([I)I
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
utilMDE.FuzzyFloat:indexOf([DD)I
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.Quant:eltsGTE([II)Z
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:PrimarySuffix()Ljtb.syntaxtree.PrimarySuffix;
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
utilMDE.Fmt:i(I)Ljava.lang.Integer;
jtb.JavaParser:jj_3R_52()Z
daikon.inv.unary.UpperBoundCore:calc_modulus()J
jtb.JavaParser:jj_3_10()Z
daikon.ProglangType:isArray()Z
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
jtb.JavaParser:jj_3_27()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.Ppt:Ppt()V
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.VarInfo:new_ppt()V
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.JavaParser:jj_2_30(I)Z
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
jtb.Token:newToken(I)Ljtb.Token;
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eq(JJ)Z
utilMDE.FuzzyFloat:lt(DD)Z
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
utilMDE.MathMDE:missing_numbers([I)[I
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.Quant:eltwiseNotEqual([I)Z
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.Quant:eq(DD)Z
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.FuzzyFloat:indexOf([D[D)I
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaCharStream:readChar()C
utilMDE.Assert:assertTrue(Z)V
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_68()Z
jtb.JavaParser:jj_3R_116()Z
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:jj_2_4(I)Z
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
utilMDE.WeakIdentityHashMap:indexFor(II)I
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
utilMDE.MathMDE:gcd_differences([I)I
daikon.Quant:concat([I[I)[I
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Quant:memberOf(F[F)Z
daikon.Quant:memberOf(S[S)Z
daikon.ProglangType:baseIsIntegral()Z
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:lte(II)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
296 2 1021 2 616 2 518 2 609 2 440 4 98 2 170 2 764 2 
348 2 224 6 424 2 721 2 113 2 501 2 114 2 1018 6 508 2 894 2 465 6 
889 4 439 4 985 2 1032 6 165 2 1021 2 694 6 792 6 343 2 679 6 689 2 91 2 764 2 
853 2 1013 30 85 16 919 2 861 16 11 10 1021 6 117 4 323 2 929 6 14 2 284 26 155 2 764 6 253 2 529 8 334 12 500 6 225 10 408 10 226 16 377 10 341 10 200 8 102 4 707 8 810 4 387 2 711 8 269 4 
851 6 664 4 
983 2 
1013 6 666 2 85 2 861 2 11 4 929 2 284 4 762 2 366 2 732 2 734 2 127 2 334 2 408 2 225 2 226 2 133 2 377 2 341 2 742 2 76 2 707 2 269 2 
328 2 969 4 1013 14 738 4 85 8 334 5 408 4 225 4 226 8 861 8 377 4 581 6 341 4 263 6 810 2 708 2 284 12 
393 14 41 2 425 4 236 2 238 8 791 4 722 4 116 2 486 62 924 2 696 2 871 2 586 4 614 2 254 2 898 2 556 4 557 4 470 4 21 2 833 2 873 4 702 10 651 4 972 2 532 2 1002 2 67 2 592 4 445 4 596 2 1034 4 945 2 907 2 661 10 781 2 910 2 388 4 568 2 663 6 
915 2 983 2 274 2 279 2 326 2 131 2 879 2 507 2 811 2 270 2 
912 4 667 4 425 2 670 2 920 2 353 2 213 2 276 2 548 2 722 4 10 2 362 2 613 2 733 2 736 2 622 2 623 4 104 2 36 2 954 2 518 2 44 2 238 2 638 2 47 2 401 2 960 2 1021 4 817 2 50 2 819 2 462 2 764 4 188 2 253 2 1028 2 258 2 473 2 774 2 135 2 596 2 840 2 911 2 418 2 
630 2 208 2 1013 54 85 32 1016 6 753 2 150 2 858 2 430 4 240 6 861 32 1021 4 581 6 11 6 182 8 489 6 929 4 284 48 764 4 969 4 683 4 738 4 334 22 500 4 408 16 225 16 226 32 65 2 377 16 341 16 200 6 263 6 707 18 384 4 168 4 266 6 387 2 269 2 844 4 
238 2 532 2 663 2 
950 2 468 2 994 2 163 2 273 10 473 2 333 2 545 2 1017 2 132 2 379 2 262 2 219 22 567 2 
850 1 420 4 603 2 426 1 483 2 275 2 673 1 8 2 864 1 676 2 727 2 283 2 728 1 359 2 286 2 363 4 17 2 931 1 19 2 288 2 731 2 220 2 737 2 293 2 560 2 296 2 228 2 944 1 809 1 447 4 448 4 451 1 953 2 459 2 577 2 690 2 115 1 961 1 460 2 1021 21 760 2 322 2 324 2 54 2 643 1 825 4 827 2 764 23 469 2 834 1 123 2 970 6 259 4 973 2 340 6 1036 4 479 4 1037 2 412 2 1040 2 78 1 712 1 
471 2 
554 2 764 2 
743 2 590 2 764 4 
786 4 4 8 789 2 278 10 790 6 547 4 9 2 282 4 281 2 551 2 797 2 798 2 18 2 20 4 290 4 292 2 295 2 563 2 30 2 29 2 807 2 32 2 566 22 813 4 307 14 570 2 571 2 308 2 309 2 313 2 43 42 576 4 314 2 816 4 319 2 49 48 580 8 582 2 320 2 821 8 824 14 823 2 56 4 57 2 832 2 59 2 589 2 591 2 339 16 72 24 74 48 841 4 77 2 344 2 345 4 847 4 349 4 601 2 83 4 350 2 854 2 604 8 351 186 84 2 859 2 88 2 862 2 355 4 90 2 361 48 611 36 870 2 93 2 619 2 875 26 620 4 374 6 375 4 376 6 881 2 621 4 883 2 383 2 629 2 390 16 392 8 111 2 888 2 634 12 890 4 399 2 892 4 404 14 649 2 650 4 122 8 124 2 406 2 126 4 901 2 129 2 902 48 130 2 409 8 410 48 137 2 906 4 657 2 658 4 413 20 139 2 909 2 913 8 422 4 918 48 669 48 149 2 428 2 151 2 153 2 922 2 923 16 926 2 933 2 160 2 162 22 164 8 442 2 443 10 943 2 444 2 946 38 449 2 951 48 454 14 959 2 691 2 180 6 461 22 962 4 464 2 964 6 186 4 966 2 967 4 467 146 189 4 968 28 190 2 192 4 704 8 475 2 196 2 975 2 199 14 706 4 710 20 714 2 716 2 982 2 719 2 720 8 211 26 984 2 484 48 214 2 485 4 487 146 725 2 990 2 989 48 729 2 991 2 223 2 494 2 496 2 999 2 741 2 506 8 1010 2 231 2 747 4 513 2 234 2 750 2 752 48 239 36 756 2 241 2 1020 146 521 2 242 4 522 4 759 2 244 2 1023 6 1024 8 1026 2 525 2 526 4 527 48 255 2 767 2 528 4 260 2 530 2 531 48 533 2 534 20 1033 2 535 2 776 2 538 2 777 4 540 2 267 2 780 2 
365 1 768 2 598 2 346 2 
768 2 820 2 
882 2 749 2 117 2 768 2 947 2 397 2 238 2 
882 2 173 2 768 2 
215 2 882 2 768 2 
928 2 598 2 450 2 
882 2 768 2 
302 2 450 2 
768 2 112 2 
598 2 492 2 450 2 
543 2 539 2 598 2 
516 2 927 2 598 2 
75 2 598 2 1044 2 
158 2 684 2 598 2 
356 2 450 2 
1005 2 768 2 
455 2 539 2 
686 2 516 2 
156 2 1044 2 
684 2 896 2 
744 2 450 2 
536 2 684 2 
210 2 1044 2 
95 2 516 2 
539 2 205 2 
598 2 492 2 713 2 450 2 
745 2 598 2 492 2 713 2 450 2 
294 2 598 2 450 2 
874 2 598 2 450 2 
782 2 389 2 1012 2 370 2 
749 2 1035 2 403 2 238 2 
749 2 1035 2 403 2 947 2 357 2 238 2 
882 2 830 2 749 2 117 2 768 2 238 2 
125 2 44 2 
749 2 117 2 238 2 360 2 
555 2 1044 2 
952 2 684 2 
539 2 27 2 
58 2 516 2 
942 2 684 2 516 2 
101 2 684 2 516 2 
434 2 684 2 516 2 
317 2 684 2 516 2 
391 2 715 2 749 2 672 6 238 2 869 2 330 6 558 2 
784 2 450 2 
746 2 600 2 209 2 682 2 993 2 175 2 148 4 635 2 352 2 6 2 499 2 335 2 476 2 219 6 1008 4 1038 2 1039 2 364 2 
569 2 598 2 
953 2 
420 4 275 2 546 2 152 4 921 2 676 2 283 2 553 2 930 2 286 6 19 2 685 2 293 2 559 2 441 2 560 2 296 2 562 8 166 2 565 2 688 2 447 3 448 5 37 4 312 2 690 2 577 2 316 2 579 2 460 6 321 2 322 2 54 2 825 3 827 2 585 2 469 2 831 2 970 6 587 2 973 2 340 4 595 2 479 4 709 2 599 8 206 2 727 2 359 2 220 2 367 3 737 2 997 2 372 2 998 2 228 2 232 2 1011 2 886 2 519 2 1021 26 760 2 243 2 1022 2 764 26 123 2 1029 2 259 4 769 2 1036 4 412 2 660 2 1040 6 908 4 542 4 1043 2 
420 4 275 2 546 2 152 2 921 2 676 2 283 2 553 2 286 6 288 2 19 2 936 2 685 2 293 2 559 2 441 2 560 2 296 2 562 8 166 2 688 2 447 2 448 4 37 4 312 2 459 2 690 2 577 2 316 2 579 2 460 6 321 2 322 2 54 2 825 2 827 2 585 2 469 2 831 2 970 6 587 2 973 2 340 6 595 2 479 4 599 8 206 2 855 2 727 2 866 2 359 2 220 2 367 2 737 2 997 2 371 2 372 2 998 2 228 2 232 2 1011 2 886 2 519 2 1021 26 760 2 243 2 1022 2 764 26 123 2 1029 2 259 4 769 2 1036 4 412 2 660 2 1040 6 908 4 542 4 1043 2 
626 2 
437 2 26 2 
146 2 348 2 572 4 512 2 174 2 289 2 421 2 852 4 224 2 424 2 815 2 336 2 941 2 986 2 564 2 490 2 185 2 465 2 
419 2 146 2 348 4 717 2 421 2 852 4 424 4 272 2 275 2 986 2 607 2 89 4 727 2 490 2 796 2 359 2 157 2 289 4 224 6 996 2 803 2 941 2 1001 4 501 2 564 2 808 2 687 2 509 2 35 6 511 4 572 4 394 2 512 2 174 2 40 2 957 2 815 2 754 4 690 2 1018 6 1021 6 818 2 894 2 465 4 185 2 827 2 764 12 700 2 469 2 123 2 970 4 474 4 336 2 705 2 1036 2 479 2 779 2 268 2 417 2 347 2 
419 2 146 2 348 4 717 2 421 2 852 4 424 4 272 2 275 2 986 2 607 2 89 4 727 2 490 2 796 2 359 2 157 2 289 4 224 4 996 2 803 2 941 2 1001 4 501 2 564 2 808 2 687 2 508 2 509 2 35 6 511 4 572 4 394 2 512 2 174 2 40 2 957 2 815 2 754 4 690 2 1018 6 1021 6 818 2 465 6 185 2 827 2 764 12 700 2 469 2 123 2 970 4 474 4 336 2 705 2 1036 2 479 2 779 2 268 2 417 2 347 2 
419 2 146 2 348 4 717 2 421 2 852 4 424 4 272 2 275 2 986 2 607 2 89 4 727 2 490 2 796 2 359 2 157 2 289 4 224 6 996 2 803 2 941 2 1001 4 501 2 564 2 808 2 687 2 509 2 35 6 511 8 572 4 394 2 512 2 174 2 40 2 957 2 815 2 754 4 690 2 114 2 1018 6 1021 6 818 2 465 6 185 2 827 2 764 12 700 2 469 2 123 2 970 4 474 4 336 2 705 2 1036 2 479 2 779 2 268 2 417 2 347 2 
419 2 146 2 348 4 717 2 421 2 852 4 424 4 272 2 275 2 986 2 607 2 89 4 727 2 490 2 796 2 359 2 157 2 289 4 224 6 996 2 803 2 941 2 1001 8 501 2 564 2 808 2 687 2 508 2 509 2 35 10 511 8 572 4 394 2 512 2 174 2 40 2 957 2 815 2 754 4 690 2 114 2 1018 8 1021 6 818 2 465 8 185 2 827 2 764 12 700 2 469 2 123 2 970 4 474 4 336 2 705 2 479 2 1036 2 779 2 268 2 417 2 347 2 
419 2 146 2 348 4 717 2 421 2 852 4 424 4 272 2 275 2 986 2 607 2 89 4 727 2 490 2 796 2 359 2 157 2 289 4 224 6 996 2 803 2 941 2 1001 8 501 2 564 2 808 2 687 2 509 2 35 10 511 8 572 4 394 2 512 2 174 2 40 2 957 2 815 2 754 4 690 2 114 2 1018 6 1021 6 818 2 465 6 185 2 827 2 764 12 700 2 469 2 123 2 970 4 474 4 336 2 705 2 1036 2 479 2 779 2 268 2 417 2 347 2 
272 4 275 2 546 2 7 1 12 10 549 2 552 6 283 2 15 8 286 6 554 6 288 2 19 2 289 4 22 2 293 2 803 2 23 2 560 2 296 2 562 4 299 2 564 2 808 2 35 2 305 2 572 4 40 2 815 2 577 12 321 2 818 2 322 2 54 2 826 4 825 2 827 2 587 2 336 2 337 6 838 6 340 6 594 2 839 1 842 2 347 2 599 4 348 4 81 2 852 4 607 2 89 6 359 2 358 2 872 2 94 2 99 2 373 6 877 2 884 2 386 1 886 2 394 2 110 2 633 6 637 2 644 2 645 2 897 2 123 2 652 6 655 2 412 2 908 4 417 2 146 2 419 2 420 4 421 2 424 4 152 1 431 1 676 2 157 2 433 2 934 1 940 2 941 2 687 2 688 4 447 2 448 2 452 6 174 2 957 2 458 2 459 2 179 6 178 6 690 2 460 6 695 2 465 8 185 2 469 2 700 2 970 6 471 6 474 8 973 2 705 2 479 4 481 2 207 1 717 4 986 2 727 2 490 2 493 6 730 4 220 2 222 6 224 4 995 1 996 2 737 2 495 6 998 2 501 4 1003 1 228 2 229 2 508 4 743 6 232 2 509 2 511 2 512 2 515 2 519 2 237 2 1015 6 754 4 1018 12 1021 24 760 2 243 2 764 46 251 2 259 4 773 1 775 7 261 2 1036 4 537 7 779 2 1040 8 268 2 541 2 1042 2 1043 2 
419 2 146 2 420 4 421 2 424 4 272 4 275 2 546 4 12 10 549 2 676 2 552 6 283 2 15 8 433 2 286 6 157 2 554 6 19 2 288 2 289 4 22 2 803 2 293 2 23 2 940 2 941 2 560 2 296 2 562 8 299 2 564 2 808 2 687 2 688 4 35 2 447 2 448 2 305 2 452 6 572 4 174 2 40 2 957 2 458 2 178 6 179 6 815 2 459 2 577 12 690 2 695 2 460 6 321 4 818 2 53 2 322 2 54 2 185 2 465 8 825 2 826 4 827 2 700 2 469 2 970 6 471 6 587 2 474 8 336 2 337 6 973 2 838 6 340 6 594 2 705 2 479 4 842 2 347 2 481 2 599 8 348 4 81 2 717 4 852 4 986 2 607 2 89 6 727 2 490 2 358 2 359 2 872 2 493 6 94 2 730 4 220 2 222 6 224 8 737 2 996 2 495 6 373 6 99 2 998 4 877 2 501 4 228 2 884 2 229 2 743 6 509 2 232 2 886 2 511 6 512 2 394 2 110 2 633 6 515 2 519 2 1015 6 237 2 637 2 754 4 114 4 1018 12 1021 26 243 2 760 2 644 2 645 2 764 48 250 2 251 2 897 2 123 2 259 4 652 6 655 2 261 2 1036 4 412 2 779 2 908 4 1040 8 541 2 417 2 268 2 542 2 1042 2 1043 2 
419 2 146 2 420 4 421 2 424 4 272 4 275 2 546 4 12 10 549 2 676 2 552 6 283 2 15 8 433 2 286 6 157 2 554 6 19 2 288 2 289 4 22 2 803 2 293 2 23 2 940 2 941 2 560 2 296 2 562 8 299 2 564 2 808 2 687 2 688 4 447 2 35 6 448 2 305 2 452 6 572 4 174 2 40 2 957 2 458 2 178 6 179 6 815 2 459 2 577 12 690 2 695 2 460 6 321 4 818 2 53 2 322 2 54 2 185 2 465 8 825 2 826 4 827 2 700 2 469 2 970 6 471 6 587 2 474 8 336 2 337 6 973 2 838 6 340 6 594 2 705 2 479 4 842 2 347 2 481 2 599 8 348 4 81 2 717 4 852 4 986 2 607 2 89 6 727 2 490 2 358 2 359 2 872 2 493 6 94 2 730 4 220 2 222 6 224 8 996 2 737 2 495 6 373 6 99 2 998 4 877 2 1001 4 501 4 228 2 884 2 229 2 743 6 509 2 232 2 886 2 511 6 512 2 394 2 110 2 633 6 515 2 519 2 1015 6 237 2 637 2 754 4 114 4 1018 12 1021 26 243 2 760 2 644 2 645 2 764 48 250 2 251 2 897 2 123 2 259 4 652 6 655 2 261 2 1036 4 412 2 779 2 908 4 1040 8 541 2 417 2 268 2 542 2 1042 2 1043 2 
272 4 275 2 546 4 12 8 549 2 552 12 283 2 15 8 286 8 554 12 288 2 19 2 289 4 22 2 293 2 803 2 23 2 560 2 296 2 562 10 299 2 301 2 564 2 808 2 35 6 305 2 572 4 40 2 311 2 575 6 815 2 577 10 321 4 818 2 53 2 322 2 52 2 54 2 826 4 825 4 827 2 829 6 587 2 336 2 337 6 838 6 340 6 594 2 842 2 347 2 599 10 348 4 81 2 852 4 605 6 607 2 89 6 359 2 872 2 92 2 94 2 97 6 99 2 373 12 877 2 884 2 886 4 394 2 110 2 633 6 637 2 114 4 894 2 644 2 645 2 647 2 897 2 123 2 652 6 655 2 411 6 412 2 908 6 417 2 146 2 419 2 420 4 421 2 424 4 676 2 157 2 433 2 940 2 941 2 687 2 688 4 169 2 447 4 448 4 452 6 174 2 957 2 458 2 459 2 179 6 178 6 690 2 460 8 695 2 963 6 465 10 185 2 700 2 469 2 970 6 471 12 474 8 973 2 705 2 479 4 481 2 717 4 482 6 986 2 727 2 490 2 493 12 730 4 220 2 222 6 224 10 737 2 996 2 495 6 998 4 501 4 1001 4 502 2 228 2 229 2 508 2 743 12 232 2 509 2 511 6 233 6 512 2 515 2 519 2 237 2 1015 6 754 4 1018 16 1021 24 760 2 243 4 247 6 764 52 250 2 251 2 259 4 261 2 1036 4 779 2 1040 12 268 2 541 2 542 2 1041 2 1042 2 1043 2 
572 2 348 4 174 2 512 2 394 2 852 2 424 4 957 2 754 2 815 2 114 2 607 2 1018 4 89 2 490 2 185 2 465 6 157 2 764 4 224 6 996 2 803 2 474 2 941 2 1001 4 501 2 705 2 564 2 808 2 35 4 779 2 417 2 268 2 347 2 511 6 
420 4 424 4 275 2 429 2 12 2 676 2 283 2 286 6 157 2 288 2 19 2 803 2 293 2 941 2 805 2 560 2 296 2 564 2 808 2 688 2 447 3 35 2 448 3 572 2 174 2 953 2 814 2 957 2 459 2 815 2 690 2 577 4 315 2 460 6 818 2 322 2 54 2 465 6 185 2 825 3 827 2 469 2 970 6 587 2 474 2 973 2 197 2 340 6 705 2 479 4 347 2 348 4 852 2 718 3 607 2 217 2 89 2 727 2 490 2 359 2 358 2 220 2 224 6 737 2 996 2 501 2 228 2 1009 2 885 2 232 2 511 6 394 2 512 2 754 2 114 2 1018 4 1021 24 760 2 764 28 123 2 259 4 1036 4 412 2 779 2 1040 8 908 4 268 2 417 2 1043 2 
419 2 146 2 348 4 717 2 421 2 852 4 424 4 272 2 275 2 986 2 607 2 89 4 727 2 490 2 796 2 359 2 157 2 289 4 224 6 996 2 803 2 941 2 1001 8 501 2 564 2 808 2 687 2 509 2 35 10 511 8 572 4 394 2 512 2 174 2 40 2 957 2 815 2 754 4 690 2 114 2 1018 6 1021 6 818 2 465 6 185 2 827 2 764 12 700 2 469 2 123 2 970 4 474 4 336 2 705 2 1036 2 479 2 779 2 268 2 417 2 347 2 
419 2 146 2 348 4 717 2 421 2 852 4 424 4 272 2 275 2 986 2 607 2 89 4 727 2 490 2 359 2 157 2 289 4 224 8 996 2 941 2 1001 8 501 2 564 2 808 2 687 2 509 2 35 10 511 8 572 4 394 2 512 2 174 2 40 2 957 2 815 2 754 4 690 2 400 2 114 2 1018 8 1021 6 818 2 894 2 185 2 465 6 827 2 764 12 700 2 469 2 899 2 123 2 970 4 1030 4 474 4 336 2 705 2 479 2 1036 2 779 2 268 2 417 2 347 2 
71 2 394 2 347 2 
71 2 394 2 347 2 
419 2 420 4 421 2 424 4 272 4 275 2 546 4 152 1 277 2 921 4 12 2 676 2 283 2 286 2 288 2 19 2 932 2 289 4 935 4 293 2 941 2 560 2 296 2 562 4 806 2 564 2 688 6 35 6 448 2 572 2 40 2 459 2 815 4 690 2 577 4 460 2 321 4 322 2 54 2 583 2 822 2 465 12 826 2 827 2 466 2 469 2 970 6 587 2 62 2 474 4 973 2 71 2 340 6 705 2 479 4 73 2 347 6 599 4 348 4 717 2 852 2 212 2 986 2 607 2 89 4 727 2 359 2 992 4 730 2 220 2 222 2 224 12 737 2 99 2 998 4 1001 4 501 4 228 2 505 2 508 4 509 2 232 2 511 6 394 4 395 2 519 4 637 2 754 2 114 4 1018 16 1021 16 760 2 761 2 642 2 894 4 764 24 1027 2 121 2 256 2 123 2 259 4 653 2 1036 4 412 2 1040 2 1042 2 
932 2 730 2 222 2 256 2 3 2 437 2 336 2 940 2 577 2 504 2 1021 2 12 2 594 2 761 2 491 2 827 2 764 4 
419 2 420 4 421 2 424 4 272 4 5 2 275 2 546 4 277 2 152 1 921 4 676 2 283 2 286 2 288 2 19 2 932 2 289 4 935 4 293 2 941 2 560 2 296 2 562 4 806 2 564 2 688 6 35 6 448 4 572 2 40 2 456 2 459 2 815 4 690 2 577 2 460 2 321 4 322 2 54 2 583 2 822 2 465 12 826 2 827 2 466 2 700 2 469 2 970 6 587 2 62 2 474 4 973 2 71 2 340 6 705 2 479 4 73 4 977 2 347 6 599 4 348 4 717 4 852 2 986 2 607 2 89 4 727 2 359 2 992 4 220 2 222 2 224 12 737 2 99 2 998 4 1001 4 501 4 228 2 1004 2 505 2 508 4 509 2 232 2 511 6 394 4 519 4 637 2 754 2 114 4 1018 16 1021 16 760 2 761 2 642 2 894 4 764 24 1027 2 256 2 123 2 259 4 134 2 1036 4 412 2 1040 2 1042 2 
419 2 420 4 421 2 424 4 272 4 275 2 546 4 277 2 152 1 921 4 12 2 676 2 283 2 286 2 288 2 19 2 932 2 289 4 935 4 293 2 24 2 941 2 560 2 296 2 562 4 806 2 564 2 688 6 303 2 35 6 448 2 306 2 572 2 40 2 459 2 815 4 690 2 577 4 460 2 321 4 322 2 54 2 583 2 822 2 465 12 826 2 827 2 466 2 700 2 469 2 970 6 703 2 60 2 587 2 62 2 474 4 973 2 71 2 340 6 705 2 479 4 73 2 347 6 599 4 348 4 717 4 852 2 986 2 607 2 89 4 727 2 359 2 992 4 730 2 220 2 222 2 224 12 737 2 99 2 998 4 1001 4 501 4 228 2 505 2 508 4 509 2 232 2 511 6 394 4 519 4 637 2 754 2 114 4 1018 16 1021 16 760 2 761 2 642 2 894 4 764 24 1027 2 256 2 123 2 259 4 1036 4 412 2 1040 2 1042 2 
145 2 665 2 0 2 147 4 420 4 788 2 275 2 152 2 676 2 678 2 284 4 283 2 286 6 433 2 19 2 801 2 291 2 938 2 293 2 28 2 560 2 296 2 562 2 166 2 299 2 688 2 447 2 304 2 305 2 448 2 171 2 955 2 45 2 46 2 578 2 690 2 577 2 181 1 581 4 460 6 322 2 54 2 825 2 827 2 469 2 970 6 973 2 68 2 974 2 340 4 341 2 593 2 479 4 481 2 846 2 599 2 82 2 602 2 85 2 857 2 861 2 724 2 608 2 727 2 865 2 359 2 220 2 617 2 737 2 96 2 738 2 225 2 226 2 377 2 228 2 381 2 382 6 232 2 886 2 631 2 632 2 1013 6 235 2 237 2 755 2 1019 2 1021 20 402 2 243 2 760 2 645 2 764 26 123 2 259 4 408 2 655 2 136 2 1036 4 264 2 412 2 1040 8 908 4 142 2 1043 2 
39 3 457 2 460 2 1021 2 243 6 825 3 286 2 248 2 764 2 800 2 436 4 771 2 380 2 138 2 447 3 979 2 1040 2 908 2 949 2 448 3 204 2 79 2 1043 2 845 2 
39 2 457 2 460 2 1021 2 243 6 825 2 286 2 248 2 764 2 800 2 436 4 771 2 380 2 138 2 447 2 979 2 1040 2 908 2 949 2 448 2 204 2 79 2 1043 2 845 2 
39 2 457 2 460 2 1021 2 243 6 825 2 286 2 248 2 764 2 800 2 436 4 771 2 380 2 138 2 447 2 979 2 1040 2 908 2 949 2 448 2 204 2 79 2 1043 2 845 2 
1 6 916 2 85 2 856 2 606 3 861 2 550 4 284 4 681 2 500 2 225 2 226 2 377 2 298 4 380 2 447 3 625 3 448 3 627 3 108 2 573 2 1013 5 177 2 176 4 1021 4 246 2 965 2 524 2 119 2 764 10 187 4 654 2 191 2 408 2 341 2 200 4 978 2 1040 2 141 4 1043 2 
1 6 916 2 85 2 856 2 606 2 861 2 550 4 284 4 681 2 500 2 225 2 226 2 377 2 298 4 380 2 447 2 625 2 387 2 448 2 627 2 108 2 573 2 1013 4 177 2 176 4 1021 4 246 2 965 2 524 2 119 2 764 10 187 4 654 2 334 2 191 2 408 2 341 2 200 4 978 2 707 2 1040 2 141 4 1043 2 
1 6 916 2 85 2 856 2 606 2 861 2 550 4 284 4 681 2 500 2 225 2 226 2 377 2 298 4 380 2 447 2 625 2 387 2 448 2 627 2 108 2 573 2 1013 4 177 2 176 4 1021 4 246 2 965 2 524 2 119 2 764 10 187 4 654 2 334 2 191 2 408 2 341 2 200 4 978 2 707 2 1040 2 141 4 1043 2 
1 6 916 2 85 2 856 2 606 2 861 2 550 4 284 4 681 2 500 2 225 2 226 2 377 2 298 4 380 2 447 2 625 2 387 2 448 2 627 2 108 2 573 2 1013 4 177 2 176 4 1021 4 246 2 965 2 524 2 119 2 764 10 187 4 654 2 334 2 191 2 408 2 341 2 200 4 978 2 707 2 1040 2 141 4 1043 2 
1 6 916 2 85 2 856 2 606 2 861 2 550 4 284 4 681 2 500 2 225 2 226 2 377 2 298 4 380 2 447 2 625 2 387 4 448 2 627 2 108 2 573 2 1013 4 177 2 176 4 1021 4 246 2 965 2 524 2 119 2 764 10 187 4 654 2 334 4 191 2 408 2 341 2 200 4 978 2 707 4 1040 2 141 4 1043 2 
561 2 327 2 925 2 103 2 671 2 843 2 
849 2 166 2 925 2 203 2 61 2 1000 2 193 2 
699 2 21 1 956 2 396 1 41 1 588 2 498 1 407 2 690 2 1021 4 488 2 34 2 143 2 764 4 887 1 
145 2 1013 12 955 2 85 6 753 1 150 1 861 6 757 2 1021 6 581 3 182 2 489 4 284 11 285 2 764 6 435 2 96 2 738 2 334 6 500 2 225 5 408 5 226 6 774 2 377 5 341 5 200 4 622 2 905 2 707 6 384 2 387 4 
668 2 937 4 25 2 674 2 880 2 740 2 298 2 198 7 1021 1 863 2 550 2 154 2 265 2 510 2 106 1 764 1 187 2 981 2 
668 4 937 4 25 4 674 4 880 2 740 2 298 2 198 6 863 2 550 2 154 2 265 2 510 2 187 2 981 2 
668 8 937 4 25 8 674 8 880 2 740 6 298 2 198 10 1021 1 863 2 550 2 154 2 265 2 510 8 106 1 764 1 187 2 981 2 
668 2 937 2 25 2 674 2 880 2 298 2 198 2 863 2 550 2 154 2 265 2 187 2 981 2 
914 4 783 4 420 36 423 2 2 4 785 24 271 4 787 4 427 2 544 2 280 4 677 2 795 4 16 6 288 28 799 4 159 4 161 4 802 4 804 6 939 4 560 6 300 4 31 4 167 2 446 4 33 4 812 14 38 4 453 4 42 2 459 26 318 4 693 2 692 4 463 10 325 2 584 8 828 4 701 6 331 2 332 10 971 4 472 8 63 4 836 2 835 4 64 4 837 8 66 10 195 4 70 4 340 102 477 8 478 4 201 1 597 2 342 4 202 2 599 16 848 8 80 4 860 8 723 4 87 2 218 10 610 6 867 2 868 16 220 2 368 4 369 16 497 10 876 24 100 16 1007 4 230 2 105 24 1014 30 514 4 751 2 520 8 640 2 891 4 1021 70 523 11 758 2 893 4 760 6 245 2 405 4 1025 8 118 4 763 4 646 4 764 78 765 4 257 10 128 10 259 44 1031 4 772 2 903 4 656 4 778 32 415 2 416 2 662 4 144 2 
599 14 783 2 420 14 544 2 152 2 87 2 280 2 432 2 610 2 16 4 288 12 220 2 615 2 802 2 878 2 560 2 297 2 33 4 105 8 107 2 310 2 453 2 514 4 1014 6 751 2 574 10 517 2 42 2 958 2 459 12 693 2 891 4 1021 26 758 2 523 2 641 2 760 2 184 2 463 6 118 4 763 4 584 6 764 28 765 2 828 2 331 2 701 2 257 6 259 14 128 2 836 2 64 2 66 6 340 40 904 2 656 4 342 4 202 2 415 2 
783 6 420 48 2 6 785 24 271 6 787 4 427 2 280 2 432 2 795 6 16 8 288 36 799 6 159 6 802 6 161 4 939 4 560 12 297 2 300 4 31 4 167 2 446 6 33 6 812 12 172 8 310 4 453 6 574 16 42 2 958 2 459 36 693 4 184 2 463 12 584 8 828 2 331 4 701 6 971 6 63 4 836 2 835 6 64 2 338 24 66 12 195 6 976 2 340 132 478 4 342 6 202 4 599 6 80 6 860 12 354 12 87 2 723 4 987 2 216 24 726 4 988 6 610 18 220 6 221 4 368 6 369 12 618 2 876 24 227 12 503 2 105 66 107 2 109 6 1014 26 514 6 751 2 517 4 636 2 520 24 640 2 891 6 1021 90 758 4 523 12 641 3 893 4 760 12 405 6 1025 12 118 6 763 4 646 6 764 102 765 6 120 8 257 12 900 6 259 60 128 12 1031 4 903 6 904 2 656 6 659 8 416 2 144 2 
599 36 783 2 420 20 917 2 544 2 152 2 87 2 675 2 793 2 218 2 13 2 794 2 610 2 680 2 16 6 612 2 287 4 288 6 220 2 615 2 802 2 735 2 438 2 497 2 878 2 739 2 560 2 503 2 378 2 1006 6 33 2 230 2 624 2 948 2 385 2 105 6 628 2 172 2 453 2 748 4 514 2 751 2 42 2 398 2 459 6 639 2 48 2 693 2 891 2 1021 44 523 2 758 2 760 2 51 2 183 2 697 2 463 4 895 2 118 2 765 2 249 2 764 46 120 2 55 2 648 2 766 2 252 2 698 2 329 4 701 2 331 2 332 2 257 4 128 2 259 20 836 2 64 2 770 2 194 2 66 4 69 4 340 48 656 2 597 2 342 2 659 2 140 2 414 2 415 2 480 2 980 2 
86 2 

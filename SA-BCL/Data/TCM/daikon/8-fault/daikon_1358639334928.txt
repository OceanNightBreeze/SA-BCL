#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V ERROR java.lang.Error 
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.NullPointerException (7,26,43,50,85,133,147,204,262,296,333,388,393,410,496,511,605,627,649,692,762,772,910,942,1126,1148,1175,1180,1185,1284,1350,1382) 517 (7,26,43,50,85,133,147,204,262,296,333,388,393,410,496,511,605,627,649,692,762,772,910,942,1126,1148,1175,1180,1185,1284,1350,1382) 231 (7,26,43,50,85,133,147,204,262,296,333,388,393,410,496,511,605,627,649,692,762,772,910,942,1126,1148,1175,1180,1185,1284,1350,1382) 314 (7,26,43,50,85,133,147,204,262,296,333,388,393,410,496,511,605,627,649,692,762,772,910,942,1126,1148,1175,1180,1185,1284,1350,1382) 866 (7,26,43,50,85,133,147,204,262,296,333,388,393,410,496,511,605,627,649,692,762,772,910,942,1126,1148,1175,1180,1185,1284,1350,1382) 490 (7,26,43,50,85,133,147,204,262,296,333,388,393,410,496,511,605,627,649,692,762,772,910,942,1126,1148,1175,1180,1185,1284,1350,1382) 768 (7,26,43,50,85,133,147,204,262,296,333,388,393,410,496,511,605,627,649,692,762,772,910,942,1126,1148,1175,1180,1185,1284,1350,1382) 425 (7,26,43,50,85,133,147,204,262,296,333,388,393,410,496,511,605,627,649,692,762,772,910,942,1126,1148,1175,1180,1185,1284,1350,1382) 1113 798 (7,26,43,50,85,133,147,204,262,296,333,388,393,410,496,511,605,627,649,692,762,772,910,942,1126,1148,1175,1180,1185,1284,1350,1382) 879 798 (7,26,43,50,85,133,147,204,262,296,333,388,393,410,496,511,605,627,649,692,762,772,910,942,1126,1148,1175,1180,1185,1284,1350,1382) 767 (7,26,43,50,85,133,147,204,262,296,333,388,393,410,496,511,605,627,649,692,762,772,910,942,1126,1148,1175,1180,1185,1284,1350,1382) 999 (7,26,43,50,85,133,147,204,262,296,333,388,393,410,496,511,605,627,649,692,762,772,910,942,1126,1148,1175,1180,1185,1284,1350,1382) 17 798 (7,26,43,50,85,133,147,204,262,296,333,388,393,410,496,511,605,627,649,692,762,772,910,942,1126,1148,1175,1180,1185,1284,1350,1382) 885 798 (7,26,43,50,85,133,147,204,262,296,333,388,393,410,496,511,605,627,649,692,762,772,910,942,1126,1148,1175,1180,1185,1284,1350,1382) 151 798 (7,26,43,50,85,133,147,204,262,296,333,388,393,410,496,511,605,627,649,692,762,772,910,942,1126,1148,1175,1180,1185,1284,1350,1382) 602 (7,26,43,50,85,133,147,204,262,296,333,388,393,410,496,511,605,627,649,692,762,772,910,942,1126,1148,1175,1180,1185,1284,1350,1382) 999 (7,26,43,50,85,133,147,204,262,296,333,388,393,410,496,511,605,627,649,692,762,772,910,942,1126,1148,1175,1180,1185,1284,1350,1382) 359 805 798 (7,26,43,50,85,133,147,204,262,296,333,388,393,410,496,511,605,627,649,692,762,772,910,942,1126,1148,1175,1180,1185,1284,1350,1382) 151 798 (7,26,43,50,85,133,147,204,262,296,333,388,393,410,496,511,605,627,649,692,762,772,910,942,1126,1148,1175,1180,1185,1284,1350,1382) 1114 (7,26,43,50,85,133,147,204,262,296,333,388,393,410,496,511,605,627,649,692,762,772,910,942,1126,1148,1175,1180,1185,1284,1350,1382) 999 (7,26,43,50,85,133,147,204,262,296,333,388,393,410,496,511,605,627,649,692,762,772,910,942,1126,1148,1175,1180,1185,1284,1350,1382) 669 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 199 159 1269 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 380 380 22 1106 961 
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
jtb.JavaParser:jj_3_3()Z
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;)V
jtb.JavaParser:jj_3_30()Z
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
jtb.JavaParser:jj_3_19()Z
jtb.syntaxtree.Block:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.Quant:subsetOf([J[J)Z
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalAndExpression;)V
daikon.PptSlice2:arity()I
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
daikon.ProglangType:isIntegral()Z
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
jtb.syntaxtree.TypeArguments:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3_14()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaCharStream:backup(I)V
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_117()Z
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Statement;)V
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_2_16(I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.Quant:gte(II)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.Debug:logOn()Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
jtb.JavaParser:jj_3R_54()Z
jtb.syntaxtree.TypeArgument:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptSlice0.ImplicationWrapper:hashCode()I
jtb.JavaParser:jj_3_10()Z
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.Quant:memberOf(S[S)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.VarInfoName.Elements:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:eltwiseGT([I)Z | OPERATOR | 176785 | + -> >>>
daikon.PptSlice0:initInvariantsSeen()V
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:isFloat()Z
daikon.ModBitTracker:split(I)I
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
utilMDE.ArraysMDE:indexOf([ZZ)I
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameters;)V
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.TypeArguments:TypeArguments(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeArgument;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:subsetOf([D[D)Z
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
jtb.JavaParser:jj_3_17()Z
utilMDE.FuzzyFloat:indexOf([DD)I
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.Quant:subsetOf([F[F)Z
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.ProglangType:baseIsFloat()Z
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:dimensions()I
daikon.Quant:eltsGtIndex([I)Z
daikon.inv.Invariant:prob_or(DD)D
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.MathMDE:gcd([I)I
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
daikon.Quant:subsetOf([F[D)Z
jtb.JavaParser:jj_3R_86()Z
utilMDE.Intern:internStrings([Ljava.lang.String;)V
utilMDE.Intern:intern([D)[D
utilMDE.ArraysMDE:indexOf([I[I)I
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:jj_3_36()Z
daikon.Quant:ne(II)Z
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
jtb.JavaCharStream:getBeginLine()I
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.Quant:lexEqual([I[I)Z
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.TypeDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReferenceType;)V
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:eq(DD)Z
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
jtb.syntaxtree.NodeSequence:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
jtb.JavaCharStream:ReadByte()C
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.Quantify.QuantifyReturn:QuantifyReturn(Ldaikon.VarInfo;)V
jtb.JavaCharStream:FillBuff()V
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
jtb.JavaParser:jj_3R_169()Z
jtb.JavaParser:jj_2_15(I)Z
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
jtb.JavaParser:jj_3R_77()Z
daikon.Quant:subsetOf([S[S)Z
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.LimitedSizeIntSet:add(I)V
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.Quantify.Constant:name()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.test.FormatTestCase:passes()Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.OrderedPairIterator:hasNext()Z
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Type;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.Quantify.Term:ioa_name()Ljava.lang.String;
daikon.inv.ValueSet:ValueSet(I)V
daikon.Quant:lexGT([I[I)Z
jtb.JavaParser:jj_3R_118()Z
daikon.inv.Invariants:Invariants()V
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
utilMDE.ArraysMDE:sum([[I)I
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
jtb.syntaxtree.InclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.VarInfo:simplify_quantify(Ljava.util.EnumSet;[Ldaikon.VarInfo;)[Ljava.lang.String; | CONDITION | 120276 | if (x) -> if (!x)
daikon.inv.Invariant:getConfidence()D
jtb.JavaParser:jj_3R_107()Z
jtb.JavaParser:jj_3R_123()Z
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_149()Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.ModBitTracker:num_vars()I
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.NodeListOptional:present()Z
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
jtb.JavaParser:jj_3R_88()Z
daikon.Quant:eltsGTE([II)Z
jtb.JavaParser:jj_3R_180()Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ResultType;)V
jtb.syntaxtree.FormalParameters:accept(Ljtb.visitor.Visitor;)V
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.VarInfo:name()Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.NodeListOptional:elements()Ljava.util.Enumeration;
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_52()Z
daikon.inv.Invariant:logDetail()Z
utilMDE.ArraysMDE:sum([I)I
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_114()Z
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_105()Z
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptName:isCombinedExitPoint()Z
daikon.Quant:memberOf(D[F)Z
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.inv.unary.UpperBoundCore:calc_range()J
utilMDE.FuzzyFloat:ne(DD)Z
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeSequence;)V
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
utilMDE.MathMDE:gcd_differences([I)I
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.ProglangType:base()Ljava.lang.String;
jtb.JavaCharStream:getBeginColumn()I
daikon.Quant:eltsLTE([II)Z
jtb.syntaxtree.ConditionalAndExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:subarray([JII)[J
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.TypeParameter:accept(Ljtb.visitor.Visitor;)V
daikon.Quantify.Term:simplify_name()Ljava.lang.String;
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:lexNotEqual([I[I)Z
daikon.VarInfoName:ioa_name()Ljava.lang.String;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.VarInfoName.Elements:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptSlice0:arity()I
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_115()Z
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PackageDeclaration;)V
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
jtb.JavaParser:jj_2_4(I)Z
daikon.simplify.LemmaStack:noticeInt(J)V
jtb.JavaParser:jj_3_20()Z
daikon.Quantify.FreeVar:name()Ljava.lang.String;
jtb.JavaParser:jj_3R_210()Z
daikon.VarInfo:isPointer()Z
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
utilMDE.ArraysMDE:min_max([I)[I
jtb.syntaxtree.NodeToken:trimSpecials()V
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
jtb.syntaxtree.ClassOrInterfaceBody:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeSequence:elements()Ljava.util.Enumeration;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
jtb.JavaParser:jj_3R_98()Z
jtb.JavaParser:jj_2_36(I)Z
jtb.JavaParser:jj_3R_68()Z
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.config.Configuration:apply(Ljava.lang.String;)V
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
jtb.JavaParser:jj_3_4()Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.inv.Invariant:prob_and(DDD)D
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName; | ASSIGN | 5096 | = null
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_48()Z
jtb.syntaxtree.TypeParameters:accept(Ljtb.visitor.Visitor;)V
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_135()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.BlockStatement;)V
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:sign(I)I
jtb.JavaParser:jj_2_25(I)Z
daikon.Quant:subsetOf([D[F)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeOptional;)V
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.ArraysMDE:sum([D)D
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.ArraysMDE:element_range([I)I
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:setEqual([I[I)Z
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3_25()Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.Simple:isLiteralConstant()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameters;)V
daikon.inv.Invariant:prob_and(DD)D
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.ArraysMDE:indexOf([II)I
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
utilMDE.ArraysMDE:max([I)I
utilMDE.Intern:internSubsequence([III)[I
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
utilMDE.MathMDE:pow(II)I
utilMDE.Intern:intern([J)[J
daikon.Quant:eltwiseGTE([I)Z
daikon.VarInfoName:simplify_name()Ljava.lang.String;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
jtb.syntaxtree.NodeOptional:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.PptSlice1:arity()I
utilMDE.MathMDE:mod_positive(JJ)J
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.VarInfoName.Elements:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaCharStream:readChar()C
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
jtb.syntaxtree.NodeOptional:NodeOptional()V
utilMDE.Intern:internSubsequence([JII)[J
daikon.ProglangType:isArray()Z
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
utilMDE.Intern:numIntArrays()I
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
utilMDE.ArraysMDE:min([I)I
jtb.JavaParser:jj_3_5()Z
daikon.Quant:lexLTE([I[I)Z
daikon.test.TestQuant:removeAdjacentDups([I)[I
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.VarInfo:apply_subscript(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
utilMDE.MathMDE:mod_positive(II)I
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.VarInfo:get_all_simple_names()Ljava.util.List;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
jtb.JavaParser:jj_3R_148()Z
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.diff.PrintAllVisitor:bufPrintln()V
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.UpperBoundCore:calc_modulus()J
jtb.syntaxtree.ConditionalExpression:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:eltwiseLTE([I)Z
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.VarInfo:isIOAArray()Z
jtb.syntaxtree.ClassOrInterfaceDeclaration:ClassOrInterfaceDeclaration(Ljtb.syntaxtree.NodeChoice;Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ClassOrInterfaceBody;)V
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalOrExpression;)V
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
jtb.JavaParser:jj_3R_120()Z
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBody;)V
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
jtb.syntaxtree.ExclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.ProglangType:isPseudoArray()Z
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
jtb.JavaParser:jj_3R_163()Z
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
jtb.JavaParser:jj_2_3(I)Z
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.Quantify.IOAQuantification:getQuantifierExp()Ljava.lang.String;
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_87()Z
utilMDE.ArraysMDE:noDuplicates([I)Z
utilMDE.OrderedPairIterator:setnext2()V
daikon.VarInfoName:isLiteralConstant()Z
daikon.inv.Invariant:isWorthPrinting()Z
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.VarInfoName:hashCode()I
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.TypeDeclaration:TypeDeclaration(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.FuzzyFloat:eq(DD)Z
jtb.JavaParser:jj_3R_62()Z
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression; | RETURN | 64861 | return null
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:get_upper_bound()Ldaikon.Quantify.Term;
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
jtb.JavaParser:jj_2_35(I)Z
daikon.Quant:pairwiseDivides([I[I)Z
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.Quant:intersection([I[I)[I
jtb.JavaParser:jj_3R_80()Z
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.Node:Node(LutilMDE.Pair;)V
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_55()Z
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.PptSlice1:num_samples()I
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:name()Ljava.lang.String;
daikon.Quant:setDiff([I[I)[I
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
jtb.syntaxtree.NodeOptional:present()Z
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.ModBitTracker:ModBitTracker(I)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.Quantify.IOAQuantification:getVarIndexedString(I)Ljava.lang.String;
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.Quant:eltwiseNotEqual([I)Z
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Block;)V
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_50()Z
jtb.syntaxtree.VariableDeclaratorId:VariableDeclaratorId(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
jtb.syntaxtree.ResultType:accept(Ljtb.visitor.Visitor;)V
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.VarInfo:apply_subscript(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.diff.Node:Node()V
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.Quant:union([I[I)[I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.FuzzyFloat:lt(DD)Z
jtb.JavaParser:jj_3R_47()Z
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:concat([I[I)[I
utilMDE.WeakHasherMap:size()I
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
jtb.JavaParser:jj_3R_134()Z
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalExpression;)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.test.TestAst.ClassOrInterfaceDeclarationHarvester:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
jtb.JavaParser:FormalParameter()Ljtb.syntaxtree.FormalParameter;
jtb.syntaxtree.Type:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
jtb.syntaxtree.MethodDeclarator:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_110()Z
jtb.JavaParser:jj_3R_57()Z
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_75()Z
jtb.syntaxtree.CompilationUnit:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
jtb.JavaParser:jj_3R_73()Z
daikon.Quant:eltsGteIndex([I)Z
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_104()Z
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
jtb.JavaParser:jj_3R_51()Z
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
jtb.syntaxtree.FormalParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quantify.IOAQuantification:getClosingExp()Ljava.lang.String;
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.Quant:pairwiseLTE([I[I)Z
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_164()Z
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quant:memberOf(J[J)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Expression;)V
jtb.JavaParser:jj_3_28()Z
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_2_18(I)Z
utilMDE.MathMDE:nonmodulus_strict([I)[I | RETURN | 23142 | return null
daikon.Quant:concat([I[I)[I
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
utilMDE.MathMDE:gcd(II)I
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.VarInfo:jml_name()Ljava.lang.String;
jtb.JavaParser:jj_3_18()Z
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
jtb.syntaxtree.CompilationUnit:CompilationUnit(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
jtb.JavaParser:jj_3R_137()Z
utilMDE.LimitedSizeIntSet:size()I
daikon.ValueTuple:isMissing(I)Z
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.VariableDeclaratorId:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.Name:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
jtb.JavaParser:jj_3R_101()Z
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.Quantify.IOAQuantification:getFreeVar(I)Ldaikon.Quantify.Term;
jtb.JavaParser:jj_3R_116()Z
daikon.Quant:lexLT([I[I)Z
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
utilMDE.WeakHasherMap:processQueue()V
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.Quant:memberOf(I[I)Z
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
jtb.JavaParser:jj_3_12()Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
jtb.JavaParser:VariableDeclaratorId()Ljtb.syntaxtree.VariableDeclaratorId;
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.Quantify.IOAQuantification:IOAQuantification([Ldaikon.VarInfo;)V
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
jtb.JavaParser:jj_3_29()Z
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
daikon.ProglangType:baseIsIntegral()Z
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:sameLength([I[I)Z
jtb.JavaParser:jj_3R_124()Z
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.MathMDE:gcd(JJ)J
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Name;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_125()Z
daikon.Quantify.SimplifyQuantification:SimplifyQuantification(Ljava.util.EnumSet;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.BlockStatement:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.Expression:accept(Ljtb.visitor.Visitor;)V
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReturnStatement;)V
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
jtb.syntaxtree.PackageDeclaration:accept(Ljtb.visitor.Visitor;)V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.PptName:PptName(Ljava.lang.String;)V
jtb.JavaParser:jj_3R_58()Z
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
jtb.JavaParser:jj_3_16()Z
jtb.JavaParser:jj_3R_126()Z
jtb.JavaParser:jj_2_14(I)Z
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
jtb.syntaxtree.NodeChoice:accept(Ljtb.visitor.Visitor;)V
daikon.Quantify.FreeVar:simplify_name()Ljava.lang.String;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
jtb.JavaParser:jj_3_22()Z
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.ClassOrInterfaceDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments;
jtb.JavaCharStream:getEndLine()I
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
jtb.JavaParser:jj_3R_76()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
jtb.JavaParser:jj_3R_121()Z
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
utilMDE.FuzzyFloat:set_rel_diff(D)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_simplify()Ljava.lang.String;
daikon.ValueTuple:isMissingFlow(I)Z
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.Quant:pairwiseEqual([I[I)Z
daikon.Quant:lte(II)Z
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_2_12(I)Z
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.VarInfo:domainTypeIOA()Ljava.lang.String;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:jj_3_35()Z
daikon.VarInfo:isPrestate()Z
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.Quant:lexGTE([I[I)Z
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_103()Z
daikon.ModBitTracker:num_samples()I
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_27()Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
jtb.syntaxtree.ConditionalOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.Quant:gt(II)Z
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarComparabilityImplicit:alwaysComparable()Z
jtb.syntaxtree.Statement:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:eltsLT([II)Z
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:subsetOf([I[I)Z
jtb.syntaxtree.MethodDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.VarInfo:isDerived()Z
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.Quant:pairwiseGT([I[I)Z
jtb.JavaParser:jj_3R_108()Z
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
daikon.Quant:pairwiseLT([I[I)Z
daikon.VarInfo:ioa_name()Ljava.lang.String;
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3_1()Z
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Modifiers;)V
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.FuzzyFloat:gt(DD)Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
jtb.syntaxtree.ClassOrInterfaceBody:ClassOrInterfaceBody(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.ProglangType:isScalar()Z
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.Quant:eq(JJ)Z
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_2_21(I)Z
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
jtb.JavaParser:jj_3R_74()Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:memberOf(F[F)Z
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParser:jj_3R_89()Z
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
jtb.JavaParser:jj_3R_56()Z
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:sum([[D)D
daikon.VarInfo:java_name()Ljava.lang.String;
jtb.syntaxtree.Modifiers:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.diff.Node:add(Ljava.lang.Object;)V
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.VarInfo:simplify_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.Quant:eq(II)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.NodeToken:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_60()Z
jtb.syntaxtree.NodeList:NodeList()V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
jtb.JavaParser:jj_3R_49()Z
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_ntk()I
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfo:get_base_array_hashcode()Ldaikon.VarInfo;
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:pairwiseSquare([I[I)Z
daikon.inv.Invariant:prob_is_ge(DD)D
jtb.JavaParser:jj_3R_61()Z
jtb.JavaParser:jj_3R_109()Z
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:computeProbability()D
jtb.syntaxtree.NodeListOptional:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.Quant:eltsEqual([II)Z
jtb.JavaParser:jj_3R_102()Z
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.Quant:isReverse([I[I)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
utilMDE.MathMDE:missing_numbers([I)[I
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.inv.unary.LowerBoundCore:computeConfidence()D
jtb.JavaCharStream:BeginToken()C
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:eltsNotEqual([II)Z
jtb.JavaCharStream:getEndColumn()I
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:computeProbability()D
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.InvMap:toString()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_136()Z
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:eq(FF)Z
jtb.JavaParser:jj_3R_96()Z
utilMDE.MathMDE:negate(I)I
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.inv.Invariant:justified()Z
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
utilMDE.TestUtilMDE.1InternTest:test(Z)V
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.Quantify.Length:simplify_name()Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext1()V
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.Invariant:logOn()Z
utilMDE.ArraysMDE:isSubset([D[D)Z
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.diff.RootNode:RootNode()V
daikon.Ppt:find_var_by_name(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.Quant:subsetOf([B[I)Z
jtb.JavaParser:jj_3R_161()Z
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.Quant:eltsGT([II)Z
daikon.Quantify.IOAQuantification:getFreeVarName(I)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.Debug:logDetail()Z
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
jtb.JavaParser:getToken(I)Ljtb.Token;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.Quant:pairwiseGTE([I[I)Z
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.Intern:intern([I)[I
jtb.syntaxtree.ReturnStatement:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.TypeDeclaration:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.ValueTuple:size()I
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:sorted([I)Z
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:lte(DD)Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeBound;)V
utilMDE.FuzzyFloat:gte(DD)Z
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
jtb.JavaParser:jj_scan_token(I)Z
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
jtb.syntaxtree.ImportDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
jtb.Token:newToken(I)Ljtb.Token;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ImportDeclaration;)V
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.Quantify:quantify([Ldaikon.VarInfo;)[Ldaikon.Quantify.QuantifyReturn;
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
utilMDE.MathMDE:modulus([I)[I
utilMDE.SimpleLog:SimpleLog(Z)V
jtb.JavaParser:jj_2_17(I)Z
jtb.JavaParser:jj_3R_72()Z
daikon.VarInfo:relate_var()V
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:memberOf(F[D)Z
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_97()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InclusiveOrExpression;)V
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.Quant:eltwiseEqual([I)Z
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeDeclaration;)V
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameter;)V
jtb.syntaxtree.FormalParameter:FormalParameter(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Type;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.Quant:noDups([I)Z
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
utilMDE.MathMDE:pow_fast(II)I
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.inv.unary.scalar.NonZero:enabled()Z
jtb.JavaParser:jj_3R_162()Z
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
jtb.JavaParser:jj_3R_67()Z
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.ModBitTracker:num_sets()I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.ProglangType:baseIsScalar()Z
daikon.ProglangType:isPointerFileRep()Z
daikon.Ppt:indexOf(Ljava.lang.String;)I
utilMDE.Assert:assertTrue(Z)V
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
jtb.JavaParser:jj_3R_99()Z
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3_15()Z
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_63()Z
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_100()Z
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
daikon.PptTopLevel:name()Ljava.lang.String;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_2_10(I)Z
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
jtb.syntaxtree.TypeBound:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
utilMDE.ArraysMDE:fn_is_total([I)Z
jtb.JavaParser:jj_3R_85()Z
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.Ppt:Ppt()V
jtb.JavaParser:jj_2_13(I)Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.inv.OutputFormat:isJavaFamily()Z
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.test.InvariantFormatTester:execute()Z
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.Quant:eltsLteIndex([I)Z
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
utilMDE.MathMDE:bitwiseComplement(I)I
jtb.JavaParser:jj_3_13()Z
jtb.syntaxtree.ClassOrInterfaceType:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceBody:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclarator;)V
daikon.Quantify.Length:Length(Ldaikon.VarInfo;I)V
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE:lsis_test(I)V
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.VarInfoName.Elements:ioa_name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_53()Z
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
jtb.JavaParser:jj_3R_69()Z
utilMDE.ArraysMDE:subarray([III)[I
jtb.JavaParser:jj_3R_122()Z
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.Quantify.IOAQuantification:getMembershipRestriction(I)Ljava.lang.String;
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.Quant:eltwiseLT([I)Z
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_106()Z
utilMDE.Options.OptionInfo:argument_required()Z
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_2_1(I)Z
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
jtb.JavaParser:jj_3_21()Z
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.inv.unary.scalar.Positive:enabled()Z
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.Quant:eltsEqualIndex([I)Z
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.PptName:isEnterPoint()Z
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:lt(II)Z
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ExclusiveOrExpression;)V
daikon.Quant:slice([III)[I
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.VarInfo:new_ppt()V
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_119()Z
daikon.diff.InvMap:InvMap()V
daikon.VarInfo:get_lower_bound()Ldaikon.Quantify.Term;
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.Quantify.Constant:Constant(I)V
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.Quant:eltsLtIndex([I)Z
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
jtb.JavaParser:jj_3R_70()Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_133()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.CompilationUnit;)V
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
jtb.syntaxtree.ReferenceType:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_2_5(I)Z
jtb.JavaParser:jj_3R_81()Z
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
1139 2 1293 2 1209 2 929 2 713 4 1214 2 288 2 423 2 188 2 
916 2 453 6 424 2 202 2 654 2 648 2 206 2 535 6 779 2 1048 6 84 2 
1023 2 1209 2 1336 6 965 2 196 2 775 6 832 6 804 4 909 2 317 4 1215 2 423 2 1378 6 
266 29 417 2 1209 6 1302 12 975 16 294 2 227 10 1306 4 1112 6 403 8 420 6 315 2 780 10 657 2 1242 2 230 10 737 10 1268 8 423 6 442 2 722 4 761 8 1025 8 1338 2 816 10 1009 16 1232 4 124 16 1383 4 81 26 
179 6 76 4 
1364 2 
395 2 355 2 1209 4 1260 2 397 2 271 2 1353 2 657 2 274 2 1214 2 623 2 1218 2 12 2 1096 2 1272 2 484 2 744 4 964 2 364 2 414 4 534 2 200 2 416 2 454 2 586 2 892 2 670 2 589 2 1013 2 1058 2 381 2 423 4 259 4 115 2 123 2 1120 2 1253 2 348 4 83 2 476 2 562 2 1205 2 952 2 224 2 
266 54 888 2 1030 2 1209 4 975 32 1302 22 771 2 904 6 227 16 638 4 1112 4 403 6 420 4 780 16 335 4 230 16 940 4 737 16 9 4 1115 4 275 6 423 4 897 4 163 2 304 6 761 18 1222 6 122 4 532 6 1338 2 1232 2 1009 32 816 6 124 32 81 48 861 8 1233 2 1050 6 606 2 
809 2 979 2 964 2 
291 10 12 2 1178 2 1127 2 436 2 1229 2 1130 2 548 22 145 2 634 2 820 2 1123 2 96 2 915 2 
266 6 1302 2 891 2 975 2 227 2 1112 2 780 2 230 2 737 2 678 2 641 2 742 2 1044 2 761 2 682 2 630 2 1232 2 1009 2 816 4 124 2 514 2 81 4 452 2 
266 16 1302 4 722 2 975 8 1261 2 532 6 227 4 1009 8 124 8 335 4 780 4 81 12 230 4 1182 2 737 4 275 6 897 4 
1012 2 251 2 397 2 419 2 1036 2 1151 6 459 2 979 6 938 2 6 2 1214 2 1213 2 1193 2 1021 2 809 2 140 36 1244 4 444 2 117 2 696 2 964 8 305 4 1250 2 843 2 390 2 261 2 558 2 467 4 1276 2 699 10 82 2 348 2 1161 2 948 2 
1236 2 906 2 1189 2 963 2 1072 2 1157 2 1294 2 1162 2 1318 2 1364 2 
1029 8 267 2 1209 32 1032 2 871 2 356 2 270 2 1303 1 1128 8 358 6 93 2 1132 2 957 2 875 2 10 2 877 2 1313 3 784 2 187 1 960 2 1139 2 13 2 626 2 443 16 99 5 788 2 1221 1 363 2 881 2 883 2 968 2 1145 2 447 1 284 2 106 1 970 2 538 1 539 1 1235 2 371 2 887 3 1320 2 373 2 541 4 108 2 1321 32 543 1 800 2 203 2 636 3 711 3 1150 2 378 2 27 2 550 2 380 2 1328 16 462 2 210 2 1329 2 1333 4 1247 2 213 4 725 2 34 16 469 2 1075 2 726 1 125 2 650 2 1077 24 1341 2 561 2 1159 2 729 4 1257 6 36 3 37 3 309 2 1259 2 1165 2 1081 1 903 2 225 1 226 3 567 2 41 4 1262 2 1263 1 907 6 1088 2 229 8 1266 2 656 2 136 2 735 2 137 2 1356 2 738 2 913 2 914 2 838 2 572 2 661 24 918 2 1181 4 919 2 55 3 329 2 56 2 57 1 920 2 584 12 1011 2 923 2 152 6 755 32 153 2 848 3 248 3 1110 2 62 2 501 2 63 2 591 2 504 3 592 2 67 2 334 1 1287 4 1016 2 1377 2 597 2 423 34 1289 2 598 4 72 2 75 2 599 3 857 2 763 1 167 1 1121 2 1292 2 603 2 513 2 265 12 1206 16 1026 1 
994 2 423 2 
379 2 411 2 423 4 
105 2 
0 2 688 12 689 2 1035 14 359 2 360 18 8 2 7 2 692 2 693 2 1042 2 695 2 362 2 14 2 365 6 366 2 367 14 1045 4 16 2 18 4 700 2 17 2 1052 6 1053 12 372 52 705 2 1055 2 375 2 709 2 377 2 26 2 712 2 1059 2 1061 2 28 4 383 4 384 2 31 4 716 2 1066 4 717 4 721 2 387 4 388 2 389 2 724 2 1073 42 391 2 394 2 730 2 393 22 732 18 39 4 40 2 398 2 400 2 42 22 402 2 43 48 736 48 405 2 46 94 45 2 1092 4 48 18 407 4 741 16 49 2 50 2 743 2 52 4 53 10 410 2 1101 4 1102 2 1104 2 58 2 751 2 60 4 1107 2 61 4 1111 8 758 2 64 8 1113 2 70 2 1114 2 425 22 762 4 764 2 767 2 431 48 86 2 85 2 87 4 768 2 769 62 1126 2 773 4 772 2 90 2 435 2 774 2 1129 4 1131 358 94 104 777 2 95 2 438 246 1135 2 97 2 1138 2 441 42 1140 2 785 4 790 2 102 4 792 2 445 2 1144 94 793 4 1146 2 446 2 794 2 795 12 448 90 107 36 797 2 798 26 1148 2 455 2 802 2 803 30 458 94 805 2 806 4 807 94 810 18 812 2 120 2 813 18 815 4 817 2 127 2 471 2 128 4 1163 2 821 2 129 2 1164 2 132 4 1166 2 133 4 1167 2 134 94 479 16 478 12 1170 2 482 2 837 8 1175 2 1174 14 840 4 486 2 1180 2 144 2 844 2 845 2 147 2 490 2 148 2 1183 56 494 2 151 18 1186 2 1185 4 496 2 850 2 498 2 502 2 851 2 853 2 1192 2 506 18 158 246 507 2 160 4 161 2 855 42 856 2 1196 4 1197 94 511 2 1198 4 166 2 169 2 1200 2 170 4 1203 22 173 2 515 2 1204 2 866 2 176 2 178 2 517 2 868 2 519 2 180 4 1210 2 181 4 523 4 525 2 184 2 1211 2 185 2 1212 2 872 12 873 2 527 2 1217 6 879 2 1223 2 1226 2 1227 2 533 4 885 2 198 62 542 2 890 30 544 4 1238 94 545 2 546 2 204 2 547 2 549 2 1241 4 551 2 1243 2 552 2 553 2 1248 2 212 18 899 2 1251 2 559 2 219 50 218 2 900 2 1254 4 1256 8 1258 12 566 2 905 4 910 4 569 2 231 2 912 16 571 8 236 2 237 18 240 2 917 2 243 6 579 4 1277 22 1278 4 1282 2 249 2 1283 2 934 2 588 22 936 46 253 26 1284 2 595 2 939 2 256 2 258 2 942 26 602 2 946 2 604 44 262 2 949 4 263 2 951 30 605 2 1296 4 954 4 608 2 1299 4 610 2 268 18 613 2 612 4 1305 28 272 4 1307 18 617 2 1310 2 959 20 276 2 627 2 281 2 629 94 1317 2 969 8 635 4 971 48 973 2 1322 4 977 2 978 8 296 18 1327 4 1330 2 980 2 981 4 645 4 985 44 306 72 649 2 307 2 989 4 991 2 992 2 310 4 995 4 996 2 312 94 1347 2 1350 2 314 2 999 26 658 2 659 2 318 2 1359 18 319 4 660 2 1006 2 663 2 662 2 1007 4 664 4 325 2 326 2 666 74 331 2 332 2 668 2 669 2 1370 2 671 2 333 2 674 2 1375 2 675 2 1015 94 1376 4 337 2 676 4 1018 94 679 4 1379 44 339 2 1380 62 1382 2 681 2 341 2 346 6 1384 2 349 8 350 2 683 2 1385 2 1386 2 1027 2 1028 246 
238 1 412 2 757 2 967 2 
1362 2 967 2 
565 2 964 2 739 2 1304 2 457 2 967 2 1306 2 
739 2 399 2 967 2 
739 2 967 2 884 2 
130 2 757 2 1008 2 
739 2 967 2 
130 2 1005 2 
1017 2 967 2 
130 2 757 2 828 2 
757 2 901 2 54 2 
687 2 757 2 876 2 
757 2 829 2 898 2 
1345 2 757 2 1100 2 
130 2 1177 2 
967 2 601 2 
1314 2 54 2 
491 2 876 2 
74 2 829 2 
1345 2 421 2 
130 2 1340 2 
1345 2 672 2 
829 2 104 2 
1273 2 876 2 
1367 2 54 2 
130 2 142 2 757 2 828 2 
130 2 142 2 757 2 828 2 323 2 
130 2 560 2 757 2 
130 2 993 2 757 2 
1369 2 1373 2 1275 2 1281 2 
964 2 640 2 1304 2 697 2 
964 2 640 2 628 2 1304 2 457 2 697 2 
964 2 739 2 585 2 1304 2 967 2 1306 2 
1187 2 534 2 
964 2 1304 2 1351 2 1306 2 
1078 2 829 2 
1345 2 257 2 
882 2 54 2 
313 2 876 2 
1345 2 733 2 876 2 
1345 2 456 2 876 2 
1345 2 211 2 876 2 
1345 2 849 2 876 2 
110 6 499 2 1304 2 1355 2 528 2 720 6 964 2 1076 2 
130 2 921 2 
177 2 98 2 943 2 88 2 21 4 932 2 119 2 1371 2 1034 2 548 6 66 2 149 4 691 2 1172 2 286 2 392 2 1065 2 277 2 
426 2 757 2 
93 2 
1029 2 1209 26 1032 2 358 2 957 2 877 4 784 2 187 2 1139 2 101 2 883 2 538 4 541 4 1321 4 108 2 800 2 1150 2 550 2 380 2 462 2 715 2 210 2 808 2 1333 4 644 2 465 2 213 4 34 6 725 2 125 2 35 2 1341 2 1159 2 729 2 1257 6 1344 2 1259 2 1165 2 567 2 41 2 907 4 1086 4 1267 2 656 2 1356 2 738 2 838 2 483 2 241 2 919 2 329 2 56 2 920 6 667 2 584 8 152 2 755 6 924 4 928 2 501 2 63 2 591 2 67 2 334 2 1287 4 1288 2 597 2 423 26 1289 2 598 2 72 2 1195 2 75 2 427 2 171 2 265 8 
1029 2 1209 26 1032 2 357 2 358 2 957 2 875 2 877 4 784 2 187 2 1139 2 101 2 883 2 633 2 538 2 541 4 1321 4 108 2 800 2 1150 2 550 2 380 2 462 2 210 2 1333 4 465 2 213 4 34 6 725 2 125 2 35 2 1341 2 1159 2 729 2 1257 6 1344 2 309 2 1259 2 1165 2 567 2 41 2 907 6 1086 4 1267 2 656 2 1356 2 738 2 838 2 572 2 483 2 241 2 322 2 919 2 329 2 56 2 920 6 667 2 584 8 152 2 755 6 924 4 928 2 501 2 63 2 591 2 67 2 334 2 1287 4 1288 2 597 2 423 26 1289 2 598 2 72 2 1195 2 75 2 427 2 171 2 265 8 
862 2 
1149 2 847 2 
202 2 1360 2 654 2 1274 2 215 2 614 2 535 2 593 2 727 2 621 2 245 2 404 2 186 2 1063 4 1048 2 1124 2 624 4 839 2 
1209 6 654 4 2 4 1084 2 614 2 776 4 621 2 404 2 186 2 570 4 624 4 784 2 839 2 962 4 1360 2 1224 2 1274 2 1231 6 535 6 285 2 245 2 329 2 1048 4 703 2 453 6 202 4 800 2 154 2 587 2 893 2 591 2 1324 2 156 2 673 2 593 2 1287 2 1063 4 677 2 462 2 423 12 72 2 464 2 680 2 213 2 648 2 215 2 1199 2 1339 2 727 4 1342 2 651 4 429 2 1124 2 1343 2 1257 4 1389 2 175 2 607 2 84 2 1259 2 
1209 6 654 4 2 4 1084 2 614 2 776 4 621 2 404 2 186 2 570 4 624 4 784 2 839 2 962 4 1360 2 1224 2 1274 2 1231 6 535 4 285 2 245 2 329 2 1048 6 703 2 453 6 202 4 800 2 154 2 587 2 893 2 591 2 1324 2 156 2 673 2 593 2 1287 2 1063 4 677 2 462 2 423 12 424 2 72 2 464 2 680 2 213 2 648 2 215 2 1199 2 1339 2 727 4 1342 2 651 4 429 2 1124 2 1343 2 1257 4 1389 2 175 2 607 2 1259 2 
1209 6 654 4 2 8 1084 2 614 2 776 4 621 2 779 2 404 2 186 2 570 4 624 4 784 2 839 2 962 4 1360 2 1224 2 1274 2 1231 6 535 6 285 2 245 2 329 2 1048 6 703 2 453 6 202 4 800 2 154 2 587 2 893 2 591 2 1324 2 156 2 673 2 593 2 1287 2 1063 4 677 2 462 2 423 12 72 2 464 2 680 2 213 2 648 2 215 2 1199 2 1339 2 727 4 1342 2 651 4 429 2 1124 2 1343 2 1257 4 1389 2 175 2 607 2 1259 2 
1209 6 654 4 2 8 1084 2 614 2 776 4 621 2 779 2 404 2 186 2 570 4 624 4 784 2 839 2 962 4 1360 2 1224 2 1274 2 1231 10 535 6 285 2 245 2 329 2 1048 8 703 2 453 8 202 4 800 2 154 2 587 2 893 2 591 2 1324 2 156 2 673 2 593 2 1287 2 1063 4 677 2 462 2 423 12 424 2 72 2 464 2 680 2 213 2 648 2 215 2 1199 2 1339 2 727 4 1342 2 651 8 429 2 1124 2 1343 2 1257 4 1389 2 175 2 607 2 1259 2 
1209 6 654 4 2 8 1084 2 614 2 776 4 621 2 779 2 404 2 186 2 570 4 624 4 784 2 839 2 962 4 1360 2 1224 2 1274 2 1231 10 535 6 285 2 245 2 329 2 1048 6 703 2 453 6 202 4 800 2 154 2 587 2 893 2 591 2 1324 2 156 2 673 2 593 2 1287 2 1063 4 677 2 462 2 423 12 72 2 464 2 680 2 213 2 648 2 215 2 1199 2 1339 2 727 4 1342 2 651 8 429 2 1124 2 1343 2 1257 4 1389 2 175 2 607 2 1259 2 
1029 2 516 2 1209 24 1032 2 2 2 358 2 3 7 522 1 186 2 1040 1 875 2 1041 4 194 6 1224 2 1231 2 535 4 19 2 537 2 1048 8 1049 6 1051 2 703 2 541 4 202 4 376 2 1057 10 23 6 893 4 25 2 1240 2 207 6 380 2 1063 4 30 1 210 2 213 4 214 7 215 2 34 6 1071 2 1074 8 727 4 729 2 1257 6 1259 2 564 6 1082 1 567 2 41 2 1084 2 907 6 404 2 1090 2 738 2 406 2 570 8 235 6 1098 2 411 6 1274 2 919 2 245 2 56 12 920 6 581 6 582 1 584 4 922 2 755 8 924 4 926 4 247 2 928 2 587 2 931 2 590 1 591 2 65 6 593 2 67 2 1287 4 1288 2 69 2 597 2 423 46 1116 2 598 2 424 4 72 2 260 2 427 4 766 2 429 2 1124 2 265 4 607 2 269 2 614 2 776 4 618 2 273 2 621 2 958 1 1311 2 783 6 624 4 784 2 1139 2 787 6 279 2 962 6 631 2 1147 2 449 6 105 6 453 12 1321 2 108 2 800 2 1324 2 1326 2 463 1 462 2 1333 4 1334 2 464 2 647 1 648 4 1339 2 1341 2 1159 2 1342 2 1343 2 823 2 309 2 1165 2 994 6 653 2 654 4 1356 2 838 2 839 2 483 2 485 2 1360 2 329 2 152 2 154 2 501 2 1014 6 156 2 673 2 336 2 677 2 1020 6 680 2 1199 2 1387 2 175 2 1389 4 
1029 2 516 2 1209 26 269 2 1032 2 434 2 2 6 614 2 358 2 776 4 273 2 618 2 621 2 779 4 186 2 1311 2 875 2 783 6 877 2 624 4 784 2 1041 4 1139 2 279 2 787 6 194 6 962 6 1224 2 1231 2 631 2 535 8 1147 2 19 2 449 6 537 2 105 6 1048 8 1049 6 1051 2 703 2 453 12 541 4 108 2 1321 2 202 4 800 2 376 2 23 6 1057 10 25 2 893 4 1240 2 1324 2 207 6 1326 2 380 2 1063 4 462 2 210 2 1334 2 1333 4 464 2 213 4 648 4 215 2 1071 2 34 6 1074 8 1339 2 727 4 1341 2 1342 2 1159 2 729 4 1343 2 1257 6 823 2 309 2 1259 2 564 6 1165 2 994 6 1346 2 653 2 567 2 654 4 41 4 1084 2 907 6 404 2 1090 2 1356 2 738 2 235 6 838 2 570 8 406 2 839 2 483 2 485 2 1098 2 1360 2 411 6 1274 2 919 2 245 2 56 12 329 2 581 6 920 6 584 8 922 2 152 2 924 4 755 8 247 2 926 4 928 2 154 2 931 2 587 2 501 2 1014 6 591 2 156 2 65 6 593 2 673 2 67 2 1287 4 1288 2 336 2 69 2 677 2 597 2 1020 6 1116 2 423 48 598 4 72 2 680 2 260 2 1199 2 427 4 766 2 429 2 1124 2 1387 2 265 8 1389 4 175 2 607 2 
1029 2 516 2 1209 26 269 2 1032 2 434 2 2 6 614 2 358 2 776 4 273 2 618 2 621 2 779 4 186 2 1311 2 875 2 783 6 877 2 624 4 784 2 1041 4 1139 2 279 2 787 6 194 6 962 6 1224 2 1231 6 631 2 535 8 1147 2 19 2 449 6 537 2 105 6 1048 8 1049 6 1051 2 703 2 453 12 541 4 108 2 1321 2 202 4 800 2 376 2 23 6 1057 10 25 2 893 4 1240 2 1324 2 207 6 1326 2 380 2 1063 4 462 2 210 2 1334 2 1333 4 464 2 213 4 648 4 215 2 1071 2 34 6 1074 8 1339 2 727 4 1341 2 1342 2 1159 2 729 4 651 4 1343 2 1257 6 823 2 309 2 1259 2 564 6 1165 2 994 6 1346 2 653 2 567 2 654 4 41 4 1084 2 907 6 404 2 1090 2 1356 2 738 2 235 6 838 2 570 8 406 2 839 2 483 2 485 2 1098 2 1360 2 411 6 1274 2 919 2 245 2 56 12 329 2 581 6 920 6 584 8 922 2 152 2 924 4 755 8 247 2 926 4 928 2 154 2 931 2 587 2 501 2 1014 6 591 2 156 2 65 6 593 2 673 2 67 2 1287 4 1288 2 336 2 69 2 677 2 597 2 1020 6 1116 2 423 48 598 4 72 2 680 2 260 2 1199 2 427 4 766 2 429 2 1124 2 1387 2 265 8 1389 4 175 2 607 2 
1029 4 516 2 1209 24 354 2 1032 2 2 6 358 4 4 6 186 2 875 2 877 2 1041 4 1219 2 194 6 1224 2 1231 6 535 10 19 2 537 2 1048 10 1049 6 1051 2 703 2 541 4 202 4 376 2 23 12 1057 8 893 4 25 2 894 2 207 6 380 2 1063 4 210 2 213 4 215 2 1252 6 34 8 1071 2 1074 8 727 4 729 4 1257 6 1259 2 564 6 567 2 41 4 1084 2 907 6 404 2 1090 2 738 2 740 6 406 2 570 8 235 6 1098 2 1099 2 411 12 1274 2 919 2 245 2 56 10 920 8 581 12 584 10 922 2 755 12 924 6 925 2 926 4 247 2 928 4 587 2 931 2 591 2 65 12 593 2 67 2 1287 4 1288 2 69 2 597 2 423 52 1116 2 598 4 424 2 72 2 260 2 427 4 766 2 429 2 1124 2 265 10 84 2 607 2 269 2 434 2 614 2 776 4 618 2 273 2 779 4 621 2 1311 2 783 6 624 4 784 2 1139 2 279 2 787 6 1141 6 962 6 631 2 1147 2 449 6 105 12 290 6 453 16 1321 4 108 2 800 2 1324 2 1326 2 462 2 1333 4 1334 2 464 2 648 4 1339 2 1341 2 1342 2 1159 2 473 6 651 4 1343 2 823 2 309 2 1165 2 994 12 1346 2 653 2 654 4 998 6 1356 2 838 2 839 2 483 2 485 2 1360 2 489 6 327 2 1363 2 329 2 152 4 1366 6 154 2 501 2 1014 6 156 2 673 2 336 2 677 2 1020 6 680 2 1199 2 1387 2 864 2 175 2 1389 4 
453 4 202 4 154 2 587 2 654 4 1324 2 1084 2 2 6 776 2 593 2 673 2 779 2 404 2 1063 2 423 4 570 2 624 2 839 2 962 2 680 2 1224 2 1360 2 648 2 215 2 1199 2 1231 4 535 6 1339 2 245 2 1048 6 651 4 429 2 1124 2 1343 2 703 2 
1209 24 955 2 1032 2 2 6 358 3 776 2 93 2 779 2 875 2 624 2 784 2 1139 2 962 2 1224 2 1231 2 535 6 1048 6 703 2 453 4 373 2 541 4 202 4 1321 3 800 2 1057 2 1324 2 1240 2 380 2 1063 2 462 2 210 2 1333 4 213 4 648 2 215 2 34 6 1339 2 1341 2 1159 2 222 2 1343 2 1257 6 563 2 1259 2 309 2 1165 2 567 2 827 3 654 4 1084 2 907 6 908 2 404 2 1356 2 738 2 913 2 570 2 838 2 839 2 483 2 1360 2 1179 2 919 2 245 2 329 2 56 4 920 6 923 2 152 3 755 8 924 4 154 2 587 2 501 2 591 2 673 2 593 2 67 2 1287 4 1288 2 597 2 423 28 72 2 680 2 1199 2 427 2 429 2 1124 2 175 2 
1209 6 654 4 2 8 1084 2 614 2 776 4 621 2 779 2 404 2 186 2 570 4 624 4 784 2 839 2 962 4 1360 2 1224 2 1274 2 1231 10 535 6 285 2 245 2 329 2 1048 6 703 2 453 6 202 4 800 2 154 2 587 2 893 2 591 2 1324 2 156 2 673 2 593 2 1287 2 1063 4 677 2 462 2 423 12 72 2 464 2 680 2 213 2 648 2 215 2 1199 2 1339 2 727 4 1342 2 651 8 429 2 1124 2 1343 2 1257 4 1389 2 175 2 607 2 1259 2 
1209 6 654 4 2 8 1084 2 614 2 776 4 480 4 621 2 779 2 404 2 186 2 570 4 624 4 784 2 839 2 962 4 842 2 1360 2 1224 2 1274 2 1231 10 535 8 245 2 329 2 1048 6 703 2 453 8 202 4 800 2 154 2 587 2 893 2 591 2 1324 2 156 2 673 2 593 2 1287 2 1063 4 677 2 462 2 423 12 72 2 1154 2 464 2 680 2 213 2 648 2 215 2 1199 2 1339 2 727 4 1342 2 651 8 429 2 1124 2 1257 4 1389 2 175 2 607 2 84 2 1259 2 
673 2 1224 2 415 2 
673 2 1224 2 415 2 
516 2 1209 16 269 2 1032 2 2 6 520 4 776 2 621 2 779 4 186 2 875 2 624 2 784 2 1041 2 1139 2 1142 2 962 4 1224 6 1231 6 535 12 701 2 1048 12 1234 2 538 2 541 4 453 16 108 4 1321 2 202 4 800 2 1057 2 893 4 1324 2 380 2 1063 2 462 2 210 2 1333 4 719 2 464 2 465 4 1069 2 213 4 648 4 34 2 1339 2 727 4 1341 2 1159 2 1158 2 1255 2 729 4 651 4 1257 6 223 2 309 2 1259 2 1165 2 567 2 654 4 1083 2 41 4 907 6 404 2 1356 2 738 2 235 2 838 2 570 4 839 2 573 4 483 2 143 2 1360 4 919 2 329 2 56 4 920 2 415 2 584 4 755 2 926 2 1368 2 930 2 501 2 591 2 156 2 673 4 67 2 157 2 1191 2 1287 4 1288 2 336 2 423 24 598 4 424 4 72 2 1024 2 945 2 168 2 427 6 265 4 1389 2 607 2 84 4 
927 2 1368 2 653 2 1209 2 1098 2 1057 2 531 2 1083 2 614 2 56 2 1160 2 329 2 1255 2 235 2 423 4 847 2 1041 2 
516 2 1209 16 269 2 1032 2 2 6 520 4 776 2 621 2 779 4 186 2 875 2 624 2 784 2 1139 2 962 4 1220 2 1224 6 1231 6 535 12 1048 12 1234 2 538 1 541 4 453 16 108 4 1321 4 202 4 800 2 893 4 1324 2 380 2 1063 2 462 2 210 2 1333 4 719 2 464 2 465 4 1069 4 213 4 648 4 34 2 216 2 1339 2 727 4 1341 2 1342 2 1159 2 1158 2 1255 2 729 4 651 4 1257 6 822 2 223 2 309 2 1259 2 1165 2 567 2 654 4 1349 2 1083 2 41 4 907 6 404 2 1356 2 738 2 235 2 570 4 838 2 839 2 573 4 483 2 1360 4 413 2 919 2 329 2 56 2 920 2 415 2 584 4 755 2 926 2 1368 2 930 2 501 2 591 2 156 2 673 4 67 2 157 2 1191 2 1287 4 1288 2 336 2 423 24 598 4 424 4 72 2 1024 2 168 2 427 6 265 4 1389 4 607 2 84 4 
516 2 1209 16 269 2 1032 2 2 6 520 4 776 2 621 2 779 4 186 2 875 2 624 2 784 2 1041 2 1139 2 962 4 1224 6 1231 6 535 12 1048 12 1234 2 538 1 541 4 453 16 108 4 1321 2 202 4 800 2 1057 2 893 4 1324 2 1062 2 380 2 1063 2 112 2 462 2 210 2 1333 4 719 2 464 2 465 4 1069 2 213 4 648 4 987 2 34 2 1339 2 727 4 1341 2 1342 2 1159 2 1158 2 1255 2 729 4 651 4 1257 6 223 2 309 2 1259 2 1165 2 567 2 654 4 1083 2 41 4 907 6 404 2 1356 2 1091 2 738 2 235 2 838 2 570 4 839 2 573 4 483 2 1360 4 919 2 329 2 56 4 920 2 1280 2 415 2 584 4 755 2 926 2 1368 2 930 2 501 2 591 2 156 2 673 4 67 2 157 2 1191 2 1287 4 1288 2 336 2 423 24 598 4 424 4 72 2 1024 2 168 2 427 6 265 4 1389 4 607 2 84 4 
686 14 1029 20 353 16 354 2 1032 2 1 2 1033 2 358 16 5 2 1038 2 1039 6 11 3 1043 2 361 3 15 12 1046 2 1047 2 698 2 702 2 370 2 369 2 20 10 704 14 1056 2 374 6 708 2 710 6 1060 2 380 4 382 4 1064 2 1068 2 386 2 1070 2 34 14 35 2 728 2 1079 2 731 2 734 1 1085 2 1087 2 403 6 1089 2 737 4 738 6 47 2 51 2 1095 24 409 2 1099 2 746 2 748 2 749 1 750 6 56 2 1105 4 59 2 755 28 1109 4 418 2 420 4 67 2 422 16 760 2 423 64 1116 2 71 2 72 2 73 2 761 4 1119 2 77 2 78 4 427 2 80 2 765 2 428 6 81 12 82 2 766 2 430 2 432 3 770 2 780 4 1136 2 1137 2 439 2 784 2 1139 4 443 8 100 4 789 2 101 2 791 2 1147 2 796 2 451 2 109 2 108 4 799 2 800 2 1152 4 459 2 460 2 462 2 114 1 116 2 118 2 468 4 124 8 1156 2 470 16 818 16 1159 2 823 4 824 2 131 2 1165 2 825 2 827 2 1168 2 477 4 830 2 135 2 1169 2 833 22 835 4 481 4 836 4 138 2 838 2 139 2 483 2 1176 2 487 16 841 2 488 2 846 4 150 2 492 2 493 2 1184 4 152 19 495 2 500 2 501 2 155 1 1188 2 503 1 1190 2 852 2 505 2 159 2 508 2 162 2 163 4 1195 2 509 2 510 2 164 4 512 3 165 4 858 2 1201 2 860 4 171 2 1206 4 864 2 863 2 174 1 1207 4 1208 2 1209 52 869 2 870 2 521 2 182 2 526 4 874 2 875 9 187 2 529 2 191 2 192 2 193 2 1219 2 1225 3 532 6 1228 2 1230 3 886 3 199 2 538 1 201 2 541 20 540 2 888 2 1237 2 1239 2 894 2 896 8 208 2 209 6 210 4 555 2 556 2 1245 6 213 4 558 2 217 2 220 2 222 2 1257 6 563 2 1259 2 902 16 567 2 227 4 568 2 907 39 228 2 908 2 1265 1 1267 14 911 2 230 4 232 2 1269 2 234 2 1270 2 239 4 241 2 576 2 919 2 578 2 920 14 583 2 584 35 922 2 925 2 924 12 928 46 591 2 935 2 594 2 1285 2 254 16 1287 4 597 2 944 2 600 4 1295 2 264 6 265 32 953 14 266 16 1298 2 1302 6 1300 4 955 2 615 2 616 2 620 1 619 2 1309 2 622 2 625 2 1315 2 280 2 966 2 631 2 282 4 283 10 1321 19 975 8 292 2 1323 2 295 16 1325 2 639 2 1326 2 297 2 298 2 299 2 642 2 1331 2 1332 2 1333 18 302 1 301 1 303 4 982 12 1335 2 983 2 1337 2 988 2 1341 6 990 2 1344 2 308 2 309 9 311 2 1348 2 997 2 1352 4 1354 2 316 2 1356 2 1357 10 1000 2 1002 2 320 2 321 2 1361 2 1009 8 324 18 327 2 1010 16 665 2 328 2 329 2 330 1 667 2 1365 2 334 2 335 4 1019 2 338 12 340 6 342 4 344 2 347 2 351 10 1388 2 1390 2 685 2 
1321 2 1209 2 928 6 1239 2 1188 2 358 2 1087 2 911 2 597 2 1357 2 423 2 191 2 162 2 361 2 791 2 34 2 1046 2 859 2 920 2 351 4 20 2 152 2 755 2 924 2 
1321 2 1209 2 928 6 1239 2 1188 2 358 2 1087 2 911 2 597 2 1357 2 423 2 191 2 162 2 361 2 791 2 34 2 1046 2 859 2 920 2 351 4 20 2 152 2 755 2 924 2 
1321 2 1209 2 928 6 1239 2 1188 2 358 2 1087 2 911 2 597 2 1357 2 423 2 191 2 162 2 361 2 791 2 34 2 1046 2 859 2 920 2 351 4 20 2 152 2 755 2 924 2 
266 5 352 2 1321 3 1209 4 518 2 974 2 975 2 227 2 403 4 524 2 420 2 778 4 834 2 780 2 911 2 230 2 782 2 737 2 597 2 1216 2 423 10 1173 3 189 4 554 2 141 2 1155 2 443 2 1225 3 103 4 197 4 1009 2 124 2 283 6 81 4 450 4 886 3 1105 2 1206 2 152 3 755 2 
266 4 352 2 1321 2 1209 4 518 2 974 2 1302 2 975 2 227 2 403 4 524 2 420 2 778 4 834 2 780 2 911 2 230 2 782 2 737 2 597 2 1216 2 423 10 1173 2 189 4 554 2 141 2 1155 2 443 2 761 2 1225 2 103 4 1338 2 197 4 1009 2 124 2 283 6 81 4 450 4 886 2 1105 2 1206 2 152 2 755 2 
266 4 352 2 1321 2 1209 4 518 2 974 2 1302 2 975 2 227 2 403 4 524 2 420 2 778 4 834 2 780 2 911 2 230 2 782 2 737 2 597 2 1216 2 423 10 1173 2 189 4 554 2 141 2 1155 2 443 2 761 2 1225 2 103 4 1338 2 197 4 1009 2 124 2 283 6 81 4 450 4 886 2 1105 2 1206 2 152 2 755 2 
266 4 352 2 1321 2 1209 4 518 2 974 2 1302 2 975 2 227 2 403 4 524 2 420 2 778 4 834 2 780 2 911 2 230 2 782 2 737 2 597 2 1216 2 423 10 1173 2 189 4 554 2 141 2 1155 2 443 2 761 2 1225 2 103 4 1338 2 197 4 1009 2 124 2 283 6 81 4 450 4 886 2 1105 2 1206 2 152 2 755 2 
266 4 352 2 1321 2 1209 4 518 2 974 2 1302 4 975 2 227 2 403 4 524 2 420 2 778 4 834 2 780 2 911 2 230 2 782 2 737 2 597 2 1216 2 423 10 1173 2 189 4 554 2 141 2 1155 2 443 2 761 4 1225 2 103 4 1338 4 197 4 1009 2 124 2 283 6 81 4 450 4 886 2 1105 2 1206 2 152 2 755 2 
1264 2 747 2 811 2 1108 2 760 2 252 2 
242 2 1267 2 472 2 475 2 466 2 205 2 252 2 
1209 8 826 2 23 2 433 2 419 1 591 2 801 2 937 2 895 2 183 2 714 2 1134 2 233 1 1193 1 1117 2 423 10 854 2 557 2 1004 1 1291 2 79 2 1202 2 244 2 246 2 865 2 1319 1 
266 16 1209 6 975 6 1302 4 1260 2 1348 2 227 6 420 2 403 4 335 2 780 6 835 2 940 2 230 6 737 6 423 6 1002 2 1096 2 385 2 761 2 121 2 532 4 1338 2 1009 6 124 6 146 2 221 2 81 12 861 2 1050 4 
38 3 889 2 878 2 706 2 103 2 197 2 655 2 126 2 778 2 819 2 461 2 1312 2 255 2 
38 6 1194 1 889 2 878 2 706 2 1209 1 723 2 103 2 197 2 655 2 126 2 778 2 819 2 29 2 461 2 1312 4 423 1 255 2 
38 6 889 2 878 4 706 2 723 2 103 2 197 2 655 4 126 4 778 2 819 2 29 2 461 2 1312 4 255 2 
38 10 1194 1 889 2 878 8 706 2 1209 1 723 8 103 2 197 2 655 8 126 8 778 2 819 2 29 6 461 2 1312 4 423 1 255 2 
1125 2 432 6 1209 70 1298 4 1300 11 869 4 91 2 690 16 437 2 1038 4 620 4 781 2 1039 10 875 28 1136 8 11 4 625 8 1043 4 961 2 786 16 1315 6 280 4 1143 4 536 4 369 2 796 4 538 1 289 10 201 4 541 44 972 8 374 10 292 4 22 2 708 4 380 2 208 4 113 4 114 4 1331 4 1333 36 301 2 1245 14 303 24 1067 4 1068 4 986 2 468 8 217 4 1156 4 220 4 1341 6 308 4 309 26 131 2 652 32 734 2 396 8 1085 4 228 4 907 102 997 2 135 4 831 2 1169 4 833 30 1171 2 738 6 1000 4 1001 2 1094 10 574 4 575 1 409 8 576 4 1097 10 321 4 578 4 749 4 750 10 330 2 492 4 584 16 752 4 1106 2 59 4 495 4 250 2 1109 10 500 4 418 4 155 4 1190 16 1374 2 254 24 852 4 505 4 423 78 1118 2 1381 8 509 4 164 6 77 4 1122 4 345 8 860 24 172 2 174 2 1388 4 684 2 
131 2 432 4 1298 4 1209 26 611 2 1300 2 997 2 907 40 1265 1 620 2 833 6 1039 6 1171 2 738 2 875 12 1000 4 278 2 961 2 1315 2 409 5 321 2 578 2 1010 10 749 2 750 6 330 2 492 4 369 2 538 2 584 14 1106 2 541 14 250 2 1109 2 374 6 418 4 707 2 22 2 155 2 1372 2 759 2 1286 2 596 2 254 8 852 2 380 2 422 2 423 28 114 4 1333 14 302 1 509 4 1249 2 164 2 1156 2 1341 2 308 4 684 2 309 12 
1125 2 432 8 609 4 1297 4 1209 104 1298 6 611 2 1301 4 1300 12 89 2 1031 2 869 6 92 26 956 2 1038 4 1308 8 620 2 1039 12 875 42 1136 12 11 1 625 30 190 8 1043 6 961 2 1315 6 530 2 280 6 1316 10 632 2 369 4 796 4 201 6 541 74 374 12 707 2 292 6 22 2 708 6 976 10 1060 6 380 8 208 6 114 4 1331 4 1332 12 32 38 1333 62 302 6 301 2 1245 12 303 62 1246 2 1068 6 1249 2 984 2 33 2 814 2 468 24 217 4 1156 6 220 6 1341 14 474 8 1080 6 308 6 309 42 131 4 734 2 1085 4 228 4 907 164 997 4 135 4 1265 5 1169 6 833 28 44 38 738 14 1000 6 408 26 1093 2 409 9 576 6 321 6 578 6 1010 18 580 4 749 2 750 12 330 4 1103 10 492 6 584 16 1106 2 59 6 753 2 754 2 495 4 497 8 1109 14 500 6 418 6 933 2 155 2 759 2 1190 30 1374 2 596 2 1286 2 254 66 852 6 505 4 422 4 508 12 423 116 509 6 164 18 77 4 860 60 174 2 1388 6 684 2 
867 2 131 2 432 6 1298 2 1209 44 1300 2 1301 2 1037 2 907 48 997 2 401 2 1308 2 1133 4 781 2 1171 2 1039 4 738 2 875 6 1000 2 694 2 278 2 1358 2 440 2 1094 2 190 2 1271 2 961 2 1003 2 195 2 880 2 1315 2 1097 2 577 2 321 2 1316 2 745 2 578 2 580 2 750 4 1103 2 492 2 1279 4 368 2 369 2 287 4 538 2 584 36 1106 2 289 2 1054 2 541 20 250 2 1109 2 497 2 374 4 418 2 293 2 22 2 155 2 24 2 976 2 756 2 1372 2 637 2 852 2 254 6 111 2 380 2 941 2 423 46 300 2 1022 2 1333 20 718 2 1153 2 944 4 1290 2 643 2 509 2 646 2 164 2 1156 2 343 2 818 6 947 2 1341 2 172 2 950 2 308 2 684 2 309 6 
68 2 

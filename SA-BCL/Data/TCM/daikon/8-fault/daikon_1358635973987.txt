#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.NullPointerException 659 (226,1201) (226,1201) 1223 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V ERROR java.lang.ArrayIndexOutOfBoundsException 1304 
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V FAILED junit.framework.ComparisonFailure 
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 459 1323 119 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 1270 922 866 170 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 1270 922 866 170 
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 1270 922 866 170 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 1270 922 866 170 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_0()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_1()V ERROR java.lang.RuntimeException (797,1411) (797,1411) (207,1274) (207,1274) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_2()V ERROR java.lang.RuntimeException (797,1411) (797,1411) (207,1274) (207,1274) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_3()V ERROR java.lang.RuntimeException (797,1411) (797,1411) (207,1274) (207,1274) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_4()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_5()V ERROR java.lang.RuntimeException (797,1411) (797,1411) (207,1274) (207,1274) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_6()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_7()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_8()V ERROR java.lang.RuntimeException (797,1411) (797,1411) (207,1274) (207,1274) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_9()V ERROR java.lang.RuntimeException (797,1411) (797,1411) (207,1274) (207,1274) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_10()V ERROR java.lang.RuntimeException (797,1411) (797,1411) (207,1274) (207,1274) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_11()V ERROR java.lang.RuntimeException (797,1411) (797,1411) (207,1274) (207,1274) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_12()V ERROR java.lang.RuntimeException (797,1411) (797,1411) (207,1274) (207,1274) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_13()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_14()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_15()V ERROR java.lang.RuntimeException (797,1411) (797,1411) (207,1274) (207,1274) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_16()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_17()V ERROR java.lang.RuntimeException (797,1411) (797,1411) (207,1274) (207,1274) 
daikon.test.split.SplitterFactoryTest:testmisc_Fib_main_18()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_19()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_20()V ERROR java.lang.RuntimeException (797,1411) (797,1411) (207,1274) (207,1274) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_21()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_22()V ERROR java.lang.RuntimeException (797,1411) (797,1411) (207,1274) (207,1274) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_23()V ERROR java.lang.RuntimeException (797,1411) (797,1411) (207,1274) (207,1274) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_24()V ERROR java.lang.RuntimeException (797,1411) (797,1411) (207,1274) (207,1274) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_25()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_26()V ERROR java.lang.RuntimeException (797,1411) (797,1411) (207,1274) (207,1274) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_27()V ERROR java.lang.RuntimeException (797,1411) (797,1411) (207,1274) (207,1274) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_28()V ERROR java.lang.RuntimeException (797,1411) (797,1411) (207,1274) (207,1274) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_29()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_30()V ERROR java.lang.RuntimeException (797,1411) (797,1411) (207,1274) (207,1274) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_31()V ERROR java.lang.RuntimeException (797,1411) (797,1411) (207,1274) (207,1274) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_32()V ERROR java.lang.RuntimeException (797,1411) (797,1411) (207,1274) (207,1274) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__33()V ERROR java.lang.RuntimeException (797,1411) (797,1411) (207,1274) (207,1274) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__34()V ERROR java.lang.RuntimeException (797,1411) (797,1411) (207,1274) (207,1274) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__35()V ERROR java.lang.RuntimeException (797,1411) (797,1411) (207,1274) (207,1274) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__36()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__37()V ERROR java.lang.RuntimeException (797,1411) (797,1411) (207,1274) (207,1274) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__38()V ERROR java.lang.RuntimeException (797,1411) (797,1411) (207,1274) (207,1274) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__39()V ERROR java.lang.RuntimeException (797,1411) (797,1411) (207,1274) (207,1274) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__40()V ERROR java.lang.RuntimeException (797,1411) (797,1411) (207,1274) (207,1274) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__41()V ERROR java.lang.RuntimeException (797,1411) (797,1411) (207,1274) (207,1274) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__42()V ERROR java.lang.RuntimeException (797,1411) (797,1411) (207,1274) (207,1274) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__43()V ERROR java.lang.RuntimeException (797,1411) (797,1411) (207,1274) (207,1274) 

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.Quant:lexGT([I[I)Z
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.Quant:pairwiseEqual([I[I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.VarInfoName:hashCode()I
daikon.VarInfoName.InorderFlattener:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
jtb.syntaxtree.ImportDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
jtb.syntaxtree.CompilationUnit:getParent()Ljtb.syntaxtree.Node;
jtb.syntaxtree.NodeList:NodeList()V
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
jtb.JavaParser:jj_3R_75()Z
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.Quant:subsetOf([F[D)Z
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_56()Z
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Name;)V
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_109()Z
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
jtb.syntaxtree.NodeSequence:getParent()Ljtb.syntaxtree.Node;
daikon.VarInfoName.Elements:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:subsetOf([B[I)Z
daikon.VarInfo:apply_subscript(Ljava.lang.String;)Ljava.lang.String;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
jtb.syntaxtree.TypeDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PostfixExpression;)V
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.inv.unary.sequence.EltNonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
jtb.syntaxtree.ExclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Block;)V
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
daikon.tools.jtb.SimpleTreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:eltsLTE([II)Z
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3R_87()Z
jtb.JavaCharStream:readChar()C
jtb.JavaParser:jj_2_13(I)Z
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.LimitedSizeIntSet:size()I
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.Quant:eltwiseLT([I)Z
daikon.VarInfoName.InorderFlattener:InorderFlattener(Ldaikon.VarInfoName;)V
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.tools.jtb.Ast:format(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.ModBitTracker:num_samples()I
daikon.inv.unary.sequence.EltOneOf:enabled()Z
daikon.VarInfoName.Elements:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
daikon.Quantify.IOAQuantification:getClosingExp()Ljava.lang.String;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
utilMDE.UtilMDE:lineNumberFileReader(Ljava.io.File;)Ljava.io.LineNumberReader;
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_62()Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.inv.unary.sequence.EltLowerBound:format_simplify()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
jtb.syntaxtree.ReferenceType:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.Quant:subsetOf([F[F)Z
daikon.inv.ValueSet:ValueSet(I)V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
jtb.JavaParser:jj_3R_161()Z
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
utilMDE.FuzzyFloat:ne(DD)Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.Quant:slice([III)[I
daikon.inv.unary.sequence.EltOneOf:format_simplify()Ljava.lang.String; | CONSTANT | 16315 | 0 -> -1
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
jtb.syntaxtree.NodeChoice:getParent()Ljtb.syntaxtree.Node;
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.Quant:ne(II)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReturnStatement;)V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.tools.jtb.Ast:getPackage(Ljtb.syntaxtree.CompilationUnit;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.InvariantFormatTester:execute()Z
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3_15()Z
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:pairwiseLT([I[I)Z
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_2_21(I)Z
jtb.syntaxtree.AdditiveExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ImportDeclaration;)V
daikon.PptSlice0:arity()I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.BlockStatement;)V
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.Quant:memberOf(D[F)Z
jtb.JavaParser:jj_3R_125()Z
daikon.inv.unary.sequence.EltOneOf:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
jtb.syntaxtree.Literal:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_48()Z
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.inv.unary.sequence.EltOneOf:format_daikon()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
jtb.syntaxtree.Name:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
utilMDE.SimpleLog.LongVal:LongVal(J)V
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
jtb.syntaxtree.TypeDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.VarInfo:esc_name()Ljava.lang.String;
utilMDE.UtilMDE:split(Ljava.lang.String;Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaCharStream:getBeginLine()I
daikon.Quant:lte(II)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
jtb.JavaParser:jj_3R_100()Z
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
jtb.syntaxtree.NodeSequence:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE:gcd([I)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AndExpression;)V
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.MathMDE:nonmodulus_strict([I)[I
jtb.syntaxtree.Modifiers:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:eltsEqualIndex([I)Z
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.Quant:eq(FF)Z
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
utilMDE.MathMDE:mod_positive(II)I
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.UtilMDE:removeWhitespaceAfter(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.Quant:sameLength([I[I)Z
jtb.JavaParser:jj_3R_107()Z
jtb.syntaxtree.VariableDeclaratorId:VariableDeclaratorId(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
jtb.syntaxtree.NodeListOptional:elements()Ljava.util.Enumeration;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;)V
daikon.inv.unary.sequence.EltNonZero:EltNonZero(Ldaikon.PptSlice;)V
jtb.JavaParser:getToken(I)Ljtb.Token;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:domainTypeIOA()Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpression;)V
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_102()Z
daikon.inv.unary.scalar.Modulus:enabled()Z
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljtb.syntaxtree.Node;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PackageDeclaration;)V
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryExpression;)V
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
daikon.Quant:pairwiseLTE([I[I)Z
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.MathMDE:gcd(JJ)J
utilMDE.OrderedPairIterator:hasNext()Z
jtb.syntaxtree.ClassOrInterfaceDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReferenceType;)V
daikon.PptSlice0.ImplicationWrapper:hashCode()I
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeOptional:accept(Ljtb.visitor.Visitor;)V
utilMDE.UtilMDE:splitLines(Ljava.lang.String;)[Ljava.lang.String;
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:sum([D)D
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.Quant:eltsEqual([II)Z | OPERATOR | 161601 | < -> >
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
jtb.JavaParser:jj_3R_121()Z
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:lt(II)Z
daikon.test.TestQuant:removeAdjacentDups([I)[I
jtb.syntaxtree.Expression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.MathMDE:pow(II)I
utilMDE.FuzzyFloat:lte(DD)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.VariableDeclaratorId:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([II)I
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:noDuplicates([I)Z
utilMDE.OrderedPairIterator:setnext2()V
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_114()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
jtb.syntaxtree.ConditionalExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_126()Z
jtb.JavaParser:jj_3R_85()Z
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.Block:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:subsetOf([I[I)Z
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.TypeArguments:TypeArguments(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeArgument;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.CompilationUnit;)V
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 2297 | = null
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:memberOf(I[I)Z
daikon.VarInfo:jml_name()Ljava.lang.String;
jtb.JavaParser:jj_3_20()Z
daikon.Quant:lexNotEqual([I[I)Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
utilMDE.MathMDE:gcd_differences([I)I
daikon.ValueTuple:isMissingNonsensical(I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InstanceOfExpression;)V
daikon.Quant:lexGTE([I[I)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_69()Z
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.NodeToken:trimSpecials()V
jtb.JavaParser:jj_3_35()Z
jtb.syntaxtree.FormalParameter:FormalParameter(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Type;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.VariableDeclaratorId;)V
jtb.JavaParser:jj_3R_80()Z
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.ArraysMDE:min([I)I
jtb.JavaParser:jj_scan_token(I)Z
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.Ppt:indexOf(Ljava.lang.String;)I
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_58()Z
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
utilMDE.Intern:internSubsequence([III)[I
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.ProglangType:baseIsScalar()Z
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
jtb.JavaParser:jj_3_12()Z
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:copy(Ljava.util.HashMap;)Ljava.util.HashMap;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
jtb.syntaxtree.NodeSequence:elements()Ljava.util.Enumeration;
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
jtb.syntaxtree.ClassOrInterfaceBody:ClassOrInterfaceBody(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_61()Z
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.VarInfo:simplify_quantify(Ljava.util.EnumSet;[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.inv.filter.InvariantFilters:InvariantFilters()V
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
jtb.syntaxtree.MethodDeclarator:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.EqualityExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeListOptional:getParent()Ljtb.syntaxtree.Node;
jtb.syntaxtree.ClassOrInterfaceBody:getParent()Ljtb.syntaxtree.Node;
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.VarInfo:isPrestate()Z
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
jtb.JavaParser:jj_2_4(I)Z
jtb.JavaParser:jj_3R_67()Z
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
jtb.syntaxtree.TypeArgument:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_47()Z
jtb.Token:newToken(I)Ljtb.Token;
jtb.syntaxtree.FormalParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:gte(II)Z
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE:negate(I)I
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.InstanceOfExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ProglangType:isArray()Z
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ModBitTracker:num_sets()I
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.visitor.TreeDumper:printToken(Ljava.lang.String;)V
utilMDE.ArraysMDE:sorted([I)Z
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.VarInfo:simplify_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
jtb.JavaParser:jj_3R_106()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.inv.unary.sequence.EltOneOf:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.tools.jtb.Ast:getParameters(Ljtb.syntaxtree.MethodDeclaration;)Ljava.util.List;
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.ArraysMDE:sum([[I)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;)V
utilMDE.LimitedSizeIntSet:add(I)V
jtb.JavaParser:JavaParser(Ljava.io.Reader;)V
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.unary.sequence.EltNonZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.Quant:memberOf(F[D)Z
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_57()Z
utilMDE.MathMDE:mod_positive(JJ)J
daikon.ValueTuple:tuplemodHasModified(I)Z
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
jtb.syntaxtree.NodeSequence:elementAt(I)Ljtb.syntaxtree.Node;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ShiftExpression;)V
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String; | ASSIGN | 283084 | = null
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.VarInfoName.InorderFlattener:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:jj_3R_73()Z
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:passes()Z
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
jtb.JavaParser:jj_3R_135()Z
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3R_169()Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
daikon.config.Configuration:apply(Ljava.lang.String;)V
jtb.JavaParser:jj_3R_122()Z
daikon.ModBitTracker:split(I)I
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
daikon.ProglangType:isIntegral()Z
utilMDE.ArraysMDE:sum([I)I
jtb.JavaParser:jj_3R_134()Z
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.Quantify.Term:ioa_name()Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3_29()Z
jtb.syntaxtree.Statement:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.TypeArguments:accept(Ljtb.visitor.Visitor;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
utilMDE.ArraysMDE:element_range([I)I
daikon.Quant:noDups([I)Z
jtb.syntaxtree.CompilationUnit:CompilationUnit(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfo:isDerived()Z
jtb.JavaParser:jj_3_4()Z
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_70()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
jtb.syntaxtree.TypeParameters:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
jtb.JavaParser:jj_3R_120()Z
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
jtb.JavaParser:jj_3_18()Z
jtb.syntaxtree.ResultType:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.EqualityExpression;)V
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.tools.jtb.PptNameMatcher:PptNameMatcher(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.InorderFlattener:nodes()Ljava.util.List;
utilMDE.Intern:intern([D)[D
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
jtb.JavaParser:jj_3R_180()Z
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.Quant:pairwiseDivides([I[I)Z
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
jtb.JavaParser:jj_3R_118()Z
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_77()Z
daikon.Quantify.QuantifyReturn:QuantifyReturn(Ldaikon.VarInfo;)V
daikon.Quant:eq(II)Z
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltOneOf:format_esc()Ljava.lang.String;
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeChoice:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBody;)V
daikon.ProglangType:isPseudoArray()Z
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
jtb.JavaParser:jj_3_28()Z
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
daikon.Quant:lexEqual([I[I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameters;)V
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
utilMDE.FuzzyFloat:set_rel_diff(D)V
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:prob_and(DDD)D
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.tools.jtb.Ast:getName(Ljtb.syntaxtree.MethodDeclaration;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.Quant:concat([I[I)[I
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.VarInfo:new_ppt()V
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArguments;)V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.Quant:pairwiseSquare([I[I)Z
daikon.inv.Invariant:isWorthPrinting()Z
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_163()Z
jtb.JavaParser:jj_3R_97()Z
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.inv.unary.sequence.EltOneOf:is_boolean()Z
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaCharStream:ReadByte()C
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameters;)V
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
daikon.PptSlice1:num_samples()I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
jtb.JavaParser:jj_3_14()Z
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltNonZero:format_daikon()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
daikon.Quant:eltsGtIndex([I)Z
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
jtb.JavaParser:jj_3R_99()Z
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
jtb.JavaParser:jj_3R_123()Z
daikon.VarInfo:java_name()Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
jtb.JavaParser:jj_3R_98()Z
daikon.Quant:eltsNotEqual([II)Z
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
utilMDE.Intern:numIntArrays()I
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.FuzzyFloat:FuzzyFloat()V
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltNonZero:enabled()Z
daikon.Ppt:find_var_by_name(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.Quant:isReverse([I[I)Z
jtb.syntaxtree.ClassOrInterfaceDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.VarInfo:isIOAArray()Z
jtb.JavaParser:jj_3R_72()Z
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.inv.unary.sequence.EltOneOf:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.TypeParameter:accept(Ljtb.visitor.Visitor;)V
daikon.tools.jtb.PptNameMatcher:extractPptArgs(Ldaikon.PptName;)Ljava.util.List; | ASSIGN | 8758 | = null
daikon.inv.unary.sequence.EltOneOf:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:FormalParameter()Ljtb.syntaxtree.FormalParameter;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
jtb.syntaxtree.BlockStatement:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeToken:numSpecials()I
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.Quant:eltsGTE([II)Z
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.RelationalExpression;)V
jtb.syntaxtree.PrimaryExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
jtb.JavaParser:jj_3_36()Z
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_68()Z
jtb.JavaParser:jj_3R_117()Z
daikon.PptName:isEnterPoint()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclarator;)V
jtb.syntaxtree.MultiplicativeExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.WeakHasherMap.EntrySet:size()I
jtb.syntaxtree.ClassOrInterfaceBody:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:fn_identity(I)[I
jtb.JavaParser:jj_3R_136()Z
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3R_81()Z
daikon.Quant:subsetOf([D[D)Z
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_148()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameter;)V
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.Quant:setEqual([I[I)Z
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.RelationalExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
utilMDE.WeakHasherMap:size()I
jtb.JavaParser:jj_3R_55()Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.ProglangType:isPointerFileRep()Z
daikon.Ppt:Ppt()V
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
jtb.syntaxtree.TypeArgument:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_115()Z
jtb.syntaxtree.MethodDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ModBitTracker:num_vars()I
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.PptName:isCombinedExitPoint()Z
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
daikon.Quant:eltsNotEqualIndex([I)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.ConditionalAndExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.syntaxtree.AndExpression:accept(Ljtb.visitor.Visitor;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.inv.unary.scalar.Positive:enabled()Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
utilMDE.ArraysMDE:subarray([III)[I
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.ProglangType:isScalar()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MultiplicativeExpression;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeOptional;)V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
utilMDE.Assert:assertTrue(Z)V
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_162()Z
jtb.syntaxtree.TypeDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3R_110()Z
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfo:isPointer()Z
jtb.visitor.TreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ConditionalOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
jtb.JavaCharStream:backup(I)V
jtb.syntaxtree.FormalParameter:accept(Ljtb.visitor.Visitor;)V
utilMDE.TestUtilMDE:lsis_test(I)V
jtb.JavaParser:jj_3R_96()Z
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
jtb.syntaxtree.TypeDeclaration:TypeDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName:toString()Ljava.lang.String;
utilMDE.ArraysMDE:sum([[D)D
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.VarInfoName.NodeFinder:inPre()Z
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;Z)Z
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.Quant:lexLT([I[I)Z
jtb.syntaxtree.ShiftExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.inv.unary.sequence.EltNonZero:format_esc()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
jtb.JavaParser:jj_2_15(I)Z
utilMDE.UtilMDE:removeWhitespaceBefore(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
jtb.JavaParser:jj_3R_76()Z
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
jtb.JavaParser:jj_3_13()Z
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:VariableDeclaratorId()Ljtb.syntaxtree.VariableDeclaratorId;
jtb.JavaParser:jj_3_21()Z
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.inv.unary.UpperBoundCore:calc_modulus()J
jtb.JavaParser:jj_3R_124()Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_51()Z
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.inv.unary.scalar.UpperBound:enabled()Z
jtb.JavaParser:jj_3_16()Z
jtb.JavaParser:jj_2_1(I)Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.inv.unary.sequence.EltNonZero:format_ioa()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
jtb.JavaParser:jj_3R_108()Z
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
jtb.syntaxtree.NodeOptional:present()Z
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
jtb.syntaxtree.Type:accept(Ljtb.visitor.Visitor;)V
daikon.ValueTuple:isMissingFlow(I)Z
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.tools.jtb.Ast:getParent(Ljava.lang.Class;Ljtb.syntaxtree.Node;)Ljtb.syntaxtree.Node;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.Quant:eltwiseGTE([I)Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.syntaxtree.NodeListOptional:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InclusiveOrExpression;)V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.Quant:pairwiseGT([I[I)Z
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
jtb.JavaParser:jj_2_14(I)Z
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3_27()Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
jtb.syntaxtree.TypeBound:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quantify.IOAQuantification:getVarIndexedString(I)Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Elements:ioa_name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3_25()Z
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.JavaParser:jj_3_22()Z
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.tools.jtb.Ast:create(Ljava.lang.String;[Ljava.lang.Class;[Ljava.lang.Object;Ljava.lang.String;)Ljtb.syntaxtree.Node;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
jtb.JavaParser:jj_3_5()Z
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.inv.unary.sequence.EltNonZero:format_simplify()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameters;)V
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.Quantify.IOAQuantification:getMembershipRestriction(I)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.Quantify.IOAQuantification:getFreeVar(I)Ldaikon.Quantify.Term;
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
jtb.JavaParser:jj_3R_101()Z
utilMDE.FuzzyFloat:gte(DD)Z
daikon.inv.unary.scalar.LowerBound:enabled()Z
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_2_3(I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeDeclaration;)V
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.Quant:memberOf(F[F)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryPrefix;)V
daikon.ProglangType:baseIsIntegral()Z
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.diff.InvMap:InvMap()V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:ungenerify(Ljtb.syntaxtree.ClassOrInterfaceType;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AdditiveExpression;)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:ClassOrInterfaceDeclaration(Ljtb.syntaxtree.NodeChoice;Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ClassOrInterfaceBody;)V
jtb.JavaCharStream:getEndLine()I
jtb.JavaCharStream:BeginToken()C
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.JavaCharStream:FillBuff()V
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
jtb.syntaxtree.PostfixExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaCharStream:getEndColumn()I
jtb.JavaParser:jj_3R_164()Z
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ExclusiveOrExpression;)V
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.ValueTuple:size()I
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.Quant:subsetOf([J[J)Z
jtb.JavaParser:jj_3R_133()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArgument;)V
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:prob_or(DD)D
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
jtb.JavaParser:jj_3_3()Z
jtb.JavaParser:jj_3R_105()Z
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.tools.jtb.Ast:removeWhitespace(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
jtb.JavaParser:jj_2_35(I)Z
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
utilMDE.Intern:intern([J)[J
utilMDE.OrderedPairIterator:setnext1()V
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_119()Z
daikon.ProglangType:isFloat()Z
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Literal;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeBound;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalExpression;)V
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
jtb.syntaxtree.UnaryExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
jtb.JavaParser:jj_3R_210()Z
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
jtb.JavaParser:jj_3R_137()Z
daikon.inv.unary.sequence.EltOneOf:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:sign(I)I
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.Quant:eltwiseGT([I)Z
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.PptSlice0:initInvariantsSeen()V
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.UtilMDE:lineNumberFileReader(Ljava.lang.String;)Ljava.io.LineNumberReader;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3_19()Z
daikon.Quant:eq(DD)Z
daikon.diff.RootNode:RootNode()V
daikon.tools.jtb.Ast:getClassName(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.Quantify:quantify([Ldaikon.VarInfo;)[Ldaikon.Quantify.QuantifyReturn;
utilMDE.MathMDE:modulus([I)[I
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor.1:visit(Ljtb.syntaxtree.TypeParameter;)V
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:gt(II)Z
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:eq(JJ)Z
jtb.JavaParser:jj_3R_54()Z
daikon.ProglangType:baseIsFloat()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:jj_2_10(I)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_74()Z
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.ArraysMDE:concat([I[I)[I
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.JavaParserTokenManager:jjStopAtPos(II)I
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.NonZero:enabled()Z
jtb.syntaxtree.PrimaryPrefix:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.EltNonZero:is_pointer()Z
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_149()Z
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Expression;)V
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:memberOf(S[S)Z
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
jtb.JavaParser:jj_ntk()I
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.tools.jtb.Ast:create(Ljava.lang.String;Ljava.lang.String;)Ljtb.syntaxtree.Node;
daikon.Quant:intersection([I[I)[I
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.inv.Invariant:logOn()Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:eltwiseLTE([I)Z
jtb.JavaParser:jj_3R_86()Z
jtb.syntaxtree.NullLiteral:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.Invariant:prob_and(DD)D
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Modifiers;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeSequence;)V
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
jtb.syntaxtree.InclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_89()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;II)V
utilMDE.Intern:intern([I)[I
utilMDE.ArraysMDE:isSubarray([I[II)Z
jtb.JavaParser:jj_3R_63()Z
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
utilMDE.UtilMDE:removeWhitespaceAround(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.tools.jtb.Ast:quickFixForInternalComment(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:setDiff([I[I)[I
jtb.syntaxtree.MethodDeclaration:accept(Ljtb.visitor.Visitor;)V
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.VarInfo:get_all_simple_names()Ljava.util.List;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
jtb.JavaParser:jj_3R_88()Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.test.TestAst.MethodDeclarationHarvester:visit(Ljtb.syntaxtree.MethodDeclaration;)V
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameter;)V
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
jtb.JavaParser:jj_3_10()Z
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.Quant:eltwiseNotEqual([I)Z
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.inv.OutputFormat:toString()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltOneOf:is_hashcode()Z
daikon.Quant:eltsLtIndex([I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ResultType;)V
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:jj_3R_60()Z
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.PptSlice1:arity()I
utilMDE.WeakHasherMap:processQueue()V
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.tools.jtb.SimpleTreeDumper:SimpleTreeDumper(Ljava.io.Writer;)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_30()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Type;)V
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
utilMDE.Intern:internSubsequence([JII)[J
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:max([I)I
daikon.Quant:eltsGT([II)Z
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
daikon.test.TestAst.ClassOrInterfaceDeclarationHarvester:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
jtb.syntaxtree.NodeToken:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Debug:logOn()Z
jtb.JavaCharStream:getBeginColumn()I
jtb.JavaParser:jj_3_1()Z
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName:name()Ljava.lang.String;
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.ClassOrInterfaceType:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ClassOrInterfaceBody:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljava.lang.String;Ljava.lang.String;Ljava.util.List;)Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_116()Z
daikon.VarInfoName:ioa_name()Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.Node:Node()V
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.inv.unary.sequence.EltOneOf:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptName:getFullClassName()Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.inv.unary.sequence.EltNonZero:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:base()Ljava.lang.String;
daikon.VarInfo:name()Ljava.lang.String;
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:eltsLT([II)Z
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.TestAst:checkMatch(Ljava.lang.String;Ljtb.syntaxtree.MethodDeclaration;Ldaikon.tools.jtb.PptNameMatcher;)V
utilMDE.ArraysMDE:min_max([I)[I
jtb.JavaParser:jj_3_17()Z
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ValueTuple:isMissing(I)Z
jtb.JavaParser:jj_3R_52()Z
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.Quant:union([I[I)[I
daikon.inv.unary.sequence.EltOneOf:runValue([JIZ)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.tools.jtb.Ast:print(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
jtb.syntaxtree.VariableDeclaratorId:accept(Ljtb.visitor.Visitor;)V
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.TypeArguments:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.inv.unary.sequence.EltOneOf:EltOneOf(Ldaikon.PptSlice;)V
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
utilMDE.FuzzyFloat:lt(DD)Z
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
jtb.JavaParser:jj_2_25(I)Z | STATEMENT | 146859 | stmt -> ;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.FuzzyFloat:gt(DD)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalOrExpression;)V
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.JavaParser:jj_3R_50()Z
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
utilMDE.MathMDE:pow_fast(II)I
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;Ljava.lang.String;)V
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.ReturnStatement:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Statement;)V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.Quant:subsetOf([D[F)Z
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_104()Z
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.Invariant:justified()Z
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.inv.Invariant:format()Ljava.lang.String;
jtb.JavaParser:jj_3R_53()Z
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:memberOf(J[J)Z
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.VarInfo:is_direct_non_slice_array()Z
jtb.syntaxtree.UnaryExpressionNotPlusMinus:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:eltsGteIndex([I)Z
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.Quant:eltwiseEqual([I)Z | CONDITION | 174937 | if (x) -> if (!x)
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_2_16(I)Z
jtb.syntaxtree.FormalParameters:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Elements:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.Invariants:Invariants()V
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfo:relate_var()V
jtb.syntaxtree.ClassOrInterfaceDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Invariant:getConfidence()D
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.diff.Node:getUserRight()Ljava.lang.Object;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
utilMDE.MathMDE:gcd(II)I
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.Quantify.FreeVar:name()Ljava.lang.String;
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
jtb.JavaParser:jj_3R_103()Z
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.inv.unary.UpperBoundCore:computeConfidence()D
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
jtb.syntaxtree.NodeListOptional:present()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NullLiteral;)V
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Debug:logDetail()Z
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.inv.unary.sequence.EltOneOf:get_proto()Ldaikon.inv.Invariant;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.PptName:getMethodName()Ljava.lang.String;
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
daikon.inv.unary.sequence.EltOneOf:subarray_rep()Ljava.lang.String;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.inv.unary.sequence.EltOneOf:format_ioa()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.tools.jtb.SimpleTreeDumper:printToken(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfo:apply_subscript(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.inv.unary.sequence.EltOneOf:sort_rep()V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.inv.unary.sequence.EltNonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quantify.IOAQuantification:getQuantifierExp()Ljava.lang.String;
jtb.visitor.TreeDumper:TreeDumper(Ljava.io.Writer;)V
utilMDE.ArraysMDE:subarray([JII)[J
daikon.Quantify.IOAQuantification:getFreeVarName(I)Ljava.lang.String;
daikon.Quant:lexLTE([I[I)Z
utilMDE.Options.OptionInfo:argument_required()Z
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.ModBitTracker:ModBitTracker(I)V
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalAndExpression;)V
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_2_5(I)Z
daikon.Quant:eltsLteIndex([I)Z
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.CompilationUnit:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.PackageDeclaration:accept(Ljtb.visitor.Visitor;)V
utilMDE.FuzzyFloat:eq(DD)Z
daikon.PptSlice2:arity()I
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.ProglangType:dimensions()I
jtb.JavaParser:jj_3R_49()Z
jtb.JavaParser:jj_2_36(I)Z
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I | CONSTANT | 65761 | 0 -> 1
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.Quantify.IOAQuantification:IOAQuantification([Ldaikon.VarInfo;)V
jtb.JavaParser:jj_2_18(I)Z
daikon.VarInfo:get_enclosing_var()Ldaikon.VarInfo;
daikon.inv.Invariant:logDetail()Z
daikon.Quant:subsetOf([S[S)Z
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_2_12(I)Z
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;)Z
jtb.JavaParser:jj_2_17(I)Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
jtb.JavaParserTokenManager:MoreLexicalActions()V
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:missing_numbers([I)[I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
429 2 563 2 955 2 1325 2 771 2 1067 2 748 2 106 2 66 4 
895 2 295 6 837 2 986 6 737 2 828 2 237 2 90 2 725 2 773 6 793 2 
257 6 30 2 348 4 112 4 748 2 1375 2 955 2 1355 6 585 2 1108 2 916 2 1276 6 1212 6 
1279 4 55 2 1019 8 657 4 955 6 740 4 1168 10 59 10 1119 6 1120 2 586 2 784 10 314 16 339 12 1378 2 357 2 1175 2 985 6 745 8 88 8 15 26 748 6 361 16 988 8 419 4 791 28 677 2 116 16 1135 10 156 10 
137 4 7 6 
1137 2 
847 2 655 2 260 2 184 2 427 2 1192 2 388 2 269 2 390 2 476 2 358 2 1074 2 532 2 1250 2 727 2 326 2 625 4 492 2 580 2 685 2 907 2 334 2 451 2 1120 2 1094 2 292 4 1361 2 872 2 1402 2 294 2 414 2 1224 4 1177 2 788 2 1325 2 92 2 880 2 
446 4 1019 19 1187 4 657 2 350 6 738 3 955 4 806 5 1168 15 59 6 1193 6 1119 4 784 15 586 2 314 32 963 6 869 4 339 22 834 6 410 2 373 4 985 4 745 6 524 4 672 6 15 47 748 4 361 32 1154 2 483 2 1055 2 177 4 791 54 1135 15 116 32 1160 2 156 15 466 8 904 4 
39 2 706 2 1192 2 
872 2 99 10 705 2 1255 2 919 2 1265 2 931 2 235 2 565 2 286 2 367 2 1104 2 1413 2 1395 22 
683 2 1019 2 657 2 1168 2 59 4 1119 2 784 2 314 2 339 2 638 2 1005 2 15 4 480 2 1111 2 361 2 1077 2 791 6 1273 2 1135 2 116 2 156 2 465 2 702 2 
1279 2 1187 4 15 12 361 8 791 16 1168 4 1326 2 1193 6 1135 4 116 8 156 4 784 4 568 2 869 4 314 8 963 6 339 4 
1233 4 75 4 492 4 706 2 827 2 56 4 285 2 1192 8 223 2 832 4 405 2 666 62 39 6 610 4 502 2 810 2 433 4 1148 2 506 4 546 2 192 14 966 2 1224 4 858 2 299 2 528 4 721 4 172 2 1008 2 1272 2 322 4 175 2 1342 2 1327 10 381 4 727 2 467 10 1036 2 26 2 1418 2 
763 2 211 2 1041 2 1131 2 781 2 441 2 1381 2 155 2 1162 2 1137 2 
346 3 1064 2 1235 2 100 2 182 32 1142 2 263 2 264 1 803 1 1335 2 352 4 708 6 188 6 1143 2 978 3 518 4 892 5 106 2 191 3 894 2 6 4 272 2 432 2 273 2 8 4 614 3 1337 2 717 3 13 6 359 16 17 2 18 2 19 3 817 3 1155 24 278 2 991 2 115 1 1161 1 903 3 622 2 728 2 365 24 905 3 732 2 117 1 1347 3 1087 2 120 3 203 2 124 2 542 2 454 2 1171 2 1360 2 742 2 372 8 129 2 293 1 1362 2 130 2 212 1 1176 16 46 1 748 32 747 1 548 2 1270 2 378 2 1179 2 1011 2 380 4 217 2 218 2 1370 2 1098 1 1015 2 1014 2 1099 8 649 2 464 2 133 2 1372 2 135 2 929 2 556 2 934 32 1189 2 224 2 1024 2 1106 3 1287 2 1025 4 471 2 758 6 664 4 1107 1 1194 12 1196 2 64 2 762 2 475 16 147 2 148 2 764 2 478 2 1297 2 484 2 1383 2 72 2 1210 2 774 2 576 2 1388 1 777 2 491 2 1392 2 954 2 955 34 582 1 336 2 245 2 1048 2 1314 4 248 2 1396 2 1219 12 84 2 409 16 1316 2 1318 2 412 2 415 2 251 1 1053 2 594 2 790 2 513 2 253 8 1056 1 94 2 255 2 256 2 345 2 1328 1 972 2 881 2 1417 2 795 1 
955 2 651 2 
955 4 567 2 1097 2 
974 2 
347 2 703 4 2 2 353 4 1069 6 711 24 713 2 712 2 11 2 12 82 1072 14 719 2 16 4 1075 56 724 6 20 4 21 14 22 4 362 22 23 2 1079 22 364 4 729 2 1082 10 28 4 1083 6 731 2 733 6 31 12 735 56 33 2 34 168 35 4 1092 2 368 4 1093 6 40 2 42 6 371 2 370 186 741 2 743 6 744 184 376 4 375 2 748 6 47 2 49 6 50 6 52 10 53 8 1100 10 383 2 1101 186 754 4 384 8 385 6 386 4 755 4 57 2 387 2 756 2 757 2 58 2 759 2 60 10 761 38 61 4 63 40 62 376 1110 6 765 6 767 6 394 2 769 186 770 12 772 20 395 2 775 162 776 2 398 10 76 4 1113 2 1114 18 400 4 1116 2 401 168 402 2 1117 12 1118 22 80 2 1121 2 406 2 407 6 1125 4 1126 152 1128 4 1127 72 85 2 786 2 1130 6 413 38 417 2 418 48 91 42 1134 2 423 2 1136 2 96 4 98 2 1141 2 801 6 428 6 1144 4 430 22 1145 2 1147 8 108 4 111 6 815 8 814 10 437 2 1152 10 113 2 114 4 818 24 1158 6 820 50 443 4 1163 2 825 2 826 2 1165 4 447 2 448 6 121 12 449 6 831 2 1169 4 1170 4 452 6 833 22 125 2 126 6 835 4 1172 2 456 2 1173 18 457 2 131 4 460 2 839 4 840 4 843 2 461 4 132 2 462 4 1180 2 1182 2 1181 2 1183 2 463 2 1186 330 134 4 136 6 849 2 1190 168 1191 4 470 2 852 196 140 2 472 24 853 48 854 18 1195 4 143 6 474 2 144 4 1197 40 856 2 146 2 477 4 857 54 1198 74 1199 6 1201 2 481 2 152 12 154 96 1203 24 1205 2 860 4 1214 2 488 2 863 2 489 6 160 4 1216 6 490 24 494 2 164 4 867 298 165 168 499 2 868 6 501 2 503 14 168 2 1220 2 169 2 507 24 508 6 1223 2 873 40 1225 2 171 186 510 10 874 2 173 6 174 2 875 2 511 12 176 10 512 12 1228 2 1229 114 877 14 180 2 1234 4 183 2 515 2 516 6 185 2 884 2 186 2 1238 4 889 2 890 4 1242 10 1239 332 891 22 517 6 1243 4 1245 2 1246 152 520 2 522 2 896 2 1247 12 526 18 527 2 525 24 195 4 1249 10 531 24 197 40 198 2 533 94 902 4 536 2 201 2 202 2 909 16 1258 96 537 2 205 108 539 2 1260 2 912 2 1261 6 1263 4 209 4 918 2 1266 6 921 4 1268 4 213 6 215 48 550 138 549 2 551 168 923 2 924 4 552 2 553 6 1277 6 219 6 1278 6 928 2 220 2 1283 2 929 2 221 2 1286 2 933 6 935 78 226 2 557 2 558 2 227 4 1288 4 230 6 560 8 232 2 1293 4 940 18 941 6 943 168 942 2 238 2 944 168 566 26 1300 6 571 2 945 2 946 92 577 2 1306 2 950 2 951 168 952 6 1309 4 953 2 1310 8 242 4 243 2 955 6 957 168 583 2 1313 2 246 2 584 24 958 2 247 42 961 6 962 2 249 96 1317 4 967 2 593 2 252 2 970 4 595 4 596 20 971 24 973 2 1330 2 259 2 976 2 603 298 1334 2 265 184 977 2 604 376 606 14 266 4 979 4 608 2 981 2 268 2 612 14 611 50 613 2 274 2 275 96 1338 24 1339 2 276 24 987 2 990 86 989 2 279 2 1343 298 1344 6 992 24 623 2 995 6 997 6 996 14 282 6 998 2 628 24 283 2 999 2 632 2 630 2 633 12 288 2 287 286 1001 6 1351 2 1352 2 289 2 1003 2 1359 8 297 2 1006 2 300 6 641 2 643 58 1365 2 302 4 301 2 1367 2 303 2 647 4 648 82 304 6 650 2 654 2 1020 2 1021 114 1023 4 658 22 659 2 663 36 1377 18 665 2 311 10 312 4 667 6 316 62 668 46 319 2 673 6 1028 2 674 6 1031 4 676 2 678 20 679 24 324 6 1385 6 327 62 328 2 681 8 1038 6 682 6 329 10 1389 2 330 2 684 2 331 2 1391 14 686 2 332 2 335 480 1043 4 1045 2 688 2 687 2 690 2 1393 4 1047 4 1394 4 691 22 1049 2 1051 2 692 16 1400 4 1401 2 1403 4 1405 2 1409 4 697 6 1410 14 698 2 1054 46 1412 2 1059 6 1414 6 1415 2 1416 4 1061 2 1063 12 
69 2 200 2 541 2 642 1 
541 2 720 2 
281 2 317 2 740 2 86 2 541 2 1080 2 1192 2 
694 2 317 2 541 2 
309 2 317 2 541 2 
110 2 646 2 200 2 
317 2 541 2 
271 2 
541 2 634 2 
110 2 200 2 4 2 
123 2 200 2 403 2 
234 2 200 2 1040 2 
166 2 200 2 871 2 
280 2 670 2 200 2 
1304 2 
1149 2 541 2 
73 2 403 2 
1040 2 1091 2 
1010 2 166 2 
280 2 865 2 
110 2 178 2 
280 2 1301 2 
166 2 620 2 
1390 2 1040 2 
1157 2 403 2 
110 2 559 2 200 2 4 2 
110 2 559 2 200 2 4 2 320 2 
110 2 200 2 529 2 
110 2 590 2 200 2 
321 2 206 2 453 2 
574 2 86 2 1052 2 1192 2 
574 2 281 2 86 2 1240 2 1052 2 1192 2 
317 2 740 2 1129 2 86 2 541 2 1192 2 
294 2 493 2 
103 2 740 2 86 2 1192 2 
166 2 1178 2 
280 2 671 2 
1221 2 403 2 
1040 2 54 2 
280 2 800 2 1040 2 
280 2 1040 2 1380 2 
280 2 1 2 1040 2 
280 2 1040 2 325 2 
948 2 1333 6 469 6 1192 2 86 2 897 2 1329 2 1215 2 
110 2 425 2 
1290 2 1280 2 927 2 1295 2 1408 2 1029 4 1073 2 932 2 1042 2 969 4 440 2 689 2 139 2 37 2 93 2 189 2 1395 6 25 2 
1133 2 200 2 
415 2 
1235 2 182 4 261 4 883 2 3 2 803 2 352 2 708 6 188 2 518 2 106 2 273 2 8 4 13 4 193 2 18 2 17 2 728 2 1167 2 124 2 742 6 372 2 1362 2 640 2 748 26 46 4 1270 2 1269 2 1011 2 1271 2 380 4 1014 2 1015 2 133 2 1372 2 135 2 929 2 556 2 306 2 307 2 850 2 934 6 1189 2 224 2 1025 4 758 2 1287 2 664 2 1194 8 1289 4 762 2 475 6 148 2 764 2 484 2 1383 2 1208 2 1210 2 774 2 576 2 955 26 245 2 1314 4 338 2 248 2 1122 2 1219 8 1316 2 342 2 1053 4 513 2 94 2 1058 2 701 2 345 2 795 2 
1235 2 182 4 261 4 883 2 3 2 803 2 352 2 708 6 188 2 607 2 518 2 106 2 432 1 273 2 8 4 13 5 193 2 18 2 17 2 723 2 728 2 1167 2 124 2 454 1 742 6 372 2 1362 2 748 26 46 2 1270 2 1269 2 1011 2 380 4 1014 2 1015 2 133 2 1372 2 135 2 929 2 556 2 306 2 307 2 850 2 934 6 1189 2 224 2 1025 4 758 2 1287 2 664 2 1194 8 229 2 1289 4 762 2 475 6 148 2 764 2 484 2 1383 2 1208 2 1210 2 774 2 576 2 955 26 245 2 1314 4 248 2 1122 2 1219 8 1316 2 342 2 1053 4 790 2 513 2 94 2 1058 2 701 2 345 2 795 2 
615 2 
636 2 1071 2 
1150 2 295 2 374 2 392 2 746 2 986 2 1257 2 1153 2 1030 4 828 2 739 2 1009 2 750 2 237 2 1209 4 752 2 893 2 937 2 
424 4 135 2 799 2 929 2 262 2 1068 2 224 2 708 4 1025 2 893 2 937 2 519 6 984 2 895 2 1150 2 718 2 14 2 392 2 986 4 18 2 1153 2 1030 4 675 2 1112 2 439 4 237 4 1383 2 773 6 1209 4 569 2 363 4 680 2 1211 2 1303 4 774 2 1348 2 1257 2 828 4 739 2 955 12 782 2 783 2 1314 2 960 2 1050 2 1095 2 836 2 295 6 1174 4 837 2 374 2 746 2 748 6 1324 2 1009 2 750 2 51 2 1017 2 752 4 345 2 
424 4 135 2 799 2 929 2 262 2 1068 2 224 2 708 4 1025 2 893 2 937 2 519 6 984 2 1150 2 718 2 14 2 392 2 986 6 18 2 1153 2 1030 4 675 2 1112 2 439 4 237 4 1383 2 773 6 1209 4 569 2 363 4 680 2 1211 2 1303 4 774 2 1348 2 1257 2 828 4 739 2 955 12 782 2 783 2 1314 2 960 2 1050 2 1095 2 836 2 295 4 1174 4 837 2 374 2 746 2 748 6 1324 2 1009 2 750 2 51 2 90 2 1017 2 752 4 345 2 
424 4 135 2 799 2 929 2 262 2 1068 2 224 2 708 4 1025 2 893 2 937 2 519 6 984 2 1150 2 718 2 14 2 392 2 986 6 18 2 1153 2 1030 4 675 2 1112 2 439 4 237 4 1383 2 725 2 773 6 1209 4 569 2 363 4 680 2 1211 2 1303 4 774 2 1348 2 1257 2 828 4 739 2 955 12 782 2 783 2 1314 2 960 2 1050 2 1095 2 836 2 295 6 1174 8 837 2 374 2 746 2 748 6 1324 2 1009 2 750 2 51 2 1017 2 752 4 345 2 
424 4 135 2 799 2 929 2 262 2 1068 2 224 2 708 4 1025 2 893 2 937 2 519 10 984 2 1150 2 718 2 14 2 392 2 986 8 18 2 1153 2 1030 4 675 2 1112 2 439 8 237 4 1383 2 725 2 773 8 1209 4 569 2 363 4 680 2 1211 2 1303 4 774 2 1348 2 1257 2 828 4 739 2 955 12 782 2 783 2 1314 2 960 2 1050 2 1095 2 836 2 295 6 1174 8 837 2 374 2 746 2 748 6 1324 2 1009 2 750 2 51 2 90 2 1017 2 752 4 345 2 
424 4 135 2 799 2 929 2 262 2 1068 2 224 2 708 4 1025 2 893 2 937 2 519 10 984 2 1150 2 718 2 14 2 392 2 986 6 18 2 1153 2 1030 4 675 2 1112 2 439 8 237 4 1383 2 725 2 773 6 1209 4 569 2 363 4 680 2 1211 2 1303 4 774 2 1348 2 1257 2 828 4 739 2 955 12 782 2 783 2 1314 2 960 2 1050 2 1095 2 836 2 295 6 1174 8 837 2 374 2 746 2 748 6 1324 2 1009 2 750 2 51 2 1017 2 752 4 345 2 
1235 2 182 2 1065 6 1068 2 3 2 351 2 352 2 708 6 887 2 188 2 888 2 190 2 518 2 893 2 519 2 8 4 13 6 14 2 18 2 898 6 722 2 1251 1 363 4 728 2 1085 2 730 2 1088 10 1090 2 1257 2 739 2 913 2 1095 4 1262 1 742 6 372 2 374 2 920 2 746 2 748 24 1267 2 1270 2 214 2 1097 6 750 2 380 4 51 2 752 4 382 1 925 6 929 2 1284 6 1285 4 934 8 224 2 758 2 1287 2 937 2 939 2 762 2 392 2 764 2 1112 2 237 4 773 12 70 6 71 2 397 2 569 2 774 2 1303 8 576 2 581 2 955 46 245 2 782 2 783 2 1314 4 960 2 1122 2 587 1 1316 2 1123 2 591 2 1319 6 592 1 1324 4 89 2 90 4 789 2 94 2 974 6 97 1 424 6 1139 8 799 2 261 4 262 2 601 6 101 6 802 1 609 6 267 6 106 2 432 2 984 2 1150 2 434 2 986 8 1153 2 1346 2 823 7 1348 2 1350 4 828 4 1167 4 1354 6 1356 1 454 2 127 1 1004 2 836 2 295 4 1362 2 1174 2 837 4 296 2 1009 2 844 2 1014 2 1017 2 651 6 1018 2 652 7 133 2 135 2 306 2 1189 12 1025 4 664 2 1194 4 475 6 148 2 1030 4 675 2 153 2 1383 2 1209 4 157 2 680 2 1211 2 495 2 1050 2 1397 6 1219 4 695 6 1407 2 513 2 179 2 345 2 1232 2 
974 6 1139 8 424 6 1235 2 182 2 799 2 261 4 601 6 1065 6 262 2 101 6 3 2 1068 2 351 2 352 4 887 2 708 6 888 2 188 2 190 2 267 6 609 6 518 4 519 2 106 2 893 2 432 2 10 2 984 2 8 4 1150 2 13 6 434 2 14 2 986 8 18 2 1153 2 722 2 898 6 725 4 363 4 728 2 1346 2 1085 2 730 2 1348 2 1088 10 1350 4 1257 2 1090 2 828 4 1167 4 739 2 1354 6 913 2 1095 4 454 2 1004 2 742 6 372 2 836 2 1362 2 295 8 296 2 837 4 1174 6 374 2 920 2 746 2 748 26 1267 2 1270 2 1097 6 214 2 1009 2 750 2 380 4 51 2 844 2 1014 2 1017 2 752 4 651 6 1018 2 925 6 133 2 135 2 929 2 1284 6 1285 4 306 2 1189 12 934 8 224 2 1287 2 758 2 1025 4 664 4 1194 8 937 2 939 2 475 6 762 2 148 2 392 2 764 2 150 2 675 2 1030 4 1112 2 153 2 237 4 1383 2 71 2 70 6 773 12 397 2 157 2 1209 4 569 2 680 2 1211 2 1303 8 774 2 576 2 495 2 581 2 955 48 782 2 245 2 783 2 1314 4 960 2 1122 2 1050 2 1397 6 1219 8 1123 2 1316 2 591 2 695 6 1407 2 1319 6 1053 2 89 2 1324 4 789 2 513 2 94 2 179 2 345 2 1232 2 
974 6 1139 8 424 6 1235 2 182 2 799 2 261 4 601 6 1065 6 262 2 101 6 3 2 1068 2 351 2 352 4 887 2 708 6 888 2 188 2 190 2 267 6 609 6 518 4 106 2 519 6 893 2 432 2 10 2 984 2 8 4 1150 2 13 6 434 2 14 2 986 8 18 2 1153 2 439 4 722 2 898 6 725 4 363 4 728 2 1346 2 1085 2 730 2 1348 2 1088 10 1350 4 1257 2 1090 2 828 4 1167 4 739 2 1354 6 913 2 1095 4 454 2 1004 2 742 6 372 2 836 2 295 8 1362 2 296 2 837 4 1174 6 374 2 920 2 746 2 748 26 1267 2 1270 2 1097 6 214 2 1009 2 750 2 380 4 51 2 844 2 1014 2 1017 2 752 4 651 6 1018 2 925 6 133 2 135 2 929 2 1284 6 1285 4 306 2 1189 12 934 8 224 2 1287 2 758 2 1025 4 664 4 1194 8 937 2 939 2 475 6 762 2 148 2 392 2 764 2 150 2 675 2 1030 4 1112 2 153 2 237 4 1383 2 71 2 70 6 773 12 397 2 157 2 1209 4 569 2 680 2 1211 2 1303 8 774 2 576 2 495 2 581 2 955 48 782 2 245 2 783 2 1314 4 960 2 1122 2 1050 2 1397 6 1219 8 1123 2 1316 2 591 2 695 6 1407 2 1319 6 1053 2 89 2 1324 4 789 2 513 2 94 2 179 2 345 2 1232 2 
1235 2 182 4 1236 2 1065 6 1068 2 3 2 351 2 352 4 708 6 188 4 888 2 710 2 190 2 518 4 893 2 519 6 10 2 8 4 895 2 714 2 13 6 14 2 18 2 898 6 722 2 725 4 363 4 534 6 728 2 1085 2 730 2 1254 2 1088 8 1090 2 1257 2 739 2 1259 6 913 2 1095 4 742 8 372 4 374 2 920 2 746 2 748 24 1267 2 1270 2 214 2 1097 12 750 2 380 4 51 2 752 4 925 6 929 2 1284 6 1285 4 934 12 224 2 758 4 1287 2 937 2 231 6 939 2 762 2 392 2 764 2 1112 2 237 4 71 2 773 16 70 6 397 2 569 2 774 2 1303 8 576 2 581 2 955 52 245 2 782 2 783 2 1314 4 960 2 1122 2 1315 2 1316 2 1123 2 591 2 1319 6 1324 4 89 2 90 2 789 2 94 2 420 6 974 12 424 6 1139 8 799 2 261 6 262 2 601 6 101 6 102 2 105 2 980 6 609 12 267 12 106 2 432 2 982 6 984 2 1150 2 434 2 986 10 1341 6 1153 2 439 4 1346 2 1348 2 1350 4 828 4 1167 4 830 6 1354 12 454 2 1004 2 836 2 1362 2 295 10 1174 6 837 4 296 2 838 2 1009 2 844 2 1014 2 1017 2 1184 6 651 12 1018 2 133 2 135 2 306 4 1189 10 1025 4 664 4 1194 10 475 8 148 2 150 2 1030 4 675 2 153 2 1383 2 1209 4 157 2 680 2 1211 2 495 2 1050 2 1397 6 1219 10 695 6 1407 2 1053 2 513 2 179 2 345 2 1232 2 
424 2 799 2 1348 2 262 2 828 4 739 2 955 4 783 2 960 2 1050 2 519 4 937 2 893 2 984 2 1150 2 836 2 295 6 837 2 1174 6 374 2 392 2 746 2 986 6 675 2 1030 2 439 4 1112 2 237 4 725 2 773 4 1209 2 363 2 569 2 680 2 1303 2 
424 2 1235 2 182 3 799 2 1142 2 261 4 262 2 3 2 1068 2 1335 2 708 6 887 2 188 3 106 2 519 2 893 2 272 2 432 2 984 2 8 4 983 2 1150 2 13 6 986 6 18 2 277 2 725 2 363 2 728 2 824 2 1348 2 1088 2 828 4 739 2 1167 2 829 3 454 2 544 2 742 6 836 2 295 6 1362 2 837 2 1174 6 374 2 746 2 748 24 1270 2 380 4 1014 2 133 2 135 2 929 2 934 8 1189 4 224 2 1025 4 758 3 937 2 762 2 475 6 392 2 148 2 764 2 1030 2 675 2 1112 2 237 4 1383 2 773 4 1209 2 569 2 680 2 1303 2 774 2 576 2 955 28 245 2 783 2 1314 4 960 2 1122 2 1050 2 1316 2 415 2 1226 2 513 2 94 2 345 2 
424 4 135 2 799 2 929 2 262 2 1068 2 224 2 708 4 1025 2 893 2 937 2 519 10 984 2 1150 2 718 2 14 2 392 2 986 6 18 2 1153 2 1030 4 675 2 1112 2 439 8 237 4 1383 2 725 2 773 6 1209 4 569 2 363 4 680 2 1211 2 1303 4 774 2 1348 2 1257 2 828 4 739 2 955 12 782 2 783 2 1314 2 960 2 1050 2 1095 2 836 2 295 6 1174 8 837 2 374 2 746 2 748 6 1324 2 1009 2 750 2 51 2 1017 2 752 4 345 2 
424 4 135 2 799 2 929 2 262 2 1068 2 224 2 708 4 1025 2 893 2 937 2 519 10 984 2 895 2 1150 2 812 4 14 2 392 2 986 6 18 2 1153 2 675 2 1030 4 1112 2 439 8 237 4 1383 2 725 2 773 8 1209 4 569 2 363 4 1211 2 1303 4 774 2 1348 2 779 2 1257 2 828 4 739 2 955 12 782 2 783 2 1314 2 960 2 1050 2 1095 2 836 2 43 2 295 8 1174 8 837 2 374 2 746 2 748 6 1324 2 1009 2 750 2 51 2 1017 2 752 4 345 2 
836 2 960 2 1109 2 
836 2 960 2 1109 2 
424 4 426 2 182 2 602 2 3 2 805 2 352 4 605 2 708 6 518 4 106 2 519 6 432 2 109 2 8 4 984 2 895 4 13 6 14 2 986 12 18 2 439 4 1159 2 725 4 363 2 728 2 734 2 1164 2 1088 2 1350 2 1166 2 1257 2 828 4 1167 6 739 2 450 2 1095 4 454 2 742 2 836 4 1362 2 295 12 1174 6 837 4 298 2 46 2 748 16 1270 2 1009 2 380 4 51 2 1014 2 752 4 133 2 1282 2 135 2 929 2 1285 2 934 2 1189 4 224 2 1287 4 1025 4 664 4 1194 4 937 4 1109 2 145 2 762 2 475 2 148 2 392 2 764 2 1030 2 237 4 1383 2 773 16 397 2 1208 4 1209 2 569 2 1211 2 774 2 1303 4 576 2 949 2 495 2 955 24 404 2 245 2 959 4 1314 4 960 6 1122 2 82 2 1219 4 1316 2 696 4 1319 2 1324 2 90 4 513 2 94 2 1062 2 345 2 1232 2 
636 2 1282 2 949 2 135 2 1088 2 1285 2 1319 2 748 2 1189 2 581 2 750 2 955 4 404 2 204 2 662 2 71 2 994 2 
424 4 182 4 3 2 805 4 352 4 605 2 708 6 518 4 106 2 519 6 432 2 109 2 8 4 984 2 895 4 13 6 14 2 986 12 18 2 439 4 1159 2 725 4 1078 2 726 2 363 2 728 2 1350 2 1166 2 1257 2 828 4 1167 6 739 2 450 2 915 2 1095 4 454 2 742 2 836 4 1362 2 295 12 1174 6 837 4 298 2 748 16 1270 2 1009 2 380 4 51 2 1014 2 1017 2 752 4 133 2 1282 2 135 2 929 2 934 2 1189 2 224 2 1287 4 1025 4 664 4 1194 4 142 2 937 4 1109 2 145 2 762 2 475 2 148 2 392 2 764 2 1030 2 151 2 237 4 1383 2 773 16 397 2 1208 4 1209 2 569 2 1211 2 1303 4 774 2 576 2 949 2 495 2 955 24 404 2 245 2 959 4 1314 4 960 6 1122 2 82 2 1219 4 1316 2 696 4 1319 2 1324 4 90 4 513 2 94 2 1062 2 345 2 1232 2 
1332 2 424 4 182 2 3 2 805 2 352 4 605 2 708 6 518 4 106 2 519 6 432 2 109 2 8 4 984 2 895 4 13 6 14 2 986 12 18 2 439 4 1248 2 1159 2 725 4 363 2 728 2 1088 2 1350 2 1166 2 1257 2 828 4 1167 6 739 2 450 2 1095 4 454 2 742 2 836 4 1362 2 295 12 1174 6 837 4 298 2 46 1 748 16 1270 2 1009 2 380 4 51 2 1014 2 1017 2 752 4 133 2 1282 2 135 2 929 2 1285 2 934 2 1189 4 224 2 1287 4 1025 4 664 4 1194 4 937 4 1109 2 145 2 762 2 475 2 148 2 392 2 764 2 1030 2 237 4 1383 2 773 16 397 2 1208 4 1209 2 569 2 158 2 1211 2 774 2 1303 4 576 2 949 2 495 2 955 24 404 2 245 2 959 4 1314 4 960 6 1122 2 82 2 1398 2 1219 4 1316 2 696 4 1319 2 1324 4 90 4 344 2 513 2 94 2 1062 2 345 2 1232 2 
1066 2 349 2 351 2 707 4 708 6 709 10 354 2 710 2 355 14 356 2 1070 2 9 2 8 68 714 2 13 144 716 2 15 12 359 4 360 2 18 2 721 2 361 8 1076 2 24 2 27 3 728 2 1081 20 1085 4 1084 6 29 4 1086 20 736 2 32 2 36 2 38 4 41 6 1096 2 742 14 372 24 44 2 45 10 745 6 748 142 46 1 379 6 48 2 749 36 380 58 751 2 753 2 1102 2 1103 2 1105 3 758 25 760 4 389 6 391 16 762 14 764 2 65 20 766 4 393 2 768 22 396 2 774 2 74 2 399 3 778 4 78 2 79 2 780 16 81 6 784 4 1122 2 408 2 409 12 1124 10 410 4 787 10 87 2 416 6 1132 6 791 16 792 10 94 4 1135 4 95 2 421 2 794 20 795 2 796 10 1138 3 798 2 1140 12 803 2 804 4 102 2 104 2 105 2 808 2 106 4 809 2 107 3 432 34 431 2 433 2 811 2 1151 6 435 2 436 16 816 2 438 72 1156 8 442 2 116 8 821 2 444 6 824 2 119 2 118 2 1167 2 829 2 122 2 1168 4 454 34 455 2 128 2 458 2 838 2 459 2 845 2 846 4 1185 10 133 14 848 14 135 2 468 2 1188 2 850 18 1189 2 851 10 138 10 1193 6 141 2 1194 46 475 14 148 2 149 2 1200 24 479 18 482 2 483 2 153 2 485 4 1204 22 156 4 486 20 1207 10 1206 4 157 2 487 3 1213 2 862 2 161 2 864 9 159 10 1217 2 162 10 163 12 1218 6 498 6 500 2 869 4 870 4 1219 42 504 10 505 4 506 2 1222 10 509 2 1226 2 876 4 1227 4 513 2 878 6 1230 10 879 4 1233 2 181 10 1235 2 882 2 182 25 514 20 1236 2 883 2 187 2 886 10 188 16 1241 2 521 10 523 2 193 2 899 2 196 2 900 4 901 2 1252 3 1253 20 535 2 199 2 906 10 1256 4 908 4 538 6 911 6 910 4 540 6 914 12 543 10 544 2 545 2 208 3 210 22 917 16 920 2 547 13 1269 2 1270 4 216 6 1275 2 926 4 1281 3 554 2 929 2 555 2 222 2 930 2 934 36 224 2 225 33 1287 4 936 10 228 10 939 2 1291 2 561 10 233 2 1292 10 1296 4 236 2 1298 2 1299 2 239 22 570 2 1302 4 240 2 573 4 947 2 576 2 1305 22 578 2 1307 2 1308 20 1311 2 1312 2 244 2 955 188 956 2 245 2 1314 4 1315 2 588 6 1316 2 589 2 965 10 250 10 1320 4 1321 4 1322 16 1323 2 254 2 597 4 1331 18 258 3 600 8 261 12 975 10 1336 4 610 2 270 18 985 4 1340 2 617 3 618 2 277 2 619 2 993 4 1345 2 624 2 626 2 627 10 1349 2 284 3 629 18 631 2 1000 2 1353 2 290 2 291 2 635 1 1357 2 1358 2 1002 2 1362 2 639 2 1364 4 1007 2 1366 2 1368 4 645 2 644 2 1012 2 1369 10 1013 2 1014 2 1018 2 1371 10 653 6 1373 48 1019 4 656 2 305 10 1022 6 306 46 1374 2 307 2 308 6 660 2 1376 6 1025 4 310 2 313 2 314 8 669 2 1027 6 318 18 1379 8 1383 2 1032 10 1034 20 1035 6 1384 2 1386 10 1387 10 1039 20 333 3 1044 4 1046 10 337 9 339 6 1399 16 341 5 1404 6 342 2 1406 2 343 2 700 2 699 2 1058 2 1057 2 1060 8 701 2 345 2 
578 2 1235 2 399 2 182 2 261 2 627 2 32 2 306 6 1188 2 934 2 122 2 188 2 955 2 758 2 290 2 408 2 742 2 475 2 561 4 1363 2 458 2 748 2 1076 2 1032 2 
578 2 1235 2 399 2 182 2 261 2 627 2 32 2 306 6 1188 2 934 2 122 2 188 2 955 2 758 2 290 2 408 2 742 2 475 2 561 4 1363 2 458 2 748 2 1076 2 1032 2 
578 2 1235 2 399 2 182 2 261 2 627 2 32 2 306 6 1188 2 934 2 122 2 188 2 955 2 758 2 290 2 408 2 742 2 475 2 561 4 1363 2 458 2 748 2 1076 2 1032 2 
1037 2 864 3 554 2 1235 2 1115 2 182 3 1373 6 934 2 804 2 780 4 955 10 1168 2 758 3 337 3 784 2 1244 2 408 2 314 2 1264 2 693 4 1399 4 409 2 340 2 917 4 985 2 194 2 745 4 15 4 377 2 748 4 359 2 1322 4 361 2 842 2 68 3 791 5 1033 2 1135 2 116 2 156 2 
1037 2 864 2 554 2 1235 2 1115 2 182 2 1373 6 1019 2 934 2 804 2 780 4 955 10 1168 2 758 2 337 2 784 2 586 2 1244 2 408 2 314 2 1264 2 339 2 693 4 1399 4 409 2 340 2 917 4 985 2 194 2 745 4 15 4 377 2 748 4 359 2 1322 4 361 2 842 2 68 2 791 4 1033 2 1135 2 116 2 156 2 
1037 2 864 2 554 2 1235 2 1115 2 182 2 1373 6 1019 2 934 2 804 2 780 4 955 10 1168 2 758 2 337 2 784 2 586 2 1244 2 408 2 314 2 1264 2 339 2 693 4 1399 4 409 2 340 2 917 4 985 2 194 2 745 4 15 4 377 2 748 4 359 2 1322 4 361 2 842 2 68 2 791 4 1033 2 1135 2 116 2 156 2 
1037 2 864 2 554 2 1235 2 1115 2 182 2 1373 6 1019 2 934 2 804 2 780 4 955 10 1168 2 758 2 337 2 784 2 586 2 1244 2 408 2 314 2 1264 2 339 2 693 4 1399 4 409 2 340 2 917 4 985 2 194 2 745 4 15 4 377 2 748 4 359 2 1322 4 361 2 842 2 68 2 791 4 1033 2 1135 2 116 2 156 2 
1037 2 864 2 554 2 1235 2 1115 2 182 2 1373 6 1019 4 934 2 804 2 780 4 955 10 1168 2 758 2 337 2 784 2 586 4 1244 2 408 2 314 2 1264 2 339 4 693 4 1399 4 409 2 340 2 917 4 985 2 194 2 745 4 15 4 377 2 748 4 359 2 1322 4 361 2 842 2 68 2 791 4 1033 2 1135 2 116 2 156 2 
637 2 167 2 859 2 1146 2 938 2 236 2 
616 2 5 2 579 2 785 2 850 2 968 2 938 2 
445 1 77 2 1089 2 285 1 496 2 241 2 955 10 1237 2 1354 2 807 1 855 2 473 2 964 2 715 2 411 2 813 2 1294 2 748 8 1272 1 841 2 1383 2 323 2 422 2 1016 2 598 1 572 2 
0 2 1019 2 955 6 806 4 1168 6 1193 4 784 6 586 2 314 6 869 2 339 5 1096 2 128 2 1402 2 985 2 745 4 748 6 15 12 67 2 361 6 530 2 1202 2 876 2 177 2 791 16 116 6 1135 6 819 2 156 6 466 2 
822 4 575 6 599 2 562 2 704 2 564 2 748 1 366 2 1322 2 885 2 780 2 955 1 497 2 661 2 861 1 369 2 621 2 1399 2 
822 4 575 6 599 2 562 2 704 2 564 2 366 2 1322 2 885 4 780 2 497 2 661 4 369 2 621 4 1399 2 
822 4 575 10 599 8 562 2 704 2 564 2 748 1 366 6 1322 2 885 8 780 2 955 1 497 2 661 8 861 1 369 2 621 8 1399 2 
822 2 575 2 562 2 704 2 564 2 1322 2 885 2 780 2 497 2 661 2 369 2 621 2 1399 2 
315 2 1382 1 1086 1 866 2 955 2 170 2 748 2 1270 2 922 2 
955 2 922 2 170 2 748 2 1270 2 866 2 315 2 
955 2 922 2 170 2 748 2 1270 2 866 2 315 2 
955 2 922 2 170 2 748 2 1270 2 866 2 315 2 
1231 2 
1411 1 797 1 1026 1 1274 1 83 1 207 1 
1411 1 797 1 1026 1 1274 1 83 1 207 1 
1411 1 797 1 1026 1 1274 1 83 1 207 1 
1411 1 797 1 1026 1 1274 1 83 1 207 1 
1411 1 797 1 1026 1 1274 1 83 1 207 1 
1411 1 797 1 1026 1 1274 1 83 1 207 1 
1411 1 797 1 1026 1 1274 1 83 1 207 1 
1411 1 797 1 1026 1 1274 1 83 1 207 1 
1411 1 797 1 1026 1 1274 1 83 1 207 1 
1411 1 797 1 1026 1 1274 1 83 1 207 1 
1411 1 797 1 1026 1 1274 1 83 1 207 1 
1411 1 797 1 1026 1 1274 1 83 1 207 1 
1411 1 797 1 1026 1 1274 1 83 1 207 1 
1411 1 797 1 1026 1 1274 1 83 1 207 1 
1411 1 797 1 1026 1 1274 1 83 1 207 1 
1411 1 797 1 1026 1 1274 1 83 1 207 1 
1411 1 797 1 1026 1 1274 1 83 1 207 1 
1411 1 797 1 1026 1 1274 1 83 1 207 1 
1411 1 797 1 1026 1 1274 1 83 1 207 1 
1411 1 797 1 1026 1 1274 1 83 1 207 1 
1411 1 797 1 1026 1 1274 1 83 1 207 1 
1411 1 797 1 1026 1 1274 1 83 1 207 1 
1411 1 797 1 1026 1 1274 1 83 1 207 1 
1411 1 797 1 1026 1 1274 1 83 1 207 1 
1411 1 797 1 1026 1 1274 1 83 1 207 1 
1411 1 797 1 1026 1 1274 1 83 1 207 1 
1411 1 797 1 1026 1 1274 1 83 1 207 1 
1411 1 797 1 1026 1 1274 1 83 1 207 1 
1411 1 797 1 1026 1 1274 1 83 1 207 1 
1411 1 797 1 1026 1 1274 1 83 1 207 1 
1411 1 797 1 1026 1 1274 1 83 1 207 1 
1411 1 797 1 1026 1 1274 1 83 1 207 1 
1411 1 797 1 1026 1 1274 1 83 1 207 1 
1411 1 797 1 1026 1 1274 1 83 1 207 1 
1411 1 797 1 1026 1 1274 1 83 1 207 1 
1411 1 797 1 1026 1 1274 1 83 1 207 1 
1411 1 797 1 1026 1 1274 1 83 1 207 1 
1411 1 797 1 1026 1 1274 1 83 1 207 1 
1411 1 797 1 1026 1 1274 1 83 1 207 1 
1411 1 797 1 1026 1 1274 1 83 1 207 1 
1411 1 797 1 1026 1 1274 1 83 1 207 1 
1411 1 797 1 1026 1 1274 1 83 1 207 1 
1411 1 797 1 1026 1 1274 1 83 1 207 1 
1411 1 797 1 1026 1 1274 1 83 1 207 1 

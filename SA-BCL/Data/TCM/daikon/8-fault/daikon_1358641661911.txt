#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 131 162 491 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_0()V ERROR java.lang.RuntimeException (790,916) (790,916) (575,660) (575,660) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_1()V ERROR java.lang.RuntimeException (790,916) (790,916) (575,660) (575,660) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_2()V ERROR java.lang.RuntimeException (790,916) (790,916) (575,660) (575,660) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_3()V ERROR java.lang.RuntimeException (790,916) (790,916) (575,660) (575,660) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_4()V ERROR java.lang.RuntimeException (790,916) (790,916) (575,660) (575,660) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_5()V ERROR java.lang.RuntimeException (790,916) (790,916) (575,660) (575,660) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_6()V ERROR java.lang.RuntimeException (790,916) (790,916) (575,660) (575,660) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_7()V ERROR java.lang.RuntimeException (790,916) (790,916) (575,660) (575,660) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_8()V ERROR java.lang.RuntimeException (790,916) (790,916) (575,660) (575,660) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_9()V ERROR java.lang.RuntimeException (790,916) (790,916) (575,660) (575,660) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_10()V ERROR java.lang.RuntimeException (790,916) (790,916) (575,660) (575,660) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_11()V ERROR java.lang.RuntimeException (790,916) (790,916) (575,660) (575,660) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_12()V ERROR java.lang.RuntimeException (790,916) (790,916) (575,660) (575,660) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_13()V ERROR java.lang.RuntimeException (790,916) (790,916) (575,660) (575,660) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_14()V ERROR java.lang.RuntimeException (790,916) (790,916) (575,660) (575,660) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_15()V ERROR java.lang.RuntimeException (790,916) (790,916) (575,660) (575,660) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_16()V ERROR java.lang.RuntimeException (790,916) (790,916) (575,660) (575,660) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_17()V ERROR java.lang.RuntimeException (790,916) (790,916) (575,660) (575,660) 
daikon.test.split.SplitterFactoryTest:testmisc_Fib_main_18()V ERROR java.lang.RuntimeException (790,916) (790,916) (575,660) (575,660) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_19()V ERROR java.lang.RuntimeException (790,916) (790,916) (575,660) (575,660) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_20()V ERROR java.lang.RuntimeException (790,916) (790,916) (575,660) (575,660) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_21()V ERROR java.lang.RuntimeException (790,916) (790,916) (575,660) (575,660) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_22()V ERROR java.lang.RuntimeException (790,916) (790,916) (575,660) (575,660) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_23()V ERROR java.lang.RuntimeException (790,916) (790,916) (575,660) (575,660) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_24()V ERROR java.lang.RuntimeException (790,916) (790,916) (575,660) (575,660) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_25()V ERROR java.lang.RuntimeException (790,916) (790,916) (575,660) (575,660) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_26()V ERROR java.lang.RuntimeException (790,916) (790,916) (575,660) (575,660) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_27()V ERROR java.lang.RuntimeException (790,916) (790,916) (575,660) (575,660) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_28()V ERROR java.lang.RuntimeException (790,916) (790,916) (575,660) (575,660) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_29()V ERROR java.lang.RuntimeException (790,916) (790,916) (575,660) (575,660) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_30()V ERROR java.lang.RuntimeException (790,916) (790,916) (575,660) (575,660) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_31()V ERROR java.lang.RuntimeException (790,916) (790,916) (575,660) (575,660) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_32()V ERROR java.lang.RuntimeException (790,916) (790,916) (575,660) (575,660) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__33()V ERROR java.lang.RuntimeException (790,916) (790,916) (575,660) (575,660) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__34()V ERROR java.lang.RuntimeException (790,916) (790,916) (575,660) (575,660) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__35()V ERROR java.lang.RuntimeException (790,916) (790,916) (575,660) (575,660) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__36()V ERROR java.lang.RuntimeException (790,916) (790,916) (575,660) (575,660) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__37()V ERROR java.lang.RuntimeException (790,916) (790,916) (575,660) (575,660) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__38()V ERROR java.lang.RuntimeException (790,916) (790,916) (575,660) (575,660) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__39()V ERROR java.lang.RuntimeException (790,916) (790,916) (575,660) (575,660) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__40()V ERROR java.lang.RuntimeException (790,916) (790,916) (575,660) (575,660) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__41()V ERROR java.lang.RuntimeException (790,916) (790,916) (575,660) (575,660) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__42()V ERROR java.lang.RuntimeException (790,916) (790,916) (575,660) (575,660) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__43()V ERROR java.lang.RuntimeException (790,916) (790,916) (575,660) (575,660) 

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.inv.unary.scalar.NonZero:is_pointer()Z
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_16()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.ArraysMDE:sum([[D)D
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
jtb.JavaParser:jj_ntk()I
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.ProglangType:dimensions()I
daikon.VarInfo:relate_var()V
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaCharStream:getEndColumn()I
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.LimitedSizeIntSet:size()I
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.VarInfoName:isLiteralConstant()Z
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:new_ppt()V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
utilMDE.Intern:internSubsequence([III)[I
jtb.JavaParser:jj_3R_86()Z
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.PptName:isCombinedExitPoint()Z
utilMDE.FuzzyFloat:gt(DD)Z
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.Quant:gte(II)Z
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.ValueTuple:size()I
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.MathMDE:missing_numbers([I)[I
daikon.PptName:isEnterPoint()Z
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.Quant:eltsEqual([II)Z
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.ProglangType:isIntegral()Z
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
jtb.JavaParser:jj_3R_162()Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.inv.Invariant:getConfidence()D
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.VarInfoName:hashCode()I
utilMDE.TestUtilMDE:lsis_test(I)V
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.Quant:subsetOf([F[D)Z
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.Quant:sameLength([I[I)Z
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_48()Z
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_87()Z
jtb.JavaParser:jj_3R_62()Z
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.FuzzyFloat:eq(DD)Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.ProglangType:baseIsIntegral()Z
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptTopLevel.CondIterator:hasNext()Z
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.ValueSet:ValueSet(I)V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.test.FormatTestCase:passes()Z
daikon.Quant:eltsGtIndex([I)Z
utilMDE.Options.OptionInfo:argument_required()Z
daikon.inv.Invariant:logDetail()Z
daikon.Quant:pairwiseGT([I[I)Z
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
jtb.JavaCharStream:UpdateLineColumn(C)V
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
jtb.JavaParser:jj_3R_75()Z | CONDITION | 195384 | if (x) -> if (!x)
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3_5()Z
daikon.Debug:logDetail()Z
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.ArraysMDE:max([I)I
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:eltsGT([II)Z
jtb.JavaParser:jj_3_21()Z
daikon.Quant:pairwiseDivides([I[I)Z
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:sorted([I)Z
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.diff.RootNode:RootNode()V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.ProglangType:isScalar()Z
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.diff.InvMap:InvMap()V
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.Quant:lexGT([I[I)Z
daikon.VarInfoName:name()Ljava.lang.String;
daikon.diff.Node:children()Ljava.util.Iterator;
utilMDE.MathMDE:nonmodulus_strict([I)[I
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.Debug:logOn()Z
daikon.diff.Node:Node(LutilMDE.Pair;)V
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
jtb.JavaParser:jj_3_3()Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:slice([III)[I
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
utilMDE.ArraysMDE:sum([D)D
jtb.JavaParser:jj_3R_117()Z
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase; | ASSIGN | 13092 | = null
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:pow(II)I
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParser:jj_3_13()Z
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:sum([[I)I
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.inv.unary.UpperBoundCore:calc_modulus()J
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.inv.OutputFormat:isJavaFamily()Z
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression; | RETURN | 57109 | return null
daikon.Quant:setEqual([I[I)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.Quant:eq(FF)Z
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
jtb.syntaxtree.NodeList:NodeList()V
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
jtb.JavaParser:jj_scan_token(I)Z
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_69()Z
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:indexOf([II)I
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
utilMDE.WeakHasherMap:processQueue()V
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.ModBitTracker:num_samples()I
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.Quant:memberOf(F[D)Z
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
utilMDE.MathMDE:pow_fast(II)I
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:subarray([JII)[J
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
jtb.JavaCharStream:BeginToken()C
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.Quant:pairwiseLTE([I[I)Z
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.Quant:isReverse([I[I)Z
utilMDE.FuzzyFloat:FuzzyFloat()V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.Quant:intersection([I[I)[I
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
utilMDE.FuzzyFloat:lt(DD)Z
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.UpperBoundCore:calc_range()J
jtb.JavaParser:CastExpression()Ljtb.syntaxtree.CastExpression;
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.Quant:pairwiseEqual([I[I)Z
jtb.JavaParser:jj_3R_89()Z
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
jtb.JavaParser:jj_3R_123()Z
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.JavaParser:jj_3R_116()Z
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParser:jj_3R_58()Z
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.NodeToken:trimSpecials()V
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.Quant:subsetOf([F[F)Z
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.VarComparabilityImplicit:alwaysComparable()Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
jtb.JavaParser:jj_2_5(I)Z
jtb.JavaParser:jj_3R_56()Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.ValueTuple:isMissingFlow(I)Z
daikon.ProglangType:isPseudoArray()Z
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:lte(II)Z
jtb.JavaCharStream:getBeginLine()I
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
utilMDE.MathMDE:mod_positive(II)I
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.Invariant:prob_and(DD)D
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_96()Z
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
jtb.JavaParser:jj_3_35()Z
daikon.ModBitTracker:ModBitTracker(I)V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.VarInfoName.Simple:isLiteralConstant()Z
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant:prob_or(DD)D
daikon.Quant:subsetOf([D[D)Z
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
jtb.JavaCharStream:FillBuff()V
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
utilMDE.SimpleLog.LongVal:LongVal(J)V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:eltwiseGT([I)Z
utilMDE.WeakHasherMap.EntrySet:size()I
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:jj_3R_63()Z
jtb.JavaCharStream:readChar()C
daikon.Quant:ne(II)Z
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.InvariantFormatTester:execute()Z
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_53()Z
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.Invariants:Invariants()V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:fn_compose([I[I)[I
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
jtb.JavaParser:jj_2_21(I)Z
jtb.JavaParser:jj_3R_52()Z
daikon.ValueTuple:isMissing(I)Z
utilMDE.Assert:assertTrue(Z)V
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
utilMDE.MathMDE:modulus([I)[I
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.Ppt:Ppt()V
utilMDE.Intern.SequenceAndIndices:hashCode()I
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eltwiseGTE([I)Z
jtb.JavaParser:jj_2_12(I)Z
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:noDups([I)Z
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
jtb.JavaParser:jj_3_10()Z
utilMDE.ArraysMDE:fn_identity(I)[I
utilMDE.FuzzyFloat:lte(DD)Z
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.Quant:memberOf(S[S)Z
jtb.JavaParser:jj_3R_148()Z
daikon.Quant:subsetOf([J[J)Z
jtb.JavaParser:jj_3R_54()Z
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:simplify_name()Ljava.lang.String;
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:element_range([I)I
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:jj_3R_135()Z
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:eltsLT([II)Z
utilMDE.ArraysMDE:sum([I)I
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.PptSlice0:arity()I
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_57()Z
utilMDE.LimitedSizeIntSet:add(I)V
daikon.Quant:setDiff([I[I)[I
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.Quant:subsetOf([D[F)Z
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:eltwiseNotEqual([I)Z
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.Quant:lexLTE([I[I)Z
daikon.Quant:pairwiseLT([I[I)Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.Quant:eltwiseEqual([I)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
utilMDE.Intern:internSubsequence([JII)[J
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
jtb.ParseException:getMessage()Ljava.lang.String;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
jtb.JavaParser:jj_3_36()Z
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Quant:eq(JJ)Z
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Intern:intern([I)[I
daikon.ProglangType:baseIsScalar()Z
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;)V
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
utilMDE.MathMDE:gcd([I)I
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Invariant:prob_and(DDD)D
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
jtb.JavaParser:jj_2_16(I)Z
jtb.JavaParser:jj_2_36(I)Z
daikon.Quant:lexNotEqual([I[I)Z
jtb.JavaParser:jj_3R_114()Z
daikon.inv.Invariant:justified()Z
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.inv.Invariant:isWorthPrinting()Z
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.Quant:pairwiseSquare([I[I)Z
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.Quant:eq(II)Z
jtb.JavaParser:jj_3R_97()Z
jtb.JavaParser:jj_2_1(I)Z
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.Quant:eltsLTE([II)Z
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_47()Z
utilMDE.MathMDE:sign(I)I
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
utilMDE.OrderedPairIterator:hasNext()Z
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
jtb.JavaParser:jj_2_24(I)Z
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:jj_3R_50()Z
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.Quant:eq(DD)Z
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
utilMDE.MathMDE:negate(I)I
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
utilMDE.UtilMDE:lineNumberFileReader(Ljava.io.File;)Ljava.io.LineNumberReader;
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_122()Z
jtb.JavaParser:jj_3R_55()Z
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
jtb.JavaParser:jj_3_22()Z
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
utilMDE.ArraysMDE:min([I)I
jtb.JavaParser:jj_3_1()Z
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.diff.PrintAllVisitor:bufPrintln()V
jtb.JavaParser:jj_3R_163()Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.Quant:concat([I[I)[I
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.Quant:eltsLteIndex([I)Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
jtb.JavaCharStream:getEndLine()I
jtb.JavaParser:jj_3R_61()Z
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
jtb.JavaParser:jj_2_14(I)Z
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
jtb.JavaParser:jj_2_13(I)Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;Z)Z
daikon.PptSlice2:arity()I
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.ModBitTracker:num_sets()I
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:eltsLtIndex([I)Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:intern([J)[J
jtb.JavaParser:jj_2_3(I)Z
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.PptSlice0:initInvariantsSeen()V
jtb.JavaParser:jj_3R_119()Z
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
utilMDE.MathMDE:gcd(II)I
jtb.JavaParser:jj_3R_85()Z
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
utilMDE.Intern:numIntArrays()I
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.Quant:lexGTE([I[I)Z
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.Quant:eltwiseLTE([I)Z
utilMDE.FuzzyFloat:gte(DD)Z
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.Quant:eltsGTE([II)Z
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_2_35(I)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
jtb.JavaParser:jj_3R_81()Z
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
utilMDE.ArraysMDE:subarray([III)[I
utilMDE.OrderedPairIterator:setnext2()V
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.Quant:lexEqual([I[I)Z
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
jtb.JavaCharStream:getBeginColumn()I
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
jtb.JavaCharStream:ReadByte()C
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:noDuplicates([D)Z
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
jtb.JavaParser:generateParseException()Ljtb.ParseException;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
jtb.JavaParser:jj_3_24()Z
jtb.Token:newToken(I)Ljtb.Token;
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.Quant:subsetOf([I[I)Z
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
utilMDE.OrderedPairIterator:setnext1()V
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
jtb.JavaParser:jj_3R_76()Z
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_133()Z
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_118()Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.unary.LowerBoundCore:calc_range()J
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
utilMDE.Intern:intern([D)[D
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
jtb.JavaParser:jj_3R_88()Z
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.Quant:eltsNotEqual([II)Z
utilMDE.WeakHasherMap:size()I
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
utilMDE.MathMDE:gcd(JJ)J
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;)Z
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.NodeFinder:inPre()Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:logOn()Z
jtb.JavaParser:jj_3R_134()Z
jtb.JavaParser:jj_3R_121()Z
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:eltsEqualIndex([I)Z
daikon.Quant:pairwiseGTE([I[I)Z
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:memberOf(D[F)Z
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
jtb.JavaParser:jj_3R_60()Z
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.JavaParser:jj_2_10(I)Z
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.ModBitTracker:split(I)I
daikon.Quant:union([I[I)[I
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfo:name()Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([ZZ)I
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.PptSlice1:num_samples()I
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:eltsGteIndex([I)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.Quant:subsetOf([B[I)Z
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
jtb.ParseException:ParseException(Ljava.lang.String;)V
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.ProglangType:isArray()Z
jtb.JavaParser:jj_3R_51()Z
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
utilMDE.MathMDE:gcd_differences([I)I
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.ModBitTracker:num_vars()I
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
jtb.JavaParser:jj_3_12()Z
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.Quant:gt(II)Z
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.PptSlice1:arity()I
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
utilMDE.ArraysMDE:fn_is_total([I)Z
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
jtb.JavaParser:jj_2_15(I)Z
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_161()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
jtb.JavaParser:jj_3R_68()Z
daikon.VarInfoName.ElementsFinder:inPre()Z
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
utilMDE.ArraysMDE:min_max([I)[I
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.Quant:lt(II)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.Quant:eltsNotEqualIndex([I)Z
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:ne(DD)Z
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_2_4(I)Z
daikon.Quant:memberOf(I[I)Z
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
jtb.JavaParser:jj_3R_49()Z
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
jtb.JavaParser:jj_3R_120()Z
daikon.Quant:lexLT([I[I)Z
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.diff.Node:Node()V
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
utilMDE.UtilMDE:lineNumberFileReader(Ljava.lang.String;)Ljava.io.LineNumberReader;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3_14()Z
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:eltwiseLT([I)Z
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:concat([I[I)[I
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quant:memberOf(F[F)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:memberOf(J[J)Z
jtb.JavaParser:jj_3_15()Z
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String; | RETURN | 3594 | return null
daikon.inv.unary.LowerBoundCore:calc_modulus()J
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_3_4()Z
daikon.Quant:subsetOf([S[S)Z
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
daikon.Quant:pairwiseNotEqual([I[I)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
jtb.JavaCharStream:backup(I)V
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.PptTopLevel:name()Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
1076 4 681 2 431 2 226 2 898 6 301 2 127 2 867 2 51 2 1089 2 590 2 478 2 19 2 656 2 89 2 207 2 783 2 247 2 909 2 816 2 852 4 252 2 144 2 
867 5 1089 4 5 4 590 4 1092 4 763 2 681 8 207 8 242 6 688 6 799 2 946 2 226 8 852 12 898 15 301 4 144 4 
756 2 674 2 325 4 920 2 829 4 293 8 769 2 42 2 958 2 959 2 195 2 406 14 229 2 863 2 734 2 123 6 124 4 510 10 775 4 837 4 838 4 408 4 445 2 53 2 966 2 239 2 903 4 808 10 524 2 527 4 992 4 316 2 1032 4 662 2 317 62 570 4 534 2 754 2 143 4 715 2 
1073 2 150 2 1007 2 724 2 434 2 470 2 471 2 474 2 133 2 494 2 
1 2 499 2 292 4 856 2 293 2 370 2 158 2 580 2 10 2 503 2 436 2 79 4 302 2 378 2 230 2 1054 2 869 2 308 2 519 4 174 2 594 2 752 2 181 2 251 2 755 2 186 2 675 2 547 2 1016 2 958 2 48 2 558 2 626 2 273 2 703 2 706 4 1095 4 1032 4 61 2 214 2 492 2 570 2 141 2 145 2 
426 4 459 2 673 4 1076 6 219 8 5 4 327 6 573 2 681 32 1040 2 431 18 956 4 688 6 401 2 614 6 295 6 504 6 801 4 896 4 226 32 898 53 301 16 1048 6 867 22 1089 16 590 16 1092 4 519 4 656 4 658 2 706 4 207 32 242 6 23 4 708 2 247 2 852 48 531 2 144 16 
293 2 920 2 123 2 
950 2 48 2 49 2 824 2 109 22 37 2 927 2 262 2 859 2 832 2 548 2 960 2 1047 10 340 2 
587 2 199 2 25 4 228 2 436 2 78 2 519 2 924 2 706 2 
719 2 237 2 842 6 385 2 506 2 300 2 874 6 849 6 523 2 450 2 197 2 
864 6 962 2 677 2 541 6 519 2 560 4 629 2 544 2 644 2 706 2 333 4 1049 6 512 6 
1076 10 641 2 33 2 681 16 431 8 683 4 374 8 504 8 801 6 226 16 898 28 301 10 867 12 1089 10 841 4 590 10 656 6 519 6 418 2 706 6 207 16 708 2 61 2 751 2 247 4 530 8 946 4 852 26 322 2 144 10 
853 6 611 4 
1007 2 
457 2 
1014 2 706 2 
410 2 666 2 706 4 
4 4 428 2 429 1 9 2 578 2 433 1 12 2 583 2 732 3 584 2 733 2 736 2 161 2 443 2 442 3 18 2 589 2 986 16 17 2 310 1 988 2 171 2 452 2 749 2 994 2 179 1 998 2 321 4 185 3 31 2 758 1 1003 2 188 2 460 3 38 4 1010 6 329 2 612 2 193 12 335 2 472 2 899 2 1020 2 618 2 46 6 473 2 773 2 774 2 341 2 777 1 622 3 344 2 200 2 625 2 901 2 204 8 348 2 1030 2 1029 1 57 3 58 16 907 3 60 2 486 2 353 6 211 2 212 2 355 2 63 2 490 2 911 2 912 2 359 24 67 2 637 2 1036 1 498 4 917 3 791 2 922 2 792 2 923 2 924 2 222 1 645 2 369 1 797 4 931 2 74 2 77 4 1046 1 511 2 83 2 937 2 85 32 381 1 805 2 521 2 519 32 88 2 657 16 240 2 943 2 529 6 663 8 393 2 665 2 92 5 1068 4 667 3 819 2 250 2 253 8 822 2 1074 2 537 2 103 16 540 2 539 2 257 1 108 2 107 2 263 1 1080 2 114 32 957 12 691 2 692 2 266 3 833 2 835 4 122 2 961 2 407 1 268 1 412 2 700 3 968 2 415 2 562 2 706 34 566 2 973 3 137 2 1100 2 280 2 713 2 285 2 569 24 
289 10 6 12 7 4 576 4 857 2 858 2 861 2 862 46 13 24 14 2 586 4 868 2 20 2 875 48 22 46 876 8 28 2 597 2 877 2 880 4 324 46 882 8 884 2 34 2 885 2 888 2 610 2 892 2 41 14 900 4 342 2 343 34 627 2 346 2 905 2 904 2 350 2 352 8 910 2 64 4 358 8 915 16 364 2 70 46 71 2 368 4 647 2 933 4 75 2 651 2 375 2 376 14 935 2 934 8 936 2 87 20 383 2 655 4 390 2 944 2 391 2 392 4 945 2 96 4 98 2 668 4 99 2 669 2 671 2 949 2 952 22 686 2 117 4 403 46 689 2 118 2 696 22 698 6 699 4 413 6 709 2 711 12 422 46 138 2 975 10 423 2 142 146 714 4 149 2 720 4 427 2 980 2 722 2 152 2 725 4 727 2 728 2 983 2 437 2 441 2 164 2 740 2 168 2 987 4 743 8 449 8 744 8 745 4 175 34 746 4 176 28 748 2 750 2 753 4 999 2 1000 6 760 4 461 2 463 20 1009 2 1011 46 766 20 770 46 1017 2 771 4 1018 2 1021 2 1023 4 196 2 198 4 776 4 1025 6 779 4 1027 2 202 20 479 2 480 2 482 2 483 2 484 146 205 2 1031 2 1034 24 215 8 493 4 795 40 1043 2 502 14 802 2 505 2 507 24 1051 2 803 4 1056 4 1059 8 517 4 806 8 516 2 809 4 1063 2 245 4 244 8 1065 2 1069 8 249 2 533 2 255 14 542 4 546 6 1082 2 1083 2 265 2 551 6 836 2 267 2 553 4 556 2 1086 2 839 2 271 2 1090 2 559 10 847 46 1093 2 565 16 1096 4 564 2 276 2 277 2 278 4 1099 46 851 46 281 176 282 46 284 36 854 146 
293 2 332 1 697 2 841 2 337 2 203 2 1028 2 1052 2 
697 2 272 2 1052 2 
866 2 697 2 1052 2 
485 2 331 2 93 2 
697 2 1052 2 
485 2 56 2 
697 2 908 2 
349 2 485 2 93 2 
93 2 617 2 45 2 
326 2 1006 2 93 2 
402 2 93 2 135 2 
1035 2 93 2 939 2 
621 2 485 2 
697 2 596 2 
45 2 1071 2 
823 2 1006 2 
402 2 477 2 
1035 2 532 2 
485 2 938 2 
1035 2 972 2 
402 2 132 2 
767 2 1006 2 
798 2 45 2 
349 2 485 2 93 2 845 2 
349 2 670 2 485 2 93 2 845 2 
485 2 169 2 93 2 
485 2 693 2 93 2 
1038 2 991 2 768 2 585 2 
379 2 458 2 591 2 1091 2 653 2 1062 2 109 6 274 2 275 2 313 2 1079 2 942 2 1081 2 550 2 729 4 976 2 552 4 80 2 
1055 2 93 2 
293 2 1077 2 762 2 203 2 
293 2 1077 2 762 2 203 2 955 2 1028 2 
293 2 588 2 697 2 841 2 203 2 1052 2 
543 2 181 2 
293 2 208 2 841 2 203 2 
402 2 167 2 
830 2 1035 2 
579 2 45 2 
707 2 1006 2 
1035 2 1060 2 1006 2 
1035 2 1006 2 616 2 
1035 2 1006 2 192 2 
1035 2 1006 2 821 2 
928 2 831 6 293 2 448 2 203 2 634 2 598 2 248 6 
485 2 170 2 
1094 2 697 2 93 2 
697 2 1039 2 
994 2 
0 2 717 2 571 2 4 4 428 2 577 2 9 2 583 2 584 2 733 2 443 2 17 2 988 2 872 2 749 2 321 2 998 2 31 2 1003 2 188 6 462 2 764 2 38 4 1010 2 329 2 1012 2 612 2 193 8 335 2 619 2 46 4 773 2 774 4 200 2 58 6 782 2 353 2 63 2 911 2 490 2 357 2 360 4 498 4 922 2 792 2 923 2 924 2 369 2 1041 2 500 2 77 4 1046 2 85 4 805 2 519 26 88 2 240 2 943 2 529 6 663 2 1068 2 822 2 1074 2 539 4 540 2 107 2 114 6 957 8 264 2 835 2 122 2 128 2 701 4 415 2 706 26 419 2 
0 2 717 2 4 4 428 2 577 2 9 2 583 2 584 2 733 2 443 2 17 2 988 2 872 2 749 2 996 2 321 2 998 2 31 2 1003 2 188 6 764 2 38 4 1010 2 329 2 1012 2 612 2 193 8 335 2 1020 2 619 2 46 6 773 2 774 4 200 2 481 2 58 6 782 2 353 2 63 2 911 2 490 2 912 2 357 2 360 4 498 4 922 2 792 2 923 2 924 2 369 2 1041 2 77 4 1046 2 85 4 805 2 519 26 88 2 240 2 943 2 529 6 663 2 1068 2 822 2 1074 2 537 2 539 2 540 2 107 2 114 6 957 8 264 2 835 2 122 2 555 2 128 2 701 4 415 2 706 26 419 2 
159 2 
258 2 609 2 
1001 2 216 2 719 2 1088 2 842 2 190 2 874 2 523 2 387 2 814 2 889 2 930 2 982 2 1064 4 194 2 178 4 65 2 254 2 
216 2 2 2 719 4 363 2 498 2 979 2 428 2 9 2 930 2 982 2 583 2 584 2 733 2 509 2 440 2 82 2 84 4 235 2 807 2 385 2 874 4 519 6 523 4 814 2 387 2 450 2 747 2 243 2 1064 4 529 4 178 4 599 2 254 2 820 2 1001 2 1003 2 607 2 190 2 189 2 36 2 464 2 38 2 112 2 889 2 113 2 119 4 194 4 335 2 475 4 1088 2 842 6 54 2 201 4 849 6 702 2 706 12 279 2 210 4 1102 6 65 2 
216 2 2 2 719 4 363 2 498 2 979 2 428 2 9 2 930 2 982 2 506 2 583 2 584 2 733 2 509 2 440 2 82 2 84 4 235 2 807 2 874 6 519 6 523 4 814 2 387 2 450 2 747 2 243 2 1064 4 529 4 178 4 599 2 254 2 820 2 1001 2 1003 2 607 2 190 2 189 2 36 2 464 2 38 2 112 2 889 2 113 2 119 4 194 4 335 2 475 4 1088 2 842 4 54 2 201 4 849 6 702 2 706 12 279 2 210 4 1102 6 65 2 
216 2 2 2 719 4 363 2 498 2 979 2 428 2 9 2 930 2 982 2 583 2 300 2 584 2 733 2 509 2 440 2 82 2 84 4 235 2 807 2 874 6 519 6 523 4 814 2 387 2 450 2 747 2 243 2 1064 4 529 4 178 4 599 2 254 2 820 2 1001 2 1003 2 607 2 190 2 189 2 36 2 464 2 38 2 112 2 889 2 113 2 119 4 194 4 335 2 475 8 1088 2 842 6 54 2 201 4 849 6 702 2 706 12 279 2 210 4 1102 6 65 2 
216 2 2 2 719 4 363 2 498 2 979 2 428 2 9 2 930 2 982 2 506 2 583 2 300 2 584 2 733 2 509 2 440 2 82 2 84 8 235 2 807 2 874 8 519 6 523 4 814 2 387 2 450 2 747 2 243 2 1064 4 529 4 178 4 599 2 254 2 820 2 1001 2 1003 2 607 2 190 2 189 2 36 2 464 2 38 2 112 2 889 2 113 2 119 4 194 4 335 2 475 8 1088 2 842 6 54 2 201 4 849 8 702 2 706 12 279 2 210 4 1102 10 65 2 
216 2 2 2 719 4 363 2 498 2 979 2 428 2 9 2 930 2 982 2 583 2 300 2 584 2 733 2 509 2 440 2 82 2 84 8 235 2 807 2 874 6 519 6 523 4 814 2 387 2 450 2 747 2 243 2 1064 4 529 4 178 4 599 2 254 2 820 2 1001 2 1003 2 607 2 190 2 189 2 36 2 464 2 38 2 112 2 889 2 113 2 119 4 194 4 335 2 475 8 1088 2 842 6 54 2 201 4 849 6 702 2 706 12 279 2 210 4 1102 10 65 2 
287 2 2 2 4 4 290 8 9 2 860 6 583 2 584 2 17 2 309 1 872 2 874 8 592 6 599 2 321 2 31 2 607 4 328 2 38 4 889 2 329 2 891 6 335 2 619 2 46 6 339 2 54 2 58 6 353 2 633 6 62 1 63 2 912 2 357 2 65 2 66 2 363 2 68 6 921 2 923 2 924 2 926 1 649 2 930 2 932 10 77 4 377 2 82 2 85 2 88 2 387 2 940 2 943 2 663 2 94 2 948 2 672 4 676 2 107 2 684 1 113 2 112 2 114 8 957 4 119 4 122 2 410 6 964 4 965 2 967 6 701 4 415 2 134 2 702 2 706 46 971 2 977 6 424 2 148 2 719 4 979 2 428 2 153 2 982 2 730 2 984 6 733 2 438 6 440 4 738 7 988 2 450 4 747 2 178 4 453 1 1001 2 457 6 1003 2 188 6 759 2 189 2 190 2 464 2 1010 2 467 2 1012 4 468 6 1014 6 193 4 194 4 1020 2 772 2 773 2 475 2 200 12 201 8 209 1 210 6 784 2 216 2 787 1 498 4 1037 2 792 2 506 4 508 2 509 2 234 2 235 2 238 2 236 2 807 2 519 24 520 2 523 4 240 2 814 2 1064 4 243 2 529 6 1068 2 820 2 254 2 1072 6 1074 2 825 2 826 1 835 2 1085 6 269 1 557 2 1088 2 842 4 844 2 849 12 561 6 279 2 568 2 567 7 1102 2 
287 2 148 2 2 2 719 4 290 8 979 2 4 4 428 2 723 2 153 2 9 2 982 2 860 6 730 2 583 2 300 4 584 2 984 6 733 2 438 6 440 4 17 2 988 2 872 2 592 6 874 8 450 4 747 2 178 4 599 2 321 4 457 6 1001 2 31 2 1003 2 759 2 188 6 328 2 607 4 190 2 189 2 464 2 38 4 1010 2 467 2 889 2 891 6 1012 4 329 2 468 6 1014 6 193 8 194 4 335 2 1020 2 619 2 772 2 46 6 773 2 339 2 774 2 475 6 200 12 54 2 201 8 58 6 210 6 633 6 353 2 489 2 784 2 63 2 912 2 357 2 65 2 66 2 216 2 68 6 363 2 1037 2 498 4 921 2 792 2 924 2 923 2 930 2 649 2 932 10 77 4 377 2 509 2 508 2 82 2 234 2 235 2 85 2 236 2 238 2 807 2 520 2 88 2 519 26 240 2 523 4 387 2 814 2 940 2 943 2 243 2 1064 4 529 6 663 2 94 2 1068 4 948 2 254 2 820 2 1072 6 1074 2 672 4 676 2 825 2 107 2 112 2 113 2 114 8 957 8 119 4 835 4 122 2 1085 6 410 6 1088 2 557 2 964 4 965 2 967 6 842 8 844 2 701 4 134 2 415 2 849 12 702 2 561 6 706 48 279 2 971 2 568 2 1102 2 977 6 424 2 
287 2 148 2 2 2 719 4 290 8 979 2 4 4 428 2 723 2 153 2 9 2 982 2 860 6 730 2 583 2 300 4 584 2 984 6 733 2 438 6 440 4 17 2 988 2 872 2 592 6 874 8 450 4 747 2 178 4 599 2 321 4 457 6 1001 2 31 2 1003 2 759 2 188 6 328 2 607 4 190 2 189 2 464 2 38 4 1010 2 467 2 889 2 891 6 1012 4 329 2 468 6 1014 6 193 8 194 4 335 2 1020 2 619 2 772 2 46 6 773 2 339 2 774 2 475 6 200 12 54 2 201 8 58 6 210 6 633 6 353 2 489 2 784 2 63 2 912 2 357 2 65 2 66 2 216 2 68 6 363 2 1037 2 498 4 921 2 792 2 924 2 923 2 930 2 649 2 932 10 77 4 377 2 509 2 508 2 82 2 84 4 234 2 235 2 85 2 236 2 238 2 807 2 520 2 88 2 519 26 523 4 240 2 387 2 814 2 940 2 943 2 243 2 1064 4 529 6 663 2 94 2 1068 4 948 2 254 2 820 2 1072 6 1074 2 672 4 676 2 825 2 107 2 112 2 113 2 114 8 957 8 119 4 835 4 122 2 1085 6 410 6 1088 2 557 2 964 4 965 2 967 6 842 8 844 2 701 4 134 2 415 2 849 12 702 2 561 6 706 48 279 2 971 2 568 2 1102 6 977 6 424 2 
287 2 2 2 4 4 290 8 9 2 860 12 11 6 583 2 298 2 584 2 300 4 305 6 17 2 873 2 872 2 874 10 592 6 599 2 321 4 31 2 607 4 328 2 38 4 889 2 329 2 891 6 335 2 619 4 46 6 339 2 345 6 54 2 58 8 353 4 633 6 63 2 912 2 357 2 65 2 66 2 363 2 68 6 921 2 365 2 923 2 924 2 366 2 649 2 930 2 932 8 77 4 377 2 82 2 84 4 85 4 385 2 88 2 387 2 940 2 943 2 663 4 947 2 94 2 948 2 672 4 676 2 107 2 113 2 112 2 114 12 957 10 119 4 122 2 410 12 964 4 965 2 967 12 701 6 415 2 134 2 702 2 706 52 971 2 977 6 424 2 148 2 719 4 979 2 428 2 723 2 154 2 153 2 982 2 730 2 984 6 733 2 438 6 440 4 444 6 447 6 988 2 742 2 450 4 747 2 178 4 1001 2 457 12 1003 2 759 2 188 8 189 2 190 2 464 2 1010 4 467 2 1012 4 468 12 1014 12 193 10 194 4 1020 2 1019 6 772 2 773 2 774 2 475 6 200 10 201 8 210 6 489 2 784 2 216 2 786 6 498 4 1037 2 792 2 800 2 1045 6 506 2 509 2 508 2 235 2 238 2 236 2 807 2 519 24 520 2 240 2 523 4 814 2 1064 4 243 2 529 6 1068 4 820 2 254 2 1072 6 1074 2 825 2 261 6 835 4 1085 6 557 2 1088 2 842 10 844 2 849 16 561 6 279 2 568 2 1102 6 
216 2 2 2 719 4 979 2 190 2 464 2 113 2 889 2 982 2 119 2 300 2 82 2 84 4 475 6 235 2 842 6 54 2 201 2 807 2 874 6 849 4 523 4 702 2 387 2 814 2 450 2 706 4 210 2 279 2 1064 2 178 2 1102 4 599 2 65 2 820 2 
716 2 2 2 719 4 4 4 979 2 428 2 9 2 432 2 982 2 583 2 300 2 584 2 733 2 17 2 872 2 874 6 450 2 994 2 178 2 599 2 31 2 1003 2 1002 2 188 6 606 2 189 2 190 2 464 2 38 4 1010 3 889 2 329 2 1012 2 335 2 472 2 1020 2 46 6 773 2 475 6 200 4 54 2 201 2 348 2 58 6 210 2 353 3 63 2 912 2 357 2 65 2 216 2 498 4 792 2 923 2 924 2 73 3 932 2 77 4 82 2 234 2 235 2 85 3 807 2 88 2 519 24 523 4 240 2 814 2 387 2 943 2 1064 2 529 6 820 2 1074 2 107 2 113 2 114 8 119 2 122 2 695 2 842 6 701 4 415 2 849 4 702 2 706 28 279 2 1102 2 285 2 
216 2 2 2 719 4 363 2 498 2 979 2 428 2 9 2 930 2 982 2 583 2 300 2 584 2 733 2 509 2 440 2 82 2 84 8 235 2 807 2 874 6 519 6 523 4 814 2 387 2 450 2 747 2 243 2 1064 4 529 4 178 4 599 2 254 2 820 2 1001 2 1003 2 607 2 190 2 189 2 36 2 464 2 38 2 112 2 889 2 113 2 119 4 194 4 335 2 475 8 1088 2 842 6 54 2 201 4 849 6 702 2 706 12 279 2 210 4 1102 10 65 2 
216 2 2 2 719 4 363 2 498 2 979 2 428 2 9 2 930 2 982 2 583 2 584 2 300 2 733 2 509 2 440 2 82 2 84 8 235 2 807 2 385 2 519 6 874 6 523 4 387 2 814 2 450 2 747 2 243 2 1064 4 529 4 178 4 599 2 254 2 820 2 1001 2 1003 2 607 2 190 2 189 2 38 2 464 2 112 2 889 2 113 2 116 4 119 4 194 4 335 2 475 8 1088 2 842 8 201 4 849 8 417 2 702 2 706 12 279 2 210 4 421 2 1102 10 65 2 
82 2 55 2 702 2 
82 2 55 2 702 2 
2 2 719 4 4 4 428 2 9 2 730 2 583 2 584 2 300 4 733 2 440 4 163 2 17 2 988 4 872 2 874 12 450 4 21 2 747 2 178 2 318 2 321 4 455 2 31 2 1003 2 188 2 607 2 190 4 886 2 38 4 889 2 329 2 1012 6 193 4 194 4 335 2 1020 2 46 6 773 2 475 6 200 4 201 4 55 2 58 2 210 4 63 2 912 2 357 2 363 2 68 2 498 4 792 2 643 2 923 2 924 2 646 2 930 2 932 2 373 2 650 2 77 4 506 4 82 4 84 4 85 2 515 2 385 4 519 16 88 2 812 4 240 2 523 4 814 2 940 2 943 2 1064 2 529 6 664 2 395 2 1068 4 95 2 820 2 1074 2 672 2 539 2 398 2 112 2 685 2 114 2 957 4 119 2 835 4 122 2 1088 2 964 2 840 4 842 12 969 2 415 2 849 16 850 2 702 6 706 24 419 4 1102 6 424 2 
183 2 270 2 672 2 200 2 68 2 921 2 643 2 519 2 609 2 706 4 796 2 21 2 971 2 932 2 664 2 584 2 254 2 
2 2 719 4 4 4 428 2 9 2 730 2 583 2 584 2 300 4 733 2 440 4 163 4 17 2 988 4 872 2 874 12 450 4 21 2 747 2 595 2 178 2 318 2 321 4 455 2 31 2 1003 2 188 2 607 4 190 4 886 2 38 4 889 2 329 2 1012 6 193 4 194 4 335 2 1020 2 46 6 773 2 475 6 1024 2 200 2 201 4 55 2 58 2 210 4 354 2 63 2 912 2 357 2 68 2 497 2 363 2 498 4 792 2 643 2 923 2 924 2 646 2 930 2 373 2 650 2 76 2 77 4 506 4 509 2 82 4 84 4 85 4 515 2 385 4 519 16 88 2 812 4 240 2 523 4 814 2 940 2 943 2 1064 2 529 6 664 2 1068 4 95 2 820 2 1074 2 112 2 685 2 114 2 957 4 119 2 835 4 122 2 1088 2 964 2 840 4 842 12 415 2 849 16 702 6 706 24 419 4 1102 6 424 2 
2 2 719 4 4 4 428 2 9 2 730 2 583 2 584 2 300 4 733 2 440 4 163 2 17 2 988 4 872 2 874 12 450 4 593 2 21 2 747 2 178 2 318 2 320 2 321 4 455 2 31 2 1003 2 188 2 607 4 190 4 886 2 38 4 889 2 329 2 1012 6 193 4 194 4 335 2 1020 2 46 6 773 2 475 6 200 4 201 4 55 2 58 2 210 4 63 2 912 2 357 2 363 2 68 2 498 4 792 2 643 2 923 2 924 2 367 2 646 2 930 2 932 2 373 2 650 2 77 4 506 4 652 2 509 2 82 4 84 4 85 2 515 2 385 4 519 16 88 2 813 2 812 4 240 2 523 4 814 2 940 2 943 2 1064 2 529 6 664 2 1068 4 95 2 820 2 1074 2 672 2 539 1 112 2 685 2 114 2 957 4 119 2 835 4 122 2 1088 2 964 2 840 4 842 12 415 2 849 16 702 6 706 24 419 4 1102 6 424 2 
425 2 572 2 4 4 428 2 981 2 9 2 435 2 583 2 584 2 301 2 733 2 162 2 17 2 590 2 995 2 31 2 1003 2 32 1 188 6 761 2 38 4 1010 2 329 2 1012 2 193 2 335 2 336 2 898 6 1020 1 619 2 772 2 46 5 620 2 773 2 200 2 207 2 58 6 353 2 488 2 63 2 912 1 491 2 357 2 66 2 495 2 496 2 498 4 1037 2 642 2 792 2 220 2 923 2 924 2 648 2 649 2 224 2 372 2 225 4 226 2 77 4 377 2 81 2 231 2 85 2 238 2 520 2 88 2 519 20 240 2 242 4 943 2 661 2 529 6 663 2 90 2 1075 2 1074 2 104 2 539 1 107 2 259 2 681 2 114 8 957 2 1084 2 121 2 122 2 1089 2 131 2 701 4 1092 2 415 2 706 26 1098 6 710 2 852 4 144 2 
3 2 188 2 107 2 1010 3 40 2 687 2 114 2 619 6 513 2 739 2 85 3 701 2 519 2 846 4 848 2 706 2 941 2 58 2 451 2 353 3 139 3 879 2 456 2 914 2 
3 2 188 2 107 2 1010 2 40 2 687 2 114 2 619 6 513 2 739 2 85 2 701 2 519 2 846 4 848 2 706 2 941 2 58 2 451 2 353 2 139 2 879 2 456 2 914 2 
3 2 188 2 107 2 1010 2 40 2 687 2 114 2 619 6 513 2 739 2 85 2 701 2 519 2 846 4 848 2 706 2 941 2 58 2 451 2 353 2 139 2 879 2 456 2 914 2 
639 2 362 4 1044 4 801 2 504 4 226 2 301 2 160 3 16 4 85 3 986 2 446 2 590 2 519 4 657 2 314 3 24 2 454 2 603 2 605 6 107 2 681 2 1008 2 1010 3 114 2 687 2 400 2 897 2 898 5 1087 2 1089 2 129 4 778 2 130 4 706 10 207 2 59 3 712 2 852 4 144 2 
639 2 362 4 431 2 1044 4 801 2 504 4 226 2 301 2 160 2 867 2 16 4 85 2 986 2 446 2 590 2 519 4 657 2 314 2 24 2 454 2 603 2 605 6 107 2 681 2 1008 2 1010 2 114 2 687 2 400 2 897 2 898 4 1087 2 1089 2 129 4 778 2 130 4 706 10 207 2 59 2 708 2 712 2 852 4 144 2 
639 2 362 4 431 2 1044 4 801 2 504 4 226 2 301 2 160 2 867 2 16 4 85 2 986 2 446 2 590 2 519 4 657 2 314 2 24 2 454 2 603 2 605 6 107 2 681 2 1008 2 1010 2 114 2 687 2 400 2 897 2 898 4 1087 2 1089 2 129 4 778 2 130 4 706 10 207 2 59 2 708 2 712 2 852 4 144 2 
639 2 362 4 431 2 1044 4 801 2 504 4 226 2 301 2 160 2 867 2 16 4 85 2 986 2 446 2 590 2 519 4 657 2 314 2 24 2 454 2 603 2 605 6 107 2 681 2 1008 2 1010 2 114 2 687 2 400 2 897 2 898 4 1087 2 1089 2 129 4 778 2 130 4 706 10 207 2 59 2 708 2 712 2 852 4 144 2 
639 2 362 4 431 4 1044 4 801 2 504 4 226 2 301 2 160 2 867 4 16 4 85 2 986 2 446 2 590 2 519 4 657 2 314 2 24 2 454 2 603 2 605 6 107 2 681 2 1008 2 1010 2 114 2 687 2 400 2 897 2 898 4 1087 2 1089 2 129 4 778 2 130 4 706 10 207 2 59 2 708 4 712 2 852 4 144 2 
501 2 615 2 180 2 913 2 8 2 125 2 
264 2 15 2 334 2 993 2 871 2 221 2 8 2 
146 2 100 1 1004 2 428 2 793 2 953 1 954 2 399 2 794 1 155 2 545 2 468 2 893 2 469 2 227 2 47 2 624 2 623 2 239 1 311 2 518 2 519 8 706 10 206 2 316 1 997 2 
219 2 761 2 327 4 681 6 431 3 372 2 834 2 801 2 504 4 226 6 898 15 301 6 230 2 304 2 867 5 1089 6 590 6 1092 2 519 6 630 2 706 6 207 6 242 4 661 2 23 2 708 2 817 2 852 12 531 1 141 2 144 6 
963 2 362 2 16 2 883 2 1058 2 130 2 538 6 780 1 384 2 519 1 241 2 706 1 388 2 72 2 890 2 394 2 44 2 323 4 
963 4 362 2 16 2 1058 2 883 2 130 2 538 6 384 4 241 2 388 4 72 2 890 2 394 2 44 2 323 4 
963 8 362 2 16 2 1058 8 883 2 130 2 538 10 780 1 384 8 519 1 241 2 706 1 388 8 72 2 890 2 394 2 44 6 323 4 
963 2 362 2 16 2 883 2 130 2 538 2 384 2 241 2 388 2 72 2 890 2 394 2 323 2 
855 2 4 36 978 4 151 2 574 2 291 4 430 8 726 4 294 10 156 16 731 4 299 8 737 4 985 6 306 30 165 4 166 8 870 10 990 2 173 2 26 2 27 4 177 4 878 4 602 1 30 4 29 4 604 4 187 4 757 32 1005 4 191 4 35 4 608 2 465 16 39 4 466 4 330 10 613 4 894 24 1013 4 193 16 1015 10 43 4 1020 26 46 102 1022 4 773 2 52 6 628 4 1026 6 347 4 351 2 631 4 632 4 487 4 1033 4 213 4 635 4 356 2 912 28 785 4 636 10 361 4 217 2 640 4 919 4 789 4 69 8 923 6 925 2 929 4 223 4 77 44 1050 2 233 4 1057 2 514 14 804 4 386 2 810 2 519 70 811 2 522 2 525 16 943 6 526 4 528 6 91 2 97 2 951 24 101 8 102 2 105 4 539 2 679 11 828 24 682 8 110 2 260 4 404 4 549 10 690 2 405 2 126 8 414 8 706 78 420 10 140 4 1101 4 
217 2 978 4 4 14 574 2 923 2 925 2 430 6 929 2 726 2 157 2 77 14 735 2 306 6 86 2 990 2 811 2 519 26 522 2 943 2 526 2 528 4 26 2 319 2 1070 2 878 2 396 2 535 10 604 4 187 4 102 2 539 2 827 2 679 2 35 4 765 2 894 8 404 4 193 14 549 6 1015 6 405 2 1020 12 46 40 773 2 52 2 1026 2 416 2 563 2 706 28 351 2 420 6 632 2 974 2 487 2 635 2 1101 4 912 12 785 4 636 2 
286 4 147 4 718 2 978 6 4 88 721 24 574 2 291 6 430 16 726 10 156 42 157 8 737 4 735 2 865 24 985 5 306 34 165 6 989 26 990 8 312 6 172 24 26 8 177 6 319 2 878 10 30 4 29 6 604 6 881 4 187 8 1005 6 191 4 35 6 765 2 887 10 39 6 466 4 613 4 1013 6 894 124 193 28 1015 16 895 18 43 4 1020 58 338 4 46 248 773 8 50 4 476 2 52 36 628 4 1026 10 781 4 351 2 631 4 906 24 632 10 487 10 1033 4 213 6 635 4 912 58 785 6 636 18 361 6 217 2 640 6 919 6 788 10 923 14 929 4 223 6 77 112 1050 4 233 6 1057 2 514 12 382 2 86 11 654 90 810 2 519 134 811 2 522 2 659 6 389 2 815 10 526 6 943 14 528 8 1066 4 91 2 818 4 1070 2 396 4 535 22 536 12 951 84 101 24 102 4 256 24 397 2 105 4 539 4 679 16 827 2 1078 26 680 8 828 92 682 50 110 2 111 8 260 6 404 6 549 16 405 8 554 90 414 42 416 2 704 4 706 150 563 4 420 16 283 8 1101 6 
217 2 288 2 638 2 218 4 788 2 918 2 978 2 4 20 721 2 574 2 923 2 925 2 726 2 1042 2 371 2 294 2 296 2 581 2 297 6 582 2 77 20 303 2 735 2 439 4 865 2 232 2 1053 2 380 2 307 2 1061 2 870 2 990 2 811 2 519 44 522 2 173 2 815 2 315 2 526 2 943 2 528 6 26 2 246 2 878 2 600 2 601 2 97 2 604 2 881 2 184 2 256 2 539 2 106 4 679 2 678 2 35 2 680 2 887 2 330 2 115 2 894 6 404 2 193 36 549 4 1015 4 694 4 405 2 120 2 1020 6 46 48 773 2 409 2 411 2 52 2 902 2 1026 2 843 2 705 2 706 46 351 2 136 2 970 2 1097 2 420 4 632 2 487 2 974 2 1101 2 912 6 785 2 636 2 
182 2 
660 1 916 1 741 1 790 1 1067 1 575 1 
660 1 916 1 741 1 790 1 1067 1 575 1 
660 1 916 1 741 1 790 1 1067 1 575 1 
660 1 916 1 741 1 790 1 1067 1 575 1 
660 1 916 1 741 1 790 1 1067 1 575 1 
660 1 916 1 741 1 790 1 1067 1 575 1 
660 1 916 1 741 1 790 1 1067 1 575 1 
660 1 916 1 741 1 790 1 1067 1 575 1 
660 1 916 1 741 1 790 1 1067 1 575 1 
660 1 916 1 741 1 790 1 1067 1 575 1 
660 1 916 1 741 1 790 1 1067 1 575 1 
660 1 916 1 741 1 790 1 1067 1 575 1 
660 1 916 1 741 1 790 1 1067 1 575 1 
660 1 916 1 741 1 790 1 1067 1 575 1 
660 1 916 1 741 1 790 1 1067 1 575 1 
660 1 916 1 741 1 790 1 1067 1 575 1 
660 1 916 1 741 1 790 1 1067 1 575 1 
660 1 916 1 741 1 790 1 1067 1 575 1 
660 1 916 1 741 1 790 1 1067 1 575 1 
660 1 916 1 741 1 790 1 1067 1 575 1 
660 1 916 1 741 1 790 1 1067 1 575 1 
660 1 916 1 741 1 790 1 1067 1 575 1 
660 1 916 1 741 1 790 1 1067 1 575 1 
660 1 916 1 741 1 790 1 1067 1 575 1 
660 1 916 1 741 1 790 1 1067 1 575 1 
660 1 916 1 741 1 790 1 1067 1 575 1 
660 1 916 1 741 1 790 1 1067 1 575 1 
660 1 916 1 741 1 790 1 1067 1 575 1 
660 1 916 1 741 1 790 1 1067 1 575 1 
660 1 916 1 741 1 790 1 1067 1 575 1 
660 1 916 1 741 1 790 1 1067 1 575 1 
660 1 916 1 741 1 790 1 1067 1 575 1 
660 1 916 1 741 1 790 1 1067 1 575 1 
660 1 916 1 741 1 790 1 1067 1 575 1 
660 1 916 1 741 1 790 1 1067 1 575 1 
660 1 916 1 741 1 790 1 1067 1 575 1 
660 1 916 1 741 1 790 1 1067 1 575 1 
660 1 916 1 741 1 790 1 1067 1 575 1 
660 1 916 1 741 1 790 1 1067 1 575 1 
660 1 916 1 741 1 790 1 1067 1 575 1 
660 1 916 1 741 1 790 1 1067 1 575 1 
660 1 916 1 741 1 790 1 1067 1 575 1 
660 1 916 1 741 1 790 1 1067 1 575 1 
660 1 916 1 741 1 790 1 1067 1 575 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V ERROR java.lang.NullPointerException 
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V PASSED
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 721 1523 1531 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V ERROR utilMDE.Assert$AssertionException (770,1148) (770,1148) (69,253,504,669,788,879,936,1155,1297,1434) 889 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 1412 1169 148 
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_0()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_1()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_2()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_3()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_4()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_5()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_6()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_7()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_8()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_9()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_10()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_11()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_12()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_13()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_14()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_15()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_16()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_17()V PASSED
daikon.test.split.SplitterFactoryTest:testmisc_Fib_main_18()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_19()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_20()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_21()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_22()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_23()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_24()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_25()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_26()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_27()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_28()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_29()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_30()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_31()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_32()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__33()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__34()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__35()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__36()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__37()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__38()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__39()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__40()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__41()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__42()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__43()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.ValueTuple:isMissingFlow(I)Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.syntaxtree.MethodDeclarator:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ShiftExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.Positive:enabled()Z
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.inv.unary.sequence.EltNonZero:format_ioa()Ljava.lang.String;
jtb.JavaParser:jj_3R_107()Z
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_180()Z
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.VarInfoName.InorderFlattener:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptName:getFullClassName()Ljava.lang.String;
utilMDE.SimpleLog.LongVal:LongVal(J)V
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclarator;)V
jtb.JavaParser:jj_3_19()Z
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParser:jj_2_36(I)Z
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ConditionalAndExpression:accept(Ljtb.visitor.Visitor;)V
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.VarInfoName:hashCode()I
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltNonZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:is_pointer()Z
daikon.Quant:pairwiseGT([I[I)Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParser:jj_3R_148()Z
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
jtb.visitor.FormatCommand:FormatCommand(II)V
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
jtb.visitor.TreeFormatter:TreeFormatter(II)V
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReferenceType;)V
jtb.JavaParser:jj_3R_149()Z
jtb.JavaParser:jj_3_16()Z
jtb.JavaParser:jj_3R_96()Z
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.TypeBound:accept(Ljtb.visitor.Visitor;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;II)V
daikon.tools.jtb.Ast:create(Ljava.lang.String;Ljava.lang.String;)Ljtb.syntaxtree.Node;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MultiplicativeExpression;)V
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaCharStream:GetImage()Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceBody:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.MethodDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeSequence:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.TreeDumper:TreeDumper(Ljava.io.Writer;)V
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.Invariant:logOn()Z
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eq(FF)Z
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.inv.Invariant:logDetail()Z
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.tools.jtb.Ast:quickFixForInternalComment(Ljava.lang.String;)Ljava.lang.String;
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_210()Z
daikon.Quant:lexLT([I[I)Z
jtb.syntaxtree.ClassOrInterfaceDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
jtb.JavaCharStream:getEndColumn()I
jtb.syntaxtree.Expression:accept(Ljtb.visitor.Visitor;)V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.Quant:slice([III)[I
jtb.syntaxtree.NullLiteral:accept(Ljtb.visitor.Visitor;)V
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
utilMDE.Intern.SequenceAndIndices:hashCode()I
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
jtb.syntaxtree.RelationalExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:memberOf(F[D)Z
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern:internSubsequence([JII)[J
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.test.TestAst:checkMatch(Ljava.lang.String;Ljtb.syntaxtree.MethodDeclaration;Ldaikon.tools.jtb.PptNameMatcher;)V
jtb.JavaParser:jj_3R_122()Z
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfo:get_all_simple_names()Ljava.util.List;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quantify.IOAQuantification:getMembershipRestriction(I)Ljava.lang.String;
daikon.inv.Invariants:Invariants()V
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 7264 | = null
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.inv.unary.sequence.EltLowerBound:format_simplify()Ljava.lang.String;
jtb.JavaParser:jj_3R_76()Z
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
jtb.Token:newToken(I)Ljtb.Token;
daikon.Quant:eltsLTE([II)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.BlockStatement;)V
daikon.tools.jtb.Ast:getParameters(Ljtb.syntaxtree.MethodDeclaration;)Ljava.util.List;
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.tools.jtb.PptNameMatcher:typeMatch(Ljava.lang.String;Ljtb.syntaxtree.FormalParameter;)Z
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;Ljava.lang.String;)V
utilMDE.LimitedSizeIntSet:size()I
daikon.VarInfoName.InorderFlattener:nodes()Ljava.util.List;
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_102()Z
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.Quant:eq(DD)Z
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.Quantify.IOAQuantification:getClosingExp()Ljava.lang.String;
jtb.JavaParser:jj_3R_100()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.inv.unary.sequence.EltOneOf:is_boolean()Z
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_68()Z
jtb.syntaxtree.VariableDeclaratorId:VariableDeclaratorId(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Ppt:find_var_by_name(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
utilMDE.FuzzyFloat:lte(DD)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
jtb.syntaxtree.FormalParameter:FormalParameter(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Type;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.VariableDeclaratorId;)V
jtb.JavaCharStream:UpdateLineColumn(C)V
jtb.JavaCharStream:ReadByte()C
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
jtb.JavaParser:jj_3R_162()Z
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.ProglangType:isFloat()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
jtb.visitor.TreeDumper:printToken(Ljava.lang.String;)V
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceBody:getParent()Ljtb.syntaxtree.Node;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
jtb.JavaParser:jj_2_12(I)Z
jtb.syntaxtree.VariableDeclaratorId:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ConditionalOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.PptSlice0:arity()I
jtb.syntaxtree.TypeArguments:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:prob_and(DD)D
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.Intern:intern([I)[I
jtb.syntaxtree.FormalParameter:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.PptName:isEnterPoint()Z
jtb.syntaxtree.MultiplicativeExpression:accept(Ljtb.visitor.Visitor;)V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
jtb.JavaParser:jj_3R_118()Z
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PostfixExpression;)V
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quantify.IOAQuantification:getQuantifierExp()Ljava.lang.String;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.Quant:eltsEqualIndex([I)Z
jtb.syntaxtree.NodeListOptional:getParent()Ljtb.syntaxtree.Node;
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_72()Z
jtb.syntaxtree.TypeArgument:accept(Ljtb.visitor.Visitor;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameters;)V
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_58()Z
utilMDE.ArraysMDE:isSubset([D[D)Z
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
jtb.syntaxtree.BlockStatement:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfo:apply_subscript(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.PptSlice0:initInvariantsSeen()V
jtb.JavaParser:jj_3R_103()Z
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.ProglangType:dimensions()I
daikon.Quant:eltsGTE([II)Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltOneOf:sort_rep()V
utilMDE.UtilMDE:lineNumberFileReader(Ljava.lang.String;)Ljava.io.LineNumberReader;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
jtb.syntaxtree.PrimaryExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.JavaParser:jj_3_10()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InstanceOfExpression;)V
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.RelationalExpression;)V
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.tools.jtb.PptNameMatcher:PptNameMatcher(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.ModBitTracker:num_samples()I
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3_21()Z
jtb.syntaxtree.NodeListOptional:elements()Ljava.util.Enumeration;
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
daikon.Debug:logDetail()Z
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.ProglangType:baseIsIntegral()Z
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.Quant:subsetOf([J[J)Z
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
jtb.syntaxtree.NodeOptional:NodeOptional()V
jtb.JavaParser:jj_2_5(I)Z
jtb.JavaCharStream:BeginToken()C
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
jtb.JavaCharStream:FillBuff()V
daikon.Quant:isReverse([I[I)Z
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.VarInfo:simplify_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.Quant:pairwiseLTE([I[I)Z
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:sum([[D)D
jtb.JavaParser:jj_2_13(I)Z
jtb.JavaParser:jj_3R_114()Z
daikon.tools.jtb.Ast:getPackage(Ljtb.syntaxtree.CompilationUnit;)Ljava.lang.String;
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:jj_2_10(I)Z
daikon.ValueTuple:size()I
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.ValueTuple:tuplemodHasModified(I)Z
utilMDE.ArraysMDE:subarray([III)[I
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
jtb.JavaParser:jj_3R_169()Z
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.tools.jtb.Ast:removeWhitespace(Ljava.lang.String;)Ljava.lang.String;
utilMDE.UtilMDE:removeWhitespaceBefore(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.TypeParameters:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Name;)V
daikon.diff.Node:children()Ljava.util.Iterator;
jtb.JavaParser:jj_3R_99()Z
jtb.JavaParser:jj_3R_52()Z
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.Quant:memberOf(S[S)Z
jtb.syntaxtree.ClassOrInterfaceDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.Ppt:Ppt()V
daikon.VarInfoName.Simple:isLiteralConstant()Z
jtb.JavaParser:jj_3_15()Z
utilMDE.MathMDE:sign(I)I
daikon.tools.jtb.SimpleTreeDumper:SimpleTreeDumper(Ljava.io.Writer;)V
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.ProglangType:isPseudoArray()Z
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.sequence.EltOneOf:enabled()Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
jtb.JavaParser:jj_2_35(I)Z
daikon.Quant:eltsNotEqual([II)Z
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.ProglangType:baseIsScalar()Z
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.ValueSet:ValueSet(I)V
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
utilMDE.FuzzyFloat:gt(DD)Z
daikon.ModBitTracker:ModBitTracker(I)V
utilMDE.ArraysMDE:fn_compose([I[I)[I
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:eltsLteIndex([I)Z
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.ModBitTracker:split(I)I
jtb.JavaParser:jj_3R_105()Z
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V | STATEMENT | 19526 | stmt -> ;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
utilMDE.MathMDE:negate(I)I
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
jtb.JavaParser:jj_3R_75()Z
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljtb.syntaxtree.Node;)Z
utilMDE.ArraysMDE:sum([D)D
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.inv.unary.LowerBoundCore:calc_modulus()J
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
daikon.Quant:lexEqual([I[I)Z
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.inv.unary.sequence.EltOneOf:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Expression;)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:sorted([I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameters;)V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.VarInfoName.Elements:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
jtb.syntaxtree.Type:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
jtb.JavaParser:jj_3R_85()Z
jtb.JavaParser:jj_3R_80()Z
daikon.inv.filter.ObviousFilter:ObviousFilter()V
jtb.JavaCharStream:getBeginColumn()I
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.Quant:eltsLT([II)Z
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
jtb.visitor.TreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;)Z
jtb.JavaParser:jj_3R_55()Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.NodeChoice:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_110()Z
daikon.PptName:toString()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.Quant:eltsEqual([II)Z
jtb.syntaxtree.TypeArguments:TypeArguments(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeArgument;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.OrderedPairIterator:hasNext()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameter;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.Quant:pairwiseDivides([I[I)Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
jtb.JavaParser:jj_3_29()Z
jtb.JavaParser:jj_3R_60()Z
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3_3()Z
jtb.syntaxtree.FormalParameter:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_108()Z
daikon.Quant:memberOf(J[J)Z
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.JavaParser:jj_3_25()Z
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.syntaxtree.PostfixExpression:accept(Ljtb.visitor.Visitor;)V
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_51()Z
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.diff.Node:getUserRight()Ljava.lang.Object;
jtb.JavaParser:jj_3R_48()Z
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
jtb.syntaxtree.NodeSequence:getParent()Ljtb.syntaxtree.Node;
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:mod_positive(JJ)J
jtb.syntaxtree.TypeArguments:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
daikon.inv.Invariant:getConfidence()D
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:nonmodulus_strict([I)[I
jtb.JavaParser:jj_3_14()Z
utilMDE.MathMDE:modulus([I)[I
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.PptName:getSignature()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptName:PptName(Ljava.lang.String;)V
jtb.JavaParser:jj_3_20()Z
daikon.inv.OutputFormat:toString()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AdditiveExpression;)V
daikon.tools.jtb.Ast:getClassName(Ljtb.syntaxtree.Node;)Ljava.lang.String;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltOneOf:format_daikon()Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
daikon.Quant:setDiff([I[I)[I
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.inv.unary.sequence.EltNonZero:enabled()Z
utilMDE.MathMDE:missing_numbers([I)[I
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
jtb.JavaParser:jj_2_16(I)Z
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.MathMDE:mod_positive(II)I
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.VarInfoName.Elements:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
jtb.syntaxtree.ClassOrInterfaceBody:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.ModBitTracker:num_sets()I
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.EltOneOf:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.ParentFilter:ParentFilter()V
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:memberOf(I[I)Z
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_86()Z
utilMDE.WeakHasherMap:size()I
jtb.visitor.FormatCommand:getCommand()I
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext1()V
daikon.Quant:subsetOf([D[F)Z
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.Quant:pairwiseSquare([I[I)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.Quant:concat([I[I)[I
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
utilMDE.ArraysMDE:sum([I)I
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.ValueTuple:isMissing(I)Z
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.inv.unary.sequence.EltOneOf:is_hashcode()Z
jtb.JavaParser:jj_3R_49()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Block;)V
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:lexLTE([I[I)Z
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
jtb.JavaParser:jj_3_12()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.CompilationUnit;)V
jtb.JavaParser:jj_2_17(I)Z
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:subarray_rep()Ljava.lang.String;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBody;)V
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.EltOneOf:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljava.lang.String;Ljava.lang.String;Ljava.util.List;)Z
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
jtb.visitor.TreeFormatter:placeToken(Ljtb.syntaxtree.NodeToken;II)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PackageDeclaration;)V
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
jtb.syntaxtree.PrimaryPrefix:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
jtb.syntaxtree.ConditionalExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE:pow_fast(II)I
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
jtb.visitor.TreeFormatter:processList(Ljtb.syntaxtree.NodeListInterface;)V
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalExpression;)V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
jtb.visitor.TreeFormatter:add(Ljtb.visitor.FormatCommand;)V
jtb.JavaParser:jj_3R_74()Z
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
jtb.syntaxtree.TypeParameter:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfo:get_enclosing_var()Ldaikon.VarInfo;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.NodeChoice:getParent()Ljtb.syntaxtree.Node;
daikon.VarInfo:simplify_quantify(Ljava.util.EnumSet;[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName:name()Ljava.lang.String;
jtb.JavaParser:jj_2_15(I)Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
utilMDE.MathMDE:gcd(JJ)J
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_2_21(I)Z
daikon.test.FormatTestCase:getDiffString()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.tools.jtb.Ast:getParent(Ljava.lang.Class;Ljtb.syntaxtree.Node;)Ljtb.syntaxtree.Node;
daikon.Quant:eltsGT([II)Z
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.ProglangType:isScalar()Z
utilMDE.UtilMDE:removeWhitespaceAfter(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
jtb.JavaParser:jj_3R_116()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Literal;)V
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V
utilMDE.Intern:internSubsequence([III)[I
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
daikon.Quant:eltwiseGTE([I)Z
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.syntaxtree.EqualityExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.Quant:pairwiseLT([I[I)Z
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalOrExpression;)V
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.test.FormatTestCase:passes()Z
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:isPointerFileRep()Z
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.PptTopLevel.CondIterator:hasNext()Z
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
jtb.JavaParser:jj_3R_163()Z
utilMDE.Options.OptionInfo:argument_required()Z
jtb.JavaParser:jj_2_4(I)Z
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_2_3(I)Z
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;)V
daikon.Quant:eltwiseEqual([I)Z
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltNonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
jtb.JavaCharStream:getEndLine()I
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.test.TestAst.ClassOrInterfaceDeclarationHarvester:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryExpression;)V
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.ExclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.ModBitTracker:num_vars()I
jtb.JavaParser:jj_3R_161()Z
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
jtb.JavaParser:jj_2_1(I)Z
daikon.VarInfo:dbc_name()Ljava.lang.String;
jtb.JavaParser:jj_3R_125()Z
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.Modifiers:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.Quant:lexGTE([I[I)Z
utilMDE.Assert:assertTrue(Z)V
daikon.PptSlice2:arity()I
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
jtb.visitor.TreeFormatter:TreeFormatter()V
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.inv.unary.sequence.EltNonZero:format_daikon()Ljava.lang.String;
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:sum([[I)I
daikon.PptName:isCombinedExitPoint()Z
utilMDE.Intern:intern([J)[J
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.Quantify:quantify([Ldaikon.VarInfo;)[Ldaikon.Quantify.QuantifyReturn;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_73()Z
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.inv.unary.UpperBoundCore:computeProbability()D
jtb.JavaParser:jj_3_27()Z
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_137()Z
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.Ppt:indexOf(Ljava.lang.String;)I
daikon.VarInfo:new_ppt()V
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.Type;)V
jtb.JavaParser:JavaParser(Ljava.io.Reader;)V
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
jtb.syntaxtree.Name:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.FormatCommand:getNumCommands()I
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
jtb.syntaxtree.ImportDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_scan_token(I)Z
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.Quantify.QuantifyReturn:QuantifyReturn(Ldaikon.VarInfo;)V
daikon.VarInfo:is_direct_non_slice_array()Z
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.ClassOrInterfaceBody:ClassOrInterfaceBody(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_133()Z
jtb.JavaParser:jj_3_13()Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArguments;)V
daikon.Quant:eltsGteIndex([I)Z
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.NodeListOptional:present()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeSequence;)V
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.Quant:eltwiseNotEqual([I)Z
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
jtb.JavaParser:jj_3R_134()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReturnStatement;)V
jtb.JavaParser:jj_3R_136()Z
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.tools.jtb.PptNameMatcher:getUngenerifiedType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.inv.unary.sequence.EltOneOf:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
jtb.JavaParser:jj_2_14(I)Z
jtb.JavaParser:jj_ntk()I
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
jtb.syntaxtree.CompilationUnit:getParent()Ljtb.syntaxtree.Node;
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.FormalParameter;)V
jtb.JavaParser:jj_3R_67()Z
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
jtb.JavaParser:jj_3_30()Z
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:max([I)I
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.VarInfoName:ioa_name()Ljava.lang.String;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
jtb.syntaxtree.NodeOptional:accept(Ljtb.visitor.Visitor;)V
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaCharStream:readChar()C
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_53()Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_81()Z
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
utilMDE.Intern:numIntArrays()I
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
jtb.syntaxtree.NodeToken:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.Literal:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.tools.jtb.SimpleTreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor.1:visit(Ljtb.syntaxtree.TypeParameter;)V
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eltwiseGT([I)Z
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.Quant:memberOf(D[F)Z
jtb.syntaxtree.NodeSequence:elements()Ljava.util.Enumeration;
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
utilMDE.Intern:intern([D)[D
jtb.JavaParser:jj_3R_98()Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
daikon.Quantify.FreeVar:name()Ljava.lang.String;
jtb.JavaParser:jj_3R_120()Z
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_22()Z
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.Quant:subsetOf([B[I)Z
daikon.inv.Invariant:prob_and(DDD)D
daikon.VarInfo:name()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.Quant:pairwiseNotEqual([I[I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.VarInfoName.InorderFlattener:InorderFlattener(Ldaikon.VarInfoName;)V
daikon.inv.unary.LowerBoundCore:computeProbability()D
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName:isLiteralConstant()Z
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
utilMDE.WeakHasherMap.EntrySet:size()I
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;)V
jtb.JavaParser:jj_3R_77()Z
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_135()Z
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3_1()Z
utilMDE.UtilMDE:split(Ljava.lang.String;Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.Quant:memberOf(F[F)Z
jtb.JavaParser:jj_3R_87()Z
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
utilMDE.FuzzyFloat:gte(DD)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Modifiers;)V
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
jtb.JavaParser:jj_3_35()Z
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.Quant:eltwiseLTE([I)Z
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_104()Z
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.inv.Invariant:prob_or(DD)D
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
utilMDE.UtilMDE:lineNumberFileReader(Ljava.io.File;)Ljava.io.LineNumberReader;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.MathMDE:gcd([I)I
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceType:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.VarInfo:domainTypeIOA()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_115()Z
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
daikon.inv.unary.sequence.EltOneOf:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Type;)V
daikon.diff.Node:Node()V
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.inv.unary.scalar.Modulus:enabled()Z
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.inv.unary.scalar.NonZero:is_pointer()Z
jtb.syntaxtree.NodeSequence:elementAt(I)Ljtb.syntaxtree.Node;
daikon.Quant:intersection([I[I)[I
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.Quant:lt(II)Z
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.diff.InvMap:InvMap()V
jtb.JavaParser:jj_3_17()Z
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.JavaParser:jj_3R_117()Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:copy(Ljava.util.HashMap;)Ljava.util.HashMap;
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:pow(II)I
jtb.JavaParser:jj_3_28()Z
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.UtilMDE:splitLines(Ljava.lang.String;)[Ljava.lang.String;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
utilMDE.ArraysMDE:subarray([JII)[J
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaCharStream:backup(I)V
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
jtb.syntaxtree.NodeList:NodeList()V
jtb.syntaxtree.InstanceOfExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.Quant:sameLength([I[I)Z
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.visitor.TreeFormatter:space(I)Ljtb.visitor.FormatCommand;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:subsetOf([I[I)Z
jtb.JavaParser:jj_3R_69()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeDeclaration;)V
utilMDE.ArraysMDE:indexOf([II)I
utilMDE.ArraysMDE:fn_identity(I)[I
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
jtb.syntaxtree.FormalParameters:accept(Ljtb.visitor.Visitor;)V
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
jtb.JavaParser:jj_3R_126()Z
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.Quant:eltwiseLT([I)Z
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
jtb.JavaParser:VariableDeclaratorId()Ljtb.syntaxtree.VariableDeclaratorId;
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
daikon.VarInfoName.Elements:ioa_name_impl()Ljava.lang.String;
daikon.tools.jtb.Ast.1GetParametersVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
jtb.JavaParser:jj_3R_121()Z
daikon.tools.jtb.Ast:getType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
jtb.syntaxtree.VariableDeclaratorId:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.MethodDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeBound;)V
daikon.VarInfoName.Add:amount()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
jtb.JavaParser:getToken(I)Ljtb.Token;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.Debug:logOn()Z
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
utilMDE.LimitedSizeIntSet:add(I)V
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:eq(DD)Z
utilMDE.ArraysMDE:fn_inverse([II)[I
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.Quant:union([I[I)[I
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
jtb.syntaxtree.TypeDeclaration:TypeDeclaration(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3R_63()Z
daikon.VarInfo:isPrestate()Z
jtb.syntaxtree.NodeListOptional:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.EltOneOf:EltOneOf(Ldaikon.PptSlice;)V
daikon.Quant:subsetOf([S[S)Z
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_89()Z
jtb.JavaParser:jj_3R_97()Z
daikon.Quantify.Term:ioa_name()Ljava.lang.String;
daikon.PptName:getMethodName()Ljava.lang.String;
jtb.JavaParser:jj_3R_123()Z
daikon.simplify.LemmaStack:noticeInt(J)V
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.OrderedPairIterator:setnext2()V
daikon.Quant:pairwiseEqual([I[I)Z
daikon.inv.Invariant:justified()Z
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.Quant:setEqual([I[I)Z
utilMDE.FuzzyFloat:ne(DD)Z
daikon.tools.jtb.PptNameMatcher:extractPptArgs(Ldaikon.PptName;)Ljava.util.List;
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
jtb.syntaxtree.UnaryExpressionNotPlusMinus:accept(Ljtb.visitor.Visitor;)V
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
utilMDE.WeakHasherMap:processQueue()V
daikon.Quant:subsetOf([D[D)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ExclusiveOrExpression;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ReferenceType;)V
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.Quant:subsetOf([F[F)Z
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:ungenerify(Ljtb.syntaxtree.ClassOrInterfaceType;)V
jtb.syntaxtree.Statement:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
jtb.visitor.TreeFormatter:processList(Ljtb.syntaxtree.NodeListInterface;Ljtb.visitor.FormatCommand;)V
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.inv.unary.sequence.EltNonZero:format_esc()Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryPrefix;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltNonZero:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.AndExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Elements:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.tools.jtb.Ast:getName(Ljtb.syntaxtree.MethodDeclaration;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_109()Z
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
utilMDE.Intern:internStrings([Ljava.lang.String;)V | CONDITION | 534 | if (x) -> if (!x)
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ShiftExpression;)V
daikon.tools.jtb.Ast:create(Ljava.lang.String;[Ljava.lang.Class;[Ljava.lang.Object;Ljava.lang.String;)Ljtb.syntaxtree.Node;
jtb.syntaxtree.ClassOrInterfaceDeclaration:ClassOrInterfaceDeclaration(Ljtb.syntaxtree.NodeChoice;Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ClassOrInterfaceBody;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_54()Z
daikon.Quant:eltsLtIndex([I)Z
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eltsGtIndex([I)Z
daikon.ProglangType:isArray()Z
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
jtb.syntaxtree.ReturnStatement:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltNonZero:EltNonZero(Ldaikon.PptSlice;)V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
utilMDE.ArraysMDE:concat([I[I)[I
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalAndExpression;)V
jtb.syntaxtree.TypeDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ResultType:accept(Ljtb.visitor.Visitor;)V
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.UpperBound:enabled()Z
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus; | CONDITION | 18510 | if (x) -> if (!x)
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:relate_var()V
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ImportDeclaration;)V
daikon.Quantify.IOAQuantification:getFreeVar(I)Ldaikon.Quantify.Term;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
jtb.syntaxtree.AdditiveExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.Quant:gte(II)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Statement;)V
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
utilMDE.TestUtilMDE:lsis_test(I)V
jtb.JavaParser:jj_3R_57()Z
jtb.syntaxtree.InclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:lexGT([I[I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ResultType;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.Quant:noDups([I)Z
jtb.JavaParser:jj_3_4()Z
daikon.Quant:ne(II)Z
daikon.test.FormatTestCase.SingleOutputTestCase:getDiffString()Ljava.lang.String;
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
jtb.syntaxtree.TypeDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.tools.jtb.Ast:print(Ljtb.syntaxtree.Node;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.VarInfoName.InorderFlattener:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
jtb.syntaxtree.CompilationUnit:CompilationUnit(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.ArraysMDE:min([I)I
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.ReferenceType:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:format_esc()Ljava.lang.String; | RETURN | 12847 | return null
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
jtb.JavaParser:jj_3R_47()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.LowerBoundCore:computeConfidence()D
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.VarInfo:isPointer()Z
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.Quant:eq(JJ)Z
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.syntaxtree.TypeDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.JavaParser:jj_3R_119()Z
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.tools.jtb.Ast:typeMatch(Ljava.lang.String;Ljava.lang.String;)Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
utilMDE.ArraysMDE:indexOf([ZZ)I
jtb.JavaParser:jj_3R_62()Z
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
jtb.JavaParser:jj_3R_101()Z
jtb.syntaxtree.Block:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.LowerBound:enabled()Z
jtb.syntaxtree.NodeToken:numSpecials()I
daikon.inv.unary.UpperBoundCore:calc_range()J
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.ProglangType:baseIsFloat()Z
jtb.JavaParser:jj_3_5()Z
utilMDE.FuzzyFloat:lt(DD)Z
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.JavaParser:FormalParameter()Ljtb.syntaxtree.FormalParameter;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
utilMDE.MathMDE:gcd_differences([I)I
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.tools.jtb.SimpleTreeDumper:printToken(Ljava.lang.String;)V
daikon.inv.unary.sequence.EltNonZero:format_simplify()Ljava.lang.String;
jtb.JavaParser:jj_3R_50()Z
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:noDuplicates([I)Z
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.EqualityExpression;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpression;)V
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;)V
jtb.visitor.TreeFormatter:space()Ljtb.visitor.FormatCommand;
jtb.JavaParser:jj_3_18()Z
jtb.syntaxtree.CompilationUnit:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InclusiveOrExpression;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AndExpression;)V
jtb.JavaParser:jj_3R_106()Z
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
utilMDE.ArraysMDE:element_range([I)I
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParser:jj_3R_61()Z
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
jtb.JavaParser:jj_3_36()Z
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.Quant:eq(II)Z
daikon.VarInfo:apply_subscript(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:subsetOf([F[D)Z
jtb.syntaxtree.UnaryExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.inv.unary.sequence.EltOneOf:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NullLiteral;)V
daikon.Quantify.IOAQuantification:getFreeVarName(I)Ljava.lang.String;
daikon.ProglangType:isIntegral()Z
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.PptSlice1:num_samples()I
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.EltNonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameter;)V
daikon.Quantify.IOAQuantification:IOAQuantification([Ldaikon.VarInfo;)V
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
jtb.syntaxtree.TypeArgument:setParent(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:base()Ljava.lang.String;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.Quant:lte(II)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.inv.Invariant:isWorthPrinting()Z
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
jtb.JavaParser:jj_3R_88()Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.tools.jtb.Ast:format(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_70()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
jtb.JavaParser:jj_3R_124()Z
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.diff.RootNode:RootNode()V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.UtilMDE:removeWhitespaceAround(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.VarInfo:isDerived()Z
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
jtb.JavaParser:jj_2_18(I)Z
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameters;)V
utilMDE.MathMDE:gcd(II)I
jtb.syntaxtree.NodeOptional:present()Z
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.Quantify.IOAQuantification:getVarIndexedString(I)Ljava.lang.String;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.JavaParser:jj_3R_164()Z
daikon.Quant:gt(II)Z
daikon.PptTopLevel:name()Ljava.lang.String;
jtb.JavaParser:jj_2_25(I)Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.PackageDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.VarInfo:esc_name()Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_56()Z
daikon.test.TestAst.MethodDeclarationHarvester:visit(Ljtb.syntaxtree.MethodDeclaration;)V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
utilMDE.ArraysMDE:min_max([I)[I
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;Z)Z
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArgument;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice1:arity()I
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.Quant:lexNotEqual([I[I)Z
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
jtb.JavaCharStream:getBeginLine()I
daikon.test.InvariantFormatTester:execute()Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfo:isIOAArray()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
189 4 1233 2 1164 2 1241 2 1305 2 1340 2 770 2 1148 2 1388 2 
120 2 1133 2 417 2 1213 2 614 6 479 2 1389 6 1266 2 1172 2 1195 6 1477 2 
474 2 770 2 1148 2 404 2 945 2 1346 4 594 4 744 6 1515 6 1286 2 497 6 1065 2 65 6 
0 8 1012 16 1162 10 1264 4 770 6 1168 2 1148 6 312 2 595 10 921 2 1173 2 1357 12 1358 4 341 4 253 6 1177 10 1104 29 1222 4 221 16 709 2 125 8 45 16 145 2 1206 10 788 6 1447 10 1064 2 1256 8 865 26 1532 8 
198 4 223 6 
645 2 
1326 2 965 2 1162 2 1012 2 266 2 611 2 595 4 1074 2 1357 2 1358 2 253 2 1177 2 906 2 1104 6 810 2 221 2 45 2 1206 2 1447 2 1256 2 1034 2 865 4 1479 2 
1012 8 1259 6 1162 4 1155 4 669 4 221 8 97 6 1486 2 1264 2 45 8 1206 4 1357 5 1447 4 466 2 865 12 1177 4 1104 15 
900 4 569 2 1098 2 847 2 671 2 459 4 1123 2 368 2 966 2 1147 2 1100 2 549 4 1338 4 510 6 511 62 1381 4 1517 4 1362 2 218 4 1407 4 624 2 578 14 1492 10 40 4 1004 2 1252 2 1344 4 403 2 980 2 1059 2 407 4 1301 4 542 2 842 2 82 8 1160 2 544 2 1394 4 1210 2 48 10 
731 2 667 2 400 2 349 2 645 2 735 2 618 2 17 2 1091 2 1055 2 
1280 2 1096 4 1097 2 149 2 1328 2 419 2 1148 4 508 2 1336 2 1294 2 277 2 6 2 1494 2 660 2 1298 2 1387 2 1388 2 46 2 715 2 1392 2 82 2 526 2 332 2 436 2 770 4 1167 4 292 2 881 2 1173 2 392 2 1517 4 1362 2 1407 2 1522 2 301 4 783 2 1411 2 626 2 1273 2 786 2 495 2 1089 2 1529 2 456 2 
1162 16 1012 32 1259 6 504 4 669 4 69 4 548 2 770 4 1168 2 1148 4 156 4 313 2 831 6 879 2 595 6 1357 22 1358 2 1434 8 253 4 1177 16 928 2 1104 54 196 6 22 6 1155 4 221 32 1297 4 97 6 45 32 1253 6 1206 16 1447 16 788 4 1256 18 240 2 865 48 936 4 722 2 1532 6 
510 2 82 2 1210 2 
161 2 1280 2 733 2 1260 2 220 2 1377 2 1166 22 390 2 1443 2 982 2 774 2 633 2 1175 2 1200 10 
742 2 1329 2 365 6 153 3 1235 1 1148 34 1428 16 463 2 1240 3 1050 2 1241 2 1242 2 1053 2 158 4 468 2 952 12 553 2 654 2 747 3 1151 2 1245 2 1154 2 282 2 284 2 171 2 174 2 287 1 1258 16 1066 2 1161 2 384 16 386 2 1163 2 871 2 387 1 1453 2 85 2 1455 8 184 8 1262 1 1457 2 770 32 771 2 389 3 1070 3 1459 1 878 2 187 1 773 2 391 2 883 2 295 2 1075 1 576 6 884 2 885 2 677 2 395 2 487 2 1470 2 1082 24 1473 4 401 2 201 3 406 2 1276 2 892 2 496 2 105 24 790 2 691 12 793 2 1480 2 1093 2 1092 2 989 1 207 3 897 2 412 1 899 3 413 2 695 2 109 4 1283 2 310 4 506 3 797 2 1487 2 311 32 1101 6 34 3 798 5 903 2 1488 2 997 2 598 2 702 2 801 8 1380 1 999 2 1289 32 806 2 1292 1 38 4 809 2 710 2 1110 3 515 2 1202 6 1005 2 432 16 47 2 518 2 131 1 1393 2 243 2 1506 4 1121 2 609 2 1398 2 49 2 249 2 919 2 1510 1 1016 2 833 1 619 2 252 4 924 2 532 4 1311 2 57 2 344 2 443 2 60 3 345 2 1413 2 1527 2 1030 2 1137 2 1139 2 843 2 1225 1 66 2 1143 2 1041 1 1423 1 1043 2 546 2 
998 2 
1320 2 1148 2 
251 2 951 2 1148 4 
1144 2 1145 14 367 14 1148 10 369 8 370 2 3 8 4 6 748 198 1152 4 1156 2 751 2 373 2 755 6 8 2 376 2 758 6 760 4 11 2 380 6 12 2 383 2 763 4 765 2 767 10 770 10 772 2 16 2 1171 2 776 2 777 10 393 2 18 10 19 8 20 2 781 4 398 2 1179 2 1180 2 1181 2 402 112 405 2 24 2 408 2 25 2 26 88 1183 328 791 46 27 2 1187 2 28 2 411 2 1188 26 29 2 1190 2 1191 30 414 2 795 2 30 6 415 2 418 2 1193 2 33 4 800 2 422 2 802 2 1201 2 39 2 430 6 812 4 813 26 1204 6 431 4 814 2 815 12 816 4 433 2 818 4 1208 6 434 2 819 566 1211 2 826 4 825 2 437 8 827 60 53 28 1214 4 55 6 1218 2 1219 2 834 26 1220 18 1221 6 59 2 442 2 836 2 446 28 837 336 448 4 449 2 61 4 451 198 62 2 839 12 838 244 453 12 455 2 1227 8 844 4 68 2 845 6 70 4 846 2 1234 6 461 48 848 4 462 2 1237 6 74 50 850 2 851 2 465 4 75 14 76 4 1243 2 856 2 1244 2 1246 2 1250 26 1249 6 1251 2 861 46 77 26 471 192 862 68 1254 4 78 2 79 14 80 26 81 26 866 4 472 2 869 60 473 2 84 6 1261 6 873 4 478 12 874 2 86 106 876 2 87 2 1267 6 880 2 89 6 882 4 90 244 480 16 1268 4 1269 6 481 2 91 20 888 204 488 2 1272 198 489 2 491 2 492 2 1275 10 493 204 494 2 498 2 893 432 500 2 106 2 107 8 896 4 503 2 110 2 505 2 112 4 902 8 904 2 1287 4 1291 6 119 6 118 198 512 2 122 6 513 28 126 6 127 2 516 4 128 6 910 386 517 290 129 132 1300 6 1302 2 911 6 519 2 521 6 1303 16 524 4 913 30 914 2 136 16 915 6 528 4 1306 4 1307 6 529 2 531 2 1309 6 143 8 534 4 535 2 537 26 1313 2 930 4 539 2 932 244 541 2 543 60 1317 2 934 182 1319 2 1321 6 937 14 545 46 1322 82 940 2 941 2 1327 2 150 2 1331 4 943 30 1332 54 151 30 1333 2 1337 4 946 2 947 2 551 2 553 2 163 30 165 198 556 6 554 2 557 4 558 2 167 6 1347 2 168 2 170 132 957 12 563 4 960 2 564 2 962 4 1352 4 963 160 567 64 1353 30 181 2 183 2 967 6 1355 2 571 4 573 4 191 2 575 70 192 2 1360 2 968 2 969 2 1361 2 970 4 194 2 972 2 1363 2 195 2 974 4 975 10 1364 12 978 4 1365 2 1366 6 585 2 983 10 586 6 1368 98 1370 8 984 2 985 2 205 2 986 2 987 2 206 52 1376 2 213 26 993 24 214 6 994 2 1379 6 215 2 995 2 1000 6 599 66 219 2 1383 30 604 2 222 198 224 6 225 376 226 432 1385 4 1390 6 229 4 1006 2 1391 6 234 28 235 48 238 2 1010 86 1011 18 1397 2 610 2 1399 6 246 20 247 22 612 4 1400 4 248 6 1401 2 250 12 1402 4 1017 2 1404 6 1403 6 1405 2 1020 2 1409 4 254 22 1022 6 1414 2 1024 6 1415 2 1026 24 1416 2 258 6 1028 2 1029 92 631 2 260 30 1421 6 1033 112 1036 8 261 20 262 6 635 4 264 4 636 6 640 2 641 2 642 32 1426 6 1425 2 1046 2 269 4 644 2 643 4 1049 192 271 84 648 6 650 4 272 2 273 26 1052 4 1051 30 651 2 274 4 656 60 276 4 659 2 278 2 279 4 280 6 283 2 661 2 1444 4 1060 2 1062 8 664 20 1449 12 665 4 666 112 668 6 1067 228 1068 2 670 6 1069 2 291 6 673 8 1458 2 674 20 1072 20 1461 8 293 12 1073 6 294 6 1463 2 296 94 676 2 297 6 678 6 1465 28 300 2 1467 2 1468 6 680 4 1081 4 681 2 1471 8 1086 74 1087 328 685 22 688 4 692 12 1095 4 305 2 306 140 696 2 307 2 1485 2 699 4 1102 8 315 20 1489 2 1490 4 1491 14 703 8 705 4 706 30 320 22 321 106 322 2 707 6 323 198 1493 224 1107 2 1108 12 325 2 1109 64 713 2 326 112 1111 182 714 6 1501 2 719 6 720 118 1117 2 1504 2 1119 2 333 46 334 2 335 4 1507 4 1122 46 723 4 724 2 1124 6 337 8 336 2 1513 4 339 2 1514 2 1127 4 1128 30 1129 2 342 18 1518 2 343 2 1521 26 1132 4 347 16 346 8 348 20 734 4 352 14 1135 6 355 12 357 2 358 4 736 2 1530 198 361 2 739 2 
1138 1 1076 2 956 2 1417 2 
745 2 1417 2 
375 2 82 2 341 2 1037 2 854 2 1417 2 605 2 
1199 2 1417 2 605 2 
1417 2 1085 2 605 2 
327 2 1076 2 1314 2 
1417 2 605 2 
477 2 1314 2 
377 2 1417 2 
1196 2 1076 2 1314 2 
716 2 1076 2 1293 2 
1502 2 1076 2 330 2 
1452 2 1076 2 51 2 
1076 2 1278 2 1042 2 
741 2 1314 2 
841 2 1417 2 
1112 2 1293 2 
991 2 1502 2 
1452 2 922 2 
712 2 1042 2 
1314 2 268 2 
835 2 1042 2 
1452 2 1257 2 
1502 2 394 2 
1255 2 1293 2 
1196 2 1076 2 423 2 1314 2 
1196 2 1076 2 423 2 1314 2 1528 2 
1076 2 482 2 1314 2 
1076 2 621 2 1314 2 
428 2 805 2 134 2 693 2 
977 2 752 2 200 4 1166 6 615 2 931 2 1420 2 102 2 1217 2 1207 2 132 2 360 2 499 2 1350 2 950 2 1185 2 728 2 318 4 
1076 2 807 2 
375 2 82 2 623 2 1265 2 
375 2 1176 2 82 2 854 2 623 2 1265 2 
375 2 82 2 341 2 1417 2 605 2 565 2 
1387 2 1312 2 
375 2 121 2 82 2 341 2 
700 2 1452 2 
286 2 1042 2 
457 2 1293 2 
1502 2 166 2 
1502 2 111 2 1042 2 
1502 2 639 2 1042 2 
1502 2 1308 2 1042 2 
1502 2 769 2 1042 2 
1484 6 877 2 441 2 44 2 375 2 864 6 1318 2 82 2 
1314 2 1142 2 
1398 2 
1329 2 365 6 1148 26 1428 6 463 2 1241 2 1435 2 158 4 952 8 553 2 1151 2 1154 2 282 2 284 2 10 2 386 2 1457 2 770 26 391 2 883 2 295 2 576 2 483 2 884 4 1080 2 979 2 401 2 98 2 101 2 202 2 690 2 790 2 691 8 412 2 209 2 1483 2 413 2 109 2 1283 2 310 4 797 2 1487 2 311 6 420 2 1101 2 35 4 597 4 997 2 702 6 1380 2 801 2 1289 4 38 4 809 2 1202 4 1005 2 47 2 1007 2 518 2 237 2 1506 2 1121 2 249 2 919 2 1016 2 833 4 252 4 532 2 57 2 344 2 1413 2 1526 2 1527 2 1035 2 546 2 1043 2 
1329 2 365 6 1148 26 1428 6 463 2 1241 2 158 4 952 8 553 2 1151 2 1154 2 282 2 284 2 10 2 386 2 1457 2 770 26 1462 2 391 2 883 2 295 2 576 2 483 2 884 4 979 2 401 2 98 2 101 2 690 2 790 2 691 8 412 2 209 2 1483 2 413 2 109 2 1283 2 310 4 797 2 1487 2 311 6 420 2 1101 2 35 4 597 4 997 2 702 6 1380 2 801 2 1289 4 704 2 38 4 809 2 1202 6 1005 2 47 2 1007 2 518 2 237 2 1116 2 243 2 1506 2 1121 2 249 2 919 2 1016 2 833 2 252 4 532 2 1311 2 57 2 344 2 345 2 1413 2 1526 2 1527 2 1035 2 546 2 1043 2 
1153 2 
63 2 738 2 
363 2 365 4 417 2 1045 2 507 2 1148 12 647 2 1195 6 1103 2 158 2 553 2 907 2 749 4 1203 8 228 4 1389 6 518 2 1503 10 1115 2 820 2 821 2 527 2 244 2 1395 4 672 2 1454 2 185 2 249 2 875 2 52 2 770 6 614 6 479 4 391 2 1172 4 1310 2 295 2 252 2 193 2 298 2 533 2 579 2 93 2 1413 2 1469 4 1027 4 256 2 257 2 23 2 356 4 1316 2 890 2 1477 2 787 2 203 2 410 8 1094 2 1039 2 988 2 546 2 
363 2 365 4 417 2 1045 2 507 2 1148 12 647 2 1195 8 316 2 1103 2 158 2 553 2 907 2 749 4 1203 8 228 4 1389 8 518 2 1503 10 1115 2 820 2 821 2 527 2 244 2 1395 4 672 2 1454 2 249 2 185 2 875 2 52 2 770 6 614 6 479 4 1266 2 391 2 1310 2 1172 4 574 2 295 2 252 2 193 2 298 2 533 2 579 2 93 2 732 4 1413 2 1469 4 1027 4 256 2 23 2 356 4 1316 2 890 2 1477 2 203 2 410 8 1094 2 1039 2 988 2 546 2 
244 2 363 2 1469 4 1454 2 1027 4 1045 2 185 2 507 2 614 2 647 2 479 2 356 2 1310 2 1172 2 1195 2 1103 2 821 2 907 2 
363 2 365 4 417 2 1045 2 507 2 1148 12 647 2 1195 6 1103 2 158 2 553 2 907 2 749 4 1203 4 228 4 1389 6 518 2 1503 6 1115 2 820 2 821 2 527 2 244 2 1395 4 672 2 1454 2 185 2 249 2 875 2 52 2 770 6 614 4 479 4 1266 2 391 2 1172 4 1310 2 295 2 252 2 193 2 298 2 533 2 579 2 93 2 1413 2 1469 4 1027 4 256 2 257 2 23 2 356 4 1316 2 890 2 787 2 203 2 410 4 1094 2 1039 2 988 2 546 2 
363 2 365 4 417 2 1045 2 507 2 1148 12 647 2 1195 4 1103 2 158 2 553 2 907 2 749 4 120 2 1203 4 228 4 1389 6 518 2 1503 6 1115 2 820 2 821 2 527 2 244 2 1395 4 672 2 1454 2 185 2 249 2 875 2 52 2 770 6 614 6 479 4 391 2 1172 4 1310 2 295 2 252 2 193 2 298 2 533 2 579 2 93 2 1413 2 1469 4 1027 4 256 2 257 2 23 2 356 4 1316 2 890 2 787 2 203 2 410 4 1094 2 1039 2 988 2 546 2 
363 2 365 4 417 2 1045 2 507 2 1148 12 647 2 1195 6 1103 2 158 2 553 2 907 2 749 4 1203 8 228 4 1389 6 518 2 1503 6 1115 2 820 2 821 2 527 2 244 2 1395 4 672 2 1454 2 185 2 249 2 875 2 52 2 770 6 614 6 479 4 391 2 1172 4 1310 2 295 2 252 2 193 2 298 2 533 2 579 2 93 2 1413 2 1469 4 1027 4 256 2 257 2 23 2 356 4 1316 2 890 2 1477 2 787 2 203 2 410 4 1094 2 1039 2 988 2 546 2 
363 2 365 4 417 2 1045 2 507 2 1148 12 647 2 1195 6 1103 2 158 2 553 2 907 2 749 4 120 2 1203 8 228 4 1389 8 518 2 1503 10 1115 2 820 2 821 2 527 2 244 2 1395 4 672 2 1454 2 185 2 249 2 875 2 52 2 770 6 614 8 479 4 391 2 1172 4 1310 2 295 2 252 2 193 2 298 2 533 2 579 2 93 2 1413 2 1469 4 1027 4 256 2 257 2 23 2 356 4 1316 2 890 2 1477 2 787 2 203 2 410 8 1094 2 1039 2 988 2 546 2 
363 2 365 4 417 2 1045 2 507 2 1148 12 647 2 1195 6 1103 2 158 2 553 2 907 2 749 4 1203 8 228 4 1389 6 518 2 1503 10 1115 2 820 2 821 2 527 2 244 2 1395 4 672 2 1454 2 185 2 249 2 875 2 52 2 770 6 614 6 479 4 391 2 1172 4 1310 2 295 2 252 2 193 2 298 2 533 2 579 2 93 2 1413 2 1469 4 1027 4 256 2 257 2 23 2 356 4 1316 2 890 2 1477 2 787 2 203 2 410 8 1094 2 1039 2 988 2 546 2 
363 2 547 1 365 6 1148 46 158 4 1339 2 952 4 553 2 1150 2 749 6 1151 2 750 1 1154 12 1343 6 754 2 955 7 756 2 757 2 172 2 959 6 13 6 386 2 766 2 185 2 770 24 391 2 1172 4 576 2 193 2 780 2 577 4 579 2 582 6 401 2 23 2 1367 2 587 6 203 2 1371 1 988 2 209 2 413 2 1373 2 211 1 417 4 797 2 1378 2 421 6 35 4 1195 4 998 6 1197 4 801 2 38 4 809 2 603 1 1005 2 1202 6 1203 2 228 4 1389 12 47 2 241 2 820 2 821 2 243 2 244 2 1395 8 249 2 52 2 614 8 1216 6 251 6 252 4 57 2 627 2 1413 2 1027 4 450 1 256 2 257 2 1224 2 1226 6 1039 2 1231 2 1045 2 1428 6 647 2 1431 6 1432 6 1241 2 1436 2 1437 2 855 2 284 2 672 2 1454 2 1456 2 1457 2 875 4 479 4 295 2 883 2 1270 2 1077 7 483 2 484 2 298 2 93 2 1469 4 95 10 1474 2 1084 2 684 2 98 2 1088 2 890 2 104 2 691 4 1094 2 501 2 109 2 1283 2 308 2 310 4 507 2 311 8 1101 2 702 6 1103 2 1289 2 907 2 120 4 518 2 1115 2 1503 2 525 2 135 2 1505 2 527 4 137 8 1506 2 917 1 140 1 1120 6 1512 2 1310 2 532 2 533 2 344 2 345 2 1526 4 1527 2 540 6 1316 2 356 4 146 1 1320 6 546 2 1325 6 
1231 2 363 2 365 6 1045 2 1428 6 1148 48 647 2 1431 6 1432 6 1241 2 1436 2 158 4 1339 2 952 8 553 2 1437 2 1150 2 855 2 1151 2 749 6 1154 12 1343 6 754 2 284 2 756 2 757 2 1448 2 172 2 959 6 13 6 386 2 766 2 672 2 1454 2 1456 2 185 2 875 4 1457 2 770 26 479 4 391 2 1172 4 883 2 295 2 1270 2 576 2 884 2 483 2 193 2 484 2 780 2 298 2 577 4 579 2 93 2 582 6 95 10 1469 4 1474 2 401 2 684 2 1084 2 98 2 23 2 1367 2 1088 2 890 2 1477 4 587 6 104 2 203 2 691 8 501 2 1094 2 988 2 209 2 413 2 1373 2 1283 2 109 4 308 2 310 4 417 4 797 2 1378 2 311 8 507 2 421 6 1101 2 35 4 998 6 1195 8 1197 4 702 6 801 2 1103 2 1289 2 907 2 38 4 809 2 228 4 1203 6 1202 6 1005 2 1389 12 47 2 518 2 1503 2 1115 2 820 2 525 2 241 2 135 2 821 2 137 8 527 4 1505 2 243 2 1506 4 244 2 1395 8 1120 6 249 2 52 2 614 8 1512 2 1216 6 251 6 1310 2 252 4 532 4 57 2 533 2 344 2 627 2 345 2 1413 2 1526 4 1027 4 538 2 1527 2 257 2 256 2 1224 2 540 6 356 4 1316 2 1320 6 1226 6 1039 2 1325 6 546 2 
1231 2 363 2 365 6 1045 2 1428 6 1148 48 647 2 1431 6 1432 6 1241 2 1436 2 158 4 1339 2 952 8 553 2 1437 2 1150 2 855 2 749 6 1151 2 1154 12 1343 6 754 2 284 2 756 2 757 2 1448 2 172 2 959 6 13 6 386 2 766 2 672 2 1454 2 1456 2 185 2 875 4 1457 2 770 26 479 4 391 2 1172 4 883 2 295 2 1270 2 576 2 884 2 483 2 193 2 484 2 780 2 298 2 577 4 579 2 93 2 582 6 95 10 1469 4 1474 2 401 2 684 2 1084 2 98 2 23 2 1367 2 1088 2 890 2 1477 4 587 6 104 2 203 2 691 8 501 2 1094 2 410 4 988 2 209 2 413 2 1373 2 1283 2 109 4 308 2 310 4 417 4 797 2 1378 2 311 8 507 2 421 6 1101 2 35 4 998 6 1195 8 1197 4 702 6 801 2 1103 2 1289 2 907 2 38 4 809 2 228 4 1203 6 1202 6 1005 2 1389 12 47 2 518 2 1503 6 1115 2 820 2 525 2 241 2 135 2 821 2 137 8 527 4 1505 2 243 2 1506 4 244 2 1395 8 1120 6 249 2 52 2 614 8 1512 2 1216 6 251 6 1310 2 252 4 532 4 57 2 533 2 344 2 627 2 345 2 1413 2 1526 4 1027 4 538 2 1527 2 257 2 256 2 1224 2 540 6 356 4 1316 2 1320 6 1226 6 1039 2 1325 6 546 2 
363 2 365 6 944 6 1148 52 949 6 158 4 1339 2 952 10 553 2 1150 2 1151 2 749 6 1154 10 1343 6 754 2 756 2 757 2 172 2 959 6 178 6 13 12 386 2 766 2 1165 2 185 2 770 24 391 2 1172 4 576 4 193 2 780 2 577 4 579 2 582 12 401 2 23 2 1367 2 1369 6 587 6 203 2 410 4 988 2 209 4 413 2 1373 2 417 4 591 2 797 2 1378 2 421 6 35 6 799 6 1195 10 998 12 1197 4 801 4 1198 6 38 4 809 2 1005 2 1202 6 1203 6 228 4 1389 16 47 2 820 2 241 2 821 2 243 2 244 2 1395 8 249 2 52 2 614 10 1216 6 251 12 252 4 57 2 255 2 627 2 1413 2 1027 4 256 2 257 2 1224 2 1226 6 1039 2 1231 2 1045 2 1428 8 647 2 1431 6 1432 12 1241 2 1436 2 1054 2 1437 2 855 2 284 2 662 2 1448 2 672 2 1454 2 1456 2 1457 2 875 4 479 4 1266 2 295 2 883 2 1270 2 884 2 483 2 1271 2 484 2 92 6 298 2 93 2 1469 4 95 8 682 6 1084 2 684 2 98 2 1088 2 891 2 890 2 1477 4 104 2 691 10 1094 2 501 2 109 4 1283 2 308 2 310 4 507 2 311 12 1101 4 702 8 1103 2 1289 4 907 2 120 2 124 6 518 2 1115 2 1503 6 525 2 135 2 1505 2 527 4 137 8 1506 4 1120 6 1512 2 1310 2 532 4 533 2 344 2 345 2 1526 4 538 2 1527 2 540 6 1136 2 1316 2 356 4 1320 12 546 2 1325 6 
363 2 244 2 1395 2 417 2 1045 2 185 2 507 2 1148 4 614 6 479 4 1310 2 1172 4 1195 6 298 2 907 2 749 2 579 2 93 2 1469 2 1027 2 257 2 256 2 228 2 1203 6 1389 4 1316 2 890 2 1477 2 203 2 1503 4 1115 2 1039 2 1094 2 410 4 988 2 
363 2 365 6 71 2 1045 2 1148 28 1428 6 1241 2 158 4 553 2 654 2 749 2 1151 2 1154 4 284 2 1158 2 386 2 185 2 1457 2 770 24 479 4 773 2 391 2 1172 4 883 2 295 2 576 3 483 2 298 2 579 2 93 2 1469 2 95 2 401 2 1474 2 98 2 890 2 1477 2 203 2 1094 2 988 2 208 2 413 2 1283 2 310 4 417 2 507 2 311 8 1101 3 35 4 1195 6 702 6 1289 3 907 2 38 4 809 2 1496 3 228 2 515 2 1202 6 1005 2 1203 6 1389 4 47 2 518 2 1503 2 1115 2 243 2 244 2 1395 2 1398 2 249 2 614 6 920 2 1310 2 252 4 57 2 533 2 1130 2 344 2 345 2 1413 2 1526 2 1027 2 1527 2 257 2 256 2 1316 2 1039 2 546 2 
203 2 1039 2 1511 2 
203 2 1039 2 1511 2 
365 6 1045 4 1148 24 1428 2 647 2 550 2 1241 2 158 4 1339 2 952 4 853 2 553 2 749 4 1151 2 1154 4 284 2 386 2 672 2 1354 2 1454 2 185 2 875 4 1457 2 770 16 186 2 479 4 1266 4 391 2 572 2 1172 4 883 2 295 2 1270 2 483 2 193 2 577 2 95 2 1469 2 401 2 197 4 1083 2 684 2 98 2 23 2 1477 4 203 4 690 4 691 4 895 2 410 4 1094 2 304 2 413 2 109 4 1283 2 310 4 1284 2 212 4 417 4 797 4 593 2 311 2 507 2 1195 12 1197 2 702 2 1289 2 116 2 37 2 120 4 38 4 809 2 1202 6 1005 2 1203 6 228 2 1389 16 47 2 518 2 1503 6 527 2 243 2 1506 4 1395 4 1212 2 249 2 1511 2 614 12 1018 2 833 2 252 4 532 4 622 2 1408 2 344 2 345 2 1413 2 1526 6 1027 2 1527 2 256 2 540 2 356 4 737 2 1039 6 546 2 
1154 2 796 2 95 2 249 2 770 2 540 2 1148 4 1446 2 1018 2 1197 2 63 2 64 2 484 2 304 2 821 2 135 2 37 2 
365 6 152 2 1045 4 1148 24 1428 2 2 2 647 2 550 2 1241 2 158 4 1339 2 952 4 853 2 553 2 749 4 1151 2 1154 2 284 2 386 2 672 2 1354 2 1454 2 185 2 875 4 1457 2 770 16 479 4 1266 4 391 2 572 2 1172 4 883 2 295 2 1270 2 483 2 193 2 577 2 1466 2 1469 2 401 2 197 4 1083 2 684 2 98 2 23 2 1477 4 203 4 690 4 691 4 410 4 1094 2 304 2 413 2 109 4 1283 2 310 4 1284 2 212 4 417 4 797 4 593 2 311 2 507 2 1195 12 702 2 1289 4 37 2 120 4 38 4 809 2 228 2 1202 6 1005 2 1203 6 1389 16 47 2 518 2 1503 6 820 2 1209 2 527 4 243 2 1506 4 1395 4 1212 2 249 2 1511 2 614 12 617 2 1018 2 252 4 532 4 622 4 344 2 345 2 1413 2 1526 6 1027 2 1527 2 256 2 540 2 356 4 737 2 1039 6 546 2 
365 6 1045 4 1148 24 1428 2 647 2 550 2 1241 2 158 4 1339 2 952 4 853 2 553 2 749 4 1151 2 1154 4 284 2 173 2 386 2 672 2 1354 2 1454 2 185 2 875 4 1457 2 770 16 479 4 1266 4 391 2 572 2 1172 4 883 2 295 2 1270 2 483 2 193 2 577 2 782 2 971 2 95 2 1469 2 401 2 197 4 1083 2 684 2 98 2 23 2 1477 4 203 4 690 4 691 4 794 2 410 4 1094 2 304 2 413 2 109 4 1283 2 310 4 1284 2 212 4 417 4 797 4 593 2 311 2 507 2 1195 12 1197 2 702 2 1289 2 37 2 120 4 38 4 809 2 1202 6 1005 2 1203 6 228 2 1389 16 47 2 518 2 1503 6 820 2 527 4 243 2 1506 4 1395 4 1212 2 249 2 1511 2 614 12 1018 2 833 1 252 4 925 2 532 4 622 2 344 2 345 2 1413 2 1526 6 1027 2 1527 2 256 2 540 2 356 4 737 2 1039 6 546 2 
364 2 365 6 366 6 1146 9 743 2 1148 154 371 2 5 2 746 16 1151 2 1154 4 1155 4 753 9 7 2 372 4 754 2 374 2 1157 2 756 2 757 2 1159 2 10 2 9 4 378 2 761 2 382 2 762 2 384 4 386 4 1162 4 764 16 766 2 14 2 1165 2 388 2 768 4 770 120 391 2 778 8 779 8 1177 4 21 2 1178 8 784 2 785 8 401 2 788 4 1182 4 1184 3 792 4 412 2 1189 12 413 2 1192 12 31 2 416 2 797 4 420 2 35 12 801 24 424 4 36 1 808 2 38 56 427 2 429 2 809 2 42 2 43 18 45 8 1202 124 817 1 1205 2 1206 4 47 2 435 4 822 4 823 2 50 8 54 8 832 2 439 2 57 2 440 1 58 8 1223 20 447 10 452 16 454 3 840 2 67 1 1229 2 1232 2 71 2 459 2 460 8 72 2 1236 2 1238 2 1239 18 1241 4 852 2 467 8 469 16 858 2 470 2 1256 4 865 12 867 2 1258 10 83 2 870 4 476 16 1263 3 88 2 879 2 883 2 1271 2 886 20 485 2 486 2 95 2 96 2 1274 2 97 6 490 18 99 1 98 2 889 2 101 2 1277 2 103 28 898 8 1279 16 900 2 1282 2 108 2 1283 2 1285 2 113 2 1288 2 1289 25 1295 12 908 4 514 2 1299 8 909 2 518 2 912 16 520 58 522 8 523 4 525 2 138 16 139 4 1304 4 141 4 142 2 530 2 920 2 923 4 927 2 929 16 536 6 1315 2 933 4 935 8 1323 2 1324 4 938 2 546 2 942 12 1330 8 548 4 1334 1 1335 2 154 8 155 4 1338 2 948 2 157 2 158 4 952 40 552 4 553 2 1341 4 162 2 953 2 555 4 954 8 1344 2 1345 4 561 2 1348 2 562 18 169 2 1349 2 958 2 175 4 964 8 179 8 568 2 180 2 182 2 570 2 1356 3 190 2 1357 6 576 16 1359 8 976 8 979 2 584 2 981 8 1367 2 588 36 204 4 1372 2 589 2 208 2 209 46 210 4 990 9 1375 4 591 2 596 2 216 2 1380 2 600 10 217 2 218 2 1382 2 602 2 1384 2 1003 2 221 8 1386 2 1005 2 232 2 233 4 230 4 1007 2 236 3 237 2 239 8 1009 2 243 34 608 2 1396 8 1012 8 1013 4 249 2 613 25 616 18 1019 12 252 4 1410 2 1021 2 625 24 255 2 1413 2 628 2 1025 8 629 8 1418 4 1031 8 1032 2 634 4 1422 2 1035 2 1040 3 1044 2 265 4 637 2 638 2 1424 2 267 8 1427 6 1428 14 1048 4 646 2 649 2 1433 2 1436 4 1054 2 275 2 657 8 1439 2 658 2 1056 2 1442 8 281 4 1058 2 284 2 1445 4 1447 4 663 2 662 2 1061 8 285 8 288 6 1450 4 290 1 1457 12 1460 4 1071 2 295 2 299 1 679 2 683 1 1476 4 686 2 1090 2 689 4 691 43 1478 4 1481 4 1483 18 694 2 697 2 309 8 310 48 698 4 311 36 1099 2 1101 25 314 2 701 3 702 14 317 20 1104 16 319 2 1105 2 1106 8 708 4 711 2 1495 8 1497 1 1496 2 1499 4 1500 2 1113 10 718 4 721 2 329 4 1118 3 1508 18 1509 12 725 4 726 2 1126 2 730 16 729 4 1130 2 1523 2 344 4 1131 8 1134 6 345 34 1525 2 1526 2 1527 12 351 2 353 18 354 1 1136 2 359 8 1141 2 1531 2 1532 6 1533 4 
311 2 770 2 1428 2 1148 2 1285 2 1101 2 726 2 35 2 701 2 702 2 948 2 576 2 1289 2 600 4 57 2 973 2 447 2 1274 2 351 2 1386 2 1113 2 1090 2 1349 2 209 6 
311 2 770 2 1428 2 1148 2 1285 2 1101 2 726 2 35 2 701 2 702 2 948 2 576 2 1289 2 600 4 57 2 973 2 447 2 1274 2 351 2 1386 2 1113 2 1090 2 1349 2 209 6 
311 2 770 2 1428 2 1148 2 1285 2 1101 2 726 2 35 2 701 2 702 2 948 2 576 2 1289 2 600 4 57 2 973 2 447 2 1274 2 351 2 1386 2 1113 2 1090 2 1349 2 209 6 
990 3 384 2 1162 2 1012 2 1014 2 768 2 15 2 311 2 770 4 1148 10 726 2 1429 2 1101 3 1430 2 775 3 371 2 1289 3 1177 2 57 2 160 2 1104 4 581 4 221 2 753 3 1442 4 1057 2 1495 4 859 2 1419 2 45 2 1206 2 1447 2 788 2 285 4 522 4 588 6 865 4 379 2 1258 2 1532 4 
990 2 384 2 1162 2 1012 2 1014 2 768 2 15 2 311 2 770 4 1168 2 1148 10 726 2 1429 2 1101 2 1430 2 775 2 1357 2 371 2 1289 2 1177 2 57 2 160 2 1104 4 581 4 221 2 753 2 1442 4 1057 2 1495 4 859 2 1419 2 45 2 1206 2 1447 2 788 2 285 4 522 4 1256 2 588 6 865 4 379 2 1258 2 1532 4 
990 2 384 2 1162 2 1012 2 1014 2 768 2 15 2 311 2 770 4 1168 2 1148 10 726 2 1429 2 1101 2 1430 2 775 2 1357 2 371 2 1289 2 1177 2 57 2 160 2 1104 4 581 4 221 2 753 2 1442 4 1057 2 1495 4 859 2 1419 2 45 2 1206 2 1447 2 788 2 285 4 522 4 1256 2 588 6 865 4 379 2 1258 2 1532 4 
990 2 384 2 1162 2 1012 2 1014 2 768 2 15 2 311 2 770 4 1168 2 1148 10 726 2 1429 2 1101 2 1430 2 775 2 1357 2 371 2 1289 2 1177 2 57 2 160 2 1104 4 581 4 221 2 753 2 1442 4 1057 2 1495 4 859 2 1419 2 45 2 1206 2 1447 2 788 2 285 4 522 4 1256 2 588 6 865 4 379 2 1258 2 1532 4 
990 2 384 2 1162 2 1012 2 1014 2 768 2 15 2 311 2 770 4 1168 4 1148 10 726 2 1429 2 1101 2 1430 2 775 2 1357 4 371 2 1289 2 1177 2 57 2 160 2 1104 4 581 4 221 2 753 2 1442 4 1057 2 1495 4 859 2 1419 2 45 2 1206 2 1447 2 788 2 285 4 522 4 1256 4 588 6 865 4 379 2 1258 2 1532 4 
694 2 1464 2 1516 2 94 2 425 2 176 2 
1374 2 94 2 675 2 242 2 1406 2 56 2 1483 2 
1 2 671 1 590 2 770 8 828 1 1148 10 338 2 340 1 391 2 849 2 438 2 727 2 1149 2 397 2 426 2 302 2 582 2 583 2 630 2 1059 1 259 2 632 2 1063 2 759 2 133 1 606 2 
1012 6 1162 6 69 2 770 2 1148 2 1168 2 1357 4 114 2 1434 2 1177 6 117 2 1104 15 22 4 1248 2 1155 2 221 6 97 4 1494 2 889 2 860 2 45 6 1206 6 1529 2 1447 6 788 2 718 2 1256 2 865 12 894 2 938 2 1532 4 
1440 2 1441 2 1442 2 770 1 1495 2 1148 1 1498 2 1215 4 1174 2 1140 1 789 2 285 2 905 2 652 2 502 2 868 6 601 2 887 2 
1440 4 1441 2 1442 2 1495 2 1498 4 1215 4 1174 2 789 2 285 2 905 4 652 2 502 2 601 2 868 6 887 2 
1440 8 1441 2 1442 2 770 1 1495 2 1148 1 1498 8 1215 4 1174 2 1140 1 789 6 285 2 905 8 652 2 502 2 601 8 868 10 887 2 
1440 2 1441 2 1442 2 1495 2 1498 2 1215 2 1174 2 285 2 905 2 652 2 502 2 868 2 887 2 
364 4 458 10 1330 6 366 15 1334 2 460 24 1146 8 267 6 1048 4 1148 150 154 24 73 4 649 11 467 6 552 4 1438 2 164 4 657 6 857 24 954 10 562 84 863 4 1061 6 378 4 1351 90 381 2 1451 8 870 4 964 6 179 6 476 16 475 4 872 8 290 4 1457 14 770 134 1169 2 1359 6 778 10 779 24 299 2 1178 6 1078 4 1079 2 399 18 976 10 785 6 1472 24 1475 1 683 4 99 2 100 2 981 6 103 34 691 28 409 2 1372 8 589 8 1482 12 898 42 1279 17 309 6 310 88 901 24 592 2 1194 26 996 4 804 2 317 4 1106 6 38 112 908 2 1295 12 1296 2 43 92 1299 42 1497 2 1202 248 817 2 912 18 520 124 523 4 435 4 239 10 1118 8 243 58 139 4 916 10 1396 6 141 4 245 26 1508 50 613 22 1125 90 54 6 1015 2 833 4 620 2 923 4 729 4 730 16 927 8 440 2 1520 6 58 6 344 8 929 16 1131 6 445 4 345 58 1412 2 1025 6 629 10 350 10 1527 14 452 36 354 4 1031 6 933 4 147 4 359 6 454 7 148 2 935 6 1040 7 263 8 67 6 362 4 
1281 2 310 12 901 2 1148 28 270 2 1239 2 115 2 1290 4 159 2 1001 4 655 2 38 12 657 2 857 2 123 4 811 2 1342 2 324 2 1202 26 130 2 1159 2 328 2 1114 2 717 2 520 2 331 2 177 2 566 2 243 2 1451 2 385 2 476 2 290 2 1457 2 770 28 829 2 54 2 830 2 1169 2 1170 2 833 2 730 2 927 2 58 2 344 2 929 2 345 2 1023 2 1412 2 1472 2 1527 2 199 2 144 2 687 2 148 2 691 20 409 2 1372 2 589 2 1228 2 67 2 
1330 4 366 8 1334 2 1146 6 267 4 1048 4 1047 2 1148 78 154 8 653 8 467 4 552 4 657 4 1247 2 954 4 559 10 1342 2 560 4 562 24 1061 4 378 2 961 4 870 4 964 4 179 4 476 10 1457 6 770 70 1169 2 1359 4 778 4 1178 4 396 2 1079 2 580 2 976 6 785 4 683 4 981 4 103 30 303 4 409 2 691 14 1372 2 1186 2 589 2 898 8 1279 10 309 4 310 36 992 4 509 4 803 8 1106 4 38 44 1295 14 1296 2 41 10 43 24 1299 16 1497 2 227 4 1202 104 231 4 912 10 520 24 1008 8 523 4 435 4 239 4 1118 4 607 8 243 30 139 4 824 2 141 4 918 10 1508 8 54 4 620 2 923 4 729 4 730 10 927 2 58 4 344 2 929 10 1131 4 444 16 345 28 1412 2 1524 32 1025 4 629 4 1527 6 452 6 354 4 1031 4 933 4 359 4 454 4 148 2 935 4 1038 2 67 2 939 2 1230 16 
1279 2 364 2 310 14 366 6 1146 4 267 4 32 2 1148 28 649 2 804 2 317 2 467 4 1438 2 38 14 657 4 954 2 1342 2 1202 40 817 2 912 2 520 8 239 2 378 2 1118 4 243 12 476 6 1457 2 613 10 770 26 54 4 1169 2 833 2 620 2 778 2 730 6 927 2 299 2 440 2 58 4 344 2 929 6 345 12 1412 2 976 2 629 2 1527 2 683 2 452 2 100 2 354 2 103 6 148 2 935 4 1372 2 691 14 409 2 589 2 1040 2 67 2 
926 2 
464 1 188 1 1002 1 289 1 1519 1 740 1 
464 1 188 1 1002 1 289 1 1519 1 740 1 
464 1 188 1 1002 1 289 1 1519 1 740 1 
464 1 188 1 1002 1 289 1 1519 1 740 1 
464 1 188 1 1002 1 289 1 1519 1 740 1 
464 1 188 1 1002 1 289 1 1519 1 740 1 
464 1 188 1 1002 1 289 1 1519 1 740 1 
464 1 188 1 1002 1 289 1 1519 1 740 1 
464 1 188 1 1002 1 289 1 1519 1 740 1 
464 1 188 1 1002 1 289 1 1519 1 740 1 
464 1 188 1 1002 1 289 1 1519 1 740 1 
464 1 188 1 1002 1 289 1 1519 1 740 1 
464 1 188 1 1002 1 289 1 1519 1 740 1 
464 1 188 1 1002 1 289 1 1519 1 740 1 
464 1 188 1 1002 1 289 1 1519 1 740 1 
464 1 188 1 1002 1 289 1 1519 1 740 1 
464 1 188 1 1002 1 289 1 1519 1 740 1 
464 1 188 1 1002 1 289 1 1519 1 740 1 
464 1 188 1 1002 1 289 1 1519 1 740 1 
464 1 188 1 1002 1 289 1 1519 1 740 1 
464 1 188 1 1002 1 289 1 1519 1 740 1 
464 1 188 1 1002 1 289 1 1519 1 740 1 
464 1 188 1 1002 1 289 1 1519 1 740 1 
464 1 188 1 1002 1 289 1 1519 1 740 1 
464 1 188 1 1002 1 289 1 1519 1 740 1 
464 1 188 1 1002 1 289 1 1519 1 740 1 
464 1 188 1 1002 1 289 1 1519 1 740 1 
464 1 188 1 1002 1 289 1 1519 1 740 1 
464 1 188 1 1002 1 289 1 1519 1 740 1 
464 1 188 1 1002 1 289 1 1519 1 740 1 
464 1 188 1 1002 1 289 1 1519 1 740 1 
464 1 188 1 1002 1 289 1 1519 1 740 1 
464 1 188 1 1002 1 289 1 1519 1 740 1 
464 1 188 1 1002 1 289 1 1519 1 740 1 
464 1 188 1 1002 1 289 1 1519 1 740 1 
464 1 188 1 1002 1 289 1 1519 1 740 1 
464 1 188 1 1002 1 289 1 1519 1 740 1 
464 1 188 1 1002 1 289 1 1519 1 740 1 
464 1 188 1 1002 1 289 1 1519 1 740 1 
464 1 188 1 1002 1 289 1 1519 1 740 1 
464 1 188 1 1002 1 289 1 1519 1 740 1 
464 1 188 1 1002 1 289 1 1519 1 740 1 
464 1 188 1 1002 1 289 1 1519 1 740 1 
464 1 188 1 1002 1 289 1 1519 1 740 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V ERROR java.lang.NullPointerException 46 800 1634 
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V FAILED junit.framework.AssertionFailedError 1836 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V FAILED junit.framework.AssertionFailedError (410,1840) 1555 
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V FAILED junit.framework.AssertionFailedError 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 881 634 1926 
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_0()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_1()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_2()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_3()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_4()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_5()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_6()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_7()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_8()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_9()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_10()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_11()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_12()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_13()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_14()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_15()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_16()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_17()V PASSED
daikon.test.split.SplitterFactoryTest:testmisc_Fib_main_18()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_19()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_20()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_21()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_22()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_23()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_24()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_25()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_26()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_27()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_28()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_29()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_30()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_31()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_32()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__33()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__34()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__35()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__36()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__37()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__38()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__39()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__40()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__41()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__42()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__43()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.ProglangType:isIntegral()Z
daikon.VarInfo:get_simplify_free_index([Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.Member:get_proto()Ldaikon.inv.Invariant;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_103()Z
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoSequence.Reverse:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.NullLiteral;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.ClassOrInterfaceBody:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_simplify()Ljava.lang.String;
daikon.inv.ValueSet:ValueSet(I)V
daikon.test.FormatTestCase:getDiffString()Ljava.lang.String;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.suppress.NISuppression:NISuppression(Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.inv.unary.stringsequence.EltOneOfString:runValue([Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:subarray([JII)[J
jtb.syntaxtree.TypeBound:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.inv.binary.twoSequence.PairwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBody;)V
daikon.Quant:memberOf(I[I)Z
daikon.ProglangType:isString()Z
daikon.inv.unary.sequence.EltNonZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant:format()Ljava.lang.String;
utilMDE.Options.OptionInfo:argument_required()Z
daikon.inv.unary.sequence.EltOneOf:is_hashcode()Z
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_simplify()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.Member:enabled()Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameter;)V
daikon.inv.binary.twoString.TwoString:TwoString(Ldaikon.PptSlice;)V
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
daikon.test.TestAst.MethodDeclarationHarvester:visit(Ljtb.syntaxtree.MethodDeclaration;)V
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_daikon()Ljava.lang.String;
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.Quant:noDups([I)Z
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String; | ASSIGN | 10748 | = null
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.SubSequence:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:enabled()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:memberOf(F[F)Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_simplify()Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
jtb.JavaParser:jj_3_1()Z
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.Type;)V
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:find_bi_linear(JJJJ[D)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
jtb.syntaxtree.MultiplicativeExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE:pow(II)I
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.stringsequence.EltOneOfString:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:PairwiseIntGreaterEqual(Ldaikon.PptSlice;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.UnaryExpression;)V
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.ProglangType:base()Ljava.lang.String;
daikon.Quant:memberOf(D[F)Z
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ProglangType:baseIsFloat()Z
daikon.tools.jtb.Ast:getParent(Ljava.lang.Class;Ljtb.syntaxtree.Node;)Ljtb.syntaxtree.Node;
jtb.syntaxtree.ClassOrInterfaceType:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:min_max([I)[I
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_esc()Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.inv.binary.sequenceString.MemberString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernary:add_modified(JJJI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_ioa()Ljava.lang.String;
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:enabled()Z
jtb.JavaParser:jj_3R_125()Z
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
utilMDE.ArraysMDE:indexOf([J[J)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltNonZero:format_ioa()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:format_simplify()Ljava.lang.String;
jtb.JavaParser:jj_2_10(I)Z
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:enabled()Z
utilMDE.FuzzyFloat:FuzzyFloat(D)V
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryExpression;)V
daikon.Quant:eltwiseLT([I)Z
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
daikon.inv.binary.sequenceString.MemberString:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.Quant:sameLength([I[I)Z
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.UtilMDE:split(Ljava.lang.String;Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.binary.twoSequence.Reverse:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.inv.binary.sequenceString.SequenceString:seq_index()I
jtb.JavaParser:jj_3R_107()Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameters;)V
daikon.inv.unary.string.SingleString:valid_types([Ldaikon.VarInfo;)Z
daikon.Quantify.IOAQuantification:getQuantifierExp()Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.JavaParser:jj_scan_token(I)Z
daikon.inv.Invariant:logDetail()Z
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.suppress.NISuppressee:NISuppressee(Ljava.lang.Class;Z)V
jtb.JavaParser:jj_3R_162()Z
jtb.JavaParser:jj_3R_180()Z
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.Debug:logOn()Z
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoString.StringEqual:check_modified(Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.ternary.TernaryInvariant:TernaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.binary.twoString.TwoString:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.VarInfo:name()Ljava.lang.String;
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_simplify()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:format_ioa()Ljava.lang.String;
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
daikon.VarInfo:isPrestate()Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_49()Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:add_modified([JJI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.NullLiteral:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.TypeArgument:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_esc()Ljava.lang.String;
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.Quant:memberOf(J[J)Z
daikon.inv.unary.sequence.NoDuplicates:enabled()Z
daikon.simplify.SimpUtil:formatInteger(J)Ljava.lang.String;
utilMDE.Assert:assertTrue(Z)V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.Quant:eltwiseEqual([I)Z
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.Quant:memberOf(S[S)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ImportDeclaration;)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:lt(II)Z
daikon.inv.binary.twoScalar.NumericInt.Divides:Divides(Ldaikon.PptSlice;Z)V
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.inv.unary.stringsequence.EltOneOfString:sort_rep()V
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.diff.Node:children()Ljava.util.Iterator;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Block;)V
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
utilMDE.ArraysMDE:element_range([I)I
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:gcd_differences([I)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;)V
jtb.visitor.TreeFormatter:indent(I)Ljtb.visitor.FormatCommand;
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.inv.binary.twoScalar.NumericInt.Divides:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.stringsequence.EltOneOfString:is_type()Z
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.VarInfoName.Elements:ioa_name_impl()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntEqual:SeqIntEqual(Ldaikon.PptSlice;)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.Quant:eltsGteIndex([I)Z
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:intersection([I[I)[I
daikon.Quantify:quantify([Ldaikon.VarInfo;)[Ldaikon.Quantify.QuantifyReturn;
daikon.Quant:eq(FF)Z
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.MathMDE:modulus([I)[I
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_esc()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:EltOneOf(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_101()Z
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceBody:ClassOrInterfaceBody(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.inv.unary.sequence.NoDuplicates:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ProglangType:isPointerFileRep()Z
jtb.JavaParser:jj_3R_137()Z
jtb.JavaParser:jj_3_29()Z
daikon.inv.unary.sequence.EltwiseIntLessThan:format_ioa()Ljava.lang.String;
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.inv.ternary.threeScalar.ThreeScalar:ThreeScalar(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:enabled()Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoSequence.SubSequence:get_proto()Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AndExpression;)V
daikon.VarInfo:has_typeof()Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_esc()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernary:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalOrExpression;)V
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.RelationalExpression;)V
daikon.PptSlice1:arity()I
daikon.Quant:eltsLteIndex([I)Z
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_simplify()Ljava.lang.String;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3_35()Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_ioa()Ljava.lang.String;
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;)Z
utilMDE.ArraysMDE:fn_compose([I[I)[I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.RelationalExpression;)V
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.tools.jtb.Ast:quickFixForInternalComment(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
jtb.visitor.TreeFormatter:space()Ljtb.visitor.FormatCommand;
jtb.JavaParser:jj_3_25()Z
daikon.inv.unary.stringsequence.SingleStringSequence:SingleStringSequence(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.NoDuplicates:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.BinaryInvariant:is_symmetric()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArguments;)V
daikon.inv.unary.scalar.NonModulus:updateResults()V
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.Quant:setDiff([I[I)[I
jtb.JavaParser:jj_3R_110()Z
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.inv.binary.sequenceScalar.SeqIntEqual:add_modified([JJI)Ldaikon.inv.InvariantStatus;
jtb.Token:newToken(I)Ljtb.Token;
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
jtb.visitor.TreeFormatter:force(I)Ljtb.visitor.FormatCommand;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
daikon.inv.unary.sequence.EltNonZero:EltNonZero(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.inv.binary.twoSequence.SubSequence:SubSequence(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:sum([[I)I
jtb.syntaxtree.TypeParameter:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.UtilMDE:escapeNonASCII(C)Ljava.lang.String;
jtb.visitor.TreeFormatter:outdent()Ljtb.visitor.FormatCommand;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_esc()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
utilMDE.FuzzyFloat:lte(DD)Z
jtb.JavaParser:jj_3R_97()Z
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.inv.binary.twoSequence.Reverse:Reverse(Ldaikon.PptSlice;)V
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_124()Z
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeToken:trimSpecials()V
jtb.JavaParser:jj_3R_89()Z
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String; | RETURN | 119133 | return null
daikon.inv.binary.twoSequence.PairwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.Member:format_esc()Ljava.lang.String;
daikon.inv.binary.twoSequence.SubSequence:format_ioa()Ljava.lang.String;
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.LinearBinaryCore:maxsep_indices()[I
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.Quant:lexGT([I[I)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_simplify()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SequenceScalar:scl_index()I
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:SeqIntGreaterThan(Ldaikon.PptSlice;)V
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
jtb.JavaParser:jj_3_27()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameters;)V
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.syntaxtree.ClassOrInterfaceBody:getParent()Ljtb.syntaxtree.Node;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.inv.ternary.threeScalar.LinearTernary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.inv.unary.string.OneOfString:sort_rep()V
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3_28()Z
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.inv.binary.sequenceString.MemberString:enabled()Z
daikon.Quant:lexEqual([I[I)Z
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_77()Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_esc()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_daikon()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
jtb.JavaParser:jj_3R_80()Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.twoScalar.LinearBinary:add_modified(JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PostfixExpression;)V
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.inv.unary.stringsequence.EltOneOfString:EltOneOfString(Ldaikon.PptSlice;)V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
jtb.syntaxtree.Expression:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE:gcd(II)I
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
jtb.syntaxtree.PostfixExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:format_daikon()Ljava.lang.String;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.PostfixExpression;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
utilMDE.FuzzyFloat:gt(DD)Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
utilMDE.OrderedPairIterator:hasNext()Z
daikon.Quantify.QuantifyReturn:QuantifyReturn(Ldaikon.VarInfo;)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:SeqIntLessThan(Ldaikon.PptSlice;)V
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:MoreLexicalActions()V
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.inv.binary.sequenceScalar.SequenceScalar:SequenceScalar(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_2_5(I)Z
jtb.JavaParser:jj_3_13()Z
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
daikon.ModBitTracker:num_sets()I
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.inv.binary.sequenceScalar.Member:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.string.OneOfString:add_modified(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltUpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.ProglangType:isFloat()Z
daikon.VarComparabilityNone:comparable(Ldaikon.VarComparabilityNone;Ldaikon.VarComparabilityNone;)Z
utilMDE.ArraysMDE:sum([[D)D
daikon.ModBitTracker:num_vars()I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeDeclaration;)V
daikon.VarInfoName:hasTypeOf()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:set_bi_linear(JJJJ)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
daikon.Quant:eltwiseGTE([I)Z
daikon.Quant:eltsGTE([II)Z
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_daikon()Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3_20()Z
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.tools.jtb.Ast:getType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.VarInfo:dbc_name()Ljava.lang.String;
utilMDE.MathMDE:missing_numbers([I)[I
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.tools.jtb.PptNameMatcher:typeMatch(Ljava.lang.String;Ljtb.syntaxtree.FormalParameter;)Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
daikon.tools.jtb.Ast:format(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.inv.ValueSet.ValueSetStringArray:ValueSetStringArray(I)V
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.stringsequence.SingleStringSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.PrimaryExpression;)V
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:pairwiseGTE([I[I)Z
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.inv.Invariant:simplify_format_string(Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.visitor.TreeFormatter:outdent(I)Ljtb.visitor.FormatCommand;
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_simplify()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.inv.ValueSet.ValueSetString:ValueSetString(I)V
jtb.JavaParser:jj_3_5()Z
jtb.visitor.TreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
utilMDE.UtilMDE:removeWhitespaceAfter(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.inv.binary.twoSequence.SubSequence:enabled()Z
daikon.inv.unary.sequence.NoDuplicates:format_ioa()Ljava.lang.String;
daikon.tools.jtb.SimpleTreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3_10()Z
jtb.visitor.TreeFormatter:indent()Ljtb.visitor.FormatCommand;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Invariant:prob_and(DD)D
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.Quant:union([I[I)[I
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.binary.twoString.StringEqual:get_proto()Ldaikon.inv.binary.twoString.StringEqual;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
jtb.syntaxtree.FormalParameter:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ExclusiveOrExpression;)V
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:subsetOf([D[F)Z
utilMDE.UtilMDE:lineNumberFileReader(Ljava.io.File;)Ljava.io.LineNumberReader;
utilMDE.Intern:internSubsequence([III)[I
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ReturnStatement;)V
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:get_swap()Z
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.Quant:lexNotEqual([I[I)Z
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_esc()Ljava.lang.String;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.inv.binary.twoSequence.Reverse:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.MethodDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.VarInfoName.InorderFlattener:InorderFlattener(Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.EltOneOf:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:name()Ljava.lang.String;
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
jtb.syntaxtree.BlockStatement:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.CompilationUnit:getParent()Ljtb.syntaxtree.Node;
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor.1:visit(Ljtb.syntaxtree.TypeParameter;)V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
jtb.syntaxtree.NodeSequence:elements()Ljava.util.Enumeration;
utilMDE.ArraysMDE:fn_inverse([II)[I
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
utilMDE.LimitedSizeIntSet:add(I)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.MultiplicativeExpression;)V
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.ArraysMDE:isSubarray([J[JI)Z
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
jtb.JavaParser:jj_3R_74()Z
daikon.tools.jtb.Ast:create(Ljava.lang.String;[Ljava.lang.Class;[Ljava.lang.Object;Ljava.lang.String;)Ljtb.syntaxtree.Node;
jtb.syntaxtree.NodeSequence:getParent()Ljtb.syntaxtree.Node;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
jtb.syntaxtree.TypeArguments:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.AdditiveExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.InclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:enabled()Z
jtb.syntaxtree.NodeListOptional:present()Z
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_simplify()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReferenceType;)V
daikon.suppress.NISuppressionSet:swap()Ldaikon.suppress.NISuppressionSet;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3_15()Z
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.Quant:eltsLT([II)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:add_modified(JJJI)Ldaikon.inv.InvariantStatus;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.ValueTuple:isMissing(I)Z
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.TypeDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.suppress.NISuppressor:swap()Ldaikon.suppress.NISuppressor;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_simplify()Ljava.lang.String;
daikon.Quantify.Term:ioa_name()Ljava.lang.String;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.suppress.NISuppression:NISuppression([Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpression;)V
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltUpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:pairwiseLTE([I[I)Z
utilMDE.FuzzyFloat:gte(DD)Z
utilMDE.ArraysMDE:concat([I[I)[I
jtb.JavaParser:jj_2_1(I)Z
utilMDE.Intern:numIntArrays()I
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_2_21(I)Z
daikon.inv.binary.sequenceScalar.SequenceScalar:seqvar()Ldaikon.VarInfo;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;)V
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.FormalParameters:accept(Ljtb.visitor.Visitor;)V
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quantify.FreeVar:name()Ljava.lang.String;
jtb.visitor.FormatCommand:getCommand()I
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.MethodDeclarator;)V
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.inv.unary.sequence.EltUpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.inv.unary.sequence.NoDuplicates:format_simplify()Ljava.lang.String;
jtb.JavaParser:jj_3R_106()Z
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;Ldaikon.VarInfo;)V
daikon.inv.binary.twoSequence.SubSequence:format_simplify_explicit()Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_esc()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Expression;)V
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.Quant:eltwiseNotEqual([I)Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.EltOneOf:sort_rep()V
jtb.visitor.TreeFormatter:add(Ljtb.visitor.FormatCommand;)V
daikon.inv.unary.stringsequence.EltOneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_simplify()Ljava.lang.String;
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoString.StringEqual:enabled()Z
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:eq(II)Z
jtb.JavaParser:jj_3R_102()Z
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
utilMDE.UtilMDE:lineNumberFileReader(Ljava.lang.String;)Ljava.io.LineNumberReader;
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
jtb.JavaParser:jj_3R_86()Z
daikon.suppress.NISuppression:NISuppression(Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.TypeArgument:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceString.MemberString:format_ioa()Ljava.lang.String;
utilMDE.LimitedSizeIntSet:size()I
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.inv.binary.sequenceScalar.Member:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.visitor.TreeFormatter:TreeFormatter()V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoSequence.Reverse:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_2_17(I)Z
daikon.inv.ternary.threeScalar.LinearTernary:LinearTernary(Ldaikon.PptSlice;)V
daikon.PptSlice0:arity()I
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:enabled()Z
jtb.syntaxtree.ClassOrInterfaceDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.suppress.NISuppressionSet:NISuppressionSet([Ldaikon.suppress.NISuppression;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_ioa()Ljava.lang.String;
utilMDE.MathMDE:gcd([I)I
daikon.Quant:eltsNotEqual([II)Z
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_daikon()Ljava.lang.String;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.tools.jtb.Ast.1GetParametersVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.test.FormatTestCase.SingleOutputTestCase:getDiffString()Ljava.lang.String;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.PptSlice0.ImplicationWrapper:hashCode()I
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.InstanceOfExpression;)V
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_2_15(I)Z
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:indexOf([II)I
daikon.test.InvariantFormatTester:execute()Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.syntaxtree.TypeArguments:TypeArguments(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeArgument;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.CompilationUnit:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.NumericInt.Divides:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.BlockStatement;)V
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_98()Z
daikon.Quant:subsetOf([B[I)Z
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.inv.unary.sequence.EltOneOf:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.Elements:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.string.OneOfString:enabled()Z
daikon.Quant:pairwiseEqual([I[I)Z
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
jtb.visitor.FormatCommand:FormatCommand(II)V
daikon.PptSlice3:arity()I
jtb.JavaParser:jj_2_12(I)Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
jtb.JavaParser:jj_3R_135()Z
jtb.JavaParser:jj_2_35(I)Z
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:EltwiseIntLessThan(Ldaikon.PptSlice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameter;)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.inv.unary.sequence.EltwiseIntLessThan:enabled()Z
daikon.Quant:subsetOf([I[I)Z
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeBound;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Statement;)V
daikon.Quant:subsetOf([S[S)Z
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.inv.binary.twoSequence.TwoSequence:var1()Ldaikon.VarInfo;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan()V
utilMDE.FuzzyFloat:eq(DD)Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.inv.unary.sequence.NoDuplicates:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_ioa()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:enabled()Z
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.ClassOrInterfaceDeclaration:ClassOrInterfaceDeclaration(Ljtb.syntaxtree.NodeChoice;Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ClassOrInterfaceBody;)V
daikon.inv.unary.stringsequence.EltOneOfString:format_esc()Ljava.lang.String;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.tools.jtb.PptNameMatcher:extractPptArgs(Ldaikon.PptName;)Ljava.util.List;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Literal;)V
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I | ASSIGN | 23529 | = null
utilMDE.Intern:intern([J)[J
jtb.JavaParser:jj_3R_69()Z
daikon.inv.binary.twoSequence.SubSequence:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.TreeDumper:printToken(Ljava.lang.String;)V
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_ioa()Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:elements()Ljava.util.Enumeration;
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
jtb.JavaParser:jj_3R_68()Z
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.inv.ternary.threeScalar.ThreeScalar:var3()Ldaikon.VarInfo;
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.JavaParser:jj_3R_51()Z
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.Quant:eltwiseLTE([I)Z
utilMDE.UtilMDE:removeWhitespaceBefore(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:accept(Ljtb.visitor.Visitor;)V
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Type;)V
jtb.syntaxtree.TypeDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.inv.unary.LowerBoundCore:calc_modulus()J
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:get_proto()Ldaikon.inv.Invariant;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ExclusiveOrExpression;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.InclusiveOrExpression;)V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_126()Z
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
daikon.tools.jtb.Ast:getPackage(Ljtb.syntaxtree.CompilationUnit;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.sequence.EltOneOf:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.AdditiveExpression;)V
daikon.Quant:lexGTE([I[I)Z
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan(Ldaikon.PptSlice;)V
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
jtb.syntaxtree.TypeDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.TreeFormatter:processList(Ljtb.syntaxtree.NodeListInterface;Ljtb.visitor.FormatCommand;)V
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_esc()Ljava.lang.String;
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.ProglangType:isPseudoArray()Z
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.sequenceString.MemberString:format_esc()Ljava.lang.String;
utilMDE.WeakHasherMap:processQueue()V
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.tools.jtb.SimpleTreeDumper:SimpleTreeDumper(Ljava.io.Writer;)V
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.ModBitTracker:num_samples()I
jtb.syntaxtree.VariableDeclaratorId:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:get_all_simple_names()Ljava.util.List;
daikon.inv.binary.twoSequence.Reverse:format_daikon()Ljava.lang.String;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.Quant:eq(DD)Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:maxsep_triples([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)D
daikon.VarInfo:simplifyNameAndBounds()[Ljava.lang.String;
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PackageDeclaration;)V
daikon.inv.binary.sequenceScalar.SeqIntEqual:enabled()Z
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfo:java_name()Ljava.lang.String;
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.inv.binary.twoSequence.Reverse:format_ioa()Ljava.lang.String;
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfo:isDerived()Z
daikon.VarInfoName:ioa_name()Ljava.lang.String;
daikon.inv.unary.string.OneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_48()Z
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
jtb.JavaParser:jj_3R_123()Z
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.inv.unary.stringsequence.EltOneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ShiftExpression;)V
daikon.inv.binary.sequenceString.SequenceString:seqvar()Ldaikon.VarInfo;
daikon.diff.RootNode:RootNode()V
utilMDE.FuzzyFloat:isSubset([D[D)Z
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Modifiers;)V
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.VarInfoName.QuantHelper:simplifyNameAndBounds(Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.ProglangType:isArray()Z
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.inv.Invariant:prob_is_ge(DD)D
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfo:is_direct_non_slice_array()Z
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:separation(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)D
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:lte(II)Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:enabled()Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.inv.binary.sequenceString.SequenceString:scl_index()I
jtb.syntaxtree.TypeDeclaration:TypeDeclaration(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_daikon()Ljava.lang.String;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.Statement;)V
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
jtb.syntaxtree.Literal:accept(Ljtb.visitor.Visitor;)V
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;Ljava.lang.String;)V
utilMDE.ArraysMDE:sum([I)I
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
jtb.syntaxtree.ShiftExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoSequence.TwoSequence:TwoSequence(Ldaikon.PptSlice;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;II)V
jtb.visitor.TreeFormatter:space(I)Ljtb.visitor.FormatCommand;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.SeqIntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ConditionalExpression;)V
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.PptName:toString()Ljava.lang.String;
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
jtb.JavaParser:jj_3R_115()Z
jtb.syntaxtree.ExclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.tools.jtb.SimpleTreeDumper:printToken(Ljava.lang.String;)V
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_ioa()Ljava.lang.String;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.PptName:getFullClassName()Ljava.lang.String;
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:get_proto()Ldaikon.inv.Invariant;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ConditionalAndExpression;)V
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;)V
daikon.VarInfo:simplify_quantify(Ljava.util.EnumSet;[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.binary.twoSequence.SeqSeqIntEqual:SeqSeqIntEqual(Ldaikon.PptSlice;Z)V
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoSequence.Reverse:format_simplify()Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
daikon.inv.binary.sequenceScalar.Member:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:SeqIntLessEqual(Ldaikon.PptSlice;)V
jtb.syntaxtree.ReturnStatement:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_105()Z
jtb.syntaxtree.NodeSequence:elementAt(I)Ljtb.syntaxtree.Node;
utilMDE.FuzzyFloat:ne(DD)Z
jtb.syntaxtree.RelationalExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.inv.unary.string.OneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:jj_3_3()Z
daikon.inv.unary.stringsequence.EltOneOfString:add_modified([Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ConditionalOrExpression;)V
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.inv.unary.UpperBoundCore:wouldChange(J)Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_ioa()Ljava.lang.String;
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljava.lang.String;Ljava.lang.String;Ljava.util.List;)Z
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_136()Z
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltUpperBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
jtb.JavaParser:jj_3_30()Z
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.inv.unary.stringsequence.SingleStringSequence:var()Ldaikon.VarInfo;
daikon.inv.unary.sequence.EltNonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_120()Z
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:format_daikon()Ljava.lang.String;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SequenceScalar:seq_index()I
daikon.inv.binary.twoSequence.TwoSequence:var2()Ldaikon.VarInfo;
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
jtb.JavaParser:jj_3R_60()Z
jtb.syntaxtree.PrimaryExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3_36()Z
jtb.JavaCharStream:BeginToken()C
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.Quant:eltsNotEqualIndex([I)Z
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.TypeParameters:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.TypeArguments:accept(Ljtb.visitor.Visitor;)V
daikon.PptSlice0:initInvariantsSeen()V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.inv.binary.twoString.TwoString:var1()Ldaikon.VarInfo;
daikon.ProglangType:baseIsScalar()Z
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:add_modified([JJI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.PairwiseIntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
jtb.JavaParser:jj_3R_73()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameters;)V
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String; | CONDITION | 29684 | if (x) -> if (!x)
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_bi_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)V
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptTopLevel:is_constant(Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoString.StringEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.Quant:subsetOf([J[J)Z
jtb.syntaxtree.NodeToken:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.ClassOrInterfaceDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
jtb.JavaParser:jj_3R_161()Z
jtb.JavaParser:jj_3R_122()Z
daikon.Quant:gte(II)Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:maxsep_point([J[J)[I
utilMDE.MathMDE:pow_fast(II)I
jtb.JavaParser:jj_2_18(I)Z
daikon.inv.binary.sequenceString.MemberString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.BlockStatement;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.Stopwatch:Stopwatch(Z)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
jtb.JavaParser:getToken(I)Ljtb.Token;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_ioa()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:enabled()Z
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.Node:Node()V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.NonModulus:enabled()Z
jtb.JavaParser:jj_3_16()Z
daikon.Quant:subsetOf([D[D)Z
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments;
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
jtb.syntaxtree.MethodDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:pairwiseSquare([I[I)Z
daikon.Quantify.QuantFlags:element_wise()Ljava.util.EnumSet;
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.inv.binary.sequenceScalar.Member:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.JavaCharStream:getEndLine()I
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
jtb.JavaParser:jj_3R_114()Z
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_81()Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:enabled()Z
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3_18()Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.inv.unary.sequence.EltNonZero:format_daikon()Ljava.lang.String;
jtb.JavaParser:jj_2_3(I)Z
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.Quantify.QuantFlags:distinct()Ljava.util.EnumSet;
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:logOn()Z
jtb.JavaParser:jj_3R_52()Z
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ResultType;)V
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
jtb.visitor.TreeFormatter:placeToken(Ljtb.syntaxtree.NodeToken;II)V
daikon.inv.unary.UpperBoundCore:calc_range()J
jtb.JavaParser:jj_2_14(I)Z
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ReferenceType;)V
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.MathMDE:gcd(JJ)J
daikon.inv.binary.twoSequence.PairwiseIntLessThan:PairwiseIntLessThan(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.Name:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.SeqIntEqual:check_modified([JJI)Ldaikon.inv.InvariantStatus;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.EqualityExpression;)V
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.inv.unary.string.SingleString:var()Ldaikon.VarInfo;
jtb.syntaxtree.ImportDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.sequenceScalar.SeqIntEqual:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_87()Z
daikon.tools.jtb.Ast:getParameters(Ljtb.syntaxtree.MethodDeclaration;)Ljava.util.List;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.ternary.threeScalar.LinearTernary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
jtb.JavaParser:jj_3R_133()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_109()Z
jtb.JavaParser:jj_3R_76()Z
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
utilMDE.UtilMDE:removeWhitespaceAround(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_simplify(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.binary.twoString.StringEqual:StringEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName:esc_name()Ljava.lang.String;
jtb.JavaParser:jj_3_14()Z
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.inv.unary.stringsequence.EltOneOfString:format_ioa()Ljava.lang.String;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
jtb.JavaParser:jj_3R_88()Z
daikon.inv.binary.twoSequence.SubSequence:format_simplify()Ljava.lang.String;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
utilMDE.UtilMDE:escapeNonASCII(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfo:esc_name()Ljava.lang.String;
jtb.JavaParser:jj_3R_121()Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NullLiteral;)V
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_108()Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.inv.binary.twoSequence.SubSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.inv.unary.sequence.EltOneOf:format_esc()Ljava.lang.String;
daikon.Quant:eltsGT([II)Z
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.MethodDeclarator:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.AndExpression;)V
daikon.inv.unary.stringsequence.EltOneOfString:subarray_rep()Ljava.lang.String;
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:PairwiseIntEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.InvMap:InvMap()V
daikon.inv.binary.sequenceString.MemberString:MemberString(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:eltsGtIndex([I)Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_esc()Ljava.lang.String;
daikon.inv.binary.sequenceString.MemberString:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:planarIntervention([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_149()Z
daikon.inv.unary.sequence.EltwiseIntComparison:EltwiseIntComparison(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_simplify()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:check_modified([JJI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:isPointer()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
jtb.JavaCharStream:readChar()C
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:prob_and(DDD)D
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.WeakHasherMap.EntrySet:size()I
jtb.JavaParser:jj_3R_61()Z
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.Quant:lexLTE([I[I)Z
utilMDE.Intern:internSubsequence([JII)[J
jtb.JavaParser:jj_3_22()Z
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE:mod_positive(II)I
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.Ppt:find_var_by_name(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_daikon()Ljava.lang.String;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:intern([I)[I
jtb.JavaParser:jj_3R_56()Z
jtb.visitor.TreeFormatter:force()Ljtb.visitor.FormatCommand;
jtb.JavaParser:jj_3R_53()Z
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3_21()Z
jtb.visitor.FormatCommand:getNumCommands()I
daikon.inv.binary.twoSequence.SeqSeqIntEqual:get_proto()Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AdditiveExpression;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_daikon()Ljava.lang.String;
jtb.syntaxtree.InstanceOfExpression:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.PrimaryPrefix;)V
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.suppress.NISuppressee:NISuppressee(Ljava.lang.Class;I)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_164()Z
daikon.inv.unary.sequence.EltOneOf:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceString.SequenceString:SequenceString(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_simplify(Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:SeqIntGreaterEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:enabled()Z
jtb.syntaxtree.VariableDeclaratorId:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Elements:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.tools.jtb.Ast:removeWhitespace(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.Quantify.IOAQuantification:getFreeVar(I)Ldaikon.Quantify.Term;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InclusiveOrExpression;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.VarInfo:apply_subscript(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.EqualityExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:subarray([III)[I
jtb.JavaParser:jj_3R_62()Z
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.Quantify.QuantFlags:adjacent()Ljava.util.EnumSet;
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:get_enclosing_var()Ldaikon.VarInfo;
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.inv.binary.twoScalar.LinearBinaryCore:add_modified(JJI)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:relate_var()V
daikon.Quant:isReverse([I[I)Z
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
utilMDE.MathMDE:sign(I)I
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eltsEqualIndex([I)Z
daikon.inv.unary.sequence.EltUpperBound:format_esc()Ljava.lang.String;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.inv.unary.sequence.NoDuplicates:NoDuplicates(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_2_36(I)Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_ioa()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.CompilationUnit;)V
daikon.inv.binary.sequenceScalar.Member:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Elements:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.tools.jtb.Ast:getName(Ljtb.syntaxtree.MethodDeclaration;)Ljava.lang.String;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo; | ASSIGN | 21839 | = null
jtb.syntaxtree.ConditionalAndExpression:accept(Ljtb.visitor.Visitor;)V
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.CompilationUnit:CompilationUnit(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.ArraysMDE:max([I)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalAndExpression;)V
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.VarInfoName:inOrderTraversal()Ljava.util.Collection;
daikon.inv.unary.sequence.EltUpperBound:format_simplify()Ljava.lang.String;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.inv.binary.twoString.StringEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.VarInfoName.InorderFlattener:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
jtb.syntaxtree.NodeList:NodeList()V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaCharStream:getEndColumn()I
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.unary.string.OneOfString:format_ioa()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_ioa()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.Member:format_simplify()Ljava.lang.String;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:ungenerify(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
jtb.syntaxtree.NodeToken:numSpecials()I
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:isIOAArray()Z
daikon.VarInfo:simplify_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.inv.Invariant:isWorthPrinting()Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.Expression;)V
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.test.TestAst.ClassOrInterfaceDeclarationHarvester:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:pairwiseGT([I[I)Z
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.inv.ternary.threeScalar.ThreeScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclarator;)V
daikon.ModBitTracker:ModBitTracker(I)V
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.Type:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoSequence.Reverse:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore:linearIntervention([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)V
jtb.JavaParser:jj_3_12()Z
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
jtb.syntaxtree.NodeListOptional:getParent()Ljtb.syntaxtree.Node;
daikon.inv.Invariant:getConfidence()D
daikon.inv.unary.string.OneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:getFreeIndex([Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.suppress.NISuppressee:swap()Ldaikon.suppress.NISuppressee;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:eltsLtIndex([I)Z
jtb.syntaxtree.ReferenceType:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.string.OneOfString:format_esc()Ljava.lang.String;
jtb.JavaParser:jj_2_4(I)Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_simplify()Ljava.lang.String;
jtb.visitor.TreeFormatter:TreeFormatter(II)V
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | ASSIGN | 2763 | = null
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.inv.binary.twoSequence.SubSequence:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:domainTypeIOA()Ljava.lang.String;
daikon.inv.Invariant:prob_or(DD)D
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:pairwiseLT([I[I)Z
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MultiplicativeExpression;)V
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceString.SequenceString:sclvar()Ldaikon.VarInfo;
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.sequence.EltNonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.FormatTestCase:passes()Z
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.Quantify.IOAQuantification:getFreeVarName(I)Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext1()V
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.ProglangType:baseIsIntegral()Z
daikon.Quantify.IOAQuantification:getVarIndexedString(I)Ljava.lang.String;
jtb.JavaParser:jj_3R_57()Z
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.VarInfoName:isLiteralConstant()Z
jtb.JavaParser:jj_3R_148()Z
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.PptName:getSignature()Ljava.lang.String;
daikon.Quant:subsetOf([F[D)Z
daikon.inv.unary.sequence.EltOneOf:get_proto()Ldaikon.inv.Invariant;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:copy(Ljava.util.HashMap;)Ljava.util.HashMap;
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltNonZero:format_esc()Ljava.lang.String;
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
daikon.ValueTuple:size()I
daikon.Quant:concat([I[I)[I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.inv.binary.twoScalar.NumericInt.Divides:get_proto(Z)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.inv.binary.sequenceString.MemberString:check_modified([Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_daikon()Ljava.lang.String;
daikon.Quantify.IOAQuantification:getClosingExp()Ljava.lang.String;
daikon.Quantify.QuantFlags:include_index()Ljava.util.EnumSet;
daikon.VarInfoName.QuantHelper:freshDistinctFrom(Ljava.util.Set;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.Quant:slice([III)[I | CONDITION | 160611 | if (x) -> if (!x)
jtb.JavaParser:jj_2_25(I)Z
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:FormalParameter()Ljtb.syntaxtree.FormalParameter;
daikon.PptSlice1:num_samples()I
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.sequenceScalar.SeqIntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.NoDuplicates:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.string.OneOfString:format_daikon()Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:enabled()Z
daikon.inv.binary.twoString.StringEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.Quantify.IOAQuantification:getMembershipRestriction(I)Ljava.lang.String;
utilMDE.MathMDE:bitwiseComplement(I)I
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.sequenceString.MemberString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.ArraysMDE:sum([D)D
jtb.JavaParser:jj_3R_169()Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:maxsep_doubles([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)D
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.Quant:gt(II)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.inv.unary.string.OneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.Quant:eltsLTE([II)Z
utilMDE.UtilMDE.NullableStringComparator:compare(Ljava.lang.String;Ljava.lang.String;)I
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltLowerBound:format_simplify()Ljava.lang.String;
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
jtb.syntaxtree.ConditionalOrExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE:negate(I)I
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.Ppt:Ppt()V
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.inv.binary.twoScalar.IntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.tools.jtb.PptNameMatcher:PptNameMatcher(Ljtb.syntaxtree.Node;)V
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:try_points_linear(DDD)Z
jtb.JavaCharStream:backup(I)V
jtb.JavaParser:jj_ntk()I
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_esc()Ljava.lang.String;
jtb.JavaParser:jj_3R_67()Z
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:add_modified([JJI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_96()Z
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.Literal;)V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.unary.string.OneOfString:is_type()Z
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:ne(II)Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.JavaCharStream:ReadByte()C
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.VarComparabilityNone:elementType()Ldaikon.VarComparability;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.VarInfoName:repr()Ljava.lang.String;
jtb.JavaParser:jj_3_4()Z
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
jtb.JavaParser:jj_3R_134()Z
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
daikon.VarInfoName.InorderFlattener:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ProglangType:baseIsString()Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:enabled()Z
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
jtb.JavaCharStream:getBeginColumn()I
daikon.inv.binary.twoSequence.SubSequence:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
jtb.JavaParser:jj_3R_99()Z
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_58()Z
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.inv.unary.string.OneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SequenceScalar:sclvar()Ldaikon.VarInfo;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.tools.jtb.Ast:print(Ljtb.syntaxtree.Node;)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
jtb.JavaParser:jj_3R_100()Z
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
jtb.JavaParser:jj_3R_72()Z
daikon.inv.unary.sequence.EltwiseIntLessThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.ternary.threeScalar.LinearTernary:enabled()Z
daikon.inv.binary.sequenceScalar.SequenceScalar:seq_first()Z
utilMDE.FuzzyFloat:lt(DD)Z
jtb.syntaxtree.ClassOrInterfaceDeclaration:getParent()Ljtb.syntaxtree.Node;
utilMDE.WeakHasherMap:size()I
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.string.OneOfString:OneOfString(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_daikon()Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.PptName:isEnterPoint()Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_ioa()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.inv.ternary.threeScalar.ThreeScalar:var2()Ldaikon.VarInfo;
utilMDE.OrderedPairIterator:setnext2()V
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.tools.jtb.PptNameMatcher:getUngenerifiedType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.PptSlice2:arity()I
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
utilMDE.ArraysMDE:indexOf([JJ)I
daikon.inv.ternary.threeScalar.LinearTernary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.NodeOptional:present()Z
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;Z)Z
daikon.inv.unary.sequence.EltwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:VariableDeclaratorId()Ljtb.syntaxtree.VariableDeclaratorId;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:subsetOf([F[F)Z
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:min([I)I
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:equals(JJJ)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([ZZ)I
jtb.syntaxtree.ClassOrInterfaceBody:accept(Ljtb.visitor.Visitor;)V
daikon.Ppt:indexOf(Ljava.lang.String;)I
daikon.inv.unary.sequence.NoDuplicates:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_esc()Ljava.lang.String;
jtb.JavaParser:JavaParser(Ljava.io.Reader;)V
jtb.syntaxtree.Statement:accept(Ljtb.visitor.Visitor;)V
daikon.ProglangType:elementIsIntegral()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
jtb.visitor.TreeDumper:TreeDumper(Ljava.io.Writer;)V
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfo:isDerivedSubSequenceOf()Ldaikon.VarInfo;
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.PptSlice3:PptSlice3(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.JavaParser:jj_3R_54()Z
jtb.JavaParser:jj_3R_119()Z
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.inv.Invariants:Invariants()V
daikon.inv.binary.sequenceScalar.Member:format_ioa()Ljava.lang.String;
daikon.inv.unary.scalar.Positive:enabled()Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_daikon()Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.tools.jtb.Ast:getClassName(Ljtb.syntaxtree.Node;)Ljava.lang.String;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.inv.unary.string.OneOfString:runValue(Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.PptMap:asCollection()Ljava.util.Collection;
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.NodeFinder:inPre()Z
jtb.JavaCharStream:FillBuff()V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:setEqual([I[I)Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.PrimaryPrefix:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptTopLevel.CondIterator:hasNext()Z
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.UtilMDE:splitLines(Ljava.lang.String;)[Ljava.lang.String;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.sequenceScalar.SeqIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_50()Z
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:sorted([I)Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:enabled()Z
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
daikon.inv.unary.stringsequence.EltOneOfString:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoString.StringEqual:add_modified(Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.Member:Member(Ldaikon.PptSlice;)V
utilMDE.SimpleLog.LongVal:LongVal(J)V
utilMDE.MathMDE:mod_positive(JJ)J
daikon.inv.unary.sequence.EltOneOf:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaCharStream:getBeginLine()I
jtb.JavaParser:jj_3R_63()Z
daikon.VarInfoName.InorderFlattener:nodes()Ljava.util.List;
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.Quant:pairwiseDivides([I[I)Z
jtb.syntaxtree.Modifiers:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InstanceOfExpression;)V
jtb.syntaxtree.NodeChoice:getParent()Ljtb.syntaxtree.Node;
jtb.syntaxtree.Block:accept(Ljtb.visitor.Visitor;)V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.VarInfo:new_ppt()V
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_116()Z
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
jtb.JavaParser:jj_3R_70()Z
jtb.syntaxtree.NodeOptional:accept(Ljtb.visitor.Visitor;)V
daikon.tools.jtb.Ast:create(Ljava.lang.String;Ljava.lang.String;)Ljtb.syntaxtree.Node;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_daikon()Ljava.lang.String;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.ModBitTracker:split(I)I
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.Intern:intern([D)[D
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.inv.unary.sequence.EltUpperBound:EltUpperBound(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_75()Z
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.FormalParameter:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeSequence:accept(Ljtb.visitor.Visitor;)V
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
jtb.JavaParser:jj_3R_118()Z
jtb.JavaParser:jj_2_16(I)Z
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ShiftExpression;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual()V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.Block;)V
daikon.inv.unary.string.SingleString:SingleString(Ldaikon.PptSlice;)V
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.Quant:memberOf(F[D)Z
daikon.VarInfoName:hasNodeOfType(Ljava.lang.Class;)Z
daikon.inv.unary.string.OneOfString:format_simplify()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.AndExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:enabled()Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:PairwiseIntGreaterThan(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
jtb.JavaParser:jj_3R_55()Z
jtb.syntaxtree.UnaryExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
jtb.JavaParser:jj_3R_47()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.inv.binary.sequenceScalar.SequenceScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.EqualityExpression;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.Quant:lexLT([I[I)Z
jtb.JavaParser:jj_3_17()Z
daikon.inv.unary.stringsequence.EltOneOfString:format_daikon()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:enabled()Z
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
jtb.syntaxtree.PackageDeclaration:accept(Ljtb.visitor.Visitor;)V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.ValueTuple:isMissingFlow(I)Z
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ResultType;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:isIOASet()Z
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.sequenceString.SequenceString:valid_types([Ldaikon.VarInfo;)Z
jtb.syntaxtree.ResultType:accept(Ljtb.visitor.Visitor;)V
daikon.inv.ternary.threeScalar.ThreeScalar:var1()Ldaikon.VarInfo;
daikon.inv.unary.sequence.EltOneOf:is_boolean()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryPrefix;)V
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceString.SequenceString:seq_first()Z
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_117()Z
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.Reverse:format_simplify_explicit()Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.Debug:logDetail()Z
daikon.test.TestAst:checkMatch(Ljava.lang.String;Ljtb.syntaxtree.MethodDeclaration;Ldaikon.tools.jtb.PptNameMatcher;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArgument;)V
daikon.VarInfo:apply_subscript(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.inv.binary.sequenceScalar.Member:format_daikon()Ljava.lang.String;
daikon.Quant:eq(JJ)Z
daikon.inv.unary.sequence.EltUpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.NoDuplicates:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
jtb.syntaxtree.NodeChoice:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_esc()Ljava.lang.String;
daikon.inv.binary.twoString.TwoString:var2()Ldaikon.VarInfo;
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeSequence;)V
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.ProglangType:dimensions()I
jtb.JavaParser:jj_3_19()Z
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.FormalParameters;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltOneOf:subarray_rep()Ljava.lang.String;
daikon.Quantify.IOAQuantification:IOAQuantification([Ldaikon.VarInfo;)V
jtb.syntaxtree.VariableDeclaratorId:VariableDeclaratorId(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.inv.binary.twoSequence.Reverse:enabled()Z
daikon.VarInfoName:hashCode()I
daikon.PptName:isCombinedExitPoint()Z
daikon.inv.Invariant:is_false()Z
daikon.inv.unary.stringsequence.EltOneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.TwoSequence:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
daikon.inv.unary.string.OneOfString:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltNonZero:is_pointer()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReturnStatement;)V
daikon.inv.unary.sequence.EltOneOf:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:get_proto()Ldaikon.inv.Invariant;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.tools.jtb.Ast:typeMatch(Ljava.lang.String;Ljava.lang.String;)Z | OPERATOR | 38856 | == -> >
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
daikon.VarComparabilityNone:indexType(I)Ldaikon.VarComparability;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_simplify()Ljava.lang.String;
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
jtb.JavaParser:jj_3R_163()Z
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_2_13(I)Z
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.EltNonZero:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.FormalParameter:FormalParameter(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Type;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_daikon()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eltsEqual([II)Z
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.syntaxtree.ConditionalExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_ioa()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Name;)V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:get_proto()Ldaikon.inv.Invariant;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
jtb.JavaParser:jj_3R_85()Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:PairwiseIntLessEqual(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljtb.syntaxtree.Node;)Z
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptName:getMethodName()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:isScalar()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.Quant:eltwiseGT([I)Z
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParser:jj_3R_210()Z
daikon.inv.unary.sequence.EltUpperBound:format_ioa()Ljava.lang.String;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.sequenceString.MemberString:add_modified([Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalExpression;)V
jtb.JavaParser:jj_3R_104()Z
daikon.inv.Invariant:justified()Z
daikon.inv.unary.sequence.EltNonZero:format_simplify()Ljava.lang.String;
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
676 4 1655 2 1132 2 1223 2 179 2 1393 2 550 2 1191 2 551 2 
946 2 754 2 198 2 1826 2 428 2 21 2 1211 2 1446 6 1636 6 1455 2 1478 6 
179 2 1116 4 697 2 1650 2 1224 6 111 2 248 6 396 6 214 4 1655 2 939 2 1146 6 1242 2 
869 10 1525 10 1172 10 1091 2 1058 2 1439 8 1818 16 1270 2 522 2 1641 8 1068 10 1277 16 1702 8 492 16 1282 6 179 6 180 12 92 8 1428 4 801 6 1810 28 1382 4 1655 6 1742 26 1318 4 80 2 23 2 1052 2 1747 10 1575 4 
1040 4 562 6 
731 2 
225 2 1717 2 544 2 1553 2 1666 2 549 4 923 2 1030 2 410 2 762 2 975 2 1107 2 1670 2 1802 2 179 4 1511 2 1519 2 1051 2 1321 2 1052 2 705 4 433 2 575 2 712 4 1691 2 714 2 318 2 1328 2 199 2 446 2 1006 2 325 2 1223 2 91 4 737 2 863 2 1655 4 958 2 1840 2 1164 2 102 2 276 2 1356 2 538 2 
1525 15 869 15 1172 15 1088 3 784 2 1610 4 1301 2 1818 32 1439 19 377 4 170 5 1757 4 1308 4 725 2 1311 4 524 6 1068 6 151 2 1277 32 492 32 1508 6 1647 8 883 6 1282 4 179 4 1832 4 180 22 92 6 1428 2 801 4 1810 52 1459 6 1655 4 1742 47 985 6 80 2 60 4 1747 15 474 2 
72 2 1840 2 1694 2 
917 2 1626 2 120 2 611 2 52 2 332 2 426 2 789 2 776 22 410 2 986 2 348 2 1003 10 1618 2 
1525 2 869 2 1172 2 1264 2 1439 2 1818 2 614 2 1307 2 1068 4 1277 2 492 2 1620 2 1282 2 180 2 857 2 1428 2 932 2 1810 6 701 2 602 2 1597 2 1742 4 1747 2 
1525 4 869 4 1172 4 883 6 417 2 1832 4 1610 4 180 4 37 2 1818 8 1459 6 1810 16 1382 2 1742 12 1747 4 1277 8 492 8 
806 2 1634 2 226 2 483 2 1694 2 1100 2 199 2 1758 2 202 4 1273 4 655 2 145 2 1535 2 694 2 1034 2 46 2 1337 2 1507 2 72 4 415 10 91 2 300 14 1153 2 393 2 800 2 79 2 1840 6 464 2 1543 2 1661 2 
32 2 1095 2 1724 2 1856 2 731 2 1917 2 702 2 638 2 98 2 220 2 
0 16 2 2 1090 2 1849 2 108 2 1850 16 872 5 231 2 968 4 232 2 616 3 113 24 233 6 876 1 1369 2 493 3 765 2 354 2 118 2 1737 2 1515 2 979 2 980 2 126 2 15 2 1872 2 983 2 1874 4 1122 2 364 2 1522 1 367 2 1130 2 255 2 31 2 1881 1 1134 4 1137 2 1139 2 38 1 1397 2 1400 2 1274 2 1889 2 149 2 150 2 527 2 792 2 1279 4 1281 1 795 2 1648 2 157 12 1540 6 1541 2 273 2 1655 34 537 12 159 1 1660 1 59 2 913 2 399 2 1167 2 1296 2 1902 3 674 2 400 1 1662 2 809 2 283 2 282 32 166 2 284 2 1303 2 921 1 1789 3 285 2 1183 2 688 2 1793 3 925 8 291 2 411 2 550 2 1560 2 1032 4 1561 2 553 2 179 32 558 2 1451 32 1806 4 927 16 1563 1 929 3 76 2 930 1 184 2 303 2 563 2 1921 2 566 1 829 2 706 2 1687 4 571 1 1325 2 192 3 1578 6 439 2 1928 8 1213 2 1061 2 1931 3 320 2 1062 2 1064 16 1472 3 1331 2 724 8 1933 2 1587 1 941 2 1335 1 1476 2 588 1 849 2 1588 2 1827 2 1937 4 209 6 734 1 736 2 1833 3 326 2 740 2 210 2 956 2 745 2 1596 2 462 3 330 2 1488 24 1081 2 749 2 1229 2 1949 2 1492 3 
1655 2 933 2 
1655 4 1260 2 505 2 
1427 2 
964 10 478 2 1495 2 1497 6 967 2 1499 2 487 2 970 2 972 4 7 2 974 10 973 2 9 2 495 2 11 2 496 42 1510 2 497 10 1512 2 977 32 979 2 501 32 502 12 1517 66 503 2 981 2 13 2 982 2 17 6 18 4 987 2 24 14 990 2 27 6 517 2 1529 2 39 4 518 8 997 2 1531 2 523 2 41 2 1000 10 1001 2 1002 10 42 2 43 2 1534 10 1004 10 48 52 1011 2 1009 4 1013 2 534 2 1014 2 1018 2 1020 2 1546 2 539 2 63 28 542 10 1550 64 1549 198 543 4 545 6 67 4 1552 2 548 226 1557 24 69 8 1031 2 1559 2 552 2 1035 2 1036 46 1039 28 554 2 555 2 557 2 559 2 560 26 1564 216 561 4 77 2 78 10 1047 2 1570 396 1048 10 1571 102 1049 2 1050 180 568 10 1054 2 569 2 570 10 83 2 574 10 1579 2 1581 4 577 404 1582 8 1059 14 1060 24 586 52 589 2 592 2 591 12 89 4 1589 180 90 92 1592 16 595 104 1594 2 1072 2 1593 2 1073 10 599 2 1600 4 1601 2 1085 28 607 8 1087 382 106 2 1089 2 1609 6 1092 4 608 2 1093 28 613 4 110 48 1612 2 1613 4 1101 2 1614 2 618 2 1103 2 620 6 1106 2 621 126 1619 4 1109 4 622 12 116 8 1114 2 1623 170 628 14 1118 4 630 2 121 2 122 8 124 2 127 104 128 4 1628 2 1121 10 1123 10 131 12 133 2 640 2 1131 180 1133 2 645 8 1135 2 138 2 139 4 1138 2 1142 2 650 12 652 78 142 2 1640 2 143 540 147 4 148 2 1149 4 152 2 1643 4 661 2 663 2 1151 8 1152 2 1154 24 1649 2 156 180 1156 44 1157 8 668 2 1654 256 1655 10 1161 4 158 2 1659 6 671 24 672 10 673 4 1165 18 1166 12 1170 2 164 18 1175 2 1177 4 679 6 1180 4 168 4 1181 2 686 2 171 10 1187 2 1186 4 691 4 172 10 1189 2 1190 28 1192 10 179 10 1671 6 182 2 699 8 700 2 1675 26 1676 10 185 4 1678 6 1200 58 1201 2 1679 20 1204 2 1682 4 1684 4 707 2 1685 28 1210 28 709 2 710 10 715 10 718 2 717 2 716 4 719 82 1693 4 720 2 1215 2 197 2 196 8 1216 8 200 8 201 2 203 8 204 2 1699 2 1217 2 729 8 730 2 205 104 1701 104 1705 10 732 6 1708 126 1220 2 1221 2 735 70 738 12 1711 10 1228 8 750 52 751 18 1715 4 753 18 1719 2 227 6 1231 12 756 4 757 2 230 2 1232 2 758 4 760 16 1727 180 1728 2 235 2 236 2 1732 10 766 14 1733 8 767 8 1248 12 239 2 240 2 1734 4 1735 10 772 4 1252 364 1740 28 250 8 1255 2 1253 10 1744 2 1745 216 1258 396 1746 26 254 2 256 8 1262 2 1265 4 785 2 787 24 1754 6 1271 2 260 2 1755 2 1756 2 1760 2 1762 90 1763 24 1766 226 1768 28 1769 4 793 2 1770 2 1283 4 1284 4 1772 2 797 8 1774 2 1285 4 272 2 802 70 1288 14 1287 2 1290 8 1293 2 1292 10 804 42 277 8 1781 10 1297 2 808 114 1784 180 1785 4 281 10 810 2 1786 10 1788 4 1305 26 1790 10 1310 10 288 10 1792 8 289 2 814 24 1795 94 1797 2 1313 8 298 24 819 2 302 2 1809 4 823 4 827 20 1317 10 1319 2 307 180 1320 44 828 364 311 4 830 2 310 12 1323 2 1814 2 831 28 832 4 314 2 834 2 836 2 837 2 840 2 319 22 1820 10 841 2 842 4 844 2 322 2 846 2 1823 8 852 10 1828 28 1829 62 854 2 855 2 858 4 859 2 1836 2 860 22 1837 24 1344 2 866 10 1346 4 333 24 1349 2 1351 10 1354 2 1355 2 337 2 1357 8 871 104 1851 2 1852 236 341 18 1853 2 873 2 1855 4 875 10 346 10 878 6 347 2 1368 18 1370 4 1861 226 1862 2 1371 180 1864 2 1866 2 355 4 1376 18 1870 6 1378 98 1379 2 886 2 887 10 365 2 1387 2 366 22 1388 2 368 14 1879 2 890 4 371 18 892 2 1390 2 372 2 895 4 1883 8 897 344 374 2 1395 2 1396 10 1886 6 1399 36 378 2 1403 30 1405 4 380 44 384 2 1888 2 1416 2 1414 60 1890 2 1893 2 1894 4 390 2 1420 6 905 4 1895 2 394 2 1897 2 1898 44 908 28 1899 66 1431 8 914 8 1432 2 1904 6 401 2 1437 2 918 2 1441 36 1908 160 406 8 924 10 1910 10 1912 12 414 10 1450 2 418 10 419 2 1453 4 931 2 424 2 1458 26 1460 286 425 160 1462 2 1461 2 1922 4 1465 4 1466 2 432 6 1924 26 1925 2 934 18 1468 2 435 2 436 58 437 2 1930 2 1471 20 1475 6 448 4 945 2 1480 2 451 2 949 2 1938 2 951 146 950 2 953 2 955 10 458 2 460 2 1943 2 1944 8 959 2 465 72 961 10 1945 2 468 2 469 2 1948 2 963 26 470 6 472 10 471 2 
129 2 1358 1 662 2 50 2 
662 2 1053 2 
1555 2 565 2 1840 2 662 2 1318 2 221 2 28 2 
662 2 1703 2 28 2 
662 2 764 2 28 2 
1568 2 129 2 1332 2 
662 2 28 2 
1568 2 1907 2 
662 2 695 2 
1568 2 129 2 748 2 
1429 2 129 2 1094 2 
129 2 610 2 1518 2 
129 2 1392 2 940 2 
129 2 482 2 188 2 
1568 2 181 2 
662 2 647 2 
1094 2 123 2 
826 2 1518 2 
940 2 1935 2 
453 2 188 2 
1568 2 1339 2 
216 2 188 2 
940 2 1243 2 
262 2 1518 2 
1094 2 1413 2 
1568 2 129 2 748 2 387 2 
528 2 1568 2 129 2 748 2 387 2 
1568 2 129 2 1731 2 
1568 2 129 2 1124 2 
1246 2 1206 2 427 2 1188 2 
1555 2 1840 2 1470 2 612 2 
1555 2 565 2 508 2 1840 2 1470 2 612 2 
1555 2 1840 2 662 2 1318 2 301 2 28 2 
51 2 1107 2 
1555 2 1840 2 1223 2 1494 2 
940 2 1226 2 
454 2 188 2 
593 2 1094 2 
1526 2 1518 2 
1796 2 188 2 1518 2 
188 2 1518 2 1269 2 
359 2 188 2 1518 2 
847 2 188 2 1518 2 
84 2 1695 6 1555 2 1538 2 1071 6 1834 2 1840 2 1523 2 
1568 2 443 2 
223 2 1086 4 176 2 1663 2 768 2 1341 2 183 2 739 2 1119 2 520 2 86 2 776 6 1463 2 960 2 1777 2 1843 2 61 2 882 4 
129 2 1839 2 
326 2 
0 6 2 2 1849 2 231 2 968 2 233 2 765 2 624 2 1737 2 1515 2 979 2 1627 2 15 2 983 2 509 2 1874 4 364 2 367 2 1130 2 31 2 1134 2 1397 2 1143 2 261 2 149 2 150 2 527 2 792 2 1279 2 1421 2 1008 2 1540 6 157 6 1541 2 1655 26 537 6 1660 4 400 2 1547 2 282 4 546 4 1182 2 688 2 550 2 1032 4 1561 2 1801 2 179 26 558 2 1451 6 1806 4 1921 2 566 2 829 2 706 2 1687 4 1578 4 1061 2 839 2 1062 2 1331 2 1473 2 1933 6 941 2 849 2 1936 4 209 2 1075 2 745 2 1596 2 95 2 330 4 1229 2 217 2 
0 6 2 2 1090 2 107 2 1849 2 231 2 968 2 233 2 765 2 624 2 1737 2 1515 2 979 2 15 2 983 2 1874 4 364 2 367 2 1130 2 31 2 1134 2 1397 2 1143 2 261 2 149 2 150 2 527 2 792 2 1279 2 1421 2 1008 2 906 2 1540 6 157 6 1541 2 1655 26 537 6 1660 2 400 2 1547 2 282 4 546 4 1182 2 688 2 411 2 550 2 1032 4 1561 2 1801 2 179 26 558 2 1451 6 1806 4 1921 2 566 2 829 2 706 2 1687 4 1578 6 1061 2 839 2 1062 2 1331 2 1473 2 1933 6 941 2 849 2 1936 4 209 2 1075 2 745 2 1596 2 1712 2 330 4 749 2 1229 2 217 2 
375 2 
1218 2 206 2 
916 4 1606 8 2 2 344 2 1239 2 5 2 688 2 1446 6 1032 2 1108 2 765 2 625 4 1113 2 1803 4 179 6 1115 4 73 2 1915 2 979 2 633 2 1455 2 1566 2 1629 2 21 4 428 4 1875 2 777 2 1521 8 1261 2 1813 2 1687 2 1749 2 1817 2 893 2 136 10 1636 6 194 2 1397 2 578 2 195 4 198 2 1334 2 1698 2 149 2 941 2 1478 6 267 2 851 2 733 2 270 2 954 2 331 2 1540 4 1656 2 1655 12 215 4 1776 2 58 2 605 2 1603 2 
916 4 1606 8 754 2 2 2 344 2 1239 2 688 2 5 2 1446 6 1032 2 1108 2 765 2 625 4 1113 2 179 6 1803 4 73 2 1115 4 1915 2 979 2 633 2 1455 2 1566 2 21 4 428 4 777 2 1521 8 1261 2 1813 2 1687 2 1749 2 1817 2 893 2 136 10 1636 8 194 2 1397 2 578 2 195 4 198 2 323 2 1334 2 1698 2 149 2 941 2 388 2 1478 8 267 2 1707 4 851 2 733 2 270 2 954 2 331 2 1540 4 1656 2 1655 12 215 4 1776 2 58 2 605 2 1603 2 
916 4 267 2 893 2 1115 4 1915 2 1636 2 270 2 954 2 633 2 195 2 331 2 1239 2 1776 2 58 2 428 2 21 2 1698 2 1446 2 
916 4 1606 4 754 2 2 2 344 2 1239 2 5 2 688 2 1446 4 1032 2 1108 2 765 2 625 4 1113 2 1803 4 179 6 1115 4 73 2 1915 2 979 2 633 2 1566 2 1629 2 21 4 428 4 1875 2 777 2 1521 4 1261 2 1813 2 1687 2 1749 2 1817 2 893 2 136 6 1636 6 194 2 1397 2 578 2 195 4 198 2 1334 2 1698 2 149 2 941 2 1478 6 267 2 851 2 733 2 270 2 954 2 331 2 1540 4 1656 2 1655 12 215 4 1776 2 58 2 605 2 1603 2 
916 4 1606 4 2 2 344 2 1239 2 5 2 688 2 1446 6 1032 2 1108 2 765 2 625 4 1113 2 1803 4 179 6 1115 4 73 2 1915 2 979 2 633 2 1566 2 1629 2 21 4 428 4 1875 2 777 2 1521 4 1261 2 1813 2 1687 2 1749 2 1817 2 893 2 136 6 1636 4 194 2 1397 2 578 2 195 4 198 2 1334 2 1698 2 149 2 941 2 1478 6 946 2 267 2 851 2 733 2 270 2 954 2 331 2 1540 4 1656 2 1655 12 215 4 1776 2 58 2 605 2 1603 2 
916 4 1606 4 2 2 344 2 1239 2 5 2 688 2 1446 6 1032 2 1108 2 765 2 625 4 1113 2 1803 4 179 6 1115 4 73 2 1915 2 979 2 633 2 1455 2 1566 2 1629 2 21 4 428 4 1875 2 777 2 1521 8 1261 2 1813 2 1687 2 1749 2 1817 2 893 2 136 6 1636 6 194 2 1397 2 578 2 195 4 198 2 1334 2 1698 2 149 2 941 2 1478 6 267 2 851 2 733 2 270 2 954 2 331 2 1540 4 1656 2 1655 12 215 4 1776 2 58 2 605 2 1603 2 
916 4 1606 8 2 2 344 2 1239 2 5 2 688 2 1446 8 1032 2 1108 2 765 2 625 4 1113 2 1803 4 179 6 1115 4 73 2 1915 2 979 2 633 2 1455 2 1566 2 1629 2 21 4 428 4 1875 2 777 2 1521 8 1261 2 1813 2 1687 2 1749 2 1817 2 893 2 136 10 1636 6 194 2 1397 2 578 2 195 4 198 2 1334 2 1698 2 149 2 941 2 1478 8 946 2 267 2 851 2 733 2 270 2 954 2 331 2 1540 4 1656 2 1655 12 215 4 1776 2 58 2 605 2 1603 2 
916 4 1606 8 2 2 344 2 1239 2 5 2 688 2 1446 6 1032 2 1108 2 765 2 625 4 1113 2 1803 4 179 6 1115 4 73 2 1915 2 979 2 633 2 1455 2 1566 2 1629 2 21 4 428 4 1875 2 777 2 1521 8 1261 2 1813 2 1687 2 1749 2 1817 2 893 2 136 10 1636 6 194 2 1397 2 578 2 195 4 198 2 1334 2 1698 2 149 2 941 2 1478 6 267 2 851 2 733 2 270 2 954 2 331 2 1540 4 1656 2 1655 12 215 4 1776 2 58 2 605 2 1603 2 
0 6 2 2 231 2 1498 6 968 2 1239 2 5 2 233 2 490 6 765 2 1737 2 979 2 1739 2 505 6 15 2 1520 6 1743 1 21 4 777 2 778 6 1521 2 25 6 1261 2 1749 4 31 2 1268 1 261 4 1279 2 794 2 1280 7 267 2 49 2 796 1 270 2 1540 6 1541 2 58 2 537 4 1776 2 805 2 282 2 815 2 550 2 1032 4 294 6 1800 2 1801 2 558 2 1803 4 1804 2 1806 4 73 2 1807 1 1566 2 822 2 829 2 1813 2 573 2 1817 2 833 6 1578 6 578 2 580 1 1062 2 1331 2 1334 2 1065 2 851 2 1835 2 861 2 598 2 1596 2 865 1 331 2 605 2 1603 2 870 4 1608 2 1849 2 1361 7 1097 6 344 2 1364 2 1108 2 625 8 1113 2 1115 4 631 8 633 2 1383 2 1874 4 1629 2 1126 2 1389 6 1130 2 1134 2 893 2 1636 4 136 2 1397 2 1144 2 1406 6 654 6 144 2 1642 2 149 2 150 12 900 2 1148 10 657 1 1417 2 659 2 907 2 1427 6 157 4 1159 2 1655 46 1656 4 161 6 916 4 919 2 1664 2 1909 2 688 2 1446 8 690 2 411 2 1914 2 179 24 1451 8 1915 2 420 2 428 4 1921 2 933 6 1687 4 1212 6 194 2 1928 2 1214 2 195 4 198 4 1698 2 1933 6 941 2 1478 12 946 4 1936 4 947 1 209 2 733 2 1940 1 954 2 745 2 215 6 749 2 1946 4 1229 2 217 2 1716 2 
0 6 870 4 2 2 1608 2 1849 2 1097 6 1364 2 344 2 1498 6 231 2 968 4 1239 2 5 2 233 2 490 6 8 2 1108 2 765 2 625 8 1113 2 1115 4 1737 2 631 8 979 2 1739 2 633 2 505 6 15 2 1383 2 1629 2 1874 4 1520 6 21 4 778 6 777 2 1521 6 1126 2 25 6 1389 6 1261 2 1130 2 1749 4 31 2 893 2 1134 4 136 2 1636 8 1397 2 1144 2 261 4 654 6 1406 6 144 2 1642 2 900 2 150 12 149 2 1148 10 1417 2 1279 4 794 2 267 2 659 2 49 2 907 2 270 2 1427 6 1159 2 157 8 1540 6 1541 2 1656 4 1655 48 1776 2 537 8 58 2 805 2 161 6 916 4 1664 2 919 2 282 2 1909 2 688 2 1446 8 690 2 411 2 815 2 550 2 1032 4 294 6 1800 2 1801 2 1914 2 1804 2 1451 8 1803 4 179 26 558 2 73 2 1806 4 1915 2 420 2 1455 4 1566 2 1046 2 822 2 1921 2 428 4 933 6 829 2 1813 2 1687 4 573 2 1817 2 833 6 1212 6 1578 6 1928 2 194 2 1214 2 578 2 195 4 1062 2 198 4 1331 2 1334 2 1065 2 1698 2 1933 6 941 2 1478 12 1936 4 851 2 733 2 209 2 1835 2 861 2 954 2 598 2 1596 2 745 2 330 2 331 2 215 6 749 2 1946 4 217 2 1229 2 605 2 1603 2 1716 2 
0 6 870 4 1606 4 2 2 1608 2 1849 2 1097 6 1364 2 344 2 1498 6 231 2 968 4 1239 2 5 2 233 2 490 6 8 2 1108 2 765 2 625 8 1113 2 1115 4 1737 2 631 8 979 2 1739 2 633 2 505 6 15 2 1383 2 1629 2 1874 4 1520 6 21 4 778 6 777 2 1521 6 1126 2 25 6 1389 6 1261 2 1130 2 1749 4 31 2 893 2 1134 4 136 6 1636 8 1397 2 1144 2 261 4 654 6 1406 6 144 2 1642 2 900 2 150 12 149 2 1148 10 1417 2 1279 4 794 2 267 2 659 2 49 2 907 2 270 2 1427 6 1159 2 157 8 1540 6 1541 2 1656 4 1655 48 1776 2 537 8 58 2 805 2 161 6 916 4 1664 2 919 2 282 2 1909 2 688 2 1446 8 690 2 411 2 815 2 550 2 1032 4 294 6 1800 2 1801 2 1914 2 1804 2 1451 8 1803 4 179 26 558 2 73 2 1806 4 1915 2 420 2 1455 4 1566 2 1046 2 822 2 428 4 1921 2 933 6 829 2 1813 2 1687 4 573 2 1817 2 833 6 1212 6 1578 6 1928 2 194 2 1214 2 578 2 195 4 1062 2 198 4 1331 2 1334 2 1065 2 1698 2 1933 6 941 2 1478 12 1936 4 851 2 733 2 209 2 1835 2 861 2 954 2 598 2 1596 2 745 2 330 2 331 2 215 6 749 2 1946 4 217 2 1229 2 605 2 1603 2 1716 2 
0 8 754 2 2 2 231 2 1498 12 968 4 1239 2 5 2 233 4 490 6 8 2 1505 6 765 2 1737 2 979 2 1739 2 505 12 15 2 1520 12 21 4 777 2 778 6 1521 6 25 6 1261 2 1749 4 31 2 1751 2 261 4 1279 4 529 6 794 2 267 2 49 2 270 2 54 2 1540 6 1541 2 58 2 537 10 1776 2 1780 2 1294 2 805 2 540 6 282 4 1027 6 65 6 815 2 550 2 1032 4 816 2 294 6 1800 2 1801 2 558 2 1803 4 1804 2 1806 4 73 2 1566 2 1046 2 1315 6 822 2 829 2 1813 2 573 2 1817 2 833 6 1578 6 578 2 1062 2 1331 2 1334 2 585 6 1065 2 851 2 1835 2 861 2 94 6 598 2 1596 2 330 2 331 2 605 2 1603 2 870 4 1606 4 1608 2 1849 2 1097 6 344 2 1364 2 1108 2 625 8 1113 2 1115 4 631 8 633 2 1383 2 1874 4 1629 2 1127 2 1126 2 1389 6 1130 2 1134 4 893 2 1636 10 136 6 1397 2 1144 2 1406 6 654 12 144 2 1642 2 149 2 150 10 900 2 1148 8 1417 2 659 2 907 4 1155 6 1427 12 157 10 1159 2 1655 52 1656 4 1900 2 161 6 916 4 919 2 1664 2 403 2 1909 2 688 2 1446 10 690 2 411 2 1914 2 179 24 1451 12 1915 2 420 2 1455 4 1921 2 428 4 933 12 1687 4 1212 6 194 2 1928 4 1214 2 195 4 198 4 1698 2 1933 8 941 2 1478 16 946 2 1936 6 209 4 733 2 954 2 745 2 215 6 749 2 1946 4 1229 2 217 2 
916 2 1606 4 1817 2 136 4 1636 6 194 2 344 2 578 2 198 2 1239 2 5 2 1334 2 1698 2 1446 6 1478 4 1108 2 625 2 267 2 851 2 1803 2 73 2 1115 2 270 2 1455 2 633 2 331 2 1655 4 215 2 1629 2 58 2 21 4 428 4 1521 6 1603 2 1813 2 
0 6 2 2 1849 2 339 2 344 2 231 2 615 3 1239 2 5 2 233 3 765 2 1108 2 625 2 1115 2 1737 2 1117 2 979 2 633 2 15 2 1629 2 1874 4 21 4 1521 6 1130 2 1636 6 136 2 1397 2 261 2 149 2 150 4 1148 2 267 2 270 2 1540 6 1541 2 1655 28 58 2 916 2 282 3 688 2 1446 6 411 2 550 2 1032 4 1801 2 1803 2 179 24 558 2 1451 8 1806 4 73 2 76 2 1455 2 428 4 1921 2 829 2 1574 2 1813 2 1687 4 1817 2 1578 6 439 2 194 2 578 2 1062 2 198 2 1331 2 1334 2 1698 2 1933 6 941 2 1478 4 1936 4 851 2 209 3 1338 2 326 2 740 2 745 2 1596 2 331 2 1714 2 215 2 749 2 1229 2 605 2 217 2 1603 2 1716 2 
851 2 64 2 1813 2 
851 2 64 2 1813 2 
0 2 870 2 477 2 1606 4 754 4 2 2 1849 2 968 4 1239 4 1730 2 765 2 625 4 117 2 1113 2 1115 2 1737 2 978 2 979 2 633 2 15 2 1874 4 21 4 1521 6 1261 2 1130 2 1749 2 31 4 893 2 1134 4 136 6 1636 12 1397 2 261 6 1406 2 1533 2 1642 2 1147 4 149 2 150 4 1148 2 1150 2 791 2 1646 2 1279 4 267 2 395 2 157 4 1540 6 1541 2 1656 4 1655 24 57 2 537 4 1660 2 916 2 64 2 282 2 1182 4 688 2 1558 2 1794 2 1446 12 411 2 550 2 1032 4 1801 2 1913 2 1914 2 1804 2 179 16 558 2 1451 2 1803 2 1806 4 1915 2 1455 4 1921 2 428 4 829 2 1813 4 1687 4 1817 2 1578 6 1580 4 194 2 1329 2 195 4 1062 2 198 4 1331 2 1933 2 941 2 1336 2 1478 16 946 4 851 6 733 2 745 2 1596 2 1076 2 215 4 749 2 1946 2 1229 2 217 2 218 2 
1056 2 1913 2 117 2 573 2 179 2 1159 2 1655 4 1406 2 1776 2 688 2 1794 2 1385 2 150 2 656 2 1946 2 1148 2 206 2 
0 2 870 2 477 2 1606 4 754 4 2 2 1849 2 968 4 874 2 1239 4 1730 2 765 2 625 4 117 2 1113 2 1115 2 1737 2 979 2 633 2 15 2 1874 4 21 4 513 2 1521 6 1261 2 1130 2 1749 4 31 4 1263 2 893 2 1134 4 136 6 1636 12 1397 2 261 6 1406 2 1642 2 1147 4 149 2 150 2 1150 2 1646 2 1279 4 267 2 157 4 1540 6 1541 2 1656 4 1655 24 57 4 537 4 916 2 680 2 64 2 282 4 1182 4 688 2 1558 2 1794 2 1446 12 411 2 550 2 1032 4 1801 2 1913 2 1914 2 1804 2 1803 2 179 16 558 2 1451 2 1806 4 1915 2 1455 4 1566 2 1569 2 1921 2 428 4 829 2 1813 4 1687 4 1817 2 1578 6 1580 4 194 2 1329 2 195 4 1062 2 198 4 1331 2 1933 2 941 2 1336 2 1478 16 946 4 851 6 733 2 745 2 1596 2 1076 2 215 4 749 2 1229 2 217 2 218 2 
0 2 870 2 477 2 1606 4 754 4 2 2 1849 2 968 4 761 2 1239 4 1730 2 765 2 625 4 117 2 1113 2 1115 2 1737 2 979 2 633 2 15 2 1874 4 21 4 1521 6 1261 2 1130 2 1749 4 31 4 893 2 1134 4 136 6 1636 12 1752 2 1397 2 261 6 1406 2 1642 2 1147 4 149 2 150 4 1148 2 1150 2 1646 2 1279 4 267 2 531 2 157 4 1540 6 1541 2 1656 4 1655 24 57 2 1542 2 537 4 1660 1 916 2 1173 2 64 2 282 2 1182 4 688 2 1558 2 1794 2 1446 12 411 2 550 2 1032 4 1801 2 1913 2 1914 2 1804 2 179 16 558 2 1451 2 1803 2 1806 4 1915 2 1455 4 1566 2 1921 2 428 4 829 2 1813 4 1687 4 1817 2 1578 6 1580 4 194 2 1329 2 195 4 1062 2 198 4 1331 2 1933 2 941 2 1336 2 1478 16 946 4 851 6 733 2 745 2 1596 2 1076 2 215 4 749 2 1946 2 1229 2 217 2 218 2 
0 32 1 2 2 2 965 2 966 2 4 2 969 2 6 2 10 6 976 2 12 2 979 2 980 2 14 2 15 8 16 2 984 2 19 1 20 16 22 2 989 3 988 18 26 2 29 2 30 2 31 18 33 8 992 40 35 2 34 38 36 2 993 1 38 1 994 80 995 2 996 158 40 3 998 2 999 3 44 2 45 156 47 2 1007 2 1008 2 1012 2 1010 106 54 2 53 2 55 4 56 2 1016 2 1017 2 1019 3 1021 3 59 2 60 4 1022 2 62 2 1023 2 1024 24 1025 2 1026 2 1028 124 66 78 1029 78 70 34 1032 8 1033 78 1038 2 1037 20 1041 76 71 2 1042 2 1043 78 1044 60 74 2 75 2 1045 66 80 2 81 2 82 3 1055 38 1057 2 85 54 1063 2 1062 84 1064 52 1065 2 1066 2 1067 2 1069 2 88 4 1070 2 1074 20 92 6 93 2 1075 2 96 2 1077 78 1078 3 1080 2 1081 2 97 4 1082 2 99 2 1083 2 100 2 101 2 1084 2 103 2 104 2 105 2 108 2 1096 6 109 2 1099 2 1102 2 113 15 114 2 115 2 1105 2 1104 2 1110 2 1111 2 1112 40 118 2 119 2 1117 2 125 4 126 2 130 10 1122 2 1125 10 1127 2 132 2 1128 20 1129 2 1130 2 134 2 135 10 137 10 1136 2 140 2 1139 2 1140 26 1141 2 1143 2 1145 2 141 38 146 2 144 16 150 10 149 2 1148 2 153 2 154 3 155 4 1158 2 157 176 1160 2 159 15 1162 6 1163 3 1167 2 1168 2 162 2 1169 2 163 2 1172 6 165 38 1174 2 1176 24 1179 8 167 2 169 2 170 6 1184 2 1183 2 174 2 177 2 175 2 178 20 1193 10 1194 2 1195 2 179 966 180 10 1196 2 1198 3 184 2 186 2 1199 166 1202 2 1203 4 187 78 1205 2 189 3 190 2 1207 10 1209 28 1208 16 1213 2 193 14 207 2 208 6 1219 2 209 16 1222 2 210 2 1225 2 1227 2 213 3 211 20 212 4 217 2 1229 4 219 4 222 38 224 80 1230 2 228 2 229 3 1233 4 231 2 1235 2 1234 36 1236 4 1237 3 1238 38 232 2 1240 3 1241 2 233 46 234 78 1244 2 237 2 1245 2 238 18 242 2 1247 2 241 2 1250 2 1249 3 1251 2 243 80 244 3 245 2 247 2 249 3 1254 2 251 22 1256 18 1257 2 252 2 1259 2 253 2 257 3 258 3 261 2 1275 2 1276 2 264 2 265 80 1277 12 266 2 1281 1 269 2 271 2 274 2 273 16 1289 2 1291 2 1295 12 1294 2 1298 2 278 34 1299 3 283 2 282 110 1300 2 1302 3 1303 2 284 2 1304 2 285 2 1306 4 1309 2 1312 26 290 3 292 2 293 38 297 1 296 2 299 4 1314 2 1316 38 303 2 304 2 306 2 1322 2 309 6 312 234 1325 2 315 3 316 2 1327 80 1326 2 317 3 320 2 1331 2 1330 2 1333 2 321 16 324 102 1338 2 1340 2 327 2 1342 78 1343 3 328 2 1345 2 1347 2 1348 4 334 78 1350 2 335 3 1353 2 1352 38 339 2 1359 22 1360 2 1362 2 342 2 1363 80 343 2 1364 8 1365 8 345 2 1366 38 1369 2 350 8 351 2 352 2 1373 2 356 234 1374 2 357 2 1375 2 358 12 360 2 1380 40 1381 22 361 60 362 78 363 3 1384 8 1386 38 369 78 370 2 1391 2 1394 4 373 558 1397 2 1398 4 376 2 1401 2 1400 2 1402 2 1404 4 382 2 381 10 383 2 1407 2 1408 2 1410 2 386 2 1411 1 1415 2 1417 8 1418 78 389 2 1419 2 1421 2 1423 2 391 2 392 2 1424 2 1425 2 1426 38 397 2 398 2 1430 156 399 2 400 3 1435 2 1436 10 402 2 403 2 404 2 1439 6 1440 2 1438 2 1443 2 1442 83 1444 15 407 80 1445 48 408 2 409 80 1447 80 411 328 412 3 1451 126 1454 93 1452 34 421 2 422 2 423 2 1464 2 429 38 430 3 1467 2 434 18 440 2 441 2 442 2 1472 3 445 4 444 4 1473 2 1474 4 449 22 1477 166 450 2 1479 2 1481 38 1482 2 452 4 455 2 1483 38 457 3 1484 4 1485 2 459 104 462 3 1486 2 1487 3 1488 61 463 74 466 80 1490 2 1491 10 467 2 473 2 1492 2 476 2 1496 2 480 2 481 4 484 4 486 4 1500 2 488 38 489 2 1501 2 1502 4 1503 2 1504 2 492 12 493 2 494 2 1506 26 1509 4 498 2 499 2 1514 10 500 2 1516 2 506 34 507 2 510 2 511 2 512 74 514 2 1522 13 515 2 1524 4 1525 6 1527 14 1528 2 1530 2 519 2 1532 3 526 1 525 34 1537 2 530 2 532 10 533 2 1539 3 535 24 1540 10 536 2 1541 2 537 181 1544 2 1547 4 1548 2 541 2 1551 2 547 2 1554 2 1556 2 1560 14 550 8 1562 2 556 2 558 2 1563 1 1565 12 1567 6 563 2 566 2 1572 4 1573 8 567 2 572 2 1576 20 576 2 1577 2 1578 1116 1583 24 581 2 582 2 583 2 584 2 1584 2 1586 2 1585 10 587 1 588 1 1590 2 1591 2 594 2 596 2 1595 2 1596 2 601 1 603 2 1598 2 604 112 1602 80 606 9 1604 2 1605 2 1607 60 1608 4 1610 4 609 2 1611 2 615 2 616 2 619 60 1615 2 1616 2 1617 120 623 2 624 86 1621 78 626 16 627 112 1622 3 1624 2 1625 158 632 2 635 2 636 2 637 2 1631 2 1630 2 639 2 1632 2 1633 2 641 4 642 2 643 24 1635 2 644 2 1638 2 648 2 649 10 1639 2 651 2 653 2 658 3 1645 2 1644 78 1647 8 660 2 1648 2 1651 2 1652 2 669 7 1655 1174 1658 2 670 2 1660 7 674 2 675 2 678 2 1664 2 681 2 682 2 683 2 1665 8 685 2 684 2 687 3 1667 2 688 2 689 2 690 2 692 8 1668 2 693 2 696 158 1669 2 1672 2 698 2 1673 2 1674 2 1677 16 703 20 1680 78 704 2 1683 2 1681 4 1688 2 1687 8 708 2 1689 2 1690 2 711 12 713 2 714 2 1692 3 721 2 1696 2 722 80 1697 2 723 2 725 4 724 14 728 2 1700 78 1704 2 1706 2 736 2 743 2 742 2 745 2 746 4 1713 2 1714 2 747 2 749 318 752 2 1718 2 755 38 1721 2 1720 2 1722 2 1723 3 759 3 1725 6 1726 2 1729 24 763 2 765 2 1736 2 769 2 770 66 1737 2 771 24 1739 2 775 1 776 6 1742 18 779 16 780 78 1747 6 781 4 782 2 1748 2 783 2 784 2 786 2 788 3 1759 3 790 2 1764 3 1767 2 1765 2 794 8 1771 1 795 2 1773 3 1775 2 801 4 1778 22 1779 2 1780 2 803 4 1782 2 807 2 1783 3 809 2 1787 2 1789 2 1791 12 811 2 813 2 816 2 1798 4 1799 2 1805 2 1806 402 821 2 1808 156 1810 24 1812 2 829 2 1815 2 1816 14 1818 12 835 3 838 1 1819 2 839 2 1821 2 845 2 1822 8 1824 38 1825 20 848 2 850 4 1830 2 1831 2 853 2 1833 2 1835 22 856 2 861 2 862 2 864 4 1838 38 1841 78 1842 2 867 2 1844 2 868 2 869 6 1845 2 1846 2 1847 10 1849 82 1850 14 1854 4 1857 2 876 1 1858 2 1859 2 1860 78 879 38 880 6 1863 20 883 6 1867 2 1868 2 1869 38 884 2 885 2 1873 2 1874 480 1876 2 1877 4 1878 14 1880 2 891 2 894 74 1882 8 896 2 1884 2 898 2 1885 2 899 10 1887 38 1889 2 901 38 902 80 903 2 1891 4 1892 2 907 44 909 10 1900 4 1901 2 912 2 911 6 913 2 915 10 1903 2 1902 2 1905 2 1906 2 919 2 922 2 925 14 1911 2 926 2 1916 10 927 100 929 2 1918 76 1919 4 1920 2 1921 2 1923 3 935 2 1929 2 1928 82 936 80 1931 2 937 8 1932 2 938 4 1933 18 941 2 1934 2 942 2 943 2 944 2 1936 12 948 10 1937 32 952 2 1939 2 956 14 1942 2 962 22 1947 2 1949 2 
0 2 1207 2 1847 4 282 2 231 2 233 2 1933 2 1412 2 292 2 848 2 623 2 1936 2 1562 2 209 2 532 2 1451 2 179 2 907 6 856 2 457 2 271 2 635 2 1920 2 1655 2 
0 2 1207 2 1847 4 282 2 231 2 233 2 1933 2 1412 2 292 2 848 2 623 2 1936 2 1562 2 209 2 532 2 1451 2 179 2 907 6 856 2 457 2 271 2 635 2 1920 2 1655 2 
0 2 1207 2 1847 4 282 2 231 2 233 2 1933 2 1412 2 292 2 848 2 623 2 1936 2 1562 2 209 2 532 2 1451 2 179 2 907 6 856 2 457 2 271 2 635 2 1920 2 1655 2 
1525 2 869 2 1172 2 1024 3 1576 4 3 2 711 2 280 2 1267 2 282 3 1818 2 579 4 231 2 1064 2 68 2 1761 2 233 3 1277 2 324 6 492 2 1863 4 623 2 1451 2 179 4 771 3 798 2 927 2 864 2 92 4 329 2 744 2 1810 5 801 2 1655 10 1742 4 1599 3 703 4 1747 2 1545 2 1128 4 
869 2 1172 2 1024 2 3 2 280 2 282 2 1439 2 231 2 68 2 233 2 492 2 1863 4 623 2 179 4 1451 2 180 2 771 2 927 2 1810 4 1742 4 80 2 703 4 1747 2 1128 4 1525 2 1576 4 711 2 1818 2 1267 2 579 4 1064 2 1761 2 1277 2 324 6 798 2 864 2 92 4 744 2 329 2 801 2 1655 10 1599 2 1545 2 
869 2 1172 2 1024 2 3 2 280 2 282 2 1439 2 231 2 68 2 233 2 492 2 1863 4 623 2 179 4 1451 2 180 2 771 2 927 2 1810 4 1742 4 80 2 703 4 1747 2 1128 4 1525 2 1576 4 711 2 1818 2 1267 2 579 4 1064 2 1761 2 1277 2 324 6 798 2 864 2 92 4 744 2 329 2 801 2 1655 10 1599 2 1545 2 
869 2 1172 2 1024 2 3 2 280 2 282 2 1439 2 231 2 68 2 233 2 492 2 1863 4 623 2 179 4 1451 2 180 2 771 2 927 2 1810 4 1742 4 80 2 703 4 1747 2 1128 4 1525 2 1576 4 711 2 1818 2 1267 2 579 4 1064 2 1761 2 1277 2 324 6 798 2 864 2 92 4 744 2 329 2 801 2 1655 10 1599 2 1545 2 
869 2 1172 2 1024 2 3 2 280 2 282 2 1439 4 231 2 68 2 233 2 492 2 1863 4 623 2 179 4 1451 2 180 4 771 2 927 2 1810 4 1742 4 80 4 703 4 1747 2 1128 4 1525 2 1576 4 711 2 1818 2 1267 2 579 4 1064 2 1761 2 1277 2 324 6 798 2 864 2 92 4 744 2 329 2 801 2 1655 10 1599 2 1545 2 
1532 2 1185 2 1162 2 665 2 567 2 328 2 
624 2 134 2 1532 2 1848 2 1314 2 266 2 486 2 
338 2 1469 2 1927 2 438 2 1753 2 1397 2 1100 1 727 2 726 2 877 2 385 1 447 2 413 2 1449 2 179 8 1513 2 820 2 774 2 597 2 1456 1 1377 1 79 1 1811 2 1655 10 1520 2 1324 2 
225 2 1171 2 869 6 1525 6 1172 6 1610 2 342 2 1818 6 1439 2 170 4 1554 2 1277 6 492 6 1647 2 883 4 325 2 179 6 180 5 629 2 92 4 1810 16 801 2 1160 2 1655 6 1742 12 637 2 80 2 60 2 1203 2 1747 6 
889 2 677 1 1576 2 1709 2 179 1 1422 2 818 2 259 6 920 4 1854 2 286 2 825 2 1655 1 379 2 1079 2 703 2 160 2 1863 2 
889 2 1576 2 1709 2 1422 4 818 2 259 6 920 4 1854 4 286 2 825 2 379 2 1079 4 160 2 703 2 1863 2 
889 2 677 1 1576 2 1709 6 179 1 1422 8 818 2 259 10 920 4 1854 8 286 2 825 2 1655 1 379 2 1079 8 160 8 703 2 1863 2 
889 2 1576 2 1422 2 818 2 259 2 920 2 1854 2 286 2 825 2 379 2 1079 2 703 2 1863 2 
224 4 755 4 1849 8 340 2 1363 4 1236 2 1238 4 969 2 1366 4 349 2 1860 4 881 2 1621 4 626 1 1372 2 356 8 498 2 1625 8 358 3 243 4 634 2 1874 30 362 4 130 2 1386 4 780 4 369 4 257 2 34 4 258 2 373 28 994 4 1140 3 996 8 1272 2 1887 4 265 4 45 8 1418 4 1644 4 1010 4 1655 64 537 4 1430 9 911 2 405 2 1178 2 1028 12 66 4 1442 6 1444 1 1029 4 407 4 409 4 1447 4 411 12 173 2 293 4 696 8 179 56 1043 4 1806 26 1454 2 928 1 1918 2 1808 8 1199 22 187 4 1055 4 312 8 1926 2 1577 2 1692 2 1578 60 1327 4 936 4 1062 8 722 4 1824 4 1700 4 1477 8 850 2 1481 4 1342 4 459 4 1077 4 1078 2 1841 4 749 12 334 4 466 4 1229 4 1602 4 
475 2 1849 2 485 2 1178 2 1442 6 1098 2 407 2 112 2 969 2 617 2 971 2 409 2 1447 2 812 2 1367 2 881 2 1865 4 817 2 353 2 696 4 295 2 498 2 416 2 1043 2 179 44 1806 20 1625 4 1738 2 773 2 1808 2 634 2 504 2 246 2 564 2 1741 4 1120 2 1871 2 824 2 362 2 1874 20 1680 6 187 2 431 2 888 2 1686 2 516 2 1926 2 313 2 1750 2 135 4 1577 2 191 2 1637 2 1692 2 1578 42 373 6 994 2 936 2 996 4 1062 2 843 2 1409 2 45 2 1536 2 1278 2 1418 2 904 2 1710 2 799 2 741 2 1896 2 461 2 600 2 667 4 1015 2 1286 2 1078 4 1655 46 910 2 1430 2 1489 2 537 38 334 2 1660 2 1229 2 1602 2 1433 2 1493 2 1434 2 336 2 
224 4 755 4 479 32 1849 6 485 2 1363 4 1236 4 1238 4 969 2 1366 4 1860 4 491 4 881 2 1372 2 356 24 498 2 358 4 1625 10 243 4 634 2 504 2 1874 44 362 4 130 4 1386 4 780 4 369 4 257 2 34 4 646 2 258 2 1266 2 373 24 994 4 1140 8 996 10 1887 4 263 16 1005 8 265 8 45 10 1418 6 664 16 268 4 1010 16 1653 2 909 2 1655 78 910 10 1430 10 537 14 911 2 279 4 405 2 1028 14 1178 2 66 4 1442 6 1029 4 407 4 287 4 409 4 812 10 1448 2 1447 4 411 30 293 4 696 10 179 70 1043 4 1806 36 1197 8 1808 6 1457 4 1199 30 308 4 187 4 1055 4 312 24 1926 2 313 10 1577 2 1578 104 936 4 1062 6 722 4 87 2 1824 4 1700 4 1477 8 850 4 590 4 1481 4 456 8 1941 8 1342 4 459 8 461 2 1077 4 1078 2 1489 2 1841 4 749 28 334 4 466 4 1229 2 1602 4 
1849 2 485 2 1178 2 1442 4 1444 2 1236 2 407 4 969 2 409 4 1447 4 411 12 173 2 881 2 696 6 626 2 498 2 179 26 1043 2 1806 14 1625 6 1454 10 1918 2 1808 2 634 2 1567 2 1874 14 362 2 1199 6 130 4 187 2 1686 2 1926 2 1577 2 1578 40 373 8 994 4 936 4 1140 6 996 6 788 2 1062 2 1272 2 45 2 658 2 1418 2 850 2 461 2 1539 2 600 2 1078 2 1655 28 537 14 1430 2 911 2 749 12 334 2 1660 2 1229 2 1602 4 
305 2 
521 1 957 1 991 1 1657 1 275 1 666 1 
521 1 957 1 991 1 1657 1 275 1 666 1 
521 1 957 1 991 1 1657 1 275 1 666 1 
521 1 957 1 991 1 1657 1 275 1 666 1 
521 1 957 1 991 1 1657 1 275 1 666 1 
521 1 957 1 991 1 1657 1 275 1 666 1 
521 1 957 1 991 1 1657 1 275 1 666 1 
521 1 957 1 991 1 1657 1 275 1 666 1 
521 1 957 1 991 1 1657 1 275 1 666 1 
521 1 957 1 991 1 1657 1 275 1 666 1 
521 1 957 1 991 1 1657 1 275 1 666 1 
521 1 957 1 991 1 1657 1 275 1 666 1 
521 1 957 1 991 1 1657 1 275 1 666 1 
521 1 957 1 991 1 1657 1 275 1 666 1 
521 1 957 1 991 1 1657 1 275 1 666 1 
521 1 957 1 991 1 1657 1 275 1 666 1 
521 1 957 1 991 1 1657 1 275 1 666 1 
521 1 957 1 991 1 1657 1 275 1 666 1 
521 1 957 1 991 1 1657 1 275 1 666 1 
521 1 957 1 991 1 1657 1 275 1 666 1 
521 1 957 1 991 1 1657 1 275 1 666 1 
521 1 957 1 991 1 1657 1 275 1 666 1 
521 1 957 1 991 1 1657 1 275 1 666 1 
521 1 957 1 991 1 1657 1 275 1 666 1 
521 1 957 1 991 1 1657 1 275 1 666 1 
521 1 957 1 991 1 1657 1 275 1 666 1 
521 1 957 1 991 1 1657 1 275 1 666 1 
521 1 957 1 991 1 1657 1 275 1 666 1 
521 1 957 1 991 1 1657 1 275 1 666 1 
521 1 957 1 991 1 1657 1 275 1 666 1 
521 1 957 1 991 1 1657 1 275 1 666 1 
521 1 957 1 991 1 1657 1 275 1 666 1 
521 1 957 1 991 1 1657 1 275 1 666 1 
521 1 957 1 991 1 1657 1 275 1 666 1 
521 1 957 1 991 1 1657 1 275 1 666 1 
521 1 957 1 991 1 1657 1 275 1 666 1 
521 1 957 1 991 1 1657 1 275 1 666 1 
521 1 957 1 991 1 1657 1 275 1 666 1 
521 1 957 1 991 1 1657 1 275 1 666 1 
521 1 957 1 991 1 1657 1 275 1 666 1 
521 1 957 1 991 1 1657 1 275 1 666 1 
521 1 957 1 991 1 1657 1 275 1 666 1 
521 1 957 1 991 1 1657 1 275 1 666 1 
521 1 957 1 991 1 1657 1 275 1 666 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V FAILED junit.framework.AssertionFailedError (381,889) 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.NullPointerException 772 719 317 633 22 634 645 150 1069 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V ERROR java.lang.NullPointerException 
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 457 559 613 87 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 143 156 316 1083 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 143 156 316 1083 
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_2_1(I)Z
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String;
jtb.JavaParser:jj_3R_119()Z
jtb.JavaParser:jj_3R_85()Z
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:element_range([I)I
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.Quantify.Term:simplify_name()Ljava.lang.String;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.VarInfo:simplify_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.PptName:isCombinedExitPoint()Z
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
jtb.JavaParser:jj_2_15(I)Z
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
jtb.JavaParser:jj_3R_161()Z
daikon.Quant:gte(II)Z
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_60()Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:min_max([I)[I
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:sum([D)D
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:isPseudoArray()Z
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.Quant:eltsGTE([II)Z
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Quant:lexLTE([I[I)Z
daikon.Quant:intersection([I[I)[I
daikon.VarInfoName:hashCode()I
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.Quant:slice([III)[I
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.LowerBound:enabled()Z
utilMDE.Intern:numIntArrays()I
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.PptSlice0:arity()I
utilMDE.LimitedSizeIntSet:add(I)V
jtb.JavaCharStream:getEndLine()I
daikon.Quantify.Term:ioa_name()Ljava.lang.String;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I | CONSTANT | 21177 | 2 -> 1
daikon.test.InvariantFormatTester:execute()Z
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.Quant:eltwiseLT([I)Z
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaCharStream:getBeginColumn()I
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.Quantify.ESCQuantification:get_quantification()Ljava.lang.String;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.ModBitTracker:num_sets()I
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quantify.SimplifyQuantification:get_arr_vars_indexed(I)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
utilMDE.WeakIdentityHashMap:indexFor(II)I
jtb.JavaParser:jj_3R_50()Z
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:sum([I)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.VarInfoName:name()Ljava.lang.String;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.Quant:eltwiseLTE([I)Z
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quantify.Constant:Constant(I)V
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
jtb.JavaParser:jj_3_4()Z
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:sameLength([I[I)Z
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
utilMDE.MathMDE:mod_positive(II)I
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:eq(DD)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.inv.Invariant:prob_is_ge(DD)D
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String; | RETURN | 51597 | return null
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.inv.unary.sequence.EltNonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.ModBitTracker:num_vars()I
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
daikon.VarInfo:get_lower_bound()Ldaikon.Quantify.Term;
daikon.ModBitTracker:split(I)I
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.Ppt:Ppt()V
utilMDE.ArraysMDE:subarray([III)[I
daikon.Quantify.IOAQuantification:getVarIndexedString(I)Ljava.lang.String;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.ProglangType:isFloat()Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
jtb.JavaParser:jj_3R_135()Z
jtb.JavaParser:jj_3R_89()Z
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
utilMDE.WeakHasherMap:size()I
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant:justified()Z
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.inv.Invariant:logDetail()Z
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
utilMDE.ArraysMDE:max([I)I
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltNonZero:enabled()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.Quantify.QuantifyReturn:QuantifyReturn(Ldaikon.VarInfo;)V
daikon.Quant:lt(II)Z
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
jtb.JavaParser:jj_2_14(I)Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
utilMDE.MathMDE:gcd_differences([I)I
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.VarInfo:get_array_var()Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
utilMDE.Intern:internSubsequence([JII)[J
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.VarInfo:get_upper_bound()Ldaikon.Quantify.Term;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_48()Z
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.ModBitTracker:num_samples()I
daikon.VarInfo:isPrestate()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.inv.Invariant:prob_and(DDD)D
daikon.ProglangType:baseIsScalar()Z
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
utilMDE.ArraysMDE:sum([[D)D
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:gt(II)Z
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
jtb.JavaParser:jj_3R_121()Z
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.Quant:eltsGteIndex([I)Z
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:subarray([JII)[J
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quantify.ESCQuantification:bld_quant(Ldaikon.VarInfo;Ldaikon.Quantify.Term;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.Quant:pairwiseSquare([I[I)Z
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.Quantify.IOAQuantification:getMembershipRestriction(I)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.inv.unary.UpperBoundCore:calc_range()J
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.VarInfo:apply_subscript(Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
daikon.Quantify.SimplifyQuantification:get_quantification()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.Quant:memberOf(S[S)Z
daikon.inv.unary.sequence.EltNonZero:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:eltsGT([II)Z
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
utilMDE.MathMDE:pow_fast(II)I
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.Quant:noDups([I)Z
daikon.ProglangType:baseIsFloat()Z
jtb.JavaParser:jj_3R_134()Z
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:concat([I[I)[I
daikon.Quant:pairwiseEqual([I[I)Z
daikon.inv.unary.sequence.EltNonZero:format_esc()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.Quant:lte(II)Z
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.Quant:eq(II)Z
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.ProglangType:isIntegral()Z
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.ArraysMDE:min([I)I
daikon.Quant:eq(JJ)Z
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfo:get_all_simple_names()Ljava.util.List;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
jtb.JavaCharStream:backup(I)V
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
jtb.JavaCharStream:getBeginLine()I
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
jtb.JavaParser:jj_ntk()I
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
jtb.JavaCharStream:getEndColumn()I
daikon.inv.unary.sequence.EltNonZero:format_daikon()Ljava.lang.String;
jtb.JavaParser:jj_3_13()Z
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.PptTopLevel:name()Ljava.lang.String;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.PptSlice2:arity()I
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.inv.Invariants:Invariants()V
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eltsEqualIndex([I)Z
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_88()Z
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.Quantify.Length:esc_name()Ljava.lang.String;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.VarInfoAux:hashCode()I
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfo:relate_var()V
daikon.Quant:subsetOf([D[F)Z
jtb.JavaParser:jj_3R_53()Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.ValueTuple:isMissing(I)Z
utilMDE.ArraysMDE:sorted([I)Z
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.Quantify.IOAQuantification:getQuantifierExp()Ljava.lang.String;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.Quantify.ESCQuantification:ESCQuantification(Ljava.util.EnumSet;[Ldaikon.VarInfo;)V
utilMDE.MathMDE:pow(II)I
utilMDE.Intern:internSubsequence([III)[I
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.Quant:eltsLTE([II)Z
jtb.JavaParser:jj_3R_118()Z
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltLowerBound:format_simplify()Ljava.lang.String;
jtb.JavaParser:jj_2_16(I)Z
utilMDE.OrderedPairIterator:setnext1()V
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.Quantify.Constant:name()Ljava.lang.String;
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.Quant:subsetOf([B[I)Z
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.ValueSet:ValueSet(I)V
daikon.Quant:lexGTE([I[I)Z
jtb.JavaParser:jj_3R_51()Z
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfo:old_var_names(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.Quant:eq(FF)Z
daikon.Quant:concat([I[I)[I
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.Ppt:find_var_by_name(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.Quant:isReverse([I[I)Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:ne(II)Z
daikon.VarInfo:isPointer()Z
utilMDE.FuzzyFloat:ne(DD)Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.inv.Invariant:getConfidence()D
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.Token:newToken(I)Ljtb.Token;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_76()Z
daikon.VarInfo:jml_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.VarInfo:get_base_array_hashcode()Ldaikon.VarInfo;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.diff.RootNode:RootNode()V
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParser:jj_3R_96()Z
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.Quant:eltwiseGTE([I)Z
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.TestUtilMDE:lsis_test(I)V
utilMDE.ArraysMDE:indexOf([II)I
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.Quantify.IOAQuantification:getClosingExp()Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.VarInfo:get_enclosing_var()Ldaikon.VarInfo;
daikon.Quant:pairwiseLT([I[I)Z
daikon.inv.Invariant:logOn()Z
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
jtb.JavaParser:jj_3R_148()Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
utilMDE.MathMDE:negate(I)I
daikon.Quant:subsetOf([I[I)Z
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.VarInfo:domainTypeIOA()Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfo:esc_name()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
utilMDE.MathMDE:gcd([I)I
jtb.JavaParser:jj_3R_68()Z
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3_14()Z
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.test.FormatTestCase:passes()Z
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
jtb.JavaParser:jj_3R_97()Z
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eltsLtIndex([I)Z
jtb.JavaParser:jj_3_16()Z
daikon.Quantify.IOAQuantification:getFreeVar(I)Ldaikon.Quantify.Term;
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
jtb.JavaCharStream:readChar()C
utilMDE.ArraysMDE:sum([[I)I
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
jtb.JavaParser:jj_3R_123()Z
utilMDE.Fmt:i(I)Ljava.lang.Integer;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.Quant:subsetOf([S[S)Z
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
utilMDE.WeakHasherMap:processQueue()V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eltwiseGT([I)Z
daikon.diff.InvMap:toString()Ljava.lang.String;
utilMDE.Intern:intern([J)[J
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.Quant:lexEqual([I[I)Z
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.Quantify.Term:name_with_offset(Ljava.lang.String;I)Ljava.lang.String;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:EltNonZero(Ldaikon.PptSlice;)V
utilMDE.OrderedPairIterator:setnext2()V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.Quant:eltsNotEqual([II)Z
daikon.Quant:eltsGtIndex([I)Z
daikon.Quantify.SimplifyQuantification:get_closer()Ljava.lang.String;
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.Quantify.ESCQuantification:get_arr_vars_indexed(I)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.Quantify.Length:Length(Ldaikon.VarInfo;I)V
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.Quant:pairwiseGTE([I[I)Z
utilMDE.SimpleLog.LongVal:LongVal(J)V
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:calc_modulus()J
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_2_12(I)Z
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.inv.Invariant:prob_and(DD)D
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.Quant:subsetOf([F[D)Z
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:computeConfidence()D
jtb.JavaParser:jj_3R_52()Z
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
jtb.JavaParser:jj_scan_token(I)Z
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
jtb.JavaParser:jj_2_10(I)Z
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.ProglangType:isScalar()Z
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.inv.unary.sequence.EltNonZero:get_proto()Ldaikon.inv.Invariant;
daikon.ProglangType:isArray()Z
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_57()Z
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.Quant:setEqual([I[I)Z
daikon.Quantify.Length:simplify_name()Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:subsetOf([F[F)Z
daikon.Quantify:quantify([Ldaikon.VarInfo;)[Ldaikon.Quantify.QuantifyReturn;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Debug:logOn()Z
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_61()Z
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.diff.PrintAllVisitor:bufPrintln()V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
utilMDE.OrderedPairIterator:hasNext()Z
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.Quant:eltsLT([II)Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
utilMDE.SimpleLog:SimpleLog(Z)V
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:toString()Ljava.lang.String;
jtb.JavaParser:jj_3_15()Z
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.Quantify:get_flags(Z)Ljava.util.EnumSet;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
utilMDE.Assert:assertTrue(Z)V
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
utilMDE.FuzzyFloat:gt(DD)Z
jtb.JavaParser:jj_3_1()Z
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.Debug:logDetail()Z
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
jtb.JavaCharStream:ReadByte()C
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
utilMDE.MathMDE:gcd(II)I
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
jtb.JavaParser:jj_3_12()Z
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.PptSlice1:arity()I
daikon.Quant:subsetOf([J[J)Z
daikon.VarInfo:name()Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
jtb.JavaCharStream:UpdateLineColumn(C)V
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String; | RETURN | 282442 | return null
jtb.JavaParser:jj_3R_133()Z
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfo:isDerived()Z
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:pairwiseDivides([I[I)Z
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType; | ASSIGN | 45582 | = null
jtb.JavaParser:jj_3R_58()Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_69()Z
utilMDE.ArraysMDE:fn_inverse([II)[I | STATEMENT | 61501 | stmt -> ;
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.inv.unary.scalar.Positive:enabled()Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.LimitedSizeIntSet:size()I
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quantify.IOAQuantification:IOAQuantification([Ldaikon.VarInfo;)V
daikon.Quant:union([I[I)[I
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.VarInfo:isIOAArray()Z
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.Quant:setDiff([I[I)[I
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
utilMDE.MathMDE:missing_numbers([I)[I
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:pairwiseLTE([I[I)Z
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.Quant:memberOf(J[J)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.Quant:eltsLteIndex([I)Z
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
jtb.JavaParser:jj_3R_62()Z
daikon.Quant:eltwiseNotEqual([I)Z
jtb.JavaParser:jj_3R_56()Z
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.inv.Invariant:isWorthPrinting()Z
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.Quant:eltsEqual([II)Z
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.MathMDE:sign(I)I
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.Quant:lexNotEqual([I[I)Z
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltNonZero:format_ioa()Ljava.lang.String;
jtb.JavaParser:jj_3R_63()Z
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptName:isEnterPoint()Z
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.ProglangType:base()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_163()Z
daikon.inv.unary.sequence.EltNonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_55()Z
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfo:new_ppt()V
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.VarInfo:esc_name(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quantify.SimplifyQuantification:SimplifyQuantification(Ljava.util.EnumSet;[Ldaikon.VarInfo;)V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.Quant:memberOf(F[F)Z
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
utilMDE.Intern:intern([D)[D
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.inv.unary.sequence.EltNonZero:format_simplify()Ljava.lang.String; | RETURN | 4792 | return null
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.Quant:lexLT([I[I)Z
jtb.JavaParser:jj_3R_162()Z
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.Quantify.Term:esc_name()Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.inv.unary.sequence.EltNonZero:is_pointer()Z
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
utilMDE.FuzzyFloat:lte(DD)Z
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaCharStream:FillBuff()V
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.Quant:memberOf(D[F)Z
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.ValueTuple:isMissingFlow(I)Z
jtb.JavaParser:jj_3_10()Z
utilMDE.ArraysMDE:noDuplicates([D)Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.inv.unary.LowerBoundCore:computeProbability()D
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.ProglangType:baseIsIntegral()Z
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.Quant:memberOf(F[D)Z
jtb.JavaParser:jj_3R_120()Z
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.inv.Invariant:prob_or(DD)D
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
jtb.JavaParser:jj_2_4(I)Z
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.PptSlice1:num_samples()I
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
daikon.Quant:subsetOf([D[D)Z
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ProglangType:isPointerFileRep()Z
jtb.JavaCharStream:BeginToken()C
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.VarInfo:java_name()Ljava.lang.String;
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.Quantify.FreeVar:simplify_name()Ljava.lang.String;
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.ValueTuple:size()I
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfo:get_base_array()Ldaikon.VarInfo;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.NodeList:NodeList()V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.FuzzyFloat:gte(DD)Z
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
jtb.JavaParser:jj_3R_122()Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:is_direct_non_slice_array()Z
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
jtb.JavaParser:jj_3R_47()Z
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.VarInfo:simplify_quantify(Ljava.util.EnumSet;[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:memberOf(I[I)Z
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParser:jj_2_13(I)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:eq(DD)Z
daikon.Quantify.IOAQuantification:getFreeVarName(I)Ljava.lang.String;
daikon.ModBitTracker:ModBitTracker(I)V
daikon.inv.unary.LowerBoundCore:calc_modulus()J
jtb.JavaParser:jj_3R_49()Z
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.FuzzyFloat:lt(DD)Z
jtb.JavaParser:jj_3R_117()Z
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3_5()Z
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
utilMDE.MathMDE:gcd(JJ)J
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.Quant:eltwiseEqual([I)Z
jtb.JavaParser:jj_3R_54()Z
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:jml_name()Ljava.lang.String;
jtb.JavaParser:jj_3R_116()Z
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
jtb.JavaParser:jj_2_3(I)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.ProglangType:dimensions()I
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.Quant:pairwiseGT([I[I)Z
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.Ppt:indexOf(Ljava.lang.String;)I
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.Quant:lexGT([I[I)Z
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ValueTuple:tuplemodHasModified(I)Z
jtb.JavaParser:jj_2_5(I)Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.PptSlice0.ImplicationWrapper:hashCode()I
utilMDE.Options.OptionInfo:argument_required()Z
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
jtb.JavaParser:jj_3R_86()Z
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern:intern([I)[I
daikon.Quantify.FreeVar:name()Ljava.lang.String;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.diff.Node:getUserRight()Ljava.lang.Object;
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.diff.Node:add(Ljava.lang.Object;)V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.Node:Node()V
daikon.diff.InvMap:InvMap()V
daikon.PptSlice0:initInvariantsSeen()V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3_3()Z
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
utilMDE.MathMDE:mod_positive(JJ)J
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:set_rel_diff(D)V
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
utilMDE.MathMDE:modulus([I)[I
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
352 2 784 4 328 2 962 2 521 2 228 2 713 2 83 2 392 2 
943 6 708 2 446 6 473 2 246 2 1116 2 695 2 371 2 598 6 1004 2 12 2 
298 2 383 6 673 2 859 2 691 2 713 2 995 6 392 2 1118 4 907 2 637 6 136 6 551 4 
357 2 731 4 285 2 406 8 32 8 121 10 738 4 774 16 1103 6 1140 10 205 4 1106 4 135 29 1024 10 43 8 299 10 1146 16 710 2 711 8 819 26 713 6 392 6 430 2 999 2 579 10 583 6 1156 12 191 2 256 2 27 16 
161 6 756 4 
557 2 
1047 2 914 2 1129 2 692 2 235 2 522 4 807 2 367 2 202 2 8 2 777 2 889 2 41 2 140 2 571 2 271 2 539 2 860 2 423 2 933 2 51 4 1151 2 52 2 352 4 353 2 56 2 435 2 60 2 1124 2 191 2 
357 2 516 2 801 6 121 16 406 6 945 2 32 18 742 4 774 32 562 4 1103 4 126 4 7 2 1140 16 564 2 411 6 534 2 1106 2 133 4 11 6 1024 16 135 54 490 2 953 6 1146 32 299 6 498 8 819 48 713 4 1077 4 392 4 864 4 899 4 579 16 583 4 1122 6 225 6 1156 22 27 32 
314 2 889 2 533 2 
381 2 837 2 918 2 1033 2 308 2 1150 2 501 2 934 2 199 2 1000 2 478 10 722 2 321 2 1026 22 
260 2 121 2 32 2 74 2 1103 2 774 2 77 2 1140 2 1106 2 1024 2 135 6 1146 2 299 4 18 2 609 2 753 2 819 4 219 2 579 2 186 2 1156 2 27 2 590 2 
953 6 1146 8 658 2 121 4 738 2 819 12 864 4 562 4 774 8 579 4 1140 4 905 2 1156 4 11 6 1024 4 135 16 27 8 
552 2 1045 4 160 14 734 2 329 2 802 2 739 10 842 10 124 2 805 2 1057 2 667 2 8 4 699 2 848 2 889 8 533 6 267 4 981 4 374 4 343 4 894 4 1111 2 542 2 958 2 499 2 424 2 575 4 51 4 896 2 21 2 429 2 52 2 247 4 314 2 104 4 106 4 965 62 1155 2 230 4 
767 2 557 2 841 2 702 2 131 2 1061 2 639 2 384 2 615 2 1089 2 
591 2 595 2 736 2 881 2 1014 2 449 6 288 2 164 2 452 2 887 2 744 3 293 3 1021 2 1025 6 747 12 1028 2 173 2 895 1 1031 16 1032 2 177 8 1036 2 897 2 181 3 184 2 757 1 904 2 324 2 912 3 764 24 768 1 471 2 472 2 919 2 624 2 1052 2 921 2 922 4 770 3 200 2 201 2 485 1 40 1 204 6 1064 1 1066 2 209 2 210 3 344 2 47 1 786 2 348 2 350 2 649 2 936 2 1082 2 228 2 1088 2 64 2 355 3 509 2 942 2 356 8 796 2 1092 2 512 2 232 1 656 16 67 4 360 6 799 5 515 3 944 2 660 2 946 32 236 24 1100 2 363 16 666 2 238 2 73 3 1102 2 75 2 528 2 372 1 82 2 244 3 952 2 672 2 674 2 1112 4 94 2 817 1 544 8 392 34 393 2 1117 2 825 2 250 2 547 2 1121 2 1123 2 252 2 549 2 969 2 686 2 401 2 112 2 402 2 113 2 689 1 554 2 403 2 116 2 1132 2 404 4 119 4 690 2 558 2 1133 2 407 3 843 2 844 2 846 2 697 1 1141 1 850 2 979 2 269 16 418 2 858 2 421 1 572 2 148 4 713 32 714 4 994 1 574 2 715 32 432 4 433 1 1152 2 437 2 436 2 578 2 580 2 1154 3 
172 2 392 2 
627 2 268 2 392 4 
955 2 
440 2 730 118 877 4 1009 4 737 16 1 4 445 4 4 4 5 4 743 6 884 16 885 22 599 2 454 4 1023 4 891 26 171 2 750 2 1030 4 302 2 1034 4 1035 4 179 2 608 20 19 2 755 118 22 2 1039 2 313 16 317 2 759 4 28 4 911 4 326 4 193 8 766 44 30 2 623 2 1049 4 334 4 625 2 335 2 923 2 772 2 1054 4 773 4 1056 2 475 2 633 2 37 2 634 2 480 4 1058 20 776 10 1059 38 486 4 489 38 491 4 1069 2 641 4 643 132 48 2 929 20 645 2 646 2 932 4 217 2 216 4 935 4 55 16 57 4 1081 2 939 2 1086 2 510 4 508 4 517 26 1098 4 1099 2 661 4 947 38 364 6 529 2 78 38 949 4 813 2 373 38 84 38 378 38 380 16 1109 38 954 2 540 4 387 8 385 38 676 14 678 12 95 38 959 10 245 4 822 8 546 20 961 2 828 26 399 2 685 2 830 2 553 4 832 4 555 8 1134 2 694 2 263 4 123 2 563 4 973 38 412 2 703 36 566 4 976 2 1143 10 852 24 983 14 570 118 706 2 137 4 141 6 985 2 857 2 420 4 993 2 573 4 275 10 431 2 150 2 717 22 151 4 867 4 279 4 719 2 153 2 1003 4 439 4 155 2 157 4 723 4 1005 2 874 4 1157 4 282 2 
158 2 354 2 482 1 107 2 
354 2 791 2 
35 2 66 2 1017 2 354 2 223 2 889 2 205 2 
1017 2 354 2 663 2 
1017 2 354 2 543 2 
158 2 476 2 470 2 
1017 2 354 2 
845 2 476 2 
354 2 600 2 
158 2 476 2 340 2 
158 2 29 2 537 2 
158 2 273 2 814 2 
158 2 1071 2 347 2 
158 2 614 2 240 2 
476 2 1048 2 
831 2 354 2 
29 2 92 2 
273 2 147 2 
581 2 347 2 
240 2 513 2 
476 2 410 2 
240 2 281 2 
347 2 601 2 
273 2 827 2 
29 2 565 2 
158 2 476 2 585 2 340 2 
158 2 854 2 476 2 585 2 340 2 
158 2 476 2 763 2 
158 2 476 2 294 2 
951 2 278 2 652 2 132 2 
223 2 889 2 465 2 339 2 
35 2 223 2 789 2 889 2 465 2 339 2 
797 2 1017 2 354 2 223 2 889 2 205 2 
202 2 332 2 
69 2 223 2 889 2 205 2 
327 2 347 2 
240 2 61 2 
29 2 700 2 
273 2 438 2 
910 2 240 2 273 2 
65 2 240 2 273 2 
240 2 273 2 1075 2 
240 2 273 2 453 2 
916 2 701 2 889 2 851 6 494 2 758 6 223 2 619 2 
1037 2 476 2 
670 2 419 2 1074 2 971 2 821 2 576 2 630 2 163 4 450 2 368 2 948 2 926 2 464 2 890 2 322 2 968 2 1026 6 746 4 
158 2 960 2 
113 2 
591 2 878 2 595 2 736 2 880 2 881 2 449 4 452 2 455 2 745 2 1025 2 747 8 1028 2 892 2 297 4 1032 2 177 2 897 4 757 2 904 2 33 2 922 2 336 2 200 2 204 6 45 2 786 2 350 2 649 6 222 2 1082 2 505 4 228 2 940 2 1088 2 64 2 1092 2 796 2 512 2 67 4 360 2 946 6 363 6 82 2 669 2 672 2 674 2 1112 4 96 2 392 26 393 2 1117 2 547 2 103 2 1121 2 969 2 116 2 119 4 404 4 1132 2 1133 2 558 2 1136 2 844 2 418 2 145 2 148 2 713 26 427 2 715 4 432 2 433 2 436 2 578 2 
591 2 878 2 595 2 736 2 880 2 881 2 449 5 452 2 745 2 1025 2 747 8 1028 2 892 2 297 4 1032 2 177 2 897 4 757 2 904 2 920 2 922 2 336 2 200 2 204 6 45 2 786 2 350 2 649 6 222 2 1082 2 505 4 228 2 1088 2 64 2 1092 2 796 2 512 2 1094 2 67 4 360 2 946 6 1100 1 363 6 82 2 669 2 672 2 674 2 1112 4 96 2 392 26 393 2 1117 2 99 2 547 2 103 2 1121 2 969 2 116 2 119 4 404 4 1132 2 1133 2 558 2 1136 2 844 2 846 2 418 2 145 2 572 1 148 2 713 26 427 2 715 4 432 2 433 2 436 2 578 2 
507 2 
644 2 771 2 
591 2 943 6 446 6 72 2 165 8 598 6 81 2 82 2 375 4 377 8 1028 2 458 2 1110 2 90 2 303 2 17 2 1114 2 392 12 1115 4 1117 2 246 4 1119 4 1040 2 547 2 1120 2 397 2 398 10 618 2 254 2 325 2 257 2 620 4 119 2 404 2 120 2 626 2 473 2 198 2 34 2 924 2 844 2 695 4 204 4 978 2 977 2 780 2 708 2 989 2 991 2 712 2 862 2 713 6 502 4 718 2 651 2 1082 2 1084 2 653 4 589 2 511 2 
591 2 943 8 446 6 72 2 165 8 598 8 10 2 82 2 81 2 12 2 375 4 377 8 1028 2 458 2 1110 2 90 2 303 2 1114 2 97 2 392 12 1115 4 1117 2 246 4 1040 2 1119 4 547 2 1120 2 397 2 398 10 618 2 254 2 325 2 257 2 620 4 404 2 119 2 120 2 626 2 473 2 198 2 34 2 924 2 844 2 695 4 204 4 978 2 977 2 780 2 708 2 989 2 991 2 712 2 713 6 502 4 718 2 651 2 870 4 1082 2 1084 2 653 4 589 2 511 2 
458 2 991 2 446 2 626 2 34 2 198 2 502 4 246 2 695 2 1040 2 1119 4 598 2 1120 2 978 2 977 2 618 2 589 2 375 2 
591 2 943 6 446 4 72 2 165 4 598 6 81 2 82 2 12 2 375 4 377 4 1028 2 458 2 1110 2 90 2 303 2 17 2 1114 2 392 12 1115 4 1117 2 246 4 1119 4 1040 2 547 2 1120 2 397 2 398 6 618 2 254 2 325 2 257 2 620 4 119 2 404 2 120 2 626 2 473 2 198 2 34 2 924 2 844 2 695 4 204 4 978 2 977 2 780 2 989 2 991 2 712 2 862 2 713 6 502 4 718 2 651 2 1082 2 1084 2 653 4 589 2 511 2 
591 2 943 6 446 6 72 2 165 4 598 4 81 2 82 2 375 4 377 4 1028 2 458 2 1110 2 90 2 303 2 17 2 1114 2 392 12 1115 4 1117 2 246 4 1116 2 1119 4 1040 2 547 2 1120 2 397 2 398 6 618 2 254 2 325 2 257 2 620 4 119 2 404 2 120 2 626 2 473 2 198 2 34 2 924 2 844 2 695 4 204 4 978 2 977 2 780 2 989 2 991 2 712 2 862 2 713 6 502 4 718 2 651 2 1082 2 1084 2 653 4 589 2 511 2 
591 2 943 6 446 6 72 2 165 4 598 6 81 2 82 2 375 4 377 8 1028 2 458 2 1110 2 90 2 303 2 17 2 1114 2 392 12 1115 4 1117 2 246 4 1119 4 1040 2 547 2 1120 2 397 2 398 6 618 2 254 2 325 2 257 2 620 4 119 2 404 2 120 2 626 2 473 2 198 2 34 2 924 2 844 2 695 4 204 4 978 2 977 2 780 2 708 2 989 2 991 2 712 2 862 2 713 6 502 4 718 2 651 2 1082 2 1084 2 653 4 589 2 511 2 
591 2 943 8 446 8 72 2 165 8 598 6 81 2 82 2 375 4 377 8 1028 2 458 2 1110 2 90 2 303 2 17 2 1114 2 392 12 1115 4 1117 2 246 4 1116 2 1119 4 1040 2 547 2 1120 2 397 2 398 10 618 2 254 2 325 2 257 2 620 4 404 2 119 2 120 2 626 2 473 2 198 2 34 2 924 2 844 2 695 4 204 4 978 2 977 2 780 2 708 2 989 2 991 2 712 2 862 2 713 6 502 4 718 2 651 2 1082 2 1084 2 653 4 589 2 511 2 
591 2 943 6 446 6 72 2 165 8 598 6 81 2 82 2 375 4 377 8 1028 2 458 2 1110 2 90 2 303 2 17 2 1114 2 392 12 1115 4 1117 2 246 4 1119 4 1040 2 547 2 1120 2 397 2 398 10 618 2 254 2 325 2 257 2 620 4 119 2 404 2 120 2 626 2 473 2 198 2 34 2 924 2 844 2 695 4 204 4 978 2 977 2 780 2 708 2 989 2 991 2 712 2 862 2 713 6 502 4 718 2 651 2 1082 2 1084 2 653 4 589 2 511 2 
591 2 880 2 881 2 6 8 598 4 296 2 892 2 297 4 893 2 605 1 301 2 303 2 305 6 20 2 901 1 617 2 618 2 325 2 620 8 626 2 627 6 922 2 34 2 924 2 45 2 349 6 350 2 649 6 54 2 937 6 651 2 938 6 653 4 67 4 943 12 360 2 362 6 70 2 71 2 659 2 946 8 72 2 363 6 76 2 369 4 82 2 81 2 377 2 375 4 674 12 90 2 955 6 388 2 392 46 393 2 105 2 964 6 397 2 682 6 398 2 111 1 116 2 404 4 119 4 120 2 122 6 693 2 409 2 695 4 974 1 977 2 978 2 418 2 989 2 991 2 712 2 713 24 148 2 426 2 715 2 432 2 718 2 436 2 720 2 721 7 154 1 726 2 736 2 1008 6 446 8 1010 2 740 2 447 2 449 6 452 2 167 2 745 4 1025 2 747 4 172 6 1028 2 458 2 1029 6 175 2 1032 2 177 2 754 2 1040 2 473 4 198 2 200 2 484 6 204 6 780 4 786 2 497 7 213 6 502 4 221 4 1082 2 1084 2 228 2 226 2 794 2 511 2 1092 2 231 2 518 1 1100 2 1101 1 241 2 1110 4 538 10 1112 4 1114 2 818 2 1115 6 1117 2 246 4 1116 4 1119 4 547 2 1120 2 254 2 257 2 255 2 836 2 1133 2 558 2 264 6 844 2 849 2 568 2 572 2 862 2 276 1 578 2 587 1 589 2 
591 2 1008 6 736 2 1010 2 446 8 880 2 740 2 881 2 447 2 449 6 6 8 452 2 598 8 167 2 745 4 1025 2 747 8 172 6 296 2 893 2 297 4 892 2 1028 2 1029 6 458 2 175 2 301 2 303 2 1032 2 305 6 177 2 754 2 897 2 20 2 1040 2 617 2 618 2 325 2 620 8 627 6 626 2 473 4 922 4 34 2 198 2 924 2 200 2 484 6 204 6 780 4 45 2 786 2 349 6 213 6 350 2 502 4 649 6 54 2 221 4 937 6 651 2 1082 2 1084 2 938 6 226 2 228 2 653 4 794 2 511 2 231 2 1092 2 943 12 67 4 360 2 362 6 70 2 71 2 659 2 946 8 72 2 804 2 363 6 1100 2 76 2 369 4 241 2 81 2 82 2 375 4 377 6 1110 4 674 12 955 6 90 2 538 10 388 2 1112 4 818 2 1114 2 1115 6 392 48 393 2 246 4 1117 2 1119 4 547 2 105 2 964 6 1120 2 397 2 398 2 682 6 254 2 255 2 257 2 836 2 116 2 119 4 404 4 120 2 693 2 264 6 122 6 558 2 1133 2 1137 2 409 2 844 2 695 4 849 2 978 2 977 2 568 2 418 2 708 4 989 2 991 2 712 2 862 2 572 2 148 4 713 26 426 2 715 2 432 4 718 2 578 2 436 2 720 2 589 2 726 2 
591 2 1008 6 736 2 1010 2 446 8 880 2 740 2 881 2 447 2 449 6 6 8 452 2 165 4 598 8 167 2 745 4 1025 2 747 8 172 6 296 2 893 2 297 4 892 2 1028 2 1029 6 458 2 175 2 301 2 303 2 1032 2 305 6 177 2 754 2 897 2 20 2 1040 2 617 2 618 2 325 2 620 8 627 6 626 2 473 4 922 4 34 2 198 2 924 2 200 2 484 6 204 6 780 4 45 2 786 2 349 6 213 6 350 2 649 6 502 4 54 2 221 4 937 6 651 2 1082 2 1084 2 938 6 226 2 228 2 653 4 794 2 511 2 231 2 1092 2 943 12 67 4 360 2 362 6 70 2 71 2 659 2 946 8 72 2 804 2 363 6 1100 2 76 2 369 4 241 2 81 2 82 2 375 4 377 6 1110 4 674 12 955 6 90 2 538 10 388 2 1112 4 818 2 1114 2 1115 6 392 48 393 2 246 4 1117 2 1119 4 547 2 105 2 964 6 1120 2 397 2 682 6 398 6 254 2 255 2 257 2 836 2 116 2 119 4 404 4 120 2 693 2 264 6 122 6 558 2 1133 2 1137 2 409 2 844 2 695 4 849 2 978 2 977 2 568 2 418 2 708 4 989 2 991 2 712 2 862 2 572 2 148 4 713 26 426 2 715 2 432 4 718 2 578 2 436 2 720 2 589 2 726 2 
591 2 880 2 881 2 6 8 598 10 12 2 296 2 892 2 297 6 893 2 301 2 303 2 305 6 611 2 897 2 898 2 20 2 312 6 320 2 617 2 618 2 325 2 620 8 622 6 917 6 626 2 627 12 922 4 34 2 924 2 342 2 640 6 45 4 346 6 349 6 350 2 649 8 54 2 937 6 651 2 938 6 653 4 67 4 943 16 360 4 362 6 70 2 71 2 659 2 946 12 72 2 363 8 76 2 369 4 80 2 82 2 81 2 377 6 375 4 674 10 90 2 955 12 388 2 392 52 393 2 105 2 964 12 397 2 398 6 682 6 116 2 404 4 119 4 120 2 693 2 122 6 409 2 695 4 977 2 978 2 418 2 708 4 989 2 991 2 712 2 713 24 148 4 426 2 715 4 432 4 718 2 436 2 720 2 726 2 736 2 1008 12 446 10 1010 2 740 2 447 2 449 6 165 4 452 2 167 2 745 4 1025 4 747 10 172 12 1028 2 458 2 1029 6 175 2 1032 2 177 4 754 2 1040 2 473 4 198 2 200 2 484 6 204 6 1063 6 780 4 786 2 211 2 213 12 502 4 221 4 1082 2 1084 2 228 2 226 2 794 2 1090 2 511 2 1092 2 231 2 804 2 1100 2 812 6 241 2 1110 4 538 8 1112 4 1114 2 818 2 1115 6 246 4 1116 2 1117 2 1119 4 547 2 1120 2 254 2 257 2 836 2 1128 6 1135 2 1133 2 558 2 264 6 1137 2 844 2 849 2 568 2 1148 6 572 2 862 2 578 2 589 2 
620 2 943 4 120 2 446 6 72 2 473 2 34 2 198 2 924 2 695 4 165 4 598 6 977 2 81 2 377 6 458 2 708 2 862 2 1114 2 1115 2 392 4 502 2 246 4 1040 2 1119 2 651 2 1120 2 397 2 653 2 398 4 589 2 254 2 511 2 257 2 325 2 
591 2 736 2 446 6 880 2 881 2 1014 2 449 6 451 2 452 2 598 6 745 2 1025 3 1028 2 892 2 297 4 458 2 1032 2 1040 2 325 2 620 2 473 2 198 2 34 2 924 2 200 2 204 6 786 2 350 2 502 2 649 6 53 2 651 2 1082 2 653 2 228 2 63 2 511 2 1092 2 943 4 67 4 360 3 946 8 72 2 1100 2 363 6 75 2 82 2 81 2 377 6 674 4 538 2 1112 4 1114 2 1115 2 392 28 393 2 246 4 1117 2 1119 2 102 3 547 2 1120 2 397 2 398 2 549 2 254 2 255 2 257 2 113 2 116 2 404 4 119 4 120 2 1133 2 844 2 695 4 977 2 418 2 139 2 708 2 862 2 572 2 713 24 715 3 996 2 718 2 436 2 578 2 589 2 
397 2 72 2 1043 2 
397 2 72 2 1043 2 
591 2 736 2 446 12 880 2 1013 2 881 2 449 6 452 2 165 4 598 12 291 2 167 2 745 6 12 4 747 4 1028 2 892 2 303 2 1032 2 617 2 1043 2 620 4 194 2 473 4 922 4 474 2 198 2 924 2 200 2 38 2 479 2 484 2 204 6 488 2 780 4 786 2 212 2 649 2 502 2 221 2 651 2 1082 2 228 2 653 2 1092 2 67 4 943 16 946 2 72 6 1100 2 363 2 366 2 369 2 82 2 375 4 377 6 89 2 1110 2 674 4 538 2 677 4 1112 4 96 4 1115 4 392 24 393 2 1117 2 545 2 246 4 1116 4 1119 2 547 2 1120 4 397 4 398 6 116 2 119 4 404 4 556 2 558 4 1133 2 844 2 695 4 127 2 128 4 978 2 982 2 853 2 418 2 708 4 989 2 991 2 712 2 572 2 148 4 713 16 426 2 715 2 432 4 436 2 578 2 582 2 1002 2 589 2 
674 2 538 2 751 2 556 2 212 2 840 2 713 2 771 2 392 4 311 2 221 2 849 2 484 2 982 2 82 2 618 2 794 2 
591 2 732 2 736 2 446 12 880 2 1013 2 881 2 449 6 452 2 165 4 598 12 167 2 745 6 12 4 747 4 1028 2 892 2 606 2 303 2 1032 2 617 2 1043 2 620 4 1046 2 194 4 473 4 922 4 474 2 198 2 924 2 200 2 38 2 925 2 484 2 204 6 780 4 786 2 212 2 649 2 502 2 651 2 1082 2 1084 2 653 2 228 2 1092 2 67 4 943 16 946 2 72 6 1100 2 363 2 369 2 82 2 375 4 377 6 89 2 1110 4 674 2 677 4 956 2 1112 4 96 4 1115 4 392 24 393 2 1117 2 545 2 246 4 1116 4 1119 2 547 2 1120 4 397 4 398 6 116 2 119 4 404 4 556 2 558 4 1133 2 844 2 695 4 127 2 128 4 978 2 982 2 853 2 418 2 708 4 989 2 991 2 712 2 572 2 148 4 713 16 426 2 715 4 432 4 436 2 578 2 582 2 1002 2 589 2 
591 2 736 2 446 12 880 2 1013 2 881 2 449 6 452 2 165 4 598 12 167 2 745 6 1022 2 12 4 747 4 1028 2 892 2 303 2 1032 2 617 2 1043 2 620 4 194 2 473 4 922 4 474 2 198 2 924 2 200 2 38 2 484 2 204 6 487 2 780 4 786 2 212 2 649 2 502 2 221 2 651 2 1082 2 1084 2 228 2 653 2 1092 2 67 4 943 16 946 2 72 6 1100 2 363 2 369 2 950 2 82 2 375 4 377 6 89 2 1110 4 674 4 538 2 677 4 1112 4 96 4 1115 4 392 24 393 2 1117 2 545 2 246 4 1116 4 1119 2 547 2 1120 4 397 4 398 6 116 2 119 4 404 4 556 2 558 4 1133 2 844 2 695 4 127 2 128 4 978 2 982 2 853 2 417 2 418 2 708 4 989 2 991 2 712 2 572 2 148 4 713 16 426 2 715 2 432 4 277 2 436 2 578 2 582 2 1002 2 589 2 
592 2 591 2 878 16 596 2 3 2 287 2 881 2 883 20 597 3 888 4 292 2 11 6 13 4 602 4 296 2 295 4 297 12 892 2 893 4 15 4 301 2 607 2 610 6 306 2 611 2 613 2 898 2 902 2 900 10 23 2 315 4 616 2 318 4 903 6 319 2 320 2 323 2 27 8 913 4 915 6 330 2 333 4 32 4 336 2 629 2 632 2 39 4 341 2 342 2 345 24 642 2 45 46 350 2 648 2 649 14 53 2 59 6 62 16 63 2 654 2 358 1 67 6 656 14 655 2 360 16 68 3 945 2 946 34 662 4 363 14 664 4 76 2 370 8 79 3 80 2 82 2 669 2 85 12 86 2 87 2 671 8 382 2 674 2 386 2 91 2 390 2 389 4 391 2 392 40 393 2 679 2 394 10 98 2 680 2 100 4 102 2 101 2 103 2 104 2 106 2 109 12 683 3 687 2 119 4 404 4 405 2 121 4 406 6 409 2 408 2 972 4 696 2 129 4 975 16 413 2 130 2 981 2 704 2 134 2 135 16 414 2 984 4 707 4 138 2 416 2 418 2 139 2 142 12 987 2 988 6 144 6 145 2 709 2 990 2 425 4 713 30 428 2 997 2 715 22 427 2 998 2 149 6 433 2 434 2 436 4 1001 2 720 2 727 28 728 2 1006 2 735 2 442 2 444 2 1012 4 1015 4 448 6 449 14 1016 2 451 2 452 4 1018 2 745 2 457 2 169 2 1025 22 1024 4 747 60 1027 6 1028 2 459 2 177 22 178 2 461 20 462 2 180 2 752 2 1041 4 757 2 1042 2 188 2 189 6 467 2 761 26 469 24 197 2 1050 2 1053 48 1055 2 477 4 774 8 481 10 483 2 204 6 206 4 1062 2 778 2 207 2 781 2 490 4 208 4 492 60 493 2 1070 18 785 2 786 4 788 4 211 2 495 2 1073 2 790 4 214 2 500 6 792 4 218 2 1078 2 1079 4 222 2 793 2 504 2 1082 2 227 2 228 4 1090 2 1091 2 229 2 230 2 1093 2 1092 2 1096 2 1097 2 233 2 234 2 519 2 1100 6 523 2 806 2 237 2 524 2 239 8 530 2 531 4 1104 16 1107 2 535 4 536 2 541 4 1112 6 818 2 819 12 1117 2 249 6 248 2 547 2 548 4 550 16 829 2 259 6 1127 2 1130 2 262 2 558 4 1133 4 1136 2 559 2 266 10 844 2 1139 6 1140 4 567 2 267 2 569 2 269 4 1145 4 1146 8 856 2 572 6 863 2 274 10 864 4 865 4 578 2 579 4 1153 2 868 2 583 4 871 2 1156 6 875 2 
687 2 360 2 68 2 1097 2 946 2 363 2 408 2 481 2 1019 2 130 2 1025 2 297 2 382 2 45 6 350 2 713 2 274 2 998 2 715 2 392 2 394 4 649 2 680 2 829 2 
687 2 360 2 68 2 1097 2 946 2 363 2 408 2 481 2 1019 2 130 2 1025 2 297 2 382 2 45 6 350 2 713 2 274 2 998 2 715 2 392 2 394 4 649 2 680 2 829 2 
687 2 360 2 68 2 1097 2 946 2 363 2 408 2 481 2 1019 2 130 2 1025 2 297 2 382 2 45 6 350 2 713 2 274 2 998 2 715 2 392 2 394 4 649 2 680 2 829 2 
687 2 970 2 798 2 656 2 765 2 121 2 406 4 946 2 662 2 631 4 774 2 1140 2 1062 4 169 4 1024 2 135 5 1025 3 269 2 1146 2 144 3 91 4 461 6 819 4 350 2 713 4 715 3 392 10 220 2 503 2 579 2 396 2 869 2 58 2 583 2 280 3 903 3 728 4 941 2 27 2 1044 2 
357 2 798 2 656 2 946 2 662 2 1025 2 1024 2 169 4 91 4 461 6 819 4 392 10 396 2 903 2 27 2 1044 2 687 2 970 2 765 2 406 4 32 2 121 2 631 4 774 2 1140 2 1062 4 135 4 269 2 1146 2 144 2 350 2 713 4 715 2 220 2 579 2 503 2 583 2 58 2 869 2 280 2 1156 2 941 2 728 4 
357 2 798 2 656 2 946 2 662 2 1025 2 1024 2 169 4 91 4 461 6 819 4 392 10 396 2 903 2 27 2 1044 2 687 2 970 2 765 2 406 4 32 2 121 2 631 4 774 2 1140 2 1062 4 135 4 269 2 1146 2 144 2 350 2 713 4 715 2 220 2 579 2 503 2 583 2 58 2 869 2 280 2 1156 2 941 2 728 4 
357 2 798 2 656 2 946 2 662 2 1025 2 1024 2 169 4 91 4 461 6 819 4 392 10 396 2 903 2 27 2 1044 2 687 2 970 2 765 2 406 4 32 2 121 2 631 4 774 2 1140 2 1062 4 135 4 269 2 1146 2 144 2 350 2 713 4 715 2 220 2 579 2 503 2 583 2 58 2 869 2 280 2 1156 2 941 2 728 4 
357 4 798 2 656 2 946 2 662 2 1025 2 1024 2 169 4 91 4 461 6 819 4 392 10 396 2 903 2 27 2 1044 2 687 2 970 2 765 2 406 4 32 4 121 2 631 4 774 2 1140 2 1062 4 135 5 269 2 1146 2 144 2 350 2 713 4 715 2 220 2 579 2 503 2 583 2 58 2 869 2 280 2 1156 4 941 2 728 4 
527 2 808 2 1042 2 957 2 170 2 379 2 
527 2 878 2 185 2 584 2 118 2 192 2 741 2 
114 2 329 1 361 2 1008 2 665 2 265 2 289 2 698 2 532 1 1020 2 168 2 782 2 603 2 1028 2 986 2 16 2 422 2 713 8 931 2 392 10 429 1 1080 1 187 2 872 1 190 2 1126 2 
357 2 121 6 406 4 32 2 629 2 525 2 774 6 847 2 775 2 1140 6 483 2 133 2 11 4 135 16 1024 6 1146 6 146 2 541 2 498 2 819 12 713 6 215 2 392 6 864 2 395 2 579 6 583 2 1122 4 1156 4 27 6 
688 1 593 2 1095 2 1072 2 49 2 713 1 930 4 820 2 392 1 337 2 25 2 1062 2 586 2 242 2 169 2 728 2 415 2 1067 7 
593 4 1095 4 1072 4 49 2 930 4 820 2 337 2 25 2 1062 2 586 2 242 2 169 2 728 2 415 2 1067 6 
688 1 593 8 1095 8 1072 8 49 8 713 1 930 4 820 2 392 1 337 6 25 2 1062 2 586 2 242 2 169 2 728 2 415 2 1067 10 
593 2 1095 2 1072 2 930 2 820 2 25 2 1062 2 586 2 242 2 169 2 728 2 415 2 1067 2 
729 2 1007 4 876 4 159 6 594 6 0 4 284 4 283 2 733 2 441 24 879 6 443 36 1011 10 2 4 162 2 449 248 9 124 290 16 166 4 14 8 604 26 749 2 300 10 748 6 460 2 304 6 307 2 309 6 182 12 612 4 1038 2 183 8 463 6 24 6 316 2 908 2 466 4 26 1 31 18 331 6 196 4 1051 5 769 6 628 4 36 8 927 6 42 2 779 92 636 4 338 2 1065 4 1068 8 638 90 783 8 46 34 786 8 496 24 351 4 1076 10 647 2 650 4 1083 2 224 18 506 4 1087 6 795 50 359 10 67 112 657 6 514 26 800 24 519 8 1100 58 526 6 365 6 810 2 811 16 809 10 1105 11 376 6 243 24 1108 8 88 2 675 6 1112 88 1113 84 93 8 392 150 823 16 824 4 826 12 1125 2 681 6 967 4 966 4 253 16 684 22 258 2 833 6 834 10 835 4 117 4 1131 2 838 6 405 8 1133 14 1138 6 561 42 1142 4 980 17 705 10 1144 6 138 8 855 4 1147 6 143 28 272 42 861 4 572 58 713 134 1149 24 716 4 577 24 436 14 156 2 873 90 588 4 724 10 
1007 2 359 2 594 2 67 16 441 2 286 2 520 2 519 2 803 2 1100 2 449 36 882 2 886 2 811 2 9 2 668 2 815 2 14 2 300 2 174 2 816 2 176 2 1112 16 307 2 392 34 310 4 823 2 963 2 316 2 251 4 906 2 760 2 253 2 909 2 110 2 400 2 762 2 621 2 117 2 195 2 331 2 261 2 1051 2 405 2 839 2 1133 2 560 2 125 2 635 2 928 2 927 2 203 2 1060 2 270 4 1144 2 138 2 44 2 143 26 786 2 496 2 992 2 572 2 1149 2 713 34 1076 2 50 2 866 2 436 2 1083 2 1085 2 156 2 
594 2 67 8 115 2 443 2 520 2 1011 2 261 2 519 2 405 2 839 2 1133 2 1100 4 449 20 811 2 203 2 9 4 980 2 456 2 138 2 143 12 786 2 176 2 1112 8 572 4 713 18 307 2 392 18 823 2 436 2 152 2 316 2 1083 2 224 2 108 2 156 2 253 2 909 2 468 2 
876 2 729 2 594 2 67 14 733 2 443 2 519 2 1011 2 1100 9 449 37 809 2 811 6 810 2 9 8 290 6 1105 2 1108 6 749 2 675 4 1112 14 93 4 307 2 392 28 1038 2 823 6 316 2 1125 2 253 6 908 2 684 10 834 2 833 4 1131 2 331 4 838 4 196 2 261 2 405 2 1051 2 1133 2 628 2 36 2 927 4 980 2 338 2 1065 2 705 2 1144 4 783 2 138 2 855 4 143 14 46 10 786 2 787 2 572 9 713 26 436 2 1083 2 224 2 156 2 724 2 
725 2 

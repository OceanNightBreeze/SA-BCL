#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V ERROR utilMDE.Options$ArgException 1239 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.NullPointerException 468 742 (251,1115) (251,1115) 563 
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 79 515 181 267 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_0()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_1()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_2()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_3()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_4()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_5()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_6()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_7()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_8()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_9()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_10()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_11()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_12()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_13()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_14()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_15()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_16()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_17()V PASSED
daikon.test.split.SplitterFactoryTest:testmisc_Fib_main_18()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_19()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_20()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_21()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_22()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_23()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_24()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_25()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_26()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_27()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_28()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_29()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_30()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_31()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_32()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__33()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__34()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__35()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__36()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__37()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__38()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__39()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__40()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__41()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__42()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__43()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.Quant:subsetOf([D[D)Z
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.Quant:ne(II)Z
jtb.syntaxtree.AdditiveExpression:accept(Ljtb.visitor.Visitor;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:jj_2_18(I)Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.TypeDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.syntaxtree.ClassOrInterfaceDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
jtb.syntaxtree.Modifiers:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ResultType;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
jtb.JavaParser:jj_3R_101()Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParser:jj_3R_48()Z
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_98()Z
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_210()Z
daikon.ProglangType:isScalar()Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
jtb.JavaParser:jj_3R_161()Z
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
jtb.syntaxtree.NodeSequence:accept(Ljtb.visitor.Visitor;)V
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.tools.jtb.PptNameMatcher:getUngenerifiedType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
daikon.VarInfo:name()Ljava.lang.String;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([D)Z
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.CompilationUnit;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.BlockStatement;)V
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_56()Z
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
jtb.syntaxtree.PackageDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.VarInfoName:repr()Ljava.lang.String;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.Quant:lexGT([I[I)Z
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReferenceType;)V
jtb.syntaxtree.NodeToken:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_72()Z
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant; | ASSIGN | 41066 | = null
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.test.TestQuant:assert_arrays_equals([I[I)V
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
jtb.JavaParser:jj_3_5()Z
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.PptTopLevel.CondIterator:hasNext()Z
jtb.syntaxtree.ClassOrInterfaceBody:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.PptName:toString()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
jtb.syntaxtree.NullLiteral:accept(Ljtb.visitor.Visitor;)V
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_12()Z
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
daikon.Debug:logDetail()Z
utilMDE.ArraysMDE:subarray([III)[I
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_21()Z
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
utilMDE.FuzzyFloat:FuzzyFloat()V
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:justified()Z
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArguments;)V
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
jtb.syntaxtree.InstanceOfExpression:accept(Ljtb.visitor.Visitor;)V
daikon.tools.jtb.SimpleTreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.VariableDeclaratorId:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_70()Z
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
jtb.JavaParser:jj_2_17(I)Z
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
jtb.syntaxtree.PrimaryPrefix:accept(Ljtb.visitor.Visitor;)V
utilMDE.UtilMDE:removeWhitespaceAfter(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.Quant:pairwiseLT([I[I)Z
daikon.Quant:subsetOf([F[D)Z
daikon.inv.Invariant:prob_or(DD)D
jtb.JavaParser:jj_2_25(I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Modifiers;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V | STATEMENT | 10772 | stmt -> ;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.ModBitTracker:num_sets()I
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3_22()Z
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_137()Z
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_87()Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.PptName:PptName(Ljava.lang.String;)V
jtb.JavaParser:jj_3R_134()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ShiftExpression;)V
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_89()Z
daikon.VarComparabilityImplicit:alwaysComparable()Z
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
jtb.JavaCharStream:UpdateLineColumn(C)V
jtb.JavaParser:jj_3R_149()Z
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ReferenceType;)V
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_ntk()I
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
jtb.syntaxtree.NodeListOptional:elements()Ljava.util.Enumeration;
jtb.JavaParser:jj_3R_108()Z
jtb.syntaxtree.FormalParameter:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_136()Z
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.JavaParser:jj_3R_86()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeOptional;)V
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
jtb.JavaCharStream:getBeginLine()I
jtb.JavaParser:jj_3R_62()Z
utilMDE.ArraysMDE:sum([[I)I
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.tools.jtb.Ast:getClassName(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.ModBitTracker:num_samples()I
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:JavaParser(Ljava.io.Reader;)V
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
jtb.JavaParser:jj_3R_124()Z
daikon.Quant:subsetOf([I[I)Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
jtb.syntaxtree.PrimaryExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljtb.syntaxtree.Node;)Z
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
utilMDE.Fmt:i(I)Ljava.lang.Integer;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
utilMDE.MathMDE:missing_numbers([I)[I
jtb.JavaParser:jj_3R_97()Z
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.test.TestAst.ClassOrInterfaceDeclarationHarvester:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments;
jtb.JavaParser:jj_3R_116()Z
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.test.InvariantFormatTester:execute()Z
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
jtb.syntaxtree.NodeListOptional:getParent()Ljtb.syntaxtree.Node;
jtb.syntaxtree.ClassOrInterfaceDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3_17()Z
jtb.JavaParser:jj_3R_52()Z
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
jtb.JavaParserTokenManager:MoreLexicalActions()V
jtb.JavaParser:jj_2_35(I)Z
jtb.JavaParser:jj_3_20()Z
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
utilMDE.ArraysMDE:min_max([I)[I
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
jtb.syntaxtree.AndExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.MultiplicativeExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
utilMDE.Assert:assertTrue(Z)V
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_58()Z
daikon.tools.jtb.Ast:getName(Ljtb.syntaxtree.MethodDeclaration;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
utilMDE.MathMDE:gcd_differences([I)I
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.Quant:subsetOf([S[S)Z
jtb.JavaParser:jj_3R_99()Z
daikon.PptSlice0:initInvariantsSeen()V
jtb.syntaxtree.NodeChoice:getParent()Ljtb.syntaxtree.Node;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.ArraysMDE:noDuplicates([I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryExpression;)V
utilMDE.WeakHasherMap:size()I
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.Quant:memberOf(I[I)Z
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3_19()Z
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.tools.jtb.Ast:quickFixForInternalComment(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_104()Z
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
jtb.syntaxtree.NodeSequence:elements()Ljava.util.Enumeration;
daikon.ProglangType:isPseudoArray()Z
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameters;)V
jtb.visitor.TreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.EqualityExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.NonModulus:enabled()Z
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_105()Z
daikon.Quant:eltwiseGTE([I)Z
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_61()Z
jtb.syntaxtree.TypeParameter:accept(Ljtb.visitor.Visitor;)V
jtb.JavaCharStream:BeginToken()C
jtb.JavaParser:jj_3R_115()Z
utilMDE.OrderedPairIterator:setnext2()V
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.inv.OutputFormat:isJavaFamily()Z
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.PptName:isCombinedExitPoint()Z
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_81()Z
daikon.test.TestAst.MethodDeclarationHarvester:visit(Ljtb.syntaxtree.MethodDeclaration;)V
jtb.JavaParser:jj_3R_102()Z
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.Quant:sameLength([I[I)Z
jtb.syntaxtree.ShiftExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
jtb.visitor.TreeFormatter:TreeFormatter()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryPrefix;)V
utilMDE.UtilMDE:removeWhitespaceBefore(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ExclusiveOrExpression;)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.ModBitTracker:split(I)I
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3_27()Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.inv.Invariant:prob_and(DD)D
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
jtb.syntaxtree.Statement:accept(Ljtb.visitor.Visitor;)V
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
jtb.visitor.FormatCommand:FormatCommand(II)V
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.BlockStatement:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_68()Z
jtb.JavaCharStream:getEndLine()I
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.ArraysMDE:min([I)I
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InclusiveOrExpression;)V
daikon.Quant:setEqual([I[I)Z
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.tools.jtb.PptNameMatcher:PptNameMatcher(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:subarray([JII)[J
utilMDE.MathMDE:modulus([I)[I
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
jtb.JavaParser:jj_3_36()Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3_18()Z
jtb.JavaParser:jj_3R_88()Z
utilMDE.Intern:intern([D)[D
jtb.JavaParser:jj_3_35()Z
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.TypeArgument:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
jtb.visitor.TreeFormatter:space(I)Ljtb.visitor.FormatCommand;
utilMDE.MathMDE:nonmodulus_strict([I)[I
jtb.JavaParser:jj_3_4()Z
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
utilMDE.Intern.SequenceAndIndices:hashCode()I
utilMDE.Intern:internSubsequence([JII)[J
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:VariableDeclaratorId()Ljtb.syntaxtree.VariableDeclaratorId;
daikon.tools.jtb.Ast:print(Ljtb.syntaxtree.Node;)Ljava.lang.String;
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
utilMDE.FuzzyFloat:indexOf([D[D)I
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.Quant:eltsGT([II)Z
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
jtb.visitor.TreeFormatter:space()Ljtb.visitor.FormatCommand;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
jtb.JavaParser:jj_3R_76()Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.Quant:pairwiseDivides([I[I)Z
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:calc_range()J
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.VariableDeclaratorId:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:fn_compose([I[I)[I
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
jtb.JavaParser:jj_3R_110()Z
daikon.tools.jtb.Ast:typeMatch(Ljava.lang.String;Ljava.lang.String;)Z
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.inv.Invariant:logDetail()Z
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.PptName:getFullClassName()Ljava.lang.String;
daikon.Quant:eq(FF)Z
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
jtb.syntaxtree.NodeSequence:elementAt(I)Ljtb.syntaxtree.Node;
jtb.syntaxtree.ReferenceType:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Name;)V
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.tools.jtb.Ast:getParameters(Ljtb.syntaxtree.MethodDeclaration;)Ljava.util.List;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
jtb.syntaxtree.Name:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.tools.jtb.Ast:create(Ljava.lang.String;[Ljava.lang.Class;[Ljava.lang.Object;Ljava.lang.String;)Ljtb.syntaxtree.Node;
utilMDE.MathMDE:pow_fast(II)I
jtb.JavaParser:jj_3R_117()Z
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.LimitedSizeIntSet:add(I)V
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.Invariant:prob_and(DDD)D
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
jtb.syntaxtree.FormalParameters:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.FuzzyFloat:indexOf([DD)I
jtb.JavaParser:jj_3_15()Z
daikon.ValueTuple:size()I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Statement;)V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
jtb.syntaxtree.ConditionalOrExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Expression;)V
utilMDE.Intern:intern([I)[I
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
jtb.syntaxtree.PostfixExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3_10()Z
jtb.JavaParser:jj_3R_106()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
utilMDE.FuzzyFloat:gte(DD)Z
daikon.VarInfo:new_ppt()V
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.Quant:pairwiseEqual([I[I)Z
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.Quant:memberOf(J[J)Z
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
jtb.syntaxtree.UnaryExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_73()Z
utilMDE.UtilMDE:lineNumberFileReader(Ljava.io.File;)Ljava.io.LineNumberReader;
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.tools.jtb.Ast:removeWhitespace(Ljava.lang.String;)Ljava.lang.String;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
jtb.JavaParser:jj_3R_69()Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.inv.unary.LowerBoundCore:calc_modulus()J
jtb.syntaxtree.VariableDeclaratorId:VariableDeclaratorId(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.test.TestAst:checkMatch(Ljava.lang.String;Ljtb.syntaxtree.MethodDeclaration;Ldaikon.tools.jtb.PptNameMatcher;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:ungenerify(Ljtb.syntaxtree.ClassOrInterfaceType;)V
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.Type;)V
jtb.syntaxtree.CompilationUnit:accept(Ljtb.visitor.Visitor;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptSlice1:arity()I
jtb.JavaParser:jj_3R_57()Z
jtb.JavaParser:jj_2_13(I)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;II)V
jtb.JavaParser:jj_3_14()Z
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.Quant:lte(II)Z
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Debug:logOn()Z
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NullLiteral;)V
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_53()Z
jtb.syntaxtree.TypeParameters:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.Quant:intersection([I[I)[I
daikon.VarInfoName:hashCode()I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArgument;)V
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
jtb.syntaxtree.ClassOrInterfaceType:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern:internSubsequence([III)[I
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
jtb.Token:newToken(I)Ljtb.Token;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3_30()Z
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
jtb.JavaParser:jj_2_5(I)Z
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.ValueTuple:isMissing(I)Z
utilMDE.FuzzyFloat:lt(DD)Z
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
jtb.syntaxtree.ResultType:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_80()Z
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.Quant:eq(DD)Z
jtb.JavaParser:jj_3_1()Z
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_49()Z
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
jtb.JavaParser:jj_3R_96()Z
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.FormalParameter:FormalParameter(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Type;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.VariableDeclaratorId;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;)V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.syntaxtree.ClassOrInterfaceBody:getParent()Ljtb.syntaxtree.Node;
daikon.inv.Invariant:format()Ljava.lang.String;
utilMDE.MathMDE:gcd([I)I
jtb.JavaParser:jj_3R_67()Z
daikon.ProglangType:elementType()Ldaikon.ProglangType;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:getToken(I)Ljtb.Token;
daikon.diff.Node:Node()V
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
jtb.JavaParser:jj_3R_107()Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.PptSlice1:num_samples()I
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
jtb.syntaxtree.NodeChoice:accept(Ljtb.visitor.Visitor;)V
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.diff.DetailedStatisticsVisitor:freq(II)D
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_63()Z
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.UtilMDE:split(Ljava.lang.String;Ljava.lang.String;)[Ljava.lang.String;
daikon.tools.jtb.Ast:getPackage(Ljtb.syntaxtree.CompilationUnit;)Ljava.lang.String;
daikon.VarInfo:relate_var()V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.VarInfoName:name()Ljava.lang.String;
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:isSubarray([I[II)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Literal;)V
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3R_180()Z
jtb.syntaxtree.ConditionalExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AdditiveExpression;)V
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
jtb.syntaxtree.RelationalExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.VarInfoName:isLiteralConstant()Z
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
utilMDE.Intern:numIntArrays()I
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:enabled()Z
utilMDE.MathMDE:negate(I)I
daikon.PptSlice0:arity()I
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.PptSlice0.ImplicationWrapper:hashCode()I
utilMDE.Intern:intern([J)[J
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PackageDeclaration;)V
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.tools.jtb.PptNameMatcher:typeMatch(Ljava.lang.String;Ljtb.syntaxtree.FormalParameter;)Z
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.ProglangType:baseIsScalar()Z
daikon.Quant:memberOf(F[D)Z
utilMDE.FuzzyFloat:lte(DD)Z
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_scan_token(I)Z
utilMDE.OrderedPairIterator:setnext1()V
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_125()Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:copy(Ljava.util.HashMap;)Ljava.util.HashMap;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.tools.jtb.SimpleTreeDumper:printToken(Ljava.lang.String;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.TreeFormatter:add(Ljtb.visitor.FormatCommand;)V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
jtb.JavaParser:jj_3_16()Z
jtb.JavaParser:jj_3R_162()Z
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.UpperBoundCore:computeConfidence()D
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.NodeToken:numSpecials()I
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
jtb.syntaxtree.TypeArgument:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_123()Z
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptMap:asCollection()Ljava.util.Collection;
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaCharStream:backup(I)V
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.TypeDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PostfixExpression;)V
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ImportDeclaration;)V
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.Quant:eltwiseGT([I)Z
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:setDiff([I[I)[I
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;)V
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
jtb.JavaParser:jj_2_16(I)Z
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_100()Z
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
jtb.syntaxtree.MethodDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eq(II)Z
daikon.Quant:eltsGteIndex([I)Z
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
jtb.syntaxtree.UnaryExpressionNotPlusMinus:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.Quant:eltsLTE([II)Z
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.Quant:eltsEqual([II)Z
daikon.Quant:eltsGTE([II)Z
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ProglangType:baseIsIntegral()Z
jtb.syntaxtree.Block:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.inv.Invariants:Invariants()V
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.ExclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_55()Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:sum([I)I
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.EqualityExpression;)V
utilMDE.ArraysMDE:isSubset([D[D)Z
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_120()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReturnStatement;)V
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
jtb.visitor.TreeFormatter:TreeFormatter(II)V
daikon.ProglangType:dimensions()I
daikon.inv.Invariant:getConfidence()D
jtb.JavaCharStream:readChar()C
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
utilMDE.MathMDE:sign(I)I
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
jtb.JavaParser:jj_3R_51()Z
daikon.tools.jtb.Ast:getType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
jtb.JavaParser:jj_3R_119()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.RelationalExpression;)V
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.UtilMDE:lineNumberFileReader(Ljava.lang.String;)Ljava.io.LineNumberReader;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
jtb.JavaCharStream:getEndColumn()I
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;)Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
jtb.syntaxtree.ClassOrInterfaceBody:ClassOrInterfaceBody(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.FormalParameter;)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
jtb.JavaParser:jj_3R_75()Z
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
daikon.Quant:eltsLteIndex([I)Z
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;Ljava.lang.String;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalOrExpression;)V
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.Quant:gt(II)Z
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_47()Z
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:memberOf(D[F)Z
jtb.JavaParser:jj_3R_60()Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_85()Z
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.ModBitTracker:ModBitTracker(I)V
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_2_36(I)Z
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.syntaxtree.Type:accept(Ljtb.visitor.Visitor;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.MathMDE:mod_positive(II)I
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
jtb.syntaxtree.FormalParameter:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_2_15(I)Z
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.Quant:subsetOf([D[F)Z
jtb.JavaParser:jj_2_12(I)Z
jtb.syntaxtree.ClassOrInterfaceDeclaration:ClassOrInterfaceDeclaration(Ljtb.syntaxtree.NodeChoice;Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ClassOrInterfaceBody;)V
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.config.Configuration:apply(Ljava.lang.String;)V
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.FuzzyFloat:ne(DD)Z
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor.1:visit(Ljtb.syntaxtree.TypeParameter;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.NodeOptional:accept(Ljtb.visitor.Visitor;)V
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
jtb.JavaCharStream:ReadByte()C
utilMDE.FuzzyFloat:gt(DD)Z
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
jtb.JavaParser:jj_3R_163()Z
daikon.Quant:pairwiseSquare([I[I)Z
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.Ppt:Ppt()V
jtb.JavaParser:jj_2_4(I)Z
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameter;)V
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Quant:pairwiseGT([I[I)Z
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
jtb.JavaParser:jj_3_25()Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.diff.RootNode:RootNode()V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InstanceOfExpression;)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
jtb.syntaxtree.TypeBound:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:concat([I[I)[I
jtb.syntaxtree.MethodDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.PptName:getSignature()Ljava.lang.String;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
jtb.JavaParser:jj_2_3(I)Z
jtb.JavaParser:jj_2_14(I)Z
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameter;)V
jtb.JavaParser:jj_3R_103()Z
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.Quant:subsetOf([B[I)Z
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3_3()Z
jtb.JavaParser:jj_3R_135()Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.Quant:eq(JJ)Z
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclarator;)V
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
jtb.syntaxtree.Literal:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE:gcd(II)I
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
jtb.syntaxtree.TypeDeclaration:TypeDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_126()Z
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Type;)V
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:indexOf([ZZ)I
jtb.visitor.TreeFormatter:placeToken(Ljtb.syntaxtree.NodeToken;II)V
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_3_13()Z
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.Quant:lt(II)Z
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.Invariant:logOn()Z
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalAndExpression;)V
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
jtb.syntaxtree.NodeListOptional:present()Z
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameters;)V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:pow(II)I
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
jtb.syntaxtree.ImportDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.PptName:getMethodName()Ljava.lang.String;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ValueTuple:isMissingFlow(I)Z
jtb.JavaParserTokenManager:jjStopAtPos(II)I
jtb.visitor.FormatCommand:getCommand()I
jtb.JavaParser:jj_3R_122()Z
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:slice([III)[I
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.InvMap:InvMap()V
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeDeclaration;)V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.tools.jtb.Ast:getParent(Ljava.lang.Class;Ljtb.syntaxtree.Node;)Ljtb.syntaxtree.Node;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
jtb.JavaParser:jj_3R_74()Z
daikon.Quant:noDups([I)Z
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljava.lang.String;Ljava.lang.String;Ljava.util.List;)Z | ASSIGN | 7265 | = null
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
jtb.JavaParser:jj_3R_114()Z
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;)V
daikon.Quant:eltwiseLT([I)Z
jtb.visitor.TreeDumper:printToken(Ljava.lang.String;)V
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.Quant:lexGTE([I[I)Z
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.Quant:eltsNotEqual([II)Z
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
jtb.JavaParser:jj_3R_54()Z
jtb.syntaxtree.InclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:union([I[I)[I
daikon.Quant:eltwiseNotEqual([I)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.Quant:eltsEqualIndex([I)Z
daikon.Quant:isReverse([I[I)Z
jtb.JavaParser:jj_2_1(I)Z
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName:toString()Ljava.lang.String;
jtb.JavaParser:jj_3R_121()Z
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.ReturnStatement:accept(Ljtb.visitor.Visitor;)V
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.Quant:eltsLT([II)Z
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
jtb.syntaxtree.MethodDeclarator:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_148()Z
jtb.syntaxtree.ClassOrInterfaceBody:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_2_21(I)Z
utilMDE.MathMDE:gcd(JJ)J
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.syntaxtree.TypeArguments:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
jtb.JavaParser:jj_3_29()Z
jtb.visitor.FormatCommand:getNumCommands()I
jtb.JavaParser:jj_2_10(I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpression;)V
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameters;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
jtb.JavaCharStream:FillBuff()V
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.tools.jtb.SimpleTreeDumper:SimpleTreeDumper(Ljava.io.Writer;)V
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
jtb.syntaxtree.Expression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeOptional:present()Z
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.PptName:isEnterPoint()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:element_range([I)I
daikon.Quant:lexNotEqual([I[I)Z
daikon.Quant:memberOf(S[S)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_77()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeBound;)V
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
utilMDE.Options.ArgException:ArgException(Ljava.lang.String;)V
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
utilMDE.ArraysMDE:sorted([I)Z
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
jtb.JavaParser:jj_3R_133()Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap:processQueue()V
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.ModBitTracker:num_vars()I
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
daikon.tools.jtb.Ast:create(Ljava.lang.String;Ljava.lang.String;)Ljtb.syntaxtree.Node;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.LimitedSizeIntSet:size()I
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.Quant:lexEqual([I[I)Z
utilMDE.UtilMDE:removeWhitespaceAround(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.Quant:memberOf(F[F)Z
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MultiplicativeExpression;)V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String; | CONDITION | 14923 | if (x) -> if (!x)
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.Quant:eltsLtIndex([I)Z
daikon.Quant:subsetOf([F[F)Z
jtb.JavaCharStream:getBeginColumn()I
daikon.Quant:eltsGtIndex([I)Z
daikon.ProglangType:isIntegral()Z
daikon.inv.Invariant:isWorthPrinting()Z
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
jtb.syntaxtree.ConditionalAndExpression:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AndExpression;)V
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.Quant:pairwiseLTE([I[I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_169()Z
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Block;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:indexOf([II)I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
jtb.JavaParser:jj_3R_50()Z
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.ProglangType:isArray()Z
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
utilMDE.FuzzyFloat:eq(DD)Z
daikon.Quant:gte(II)Z
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:max([I)I
jtb.syntaxtree.NodeList:NodeList()V
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.UtilMDE:splitLines(Ljava.lang.String;)[Ljava.lang.String;
jtb.syntaxtree.TypeArguments:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:sum([D)D
daikon.Quant:lexLTE([I[I)Z
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:eltwiseEqual([I)Z
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_118()Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
jtb.JavaCharStream:GetImage()Ljava.lang.String;
jtb.syntaxtree.CompilationUnit:CompilationUnit(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
daikon.inv.filter.ParentFilter:ParentFilter()V
jtb.syntaxtree.NodeSequence:getParent()Ljtb.syntaxtree.Node;
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
daikon.tools.jtb.Ast:format(Ljtb.syntaxtree.Node;)Ljava.lang.String;
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:subsetOf([J[J)Z
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltsNotEqualIndex([I)Z
jtb.JavaParser:jj_3R_164()Z
daikon.tools.jtb.PptNameMatcher:extractPptArgs(Ldaikon.PptName;)Ljava.util.List;
jtb.JavaParser:jj_3_28()Z
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
jtb.JavaParser:jj_3R_109()Z
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBody;)V
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.inv.unary.LowerBoundCore:calc_range()J
jtb.visitor.TreeDumper:TreeDumper(Ljava.io.Writer;)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:lexLT([I[I)Z
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeSequence;)V
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeListOptional:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:sum([[D)D
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.ValueSet:ValueSet(I)V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
jtb.syntaxtree.TypeArguments:TypeArguments(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeArgument;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
utilMDE.OrderedPairIterator:hasNext()Z
jtb.syntaxtree.CompilationUnit:getParent()Ljtb.syntaxtree.Node;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.PptSlice2:arity()I
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;Z)Z
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.tools.jtb.Ast.1GetParametersVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:concat([I[I)[I
daikon.VarInfoName.Simple:isLiteralConstant()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalExpression;)V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
jtb.syntaxtree.TypeDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:FormalParameter()Ljtb.syntaxtree.FormalParameter;
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.Quant:eltwiseLTE([I)Z
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
1051 2 1011 2 1012 2 710 4 1215 2 322 2 408 2 530 2 1216 2 50 2 1187 2 52 2 1340 2 328 2 980 2 1263 4 289 4 982 4 1061 2 720 2 1026 2 63 2 302 4 464 2 864 2 1116 2 906 2 1075 2 466 2 870 2 1204 2 699 2 1281 2 84 4 875 2 225 2 227 2 361 2 180 2 1172 2 1286 2 838 2 185 2 559 2 
1331 18 1274 2 302 4 484 2 407 16 1036 4 260 22 125 2 958 6 1221 16 714 16 646 2 51 48 1295 6 929 6 53 4 434 4 1123 32 911 6 735 4 38 32 982 4 675 4 331 2 786 6 517 2 1370 6 791 2 1005 32 226 4 1322 16 856 6 228 2 521 4 1304 4 859 56 820 6 300 4 1111 8 
832 2 1075 2 713 2 
749 2 1034 2 620 2 449 2 875 2 721 2 531 2 511 2 107 2 978 10 705 2 991 2 1277 22 20 2 
900 2 982 2 302 2 1270 2 1228 4 497 2 838 2 394 2 450 2 
663 2 1264 2 507 2 232 6 1352 2 465 2 552 2 1105 2 357 6 753 6 68 2 
861 6 1236 6 673 2 982 2 1227 6 302 2 419 2 1014 4 2 2 1217 6 1184 2 1057 2 348 4 
617 8 1331 8 302 6 118 4 407 10 260 12 600 2 714 10 1221 10 51 26 219 4 1123 16 735 6 699 2 38 16 982 6 155 2 331 4 1370 10 657 4 791 2 1005 16 444 2 443 8 1322 10 856 8 521 6 880 2 859 28 424 2 
95 4 469 6 
176 2 
1331 2 407 2 801 2 260 2 324 2 1219 2 1221 2 714 2 51 4 871 2 351 2 1123 2 912 2 38 2 331 2 1370 4 1005 2 1322 2 521 2 859 6 726 2 66 2 923 2 
1330 2 38 8 281 2 407 4 1036 4 260 4 1005 8 714 4 1221 4 1322 4 51 12 929 6 859 16 219 2 911 6 1123 8 300 4 
425 2 1051 2 115 4 143 4 92 62 569 4 1135 4 729 2 712 4 258 2 955 4 1075 8 713 6 926 4 888 2 959 14 128 2 1204 4 648 2 492 2 1082 2 98 2 242 2 289 4 1040 10 12 2 654 2 1367 4 832 2 314 4 440 2 421 2 1006 4 679 2 633 2 315 10 1348 4 524 2 252 2 89 2 
976 2 1239 2 1214 2 1059 2 157 2 
982 2 622 2 
506 2 982 4 389 2 
618 3 974 3 1056 3 532 2 975 2 1294 8 977 2 715 2 1139 2 806 2 1296 2 286 2 1297 2 99 3 8 2 100 2 292 2 10 2 982 34 630 2 106 1 987 2 1149 2 298 3 900 2 1150 1 634 1 1064 2 637 4 903 2 21 2 1158 3 22 2 1159 2 302 32 821 2 1237 6 543 2 997 6 730 2 824 2 733 2 1240 2 1080 1 1079 6 471 5 1315 2 734 2 32 2 1242 2 1003 2 1243 2 34 24 390 2 1084 3 37 2 392 2 312 1 653 2 313 2 658 8 1169 2 318 2 744 2 139 2 1008 2 1324 1 1176 2 1249 16 230 32 46 1 747 16 750 1 1099 1 1254 2 48 12 667 2 844 32 413 2 489 1 847 4 147 4 754 2 755 16 239 2 240 2 932 2 758 2 1022 2 496 4 1343 2 584 2 334 3 422 2 1268 16 156 1 247 3 498 4 158 1 682 2 501 2 502 1 945 2 591 2 1110 2 1195 1 65 6 253 2 1349 3 596 4 71 2 1200 2 256 2 73 2 428 2 693 2 1355 2 956 2 1358 2 694 1 429 2 1038 3 170 1 603 2 1360 2 266 2 268 8 697 12 172 2 1362 2 874 2 272 4 1364 2 965 2 701 2 274 2 1368 24 1043 3 177 1 359 2 878 2 1208 2 793 2 612 4 1372 2 613 2 614 2 1376 2 1049 2 
151 2 
364 2 1050 6 365 2 1052 8 366 2 711 2 373 6 716 126 717 6 1058 58 7 6 375 180 9 2 376 4 377 6 14 4 378 16 15 2 379 6 380 4 17 10 18 170 23 6 1072 6 25 2 1073 2 384 2 27 4 1076 330 1077 2 387 2 1078 4 29 12 1081 2 36 2 391 2 737 4 39 4 736 4 1086 104 740 2 1088 180 1090 2 395 2 1089 4 396 6 398 4 399 10 44 208 742 2 1093 46 1094 4 402 16 1095 28 403 2 1096 2 404 6 405 24 406 180 47 2 752 540 412 4 414 6 756 2 757 4 1104 4 55 4 1106 62 56 6 761 4 760 16 417 10 420 2 58 4 60 4 61 72 765 126 423 2 1109 4 766 4 67 2 768 4 70 2 769 4 426 8 1113 2 1115 2 427 2 1117 2 75 48 76 350 773 2 775 8 776 66 77 26 432 2 1119 6 433 2 778 24 779 2 1121 42 780 2 781 28 1124 4 782 2 78 2 784 2 435 2 436 2 80 286 437 10 785 2 438 82 787 198 439 4 1130 2 1131 4 441 2 1132 6 792 2 87 2 795 2 796 2 446 6 797 4 91 2 447 6 798 6 799 2 802 2 1136 2 1138 2 804 4 96 2 809 10 453 4 1144 4 102 2 815 2 817 6 818 2 1146 2 1148 28 455 28 105 2 1152 6 1151 2 108 6 1155 48 819 4 462 2 113 30 1160 8 463 6 116 2 1161 2 122 2 822 2 126 4 467 2 468 2 129 24 827 2 828 66 130 2 474 2 831 2 476 4 1166 26 1167 6 833 6 133 6 132 2 477 8 134 16 135 22 136 2 478 52 479 12 1171 2 137 44 138 2 481 2 480 10 837 104 1174 2 1177 10 140 2 841 8 141 2 483 12 1179 2 1180 4 145 6 1181 8 1182 6 485 2 1183 2 146 8 845 6 491 26 1186 8 493 28 850 2 1188 104 152 2 153 10 154 2 1190 2 1192 8 499 36 1194 6 1193 4 857 6 858 4 1196 214 504 2 165 2 509 8 867 4 1201 2 869 6 167 2 1202 2 510 2 168 2 169 4 512 12 514 6 172 2 873 28 174 6 173 4 516 6 175 104 1207 6 876 6 519 4 877 2 520 6 1209 2 178 2 525 6 1210 14 183 2 882 4 527 12 528 2 1213 2 885 396 191 2 1218 4 193 2 1220 2 533 104 889 102 1222 6 195 344 196 12 197 4 891 4 892 2 893 28 1225 2 1226 26 894 6 538 2 1229 2 895 2 898 2 1233 8 901 180 206 64 208 108 904 2 209 2 542 6 210 2 544 2 211 2 213 2 214 194 1238 6 548 10 908 2 910 4 221 2 549 12 1244 160 551 8 914 2 913 2 223 180 224 2 917 6 918 44 919 2 553 2 554 70 1247 180 921 62 1251 2 561 6 563 2 1252 6 564 18 565 4 567 4 566 2 568 4 1253 6 233 4 571 2 1257 2 235 4 576 26 236 26 575 44 574 4 577 58 238 52 1259 6 930 4 580 2 1261 2 243 2 582 4 934 4 586 6 585 2 1266 4 937 2 943 4 944 2 249 6 248 2 592 4 593 14 251 2 948 2 949 6 255 22 1275 2 597 24 951 16 257 28 599 84 259 24 952 6 954 28 263 2 264 10 602 180 265 28 963 52 964 2 606 78 1279 160 1280 2 609 2 607 2 966 20 275 2 611 2 610 2 1282 18 968 10 276 4 278 2 277 4 1284 8 1285 24 279 4 1288 2 615 18 1290 2 972 18 282 6 283 2 973 2 284 2 624 6 625 2 1298 2 293 6 294 6 982 10 984 2 1300 28 628 4 986 6 632 4 297 2 988 194 1302 94 1303 2 1305 18 990 396 1307 4 992 2 993 4 1308 22 995 2 302 10 1310 2 639 24 640 6 1311 8 642 2 1312 90 645 2 1313 2 998 2 1000 4 647 6 308 2 311 2 310 4 1004 2 652 2 1317 2 655 2 1318 2 1319 2 659 4 317 2 1323 2 1325 6 319 4 662 2 1329 20 1335 10 1013 6 666 18 1336 208 1015 14 323 6 1017 6 1018 2 1338 2 1339 322 327 146 670 2 1020 2 1021 44 332 2 676 188 1023 16 1024 2 335 8 1345 10 1344 28 680 2 683 2 338 2 687 2 1032 2 1350 70 1033 4 688 2 1351 4 340 208 689 2 690 2 1353 4 691 10 692 4 1037 8 1356 4 344 14 1359 322 345 42 346 6 695 2 1039 6 349 2 353 4 354 22 700 6 355 180 356 2 1042 2 1369 2 1044 2 702 18 1371 2 1045 2 703 2 704 6 1046 2 1375 6 706 18 707 6 1047 8 1048 24 1377 4 1378 6 
1108 2 326 2 118 2 90 2 829 2 595 2 1075 2 124 1 
326 2 415 2 829 2 
326 2 244 2 829 2 
372 2 6 2 1143 2 
326 2 829 2 
6 2 839 2 
1129 2 829 2 
537 2 372 2 6 2 
1278 2 372 2 149 2 
372 2 1255 2 924 2 
372 2 579 2 1002 2 
4 2 1063 2 372 2 
1291 2 6 2 
1134 2 829 2 
1278 2 1120 2 
924 2 1381 2 
807 2 579 2 
1063 2 350 2 
6 2 1142 2 
1063 2 830 2 
579 2 1248 2 
915 2 924 2 
1278 2 1245 2 
537 2 372 2 6 2 1232 2 
537 2 372 2 6 2 1205 2 1232 2 
457 2 372 2 6 2 
372 2 6 2 994 2 
482 2 863 2 5 2 352 2 
290 2 372 2 829 2 
1316 2 829 2 
1373 2 1016 2 90 2 1075 2 
1108 2 1373 2 1016 2 90 2 1075 2 1133 2 
326 2 118 2 90 2 829 2 1075 2 812 2 
1114 2 322 2 
1097 2 118 2 90 2 1075 2 
579 2 451 2 
1063 2 840 2 
1278 2 1156 2 
836 2 924 2 
1063 2 1332 2 924 2 
1063 2 1287 2 924 2 
1063 2 924 2 69 2 
1063 2 1127 2 924 2 
144 2 1075 2 1276 6 650 6 442 2 555 2 635 2 90 2 
6 2 661 2 
748 2 475 2 1035 2 1206 2 0 2 627 4 843 2 1137 2 936 2 1246 2 540 2 316 2 1028 2 1314 4 971 2 1235 2 1277 6 150 2 
372 2 1327 2 
22 2 
532 2 285 2 1139 2 806 2 292 2 291 2 200 4 982 26 722 2 106 2 1149 2 900 2 637 4 302 26 1237 2 997 6 730 2 1074 2 824 2 1079 2 1241 2 734 2 1003 2 37 6 653 2 658 2 318 2 139 2 1176 2 1249 6 230 4 320 2 750 4 48 8 667 2 844 6 847 4 147 2 573 2 754 2 239 2 148 2 495 2 496 2 1342 2 1022 2 1343 2 584 2 935 2 156 2 945 2 946 2 1110 2 65 4 253 2 596 4 73 2 693 2 956 2 1360 2 266 2 697 8 172 2 272 2 1364 4 701 2 878 2 1208 2 612 4 360 2 522 2 1376 2 186 4 1049 2 1382 2 709 2 
532 2 285 2 1139 2 806 2 292 2 291 2 200 4 982 26 722 2 106 2 1149 2 900 2 637 4 302 26 1237 2 997 6 730 2 1074 2 824 2 1079 2 1241 2 734 2 1003 2 37 6 653 2 658 2 318 2 139 2 1176 2 1249 6 1009 2 230 4 320 2 750 2 570 2 48 8 667 2 844 6 325 2 847 4 147 2 573 2 754 2 239 2 240 2 148 2 496 2 1342 2 1022 2 1343 2 584 2 156 2 945 2 946 2 1110 2 65 6 253 2 596 4 73 2 693 2 956 2 1360 2 266 2 697 8 172 2 272 2 1364 4 965 2 701 2 878 2 1208 2 612 4 360 2 522 2 613 2 1376 2 186 4 1049 2 1382 2 
678 2 
187 2 473 2 
1264 2 1060 2 301 2 1352 2 72 2 304 2 357 2 343 2 753 2 358 2 1007 4 660 4 215 2 1102 2 307 2 109 2 416 2 783 2 
663 2 616 2 142 4 232 6 1053 6 1293 4 753 4 887 2 848 2 847 2 623 2 1102 2 239 2 241 2 329 2 416 2 452 2 292 2 1264 4 201 2 1060 2 982 12 989 2 207 2 945 2 1154 2 684 2 109 2 637 2 1199 2 301 2 507 2 302 6 1352 4 72 2 1071 4 997 4 304 2 730 2 343 2 215 4 824 2 307 2 172 2 220 2 269 2 1003 2 783 2 1083 4 82 2 357 6 397 2 85 4 358 2 660 4 1007 4 400 2 879 2 362 2 1178 2 
663 2 616 2 142 4 232 6 1053 6 1293 4 753 6 887 2 848 2 847 2 623 2 1102 2 239 2 241 2 1105 2 329 2 416 2 452 2 292 2 1264 4 201 2 1060 2 982 12 989 2 207 2 945 2 1154 2 684 2 109 2 637 2 1199 2 301 2 302 6 1352 4 72 2 1071 4 997 4 304 2 730 2 343 2 215 4 824 2 307 2 172 2 220 2 269 2 1003 2 783 2 1083 4 82 2 357 4 397 2 85 4 358 2 660 4 1007 4 400 2 879 2 362 2 1178 2 
663 2 616 2 142 4 232 6 1053 6 1293 8 753 6 887 2 848 2 847 2 623 2 1102 2 239 2 241 2 329 2 416 2 452 2 292 2 1264 4 201 2 1060 2 982 12 989 2 207 2 945 2 1154 2 684 2 109 2 637 2 1199 2 301 2 302 6 1352 4 72 2 1071 4 997 4 304 2 730 2 343 2 215 4 824 2 307 2 172 2 220 2 269 2 1003 2 783 2 1083 4 82 2 552 2 357 6 397 2 85 4 358 2 660 4 1007 4 400 2 879 2 362 2 1178 2 
663 2 616 2 142 4 232 8 1053 10 1293 8 753 8 887 2 847 2 848 2 623 2 1102 2 239 2 241 2 1105 2 329 2 416 2 452 2 292 2 1264 4 201 2 1060 2 982 12 989 2 207 2 945 2 1154 2 684 2 109 2 637 2 1199 2 301 2 302 6 1352 4 72 2 1071 8 997 4 304 2 730 2 343 2 215 4 824 2 307 2 172 2 220 2 269 2 1003 2 783 2 1083 4 82 2 552 2 357 6 397 2 85 4 358 2 660 4 1007 4 400 2 879 2 362 2 1178 2 
663 2 616 2 142 4 232 6 1053 10 1293 8 753 6 887 2 848 2 847 2 623 2 1102 2 239 2 241 2 329 2 416 2 452 2 292 2 1264 4 201 2 1060 2 982 12 989 2 207 2 945 2 1154 2 684 2 109 2 637 2 1199 2 301 2 302 6 1352 4 72 2 1071 8 997 4 304 2 730 2 343 2 215 4 824 2 307 2 172 2 220 2 269 2 1003 2 783 2 1083 4 82 2 552 2 357 6 397 2 85 4 358 2 660 4 1007 4 400 2 879 2 362 2 1178 2 
1212 2 1053 2 884 6 887 2 532 2 718 6 1060 2 201 2 202 1 1062 6 723 2 900 2 207 2 19 2 1066 2 1068 10 728 2 905 2 1237 2 730 2 212 2 731 6 215 4 1079 2 389 6 220 2 1241 2 222 2 1083 8 37 6 397 2 400 2 1249 6 558 2 1250 2 230 2 560 6 232 12 925 1 48 4 753 8 927 6 573 4 1100 2 239 2 1102 2 241 2 1105 4 416 2 1264 4 584 12 945 2 65 6 596 4 950 2 72 2 73 2 956 2 262 1 269 2 783 2 272 2 965 2 82 4 1128 1 790 2 85 6 612 4 969 2 613 2 616 2 1293 2 622 6 623 4 806 2 288 6 626 1 292 2 452 2 982 46 983 2 985 6 104 2 1149 2 989 2 1153 1 1306 1 1154 2 637 4 109 2 638 2 1157 2 112 2 111 7 302 24 301 2 117 2 119 2 997 6 304 2 644 6 824 2 127 4 307 2 1001 4 472 2 1003 2 653 2 1168 2 834 2 658 2 660 4 1007 4 1170 2 1321 1 139 2 1176 2 1328 6 1178 2 663 4 142 4 321 2 667 2 844 8 846 6 847 4 848 2 147 2 1337 2 148 2 494 8 329 2 151 6 496 2 674 6 1343 2 1027 2 162 7 684 2 860 2 164 2 339 1 1199 2 1352 4 865 2 693 2 343 2 1360 2 696 2 697 4 172 2 701 2 357 4 518 6 358 2 878 2 879 2 522 2 1376 2 186 4 
616 2 1212 2 1053 2 884 6 1293 6 887 2 622 6 532 2 623 4 806 2 718 6 288 6 452 2 292 2 201 2 1060 2 982 48 983 2 985 6 723 2 1062 6 104 2 1149 2 900 2 989 2 207 2 1154 2 19 2 1066 2 109 2 637 4 638 2 1157 2 112 2 1068 10 728 2 117 2 301 2 302 26 905 2 119 2 1237 2 997 6 212 2 304 2 730 2 731 6 644 6 127 4 215 4 824 2 389 6 307 2 1079 2 1001 4 220 2 472 2 1241 2 1003 2 222 2 1083 8 37 6 653 2 739 2 552 4 1168 2 834 2 658 2 397 2 1170 2 1007 4 660 4 400 2 139 2 558 2 1328 6 1249 6 1176 2 1178 2 1250 2 230 2 560 6 663 4 142 4 232 12 321 2 48 8 667 2 844 8 753 8 846 6 927 6 848 2 847 4 147 4 1337 2 573 4 1100 2 1102 2 239 2 148 2 241 2 494 8 329 2 151 6 416 2 581 2 1264 4 674 6 496 4 1343 2 584 12 1027 2 945 2 684 2 860 2 65 6 164 2 596 4 950 2 1199 2 865 2 1352 4 72 2 73 2 343 2 693 2 956 2 696 2 1360 2 697 8 172 2 269 2 783 2 272 4 1364 2 965 2 701 2 82 4 790 2 357 8 518 6 85 6 358 2 878 2 612 4 879 2 969 2 522 2 613 2 1376 2 186 4 
616 2 1212 2 1053 6 884 6 1293 6 887 2 622 6 532 2 623 4 806 2 718 6 288 6 452 2 292 2 201 2 1060 2 982 48 983 2 985 6 723 2 1062 6 104 2 1149 2 900 2 989 2 207 2 1154 2 19 2 1066 2 109 2 637 4 638 2 1157 2 112 2 1068 10 728 2 117 2 301 2 302 26 905 2 119 2 1237 2 1071 4 997 6 212 2 304 2 730 2 731 6 644 6 127 4 215 4 824 2 389 6 307 2 1079 2 1001 4 220 2 472 2 1241 2 1003 2 222 2 1083 8 37 6 653 2 739 2 552 4 1168 2 834 2 658 2 397 2 1170 2 1007 4 660 4 400 2 139 2 558 2 1328 6 1249 6 1176 2 1178 2 1250 2 230 2 560 6 663 4 142 4 232 12 321 2 48 8 667 2 844 8 753 8 846 6 927 6 848 2 847 4 147 4 1337 2 573 4 1100 2 1102 2 239 2 148 2 241 2 494 8 329 2 151 6 416 2 581 2 1264 4 674 6 496 4 1343 2 584 12 1027 2 945 2 684 2 860 2 65 6 164 2 596 4 950 2 1199 2 865 2 1352 4 72 2 73 2 343 2 693 2 956 2 696 2 1360 2 697 8 172 2 269 2 783 2 272 4 1364 2 965 2 701 2 82 4 790 2 357 8 518 6 85 6 358 2 878 2 612 4 879 2 969 2 522 2 613 2 1376 2 186 4 
1212 2 190 2 367 2 1053 6 884 6 887 2 532 2 718 6 201 2 1060 2 1062 6 723 2 900 2 207 2 19 2 1066 2 1068 8 728 2 905 2 1071 4 1237 4 730 2 212 2 731 12 215 4 1079 4 389 12 220 2 1241 2 222 2 1083 8 37 8 739 2 552 4 397 2 400 2 401 6 1249 8 558 2 1250 2 230 4 231 6 560 6 232 16 751 2 48 10 753 10 410 6 927 6 573 4 239 2 1102 2 241 2 1105 2 416 2 759 2 581 2 1264 4 584 10 945 2 64 6 65 6 596 4 950 2 72 2 73 2 772 6 956 2 269 2 270 6 783 2 272 4 965 2 82 4 790 2 85 6 612 4 969 2 613 2 616 2 1293 6 94 2 622 12 623 4 806 2 288 12 292 2 452 2 982 52 983 2 985 6 104 2 1149 2 989 2 1154 2 461 6 637 4 109 2 638 2 1157 2 112 2 302 24 301 2 117 2 119 2 997 6 304 2 1162 2 644 6 824 2 127 4 307 2 999 6 1001 4 1165 2 472 2 1003 2 653 2 1168 2 834 2 658 4 660 4 1007 4 1170 2 139 2 1176 2 1328 6 1178 2 663 4 142 4 321 2 667 2 844 12 846 6 847 4 848 2 147 4 490 6 1337 2 148 4 494 8 329 2 151 12 496 4 674 12 1343 2 1027 2 684 2 860 2 164 2 1199 2 507 2 1352 4 865 2 693 2 343 2 696 2 1360 2 697 10 172 2 1364 2 701 2 357 10 518 6 358 2 878 2 879 2 522 2 1376 2 186 6 526 2 
616 2 663 2 142 2 1199 2 301 2 232 4 1053 4 1352 4 72 2 1071 4 1293 6 304 2 887 2 753 6 848 2 1102 2 241 2 220 2 269 2 783 2 416 2 452 2 1083 2 1264 4 982 4 552 2 357 6 85 2 397 2 1007 2 660 2 879 2 207 2 1154 2 109 2 
616 2 1053 2 803 2 1293 6 887 2 532 2 806 2 1296 2 292 2 100 2 452 2 982 28 816 2 1149 2 900 2 207 2 1154 2 1064 2 109 2 637 4 541 3 1068 2 22 2 302 24 301 2 1237 3 997 6 730 2 304 2 824 2 1079 3 220 2 1241 2 1003 2 1083 2 37 6 552 2 397 2 660 2 1007 2 400 2 139 2 1176 2 1249 6 230 3 663 2 142 2 232 4 667 2 844 8 753 6 848 2 847 4 573 2 1100 2 239 2 1102 2 241 2 416 2 1264 4 1343 2 584 4 945 2 65 6 596 4 1199 2 1352 4 72 2 73 2 771 2 693 2 956 2 347 2 1360 2 172 2 269 2 783 2 965 2 701 2 357 6 85 2 878 2 612 4 879 2 522 2 88 2 613 2 1376 2 186 4 
663 2 616 2 142 4 232 6 1053 10 1293 8 753 6 887 2 848 2 847 2 623 2 1102 2 239 2 241 2 329 2 416 2 452 2 292 2 1264 4 201 2 1060 2 982 12 989 2 207 2 945 2 1154 2 684 2 109 2 637 2 1199 2 301 2 302 6 1352 4 72 2 1071 8 997 4 304 2 730 2 343 2 215 4 824 2 307 2 172 2 220 2 269 2 1003 2 783 2 1083 4 82 2 552 2 357 6 397 2 85 4 358 2 660 4 1007 4 400 2 879 2 362 2 1178 2 
663 2 616 2 142 4 232 8 664 2 1053 10 1293 8 753 6 887 2 847 2 848 2 623 2 1102 2 239 2 241 2 329 2 416 2 452 2 292 2 1264 4 201 2 1060 2 982 12 101 4 989 2 207 2 945 2 1154 2 684 2 637 2 109 2 302 6 301 2 507 2 1352 4 72 2 1071 8 997 4 730 2 304 2 343 2 215 4 824 2 307 2 172 2 220 2 269 2 1003 2 783 2 1083 4 82 2 83 2 552 2 357 8 397 2 85 4 358 2 1007 4 660 4 400 2 879 2 1178 2 
848 2 229 2 887 2 
848 2 229 2 887 2 
616 2 1053 6 884 2 1293 6 887 6 532 2 623 4 806 2 1141 2 287 2 810 2 292 2 13 2 982 24 1231 2 900 2 989 2 1154 2 637 4 109 2 638 2 112 2 1068 2 114 2 1070 4 302 16 1071 4 997 6 730 2 215 4 127 2 824 2 307 2 1001 2 1164 2 1241 2 1003 2 222 2 1083 4 37 2 653 4 552 4 1007 2 660 2 139 2 229 2 1176 2 1249 2 1178 2 922 2 230 2 663 4 750 2 142 2 232 16 48 4 667 2 844 2 753 12 847 4 848 4 147 4 573 6 239 2 1102 4 1105 4 1260 2 1264 4 496 4 854 2 1343 2 584 4 941 2 945 2 684 2 65 6 503 2 596 4 1112 2 505 2 507 4 1352 4 72 2 73 2 343 2 693 2 956 2 1360 2 962 2 697 4 172 2 271 4 605 2 272 4 1365 2 965 2 701 2 82 2 357 12 85 4 878 2 612 4 522 2 613 2 1376 2 1382 4 
114 2 982 4 302 2 854 2 584 2 119 2 884 2 730 2 358 2 127 2 216 2 969 2 970 2 199 2 473 2 605 2 1068 2 
616 2 1053 6 884 2 1293 6 887 6 532 2 623 4 806 2 1141 2 287 2 810 2 292 2 201 2 982 24 1231 4 900 2 989 2 1154 2 637 4 109 2 638 2 112 2 114 2 1070 4 302 16 1071 4 997 6 730 2 26 2 215 4 824 2 307 2 1001 2 1164 2 1241 2 1003 2 222 2 1083 4 37 2 653 4 552 4 1007 2 660 2 139 2 229 2 1176 2 1249 2 1178 2 922 2 230 4 663 4 142 2 1334 2 232 16 48 4 667 2 844 2 753 12 847 4 848 4 147 4 573 6 239 2 1102 4 1105 4 1264 4 496 4 854 2 1343 2 584 2 941 2 945 2 1030 2 684 2 65 6 685 2 503 2 596 4 1112 2 507 4 1352 4 72 2 73 2 343 2 693 2 774 2 956 2 1360 2 962 2 697 4 172 2 271 4 605 2 272 4 965 2 701 2 82 4 357 12 85 4 878 2 612 4 522 2 613 2 1376 2 1382 4 
616 2 1053 6 884 2 1293 6 887 6 532 2 623 4 806 2 1141 2 287 2 810 2 292 2 201 2 982 24 1231 2 900 2 989 2 1154 2 637 4 109 2 638 2 112 2 1068 2 114 2 1070 4 302 16 1071 4 997 6 730 2 385 2 215 4 127 2 824 2 307 2 1001 2 1164 2 1241 2 1003 2 222 2 1083 4 37 2 653 4 552 4 1007 2 660 2 139 2 229 2 1176 2 1249 2 1178 2 922 2 230 2 663 4 750 1 142 2 232 16 48 4 667 2 844 2 753 12 847 4 848 4 147 4 573 6 239 2 1102 4 1105 4 1264 4 496 4 854 2 1343 2 584 4 941 2 336 2 945 2 684 2 65 6 503 2 596 4 1112 2 507 4 1352 4 72 2 73 2 343 2 693 2 956 2 1357 2 961 2 1360 2 962 2 697 4 172 2 271 4 605 2 272 4 273 2 965 2 701 2 82 4 357 12 85 4 878 2 612 4 522 2 613 2 1376 2 1382 4 
368 2 1054 2 667 2 844 2 370 2 532 2 847 4 573 2 928 2 806 2 239 2 890 2 981 2 292 2 982 20 1343 2 584 2 677 2 900 2 945 2 65 6 637 4 596 4 302 16 73 2 342 2 997 6 730 2 693 2 956 2 824 2 1360 2 267 2 172 2 604 2 1241 2 79 2 1003 2 37 2 515 2 965 2 701 2 878 2 612 4 45 2 139 2 181 2 613 2 1249 2 1176 2 1376 2 
842 2 302 2 1237 3 121 2 844 2 192 2 1185 2 1101 2 534 2 1079 3 148 6 171 2 374 2 418 3 37 2 982 2 59 4 764 2 1149 2 539 1 458 2 1249 2 186 2 1069 2 230 3 
842 2 302 2 1237 2 121 2 844 2 192 2 1185 2 1101 2 534 2 1079 2 148 6 171 2 374 2 418 2 37 2 982 2 59 4 764 2 1149 2 458 2 1249 2 186 2 1069 2 230 2 
842 2 302 2 1237 2 121 2 844 2 192 2 1185 2 1101 2 534 2 1079 2 148 6 171 2 374 2 418 2 37 2 982 2 59 4 764 2 1149 2 458 2 1249 2 186 2 1069 2 230 2 
747 2 883 4 407 2 487 2 844 2 805 2 714 2 1221 2 1140 2 51 4 54 2 671 4 672 2 1107 6 982 10 333 4 103 2 1268 2 1230 3 631 3 1149 2 856 4 859 6 163 2 1069 2 302 4 383 3 341 2 388 2 1079 3 31 2 1123 2 735 2 38 2 656 4 1005 2 86 2 1322 2 188 4 230 3 
747 2 1331 2 883 4 407 2 487 2 844 2 805 2 714 2 1221 2 1140 2 51 4 54 2 671 4 672 2 1107 6 982 10 333 4 103 2 1268 2 1230 2 631 2 1149 2 856 4 859 4 163 2 1069 2 302 4 383 2 341 2 260 2 388 2 1079 2 31 2 1123 2 735 2 38 2 656 4 1005 2 791 2 86 2 1322 2 188 4 230 2 
747 2 1331 2 883 4 407 2 487 2 844 2 805 2 714 2 1221 2 1140 2 51 4 54 2 671 4 672 2 1107 6 982 10 333 4 103 2 1268 2 1230 2 631 2 1149 2 856 4 859 4 163 2 1069 2 302 4 383 2 341 2 260 2 388 2 1079 2 31 2 1123 2 735 2 38 2 656 4 1005 2 791 2 86 2 1322 2 188 4 230 2 
747 2 1331 2 883 4 407 2 487 2 844 2 805 2 714 2 1221 2 1140 2 51 4 54 2 671 4 672 2 1107 6 982 10 333 4 103 2 1268 2 1230 2 631 2 1149 2 856 4 859 4 163 2 1069 2 302 4 383 2 341 2 260 2 388 2 1079 2 31 2 1123 2 735 2 38 2 656 4 1005 2 791 2 86 2 1322 2 188 4 230 2 
747 2 1331 4 883 4 407 2 487 2 844 2 805 2 714 2 1221 2 1140 2 51 4 54 2 671 4 672 2 1107 6 982 10 333 4 103 2 1268 2 1230 2 631 2 1149 2 856 4 859 4 163 2 1069 2 302 4 383 2 341 2 260 4 388 2 1079 2 31 2 1123 2 735 2 38 2 656 4 1005 2 791 4 86 2 1322 2 188 4 230 2 
1125 2 851 2 500 2 1041 2 1175 2 1010 2 
762 2 360 2 851 2 724 2 535 2 529 2 1256 2 
302 8 619 2 234 2 866 2 1354 2 123 2 731 2 513 2 1019 2 492 1 1223 1 1082 1 1224 2 550 1 982 10 245 2 789 2 938 2 1269 2 160 2 1092 2 945 2 725 1 767 2 381 2 1379 2 
1098 2 1331 2 302 6 407 6 1215 2 1036 2 260 3 430 2 714 6 1221 6 51 12 909 2 1187 2 911 4 1123 6 35 2 735 2 982 6 38 6 675 2 786 4 1005 6 791 2 939 2 681 2 1322 6 459 2 856 4 859 16 1111 2 
982 1 302 1 1085 2 883 2 814 4 41 2 1265 1 1301 2 333 2 454 2 741 2 3 2 159 2 777 2 179 2 636 6 188 2 110 2 
1085 2 883 2 814 4 41 2 1301 2 333 2 454 2 741 4 3 2 159 4 777 2 179 4 636 6 188 2 110 2 
982 1 302 1 1085 2 883 2 814 4 41 2 1265 1 1301 6 333 2 454 2 741 8 3 8 159 8 777 2 179 8 636 10 188 2 110 2 
1085 2 883 2 814 2 41 2 333 2 454 2 741 2 159 2 777 2 179 2 636 2 188 2 110 2 
1292 4 93 2 886 4 621 4 371 4 806 6 194 4 808 4 97 10 979 4 1299 4 719 4 982 78 813 4 1145 4 203 4 629 4 1147 4 204 6 456 2 296 4 897 2 1067 2 1309 4 302 70 382 8 24 4 303 2 305 4 28 24 1163 2 386 16 732 32 306 2 823 4 217 6 907 8 470 4 30 24 33 4 738 4 131 10 1087 8 42 4 835 4 43 10 920 2 556 4 1176 2 745 6 750 2 562 4 486 10 668 2 409 2 411 2 49 4 1258 4 237 24 1103 4 931 30 1262 4 852 4 1191 4 763 4 587 2 588 4 1267 4 1025 16 940 10 589 4 62 8 337 10 1029 8 250 10 590 1 65 102 947 2 686 4 1272 14 1031 4 594 6 1197 8 596 44 1198 2 598 4 74 4 953 11 956 6 957 2 1203 4 431 2 697 16 1122 8 698 4 1126 4 608 2 965 28 788 2 612 36 1374 8 523 4 613 26 708 2 182 2 184 2 881 4 1289 2 1380 16 1211 2 
750 2 800 10 486 6 93 2 409 2 668 2 886 4 1055 2 572 2 49 4 806 2 578 2 808 2 931 6 1262 4 1299 4 1341 2 982 28 813 2 853 2 295 2 57 2 203 2 1147 2 296 2 337 6 250 2 947 2 65 40 1031 2 594 2 596 14 1198 2 302 26 508 2 28 8 953 2 956 2 547 2 960 2 217 2 470 4 697 14 33 4 1126 4 965 12 608 2 81 2 131 6 612 14 1374 6 613 12 708 2 556 2 182 2 184 2 745 4 1176 2 1289 2 
800 22 93 2 1292 4 886 8 621 4 1055 4 806 14 194 6 808 4 536 4 979 6 198 24 1299 6 982 150 813 4 295 11 1145 4 203 10 629 4 1147 10 296 6 204 5 456 2 897 2 16 26 899 24 205 8 299 4 1309 4 996 6 302 134 382 42 24 4 120 8 303 4 641 4 28 124 1163 2 546 18 643 90 547 2 306 2 823 6 825 12 217 36 826 24 470 6 30 92 309 4 33 6 651 26 738 6 393 24 131 16 42 6 835 6 556 10 557 24 745 8 1176 8 750 4 1333 90 486 16 669 2 668 2 409 8 49 6 1258 6 237 84 1103 4 578 2 931 34 330 2 1189 10 1262 6 1341 2 933 4 853 2 852 6 57 4 1191 6 763 6 588 4 1267 6 1025 42 589 6 1346 6 337 16 250 18 65 248 947 2 686 4 1272 12 1031 10 594 10 1197 50 596 112 1198 8 770 10 508 2 74 4 953 16 261 2 956 14 960 8 601 8 872 2 697 28 1361 10 1122 24 1126 6 608 2 965 58 81 2 1366 2 967 4 612 88 1374 16 523 6 280 4 613 58 708 2 363 4 184 4 881 6 1289 8 189 4 
750 2 448 4 665 2 369 2 488 2 486 4 1 2 93 2 668 2 409 2 572 2 49 2 849 2 806 2 578 2 97 2 536 2 198 2 1189 2 811 4 1262 2 1299 2 982 46 11 2 583 2 203 2 1147 2 296 2 246 2 940 2 899 2 942 2 855 4 205 2 1347 2 337 4 250 2 161 2 1234 2 460 2 1271 2 947 2 65 48 1065 2 1031 2 594 2 254 2 1273 2 596 20 1198 2 770 2 862 2 166 2 727 2 302 44 953 2 28 6 956 2 1118 2 431 2 217 2 218 2 470 2 1361 2 697 36 33 2 1126 2 965 6 608 2 40 2 393 2 131 4 1091 6 1320 2 43 2 794 2 1283 2 612 20 445 2 743 4 613 6 708 2 556 2 1326 2 1173 2 182 2 1176 2 745 6 746 2 1289 2 1211 2 
868 2 
916 1 649 1 545 1 896 1 902 1 1363 1 
916 1 649 1 545 1 896 1 902 1 1363 1 
916 1 649 1 545 1 896 1 902 1 1363 1 
916 1 649 1 545 1 896 1 902 1 1363 1 
916 1 649 1 545 1 896 1 902 1 1363 1 
916 1 649 1 545 1 896 1 902 1 1363 1 
916 1 649 1 545 1 896 1 902 1 1363 1 
916 1 649 1 545 1 896 1 902 1 1363 1 
916 1 649 1 545 1 896 1 902 1 1363 1 
916 1 649 1 545 1 896 1 902 1 1363 1 
916 1 649 1 545 1 896 1 902 1 1363 1 
916 1 649 1 545 1 896 1 902 1 1363 1 
916 1 649 1 545 1 896 1 902 1 1363 1 
916 1 649 1 545 1 896 1 902 1 1363 1 
916 1 649 1 545 1 896 1 902 1 1363 1 
916 1 649 1 545 1 896 1 902 1 1363 1 
916 1 649 1 545 1 896 1 902 1 1363 1 
916 1 649 1 545 1 896 1 902 1 1363 1 
916 1 649 1 545 1 896 1 902 1 1363 1 
916 1 649 1 545 1 896 1 902 1 1363 1 
916 1 649 1 545 1 896 1 902 1 1363 1 
916 1 649 1 545 1 896 1 902 1 1363 1 
916 1 649 1 545 1 896 1 902 1 1363 1 
916 1 649 1 545 1 896 1 902 1 1363 1 
916 1 649 1 545 1 896 1 902 1 1363 1 
916 1 649 1 545 1 896 1 902 1 1363 1 
916 1 649 1 545 1 896 1 902 1 1363 1 
916 1 649 1 545 1 896 1 902 1 1363 1 
916 1 649 1 545 1 896 1 902 1 1363 1 
916 1 649 1 545 1 896 1 902 1 1363 1 
916 1 649 1 545 1 896 1 902 1 1363 1 
916 1 649 1 545 1 896 1 902 1 1363 1 
916 1 649 1 545 1 896 1 902 1 1363 1 
916 1 649 1 545 1 896 1 902 1 1363 1 
916 1 649 1 545 1 896 1 902 1 1363 1 
916 1 649 1 545 1 896 1 902 1 1363 1 
916 1 649 1 545 1 896 1 902 1 1363 1 
916 1 649 1 545 1 896 1 902 1 1363 1 
916 1 649 1 545 1 896 1 902 1 1363 1 
916 1 649 1 545 1 896 1 902 1 1363 1 
916 1 649 1 545 1 896 1 902 1 1363 1 
916 1 649 1 545 1 896 1 902 1 1363 1 
916 1 649 1 545 1 896 1 902 1 1363 1 
916 1 649 1 545 1 896 1 902 1 1363 1 

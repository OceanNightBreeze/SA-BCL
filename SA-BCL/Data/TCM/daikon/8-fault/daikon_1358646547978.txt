#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V ERROR java.lang.NullPointerException 444 
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V ERROR java.lang.NullPointerException 444 
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR jtb.TokenMgrError 90 452 345 658 244 614 670 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V FAILED junit.framework.AssertionFailedError (296,536) 540 
daikon.test.TestQuant:test_union()V ERROR java.lang.NullPointerException 
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 894 257 743 66 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
utilMDE.MathMDE:gcd_differences([I)I
daikon.inv.Invariant:prob_and(DDD)D
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.Quant:pairwiseGT([I[I)Z
utilMDE.WeakHasherMap.EntrySet:size()I
utilMDE.WeakHasherMap:size()I
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType; | RETURN | 25109 | return null
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltwiseGTE([I)Z
daikon.diff.InvMap:InvMap()V
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
jtb.JavaCharStream:getEndLine()I
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
utilMDE.MathMDE:mod_positive(II)I
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.Quant:pairwiseDivides([I[I)Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltsLT([II)Z
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
jtb.TokenMgrError:addEscapes(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltsLTE([II)Z
daikon.Quant:eq(JJ)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.Quant:memberOf(D[F)Z
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.LimitedSizeIntSet:add(I)V
daikon.VarInfo:name()Ljava.lang.String;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
jtb.TokenMgrError:TokenMgrError(Ljava.lang.String;I)V
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.VarInfoName:name()Ljava.lang.String;
daikon.ProglangType:dimensions()I
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.ValueSet:ValueSet(I)V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
utilMDE.LimitedSizeIntSet:size()I
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.InvariantFormatTester:execute()Z
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.Quant:eltsLteIndex([I)Z
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.Invariant:prob_is_ge(DD)D
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.ProglangType:isPseudoArray()Z
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
jtb.JavaParser:jj_3R_54()Z
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
jtb.JavaCharStream:FillBuff()V
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_161()Z
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.Quant:memberOf(F[F)Z
daikon.inv.unary.UpperBoundCore:calc_range()J
utilMDE.ArraysMDE:max([I)I
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.PptSlice1:arity()I
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.inv.Invariant:getConfidence()D
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_48()Z
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltsNotEqual([II)Z
utilMDE.MathMDE:gcd(II)I
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.diff.RootNode:RootNode()V
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
jtb.JavaParser:jj_2_16(I)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:pairwiseSquare([I[I)Z
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
utilMDE.FuzzyFloat:indexOf([DD)I
utilMDE.ArraysMDE:element_range([I)I
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.VarInfoName:isLiteralConstant()Z
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
utilMDE.OrderedPairIterator:hasNext()Z
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptName:isCombinedExitPoint()Z
daikon.ProglangType:isArray()Z
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
utilMDE.MathMDE:pow_fast(II)I
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
utilMDE.FuzzyFloat:lt(DD)Z
daikon.Quant:eltsLtIndex([I)Z
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaCharStream:ReadByte()C
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptTopLevel:name()Ljava.lang.String;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_52()Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.PptTopLevel.CondIterator:hasNext()Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.Quant:memberOf(I[I)Z
daikon.ProglangType:baseIsIntegral()Z
utilMDE.ArraysMDE:concat([I[I)[I | RETURN | 37630 | return null
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.Quant:eltsNotEqualIndex([I)Z
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:subsetOf([I[I)Z
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.OrderedPairIterator:setnext2()V
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.Invariants:Invariants()V
jtb.JavaParser:jj_3R_57()Z
daikon.Quant:eltwiseLT([I)Z
daikon.Quant:isReverse([I[I)Z
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
jtb.JavaCharStream:BeginToken()C
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.ModBitTracker:split(I)I
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.OrderedPairIterator:setnext1()V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.Debug:logDetail()Z
daikon.VarInfoName.Simple:isLiteralConstant()Z
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.ModBitTracker:num_samples()I
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
jtb.JavaParser:jj_3R_163()Z
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:lexGT([I[I)Z
utilMDE.ArraysMDE:sum([D)D
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.inv.Invariant:justified()Z
utilMDE.MathMDE:sign(I)I
daikon.Quant:subsetOf([F[F)Z
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.Quant:lexGTE([I[I)Z
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ModBitTracker:num_sets()I
jtb.JavaCharStream:backup(I)V
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
utilMDE.FuzzyFloat:ne(DD)Z
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.Quant:subsetOf([J[J)Z
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:inPre()Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.ProglangType:isIntegral()Z
daikon.Quant:eltsGT([II)Z
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.Quant:slice([III)[I
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:subsetOf([B[I)Z
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
utilMDE.MathMDE:gcd([I)I
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_47()Z
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:jj_ntk()I
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.Quant:eltwiseLTE([I)Z
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
utilMDE.Intern:internSubsequence([III)[I
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.filter.ParentFilter:ParentFilter()V
jtb.JavaParser:jj_3R_58()Z
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.Quant:subsetOf([D[D)Z
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.Quant:eltsGteIndex([I)Z
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.FuzzyFloat:eq(DD)Z
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.ModBitTracker:num_vars()I
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
utilMDE.FuzzyFloat:gte(DD)Z
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern:intern([J)[J
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.Quant:pairwiseGTE([I[I)Z
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
utilMDE.Intern:intern([D)[D
utilMDE.ArraysMDE:subarray([III)[I
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_50()Z
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:pow(II)I
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator; | ASSIGN | 2309 | = null
jtb.JavaCharStream:getBeginColumn()I
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.ProglangType:isScalar()Z
daikon.Ppt:Ppt()V
jtb.JavaParser:jj_scan_token(I)Z
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
jtb.JavaParser:jj_3R_85()Z
utilMDE.MathMDE:gcd(JJ)J
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ProglangType:baseIsScalar()Z
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
utilMDE.ArraysMDE:fn_is_permutation([I)Z
utilMDE.ArraysMDE:subarray([JII)[J
daikon.Quant:eltsEqualIndex([I)Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.VarInfoName:hashCode()I
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.ValueTuple:isMissing(I)Z
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.Quant:subsetOf([F[D)Z
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Invariant:logDetail()Z
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.Options.OptionInfo:argument_required()Z
daikon.Quant:pairwiseLTE([I[I)Z
daikon.Quant:concat([I[I)[I
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
jtb.JavaParser:jj_3_1()Z
jtb.JavaParser:jj_3R_134()Z
jtb.Token:newToken(I)Ljtb.Token;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.test.TestQuant:assert_arrays_equals([I[I)V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.Quant:pairwiseLT([I[I)Z
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:eltwiseEqual([I)Z
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.FuzzyFloat:gt(DD)Z
daikon.Quant:lexLT([I[I)Z
daikon.Quant:ne(II)Z
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltsEqual([II)Z
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.PptSlice0:initInvariantsSeen()V
jtb.JavaParser:jj_3_16()Z
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.PptName:isEnterPoint()Z
jtb.JavaParser:jj_3R_53()Z
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
utilMDE.MathMDE:missing_numbers([I)[I
utilMDE.WeakHasherMap:processQueue()V
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:eltwiseNotEqual([I)Z
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.Debug:logOn()Z
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.Quant:lexEqual([I[I)Z
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.Quant:eq(DD)Z
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.ElementsFinder:inPre()Z
jtb.JavaCharStream:readChar()C
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.Quant:sameLength([I[I)Z
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:sum([I)I
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
jtb.JavaParser:jj_2_1(I)Z
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.ValueTuple:size()I
jtb.JavaParser:jj_3R_51()Z
utilMDE.Intern:intern([I)[I
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:sorted([I)Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
utilMDE.ArraysMDE:sum([[D)D
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
jtb.TokenMgrError:LexicalError(ZIIILjava.lang.String;C)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:intersection([I[I)[I
utilMDE.Intern:numIntArrays()I
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.Quant:gt(II)Z
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.Invariant:logOn()Z
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.config.Configuration:apply(Ljava.lang.String;)V
jtb.JavaParserTokenManager:jjStopAtPos(II)I
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.inv.unary.UpperBoundCore:computeConfidence()D
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:min_max([I)[I
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.Quant:eq(II)Z
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.VarComparabilityImplicit:alwaysComparable()Z
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.Quant:lte(II)Z
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_56()Z
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.VarInfo:relate_var()V
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.Quant:eltsGtIndex([I)Z
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:lt(II)Z
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.ModBitTracker:ModBitTracker(I)V
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
utilMDE.ArraysMDE:indexOf([II)I
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:subsetOf([S[S)Z
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:sum([[I)I
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.inv.Invariant:prob_and(DD)D
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.Quant:eltsGTE([II)Z
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.VarInfo:new_ppt()V
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.PptSlice1:num_samples()I
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.Quant:lexNotEqual([I[I)Z
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.NodeOptional:NodeOptional()V
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.PptSlice2:arity()I
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.inv.Invariant:isWorthPrinting()Z
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:union([I[I)[I
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.Quant:memberOf(J[J)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ValueTuple:isMissingFlow(I)Z
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:setEqual([I[I)Z
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I | STATEMENT | 46499 | stmt -> ;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
jtb.JavaParser:jj_3R_133()Z
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.Quant:memberOf(S[S)Z
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
utilMDE.FuzzyFloat:lte(DD)Z
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.Quant:pairwiseEqual([I[I)Z
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
utilMDE.Assert:assertTrue(Z)V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.ArraysMDE:min([I)I
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.Quant:memberOf(F[D)Z
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.Quant:gte(II)Z
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
utilMDE.MathMDE:negate(I)I
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.FuzzyFloat:FuzzyFloat(D)V
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.diff.Node:Node()V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
jtb.JavaParser:jj_3R_49()Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.Quant:eq(FF)Z
daikon.Quant:subsetOf([D[F)Z
jtb.JavaCharStream:getEndColumn()I
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.LowerBoundCore:calc_modulus()J
utilMDE.Intern:internSubsequence([JII)[J
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_162()Z
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:noDups([I)Z
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
jtb.TokenMgrError:TokenMgrError(ZIIILjava.lang.String;CI)V
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.Quant:setDiff([I[I)[I
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParser:jj_3R_55()Z
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.PptSlice0:arity()I
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
jtb.JavaParser:jj_3R_135()Z
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.PptName:PptName(Ljava.lang.String;)V
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.inv.Invariant:prob_or(DD)D
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:eltwiseGT([I)Z
daikon.Quant:lexLTE([I[I)Z
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
jtb.JavaCharStream:getBeginLine()I
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
854 2 165 2 43 2 62 4 943 2 124 2 866 2 763 2 315 2 
56 2 270 6 168 2 648 2 817 2 199 2 319 2 235 6 337 2 455 2 461 6 
2 6 814 2 846 6 864 4 866 2 466 6 537 4 495 2 505 2 315 2 874 2 380 6 326 2 
429 4 584 10 167 10 638 6 935 29 397 4 587 10 786 2 693 2 260 12 645 16 472 8 237 16 475 8 381 2 765 26 57 16 272 8 866 6 218 10 481 2 869 2 315 6 681 4 338 4 422 6 711 8 901 10 286 2 905 2 
900 4 690 6 
45 2 
610 2 76 2 202 2 663 4 786 2 855 2 620 2 667 2 857 2 729 2 151 2 212 2 796 2 675 2 866 4 868 2 679 4 160 2 159 2 631 2 339 2 883 2 639 2 109 2 750 4 353 4 290 2 692 2 642 2 756 2 296 2 176 2 359 2 698 2 121 2 305 2 601 2 480 2 124 2 536 2 649 2 703 2 315 4 373 2 
196 6 167 16 584 16 638 4 7 4 851 4 912 2 397 2 935 54 354 2 587 6 496 4 204 2 82 4 645 32 260 22 472 18 237 32 557 6 175 6 408 2 442 4 765 48 57 32 272 6 271 8 866 4 218 16 678 2 315 4 422 4 901 16 511 2 777 6 164 4 779 6 428 4 286 2 67 6 
444 2 
330 10 845 2 501 2 42 2 399 22 210 2 191 2 150 2 558 2 296 2 577 2 407 2 138 2 882 2 
167 2 584 2 348 2 638 2 231 2 203 2 397 2 935 6 587 4 260 2 645 2 472 2 10 2 261 2 237 2 11 2 264 2 765 4 57 2 218 2 901 2 392 2 656 2 
765 12 196 6 167 4 57 8 584 4 835 2 218 4 665 2 935 16 82 4 338 2 260 4 645 8 237 8 901 4 164 4 67 6 
364 2 583 2 444 2 5 2 310 2 181 2 536 2 541 2 527 2 436 2 877 2 25 2 137 6 
520 2 493 2 867 2 356 2 506 2 280 2 589 2 486 2 45 2 515 2 
0 2 255 3 615 6 141 2 721 2 616 2 850 4 618 2 145 2 146 1 619 6 258 8 725 2 265 1 12 2 624 2 732 8 625 2 14 2 861 2 734 2 16 2 862 2 866 32 275 2 737 2 739 2 24 2 162 1 634 2 878 2 513 2 514 3 29 2 31 2 165 2 36 2 886 6 39 2 753 2 44 12 643 2 644 1 404 2 47 2 528 2 174 16 49 1 895 2 300 2 532 2 178 8 414 2 647 2 306 2 535 2 416 16 768 2 180 3 182 2 652 4 420 3 60 2 315 34 771 2 421 2 654 2 773 2 544 2 64 2 902 2 778 2 318 2 780 1 198 32 77 2 321 2 553 24 664 3 666 3 789 2 207 1 788 1 668 2 84 2 919 2 562 3 794 2 563 2 440 2 213 2 672 1 329 2 214 2 446 1 447 3 926 2 332 4 450 3 92 1 573 2 223 32 341 16 804 2 805 3 457 2 576 2 578 3 462 2 463 6 465 1 468 2 110 2 936 2 822 5 471 1 473 16 940 2 592 2 477 3 118 2 697 2 240 1 597 2 830 1 941 2 600 2 122 24 245 2 368 2 602 2 123 4 945 2 125 2 247 2 946 2 702 2 248 4 837 1 707 2 708 4 485 2 949 4 487 4 713 2 714 2 715 2 
81 2 315 2 
758 2 6 2 315 4 
948 2 
844 2 1 2 848 6 614 2 377 2 143 4 722 2 617 18 144 2 262 20 15 20 863 10 386 2 736 14 630 2 22 20 742 4 637 2 32 2 166 10 518 2 888 2 398 6 764 4 406 12 529 2 530 2 297 2 50 2 52 62 531 18 651 2 539 18 313 2 186 8 542 2 898 20 423 4 903 2 193 4 908 2 658 2 430 6 197 62 200 2 323 20 433 2 206 2 669 6 670 2 792 8 793 10 922 2 921 2 445 18 923 2 90 20 448 8 91 2 570 2 451 20 452 16 803 2 928 4 97 2 574 4 930 2 459 2 345 2 226 2 808 12 809 2 580 2 932 2 581 2 464 32 819 2 469 2 823 2 357 4 695 4 939 2 474 14 827 24 116 2 242 14 244 2 367 2 834 2 836 2 369 8 131 2 947 2 606 62 249 2 952 2 954 18 712 2 841 10 608 8 
609 2 683 2 879 2 394 1 
683 2 230 2 
429 2 222 2 655 2 273 2 683 2 536 2 540 2 
222 2 824 2 683 2 
222 2 683 2 233 2 
609 2 251 2 560 2 
222 2 683 2 
560 2 564 2 
683 2 136 2 
609 2 560 2 853 2 
872 2 609 2 550 2 
609 2 659 2 521 2 
609 2 9 2 701 2 
609 2 720 2 426 2 
556 2 560 2 
683 2 588 2 
872 2 250 2 
659 2 371 2 
950 2 701 2 
720 2 19 2 
560 2 482 2 
720 2 393 2 
717 2 701 2 
659 2 75 2 
872 2 192 2 
609 2 560 2 595 2 853 2 
609 2 790 2 560 2 595 2 853 2 
609 2 27 2 560 2 
147 2 609 2 560 2 
813 2 139 2 72 2 575 2 
224 2 124 2 536 2 540 2 522 2 
224 2 812 2 522 2 
429 2 222 2 929 2 683 2 536 2 540 2 
917 2 176 2 
429 2 536 2 352 2 540 2 
701 2 342 2 
720 2 762 2 
872 2 30 2 
33 2 659 2 
720 2 659 2 559 2 
720 2 659 2 951 2 
720 2 304 2 659 2 
720 2 659 2 314 2 
467 2 760 6 476 2 327 6 603 2 274 2 536 2 540 2 
635 2 560 2 
499 2 818 2 34 2 38 2 897 2 311 2 334 4 185 2 754 2 870 2 399 6 388 2 119 2 622 2 598 4 896 2 842 2 362 2 
609 2 582 2 
110 2 
615 4 141 2 850 4 618 2 852 2 145 2 619 2 258 2 726 2 725 2 728 2 858 2 624 2 14 2 628 4 866 26 737 2 739 2 24 2 390 2 878 2 513 2 165 2 36 2 886 2 39 2 44 8 404 2 405 2 646 2 179 2 182 2 652 2 60 2 315 26 771 2 189 2 64 2 198 4 911 2 563 2 213 2 214 2 446 2 567 2 449 2 332 4 926 2 92 2 573 2 223 6 341 6 98 2 462 6 463 6 107 2 468 2 936 2 592 2 118 4 697 2 239 2 599 4 597 2 602 2 123 2 945 2 247 2 127 2 248 4 708 2 487 4 714 2 715 2 
253 2 615 6 141 2 850 4 618 2 852 2 145 2 619 2 258 2 726 2 725 2 728 2 858 2 624 2 14 2 628 4 866 26 275 2 737 2 739 2 24 2 390 2 878 2 513 2 165 2 36 2 886 2 39 2 44 8 404 2 405 2 646 2 303 2 179 2 182 2 652 2 60 2 315 26 771 2 189 2 64 2 198 4 77 2 563 2 213 2 214 2 446 2 332 4 926 2 92 2 573 2 223 6 341 6 98 2 462 6 463 6 107 2 468 2 936 2 592 2 118 4 697 2 239 2 599 4 597 2 602 2 123 2 945 2 247 2 127 2 130 2 248 4 708 2 487 4 713 2 714 2 715 2 
102 2 
650 2 755 2 
140 4 73 2 782 2 319 2 492 2 201 10 785 2 850 2 149 2 211 2 627 2 214 2 270 6 866 6 737 2 20 2 277 8 337 4 513 2 285 8 931 2 461 6 579 2 463 4 684 2 885 4 168 4 169 2 685 2 351 2 889 2 235 6 688 2 689 2 936 2 937 2 292 4 173 2 404 2 696 2 761 2 593 2 829 2 117 2 411 2 533 2 365 4 699 2 648 2 602 2 308 2 945 2 126 2 312 2 248 2 838 2 315 12 839 4 776 4 194 2 
140 4 73 2 782 2 319 2 492 2 201 10 785 2 850 2 149 2 211 2 627 2 214 2 270 6 217 4 866 6 737 2 20 2 277 8 337 4 513 2 285 8 931 2 461 8 463 4 684 2 885 4 168 4 169 2 685 2 351 2 889 2 235 8 688 2 689 2 936 2 937 2 292 4 404 2 696 2 761 2 593 2 829 2 117 2 411 2 533 2 56 2 413 2 365 4 699 2 648 2 602 2 308 2 945 2 126 2 312 2 248 2 838 2 315 12 839 4 372 2 776 4 194 2 
885 4 140 4 699 2 168 2 270 2 73 2 351 2 889 2 235 2 20 2 838 2 839 2 337 2 937 2 696 2 593 2 761 2 211 2 
140 4 73 2 782 2 319 2 492 2 201 6 785 2 850 2 149 2 211 2 627 2 214 2 270 4 866 6 737 2 20 2 277 4 337 4 513 2 285 4 931 2 461 6 579 2 463 4 684 2 885 4 168 4 169 2 685 2 351 2 889 2 235 6 688 2 689 2 936 2 937 2 292 4 173 2 404 2 696 2 761 2 593 2 829 2 117 2 411 2 533 2 56 2 365 4 699 2 602 2 308 2 945 2 126 2 312 2 248 2 838 2 315 12 839 4 776 4 194 2 
140 4 73 2 782 2 319 2 492 2 201 6 785 2 850 2 149 2 211 2 627 2 214 2 270 6 866 6 737 2 20 2 277 4 337 4 513 2 285 4 931 2 461 6 579 2 463 4 684 2 885 4 168 4 817 2 169 2 685 2 351 2 889 2 235 4 688 2 689 2 936 2 937 2 292 4 173 2 404 2 696 2 761 2 593 2 829 2 117 2 411 2 533 2 365 4 699 2 602 2 308 2 945 2 126 2 312 2 248 2 838 2 315 12 839 4 776 4 194 2 
140 4 73 2 782 2 319 2 492 2 201 6 785 2 850 2 149 2 211 2 627 2 214 2 270 6 866 6 737 2 20 2 277 8 337 4 513 2 285 4 931 2 461 6 579 2 463 4 684 2 885 4 168 4 169 2 685 2 351 2 889 2 235 6 688 2 689 2 936 2 937 2 292 4 173 2 404 2 696 2 761 2 593 2 829 2 117 2 411 2 533 2 365 4 699 2 648 2 602 2 308 2 945 2 126 2 312 2 248 2 838 2 315 12 839 4 776 4 194 2 
140 4 73 2 782 2 319 2 492 2 201 10 785 2 850 2 149 2 211 2 627 2 214 2 270 8 866 6 737 2 20 2 277 8 337 4 513 2 285 8 931 2 461 8 579 2 463 4 684 2 885 4 168 4 817 2 169 2 685 2 351 2 889 2 235 6 688 2 689 2 936 2 937 2 292 4 173 2 404 2 696 2 761 2 593 2 829 2 117 2 411 2 533 2 365 4 699 2 648 2 602 2 308 2 945 2 126 2 312 2 248 2 838 2 315 12 839 4 776 4 194 2 
140 4 73 2 782 2 319 2 492 2 201 10 785 2 850 2 149 2 211 2 627 2 214 2 270 6 866 6 737 2 20 2 277 8 337 4 513 2 285 8 931 2 461 6 579 2 463 4 684 2 885 4 168 4 169 2 685 2 351 2 889 2 235 6 688 2 689 2 936 2 937 2 292 4 173 2 404 2 696 2 761 2 593 2 829 2 117 2 411 2 533 2 365 4 699 2 648 2 602 2 308 2 945 2 126 2 312 2 248 2 838 2 315 12 839 4 776 4 194 2 
4 2 492 2 723 2 258 2 259 6 497 6 14 2 270 8 17 2 737 2 20 2 277 2 504 6 278 2 507 1 739 2 512 2 284 2 513 2 516 6 36 2 748 2 749 7 751 2 292 6 44 4 758 6 46 4 761 2 766 2 533 2 767 2 308 2 309 4 312 2 60 2 315 46 771 2 64 2 545 2 776 4 317 6 548 2 782 2 73 2 783 6 319 4 77 2 785 2 81 6 565 2 566 6 568 2 332 4 337 4 341 6 806 2 98 2 579 2 349 6 817 4 107 2 351 2 593 2 592 12 829 2 117 2 594 6 599 4 365 8 602 2 123 2 126 2 127 4 129 6 838 2 839 4 132 6 140 4 141 2 615 6 376 2 378 2 849 2 850 4 618 2 145 2 619 2 148 1 149 2 382 1 383 2 624 2 384 2 627 2 385 1 866 24 865 7 871 2 876 2 878 2 165 2 885 4 168 4 169 4 886 2 887 8 889 2 404 2 646 2 410 1 411 2 412 6 415 2 418 2 652 2 188 2 904 6 194 2 198 2 201 2 432 2 662 10 208 1 211 2 439 1 213 2 214 2 927 2 223 8 682 1 456 2 461 12 931 2 462 6 463 6 229 2 684 2 685 4 686 2 235 4 933 2 688 2 689 2 936 2 937 2 696 2 697 2 699 2 944 2 945 2 247 2 248 4 705 1 708 2 948 6 487 4 713 2 714 2 
140 4 4 2 492 2 615 6 141 2 378 2 376 2 723 2 849 2 850 4 618 2 619 2 145 2 258 2 259 6 149 2 263 2 497 6 383 2 384 2 624 2 14 2 627 2 270 8 866 26 17 2 737 2 20 2 504 6 277 6 278 2 739 2 871 2 876 2 284 2 512 2 878 2 513 2 165 2 516 6 885 4 168 4 169 4 887 8 886 2 36 2 748 2 889 2 751 2 292 6 44 8 758 6 404 2 46 4 761 2 646 2 411 2 533 2 766 2 412 6 767 2 648 4 415 2 308 2 309 4 418 2 652 4 312 2 60 2 315 48 188 2 771 2 64 2 545 2 317 6 904 6 776 4 548 2 194 2 783 6 73 2 198 2 782 2 319 4 201 2 785 2 77 2 662 10 432 2 81 6 211 2 213 2 565 2 88 2 214 2 566 6 568 2 332 4 927 2 337 4 223 8 341 6 806 2 98 2 456 2 931 2 461 12 579 2 462 6 463 6 229 2 684 2 349 6 107 2 685 4 351 2 686 2 933 2 235 8 688 2 689 2 936 2 937 2 696 2 592 12 593 2 594 6 117 2 829 2 118 2 697 2 599 4 365 8 699 2 944 2 602 2 123 4 945 2 247 2 126 2 127 4 129 6 248 4 838 2 839 4 708 4 948 6 132 6 487 4 713 2 714 2 
140 4 4 2 492 2 615 6 141 2 378 2 376 2 723 2 849 2 850 4 618 2 619 2 145 2 258 2 259 6 149 2 263 2 497 6 383 2 384 2 624 2 14 2 627 2 270 8 866 26 17 2 737 2 20 2 504 6 277 6 278 2 739 2 871 2 876 2 284 2 512 2 878 2 513 2 285 4 165 2 516 6 885 4 168 4 169 4 887 8 886 2 36 2 748 2 889 2 751 2 292 6 44 8 758 6 404 2 46 4 761 2 646 2 411 2 533 2 766 2 412 6 767 2 648 4 415 2 308 2 309 4 418 2 652 4 312 2 60 2 315 48 188 2 771 2 64 2 545 2 317 6 904 6 776 4 548 2 194 2 783 6 73 2 198 2 782 2 319 4 201 6 785 2 77 2 662 10 432 2 81 6 211 2 213 2 565 2 88 2 214 2 566 6 568 2 332 4 927 2 337 4 223 8 341 6 806 2 98 2 456 2 931 2 461 12 462 6 579 2 463 6 229 2 684 2 349 6 107 2 685 4 351 2 686 2 933 2 235 8 688 2 689 2 936 2 937 2 696 2 592 12 593 2 594 6 117 2 829 2 118 2 697 2 599 4 365 8 699 2 944 2 602 2 123 4 945 2 247 2 126 2 127 4 129 6 248 4 838 2 839 4 708 4 948 6 132 6 487 4 713 2 714 2 
4 2 492 2 723 2 258 4 259 6 263 2 497 6 14 2 270 10 17 2 737 2 20 2 277 6 504 6 278 2 739 2 512 2 284 2 513 2 285 4 516 12 36 2 748 2 288 6 751 2 523 6 292 6 44 10 758 12 46 4 761 2 533 2 766 2 56 2 767 2 302 6 308 2 309 4 312 2 60 2 315 52 771 2 64 2 545 2 776 4 317 6 548 2 782 2 73 2 783 12 319 4 77 2 785 2 81 12 83 6 565 2 88 2 566 12 568 2 332 4 337 4 341 8 806 2 98 4 579 2 103 6 349 6 817 2 107 2 586 2 351 2 593 2 592 10 829 2 117 2 594 6 118 2 360 2 599 6 120 6 365 8 602 2 123 4 126 2 127 4 129 6 838 2 839 4 132 6 374 2 140 4 141 2 615 6 376 2 378 2 849 2 850 4 618 2 145 2 619 4 149 2 623 2 383 2 624 2 384 2 627 2 866 24 876 2 878 2 165 2 885 4 168 4 169 4 886 4 887 8 889 2 404 2 893 6 646 2 411 2 412 6 648 4 415 2 418 2 184 2 652 4 188 2 904 6 194 2 198 4 201 6 432 2 662 8 918 2 211 2 213 2 671 6 443 6 214 2 927 2 680 2 223 12 225 2 456 2 461 16 931 2 462 8 463 6 229 2 684 2 685 4 686 2 933 2 235 10 688 2 689 2 936 2 937 2 696 2 697 2 699 2 944 2 945 2 247 2 248 4 708 4 948 12 487 4 713 2 714 2 
885 2 140 2 168 4 782 2 319 2 201 4 785 2 889 2 235 6 689 2 292 2 937 2 149 2 593 2 761 2 117 2 829 2 211 2 411 2 365 2 627 2 648 2 270 6 308 2 126 2 312 2 20 2 277 6 838 2 315 4 337 4 285 4 776 2 461 4 579 2 
140 2 611 2 615 6 141 2 850 4 145 2 619 3 149 2 624 2 14 2 627 2 270 6 866 24 737 2 276 2 20 2 277 6 739 2 871 2 878 2 513 2 165 2 885 2 168 4 36 2 886 3 889 2 171 2 292 2 404 2 761 2 646 2 51 2 411 2 648 2 414 2 308 2 312 2 60 2 315 28 771 2 64 2 776 2 782 2 198 3 319 2 201 2 77 2 785 2 662 2 211 2 440 2 441 3 213 2 214 2 332 4 337 4 223 8 341 6 461 4 579 2 462 6 463 6 107 2 235 6 688 2 689 2 110 2 936 2 937 2 592 4 593 2 829 2 117 2 697 2 599 4 365 2 368 2 602 2 945 2 247 2 126 2 127 2 248 4 370 2 838 2 487 4 713 2 714 2 
724 2 782 2 829 2 
724 2 782 2 829 2 
140 2 492 2 142 4 615 6 141 2 376 2 723 2 850 4 618 4 145 2 724 2 624 2 14 2 270 12 735 2 866 16 737 2 20 4 277 6 158 2 739 2 633 2 878 2 513 2 880 2 285 4 165 2 885 2 168 4 169 4 35 2 746 2 36 2 292 4 44 4 400 2 403 2 404 2 46 2 761 2 646 2 411 2 533 2 56 4 648 4 417 2 309 2 652 4 312 2 60 2 315 24 771 2 189 4 775 2 776 2 73 2 782 6 198 2 319 4 431 2 201 6 77 2 661 2 662 2 787 2 211 2 87 2 213 2 214 2 332 4 220 2 337 4 223 2 341 2 807 4 931 2 461 16 462 2 463 6 106 2 817 4 107 2 685 2 686 2 235 12 936 2 696 2 592 4 829 4 697 2 365 4 602 2 123 4 945 2 247 2 127 6 129 2 248 4 706 2 839 4 708 4 487 4 713 2 714 2 
500 2 699 2 735 2 746 2 309 2 866 2 650 2 662 2 933 2 129 2 706 2 936 2 315 4 61 2 294 2 592 2 284 2 
140 2 492 2 142 4 615 6 141 2 376 2 723 2 850 4 618 4 145 2 724 2 624 2 14 2 733 2 270 12 735 2 866 16 737 2 20 4 277 6 739 2 878 2 513 2 880 2 285 4 165 2 885 2 168 4 169 4 35 2 746 2 36 2 292 4 44 4 400 2 403 2 404 2 46 2 761 2 646 2 411 2 533 2 56 4 648 4 417 4 652 4 312 2 60 2 315 24 771 2 189 4 775 2 776 2 73 2 782 6 198 4 319 4 431 2 201 6 77 2 914 2 787 2 211 2 87 2 213 2 328 2 214 2 924 2 332 4 337 4 223 2 341 2 807 4 460 2 931 2 461 16 462 2 463 6 684 2 106 2 817 4 107 2 685 4 686 2 235 12 936 2 696 2 592 2 829 4 697 2 365 4 602 2 123 4 945 2 247 2 127 6 129 2 248 4 706 2 839 4 708 4 487 4 713 2 714 2 
140 2 492 2 142 4 615 6 141 2 376 2 723 2 850 4 618 4 145 2 724 2 624 2 14 2 270 12 735 2 866 16 737 2 20 4 277 6 23 2 739 2 878 2 513 2 880 2 285 4 165 2 885 2 168 4 169 4 35 2 746 2 36 2 292 4 44 4 400 2 403 2 404 2 46 2 761 2 646 2 298 2 411 2 533 2 56 4 648 4 417 2 309 2 652 4 312 2 60 2 315 24 771 2 189 4 775 2 776 2 73 2 782 6 198 2 319 4 431 2 201 6 77 2 662 2 787 2 211 2 87 2 213 2 797 2 214 2 332 4 94 2 337 4 223 2 341 2 807 4 931 2 461 16 462 2 463 6 684 2 106 2 817 4 107 2 685 4 686 2 235 12 936 2 696 2 592 4 829 4 697 2 365 4 602 2 123 4 945 2 247 2 127 6 129 2 248 4 706 2 839 4 708 4 487 4 713 2 714 2 956 2 
257 2 572 2 387 2 315 2 757 2 508 2 293 2 458 2 743 2 894 2 13 2 66 2 
719 2 517 2 549 3 254 2 198 3 886 3 8 2 890 2 619 3 435 2 48 2 599 2 301 2 831 2 866 2 315 2 770 1 223 2 341 2 340 4 64 2 134 2 135 2 98 6 462 2 
719 2 517 2 549 2 254 2 198 2 886 2 8 2 890 2 619 2 435 2 48 2 599 2 301 2 831 2 866 2 315 2 223 2 341 2 340 4 64 2 134 2 135 2 98 6 462 2 
719 2 517 2 549 2 254 2 198 2 886 2 8 2 890 2 619 2 435 2 48 2 599 2 301 2 831 2 866 2 315 2 223 2 341 2 340 4 64 2 134 2 135 2 98 6 462 2 
781 2 719 2 167 2 584 2 198 3 612 3 289 2 935 6 41 4 619 3 526 4 694 2 825 2 645 2 473 2 237 2 828 2 174 2 86 4 54 4 765 4 57 2 272 4 89 2 604 3 866 4 218 2 704 2 187 2 454 3 315 10 281 2 223 2 190 6 422 2 899 2 64 2 901 2 99 4 69 2 
781 2 719 2 198 2 612 2 619 2 260 2 86 4 272 4 89 2 866 4 218 2 454 2 281 2 223 2 99 4 286 2 584 2 167 2 289 2 935 4 41 4 694 2 526 4 645 2 825 2 472 2 237 2 473 2 174 2 828 2 54 4 765 4 57 2 604 2 704 2 315 10 187 2 422 2 190 6 64 2 899 2 901 2 69 2 
781 2 719 2 198 2 612 2 619 2 260 2 86 4 272 4 89 2 866 4 218 2 454 2 281 2 223 2 99 4 286 2 584 2 167 2 289 2 935 4 41 4 694 2 526 4 645 2 825 2 472 2 237 2 473 2 174 2 828 2 54 4 765 4 57 2 604 2 704 2 315 10 187 2 422 2 190 6 64 2 899 2 901 2 69 2 
781 2 719 2 198 2 612 2 619 2 260 2 86 4 272 4 89 2 866 4 218 2 454 2 281 2 223 2 99 4 286 2 584 2 167 2 289 2 935 4 41 4 694 2 526 4 645 2 825 2 472 2 237 2 473 2 174 2 828 2 54 4 765 4 57 2 604 2 704 2 315 10 187 2 422 2 190 6 64 2 899 2 901 2 69 2 
781 2 719 2 198 2 612 2 619 2 260 4 86 4 272 4 89 2 866 4 218 2 454 2 281 2 223 2 99 4 286 4 584 2 167 2 289 2 935 4 41 4 694 2 526 4 645 2 825 2 472 4 237 2 473 2 174 2 828 2 54 4 765 4 57 2 604 2 704 2 315 10 187 2 422 2 190 6 64 2 899 2 901 2 69 2 
470 2 363 2 832 2 26 2 228 2 498 2 
112 2 832 2 892 2 727 2 494 2 538 2 852 2 
489 2 516 2 491 2 322 2 79 2 40 2 821 2 114 1 915 2 401 2 436 1 295 2 267 2 629 2 181 1 866 8 571 2 737 2 315 10 483 2 740 2 636 2 252 1 425 1 68 2 101 2 
196 4 584 6 167 6 747 2 935 16 692 2 496 2 82 2 205 2 645 6 260 3 472 2 237 6 765 12 942 2 57 6 798 2 479 2 153 2 271 2 272 4 866 6 333 2 218 6 703 2 315 6 422 2 901 6 777 4 286 2 
810 2 847 7 375 1 784 2 866 1 315 1 221 2 41 2 691 2 96 2 856 2 63 2 591 2 881 2 325 2 86 2 54 2 409 4 
810 2 847 6 784 2 221 2 41 2 691 4 96 4 856 2 63 2 591 2 325 2 881 4 86 2 54 2 409 4 
810 6 847 10 375 1 784 2 866 1 315 1 221 2 41 2 691 8 96 8 856 2 63 2 591 2 325 8 881 8 86 2 54 2 409 4 
847 2 784 2 221 2 41 2 691 2 96 2 856 2 63 2 591 2 881 2 86 2 54 2 409 2 
843 10 718 16 490 4 615 248 145 14 621 6 379 6 268 24 731 5 860 24 866 134 502 6 18 4 157 10 503 92 21 4 738 6 161 16 279 17 282 18 873 9 632 2 389 3 163 4 875 9 283 42 391 6 510 6 741 11 28 2 519 2 287 3 37 6 170 26 396 26 524 2 759 2 53 28 55 5 177 12 534 8 58 2 59 24 769 8 183 6 315 150 543 2 772 6 316 24 546 6 65 4 907 4 427 6 71 2 70 8 657 6 195 6 909 8 910 2 660 24 74 22 551 10 77 58 552 4 78 90 80 4 554 4 324 2 913 24 209 84 916 2 555 42 85 6 561 1 920 4 213 14 673 38 795 10 799 6 676 6 332 88 569 4 800 4 219 8 801 8 335 4 93 4 336 6 453 4 802 6 95 4 343 6 344 5 100 2 346 6 347 2 811 4 815 17 104 2 350 4 105 4 585 4 108 4 234 2 687 50 820 2 355 18 113 10 115 5 938 16 358 6 590 4 596 2 243 6 478 8 366 12 700 10 246 6 247 8 605 10 128 8 607 90 487 112 488 36 955 124 713 58 957 10 959 2 
843 2 195 2 718 4 3 2 909 2 660 2 551 2 615 44 256 2 77 2 145 2 913 2 434 2 437 2 791 4 730 2 266 4 859 2 860 2 213 2 795 2 152 2 674 2 269 2 626 2 154 2 331 2 215 2 925 2 866 44 332 20 157 2 219 2 800 2 801 2 453 2 161 4 282 2 509 2 875 6 391 2 510 2 343 2 227 2 744 2 745 2 815 2 104 2 519 2 395 2 640 2 232 2 641 2 934 2 752 2 820 2 172 2 111 2 524 2 525 4 291 2 113 2 938 4 402 2 826 2 596 2 53 38 299 2 55 2 700 2 833 2 246 2 247 2 605 2 128 2 315 46 543 2 484 2 653 2 772 4 710 4 709 2 487 20 488 2 713 2 955 6 957 2 547 2 840 2 424 6 958 2 427 2 
716 4 843 4 718 10 613 8 615 101 145 6 621 4 379 4 268 8 731 4 152 2 155 4 156 4 866 70 502 4 18 4 503 24 21 4 738 4 161 10 279 8 873 4 282 10 389 2 509 10 875 6 283 8 510 4 391 4 28 2 884 16 744 10 745 2 519 2 287 2 37 4 524 2 891 4 291 10 53 14 307 4 419 8 769 4 183 4 315 78 543 2 772 2 774 2 547 2 546 4 907 4 906 8 427 4 195 4 909 2 320 2 77 25 552 4 554 4 209 24 916 2 555 16 85 4 438 8 213 6 673 30 795 4 799 4 216 4 676 4 677 2 332 36 219 2 335 4 93 4 336 4 802 4 343 4 344 4 346 4 105 4 815 10 104 2 816 2 585 4 687 8 820 2 236 4 115 2 938 10 358 4 590 4 361 2 241 32 366 14 700 4 247 2 246 4 605 6 128 2 487 44 133 2 953 16 488 6 955 24 713 27 957 4 
71 2 70 2 843 2 195 4 718 6 909 2 910 2 74 10 615 40 77 12 145 2 731 2 213 2 795 2 673 6 152 2 331 2 866 26 332 14 219 2 161 6 279 6 282 2 873 4 632 2 95 2 875 4 391 4 510 4 741 2 343 4 344 2 104 2 519 2 815 2 234 2 820 2 524 2 115 2 938 6 596 2 53 14 55 2 700 2 58 2 247 2 246 4 605 2 128 2 315 28 543 2 772 2 487 14 713 12 955 8 488 2 957 2 65 2 427 4 
238 2 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V ERROR utilMDE.Options$ArgException 271 
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V ERROR utilMDE.Assert$AssertionException (195,1087) (51,466) 
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V PASSED
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V ERROR java.lang.NullPointerException (881,1105) 576 247 (881,1105) 1009 134 
daikon.test.diff.DiffTester:testConditionalPptsTrue()V ERROR java.lang.NullPointerException (881,1105) 576 247 (881,1105) 1009 134 
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V ERROR java.lang.NullPointerException (881,1105) 576 247 (881,1105) 1009 134 
daikon.test.diff.DiffTester:testPpts1Empty()V ERROR java.lang.NullPointerException (881,1105) 576 247 (881,1105) 1009 134 
daikon.test.diff.DiffTester:testPpts1Ppts1()V ERROR java.lang.NullPointerException (881,1105) 576 247 (881,1105) 1009 134 
daikon.test.diff.DiffTester:testPpts1Ppts2()V ERROR java.lang.NullPointerException (881,1105) 576 247 (881,1105) 1009 134 
daikon.test.diff.DiffTester:testPpts1Ppts3()V ERROR java.lang.NullPointerException (881,1105) 576 247 (881,1105) 1009 134 
daikon.test.diff.DiffTester:testInvs1Empty()V ERROR java.lang.NullPointerException (881,1105) 576 247 (881,1105) 1009 134 
daikon.test.diff.DiffTester:testInvs1Invs1()V ERROR java.lang.NullPointerException (881,1105) 576 247 (881,1105) 1009 134 
daikon.test.diff.DiffTester:testInvs1Invs2()V ERROR java.lang.NullPointerException (881,1105) 576 247 (881,1105) 1009 134 
daikon.test.diff.DiffTester:testInvs1Invs3()V ERROR java.lang.NullPointerException (881,1105) 576 247 (881,1105) 1009 134 
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NullPointerException (881,1105) 736 247 (881,1105) 1009 
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException (881,1105) 274 247 (881,1105) 1009 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NullPointerException (881,1105) 1054 247 (881,1105) 1009 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 155 1205 819 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 1096 646 15 
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 1096 646 15 
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_0()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_1()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_2()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_3()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_4()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_5()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_6()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_7()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_8()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_9()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_10()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_11()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_12()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_13()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_14()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_15()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_16()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_17()V PASSED
daikon.test.split.SplitterFactoryTest:testmisc_Fib_main_18()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_19()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_20()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_21()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_22()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_23()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_24()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_25()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_26()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_27()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_28()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_29()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_30()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_31()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_32()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__33()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__34()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__35()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__36()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__37()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__38()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__39()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__40()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__41()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__42()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__43()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
utilMDE.FuzzyFloat:FuzzyFloat()V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
jtb.syntaxtree.FormalParameters:accept(Ljtb.visitor.Visitor;)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
utilMDE.UtilMDE:split(Ljava.lang.String;Ljava.lang.String;)[Ljava.lang.String;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:eltwiseLTE([I)Z
daikon.tools.jtb.Ast:format(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
jtb.JavaParser:jj_2_25(I)Z
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.tools.jtb.Ast:typeMatch(Ljava.lang.String;Ljava.lang.String;)Z
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
utilMDE.UtilMDE:lineNumberFileReader(Ljava.lang.String;)Ljava.io.LineNumberReader;
jtb.syntaxtree.FormalParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_61()Z
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName:name()Ljava.lang.String;
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_164()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
daikon.inv.Invariant:prob_and(DDD)D | OPERATOR | 8959 | <= -> ==
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
jtb.JavaParser:FormalParameter()Ljtb.syntaxtree.FormalParameter;
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3_4()Z
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_81()Z
jtb.syntaxtree.NodeSequence:getParent()Ljtb.syntaxtree.Node;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.ProglangType:baseIsFloat()Z
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.tools.jtb.SimpleTreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ProglangType:dimensions()I
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
utilMDE.MathMDE:sign(I)I
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_89()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArguments;)V
daikon.ModBitTracker:ModBitTracker(I)V
jtb.syntaxtree.ResultType:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_2_4(I)Z
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
jtb.JavaParser:jj_3R_70()Z
utilMDE.MathMDE:mod_positive(II)I
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ImportDeclaration;)V
daikon.Ppt:Ppt()V
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_74()Z
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
jtb.JavaParser:jj_3R_51()Z
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:relate_var()V
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.test.TestAst:checkMatch(Ljava.lang.String;Ljtb.syntaxtree.MethodDeclaration;Ldaikon.tools.jtb.PptNameMatcher;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Statement;)V
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;)V
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.ArraysMDE:subarray([III)[I
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.diff.InvMap:InvMap()V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Name;)V
jtb.syntaxtree.Expression:accept(Ljtb.visitor.Visitor;)V
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InstanceOfExpression;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpression;)V
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_35()Z
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.FuzzyFloat:lte(DD)Z
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_2_18(I)Z
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
jtb.JavaParser:jj_3_18()Z
daikon.Quant:eltsLtIndex([I)Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljava.lang.String;Ljava.lang.String;Ljava.util.List;)Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
jtb.JavaParser:jj_3R_88()Z
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_49()Z
daikon.Debug:logOn()Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.test.FormatTestCase:passes()Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_104()Z
daikon.inv.unary.scalar.NonModulus:updateResults()V
utilMDE.Intern:internStrings([Ljava.lang.String;)V
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
jtb.JavaParserTokenManager:MoreLexicalActions()V
utilMDE.FuzzyFloat:eq(DD)Z
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_53()Z
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
jtb.JavaParser:jj_3R_126()Z
daikon.Quant:gt(II)Z
jtb.visitor.TreeFormatter:add(Ljtb.visitor.FormatCommand;)V
utilMDE.MathMDE:gcd_differences([I)I
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
jtb.syntaxtree.PrimaryExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.EqualityExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.OutputFormat:isJavaFamily()Z
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
utilMDE.Options.ArgException:ArgException(Ljava.lang.String;)V
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AndExpression;)V
jtb.JavaParser:jj_2_1(I)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.tools.jtb.PptNameMatcher:extractPptArgs(Ldaikon.PptName;)Ljava.util.List;
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
utilMDE.Assert:assertTrue(Z)V
daikon.tools.jtb.Ast:getPackage(Ljtb.syntaxtree.CompilationUnit;)Ljava.lang.String;
daikon.Quant:noDups([I)Z
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
jtb.syntaxtree.MethodDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ResultType;)V
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.OrderedPairIterator:setnext1()V
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.inv.Invariant:justified()Z
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ValueTuple:size()I
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
jtb.syntaxtree.ClassOrInterfaceDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
jtb.JavaParser:jj_3R_107()Z
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
jtb.JavaParser:jj_3R_120()Z
jtb.visitor.TreeDumper:TreeDumper(Ljava.io.Writer;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PackageDeclaration;)V
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_52()Z
jtb.JavaParser:jj_3_29()Z
jtb.JavaParser:jj_3R_55()Z
utilMDE.MathMDE:gcd(II)I
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
jtb.syntaxtree.TypeDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:sum([[I)I
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
jtb.syntaxtree.TypeBound:accept(Ljtb.visitor.Visitor;)V
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:negate(I)I
jtb.syntaxtree.VariableDeclaratorId:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.tools.jtb.Ast.1GetParametersVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
utilMDE.LimitedSizeIntSet:size()I
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_2_12(I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MultiplicativeExpression;)V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_85()Z
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String; | CONDITION | 14830 | if (x) -> if (!x)
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParser:jj_3_20()Z
daikon.Quant:eltsEqualIndex([I)Z
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
utilMDE.SimpleLog.LongVal:LongVal(J)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReturnStatement;)V
daikon.ProglangType:isScalar()Z
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
jtb.syntaxtree.ClassOrInterfaceDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String; | RETURN | 109561 | return null
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ReferenceType;)V
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
jtb.visitor.TreeFormatter:processList(Ljtb.syntaxtree.NodeListInterface;Ljtb.visitor.FormatCommand;)V
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.Modulus:enabled()Z
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.Quant:slice([III)[I
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.tools.jtb.PptNameMatcher:PptNameMatcher(Ljtb.syntaxtree.Node;)V
daikon.Quant:lexLT([I[I)Z
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
jtb.syntaxtree.ImportDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InclusiveOrExpression;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PostfixExpression;)V
daikon.tools.jtb.SimpleTreeDumper:SimpleTreeDumper(Ljava.io.Writer;)V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameter;)V
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.TreeFormatter:placeToken(Ljtb.syntaxtree.NodeToken;II)V
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.inv.unary.scalar.LowerBound:enabled()Z
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;Z)Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
jtb.JavaParser:jj_3R_62()Z
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.ValueTuple:isMissing(I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
daikon.test.TestAst.MethodDeclarationHarvester:visit(Ljtb.syntaxtree.MethodDeclaration;)V
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.Quant:subsetOf([I[I)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
jtb.visitor.TreeFormatter:space()Ljtb.visitor.FormatCommand;
daikon.Quant:lexNotEqual([I[I)Z
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.tools.jtb.Ast:create(Ljava.lang.String;Ljava.lang.String;)Ljtb.syntaxtree.Node;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.BlockStatement;)V
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
jtb.syntaxtree.ShiftExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalExpression;)V
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
jtb.JavaParser:jj_3R_96()Z
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.Quant:memberOf(F[D)Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.ValueTuple:isMissingNonsensical(I)Z
utilMDE.OrderedPairIterator:setnext2()V
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
jtb.syntaxtree.NodeToken:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_75()Z
jtb.JavaParser:jj_3_13()Z
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.visitor.TreeFormatter:TreeFormatter(II)V
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
jtb.JavaCharStream:getEndLine()I
jtb.JavaParser:JavaParser(Ljava.io.Reader;)V
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_76()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
jtb.visitor.TreeDumper:printToken(Ljava.lang.String;)V
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
jtb.syntaxtree.NodeChoice:accept(Ljtb.visitor.Visitor;)V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
jtb.JavaParser:jj_3R_97()Z
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakHasherMap.EntrySet:size()I
utilMDE.ArraysMDE:max([I)I
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
jtb.JavaParser:jj_3R_73()Z
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.Quant:pairwiseLT([I[I)Z
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
jtb.syntaxtree.AdditiveExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_scan_token(I)Z
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;)V
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.Node:children()Ljava.util.Iterator;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Expression;)V
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.ModBitTracker:num_samples()I
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
utilMDE.ArraysMDE:indexOf([I[I)I
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
jtb.syntaxtree.ConditionalExpression:accept(Ljtb.visitor.Visitor;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
jtb.visitor.FormatCommand:getNumCommands()I
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.diff.Node:Node()V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.UtilMDE:removeWhitespaceBefore(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:memberOf(I[I)Z
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
utilMDE.FuzzyFloat:ne(DD)Z
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
utilMDE.MathMDE:modulus([I)[I
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:isArray()Z
daikon.Quant:gte(II)Z
jtb.JavaParser:jj_3R_118()Z
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:indexOf([DD)I
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
jtb.syntaxtree.NodeToken:numSpecials()I
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
jtb.visitor.TreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
utilMDE.ArraysMDE:sum([I)I
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.Quant:eltsEqual([II)Z
jtb.syntaxtree.VariableDeclaratorId:VariableDeclaratorId(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.CompilationUnit:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArgument;)V
jtb.syntaxtree.TypeArguments:TypeArguments(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeArgument;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
jtb.syntaxtree.CompilationUnit:getParent()Ljtb.syntaxtree.Node;
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.Invariant:prob_and(DD)D
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.tools.jtb.Ast:getParameters(Ljtb.syntaxtree.MethodDeclaration;)Ljava.util.List;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.Quant:memberOf(S[S)Z
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.PptName:PptName(Ljava.lang.String;)V
jtb.syntaxtree.NodeSequence:elementAt(I)Ljtb.syntaxtree.Node;
daikon.Quant:lt(II)Z
jtb.JavaParser:jj_2_5(I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.Quant:eq(FF)Z
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
daikon.ModBitTracker:split(I)I
jtb.JavaParser:jj_3R_54()Z
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ReferenceType:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:eltsLteIndex([I)Z
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Quant:eltwiseEqual([I)Z
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
jtb.syntaxtree.InstanceOfExpression:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:lexGTE([I[I)Z
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.tools.jtb.PptNameMatcher:getUngenerifiedType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
jtb.JavaParser:jj_3R_122()Z
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
jtb.syntaxtree.NodeChoice:getParent()Ljtb.syntaxtree.Node;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
jtb.JavaParser:jj_2_35(I)Z
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.PptName:getMethodName()Ljava.lang.String;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:accept(Ljtb.visitor.Visitor;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
utilMDE.ArraysMDE:fn_is_total([I)Z
jtb.JavaParser:jj_3R_77()Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_124()Z
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.TypeDeclaration:TypeDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfo:new_ppt()V
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameter;)V
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.PptSlice2:arity()I
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_48()Z
utilMDE.Fmt:i(I)Ljava.lang.Integer;
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
daikon.PptName:toString()Ljava.lang.String;
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:subsetOf([J[J)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.PptMap:asCollection()Ljava.util.Collection;
jtb.JavaParser:jj_3R_115()Z
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
jtb.syntaxtree.ConditionalOrExpression:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.Type;)V
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryPrefix;)V
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
utilMDE.MathMDE:gcd([I)I
daikon.tools.jtb.PptNameMatcher:typeMatch(Ljava.lang.String;Ljtb.syntaxtree.FormalParameter;)Z
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.PptSlice0:initInvariantsSeen()V
jtb.visitor.TreeFormatter:processList(Ljtb.syntaxtree.NodeListInterface;)V
jtb.JavaParser:jj_2_16(I)Z
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;)V
daikon.Quant:eltsGT([II)Z
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | ASSIGN | 3371 | = null
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:copy(Ljava.util.HashMap;)Ljava.util.HashMap;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ProglangType:isPseudoArray()Z
daikon.Quant:eltsGTE([II)Z
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AdditiveExpression;)V
utilMDE.ArraysMDE:fn_compose([I[I)[I
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_125()Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
daikon.ValueTuple:tuplemodHasModified(I)Z
utilMDE.ArraysMDE:fn_identity(I)[I
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_135()Z
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.Quant:eltsGtIndex([I)Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:toString()Ljava.lang.String;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBody;)V
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
jtb.syntaxtree.NodeSequence:elements()Ljava.util.Enumeration;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3_27()Z
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.ProglangType:isIntegral()Z
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.VarInfo:name()Ljava.lang.String;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalAndExpression;)V
jtb.JavaParser:jj_3R_72()Z
jtb.JavaParser:jj_3R_117()Z
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.tools.jtb.SimpleTreeDumper:printToken(Ljava.lang.String;)V
jtb.JavaCharStream:getEndColumn()I
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE:gcd(JJ)J
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
jtb.JavaParser:jj_3R_57()Z
daikon.ModBitTracker:num_sets()I
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameters;)V
daikon.ValueTuple:isMissingFlow(I)Z
jtb.syntaxtree.ClassOrInterfaceDeclaration:ClassOrInterfaceDeclaration(Ljtb.syntaxtree.NodeChoice;Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ClassOrInterfaceBody;)V
jtb.JavaParser:jj_3R_63()Z
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
jtb.JavaParser:jj_3R_137()Z
daikon.inv.Invariants:Invariants()V
jtb.JavaParser:jj_3R_103()Z
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
daikon.Quant:intersection([I[I)[I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
jtb.JavaParser:jj_3R_133()Z
jtb.JavaParser:jj_3R_60()Z
jtb.JavaParser:jj_3_14()Z
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.PptName:isEnterPoint()Z
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
jtb.syntaxtree.NodeListOptional:getParent()Ljtb.syntaxtree.Node;
utilMDE.WeakHasherMap:size()I
daikon.VarInfoName:simplify_name()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_99()Z
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
utilMDE.ArraysMDE:min_max([I)[I
utilMDE.MathMDE:pow_fast(II)I
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern:intern([D)[D
daikon.Quant:lte(II)Z
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclarator;)V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.visitor.FormatCommand:FormatCommand(II)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.CompilationUnit:CompilationUnit(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_121()Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
jtb.JavaParser:jj_3R_47()Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
jtb.syntaxtree.TypeParameters:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
jtb.JavaCharStream:ReadByte()C
daikon.Quant:setEqual([I[I)Z
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_98()Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
utilMDE.ArraysMDE:element_range([I)I
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
utilMDE.MathMDE:missing_numbers([I)[I
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
utilMDE.Intern:internSubsequence([JII)[J
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
jtb.syntaxtree.TypeArgument:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfo:isPointer()Z
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.RootNode:RootNode()V
jtb.JavaParser:jj_3R_106()Z
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakHasherMap:processQueue()V
jtb.JavaParser:jj_3R_108()Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.Quant:eltwiseGT([I)Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.syntaxtree.FormalParameter:FormalParameter(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Type;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.tools.jtb.Ast:getParent(Ljava.lang.Class;Ljtb.syntaxtree.Node;)Ljtb.syntaxtree.Node;
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.Positive:enabled()Z
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
utilMDE.Intern:internSubsequence([III)[I
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.Quant:memberOf(F[F)Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.Quant:ne(II)Z
jtb.syntaxtree.RelationalExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_163()Z
jtb.JavaParser:jj_3R_162()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.FormalParameter;)V
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameters;)V
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Modifiers;)V
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.Quant:memberOf(D[F)Z
utilMDE.ArraysMDE:sum([[D)D
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
jtb.JavaParser:jj_3_5()Z
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_86()Z
utilMDE.Options.OptionInfo:argument_required()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaCharStream:UpdateLineColumn(C)V
jtb.JavaParser:jj_3R_102()Z
daikon.Quant:subsetOf([F[F)Z
jtb.syntaxtree.MethodDeclarator:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.PptName:getSignature()Ljava.lang.String;
utilMDE.LimitedSizeIntSet:add(I)V
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
jtb.JavaParser:jj_2_14(I)Z
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.test.InvariantFormatTester:execute()Z
jtb.JavaParser:jj_3_12()Z
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_50()Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.ElementsFinder:inPre()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.CompilationUnit;)V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
utilMDE.FuzzyFloat:gt(DD)Z
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.FuzzyFloat:set_rel_diff(D)V
jtb.visitor.FormatCommand:getCommand()I
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:getToken(I)Ljtb.Token;
daikon.inv.Invariant:getConfidence()D
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
jtb.JavaParser:jj_3_10()Z
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameters;)V
jtb.syntaxtree.BlockStatement:accept(Ljtb.visitor.Visitor;)V
daikon.test.TestAst.ClassOrInterfaceDeclarationHarvester:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.Quant:eltsLT([II)Z
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
utilMDE.Intern:intern([J)[J
jtb.syntaxtree.Modifiers:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:jj_3R_58()Z
daikon.tools.jtb.Ast:create(Ljava.lang.String;[Ljava.lang.Class;[Ljava.lang.Object;Ljava.lang.String;)Ljtb.syntaxtree.Node;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.NodeList:NodeList()V
daikon.Quant:pairwiseSquare([I[I)Z
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
utilMDE.UtilMDE:removeWhitespaceAround(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.NodeSequence:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_68()Z
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
jtb.syntaxtree.TypeParameter:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_134()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Literal;)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.PptSlice1:arity()I
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.ExclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.ProglangType:baseIsIntegral()Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V | ASSIGN | 440 | = null
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
jtb.JavaParser:jj_3R_119()Z
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_100()Z
jtb.Token:newToken(I)Ljtb.Token;
jtb.syntaxtree.InclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.Quant:subsetOf([D[F)Z
jtb.JavaParser:jj_2_13(I)Z
daikon.Quant:memberOf(J[J)Z
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.PptName:getFullClassName()Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.FuzzyFloat:lt(DD)Z
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParser:jj_3R_87()Z
utilMDE.UtilMDE:removeWhitespaceAfter(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.Literal:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.test.TestQuant:assert_arrays_equals([I[I)V
jtb.JavaParser:jj_3_16()Z
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_2_17(I)Z
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.tools.jtb.Ast:getName(Ljtb.syntaxtree.MethodDeclaration;)Ljava.lang.String;
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.tools.jtb.Ast:getClassName(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ShiftExpression;)V
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
daikon.tools.jtb.Ast:getType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
daikon.Quant:union([I[I)[I
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
jtb.syntaxtree.NodeOptional:present()Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor.1:visit(Ljtb.syntaxtree.TypeParameter;)V
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
jtb.JavaParser:jj_3R_67()Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
jtb.syntaxtree.NodeListOptional:elements()Ljava.util.Enumeration;
jtb.JavaParser:jj_3R_69()Z
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
jtb.syntaxtree.NullLiteral:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Type;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
jtb.syntaxtree.TypeArguments:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3_30()Z
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.Quant:eq(JJ)Z
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
utilMDE.ArraysMDE:sum([D)D
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;)Z
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltwiseGTE([I)Z
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:ungenerify(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.MathMDE:mod_positive(JJ)J
jtb.syntaxtree.ClassOrInterfaceBody:ClassOrInterfaceBody(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_56()Z
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments;
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
jtb.syntaxtree.VariableDeclaratorId:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:lexEqual([I[I)Z
jtb.syntaxtree.TypeDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:lexLTE([I[I)Z
jtb.syntaxtree.PrimaryPrefix:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:concat([I[I)[I
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.SimpleLog:SimpleLog(Z)V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.Quant:eltsNotEqualIndex([I)Z
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
jtb.JavaCharStream:backup(I)V
jtb.syntaxtree.ClassOrInterfaceType:accept(Ljtb.visitor.Visitor;)V
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.MathMDE:pow(II)I
daikon.ModBitTracker:num_vars()I
daikon.ProglangType:isPointerFileRep()Z
daikon.diff.Node:add(Ljava.lang.Object;)V
jtb.JavaCharStream:getBeginLine()I
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryExpression;)V
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
jtb.visitor.TreeFormatter:space(I)Ljtb.visitor.FormatCommand;
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.Quant:lexGT([I[I)Z
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.AndExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:esc_name()Ljava.lang.String;
jtb.JavaParser:jj_3_19()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
utilMDE.ArraysMDE:concat([I[I)[I
jtb.JavaParser:jj_3R_80()Z
jtb.syntaxtree.MethodDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.FormalParameter:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.Type:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.PackageDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ClassOrInterfaceBody:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
jtb.syntaxtree.MultiplicativeExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
jtb.JavaParser:jj_2_15(I)Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.FuzzyFloat:indexOf([D[D)I
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.Quant:setDiff([I[I)[I
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
jtb.JavaParser:jj_3_22()Z
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:eltsNotEqual([II)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljtb.syntaxtree.Node;)Z
daikon.VarInfoName:hashCode()I
daikon.ProglangType:isFloat()Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.PptSlice0:arity()I
jtb.JavaParser:jj_3_25()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Block;)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
jtb.JavaParser:jj_2_3(I)Z
jtb.syntaxtree.NodeListOptional:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
utilMDE.Intern:intern([I)[I
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeDeclaration;)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:pairwiseDivides([I[I)Z
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.Quant:subsetOf([B[I)Z
jtb.syntaxtree.TypeArgument:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ExclusiveOrExpression;)V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_161()Z
jtb.JavaParser:jj_3R_210()Z
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.inv.Invariant:logOn()Z
daikon.Quant:eltwiseNotEqual([I)Z
jtb.syntaxtree.Block:accept(Ljtb.visitor.Visitor;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
jtb.JavaParser:jj_3R_101()Z
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeBound;)V
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
jtb.JavaParser:jj_3_28()Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.tools.jtb.Ast:removeWhitespace(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eq(II)Z
daikon.PptTopLevel:name()Ljava.lang.String;
jtb.JavaParser:jj_3_21()Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
jtb.syntaxtree.Statement:accept(Ljtb.visitor.Visitor;)V
utilMDE.UtilMDE:splitLines(Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_180()Z
utilMDE.FuzzyFloat:gte(DD)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.Quant:isReverse([I[I)Z
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
jtb.visitor.TreeFormatter:TreeFormatter()V
daikon.ProglangType:baseIsScalar()Z
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:enabled()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.EqualityExpression;)V
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.tools.jtb.Ast:quickFixForInternalComment(Ljava.lang.String;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
utilMDE.ArraysMDE:noDuplicates([J)Z
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
jtb.JavaParser:jj_2_10(I)Z
jtb.JavaParser:jj_3_3()Z
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.ReturnStatement:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_114()Z
jtb.JavaParser:jj_3_36()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.RelationalExpression;)V
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.PptName:isCombinedExitPoint()Z
jtb.JavaParser:jj_2_36(I)Z
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
jtb.JavaParser:jj_3_17()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeSequence;)V
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.syntaxtree.ClassOrInterfaceBody:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_15()Z
jtb.JavaParser:jj_3R_149()Z
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
jtb.syntaxtree.ClassOrInterfaceBody:getParent()Ljtb.syntaxtree.Node;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.Quant:pairwiseGTE([I[I)Z
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.PptTopLevel.CondIterator:hasNext()Z
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.tools.jtb.Ast:print(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.Quant:eltwiseLT([I)Z
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.UnaryExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern:numIntArrays()I
daikon.Quant:eltsGteIndex([I)Z
jtb.JavaParser:jj_3R_109()Z
utilMDE.UtilMDE:lineNumberFileReader(Ljava.io.File;)Ljava.io.LineNumberReader;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
utilMDE.ArraysMDE:indexOf([II)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NullLiteral;)V
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:jj_3R_136()Z
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.Quant:subsetOf([S[S)Z
jtb.JavaParser:jj_3_1()Z
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
jtb.JavaParser:jj_ntk()I
jtb.syntaxtree.TypeArguments:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_110()Z
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.TypeDeclaration:getParent()Ljtb.syntaxtree.Node;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
jtb.syntaxtree.NodeOptional:NodeOptional()V
jtb.JavaParser:jj_3R_148()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReferenceType;)V
utilMDE.OrderedPairIterator:hasNext()Z
daikon.Quant:pairwiseEqual([I[I)Z
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.Name:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:pairwiseGT([I[I)Z
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;Ljava.lang.String;)V
utilMDE.ArraysMDE:min([I)I
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
jtb.JavaCharStream:readChar()C
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.VarInfo:jml_name()Ljava.lang.String;
utilMDE.ArraysMDE:subarray([JII)[J
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:eltsLTE([II)Z
jtb.JavaParser:jj_2_21(I)Z
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Elements:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.Quant:pairwiseLTE([I[I)Z
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
jtb.JavaCharStream:getBeginColumn()I
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.Quant:subsetOf([D[D)Z
jtb.JavaParser:jj_3R_169()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalOrExpression;)V
daikon.inv.Invariant:prob_or(DD)D
jtb.JavaParser:VariableDeclaratorId()Ljtb.syntaxtree.VariableDeclaratorId;
jtb.syntaxtree.ConditionalAndExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaCharStream:BeginToken()C
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
jtb.JavaParser:jj_3R_123()Z
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:fn_is_permutation([I)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;II)V
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
jtb.syntaxtree.PostfixExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
jtb.syntaxtree.NodeOptional:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:present()Z
daikon.Quant:eq(DD)Z
daikon.VarInfoName:ioa_name()Ljava.lang.String;
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Simple:isLiteralConstant()Z
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_105()Z
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
utilMDE.ArraysMDE:sorted([I)Z
daikon.Quant:subsetOf([F[D)Z
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.ValueSet:ValueSet(I)V
jtb.JavaParser:jj_3R_116()Z
daikon.Quant:sameLength([I[I)Z
jtb.JavaCharStream:FillBuff()V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
142 2 1087 2 432 2 629 2 623 2 811 2 195 2 261 4 361 2 
366 6 1023 2 1253 2 644 2 469 2 149 2 165 2 205 6 564 6 350 2 525 2 
1193 6 621 6 437 6 560 2 13 4 1136 6 1137 2 537 2 885 2 1087 2 195 2 1138 2 322 4 
751 2 117 12 756 4 1317 10 615 16 1082 6 758 16 508 16 1087 6 821 26 986 2 1215 10 195 6 223 2 762 10 744 10 966 4 849 6 642 8 1220 4 252 8 1197 8 1265 2 920 10 334 28 773 2 704 2 1247 2 709 8 111 4 
583 4 652 6 
924 2 
527 2 244 2 1296 2 393 2 397 2 1087 4 1259 2 1088 2 741 2 601 2 1263 2 48 2 971 2 227 2 52 2 702 4 1179 2 53 2 1230 4 451 2 752 2 794 2 419 2 882 2 797 2 1276 2 614 2 461 2 142 2 986 2 195 4 267 2 1328 2 619 2 585 2 807 2 1153 2 896 2 1201 2 900 2 671 2 154 4 1121 2 283 4 
1 6 117 22 777 4 1143 2 756 2 611 3 1317 6 1298 2 119 6 596 2 615 32 1082 4 141 4 758 32 508 32 1087 4 821 47 1215 15 266 6 887 6 195 4 1090 2 146 5 762 15 744 15 849 4 252 19 11 4 920 15 334 52 299 4 206 4 876 2 705 4 704 2 709 6 1159 6 156 8 1036 4 
1201 2 1001 2 529 2 
833 2 163 22 357 2 921 2 910 2 445 2 1055 2 1100 2 829 2 133 2 900 2 1127 2 433 10 398 2 
117 2 756 2 1317 4 392 2 615 2 1082 2 758 2 508 2 821 4 1215 2 1240 2 762 2 1171 2 744 2 1150 2 252 2 177 2 697 2 920 2 334 6 1225 2 1229 2 926 2 
762 4 870 2 744 4 117 4 1220 2 119 6 920 4 334 16 615 8 299 4 758 8 508 8 821 12 1215 4 266 6 1036 4 721 2 
1001 6 1063 4 1209 2 545 4 85 14 529 2 657 4 1303 4 1013 2 741 4 267 2 438 2 1216 2 169 2 1326 2 65 2 250 62 724 4 176 4 725 4 745 2 368 4 26 2 573 2 238 10 75 2 1200 4 1201 8 207 2 497 2 702 4 774 2 1075 2 208 2 703 2 181 2 712 10 978 4 951 4 256 2 
990 2 271 2 389 2 186 2 828 2 1019 2 9 2 279 2 924 2 801 2 1000 2 
0 2 1161 2 557 1 83 1 908 2 1006 3 818 1 737 1 563 2 631 3 912 2 328 2 249 3 1167 2 1087 34 167 2 488 2 3 2 637 2 742 5 823 1 168 2 638 2 1168 2 88 6 401 2 90 2 826 2 649 16 650 2 1174 2 95 2 495 2 919 4 1176 2 178 2 651 12 1267 1 496 1 413 2 832 4 1021 2 1022 2 577 2 17 1 502 2 1183 2 343 2 417 3 503 2 418 2 190 2 262 2 1277 2 1111 2 101 2 1278 32 584 2 195 32 1112 2 351 2 939 2 105 3 846 2 513 2 848 2 1114 3 1281 3 272 2 1195 2 943 1 519 2 852 2 1034 2 590 2 432 2 522 2 950 2 674 4 281 2 1204 8 1293 2 776 2 435 3 212 3 1295 6 859 1 1041 2 214 8 1299 2 683 2 289 1 124 2 687 4 960 2 441 16 41 12 1305 2 42 6 1050 2 367 3 1222 16 297 2 607 1 1313 2 301 1 135 2 713 2 1139 2 56 3 977 24 541 2 230 3 1062 2 1141 16 375 2 880 32 452 4 376 2 795 1 1145 2 138 2 1065 4 462 8 382 2 798 2 1146 2 143 2 1322 2 1324 24 548 2 1068 2 890 2 620 2 1070 2 1072 4 625 6 1332 2 552 2 1244 1 627 1 727 2 475 2 1336 2 153 2 1158 2 1248 4 79 2 1078 1 
967 2 1087 2 
466 2 51 2 1087 4 602 2 
1289 2 
630 2 1004 2 324 16 1007 228 326 2 327 20 1008 86 1010 2 1012 4 636 16 4 2 639 6 7 92 1017 198 645 244 647 2 1018 8 332 2 333 28 12 8 336 204 14 10 653 6 654 2 1020 6 339 2 340 2 655 30 341 2 344 4 1024 4 20 2 1026 2 347 26 659 30 660 198 1030 6 352 6 353 2 22 6 354 6 356 6 24 8 665 4 667 4 1033 2 27 2 669 2 359 26 29 2 670 2 673 2 675 2 1037 182 677 2 35 2 680 4 1039 2 679 18 681 2 1040 6 682 60 1042 112 1044 22 1045 28 684 2 685 2 39 4 1046 4 1047 2 1048 2 1049 6 690 12 692 4 45 2 370 2 369 386 696 4 371 60 1052 46 1053 12 50 2 700 2 699 290 373 4 54 6 1056 4 708 8 1059 2 714 4 58 2 715 328 378 198 716 2 379 26 60 2 717 20 1064 2 61 4 718 10 719 2 381 30 64 4 63 64 720 30 383 20 384 48 1069 2 385 2 722 4 68 30 1071 6 1073 2 71 2 73 198 726 14 388 192 77 2 729 2 730 432 78 26 1076 2 80 6 1077 328 81 2 733 2 390 26 1079 2 84 2 735 14 395 2 396 2 1085 10 1087 10 1089 4 87 4 89 66 404 6 1094 12 91 2 92 28 1095 6 405 566 94 4 408 112 1098 2 96 22 1097 4 409 6 746 2 412 6 749 2 1104 6 1106 2 755 26 1110 14 420 4 100 2 421 2 102 2 103 2 424 4 422 6 760 2 1113 2 763 2 767 6 768 4 769 2 770 2 1116 8 106 2 430 16 107 6 109 2 1119 2 110 2 113 8 114 2 116 4 436 10 778 2 1123 6 1124 8 121 6 120 12 125 6 126 6 781 6 1126 2 782 2 440 2 783 4 129 52 784 4 786 4 787 4 130 2 1130 2 788 8 443 30 789 2 790 10 1134 28 1133 60 131 2 1135 2 446 20 447 4 448 98 791 2 1140 4 450 48 454 4 457 6 796 2 137 2 458 4 139 2 459 26 460 12 800 2 144 2 463 4 464 4 1149 6 803 376 468 2 804 2 806 8 1151 8 148 2 470 2 150 2 1154 2 1155 8 1156 2 151 2 152 4 475 2 810 2 476 8 478 2 157 2 1160 6 479 16 160 198 162 6 1163 2 1162 2 1164 6 814 46 1165 132 817 4 816 2 1166 12 484 6 485 2 487 4 820 32 822 4 489 54 171 4 172 60 1170 2 173 2 1172 2 175 4 825 4 1173 244 492 2 1175 6 1177 192 180 2 499 6 1180 6 182 6 183 6 834 4 185 2 835 2 836 4 188 6 187 2 189 4 504 2 839 12 505 46 506 2 193 2 507 6 1189 4 1190 2 509 30 195 10 194 2 842 14 1191 14 843 6 196 4 511 4 844 2 1192 14 845 4 199 2 200 6 202 2 1199 2 516 2 850 10 517 2 853 4 854 26 523 2 856 20 524 6 860 2 861 8 528 2 862 244 1213 6 217 4 218 2 865 26 1214 2 867 22 221 2 868 4 222 2 869 6 224 30 1217 182 225 20 533 2 1219 20 872 2 1223 2 1224 6 538 82 536 2 878 6 1227 2 228 4 229 2 540 2 1231 6 1233 2 543 4 1234 2 546 2 233 8 234 4 884 30 1235 2 1238 4 547 4 235 4 549 2 1241 68 551 4 1242 12 1243 2 237 4 236 2 893 64 240 2 553 2 897 2 898 198 899 6 1246 4 554 2 555 2 1250 106 1251 28 1252 50 243 2 902 46 246 14 905 2 1255 2 1256 12 559 2 561 2 562 2 565 132 913 4 248 2 914 8 915 6 1262 432 916 2 567 4 566 6 568 2 918 4 571 6 1266 4 574 2 575 2 923 24 1269 2 925 2 255 160 927 2 257 22 258 2 578 8 1272 2 579 4 260 4 580 2 581 6 932 4 264 20 933 2 934 6 935 2 936 2 265 6 940 2 270 4 942 224 587 112 275 2 1284 198 1287 2 948 6 1288 6 949 12 1290 6 1291 6 280 6 282 2 1292 198 286 2 1294 30 953 2 594 4 1297 26 288 2 1300 6 955 2 956 84 600 6 957 12 958 140 959 74 961 6 962 24 964 26 603 2 965 2 604 2 1306 204 292 2 294 4 1307 2 970 6 295 118 298 2 606 2 1310 336 300 8 974 2 1314 6 979 18 303 106 305 2 306 2 982 2 307 94 612 2 983 4 984 12 308 2 1320 4 985 2 1321 2 310 88 617 2 989 46 312 4 622 4 991 6 313 6 993 4 1330 2 994 2 314 18 996 6 1333 30 1335 112 999 70 319 2 318 2 321 8 320 6 1338 2 
1117 2 928 2 1334 2 6 1 
1117 2 1003 2 
1201 2 1117 2 917 2 431 2 678 2 111 2 501 2 
1117 2 431 2 731 2 
1117 2 431 2 342 2 
1334 2 1129 2 780 2 
1117 2 431 2 
456 2 780 2 
1117 2 1061 2 
1334 2 1254 2 780 2 
442 2 1334 2 399 2 
174 2 1279 2 1334 2 
1334 2 706 2 1257 2 
477 2 1334 2 1202 2 
494 2 780 2 
1117 2 1103 2 
442 2 1221 2 
23 2 174 2 
765 2 706 2 
477 2 976 2 
276 2 780 2 
477 2 1226 2 
706 2 626 2 
174 2 490 2 
140 2 442 2 
1334 2 1254 2 992 2 780 2 
1334 2 1254 2 992 2 345 2 780 2 
1334 2 1091 2 780 2 
1334 2 857 2 780 2 
1207 2 723 2 734 2 1058 2 
1093 2 1329 2 793 2 805 2 163 6 903 2 69 2 482 2 968 2 1081 2 472 2 1311 4 1286 2 1237 2 775 2 363 2 901 2 556 4 
1334 2 740 2 
1201 2 917 2 998 2 1038 2 
1201 2 917 2 998 2 1038 2 937 2 501 2 
1201 2 1117 2 917 2 431 2 1057 2 111 2 
807 2 197 2 
1201 2 917 2 304 2 111 2 
582 2 706 2 
598 2 477 2 
847 2 442 2 
174 2 1271 2 
174 2 477 2 309 2 
174 2 477 2 995 2 
174 2 477 2 1028 2 
174 2 477 2 500 2 
1186 6 123 2 987 2 917 2 1201 2 1074 2 609 2 112 6 
415 2 780 2 
1305 2 
0 2 1167 2 1087 26 167 2 3 2 168 2 638 2 88 6 826 4 251 2 649 6 650 2 572 2 919 2 178 2 1176 2 1099 2 1267 2 651 8 413 2 832 2 1021 2 577 2 184 2 1109 2 418 2 101 2 1278 4 195 26 1112 2 1031 2 513 2 846 2 766 2 272 2 432 2 522 2 674 4 281 6 1293 2 434 4 1295 2 1299 2 214 2 122 2 779 2 683 2 864 2 687 4 41 8 42 4 871 2 1218 2 301 2 541 2 879 2 880 6 138 2 1065 4 1322 2 143 2 1068 2 988 2 620 2 1072 2 891 4 625 2 1332 2 1244 4 728 2 475 2 997 2 153 2 1158 2 79 2 1248 4 
0 2 1167 2 1087 26 167 2 3 2 168 2 638 2 88 6 826 4 251 2 649 6 650 2 572 2 919 2 178 2 1176 2 1267 2 651 8 413 2 832 2 1021 2 502 2 577 2 184 2 1109 2 418 2 101 2 1278 4 195 26 1112 2 1031 2 513 2 846 2 766 2 272 2 1283 2 432 2 522 2 674 4 281 6 1293 2 434 4 1295 2 1299 2 214 2 779 2 683 2 124 2 864 2 687 4 960 2 41 8 42 6 871 2 873 2 973 2 301 2 541 2 879 2 880 6 138 2 1065 4 1322 2 143 2 1068 2 988 2 620 2 1072 2 891 4 625 2 1332 2 1244 2 728 2 475 2 997 2 153 2 1158 2 1248 4 79 2 
1206 2 1253 4 118 2 1299 2 558 2 165 2 247 2 1009 2 564 6 687 2 1087 12 86 2 5 4 688 2 1016 4 88 4 1261 8 1169 2 366 6 644 2 569 2 178 2 747 2 411 2 134 2 254 2 1105 2 1021 2 576 2 231 2 754 2 455 4 881 2 759 4 195 6 423 2 1325 2 1239 2 1068 2 268 8 941 2 664 2 272 2 427 4 25 2 586 2 515 2 809 2 894 2 205 6 1285 2 475 2 1118 8 79 2 674 2 525 4 
1206 2 1208 4 1253 4 118 2 1299 2 558 2 165 2 247 2 1009 2 564 8 687 2 1087 12 86 2 5 4 1016 4 88 4 1261 8 366 8 644 2 569 2 93 2 178 2 747 2 411 2 134 2 254 2 711 2 1105 2 1021 2 576 2 231 2 754 2 455 4 881 2 759 4 195 6 423 2 1325 2 1239 2 1068 2 268 8 941 2 664 2 272 2 427 4 25 2 586 2 515 2 809 2 149 2 894 2 205 6 1285 2 475 2 1118 8 79 2 674 2 525 4 
941 2 366 2 1253 2 427 4 25 2 118 2 558 2 894 2 205 2 1009 2 411 2 134 2 759 4 1325 2 423 2 1105 2 1239 2 525 2 
1206 2 1253 4 118 2 1299 2 558 2 247 2 1009 2 564 6 687 2 1087 12 86 2 5 4 688 2 1016 4 88 4 1261 4 1169 2 366 6 644 2 569 2 178 2 747 2 411 2 134 2 254 2 1105 2 1021 2 576 2 231 2 754 2 455 4 881 2 759 4 195 6 423 2 1325 2 1239 2 1068 2 268 4 941 2 664 2 272 2 427 4 25 2 586 2 515 2 809 2 149 2 894 2 205 4 1285 2 475 2 1118 4 79 2 674 2 525 4 
1206 2 1253 4 118 2 1299 2 558 2 247 2 1009 2 564 6 687 2 1087 12 86 2 5 4 688 2 1016 4 88 4 1261 4 1169 2 366 4 644 2 569 2 178 2 747 2 411 2 134 2 254 2 1105 2 1021 2 576 2 231 2 754 2 455 4 881 2 759 4 195 6 423 2 1325 2 1239 2 1068 2 268 4 941 2 664 2 272 2 427 4 25 2 469 2 586 2 515 2 809 2 894 2 205 6 1285 2 475 2 1118 4 79 2 674 2 525 4 
1206 2 1253 4 118 2 1299 2 558 2 165 2 247 2 1009 2 564 6 687 2 1087 12 86 2 5 4 688 2 1016 4 88 4 1261 8 1169 2 366 6 644 2 569 2 178 2 747 2 411 2 134 2 254 2 1105 2 1021 2 576 2 231 2 754 2 455 4 881 2 759 4 195 6 423 2 1325 2 1239 2 1068 2 268 4 941 2 664 2 272 2 427 4 25 2 586 2 515 2 809 2 894 2 205 6 1285 2 475 2 1118 4 79 2 674 2 525 4 
1206 2 1253 4 118 2 1299 2 558 2 165 2 247 2 1009 2 564 8 687 2 1087 12 86 2 5 4 688 2 1016 4 88 4 1261 8 1169 2 366 6 644 2 569 2 178 2 747 2 411 2 134 2 254 2 1105 2 1021 2 576 2 231 2 754 2 455 4 881 2 759 4 195 6 423 2 1325 2 1239 2 1068 2 268 8 941 2 664 2 272 2 427 4 25 2 469 2 586 2 515 2 809 2 894 2 205 8 1285 2 475 2 1118 8 79 2 674 2 525 4 
1206 2 1253 4 118 2 1299 2 558 2 165 2 247 2 1009 2 564 6 687 2 1087 12 86 2 5 4 688 2 1016 4 88 4 1261 8 1169 2 366 6 644 2 569 2 178 2 747 2 411 2 134 2 254 2 1105 2 1021 2 576 2 231 2 754 2 455 4 881 2 759 4 195 6 423 2 1325 2 1239 2 1068 2 268 8 941 2 664 2 272 2 427 4 25 2 586 2 515 2 809 2 894 2 205 6 1285 2 475 2 1118 8 79 2 674 2 525 4 
0 2 1253 4 558 2 247 2 1009 2 564 12 1167 2 1087 28 167 2 3 2 86 2 329 2 168 2 5 4 1016 6 88 6 1261 2 827 2 644 4 251 2 569 2 649 6 919 2 178 2 651 2 747 2 411 2 254 2 832 2 1102 2 1105 2 1021 2 576 2 502 2 19 2 1185 2 754 2 1273 2 1278 2 840 2 101 2 759 4 195 18 423 2 941 2 664 2 513 2 766 2 427 4 272 2 25 2 586 2 515 2 205 8 28 2 1285 2 432 2 281 6 674 4 284 2 525 4 1293 2 1206 2 434 4 1295 2 118 2 1299 2 683 2 124 2 687 4 41 2 688 2 42 6 366 4 871 2 608 4 134 2 541 2 880 8 231 2 455 8 881 2 138 2 1065 4 1322 2 1325 2 1239 2 1068 2 620 2 1072 2 469 4 625 2 809 2 1332 2 894 2 475 2 153 4 1248 4 79 2 
0 2 1253 4 558 2 165 4 247 2 1009 2 564 12 1167 2 1087 28 167 2 3 2 86 2 329 2 168 2 5 4 1016 6 88 6 1261 6 827 2 644 4 251 2 569 2 649 6 919 4 178 2 651 4 747 2 411 2 254 2 832 4 1102 2 1105 2 1021 2 576 2 502 2 19 2 1185 2 754 2 1273 2 1278 2 840 2 101 2 759 4 195 18 423 2 941 2 664 2 513 2 766 2 427 4 272 2 25 2 586 2 515 2 205 8 28 2 1285 2 432 2 281 6 674 4 284 2 525 4 1293 2 1206 2 434 4 1295 2 118 2 1299 2 683 2 124 2 687 4 41 4 688 2 42 6 366 8 871 2 608 4 134 2 541 2 880 8 231 2 455 8 881 2 138 2 1065 4 1322 2 1325 2 1239 2 1068 2 620 2 1072 4 625 2 809 2 1332 2 894 2 475 2 153 4 1248 4 79 2 
0 2 1253 4 558 2 165 4 247 2 1009 2 564 12 1167 2 1087 28 167 2 3 2 86 2 329 2 168 2 5 4 1016 6 88 6 1261 6 827 2 644 4 251 2 569 2 649 6 919 4 178 2 651 4 747 2 411 2 254 2 832 4 1102 2 1105 2 1021 2 576 2 502 2 19 2 1185 2 754 2 1273 2 1278 2 840 2 101 2 759 4 195 18 423 2 268 4 941 2 664 2 513 2 766 2 427 4 272 2 25 2 586 2 515 2 205 8 28 2 1285 2 1118 4 432 2 281 6 674 4 284 2 525 4 1293 2 1206 2 434 4 1295 2 118 2 1299 2 683 2 124 2 687 4 41 4 688 2 42 6 366 8 871 2 608 4 134 2 541 2 880 8 231 2 455 8 881 2 138 2 1065 4 1322 2 1325 2 1239 2 1068 2 620 2 1072 4 625 2 809 2 1332 2 894 2 475 2 153 4 79 2 1248 4 
0 2 1253 4 1080 2 558 2 165 4 247 2 1009 2 564 16 1167 2 1087 26 167 2 3 2 86 2 329 2 168 2 5 4 1016 6 88 6 1261 6 827 2 644 4 251 2 569 2 649 8 919 4 178 2 651 4 747 2 411 2 254 2 832 4 1105 2 1021 2 576 2 502 2 99 2 19 2 1185 2 754 2 1273 2 931 2 1278 4 840 2 101 2 759 4 195 16 423 2 268 4 941 2 664 2 513 2 766 2 272 2 427 4 25 2 586 2 515 2 205 10 1285 2 1118 4 432 2 281 8 674 4 284 2 525 4 1293 2 1206 2 434 6 1295 4 118 2 1299 2 683 2 124 2 687 4 41 4 688 2 42 6 366 10 44 2 871 2 296 2 608 4 134 2 541 2 880 12 231 2 455 8 881 2 138 2 1065 4 1322 2 1325 2 1239 2 1068 2 550 2 620 2 469 2 1072 4 625 4 809 2 149 2 1332 2 894 2 475 2 153 2 79 2 1248 4 
1206 2 231 2 1253 4 118 2 455 2 558 2 165 2 564 4 1087 4 86 2 759 2 5 2 1325 2 423 2 688 2 1239 2 1016 2 1261 6 268 4 366 6 664 2 427 2 644 2 569 2 25 2 586 2 809 2 515 2 894 2 205 6 747 2 1285 2 1118 4 254 2 525 4 
0 2 1253 4 558 2 165 2 564 4 328 2 1167 2 1087 28 167 2 86 2 3 2 5 2 168 2 1016 2 88 6 1261 6 644 2 569 2 251 2 649 6 178 2 747 2 254 2 1102 2 1021 2 502 2 754 2 503 2 101 2 1278 3 348 2 759 2 195 24 423 2 662 2 664 2 513 2 766 2 427 2 272 2 25 2 586 2 515 2 205 6 28 2 1285 2 1118 2 432 2 674 4 281 6 525 4 1293 2 1206 2 434 4 1295 3 362 2 118 2 1299 2 683 2 124 2 687 4 439 3 688 2 1305 2 42 6 366 6 871 2 297 2 707 2 541 2 880 8 231 2 455 2 138 2 1065 4 1322 2 1148 2 1325 2 1239 2 1068 2 620 2 625 3 809 2 894 2 1332 2 475 2 153 4 1248 4 79 2 
952 2 586 2 86 2 
952 2 586 2 86 2 
0 2 1253 4 323 2 813 2 325 2 165 4 736 2 247 2 1009 2 564 16 739 2 1167 2 1087 24 167 2 86 4 168 2 5 2 1016 4 88 6 1261 6 641 2 644 4 251 2 569 2 649 2 919 4 178 2 253 2 651 4 411 2 832 4 1102 2 1105 2 1021 2 97 2 502 2 1182 2 837 2 101 2 1278 2 759 2 195 16 423 2 268 4 198 2 846 2 513 2 426 2 766 2 272 2 427 2 1115 2 586 2 1198 2 205 12 1118 4 432 2 209 2 855 2 674 4 281 2 525 4 285 2 1293 2 118 4 1299 2 683 2 124 2 687 4 41 4 785 2 42 6 366 12 871 4 608 2 541 2 880 2 455 4 881 2 138 2 1065 4 1322 2 1068 2 620 2 1072 4 469 4 809 2 149 4 1332 2 894 2 1244 2 728 4 475 2 153 4 1248 4 79 2 
941 2 426 2 493 2 837 2 203 2 1331 2 739 2 153 2 1087 4 855 2 209 2 195 2 1102 2 374 2 1315 2 1068 2 743 2 
0 2 1253 4 323 2 813 2 325 2 165 4 247 2 1009 2 564 16 1167 2 1087 20 167 2 86 4 5 2 168 2 1016 4 88 6 1261 6 641 2 644 4 251 2 569 2 649 2 919 4 178 2 253 2 651 4 411 2 832 4 1105 2 1021 2 97 4 502 2 1182 2 191 2 101 2 1278 4 759 2 195 14 423 2 268 4 198 2 846 2 513 2 426 2 766 2 272 2 427 2 1115 2 586 2 1198 2 274 2 205 12 1118 4 432 2 855 2 674 4 281 2 525 4 285 2 1293 2 118 4 1299 2 1212 2 683 2 124 2 687 4 41 4 785 2 42 6 366 12 871 4 608 2 541 2 880 2 455 4 881 2 138 2 1065 4 1322 2 1068 2 618 2 620 2 1072 4 469 4 809 2 149 4 1332 2 894 2 728 4 475 2 153 2 1248 4 79 2 242 2 
0 2 1253 4 323 2 813 2 325 2 165 4 247 2 1009 2 564 16 739 2 1167 2 1087 24 167 2 86 4 168 2 5 2 1016 4 88 6 1261 6 641 2 644 4 251 2 569 2 649 2 919 4 178 2 253 2 651 4 411 2 832 4 1102 2 1105 2 1021 2 97 2 502 2 1182 2 837 2 101 2 1278 2 759 2 195 16 423 2 268 4 198 2 846 2 513 2 426 2 766 2 272 2 427 2 1115 2 586 2 1198 2 205 12 1118 4 432 2 209 2 855 2 674 4 281 2 525 4 285 2 1293 2 118 4 1299 2 1212 2 683 2 124 2 687 4 41 4 785 2 42 6 366 12 871 4 1054 2 608 2 541 2 880 2 455 4 881 2 138 2 1065 4 1322 2 1068 2 618 2 620 2 1072 4 469 4 809 2 149 4 1332 2 894 2 1244 1 728 4 475 2 153 4 1248 4 79 2 
1002 6 0 2 161 2 164 2 819 2 632 4 1011 2 1167 2 167 4 821 12 3 2 1015 4 329 2 168 2 640 2 827 4 331 2 491 12 649 14 178 2 179 2 334 16 337 2 651 24 831 2 498 2 16 2 338 3 1181 1 1021 2 502 5 18 16 184 14 19 2 1184 2 1185 2 1025 2 656 2 346 2 1188 2 840 2 658 10 348 2 508 8 510 2 349 2 661 2 841 2 195 30 1029 2 662 2 1031 2 663 2 846 4 513 2 1194 1 514 2 201 16 849 4 355 10 1032 12 1200 2 360 2 674 4 32 2 858 4 31 10 526 2 1205 2 213 2 214 20 1043 4 683 4 216 4 530 2 864 2 686 2 866 2 687 4 38 4 219 12 220 2 1215 4 40 3 41 25 42 15 691 4 532 1 871 2 44 2 368 2 698 16 534 2 875 1 701 2 877 2 707 2 709 6 710 2 541 2 542 2 879 2 880 28 377 10 59 2 883 10 1065 8 1066 4 1236 4 1068 2 550 2 66 4 725 2 387 2 892 3 239 2 1245 2 241 16 79 2 1248 8 82 2 904 14 907 2 1080 2 394 2 909 2 911 2 1084 2 1087 38 1090 2 88 6 400 2 402 2 1092 2 744 4 251 2 406 2 252 4 572 46 1264 12 407 2 920 4 1267 2 410 2 1268 3 748 2 99 2 1273 2 1274 2 1109 2 1108 2 757 4 931 2 1275 2 263 3 1278 19 101 2 758 8 1280 2 269 2 762 4 425 2 272 2 1282 24 771 2 945 4 588 14 946 6 278 2 947 2 432 4 591 2 592 2 1122 2 281 14 951 2 1293 2 434 12 287 2 1295 16 117 6 1299 2 119 6 1302 2 779 2 124 5 127 4 290 2 1304 2 439 2 441 4 293 2 969 2 1308 2 296 2 1132 16 299 4 132 2 1312 14 302 2 301 2 975 1 978 2 1316 2 1141 4 1142 2 981 6 136 12 1143 4 1144 6 1318 2 138 4 615 8 1319 1 616 2 1322 2 1148 2 988 2 145 1 1327 2 467 2 620 2 147 2 625 19 1332 4 473 12 1157 2 474 2 475 2 315 2 997 2 153 2 317 2 155 2 1337 2 158 4 812 2 
880 2 434 2 1184 2 377 2 1295 2 656 2 909 2 1278 2 1087 2 3 2 1029 2 195 2 40 2 355 4 406 2 625 2 649 2 572 6 372 2 748 2 16 2 281 2 1316 2 31 2 
880 2 434 2 1184 2 377 2 1295 2 656 2 909 2 1278 2 1087 2 3 2 1029 2 195 2 40 2 355 4 406 2 625 2 649 2 572 6 372 2 748 2 16 2 281 2 1316 2 31 2 
880 2 434 2 1184 2 377 2 1295 2 656 2 909 2 1278 2 1087 2 3 2 1029 2 195 2 40 2 355 4 406 2 625 2 649 2 572 6 372 2 748 2 16 2 281 2 1316 2 31 2 
1141 2 880 2 1002 6 259 2 480 2 753 4 1187 4 593 2 1005 4 929 2 483 4 263 3 615 2 863 2 597 2 1278 3 758 2 508 2 1087 10 821 4 1215 2 3 2 1029 2 195 4 441 2 762 2 744 2 67 2 849 2 70 4 429 2 625 3 10 3 920 2 518 2 334 5 1268 3 709 4 858 2 1270 2 
1141 2 880 2 1002 6 259 2 480 2 753 4 117 2 1187 4 593 2 1005 4 929 2 483 4 263 2 615 2 863 2 597 2 1278 2 758 2 508 2 1087 10 821 4 1215 2 3 2 1029 2 195 4 441 2 762 2 744 2 67 2 849 2 70 4 429 2 252 2 625 2 10 2 920 2 518 2 334 4 1268 2 704 2 709 4 858 2 1270 2 
1141 2 880 2 1002 6 259 2 480 2 753 4 117 2 1187 4 593 2 1005 4 929 2 483 4 263 2 615 2 863 2 597 2 1278 2 758 2 508 2 1087 10 821 4 1215 2 3 2 1029 2 195 4 441 2 762 2 744 2 67 2 849 2 70 4 429 2 252 2 625 2 10 2 920 2 518 2 334 4 1268 2 704 2 709 4 858 2 1270 2 
1141 2 880 2 1002 6 259 2 480 2 753 4 117 2 1187 4 593 2 1005 4 929 2 483 4 263 2 615 2 863 2 597 2 1278 2 758 2 508 2 1087 10 821 4 1215 2 3 2 1029 2 195 4 441 2 762 2 744 2 67 2 849 2 70 4 429 2 252 2 625 2 10 2 920 2 518 2 334 4 1268 2 704 2 709 4 858 2 1270 2 
1141 2 880 2 1002 6 259 2 480 2 753 4 117 4 1187 4 593 2 1005 4 929 2 483 4 263 2 615 2 863 2 597 2 1278 2 758 2 508 2 1087 10 821 4 1215 2 3 2 1029 2 195 4 441 2 762 2 744 2 67 2 849 2 70 4 429 2 252 4 625 2 10 2 920 2 518 2 334 4 1268 2 704 4 709 4 858 2 1270 2 
1083 2 693 2 46 2 906 2 838 2 663 2 
211 2 184 2 693 2 1035 2 1128 2 802 2 1027 2 
115 2 954 2 613 1 215 2 486 2 1067 2 1087 10 1013 1 1014 2 195 8 689 1 764 2 365 2 8 2 386 2 666 2 1152 2 1131 2 668 2 335 2 1101 2 414 2 703 1 1120 1 672 2 79 2 
117 5 1211 2 119 4 615 6 141 2 599 2 758 6 508 6 1236 2 1087 6 821 12 1088 2 1215 6 195 6 364 2 146 4 762 6 514 2 744 6 331 2 849 2 252 2 920 6 334 16 299 2 53 2 704 2 709 4 156 2 159 2 
311 6 403 2 232 2 1005 2 70 2 808 2 483 2 471 1 358 2 226 2 49 2 166 2 316 2 1087 1 635 4 195 1 963 2 1260 2 
311 6 403 2 232 2 1005 2 70 2 808 4 483 2 358 2 49 2 226 2 166 4 316 4 635 4 963 2 1260 2 
311 10 403 6 232 2 1005 2 70 2 808 8 483 2 471 1 358 2 49 8 226 2 166 8 316 8 1087 1 635 4 195 1 963 2 1260 2 
311 2 232 2 1005 2 70 2 808 2 483 2 358 2 226 2 166 2 316 2 635 2 963 2 1260 2 
683 4 124 4 37 2 219 2 1087 12 290 4 167 4 41 4 42 12 646 2 570 2 1096 2 47 2 293 2 698 2 1132 2 875 1 15 2 975 2 1181 2 502 4 980 1 416 2 138 4 1319 1 1065 6 192 1 510 2 1323 2 195 12 145 1 1194 1 1248 6 812 2 
676 2 245 4 481 2 1210 2 391 2 815 2 36 2 1301 2 683 2 633 2 738 2 634 2 1087 46 128 4 167 2 2 2 824 2 41 38 42 42 170 2 531 2 291 2 1051 2 643 2 646 2 648 2 695 2 491 6 1096 2 293 2 605 2 1178 2 444 2 535 2 877 4 15 2 539 2 55 2 975 4 1181 2 57 2 1232 2 449 4 750 2 98 2 792 2 1060 2 980 2 610 4 544 2 1107 2 453 2 138 2 380 2 62 6 1065 20 799 2 510 2 886 2 1323 2 195 44 938 6 104 2 888 2 761 2 889 2 512 4 273 2 1196 2 428 2 851 2 772 2 72 2 74 2 944 2 895 2 520 2 589 2 1244 2 204 2 76 2 277 2 628 2 1248 20 210 2 1203 2 30 2 1249 2 732 4 812 2 
1060 2 676 2 980 2 138 2 62 4 683 2 1065 8 124 4 37 2 510 2 290 4 1087 18 128 2 167 2 1323 2 824 2 195 18 104 2 41 14 42 18 43 2 512 2 694 2 1196 2 646 2 428 2 648 2 1096 2 47 2 293 2 851 2 874 2 830 2 15 2 521 2 975 2 1248 8 1232 2 449 2 502 4 812 2 
676 2 33 2 481 2 595 2 683 2 124 10 1125 4 634 2 1086 2 128 6 1087 28 219 10 167 2 824 2 41 14 42 38 531 4 291 2 646 2 570 2 1096 2 695 2 648 2 293 2 698 2 1132 10 1309 2 875 2 922 2 15 2 975 2 449 6 750 4 502 10 792 4 980 2 416 2 930 2 138 2 62 8 1319 6 1065 14 21 4 510 2 799 4 1147 2 1323 2 195 26 938 6 145 2 465 2 889 4 512 6 1194 2 428 2 1244 2 204 2 628 2 1248 14 1249 4 30 2 812 2 
624 2 
972 1 108 1 34 1 1228 1 1258 1 330 1 
972 1 108 1 34 1 1228 1 1258 1 330 1 
972 1 108 1 34 1 1228 1 1258 1 330 1 
972 1 108 1 34 1 1228 1 1258 1 330 1 
972 1 108 1 34 1 1228 1 1258 1 330 1 
972 1 108 1 34 1 1228 1 1258 1 330 1 
972 1 108 1 34 1 1228 1 1258 1 330 1 
972 1 108 1 34 1 1228 1 1258 1 330 1 
972 1 108 1 34 1 1228 1 1258 1 330 1 
972 1 108 1 34 1 1228 1 1258 1 330 1 
972 1 108 1 34 1 1228 1 1258 1 330 1 
972 1 108 1 34 1 1228 1 1258 1 330 1 
972 1 108 1 34 1 1228 1 1258 1 330 1 
972 1 108 1 34 1 1228 1 1258 1 330 1 
972 1 108 1 34 1 1228 1 1258 1 330 1 
972 1 108 1 34 1 1228 1 1258 1 330 1 
972 1 108 1 34 1 1228 1 1258 1 330 1 
972 1 108 1 34 1 1228 1 1258 1 330 1 
972 1 108 1 34 1 1228 1 1258 1 330 1 
972 1 108 1 34 1 1228 1 1258 1 330 1 
972 1 108 1 34 1 1228 1 1258 1 330 1 
972 1 108 1 34 1 1228 1 1258 1 330 1 
972 1 108 1 34 1 1228 1 1258 1 330 1 
972 1 108 1 34 1 1228 1 1258 1 330 1 
972 1 108 1 34 1 1228 1 1258 1 330 1 
972 1 108 1 34 1 1228 1 1258 1 330 1 
972 1 108 1 34 1 1228 1 1258 1 330 1 
972 1 108 1 34 1 1228 1 1258 1 330 1 
972 1 108 1 34 1 1228 1 1258 1 330 1 
972 1 108 1 34 1 1228 1 1258 1 330 1 
972 1 108 1 34 1 1228 1 1258 1 330 1 
972 1 108 1 34 1 1228 1 1258 1 330 1 
972 1 108 1 34 1 1228 1 1258 1 330 1 
972 1 108 1 34 1 1228 1 1258 1 330 1 
972 1 108 1 34 1 1228 1 1258 1 330 1 
972 1 108 1 34 1 1228 1 1258 1 330 1 
972 1 108 1 34 1 1228 1 1258 1 330 1 
972 1 108 1 34 1 1228 1 1258 1 330 1 
972 1 108 1 34 1 1228 1 1258 1 330 1 
972 1 108 1 34 1 1228 1 1258 1 330 1 
972 1 108 1 34 1 1228 1 1258 1 330 1 
972 1 108 1 34 1 1228 1 1258 1 330 1 
972 1 108 1 34 1 1228 1 1258 1 330 1 
972 1 108 1 34 1 1228 1 1258 1 330 1 

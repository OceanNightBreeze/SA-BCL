#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V ERROR utilMDE.Options$ArgException 898 
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V ERROR java.lang.NullPointerException (149,184) (1266,1272) (1266,1272) 
daikon.test.diff.DiffTester:testEmptyPpts1()V ERROR java.lang.NullPointerException (149,184) (1266,1272) (1266,1272) 
daikon.test.diff.DiffTester:testPpts1Empty()V ERROR java.lang.NullPointerException (149,184) (1266,1272) (1266,1272) 
daikon.test.diff.DiffTester:testPpts1Ppts1()V ERROR java.lang.NullPointerException (149,184) (1266,1272) (1266,1272) 
daikon.test.diff.DiffTester:testPpts1Ppts2()V ERROR java.lang.NullPointerException (149,184) (1266,1272) (1266,1272) 
daikon.test.diff.DiffTester:testPpts1Ppts3()V ERROR java.lang.NullPointerException (149,184) (1266,1272) (1266,1272) 
daikon.test.diff.DiffTester:testInvs1Empty()V ERROR java.lang.NullPointerException (149,184) (1266,1272) (1266,1272) 
daikon.test.diff.DiffTester:testInvs1Invs1()V ERROR java.lang.NullPointerException (149,184) (1266,1272) (1266,1272) 
daikon.test.diff.DiffTester:testInvs1Invs2()V ERROR java.lang.NullPointerException (149,184) (1266,1272) (1266,1272) 
daikon.test.diff.DiffTester:testInvs1Invs3()V ERROR java.lang.NullPointerException (149,184) (1266,1272) (1266,1272) 
daikon.test.diff.DiffTester:testNullaryInvs()V ERROR java.lang.NullPointerException (149,184) (1266,1272) (1266,1272) 
daikon.test.diff.DiffTester:testNonModulus()V ERROR java.lang.NullPointerException (149,184) (1266,1272) (1266,1272) 
daikon.test.diff.DiffTester:testConditionalPptsFalse()V ERROR java.lang.NullPointerException (149,184) (1266,1272) (1266,1272) 
daikon.test.diff.DiffTester:testConditionalPptsTrue()V ERROR java.lang.NullPointerException (149,184) (1266,1272) (1266,1272) 
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR utilMDE.Assert$AssertionException (318,752) (318,752) 630 1071 44 
daikon.test.VarInfoNameTest:testSubscript()V ERROR utilMDE.Assert$AssertionException (318,752) (318,752) 706 630 1071 44 
daikon.test.VarInfoNameTest:testParse()V ERROR utilMDE.Assert$AssertionException (318,752) (318,752) 630 1071 44 
daikon.test.VarInfoNameTest:testJML()V ERROR utilMDE.Assert$AssertionException (318,752) (318,752) 706 630 1071 44 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
jtb.JavaParser:jj_3R_53()Z
daikon.inv.binary.twoSequence.SubSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_esc()Ljava.lang.String;
daikon.Quant:subsetOf([D[F)Z
utilMDE.WeakHasherMap:size()I
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.EltwiseIntLessThan:format_ioa()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.suppress.NISuppressee:NISuppressee(Ljava.lang.Class;I)V
daikon.Quant:eltsGtIndex([I)Z
daikon.VarInfo:isPointer()Z
daikon.Quantify.IOAQuantification:getClosingExp()Ljava.lang.String;
daikon.Quant:eltwiseLT([I)Z
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.inv.unary.string.OneOfString:OneOfString(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.NoDuplicates:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:enabled()Z
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_esc()Ljava.lang.String;
daikon.inv.binary.twoString.StringEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.SubSequence:SubSequence(Ldaikon.PptSlice;)V
daikon.VarInfo:isDerived()Z
daikon.PptSlice3:arity()I
daikon.inv.binary.twoSequence.PairwiseIntLessThan:enabled()Z
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.Ppt:find_var_by_name(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.binary.BinaryInvariant:is_symmetric()Z
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.inv.unary.sequence.EltUpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.Quantify.IOAQuantification:getVarIndexedString(I)Ljava.lang.String;
daikon.Quantify.SimplifyQuantification:get_arr_vars_indexed(I)Ljava.lang.String;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
utilMDE.WeakIdentityHashMap:indexFor(II)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.NonZero:enabled()Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltNonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.SubSequence:format_simplify_explicit()Ljava.lang.String;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.Quantify.SimplifyQuantification:get_index(I)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.Quant:lexEqual([I[I)Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:missing_numbers([I)[I
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.string.OneOfString:enabled()Z
daikon.inv.binary.twoScalar.NumericInt.Divides:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:add_modified([Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_simplify()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:enabled()Z
daikon.Quantify.ESCQuantification:get_arr_vars_indexed(I)Ljava.lang.String;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.inv.binary.twoScalar.IntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceString.MemberString:check_modified([Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.ValueTuple:isMissing(I)Z
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:eltsEqualIndex([I)Z
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
utilMDE.ArraysMDE:fn_inverse([II)[I
jtb.JavaCharStream:BeginToken()C
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.inv.unary.sequence.NoDuplicates:enabled()Z
utilMDE.ArraysMDE:sum([[I)I
daikon.inv.unary.sequence.SeqIndexIntNonEqual:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.Member:enabled()Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.suppress.NISuppression:NISuppression(Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.inv.unary.string.OneOfString:format_esc()Ljava.lang.String;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.inv.Invariant:prob_or(DD)D
daikon.inv.binary.twoString.StringEqual:get_proto()Ldaikon.inv.binary.twoString.StringEqual;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceString.MemberString:MemberString(Ldaikon.PptSlice;)V
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.string.OneOfString:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:enabled()Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.inv.ValueSet.ValueSetString:ValueSetString(I)V
utilMDE.ArraysMDE:sum([D)D
daikon.Quant:memberOf(I[I)Z
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SequenceScalar:sclvar()Ldaikon.VarInfo;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.ModBitTracker:num_vars()I
daikon.inv.binary.twoString.StringEqual:StringEqual(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:gte(DD)Z
daikon.inv.unary.sequence.NoDuplicates:get_proto()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:noDups([I)Z
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.inv.unary.sequence.EltNonZero:format_esc()Ljava.lang.String;
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_esc()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoSequence.SubSequence:get_proto()Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
utilMDE.ArraysMDE:sum([[D)D
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.ValueTuple:tuplemodHasModified(I)Z
utilMDE.MathMDE:gcd([I)I
daikon.Quantify.QuantFlags:element_wise()Ljava.util.EnumSet;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.inv.unary.sequence.EltOneOf:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariants:Invariants()V
jtb.JavaCharStream:readChar()C
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_esc()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:PairwiseIntGreaterEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:element_range([I)I
daikon.inv.unary.sequence.EltUpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_esc()Ljava.lang.String;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.Quant:subsetOf([D[D)Z
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.inv.unary.sequence.EltOneOf:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.stringsequence.EltOneOfString:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_ioa()Ljava.lang.String;
jtb.JavaParser:jj_3R_47()Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_simplify()Ljava.lang.String;
utilMDE.UtilMDE:escapeNonASCII(C)Ljava.lang.String;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.sequenceScalar.SeqIntEqual:SeqIntEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:PairwiseIntLessThan(Ldaikon.PptSlice;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.Quant:subsetOf([J[J)Z
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.Quantify.ESCQuantification:ESCQuantification(Ljava.util.EnumSet;[Ldaikon.VarInfo;)V
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.Member:format_simplify()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:sum([I)I
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.MathMDE:gcd(II)I
daikon.inv.binary.sequenceScalar.SequenceScalar:seq_index()I
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:find_bi_linear(JJJJ[D)Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_esc()Ljava.lang.String;
daikon.inv.ternary.threeScalar.ThreeScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.inv.unary.sequence.EltNonZero:format_ioa()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:enabled()Z
daikon.Quantify.IOAQuantification:getMembershipRestriction(I)Ljava.lang.String;
daikon.Quant:pairwiseEqual([I[I)Z
daikon.Quant:pairwiseSquare([I[I)Z
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eltsLT([II)Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:gt(II)Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.inv.binary.sequenceScalar.SeqIntEqual:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
utilMDE.Intern:numIntArrays()I
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eltwiseGT([I)Z
daikon.ModBitTracker:split(I)I
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
utilMDE.FuzzyFloat:lt(DD)Z
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:is_direct_non_slice_array()Z
daikon.VarInfo:simplify_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SequenceScalar:scl_index()I
daikon.VarInfo:get_enclosing_var()Ldaikon.VarInfo;
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.inv.unary.sequence.EltUpperBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan(Ldaikon.PptSlice;)V
daikon.Quant:pairwiseDivides([I[I)Z
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.Quant:isReverse([I[I)Z
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_esc()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:maxsep_triples([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)D
daikon.inv.unary.string.OneOfString:sort_rep()V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.RootNode:RootNode()V
utilMDE.MathMDE:pow(II)I
daikon.ModBitTracker:num_samples()I
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_daikon()Ljava.lang.String;
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
jtb.JavaParser:jj_ntk()I
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.diff.Node:Node()V
utilMDE.MathMDE:negate(I)I
daikon.inv.ternary.threeScalar.LinearTernary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quantify.QuantifyReturn:QuantifyReturn(Ldaikon.VarInfo;)V
daikon.VarInfo:name()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_esc()Ljava.lang.String;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quantify.QuantFlags:adjacent()Ljava.util.EnumSet;
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:passes()Z
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.Quantify.ESCQuantification:bld_quant(Ldaikon.VarInfo;Ldaikon.Quantify.Term;)Ljava.lang.String;
daikon.ValueTuple:size()I
daikon.inv.unary.string.SingleString:SingleString(Ldaikon.PptSlice;)V
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.VarInfo:is_typeof()Z
daikon.suppress.NISuppressionSet:NISuppressionSet([Ldaikon.suppress.NISuppression;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:sorted([I)Z
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SequenceScalar:SequenceScalar(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:SeqIntGreaterEqual(Ldaikon.PptSlice;)V
utilMDE.Assert:assertTrue(Z)V
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.LimitedSizeIntSet:add(I)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:maxsep_doubles([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)D
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.TwoSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_ioa()Ljava.lang.String;
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.Member:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.Quantify.Length:esc_name()Ljava.lang.String;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.inv.Invariant:format()Ljava.lang.String;
utilMDE.FuzzyFloat:lte(DD)Z
daikon.Quant:subsetOf([I[I)Z
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.Member:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceString.MemberString:enabled()Z
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfo:apply_subscript(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.ArraysMDE:indexOf([J[J)I
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
jtb.syntaxtree.NodeOptional:NodeOptional()V
jtb.JavaParser:jj_3R_49()Z
utilMDE.ArraysMDE:noDuplicates([I)Z
utilMDE.OrderedPairIterator:setnext2()V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_esc()Ljava.lang.String;
daikon.suppress.NISuppressee:swap()Ldaikon.suppress.NISuppressee;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.PptTopLevel:name()Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap; | RETURN | 20923 | return null
daikon.Quantify.Length:simplify_name()Ljava.lang.String;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.inv.unary.sequence.EltUpperBound:format_simplify()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:enabled()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoSequence.PairwiseIntEqual:enabled()Z
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
daikon.Ppt:Ppt()V
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.inv.unary.stringsequence.EltOneOfString:is_type()Z
daikon.Ppt:indexOf(Ljava.lang.String;)I
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:enabled()Z
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.sequence.EltOneOf:EltOneOf(Ldaikon.PptSlice;)V
daikon.inv.unary.stringsequence.EltOneOfString:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoString.TwoString:TwoString(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:set_bi_linear(JJJJ)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltsGT([II)Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual()V
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarComparabilityNone:elementType()Ldaikon.VarComparability;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_simplify()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.Quant:eltwiseGTE([I)Z
daikon.inv.binary.sequenceString.SequenceString:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfo:get_upper_bound()Ldaikon.Quantify.Term;
daikon.Quant:eltsGTE([II)Z
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.inv.binary.sequenceString.SequenceString:SequenceString(Ldaikon.PptSlice;)V
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.inv.unary.scalar.NonModulus:updateResults()V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.inv.binary.sequenceString.SequenceString:scl_index()I
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName; | ASSIGN | 100680 | = null
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_daikon()Ljava.lang.String;
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.inv.binary.sequenceString.MemberString:format_daikon()Ljava.lang.String;
daikon.inv.unary.string.OneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarComparabilityNone:indexType(I)Ldaikon.VarComparability;
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.Quant:memberOf(F[F)Z
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
utilMDE.Intern:intern([J)[J
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.Quantify.QuantFlags:distinct()Ljava.util.EnumSet;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:enabled()Z
daikon.inv.unary.string.SingleString:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.ModBitTracker:num_sets()I
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:enabled()Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.inv.unary.sequence.EltOneOf:is_boolean()Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:format_esc()Ljava.lang.String;
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.inv.unary.sequence.EltNonZero:enabled()Z
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.ArraysMDE:concat([I[I)[I
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.VarInfo:esc_name(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eq(JJ)Z
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
jtb.JavaParser:jj_3_16()Z
daikon.VarInfo:get_array_var()Ldaikon.VarInfo;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
utilMDE.ArraysMDE:indexOf([II)I
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.sequenceString.MemberString:format_ioa()Ljava.lang.String;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.inv.binary.twoSequence.SubSequence:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:lexLTE([I[I)Z
jtb.JavaParser:jj_scan_token(I)Z
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn; | ASSIGN | 107780 | = null
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.inv.unary.sequence.EltOneOf:sort_rep()V
daikon.Quantify.FreeVar:simplify_name()Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:is_pointer()Z
daikon.inv.Invariant:getConfidence()D
daikon.inv.ternary.threeScalar.LinearTernaryCore:try_points_linear(DDD)Z
daikon.PptTopLevel.CondIterator:hasNext()Z
utilMDE.Intern:intern([D)[D
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan()V
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:lexGTE([I[I)Z
daikon.Quant:pairwiseGTE([I[I)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_esc()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.Reverse:format_simplify()Ljava.lang.String;
jtb.ParseException:getMessage()Ljava.lang.String;
daikon.Debug:logOn()Z
daikon.inv.unary.stringsequence.EltOneOfString:format_ioa()Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
utilMDE.ArraysMDE:subarray([JII)[J
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.ThreeScalar:var2()Ldaikon.VarInfo;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.binary.sequenceString.SequenceString:sclvar()Ldaikon.VarInfo;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:SeqIntLessEqual(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:SeqIntGreaterThan(Ldaikon.PptSlice;)V
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:wouldChange(J)Z
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_daikon()Ljava.lang.String;
jtb.JavaParser:jj_2_1(I)Z
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.LinearBinary:add_modified(JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.VarInfo:relate_var()V
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.LimitedSizeIntSet:size()I
utilMDE.FuzzyFloat:eq(DD)Z
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.inv.Invariant:justified()Z
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_ioa()Ljava.lang.String;
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quantify.Term:name_with_offset(Ljava.lang.String;I)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:format_simplify()Ljava.lang.String;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.VarComparabilityNone:comparable(Ldaikon.VarComparabilityNone;Ldaikon.VarComparabilityNone;)Z
jtb.JavaParser:jj_3R_50()Z
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.ProglangType:isScalar()Z
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.ProglangType:isFloat()Z
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:eltsGteIndex([I)Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakHasherMap:processQueue()V
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;Ldaikon.VarInfo;)V
utilMDE.MathMDE:pow_fast(II)I
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:get_proto()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.inv.unary.stringsequence.EltOneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:union([I[I)[I
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V
daikon.inv.unary.sequence.EltOneOf:format_ioa()Ljava.lang.String;
daikon.Quant:lt(II)Z
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.inv.binary.sequenceString.MemberString:get_proto()Ldaikon.inv.Invariant;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.inv.unary.stringsequence.EltOneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_bi_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_esc()Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:format_daikon()Ljava.lang.String;
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.inv.binary.twoString.StringEqual:enabled()Z
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.Quant:slice([III)[I
daikon.inv.binary.sequenceString.MemberString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 10199 | = null
daikon.Quant:pairwiseGT([I[I)Z
daikon.Quantify.Term:esc_name()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.inv.binary.twoSequence.Reverse:Reverse(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.suppress.NISuppressionSet:swap()Ldaikon.suppress.NISuppressionSet;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.inv.ternary.threeScalar.LinearTernary:enabled()Z
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.Quant:eltsLTE([II)Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.Quant:pairwiseLT([I[I)Z
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.inv.ternary.threeScalar.LinearTernary:add_modified(JJJI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.Quantify.IOAQuantification:getQuantifierExp()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.Member:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_esc()Ljava.lang.String;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.Quant:pairwiseLTE([I[I)Z
daikon.Quant:subsetOf([B[I)Z
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.Options.ArgException:ArgException(Ljava.lang.String;)V
daikon.inv.binary.twoSequence.TwoSequence:var1()Ldaikon.VarInfo;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.ternary.threeScalar.ThreeScalar:var1()Ldaikon.VarInfo;
daikon.Quant:memberOf(J[J)Z
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_simplify()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quantify.IOAQuantification:IOAQuantification([Ldaikon.VarInfo;)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:enabled()Z
daikon.inv.binary.twoSequence.SubSequence:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_ioa()Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.inv.binary.sequenceString.MemberString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:subarray([III)[I
daikon.Quantify.Constant:name()Ljava.lang.String;
jtb.JavaParser:jj_3R_48()Z
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.ProglangType:baseIsString()Z
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_daikon()Ljava.lang.String;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.ProglangType:base()Ljava.lang.String;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.inv.unary.sequence.EltOneOf:enabled()Z
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:equals(JJJ)Z
jtb.JavaCharStream:getEndColumn()I
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.ternary.threeScalar.LinearTernaryCore:linearIntervention([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)V
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.string.OneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptSlice2:arity()I
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.inv.binary.twoScalar.TwoScalar:get_swap()Z
daikon.inv.binary.sequenceScalar.Member:format_esc()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntEqual:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName:hashCode()I
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoSequence.SubSequence:enabled()Z
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.Quant:memberOf(S[S)Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
utilMDE.Intern:internSubsequence([JII)[J
daikon.inv.binary.twoString.StringEqual:add_modified(Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:PairwiseIntEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
jtb.JavaParser:generateParseException()Ljtb.ParseException;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:intern([I)[I
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_simplify(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.Quant:eq(FF)Z
daikon.inv.unary.sequence.EltNonZero:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
jtb.JavaParser:jj_3R_52()Z
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.unary.sequence.EltNonZero:format_daikon()Ljava.lang.String;
daikon.inv.unary.stringsequence.SingleStringSequence:var()Ldaikon.VarInfo;
daikon.Quant:setDiff([I[I)[I
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.inv.unary.sequence.EltUpperBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.Quant:intersection([I[I)[I
daikon.Quant:lexNotEqual([I[I)Z
utilMDE.ArraysMDE:indexOf([JJ)I
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
jtb.ParseException:ParseException(Ljava.lang.String;)V
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:add_modified(JJI)Ldaikon.inv.InvariantStatus;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.string.OneOfString:format_daikon()Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.ProglangType:isArray()Z
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.diff.InvMap:InvMap()V
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.inv.Invariant:simplify_format_string(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:format_esc()Ljava.lang.String;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quantify.IOAQuantification:getFreeVarName(I)Ljava.lang.String;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
jtb.Token:newToken(I)Ljtb.Token;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfo:has_typeof()Z
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceString.MemberString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:new_ppt()V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaCharStream:ReadByte()C
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_simplify()Ljava.lang.String;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.inv.unary.stringsequence.EltOneOfString:sort_rep()V
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:min([I)I
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.Quantify:get_flags(Z)Ljava.util.EnumSet;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.inv.ternary.threeScalar.LinearTernary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.NoDuplicates:format_simplify()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice0:arity()I
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.VarInfo:get_simplify_free_index([Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3_1()Z | CONDITION | 171435 | if (x) -> if (!x)
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.Quant:eltsLteIndex([I)Z
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
daikon.inv.unary.string.OneOfString:format_ioa()Ljava.lang.String;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.MathMDE:modulus([I)[I
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.inv.unary.string.OneOfString:is_type()Z
daikon.Quantify.Term:simplify_name()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.stringsequence.EltOneOfString:EltOneOfString(Ldaikon.PptSlice;)V
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoString.TwoString:var1()Ldaikon.VarInfo;
daikon.inv.binary.sequenceScalar.SequenceScalar:seq_first()Z
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.inv.binary.sequenceString.SequenceString:seqvar()Ldaikon.VarInfo;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quantify.ESCQuantification:get_quantification()Ljava.lang.String;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.Quantify:quantify([Ldaikon.VarInfo;)[Ldaikon.Quantify.QuantifyReturn;
daikon.ProglangType:baseIsScalar()Z
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Quant:concat([I[I)[I
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.binary.sequenceScalar.SeqIntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:eq(II)Z
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.inv.binary.twoSequence.TwoSequence:TwoSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
jtb.JavaCharStream:getBeginColumn()I
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.inv.binary.twoSequence.Reverse:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.PptSlice3:PptSlice3(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_simplify()Ljava.lang.String;
daikon.inv.unary.string.SingleString:var()Ldaikon.VarInfo;
daikon.inv.Invariant:prob_and(DD)D
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.VarInfo:jml_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_daikon()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String; | CONDITION | 14830 | if (x) -> if (!x)
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_2_16(I)Z
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.inv.unary.stringsequence.EltOneOfString:runValue([Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.inv.binary.sequenceString.SequenceString:seq_first()Z
daikon.VarInfo:esc_name()Ljava.lang.String;
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.inv.binary.sequenceScalar.SeqIntEqual:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltwiseNotEqual([I)Z
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:format_daikon()Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.inv.binary.twoScalar.NumericInt.Divides:Divides(Ldaikon.PptSlice;Z)V
daikon.Quant:eltwiseEqual([I)Z
daikon.VarInfo:simplifyNameAndBounds()[Ljava.lang.String;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoSequence.Reverse:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:get_proto()Ldaikon.inv.Invariant;
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:EltwiseIntLessThan(Ldaikon.PptSlice;)V
utilMDE.MathMDE:gcd_differences([I)I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:toString()Ljava.lang.String;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.string.OneOfString:add_modified(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.inv.unary.sequence.EltOneOf:is_hashcode()Z
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quantify.SimplifyQuantification:get_closer()Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.string.OneOfString:format_simplify()Ljava.lang.String;
daikon.inv.unary.string.OneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_daikon()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_simplify()Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([I[I)I
jtb.JavaParser:jj_3R_51()Z
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntEqual:enabled()Z
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE:gcd(JJ)J
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.Quant:eltsEqual([II)Z
daikon.inv.binary.sequenceString.MemberString:format_esc()Ljava.lang.String;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.inv.Invariant:logDetail()Z
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.suppress.NISuppressee:NISuppressee(Ljava.lang.Class;Z)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
jtb.JavaCharStream:getBeginLine()I
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.ProglangType:isString()Z
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_daikon()Ljava.lang.String;
utilMDE.Stopwatch:Stopwatch(Z)V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.Quant:gte(II)Z
daikon.VarComparabilityImplicit:alwaysComparable()Z
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
utilMDE.ArraysMDE:isSubarray([J[JI)Z
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:sameLength([I[I)Z
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_simplify()Ljava.lang.String;
daikon.inv.binary.sequenceString.SequenceString:seq_index()I
daikon.ProglangType:dimensions()I
daikon.inv.binary.twoSequence.PairwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.stringsequence.EltOneOfString:subarray_rep()Ljava.lang.String;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoString.StringEqual:check_modified(Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:enabled()Z
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:PairwiseIntLessEqual(Ldaikon.PptSlice;)V
utilMDE.OrderedPairIterator:hasNext()Z
daikon.inv.unary.scalar.Positive:enabled()Z
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_daikon()Ljava.lang.String;
daikon.suppress.NISuppression:NISuppression(Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:name()Ljava.lang.String;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.inv.unary.sequence.NoDuplicates:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SequenceScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.Quant:eltsLtIndex([I)Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.VarInfo:get_base_array()Ldaikon.VarInfo;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.inv.binary.twoSequence.Reverse:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ModBitTracker:ModBitTracker(I)V
utilMDE.UtilMDE:escapeNonASCII(Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:mod_positive(JJ)J
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.ThreeScalar:var3()Ldaikon.VarInfo;
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfo:isPrestate()Z
daikon.Quantify.Constant:Constant(I)V
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.Quantify.IOAQuantification:getFreeVar(I)Ldaikon.Quantify.Term;
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.sequenceScalar.Member:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:lte(II)Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
utilMDE.FuzzyFloat:gt(DD)Z
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.VarInfo:get_all_simple_names()Ljava.util.List;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.Quantify.QuantFlags:include_index()Ljava.util.EnumSet;
daikon.inv.ternary.TernaryInvariant:TernaryInvariant(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.inv.unary.sequence.EltOneOf:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
utilMDE.ArraysMDE:max([I)I
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_simplify()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.PairwiseIntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.sequenceScalar.Member:format_daikon()Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaCharStream:FillBuff()V
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.ProglangType:baseIsFloat()Z
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_ioa()Ljava.lang.String;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_simplify()Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfo:simplify_quantify(Ljava.util.EnumSet;[Ldaikon.VarInfo;)[Ljava.lang.String;
jtb.JavaCharStream:backup(I)V
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.inv.ternary.threeScalar.LinearTernary:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.NoDuplicates:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltUpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_ioa()Ljava.lang.String;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.EltOneOf:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoSequence.Reverse:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.VarInfoAux:hashCode()I
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:PairwiseIntGreaterThan(Ldaikon.PptSlice;)V
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.PptTopLevel:is_constant(Ldaikon.VarInfo;)Z
daikon.Quant:ne(II)Z
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.Quant:subsetOf([F[F)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:format_simplify()Ljava.lang.String;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.Member:Member(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.Reverse:enabled()Z
daikon.inv.unary.sequence.NoDuplicates:format_ioa()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernary:LinearTernary(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_ioa()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.VarInfo:isIOAArray()Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.suppress.NISuppressor:swap()Ldaikon.suppress.NISuppressor;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.inv.binary.sequenceScalar.SequenceScalar:seqvar()Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:ne(DD)Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore:separation(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)D
daikon.ProglangType:isPseudoArray()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_simplify(Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_esc()Ljava.lang.String;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.binary.twoScalar.NumericInt.Divides:get_proto(Z)Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.Reverse:format_simplify_explicit()Ljava.lang.String;
daikon.inv.unary.stringsequence.SingleStringSequence:SingleStringSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.inv.ValueSet:ValueSet(I)V
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.SubSequence:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.inv.unary.sequence.EltUpperBound:EltUpperBound(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:maxsep_point([J[J)[I
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.Quant:memberOf(D[F)Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Options.OptionInfo:argument_required()Z
daikon.Quantify.Length:Length(Ldaikon.VarInfo;I)V
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:isPointerFileRep()Z
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:planarIntervention([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.stringsequence.EltOneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.VarInfo:isDerivedSubSequenceOf()Ldaikon.VarInfo;
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.inv.unary.sequence.EltOneOf:subarray_rep()Ljava.lang.String;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltLowerBound:format_simplify()Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_simplify()Ljava.lang.String;
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.test.InvariantFormatTester:execute()Z
daikon.inv.binary.sequenceScalar.SeqIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant:prob_and(DDD)D
daikon.inv.Invariant:is_false()Z
daikon.inv.binary.twoSequence.Reverse:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ValueTuple:isMissingFlow(I)Z
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.ProglangType:isIntegral()Z
daikon.Quant:lexGT([I[I)Z
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.inv.binary.twoScalar.IntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.Member:format_ioa()Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:eltsNotEqual([II)Z
utilMDE.OrderedPairIterator:setnext1()V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.inv.binary.twoSequence.SeqSeqIntEqual:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.inv.unary.sequence.EltOneOf:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.inv.binary.twoSequence.SubSequence:format_daikon()Ljava.lang.String;
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.inv.binary.twoSequence.SeqSeqIntEqual:SeqSeqIntEqual(Ldaikon.PptSlice;Z)V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.inv.unary.sequence.EltUpperBound:format_esc()Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.inv.binary.sequenceScalar.Member:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eltwiseLTE([I)Z
daikon.VarInfo:old_var_names(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.Quantify.SimplifyQuantification:SimplifyQuantification(Ljava.util.EnumSet;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eq(DD)Z
daikon.PptSlice1:arity()I
daikon.inv.unary.sequence.EltwiseIntComparison:EltwiseIntComparison(Ldaikon.PptSlice;)V
daikon.inv.binary.twoString.TwoString:valid_types([Ldaikon.VarInfo;)Z
daikon.Quant:lexLT([I[I)Z
daikon.inv.unary.string.OneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoSequence.SubSequence:format_simplify()Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:enabled()Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.diff.Node:Node(LutilMDE.Pair;)V
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:check_modified([JJI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.inv.binary.twoString.StringEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Invariant:logOn()Z
daikon.inv.unary.stringsequence.SingleStringSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.EltOneOf:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:subsetOf([F[D)Z
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.inv.unary.stringsequence.EltOneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:enabled()Z
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.inv.ternary.threeScalar.LinearTernary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_ioa()Ljava.lang.String;
daikon.inv.unary.string.OneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.ValueSet.ValueSetStringArray:ValueSetStringArray(I)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.LinearBinaryCore:maxsep_indices()[I
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.inv.binary.twoString.StringEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quantify.Term:ioa_name()Ljava.lang.String;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.Debug:logDetail()Z
daikon.inv.unary.sequence.NoDuplicates:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:get_lower_bound()Ldaikon.Quantify.Term;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
jtb.JavaCharStream:getEndLine()I
daikon.Quantify.SimplifyQuantification:get_quantification()Ljava.lang.String;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.Quant:memberOf(F[D)Z
utilMDE.UtilMDE.NullableStringComparator:compare(Ljava.lang.String;Ljava.lang.String;)I
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.ProglangType:elementIsIntegral()Z
daikon.inv.binary.twoScalar.NumericInt.Divides:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.inv.unary.sequence.EltwiseIntLessThan:format_daikon()Ljava.lang.String;
daikon.Quantify.FreeVar:name()Ljava.lang.String;
daikon.inv.binary.twoString.TwoString:var2()Ldaikon.VarInfo;
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.PptSlice0:initInvariantsSeen()V
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfo:get_base_array_hashcode()Ldaikon.VarInfo;
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.VarInfo:domainTypeIOA()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceString.MemberString:add_modified([Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
utilMDE.Intern:internSubsequence([III)[I
daikon.inv.ternary.threeScalar.ThreeScalar:ThreeScalar(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_ioa()Ljava.lang.String;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.inv.unary.sequence.EltNonZero:EltNonZero(Ldaikon.PptSlice;)V
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.inv.unary.sequence.EltOneOf:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.Quant:setEqual([I[I)Z
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.test.TestQuant:removeAdjacentDups([I)[I
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.inv.binary.twoSequence.SubSequence:format_ioa()Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:NoDuplicates(Ldaikon.PptSlice;)V
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.Quant:subsetOf([S[S)Z
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_daikon()Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:enabled()Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:format_ioa()Ljava.lang.String;
daikon.VarInfo:isIOASet()Z
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoSequence.TwoSequence:var2()Ldaikon.VarInfo;
utilMDE.FuzzyFloat:set_rel_diff(D)V
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltUpperBound:format_daikon()Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.inv.binary.twoSequence.Reverse:format_daikon()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:hashCode()I
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
utilMDE.MathMDE:sign(I)I
utilMDE.MathMDE:mod_positive(II)I
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_ioa()Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:add_modified([JJI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:min_max([I)[I
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.suppress.NISuppression:NISuppression([Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_daikon()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.Member:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_ioa()Ljava.lang.String;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:SeqIntLessThan(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.Reverse:format_ioa()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_ioa()Ljava.lang.String;
daikon.inv.unary.string.OneOfString:runValue(Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.ProglangType:baseIsIntegral()Z
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.inv.ternary.threeScalar.LinearTernaryCore:add_modified(JJJI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
679 2 558 4 1347 2 322 2 752 2 1123 2 350 2 318 2 981 2 
507 2 887 2 291 2 680 2 1155 2 1187 6 223 2 1244 6 360 6 50 2 1019 2 
635 2 1152 2 45 6 1154 4 106 6 318 2 208 2 377 6 1361 2 752 2 181 2 859 6 551 4 
958 4 521 2 251 2 318 6 415 16 389 10 1331 4 601 10 1159 4 715 2 366 16 743 6 510 10 1003 2 1378 8 453 29 1032 10 583 10 721 8 845 16 435 6 724 26 727 2 612 12 1401 2 1362 2 752 6 1404 8 683 4 1085 8 
509 6 651 4 
862 2 
593 2 130 2 461 2 359 2 316 2 187 2 318 4 89 4 875 2 549 2 93 2 368 2 141 2 194 2 1313 2 967 2 145 2 699 2 1401 2 970 2 701 2 752 4 1064 2 563 2 104 2 22 2 1113 2 250 2 160 2 483 4 711 4 810 2 764 2 1413 4 814 2 350 2 1163 2 118 2 120 2 309 2 311 2 1173 2 313 2 1081 2 
500 4 833 4 318 4 1370 8 389 16 189 4 415 32 601 16 1331 2 366 32 917 4 1001 6 743 4 510 6 8 2 326 4 1003 2 1032 16 453 54 1378 18 924 2 579 6 430 2 983 6 772 2 583 16 845 32 695 6 435 4 724 48 586 2 35 4 36 6 612 22 988 6 1063 4 752 4 1082 2 1085 6 
764 2 501 2 80 2 
126 2 338 2 1165 10 1397 2 316 2 1237 2 1231 2 1037 2 559 22 136 2 244 2 632 2 590 2 1065 2 
4 2 68 2 389 2 415 2 601 2 1331 2 366 2 743 2 229 2 510 4 1032 2 1378 2 453 6 768 2 237 2 1299 2 749 2 583 2 1283 2 845 2 724 4 726 2 612 2 
1032 4 453 16 583 4 845 8 695 6 415 8 389 4 601 4 724 12 1159 2 35 4 36 6 612 4 1374 2 917 4 366 8 213 2 
614 62 104 2 1406 2 1407 14 207 2 160 4 501 2 271 2 1410 2 1182 4 209 4 764 8 228 4 857 4 943 4 1413 4 1393 2 944 4 1098 2 424 2 71 2 884 2 116 2 607 2 555 2 1381 10 284 2 147 2 844 2 376 4 100 4 823 4 585 2 560 4 200 10 1171 4 826 2 14 2 1405 2 80 6 
862 2 658 2 444 2 1101 2 1048 2 642 2 898 2 1109 2 382 2 1190 2 40 2 
633 2 831 2 542 3 832 2 1179 2 85 2 1180 24 1346 2 546 2 740 2 1275 1 1348 2 914 2 744 2 1349 2 554 2 191 4 1192 2 646 5 369 2 96 2 471 2 472 2 1282 3 843 4 556 2 1008 16 931 1 474 2 934 2 933 2 287 12 12 2 103 2 752 34 381 6 1195 4 1016 2 20 2 1017 2 206 3 296 8 762 2 387 2 1371 2 662 3 574 2 667 1 1376 2 1123 2 948 2 863 2 396 4 115 2 580 2 865 16 1126 2 951 2 771 2 866 2 400 2 775 2 121 1 493 3 34 2 776 2 1132 2 954 2 1385 24 39 4 779 16 407 4 1141 2 1226 2 1227 16 1045 2 413 1 1229 2 318 32 599 2 47 2 1232 3 227 2 686 2 787 2 1051 2 878 2 789 2 606 6 1144 1 1146 2 332 3 54 2 1058 2 236 2 693 1 240 2 889 2 514 1 611 2 152 4 795 2 797 2 337 2 1245 2 518 2 437 2 63 2 704 2 798 6 155 1 894 1 1066 3 800 32 522 2 1409 8 801 2 1067 2 447 1 1329 2 809 3 450 1 451 3 714 2 1161 3 1162 1 169 2 170 2 720 4 1258 2 1259 2 1336 6 1166 1 532 1 1078 2 1420 8 1261 2 822 2 261 2 627 3 723 2 456 2 262 2 1426 32 356 2 536 2 1084 1 
1257 2 752 2 
1218 2 752 4 893 2 
107 2 
0 2 957 2 358 2 1306 2 1139 2 409 14 910 2 735 2 685 2 46 4 1091 2 88 6 996 18 600 4 48 2 273 2 6 14 835 2 90 14 1095 14 548 2 1050 8 999 18 1233 6 838 2 645 8 880 14 791 14 425 2 278 6 1353 50 747 2 923 2 235 2 143 10 1100 2 1398 4 1356 10 238 2 968 2 694 10 1317 2 434 2 1103 14 245 4 517 2 475 4 936 2 153 50 1323 14 703 14 340 2 756 2 1198 2 1199 2 1289 8 803 50 804 10 712 2 572 2 1293 2 1372 6 1068 2 1211 8 901 4 1122 4 1252 14 945 6 1254 10 947 2 1074 2 490 18 1075 2 770 2 676 8 534 4 986 14 176 2 264 10 180 4 357 4 1304 8 
1213 1 871 2 1333 2 1002 2 
871 2 705 2 
764 2 637 2 765 2 1380 2 871 2 119 2 683 2 
871 2 1377 2 119 2 
339 2 871 2 119 2 
1121 2 265 2 1002 2 
871 2 119 2 
979 2 1121 2 
1243 2 871 2 
219 2 1121 2 1002 2 
641 2 994 2 1002 2 
226 2 652 2 1002 2 
624 2 1060 2 1002 2 
605 2 512 2 1002 2 
928 2 1121 2 
916 2 871 2 
19 2 994 2 
226 2 1270 2 
241 2 1060 2 
401 2 605 2 
86 2 1121 2 
605 2 581 2 
16 2 1060 2 
226 2 837 2 
994 2 1035 2 
219 2 1121 2 67 2 1002 2 
219 2 1121 2 766 2 67 2 1002 2 
1121 2 257 2 1002 2 
220 2 1121 2 1002 2 
65 2 426 2 692 2 214 2 
469 2 185 4 3 2 84 2 1298 2 1386 2 1326 2 433 2 559 6 664 2 725 2 1276 4 165 2 1188 2 653 2 753 2 1124 2 64 2 
202 2 1002 2 
867 2 764 2 637 2 463 2 
867 2 764 2 637 2 1380 2 598 2 463 2 
764 2 637 2 760 2 871 2 119 2 683 2 
129 2 359 2 
621 2 764 2 637 2 683 2 
394 2 1060 2 
605 2 404 2 
994 2 222 2 
226 2 638 2 
605 2 226 2 1280 2 
605 2 226 2 489 2 
226 2 605 2 1228 2 
511 2 226 2 605 2 
637 2 69 2 764 2 324 2 164 6 952 6 289 2 589 2 
300 2 1121 2 
437 2 
633 2 734 2 832 2 1179 2 1346 2 466 2 1348 2 914 2 1277 2 554 2 372 2 843 4 556 2 931 2 849 2 933 2 287 8 103 4 752 26 381 6 1195 4 660 2 762 2 296 2 298 2 574 6 666 4 1123 2 948 2 396 2 1126 2 675 2 775 2 954 2 39 2 1138 2 407 2 1227 6 1045 2 318 26 599 2 787 2 49 2 423 2 789 2 606 2 59 2 611 2 152 4 797 2 795 2 1245 2 518 2 337 2 63 2 798 2 704 2 976 4 800 4 1067 2 977 2 620 2 1162 2 169 2 171 2 720 4 1336 4 1078 2 1261 2 723 2 262 2 458 2 1426 6 356 2 
633 2 734 2 832 2 1179 2 1346 2 466 2 1348 2 914 2 277 2 1277 2 554 2 9 2 372 2 843 4 556 2 931 2 849 2 933 2 287 8 103 4 752 26 381 6 1195 4 660 2 762 2 296 2 574 6 666 4 1123 2 948 2 396 2 115 2 1126 2 771 2 775 2 954 2 39 2 1138 2 407 2 1227 6 1045 2 318 26 599 2 787 2 49 2 423 2 789 2 606 2 889 2 611 2 152 4 797 2 795 2 1245 2 518 2 337 2 63 2 798 2 704 2 976 4 800 4 1067 2 977 2 620 2 1162 2 169 2 171 2 720 4 72 2 1336 6 1078 2 1261 2 723 2 262 2 458 2 1426 6 356 2 
1080 2 
467 2 1157 2 
1272 2 781 2 149 2 370 2 1119 2 283 2 1266 2 270 2 
781 2 370 2 1235 2 689 2 283 2 270 2 821 2 506 2 1130 2 1272 2 609 2 1339 2 149 2 969 2 1042 2 813 2 1119 2 1266 2 367 2 
781 2 370 2 1235 2 689 2 283 2 270 2 821 2 506 2 1130 2 1272 2 609 2 1339 2 149 2 969 2 1042 2 813 2 1119 2 1266 2 367 2 
781 2 370 2 1235 2 689 2 283 2 270 2 821 2 506 2 1130 2 1272 2 609 2 1339 2 149 2 969 2 1042 2 813 2 1119 2 1266 2 367 2 
781 2 370 2 1235 2 689 2 283 2 270 2 821 2 506 2 1130 2 1272 2 609 2 1339 2 149 2 969 2 1042 2 813 2 1119 2 1266 2 367 2 
781 2 370 2 1235 2 689 2 283 2 270 2 821 2 506 2 1130 2 1272 2 609 2 1339 2 149 2 969 2 1042 2 813 2 1119 2 1266 2 367 2 
1030 2 781 2 370 2 689 2 1235 2 283 2 270 2 821 2 506 2 1272 2 609 2 1339 2 149 2 969 2 1042 2 813 2 1119 2 1266 2 
1030 2 781 2 370 2 689 2 1235 2 283 2 270 2 821 2 506 2 1272 2 609 2 1339 2 149 2 969 2 1042 2 813 2 1119 2 1266 2 
1030 2 781 2 370 2 689 2 1235 2 283 2 270 2 821 2 506 2 1272 2 609 2 1339 2 149 2 969 2 1042 2 813 2 1119 2 1266 2 
1030 2 781 2 370 2 689 2 1235 2 283 2 270 2 821 2 506 2 1272 2 609 2 1339 2 149 2 969 2 1042 2 813 2 1119 2 1266 2 
781 2 370 2 689 2 1235 2 283 2 270 2 821 2 506 2 1272 2 609 2 1339 2 149 2 969 2 1042 2 813 2 1119 2 1266 2 
633 2 832 2 270 2 1179 2 1272 2 914 2 550 2 367 2 1277 2 554 2 370 2 372 2 283 2 843 4 99 3 933 2 381 6 752 24 1195 4 1016 2 20 2 757 2 385 2 574 6 1119 2 1123 2 948 2 1295 2 115 2 1126 2 771 2 1042 2 954 2 1135 2 781 2 221 2 1227 6 1045 2 318 24 599 2 506 2 872 2 787 2 423 2 606 3 689 2 1235 2 690 2 609 2 149 2 969 2 611 2 152 4 797 2 1245 2 518 4 437 2 63 2 798 3 976 4 800 3 1067 2 813 2 169 2 720 4 1336 6 821 2 1078 2 822 2 1339 2 723 2 1426 8 356 2 1266 2 
781 2 370 2 1235 2 689 2 283 2 270 2 821 2 506 2 1130 2 1272 2 609 2 1339 2 149 2 969 2 1042 2 813 2 1119 2 1266 2 367 2 
781 2 499 4 270 2 506 2 1272 2 813 2 1119 2 367 2 370 2 689 2 1235 2 283 2 821 2 1130 2 1339 2 609 2 969 2 149 2 1042 2 1427 2 1266 2 681 2 
813 2 123 2 239 2 
813 2 123 2 239 2 
633 2 830 2 540 2 832 2 360 12 270 2 1179 2 87 2 364 2 466 4 914 2 1187 16 367 6 1277 6 554 2 372 2 283 2 199 2 843 4 1358 2 561 2 933 2 287 4 752 24 381 6 1195 4 1197 2 291 4 292 2 565 2 1288 4 1366 4 295 4 1019 4 574 2 1026 2 1123 2 948 2 1295 2 396 4 115 2 1125 2 305 2 1126 2 771 2 1130 4 680 4 954 2 123 6 39 4 1224 2 497 2 781 4 407 4 132 2 1227 2 782 2 1045 2 223 4 318 16 599 2 320 4 50 4 327 2 879 2 423 2 689 6 239 2 149 2 611 2 1242 2 152 4 1244 12 797 2 154 2 337 4 1245 2 518 4 63 2 156 2 800 2 1155 4 1325 2 1067 2 255 2 978 2 345 2 526 2 813 4 816 4 168 2 169 2 720 4 1336 6 1078 2 1419 2 1338 2 76 2 723 2 1170 2 535 2 1426 2 356 2 538 4 
730 2 497 2 1295 2 480 2 870 2 911 2 832 2 318 2 774 2 255 2 561 2 526 2 535 2 1265 2 467 2 752 4 518 2 
633 2 830 2 184 2 832 2 360 12 270 2 1179 2 87 2 364 2 466 4 91 2 914 2 1187 16 367 6 1277 6 554 2 372 2 283 2 843 4 1358 2 933 2 287 4 752 24 381 6 1195 4 1197 2 291 4 292 2 565 2 479 2 1288 4 1366 4 1290 2 295 4 1019 4 574 2 1026 2 1123 2 948 2 396 4 115 2 1125 4 305 2 1126 2 771 2 1130 4 680 4 954 2 123 6 39 4 497 2 781 4 407 4 132 2 1227 2 782 2 1045 2 223 4 318 16 599 2 320 4 687 2 50 4 327 2 879 2 423 2 689 6 239 2 149 2 611 2 1242 2 152 4 1244 12 797 2 154 2 337 4 1245 2 518 2 63 2 156 2 800 4 1155 4 1325 2 1067 2 524 2 255 2 978 2 345 2 526 2 813 4 816 4 168 4 169 2 720 4 1336 6 1078 2 1419 2 76 2 723 2 535 2 1170 2 1426 2 356 2 538 4 
633 2 830 2 832 2 360 12 270 2 1179 2 87 2 364 2 466 4 914 2 1187 16 367 6 1277 6 554 2 372 2 283 2 843 4 1358 2 561 2 933 2 287 4 752 24 381 6 1195 4 1197 2 291 4 292 2 565 2 1288 4 941 2 1366 4 295 4 1019 4 574 2 1026 2 1123 2 948 2 1295 2 396 4 115 2 1125 2 305 2 1126 2 771 2 1130 4 680 4 310 2 954 2 123 6 868 2 39 4 497 2 781 4 407 4 132 2 1227 2 782 2 1045 2 223 4 318 16 599 2 320 4 687 2 50 4 327 2 879 2 423 2 689 6 239 2 149 2 611 2 1242 2 152 4 1244 12 797 2 154 2 337 4 1245 2 518 4 63 2 156 2 800 2 1155 4 1325 2 1067 2 255 2 978 2 345 2 526 2 813 4 816 4 168 4 169 2 720 4 1336 6 531 2 1078 2 1419 2 353 2 76 2 723 2 1170 2 535 2 1426 2 356 2 538 4 
732 3 1 2 2 2 734 2 736 2 738 2 741 2 742 10 744 2 745 2 746 12 10 2 748 8 750 2 752 154 15 12 17 18 18 38 754 2 755 8 758 2 759 20 23 3 763 2 24 2 25 2 26 2 28 2 767 2 769 4 771 6 29 2 30 3 32 2 773 2 31 318 33 2 37 2 777 4 38 1 41 2 779 194 42 34 43 40 783 4 784 2 47 2 786 48 787 2 49 2 792 2 51 2 54 2 794 22 55 2 56 2 57 2 58 2 60 2 61 4 796 2 797 2 62 2 63 2 798 46 799 2 800 110 801 2 802 2 805 2 806 2 808 14 809 2 811 36 815 38 70 4 817 2 818 2 819 2 73 2 820 34 74 2 75 2 823 2 77 2 78 2 824 2 825 2 79 38 827 2 828 3 81 2 82 2 832 2 85 16 834 2 92 2 836 2 94 2 95 2 839 4 96 2 840 10 98 1 841 2 842 2 843 8 99 2 845 12 846 8 847 12 849 2 848 42 850 2 102 2 851 3 852 38 854 2 105 2 855 120 108 2 856 2 109 2 857 2 110 3 858 10 860 2 112 2 861 38 863 2 864 80 113 2 114 2 115 6 865 52 117 2 866 2 122 60 125 3 127 2 869 2 128 2 134 2 133 2 135 2 872 2 137 2 876 22 138 2 877 2 139 3 878 2 140 2 882 2 142 10 883 6 885 2 148 10 150 2 151 2 152 8 890 78 891 2 892 24 895 360 896 2 157 2 158 3 159 2 897 3 161 2 162 2 163 2 900 2 166 118 167 2 170 2 171 2 172 2 173 2 174 2 175 2 177 2 178 16 904 2 179 2 905 2 906 2 182 3 907 8 183 3 908 20 909 86 912 172 188 38 914 2 915 2 917 4 921 2 191 32 920 2 192 2 193 2 924 4 197 2 196 2 195 2 198 2 926 4 927 3 929 2 931 3 933 2 201 60 203 2 937 24 204 2 205 4 938 2 939 2 206 2 940 3 210 2 942 3 211 2 212 2 944 2 215 2 948 2 950 2 949 2 216 2 217 2 951 2 218 26 953 8 960 40 221 2 225 2 961 2 962 2 228 2 231 2 963 2 964 4 233 2 232 2 234 8 236 14 965 2 966 2 240 2 970 2 246 4 971 2 972 2 247 22 973 2 248 60 975 6 976 12 249 2 252 2 253 2 977 46 256 2 980 2 259 2 982 16 260 2 984 2 985 2 263 2 987 2 988 6 989 2 990 2 991 2 266 2 267 2 268 10 269 2 997 2 274 2 1000 2 276 4 1003 2 279 1 281 2 282 4 1005 10 1004 2 285 2 286 80 1006 22 1007 2 1008 14 287 298 1010 4 288 2 1013 2 290 20 1014 4 1015 2 1017 2 1018 3 294 2 296 84 1020 2 1021 2 297 2 1022 7 1024 2 301 4 299 2 302 38 1027 2 304 3 1028 2 1029 12 1031 2 1032 6 1034 4 306 22 307 8 308 2 1036 2 1038 82 1041 2 312 2 1044 2 314 2 315 18 1045 2 317 3 1046 16 318 100 1047 6 1049 2 323 2 1052 162 1051 2 325 2 1053 80 1054 2 1055 26 326 4 328 14 329 2 330 2 331 2 332 2 1058 2 1059 2 334 2 335 38 337 18 341 2 1066 2 342 2 1067 2 343 2 1069 80 1070 2 346 38 349 2 348 2 1072 4 1073 3 351 2 1076 2 1078 2 354 2 356 2 1083 4 1084 1 1085 6 1086 2 1087 2 1088 2 1090 2 1089 2 361 2 362 2 1092 3 1093 4 1094 2 363 1 365 2 366 12 1097 2 1099 2 369 2 371 42 372 2 374 2 375 2 1102 40 378 2 1105 2 1106 2 1107 2 1108 2 380 8 381 10 383 6 384 2 1111 2 1114 2 1115 2 1117 2 386 2 387 2 388 2 389 6 1118 3 390 3 1120 2 391 2 392 3 393 2 395 1 1123 8 1126 4 397 4 398 2 399 2 1127 2 400 2 1128 2 1129 2 1131 2 402 2 403 80 1132 2 405 2 1134 3 1135 2 1133 2 1136 2 1137 2 1138 2 406 2 1141 2 408 2 1140 2 412 3 413 13 414 4 415 12 416 10 417 2 421 3 420 2 1143 3 1144 1 1145 2 427 4 1146 2 428 2 1147 40 431 4 1148 2 435 4 436 2 438 2 439 2 441 2 442 2 443 2 1156 22 448 2 449 2 450 1 1158 1 1160 60 1161 2 1162 2 453 24 1166 1 1167 4 454 8 455 2 1168 4 457 2 458 86 1169 2 1171 2 1172 2 459 2 1175 3 1174 4 1177 3 1176 2 460 2 1179 8 1180 15 1181 4 1183 3 1184 2 1186 2 1185 2 1189 2 1191 80 468 162 1192 2 472 2 1193 2 473 2 1194 18 474 2 1195 6 476 78 1196 76 477 102 478 2 1200 2 1201 2 1203 4 481 2 1206 2 484 2 485 2 1210 2 487 76 1212 2 488 2 1214 2 1216 2 492 2 1217 2 493 3 495 42 494 10 1219 2 496 8 1220 2 1222 16 498 2 1223 2 1225 2 1227 32 505 1 504 2 1229 2 1232 2 508 2 1234 2 1236 2 513 2 1238 2 515 8 516 2 1240 2 1241 2 518 10 1247 2 1248 2 519 2 522 2 523 2 1250 6 1251 2 525 10 527 3 528 2 1255 2 1256 4 1259 2 1260 1 530 3 532 15 1262 2 1263 2 533 2 1264 2 536 2 1267 2 1269 2 1268 2 541 2 542 2 543 8 544 2 545 2 1271 2 546 2 1273 40 1274 2 547 2 552 2 553 10 1277 2 554 2 1278 3 1279 4 1281 2 557 2 559 6 1285 2 1286 2 1287 4 562 2 564 2 566 2 567 38 568 2 569 2 570 24 571 4 1292 2 574 18 1294 2 576 22 1295 2 577 4 1296 2 1297 2 580 2 582 2 583 6 584 4 586 2 1300 2 588 2 587 16 1302 2 1301 18 1305 2 591 2 594 24 595 3 596 2 597 2 1307 2 599 4 1308 2 601 6 1309 2 603 34 1310 2 1311 2 604 2 1312 2 606 16 1314 20 608 2 1315 2 1316 112 1318 22 610 2 1319 4 611 2 1320 80 612 10 1321 2 613 2 617 132 615 2 616 4 618 2 1324 40 1327 14 1329 2 1330 2 620 4 1334 16 1335 2 1336 14 622 4 625 76 626 2 627 3 1340 2 1341 2 1342 188 629 3 631 1 1343 2 634 2 1344 2 639 2 640 2 643 2 644 2 1349 2 1350 4 1352 82 648 38 649 2 1354 38 650 2 1357 2 1359 2 1360 2 654 2 655 2 657 2 1363 3 1364 2 659 66 1365 2 1367 2 660 2 661 3 1368 2 1370 8 662 2 663 2 665 2 1373 3 1375 2 1376 2 668 8 669 2 670 2 671 38 672 2 1378 6 673 2 1379 2 674 2 1382 2 677 22 1383 3 678 2 1385 61 682 2 684 80 1387 4 1388 2 686 14 1389 2 1390 2 1391 2 1392 14 1395 2 1396 66 688 10 690 2 691 2 693 1 1399 2 695 6 696 54 698 2 1402 6 700 2 1403 2 702 2 1409 14 1408 2 707 2 708 2 710 2 1411 2 713 2 1412 2 714 2 1414 228 716 1 1415 9 717 2 1416 2 718 2 1417 2 720 6 1418 2 1421 3 1420 14 1422 2 722 2 723 4 1423 2 724 18 1424 2 728 2 1426 126 1428 2 729 2 
976 2 800 2 1227 2 708 2 544 2 318 2 1092 2 977 6 574 2 665 2 1096 2 787 2 553 2 231 2 606 2 840 4 142 2 281 2 60 2 1426 2 752 2 798 2 973 2 906 2 
976 2 800 2 1227 2 708 2 544 2 318 2 1092 2 977 6 574 2 665 2 1096 2 787 2 553 2 231 2 606 2 840 4 142 2 281 2 60 2 1426 2 752 2 798 2 973 2 906 2 
976 2 800 2 1227 2 708 2 544 2 318 2 1092 2 977 6 574 2 665 2 1096 2 787 2 553 2 231 2 606 2 840 4 142 2 281 2 60 2 1426 2 752 2 798 2 973 2 906 2 
779 2 477 6 800 3 594 3 1156 4 570 3 761 3 318 4 873 2 321 2 389 2 415 2 601 2 602 2 812 2 787 2 366 2 231 2 576 4 1057 2 790 2 1032 2 453 5 746 2 1033 2 144 4 865 2 677 4 583 2 1006 4 845 2 1168 2 435 2 724 4 333 2 1426 2 1062 2 752 10 1085 4 798 3 
779 2 594 2 318 4 321 2 873 2 415 2 601 2 602 2 787 2 366 2 231 2 1057 2 1003 2 790 2 746 2 144 4 845 2 1006 4 435 2 333 2 612 2 1062 2 752 10 798 2 477 6 800 2 1156 4 761 2 570 2 389 2 812 2 576 4 453 4 1378 2 1032 2 1033 2 865 2 583 2 677 4 1168 2 724 4 1426 2 1085 4 
779 2 594 2 318 4 321 2 873 2 415 2 601 2 602 2 787 2 366 2 231 2 1057 2 1003 2 790 2 746 2 144 4 845 2 1006 4 435 2 333 2 612 2 1062 2 752 10 798 2 477 6 800 2 1156 4 761 2 570 2 389 2 812 2 576 4 453 4 1378 2 1032 2 1033 2 865 2 583 2 677 4 1168 2 724 4 1426 2 1085 4 
779 2 594 2 318 4 321 2 873 2 415 2 601 2 602 2 787 2 366 2 231 2 1057 2 1003 2 790 2 746 2 144 4 845 2 1006 4 435 2 333 2 612 2 1062 2 752 10 798 2 477 6 800 2 1156 4 761 2 570 2 389 2 812 2 576 4 453 4 1378 2 1032 2 1033 2 865 2 583 2 677 4 1168 2 724 4 1426 2 1085 4 
779 2 594 2 318 4 321 2 873 2 415 2 601 2 602 2 787 2 366 2 231 2 1057 2 1003 4 790 2 746 2 144 4 845 2 1006 4 435 2 333 2 612 4 1062 2 752 10 798 2 477 6 800 2 1156 4 761 2 570 2 389 2 812 2 576 4 453 4 1378 4 1032 2 1033 2 865 2 583 2 677 4 1168 2 724 4 1426 2 1085 4 
975 2 198 2 7 2 140 2 828 2 1253 2 
985 2 657 2 839 2 458 2 325 2 778 2 828 2 
1150 2 992 2 520 1 131 1 83 2 66 2 1045 2 445 2 271 1 318 8 272 2 998 2 1023 2 230 2 303 2 258 2 53 2 97 2 146 1 1149 2 242 2 585 1 1043 2 752 10 1221 2 124 2 
799 2 318 6 1370 2 415 6 389 6 601 6 814 2 366 6 917 2 1390 2 326 2 1255 2 1003 2 453 16 1032 6 1378 2 1313 2 260 2 583 6 845 6 695 4 435 2 697 2 724 12 612 3 988 4 1303 2 752 6 1287 2 1085 4 
576 2 647 7 578 2 529 2 1387 2 995 2 502 2 886 2 318 1 677 2 1345 2 737 4 807 2 1006 2 344 2 1061 2 1011 1 752 1 
576 2 647 6 578 2 529 2 1387 4 995 4 502 2 886 2 677 2 1345 2 737 4 807 2 1006 2 344 4 1061 2 
576 2 647 10 578 2 529 2 1387 8 995 8 502 2 886 2 318 1 677 2 1345 2 737 4 807 6 1006 2 344 8 1061 8 1011 1 752 1 
576 2 647 2 578 2 529 2 1387 2 995 2 502 2 886 2 677 2 1345 2 737 2 1006 2 344 2 
539 4 636 2 462 2 186 4 736 2 640 2 5 4 465 6 913 6 918 2 190 2 922 4 280 4 11 2 932 2 1104 2 1009 10 13 2 1012 2 935 2 752 42 1195 14 656 2 293 2 1112 5 105 2 1204 2 1205 4 1369 2 482 2 1208 2 1207 2 573 2 1025 16 486 2 111 2 27 4 946 2 115 3 1126 4 1215 2 491 2 771 3 1384 2 592 4 780 6 410 6 44 2 785 6 318 38 599 4 1230 2 874 2 418 2 419 2 52 2 429 2 1400 2 1322 4 706 2 1153 2 1328 2 619 4 899 2 254 2 1071 2 1332 2 719 2 1164 2 720 16 1336 31 1077 4 1337 2 355 2 723 2 628 2 1425 2 630 2 537 1 
706 2 636 2 720 4 44 2 105 2 115 4 1336 10 1126 2 623 2 771 4 640 2 736 2 599 2 318 12 355 2 254 2 723 2 1025 4 1071 2 630 2 1012 2 752 12 1195 4 
829 2 592 2 780 4 539 2 636 2 44 2 186 2 503 2 640 2 736 2 599 6 318 34 1230 2 464 2 913 4 275 2 418 2 419 2 918 2 1056 2 919 2 922 4 52 2 793 2 280 2 11 2 888 2 243 2 930 2 1104 2 932 4 1009 12 751 2 935 2 752 38 1195 14 440 2 656 2 1151 1 706 2 293 2 1112 2 1249 2 1153 2 105 2 1202 2 1205 4 446 1 709 2 482 2 619 2 1207 2 573 2 254 2 899 2 1025 4 1071 2 1332 2 486 2 111 2 27 4 946 2 720 16 115 6 1336 32 1126 6 1215 1 1337 2 491 2 771 6 1039 2 723 4 1040 2 1425 2 630 2 955 1 
829 2 731 2 993 2 959 2 636 2 44 2 733 2 411 2 1142 2 1178 2 503 2 224 2 319 2 599 2 318 42 736 2 640 2 5 2 739 2 275 2 422 2 1394 2 788 2 1351 2 919 6 922 2 881 2 470 2 1355 2 925 6 373 2 432 4 1239 2 101 2 243 2 1284 2 379 2 1009 2 751 2 1012 2 752 42 1110 2 1322 2 1246 4 1195 18 974 2 853 2 706 2 21 2 105 2 1205 2 1369 2 1116 2 1291 4 254 2 1209 2 1025 30 1071 2 347 2 902 2 575 2 27 2 903 2 452 2 720 18 352 4 115 4 1336 40 1077 2 1126 2 623 2 771 4 355 2 723 2 1039 2 1384 2 630 2 1079 2 956 2 1429 2 
336 2 

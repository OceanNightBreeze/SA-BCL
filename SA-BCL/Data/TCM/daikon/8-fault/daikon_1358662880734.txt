#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V ERROR java.lang.NullPointerException (441,1189) 
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V ERROR java.lang.NullPointerException 788 
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 1005 417 81 37 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V ERROR java.lang.NullPointerException 390 378 
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 218 773 349 
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.inv.unary.sequence.EltwiseIntLessThan:format_ioa()Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.inv.binary.twoSequence.TwoSequence:var2()Ldaikon.VarInfo;
daikon.ProglangType:dimensions()I
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.string.OneOfString:format_daikon()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.PptName:isEnterPoint()Z
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.inv.unary.scalar.Positive:enabled()Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.Quantify.Term:name_with_offset(Ljava.lang.String;I)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.Quantify.QuantFlags:adjacent()Ljava.util.EnumSet;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_esc()Ljava.lang.String;
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.ProglangType:isIntegral()Z
daikon.test.InvariantFormatTester:execute()Z
daikon.VarInfoName:simplify_name()Ljava.lang.String;
utilMDE.Intern:intern([I)[I
jtb.JavaParser:jj_consume_token(I)Ljtb.Token; | CONDITION | 213180 | if (x) -> if (!x)
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant:prob_and(DD)D
daikon.Quant:lexGT([I[I)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:maxsep_point([J[J)[I
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltOneOf:EltOneOf(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltNonZero:enabled()Z
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:sign(I)I
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.inv.unary.string.OneOfString:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltOneOf:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:computeConfidence()D
jtb.JavaParser:jj_ntk()I
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_daikon()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:gcd(JJ)J
daikon.inv.unary.sequence.EltwiseIntLessThan:format_daikon()Ljava.lang.String;
utilMDE.ArraysMDE:sorted([I)Z
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.Quantify.SimplifyQuantification:get_index(I)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual()V
daikon.inv.unary.UpperBoundCore:calc_modulus()J
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.string.OneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:isReverse([I[I)Z
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eltsGtIndex([I)Z
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_esc()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.Ppt:find_var_by_name(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.JavaCharStream:readChar()C
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.inv.Invariant:prob_or(DD)D
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_simplify()Ljava.lang.String;
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.inv.unary.stringsequence.EltOneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltOneOf:subarray_rep()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:gte(II)Z
daikon.inv.unary.string.OneOfString:OneOfString(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_esc()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice0:arity()I
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.Quantify.Constant:Constant(I)V
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.NoDuplicates:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.inv.binary.twoScalar.LinearBinaryCore:maxsep_indices()[I
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:subarray_rep()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:isScalar()Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
utilMDE.FuzzyFloat:lte(DD)Z
daikon.inv.unary.sequence.EltNonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.suppress.NISuppressee:NISuppressee(Ljava.lang.Class;Z)V
daikon.inv.unary.sequence.EltUpperBound:enabled()Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:domainTypeIOA()Ljava.lang.String;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.test.FormatTestCase:getDiffString()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Debug:logOn()Z
daikon.inv.unary.sequence.EltNonZero:EltNonZero(Ldaikon.PptSlice;)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:pairwiseLT([I[I)Z
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.inv.unary.string.OneOfString:enabled()Z
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.inv.unary.sequence.EltwiseIntLessThan:format_simplify()Ljava.lang.String;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.inv.unary.string.OneOfString:add_modified(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.Quant:eltsNotEqual([II)Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.VarInfo:relate_var()V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
utilMDE.MathMDE:bitwiseComplement(I)I
utilMDE.UtilMDE.NullableStringComparator:compare(Ljava.lang.String;Ljava.lang.String;)I
daikon.inv.unary.sequence.EltOneOf:sort_rep()V
daikon.inv.Invariant:logDetail()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.PptName:isCombinedExitPoint()Z
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:subsetOf([F[F)Z
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:enabled()Z
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.Quant:eltwiseGT([I)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.Quant:eltwiseEqual([I)Z
daikon.Quantify.QuantifyReturn:QuantifyReturn(Ldaikon.VarInfo;)V
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:PairwiseIntLessThan(Ldaikon.PptSlice;)V
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.stringsequence.EltOneOfString:sort_rep()V
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.ProglangType:isPointerFileRep()Z
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.inv.unary.string.OneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:processQueue()V
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:lexLTE([I[I)Z
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:sameLength([I[I)Z
daikon.inv.unary.string.SingleString:var()Ldaikon.VarInfo;
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.inv.unary.stringsequence.EltOneOfString:runValue([Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
utilMDE.FuzzyFloat:gte(DD)Z
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:eq(II)Z
daikon.VarInfo:get_lower_bound()Ldaikon.Quantify.Term;
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.Quantify.IOAQuantification:getFreeVar(I)Ldaikon.Quantify.Term;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
utilMDE.OrderedPairIterator:setnext2()V
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.Quantify.ESCQuantification:get_quantification()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:enabled()Z
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_daikon()Ljava.lang.String;
daikon.VarInfo:isDerivedSubSequenceOf()Ldaikon.VarInfo;
daikon.inv.binary.twoSequence.PairwiseIntEqual:PairwiseIntEqual(Ldaikon.PptSlice;)V
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.suppress.NISuppressionSet:NISuppressionSet([Ldaikon.suppress.NISuppression;)V
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.Quant:memberOf(F[F)Z
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.inv.ValueSet.ValueSetString:ValueSetString(I)V
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Quant:subsetOf([J[J)Z
daikon.inv.Invariant:getConfidence()D
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.ModBitTracker:ModBitTracker(I)V
jtb.JavaCharStream:getBeginColumn()I
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.ProglangType:base()Ljava.lang.String;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.ProglangType:isFloat()Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:enabled()Z
daikon.Quantify.ESCQuantification:get_arr_vars_indexed(I)Ljava.lang.String;
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.Quant:eltsLT([II)Z
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.ProglangType:baseIsScalar()Z
daikon.VarComparabilityNone:elementType()Ldaikon.VarComparability;
daikon.inv.unary.sequence.EltwiseIntLessThan:enabled()Z
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.inv.binary.twoSequence.PairwiseIntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.inv.unary.UpperBoundCore:computeProbability()D
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.string.OneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:is_direct_non_slice_array()Z
daikon.Quant:setDiff([I[I)[I
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | STATEMENT | 2966 | stmt -> ;
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:enabled()Z
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.Quant:eq(DD)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I | CONSTANT | 14318 | 112 -> 0
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_simplify()Ljava.lang.String;
daikon.Quant:ne(II)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.inv.unary.sequence.EltOneOf:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.NoDuplicates:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
daikon.Quant:lexNotEqual([I[I)Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.VarInfo:isPointer()Z
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.VarInfo:isIOAArray()Z
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.inv.binary.twoSequence.PairwiseIntEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.PptMap:asCollection()Ljava.util.Collection;
utilMDE.FuzzyFloat:lt(DD)Z
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
daikon.Quant:lexEqual([I[I)Z
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.inv.unary.sequence.EltOneOf:is_hashcode()Z
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.stringsequence.EltOneOfString:add_modified([Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.Quantify.Term:esc_name()Ljava.lang.String;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_daikon()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.Quant:memberOf(S[S)Z
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:enabled()Z
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:PairwiseIntLessEqual(Ldaikon.PptSlice;)V
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.inv.Invariant:logOn()Z
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.VarInfo:get_base_array_hashcode()Ldaikon.VarInfo;
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.Quant:eltsGTE([II)Z
daikon.inv.unary.stringsequence.EltOneOfString:format_daikon()Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:memberOf(F[D)Z
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.Quant:setEqual([I[I)Z
daikon.test.FormatTestCase:passes()Z
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:get_proto()Ldaikon.inv.Invariant;
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.ValueSet.ValueSetStringArray:ValueSetStringArray(I)V
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.Ppt:indexOf(Ljava.lang.String;)I
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.NumericInt.Divides:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ProglangType:isArray()Z
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaCharStream:getEndColumn()I
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList; | ASSIGN | 61946 | = null
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.ProglangType:isString()Z
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.inv.unary.stringsequence.SingleStringSequence:SingleStringSequence(Ldaikon.PptSlice;)V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.suppress.NISuppression:NISuppression(Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quantify.ESCQuantification:bld_quant(Ldaikon.VarInfo;Ldaikon.Quantify.Term;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.suppress.NISuppressionSet:swap()Ldaikon.suppress.NISuppressionSet;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.inv.unary.sequence.EltwiseIntComparison:EltwiseIntComparison(Ldaikon.PptSlice;)V
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.Quantify.IOAQuantification:getClosingExp()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.Quant:subsetOf([D[F)Z
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quantify.Length:simplify_name()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.inv.filter.ParentFilter:ParentFilter()V
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.VarInfoName:name()Ljava.lang.String;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:pairwiseSquare([I[I)Z
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.inv.unary.sequence.NoDuplicates:format_simplify()Ljava.lang.String;
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.ArraysMDE:indexOf([I[I)I
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.VarInfo:get_upper_bound()Ldaikon.Quantify.Term;
daikon.Quantify.QuantFlags:element_wise()Ljava.util.EnumSet;
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
utilMDE.MathMDE:missing_numbers([I)[I
utilMDE.MathMDE:pow_fast(II)I
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:mod_positive(II)I
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.suppress.NISuppression:NISuppression([Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_daikon()Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.Quantify.IOAQuantification:getFreeVarName(I)Ljava.lang.String;
daikon.inv.unary.string.SingleString:SingleString(Ldaikon.PptSlice;)V
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_simplify()Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.inv.unary.sequence.EltOneOf:format_ioa()Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.Quant:gt(II)Z
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfo:dbc_name()Ljava.lang.String;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.Quantify.Constant:name()Ljava.lang.String;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.Quant:memberOf(J[J)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
utilMDE.Stopwatch:Stopwatch(Z)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice1:arity()I
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:enabled()Z
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:subsetOf([F[D)Z
daikon.inv.unary.scalar.UpperBound:enabled()Z
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quantify.FreeVar:name()Ljava.lang.String;
daikon.Quant:eltsEqual([II)Z
daikon.Quantify.Length:Length(Ldaikon.VarInfo;I)V
daikon.ValueTuple:size()I
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:enabled()Z
daikon.inv.unary.sequence.EltNonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_esc()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.EltwiseIntLessThan:format_esc()Ljava.lang.String;
jtb.JavaCharStream:FillBuff()V
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.Quant:noDups([I)Z
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.PptSlice1:num_samples()I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
jtb.JavaCharStream:ReadByte()C
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.Ppt:Ppt()V
daikon.Quant:eltwiseNotEqual([I)Z
daikon.suppress.NISuppressee:NISuppressee(Ljava.lang.Class;I)V
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.inv.Invariant:prob_is_ge(DD)D
utilMDE.MathMDE:modulus([I)[I
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern:numIntArrays()I
daikon.inv.unary.sequence.EltOneOf:is_boolean()Z
daikon.inv.unary.sequence.EltOneOf:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_simplify()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.VarInfo:has_typeof()Z
daikon.inv.binary.twoScalar.IntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.BinaryInvariant:is_symmetric()Z
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltUpperBound:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.Quant:memberOf(D[F)Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.inv.unary.sequence.EltOneOf:format_esc()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.inv.binary.twoScalar.NumericInt.Divides:Divides(Ldaikon.PptSlice;Z)V
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.Quantify:quantify([Ldaikon.VarInfo;)[Ldaikon.Quantify.QuantifyReturn;
daikon.diff.Node:Node()V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.ProglangType:isPseudoArray()Z
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.inv.unary.sequence.EltNonZero:format_daikon()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.Quantify.SimplifyQuantification:get_arr_vars_indexed(I)Ljava.lang.String;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.inv.binary.twoScalar.NumericInt.Divides:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltsLteIndex([I)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:find_bi_linear(JJJJ[D)Z
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.Quant:pairwiseDivides([I[I)Z
utilMDE.Intern:internSubsequence([JII)[J
daikon.inv.unary.sequence.EltUpperBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.LowerBound:enabled()Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.suppress.NISuppressee:swap()Ldaikon.suppress.NISuppressee;
daikon.inv.unary.stringsequence.EltOneOfString:enabled()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.VarInfo:isPrestate()Z
utilMDE.ArraysMDE:max([I)I
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_ioa()Ljava.lang.String;
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.inv.unary.sequence.NoDuplicates:enabled()Z
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_simplify()Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.Quant:lt(II)Z
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;Ldaikon.VarInfo;)V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.unary.string.SingleString:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.Quantify.SimplifyQuantification:SimplifyQuantification(Ljava.util.EnumSet;[Ldaikon.VarInfo;)V
daikon.inv.unary.sequence.EltNonZero:format_simplify()Ljava.lang.String;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_daikon()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan()V
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.VarInfo:apply_subscript(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:name()Ljava.lang.String;
utilMDE.Assert:assertTrue(Z)V
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.Quant:eltwiseGTE([I)Z
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.inv.unary.string.OneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:memberOf(I[I)Z
daikon.Quantify.QuantFlags:include_index()Ljava.util.EnumSet;
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
utilMDE.MathMDE:gcd([I)I
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
utilMDE.ArraysMDE:subarray([JII)[J
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.inv.binary.twoScalar.IntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
utilMDE.ArraysMDE:sum([[D)D
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.string.OneOfString:format_ioa()Ljava.lang.String;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:enabled()Z
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_simplify(Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:EltUpperBound(Ldaikon.PptSlice;)V
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.inv.unary.sequence.EltNonZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.Quantify.IOAQuantification:IOAQuantification([Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltUpperBound:format_esc()Ljava.lang.String;
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
utilMDE.ArraysMDE:indexOf([II)I
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaCharStream:getBeginLine()I
daikon.Quantify.IOAQuantification:getQuantifierExp()Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:wouldChange(J)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.EltUpperBound:format_ioa()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:PairwiseIntGreaterEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.Quantify.IOAQuantification:getVarIndexedString(I)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object; | ASSIGN | 266434 | = null
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.inv.unary.string.OneOfString:is_type()Z
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.EltwiseIntLessThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.inv.unary.string.OneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:EltOneOfString(Ldaikon.PptSlice;)V
daikon.ProglangType:baseIsIntegral()Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_ioa()Ljava.lang.String;
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.Quant:eltwiseLT([I)Z
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaCharStream:GetImage()Ljava.lang.String;
utilMDE.ArraysMDE:min_max([I)[I
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V
daikon.VarInfoName:isLiteralConstant()Z
daikon.ProglangType:baseIsFloat()Z
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.Quant:lte(II)Z
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.inv.unary.stringsequence.SingleStringSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.inv.unary.sequence.EltOneOf:format_daikon()Ljava.lang.String;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.inv.Invariant:isWorthPrinting()Z
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.EltNonZero:format_ioa()Ljava.lang.String;
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.Quant:eltsLtIndex([I)Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String; | ASSIGN | 121001 | = null
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.VarInfoName.ElementsFinder:inPre()Z
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.inv.unary.sequence.NoDuplicates:get_proto()Ldaikon.inv.Invariant;
daikon.Quantify.SimplifyQuantification:get_quantification()Ljava.lang.String;
utilMDE.ArraysMDE:element_range([I)I
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.VarComparabilityNone:comparable(Ldaikon.VarComparabilityNone;Ldaikon.VarComparabilityNone;)Z
daikon.inv.Invariant:simplify_format_string(Ljava.lang.String;)Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
jtb.Token:newToken(I)Ljtb.Token;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.InvMap:InvMap()V
daikon.Quant:eltsGT([II)Z
daikon.PptSlice0:initInvariantsSeen()V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_esc()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:PairwiseIntGreaterThan(Ldaikon.PptSlice;)V
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.inv.unary.stringsequence.EltOneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.UpperBoundCore:calc_range()J
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.Quantify.IOAQuantification:getMembershipRestriction(I)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
utilMDE.LimitedSizeIntSet:size()I
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_esc()Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:format_simplify()Ljava.lang.String;
daikon.Quantify:get_flags(Z)Ljava.util.EnumSet;
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:union([I[I)[I
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.Quant:concat([I[I)[I
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
utilMDE.Options.OptionInfo:argument_required()Z
daikon.Quant:eltsEqualIndex([I)Z
daikon.PptTopLevel.CondIterator:hasNext()Z
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.inv.binary.twoScalar.IntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:add_modified(JJI)Ldaikon.inv.InvariantStatus;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.inv.unary.stringsequence.EltOneOfString:get_proto()Ldaikon.inv.Invariant;
daikon.diff.RootNode:RootNode()V
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_ioa()Ljava.lang.String;
daikon.Quant:eltwiseLTE([I)Z
daikon.Quant:subsetOf([I[I)Z
daikon.inv.unary.sequence.EltwiseIntLessThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltNonZero:is_pointer()Z
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext1()V
daikon.test.FormatTestCase.SingleOutputTestCase:getDiffString()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltUpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:esc_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.Quantify.FreeVar:simplify_name()Ljava.lang.String;
daikon.inv.binary.twoSequence.TwoSequence:TwoSequence(Ldaikon.PptSlice;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
utilMDE.Intern:internSubsequence([III)[I
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:lexLT([I[I)Z
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.EltOneOf:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.VarInfoAux:hashCode()I
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_ioa()Ljava.lang.String;
daikon.Quant:pairwiseEqual([I[I)Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.inv.Invariant:justified()Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.Quant:pairwiseLTE([I[I)Z
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.inv.unary.stringsequence.EltOneOfString:format_ioa()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker; | RETURN | 1469 | return null
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.inv.unary.string.OneOfString:sort_rep()V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.VarInfo:old_var_names(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
jtb.JavaCharStream:getEndLine()I
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.stringsequence.SingleStringSequence:var()Ldaikon.VarInfo;
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.ValueTuple:isMissingFlow(I)Z
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.inv.ValueSet:ValueSet(I)V
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.suppress.NISuppressor:swap()Ldaikon.suppress.NISuppressor;
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.inv.unary.sequence.EltUpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quantify.Length:esc_name()Ljava.lang.String;
utilMDE.UtilMDE:escapeNonASCII(C)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.VarInfo:simplify_quantify(Ljava.util.EnumSet;[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.ProglangType:baseIsString()Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.stringsequence.EltOneOfString:is_type()Z
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.inv.binary.twoScalar.TwoScalar:get_swap()Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.NoDuplicates:format_ioa()Ljava.lang.String;
daikon.Quant:slice([III)[I
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
jtb.ParseException:getMessage()Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_daikon()Ljava.lang.String;
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.Quant:subsetOf([D[D)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:add_modified(JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eq(FF)Z
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
daikon.inv.unary.string.OneOfString:format_simplify()Ljava.lang.String;
daikon.VarInfo:isDerived()Z
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:format_esc()Ljava.lang.String;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
utilMDE.MathMDE:mod_positive(JJ)J
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
utilMDE.WeakHasherMap:size()I
daikon.inv.unary.sequence.EltwiseIntLessThan:EltwiseIntLessThan(Ldaikon.PptSlice;)V
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.VarComparabilityNone:indexType(I)Ldaikon.VarComparability;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
jtb.JavaParser:generateParseException()Ljtb.ParseException;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:lexGTE([I[I)Z
daikon.VarInfo:jml_name(Ljava.lang.String;)Ljava.lang.String;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.VarInfo:simplify_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.Quantify.QuantFlags:distinct()Ljava.util.EnumSet;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:intersection([I[I)[I
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:eq(JJ)Z
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.Quantify.Term:simplify_name()Ljava.lang.String;
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.TwoSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
utilMDE.Intern:intern([D)[D
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:is_typeof()Z
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.ProglangType:elementIsIntegral()Z
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.ValueTuple:tuplemodHasModified(I)Z
utilMDE.ArraysMDE:min([I)I
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfo:get_enclosing_var()Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_ioa()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:negate(I)I
daikon.inv.binary.twoSequence.TwoSequence:var1()Ldaikon.VarInfo;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Debug:logDetail()Z
daikon.VarInfo:get_base_array()Ldaikon.VarInfo;
daikon.Quantify.ESCQuantification:ESCQuantification(Ljava.util.EnumSet;[Ldaikon.VarInfo;)V
daikon.inv.unary.sequence.EltOneOf:format_simplify()Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
utilMDE.FuzzyFloat:ne(DD)Z
daikon.Quantify.Term:ioa_name()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:set_bi_linear(JJJJ)Ldaikon.inv.InvariantStatus;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual(Ldaikon.PptSlice;)V
daikon.VarInfo:isIOASet()Z
utilMDE.ArraysMDE:noDuplicates([J)Z
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.Quant:subsetOf([S[S)Z
daikon.inv.unary.string.OneOfString:runValue(Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
jtb.ParseException:ParseException(Ljava.lang.String;)V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
utilMDE.FuzzyFloat:gt(DD)Z
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.stringsequence.EltOneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.inv.unary.string.OneOfString:format_esc()Ljava.lang.String;
utilMDE.LimitedSizeIntSet:add(I)V
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.NoDuplicates:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltLowerBound:format_simplify()Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.NumericInt.Divides:get_proto(Z)Ldaikon.inv.Invariant;
daikon.ValueTuple:isMissing(I)Z
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaCharStream:BeginToken()C
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_ioa()Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:NoDuplicates(Ldaikon.PptSlice;)V
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
daikon.inv.unary.stringsequence.EltOneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaCharStream:backup(I)V
utilMDE.ArraysMDE:sum([I)I
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
utilMDE.UtilMDE:escapeNonASCII(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:pow(II)I
daikon.PptSlice2:arity()I
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
utilMDE.Intern:intern([J)[J
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:concat([I[I)[I
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
utilMDE.OrderedPairIterator:hasNext()Z
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | RETURN | 7602 | return null
daikon.inv.Invariants:Invariants()V
daikon.VarInfoName:hashCode()I
daikon.inv.unary.sequence.EltUpperBound:format_simplify()Ljava.lang.String;
utilMDE.ArraysMDE:sum([D)D
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
utilMDE.MathMDE:gcd(II)I
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
utilMDE.FuzzyFloat:FuzzyFloat()V
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.VarInfo:get_array_var()Ldaikon.VarInfo;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
utilMDE.MathMDE:gcd_differences([I)I
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.Quantify.SimplifyQuantification:get_closer()Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.simplify.LemmaStack:noticeInt(J)V
utilMDE.FuzzyFloat:eq(DD)Z
daikon.inv.unary.stringsequence.EltOneOfString:format_esc()Ljava.lang.String;
daikon.suppress.NISuppression:NISuppression(Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
daikon.inv.Invariant:prob_and(DDD)D
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.inv.unary.sequence.EltNonZero:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:eltsGteIndex([I)Z
daikon.Quant:pairwiseGT([I[I)Z
daikon.VarInfo:get_all_simple_names()Ljava.util.List;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.ArraysMDE:sum([[I)I
utilMDE.ArraysMDE:subarray([III)[I
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:subsetOf([B[I)Z
daikon.Quant:eltsLTE([II)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfo:new_ppt()V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
486 2 957 2 1201 2 901 4 127 2 1040 2 406 2 712 2 1089 2 
568 2 319 2 1239 2 915 2 543 2 1275 2 1262 2 167 6 941 6 262 6 691 2 
128 2 925 2 431 2 860 6 9 4 418 4 1050 6 1253 6 1280 2 425 6 406 2 712 2 831 2 
39 6 961 2 729 2 16 16 256 10 840 10 732 2 929 4 793 8 511 10 797 10 712 6 1233 6 800 2 760 4 227 8 780 16 229 10 917 8 532 2 1029 29 231 8 1225 2 1287 4 497 16 974 4 293 12 406 6 664 2 237 26 
1189 4 441 4 
1007 2 
1188 2 1059 2 946 2 814 4 863 2 1063 2 736 2 907 2 1198 4 286 4 93 2 532 2 374 2 420 2 957 2 535 2 181 2 427 2 1077 2 213 2 576 2 502 2 65 2 835 2 965 2 790 2 503 2 504 2 506 2 345 2 707 2 967 2 672 2 712 4 1245 2 1221 2 761 4 1286 2 272 2 1254 2 406 4 1256 2 1150 2 559 2 
39 4 836 2 383 6 16 32 581 2 256 16 121 4 840 16 1135 4 259 6 929 2 793 18 511 16 170 6 584 6 1088 4 712 4 797 6 439 2 8 2 1233 4 674 6 800 2 780 32 802 2 229 16 455 8 1029 54 231 6 497 32 1148 4 1252 4 1185 6 158 2 293 22 403 4 406 4 767 4 237 48 
93 2 466 2 355 2 
939 2 946 2 667 2 1182 2 356 2 1175 10 249 2 1194 2 137 2 1270 22 369 2 1111 2 856 2 25 2 
39 2 16 2 1102 2 256 2 434 2 840 2 929 2 793 2 1193 2 511 2 348 2 1110 2 797 4 334 2 780 2 229 2 1029 6 610 2 497 2 293 2 619 2 682 2 237 4 
760 2 780 8 16 8 229 4 1029 16 256 4 121 4 497 8 840 4 1185 6 511 4 293 4 854 2 426 2 170 6 767 4 237 12 
771 4 317 2 1153 4 726 2 859 4 298 10 1261 4 1230 2 216 4 814 4 863 4 466 2 514 2 567 2 193 2 885 2 515 2 636 2 551 4 72 4 675 62 1163 2 518 14 93 8 606 2 51 2 1011 2 1248 10 588 4 474 2 1120 2 355 6 206 2 765 4 292 2 1251 2 11 4 786 4 1077 2 725 2 
379 2 1238 2 810 2 795 2 1007 2 715 2 953 2 271 2 314 2 922 2 
410 2 1152 2 1154 3 564 1 651 2 324 2 812 2 983 2 1231 2 327 2 413 2 1157 2 1066 2 1067 2 331 2 1161 3 247 3 175 2 914 2 1165 5 1235 2 570 3 918 2 661 2 337 2 336 3 743 1 742 1 498 2 179 2 1075 2 920 2 747 2 99 2 828 2 252 2 100 2 1079 2 188 2 189 2 190 8 255 2 1000 2 841 24 21 2 436 16 1242 4 1243 4 24 1 107 2 1089 2 759 1 351 2 938 16 586 2 519 8 1014 2 848 1 1013 1 589 1 108 2 1095 2 442 1 852 2 1255 24 34 2 681 2 114 1 683 8 768 2 36 16 274 2 1100 2 118 2 527 2 41 1 448 2 596 4 119 2 597 2 450 2 598 2 1264 1 600 6 1266 2 1109 3 1112 2 284 2 1026 2 47 1 129 6 1202 2 1028 2 1203 2 50 2 373 2 609 2 870 2 783 2 1030 3 135 2 956 6 1206 3 696 2 536 4 208 3 785 2 537 2 461 4 538 2 297 1 703 6 626 2 302 16 877 3 878 2 629 2 307 2 1214 1 882 2 711 12 712 32 884 3 1045 2 392 2 1285 4 1143 2 394 2 156 2 232 2 720 3 975 4 644 2 234 2 556 4 1052 1 1290 2 806 32 558 2 1293 2 722 2 406 34 1055 2 82 2 1056 32 1294 2 236 2 
605 2 406 2 
1273 2 42 2 406 4 
91 2 
66 2 341 2 40 2 187 2 595 18 900 2 772 2 165 2 1192 2 813 2 484 2 122 2 930 2 670 2 1107 2 547 2 1213 2 735 2 630 2 89 18 583 2 285 2 330 2 603 2 1090 2 440 2 1220 2 1284 2 397 2 1012 2 763 2 30 2 643 2 614 2 591 2 1076 2 872 2 59 2 235 2 895 18 1034 2 404 2 832 2 
253 2 1250 1 971 2 244 2 
253 2 892 2 
253 2 93 2 1119 2 549 2 366 2 723 2 1287 2 
253 2 723 2 416 2 
253 2 935 2 723 2 
244 2 344 2 79 2 
253 2 723 2 
344 2 573 2 
253 2 182 2 
980 2 244 2 344 2 
102 2 244 2 159 2 
990 2 244 2 540 2 
244 2 1282 2 822 2 
1009 2 244 2 694 2 
211 2 344 2 
253 2 601 2 
809 2 102 2 
934 2 540 2 
207 2 822 2 
717 2 694 2 
923 2 344 2 
1281 2 694 2 
822 2 83 2 
657 2 540 2 
846 2 102 2 
980 2 244 2 371 2 344 2 
980 2 354 2 244 2 371 2 344 2 
663 2 244 2 344 2 
494 2 244 2 344 2 
788 2 787 2 
93 2 916 2 549 2 1237 2 
913 2 93 2 916 2 549 2 366 2 1237 2 
253 2 93 2 323 2 549 2 723 2 1287 2 
965 2 587 2 
93 2 1071 2 549 2 1287 2 
881 2 822 2 
408 2 694 2 
295 2 102 2 
1292 2 540 2 
964 2 694 2 540 2 
240 2 694 2 540 2 
43 2 540 2 694 2 
1113 2 540 2 694 2 
999 2 488 6 467 2 549 2 171 2 93 2 270 2 377 6 
329 2 344 2 
1190 2 481 2 565 2 1072 2 386 2 1083 2 991 2 1086 2 340 4 1291 2 414 2 1270 6 281 4 631 2 1125 2 200 2 550 2 275 2 
244 2 731 2 
1143 2 
651 2 983 2 1066 2 331 2 1235 2 337 4 661 2 178 2 1073 2 662 2 920 2 747 2 1079 2 188 2 189 2 190 2 754 4 1085 2 843 2 1242 4 1243 4 107 2 1089 2 586 2 1013 2 589 2 34 2 853 2 446 2 36 6 596 4 278 2 597 2 450 2 600 6 284 2 1026 2 129 2 1203 2 1028 2 609 2 870 2 135 6 956 2 615 2 696 2 536 2 1208 4 785 2 461 2 541 2 67 2 703 4 626 2 464 2 878 2 1276 2 711 8 882 2 712 26 392 2 554 2 1285 4 156 2 556 2 806 6 1293 2 722 2 406 26 1055 2 160 2 1056 4 1294 2 161 2 
651 2 983 2 655 2 1066 2 331 2 1235 2 337 4 661 2 178 2 1073 2 662 2 920 2 747 2 830 2 100 2 1079 2 188 2 189 2 190 2 754 4 1085 2 843 2 1242 4 1243 4 107 2 1089 2 586 2 1013 2 589 2 34 2 853 2 446 2 36 6 274 2 596 4 278 2 597 2 450 2 600 6 284 2 1026 2 129 2 1203 2 1028 2 609 2 870 2 135 6 956 2 615 2 696 2 536 2 1208 4 785 2 461 2 67 2 703 6 626 2 464 2 878 2 1276 2 711 8 882 2 712 26 392 2 554 2 1285 4 394 2 1145 2 156 2 556 2 806 6 1293 2 722 2 406 26 1055 2 1056 4 1294 2 
109 2 
686 2 176 2 
319 4 1104 4 1262 2 1021 2 365 4 368 2 167 6 983 2 984 8 733 2 600 4 203 2 819 2 172 10 739 2 284 2 604 8 569 2 915 2 52 2 53 4 419 2 955 2 136 2 616 2 747 2 294 2 12 2 1127 2 750 4 960 2 1079 2 1239 4 837 2 217 2 1002 2 148 2 928 2 545 2 932 4 880 2 1242 2 673 2 192 2 262 6 1006 2 107 2 712 6 392 2 586 2 640 2 1285 2 198 2 642 4 803 2 941 6 1017 2 592 2 406 12 1054 2 
319 4 1104 4 1262 2 1021 2 365 4 368 2 167 8 983 2 984 8 733 2 600 4 203 2 819 2 172 10 739 2 284 2 691 2 1115 2 604 8 569 2 915 2 52 2 53 4 419 2 955 2 136 2 616 2 747 2 294 2 1126 2 1127 2 750 4 960 2 924 4 1079 2 1239 4 837 2 217 2 1002 2 148 2 928 2 545 2 880 2 932 4 1242 2 673 2 192 2 262 8 1006 2 712 6 107 2 392 2 586 2 640 2 1285 2 642 4 803 2 941 6 1017 2 592 2 406 12 1054 2 
960 2 319 2 1239 2 1104 2 217 2 368 2 52 2 642 4 1002 2 148 2 136 2 928 2 941 2 880 2 932 4 733 2 262 2 1054 2 
319 4 1104 4 1262 2 1021 2 365 4 368 2 167 6 983 2 984 4 733 2 600 4 203 2 819 2 172 6 739 2 284 2 691 2 604 4 569 2 52 2 53 4 419 2 955 2 136 2 616 2 747 2 294 2 12 2 1127 2 750 4 960 2 1079 2 1239 4 837 2 217 2 1002 2 148 2 928 2 545 2 932 4 880 2 1242 2 673 2 192 2 262 6 1006 2 107 2 712 6 392 2 586 2 640 2 1285 2 198 2 642 4 803 2 941 4 1017 2 592 2 406 12 1054 2 
319 4 1104 4 1262 2 1021 2 365 4 368 2 167 6 983 2 984 4 733 2 600 4 203 2 819 2 172 6 739 2 284 2 604 4 569 2 568 2 52 2 53 4 419 2 955 2 136 2 616 2 747 2 294 2 12 2 1127 2 750 4 960 2 1079 2 1239 4 837 2 217 2 1002 2 148 2 928 2 545 2 932 4 880 2 1242 2 673 2 192 2 262 4 1006 2 107 2 712 6 392 2 586 2 640 2 1285 2 198 2 642 4 803 2 941 6 1017 2 592 2 406 12 1054 2 
319 4 1104 4 1262 2 1021 2 365 4 368 2 167 6 983 2 984 8 733 2 600 4 203 2 819 2 172 6 739 2 284 2 604 4 569 2 915 2 52 2 53 4 419 2 955 2 136 2 616 2 747 2 294 2 12 2 1127 2 750 4 960 2 1079 2 1239 4 837 2 217 2 1002 2 148 2 928 2 545 2 932 4 880 2 1242 2 673 2 192 2 262 6 1006 2 107 2 712 6 392 2 586 2 640 2 1285 2 198 2 642 4 803 2 941 6 1017 2 592 2 406 12 1054 2 
319 4 1104 4 1262 2 1021 2 365 4 368 2 167 8 983 2 984 8 733 2 600 4 203 2 819 2 172 10 739 2 284 2 604 8 569 2 568 2 915 2 52 2 53 4 419 2 955 2 136 2 616 2 747 2 294 2 12 2 1127 2 750 4 960 2 1079 2 1239 4 837 2 217 2 1002 2 148 2 928 2 545 2 932 4 880 2 1242 2 673 2 192 2 262 6 1006 2 107 2 712 6 392 2 586 2 640 2 1285 2 198 2 642 4 803 2 941 8 1017 2 592 2 406 12 1054 2 
319 4 1104 4 1262 2 1021 2 365 4 368 2 167 6 983 2 984 8 733 2 600 4 203 2 819 2 172 10 739 2 284 2 604 8 569 2 915 2 52 2 53 4 419 2 955 2 136 2 616 2 747 2 294 2 12 2 1127 2 750 4 960 2 1079 2 1239 4 837 2 217 2 1002 2 148 2 928 2 545 2 932 4 880 2 1242 2 673 2 192 2 262 6 1006 2 107 2 712 6 392 2 586 2 640 2 1285 2 198 2 642 4 803 2 941 6 1017 2 592 2 406 12 1054 2 
319 4 167 12 983 2 326 6 485 1 984 2 986 2 169 2 819 2 988 4 172 2 495 4 823 2 1170 2 12 2 342 2 188 2 666 2 837 2 190 2 839 2 19 2 1002 2 673 2 192 2 1006 2 1181 2 196 2 1017 4 34 2 199 2 36 6 684 2 201 2 1021 2 365 4 42 6 368 2 688 2 1024 6 203 2 1026 2 870 2 52 2 53 6 696 2 536 2 1208 4 58 6 873 1 67 2 703 6 217 2 878 2 545 2 387 6 880 2 1039 2 220 1 711 4 224 6 712 24 392 2 554 4 393 10 394 2 396 2 718 1 556 2 406 46 1054 2 1055 2 1056 2 411 2 560 2 733 2 1066 2 90 2 91 6 739 4 415 2 246 6 568 4 569 2 94 2 419 2 920 2 921 2 746 6 747 2 250 8 750 8 429 7 100 2 1079 2 1239 4 1240 2 257 1 928 2 932 4 437 1 1242 4 1243 4 262 4 107 2 1089 2 586 2 1249 1 941 8 590 6 111 2 592 2 115 6 446 2 596 4 597 2 1262 4 1104 4 948 2 600 6 126 1 282 6 284 2 129 2 605 6 608 2 609 2 955 2 135 6 956 2 136 2 616 2 785 2 294 2 461 2 959 2 1127 2 960 2 962 6 626 2 464 2 1134 2 147 2 148 2 794 6 798 1 470 6 640 2 1285 4 156 12 642 4 803 2 1288 2 806 8 645 7 1293 2 978 2 476 2 1294 2 
411 2 560 2 319 4 167 12 326 6 983 2 984 6 986 2 733 2 169 2 988 4 819 2 1066 2 172 2 491 2 90 2 91 6 415 2 739 4 246 6 569 2 823 2 94 2 495 4 915 4 337 2 419 2 1170 2 921 2 920 2 746 6 747 2 250 8 12 2 750 8 100 2 342 2 666 2 188 2 1079 2 1239 4 1240 2 190 2 837 2 19 2 839 2 1002 2 928 2 932 4 1242 4 1243 4 673 2 262 8 192 2 1006 2 1089 2 107 2 1181 2 586 2 196 2 850 2 590 6 941 8 1017 4 111 2 592 2 34 2 199 2 115 6 446 2 36 6 684 2 201 2 596 4 597 2 1104 4 1262 4 42 6 365 4 1021 2 688 2 948 2 368 2 600 6 1024 6 203 2 282 6 1026 2 284 2 605 6 129 2 608 2 609 2 870 2 53 6 52 2 955 2 136 2 956 2 135 6 616 2 696 2 536 4 58 6 1208 4 294 2 785 2 461 4 959 2 1127 2 960 2 962 6 67 2 703 6 626 2 464 2 217 2 1134 2 147 2 878 2 148 2 387 6 545 2 880 2 1039 2 794 6 711 8 224 6 712 26 470 6 554 4 392 2 640 2 393 10 1285 4 396 2 394 2 156 12 642 4 803 2 1288 2 556 4 806 8 1293 2 978 2 406 48 476 2 1055 2 1054 2 1056 2 1294 2 
411 2 560 2 319 4 167 12 326 6 983 2 984 6 986 2 733 2 169 2 988 4 819 2 1066 2 172 6 491 2 90 2 91 6 415 2 739 4 246 6 569 2 823 2 94 2 495 4 915 4 337 2 419 2 1170 2 921 2 920 2 746 6 747 2 250 8 12 2 750 8 100 2 342 2 666 2 188 2 1079 2 1239 4 1240 2 190 2 837 2 19 2 839 2 1002 2 928 2 932 4 1242 4 1243 4 673 2 262 8 192 2 1006 2 1089 2 107 2 1181 2 586 2 196 2 850 2 590 6 941 8 1017 4 111 2 592 2 34 2 199 2 115 6 446 2 36 6 684 2 201 2 596 4 597 2 1104 4 1262 4 42 6 365 4 1021 2 688 2 948 2 368 2 600 6 1024 6 203 2 282 6 1026 2 284 2 605 6 129 2 604 4 608 2 609 2 870 2 53 6 52 2 955 2 136 2 956 2 135 6 616 2 696 2 536 4 58 6 1208 4 294 2 785 2 461 4 959 2 1127 2 960 2 962 6 67 2 703 6 626 2 464 2 217 2 1134 2 147 2 878 2 148 2 387 6 545 2 880 2 1039 2 794 6 711 8 224 6 712 26 470 6 554 4 392 2 640 2 393 10 1285 4 396 2 394 2 156 12 642 4 803 2 1288 2 556 4 806 8 1293 2 978 2 406 48 476 2 1055 2 1054 2 1056 2 1294 2 
319 4 167 16 983 2 326 6 984 6 986 2 169 2 819 2 988 4 172 6 491 2 328 2 495 4 823 2 337 2 1170 2 12 2 342 2 188 2 666 2 837 2 190 4 839 2 19 2 1002 2 673 2 1179 2 192 2 1006 2 1181 2 196 2 850 2 1017 4 34 2 199 2 36 8 684 2 201 2 1021 2 365 4 42 12 368 2 688 2 1024 6 203 2 530 6 1026 2 691 2 870 2 52 2 53 6 696 2 536 4 1208 6 58 6 67 4 703 6 217 2 878 2 545 2 387 6 880 2 711 10 224 6 712 24 71 6 392 2 554 4 555 2 393 8 394 2 230 2 396 2 894 6 556 4 406 52 1054 2 897 2 1055 2 1056 4 411 2 560 2 733 2 566 2 1066 2 90 2 91 12 739 4 415 2 246 6 568 2 569 2 94 2 915 4 419 2 920 2 921 2 746 12 747 2 250 8 750 8 100 2 1079 2 1239 4 1240 2 928 2 932 4 1242 4 1243 4 262 10 758 2 107 2 1089 2 586 2 266 6 941 10 590 12 111 2 592 2 115 6 446 2 596 4 597 2 1262 4 1104 4 948 2 600 6 282 6 284 2 604 4 129 4 605 12 453 2 608 2 609 2 955 2 135 8 956 4 136 2 1121 6 616 2 785 2 294 2 461 4 959 2 1127 2 960 2 962 6 626 2 464 2 1134 2 147 2 148 2 794 12 468 6 470 6 640 2 1285 4 156 10 642 4 312 6 803 2 313 6 1288 2 977 6 806 12 1293 2 978 2 476 2 1294 2 
960 2 319 4 1239 4 1262 2 365 2 1021 2 217 2 368 2 167 4 545 2 984 6 880 2 932 2 733 2 203 2 819 2 192 2 262 6 1006 2 172 4 604 4 640 2 915 2 53 2 52 2 642 2 419 2 941 6 592 2 294 2 12 2 406 4 1054 2 750 2 1127 2 
319 4 167 4 983 2 984 6 733 2 819 2 1066 2 1067 2 172 2 915 2 419 2 920 2 747 2 12 2 750 2 100 2 1079 2 188 2 997 3 1239 4 580 2 932 2 1242 4 1243 4 673 2 262 6 192 2 1006 2 107 2 1089 2 586 2 941 6 33 2 592 2 34 2 446 2 36 6 1100 2 596 4 597 2 1262 2 365 2 1021 2 368 2 600 6 45 2 1266 2 203 2 284 2 1026 2 129 3 609 2 870 2 53 2 52 2 135 6 956 3 696 2 1208 4 294 2 785 2 1127 2 960 2 703 6 626 2 464 2 217 2 878 2 545 2 880 2 1039 2 1136 2 712 24 887 2 392 2 554 2 640 2 393 2 1285 4 1143 2 394 2 156 4 642 2 806 8 1293 2 406 28 1054 2 1056 3 1294 2 
545 2 133 2 1006 2 
545 2 133 2 1006 2 
728 2 238 2 319 4 239 4 167 16 983 2 984 6 988 2 820 2 1066 2 490 2 172 6 415 2 739 4 569 2 568 4 823 2 495 2 915 4 339 2 920 2 422 2 747 2 750 4 100 2 1079 2 188 2 1239 4 18 2 346 2 928 2 932 2 843 4 1242 4 1243 4 262 12 1006 6 107 2 1089 2 1010 2 586 2 197 2 1183 2 941 12 1017 2 34 2 592 2 446 2 36 2 596 4 597 2 1104 4 1262 4 365 2 600 6 282 2 284 2 1026 2 691 4 604 4 133 2 608 2 1268 2 870 2 53 4 52 2 56 2 955 2 136 2 135 2 1205 2 458 2 696 2 536 4 785 2 294 2 1124 2 461 4 1274 2 703 6 626 2 464 2 385 4 217 2 878 2 545 4 880 4 711 4 712 16 392 2 554 6 393 2 1285 4 394 2 156 4 642 2 803 2 556 4 806 2 1293 2 406 24 1055 4 1056 2 1294 2 
686 2 238 2 393 2 1240 2 156 2 1022 2 148 2 282 2 1124 2 988 2 820 2 107 2 712 2 406 4 117 2 225 2 1181 2 
728 2 238 2 319 4 239 4 167 16 983 2 984 6 412 2 820 2 1066 2 490 2 172 6 415 2 739 4 569 2 568 4 823 2 495 2 915 4 339 2 920 2 747 2 750 4 100 2 834 2 1079 2 188 2 1239 4 928 2 932 2 843 4 1242 4 512 2 1243 4 262 12 1006 6 107 2 1089 2 1010 2 586 2 197 2 1183 4 941 12 1017 4 34 2 592 2 446 2 36 2 596 4 597 2 1104 4 1262 4 365 2 600 6 282 2 284 2 1026 2 691 4 604 4 607 2 133 2 608 2 1268 2 870 2 53 4 52 2 56 2 955 2 136 2 135 2 1205 2 616 2 696 2 536 4 785 2 294 2 1124 2 461 4 1274 2 703 6 626 2 464 2 385 4 217 2 878 2 545 4 880 4 711 4 712 16 152 2 392 2 554 6 1285 4 394 2 156 2 642 2 803 2 556 4 806 2 1293 2 406 24 1055 4 1056 4 1294 2 
318 2 728 2 238 2 319 4 239 4 167 16 983 2 241 2 984 6 1065 2 988 2 820 2 1066 2 490 2 172 6 415 2 739 4 569 2 568 4 823 2 495 2 915 4 339 2 920 2 747 2 750 4 100 2 1079 2 188 2 1239 4 928 2 932 2 843 4 1242 4 1243 4 262 12 1006 6 107 2 1089 2 1010 2 586 2 197 2 1183 2 941 12 1017 4 34 2 592 2 446 2 36 2 276 2 596 4 597 2 1104 4 1262 4 365 2 280 2 600 6 282 2 284 2 1026 2 691 4 604 4 133 2 608 2 1268 2 870 2 53 4 52 2 56 2 955 2 136 2 135 2 1205 2 616 2 696 2 536 4 785 2 294 2 1124 2 461 4 1274 2 703 6 626 2 464 2 385 4 217 2 878 2 545 4 880 4 711 4 712 16 392 2 554 6 393 2 1285 4 394 2 156 4 642 2 803 2 556 4 806 2 1293 2 406 24 1055 4 1056 2 1294 2 
979 2 321 4 322 2 649 2 0 2 1 2 650 26 3 2 981 2 653 2 983 2 656 2 4 2 5 42 327 2 6 22 658 2 328 2 8 4 333 2 332 8 660 22 336 2 338 2 10 4 662 2 992 2 993 2 15 2 342 2 666 2 665 2 997 2 16 12 17 2 343 2 998 10 668 1 669 2 1000 2 1001 2 21 2 20 22 1004 54 671 110 1005 2 350 2 24 6 26 2 351 2 27 2 677 24 29 2 352 2 1014 2 353 2 1013 3 357 16 31 2 1015 20 32 2 1016 2 359 4 33 2 679 2 34 4 1019 4 683 14 361 26 37 2 36 26 684 2 362 2 685 2 41 1 687 2 367 2 1023 2 689 2 44 2 45 2 370 2 690 2 46 2 1026 8 47 1 48 3 49 2 1027 2 50 2 373 2 1029 24 375 8 376 10 54 2 55 2 1030 3 1031 1 57 2 695 4 1032 110 1033 2 696 4 697 2 61 2 62 4 1036 2 699 26 698 2 63 4 64 2 700 2 380 2 68 4 381 44 701 2 67 46 702 2 69 8 1038 2 703 14 70 1 704 2 384 2 706 1 708 26 388 2 710 2 1041 2 711 198 389 2 1042 22 712 72 391 3 1045 2 72 2 713 2 714 20 392 2 1046 2 395 2 394 6 399 2 1048 22 76 2 1049 16 77 2 720 2 719 2 1051 26 80 22 401 48 81 2 721 2 405 1 406 119 1055 10 1056 76 82 2 724 4 409 4 1057 4 1058 8 1060 4 85 2 84 24 1061 6 86 2 1064 1 734 2 88 2 413 2 738 2 1068 2 1069 2 740 2 94 2 741 2 1070 2 417 2 95 2 1073 2 744 2 1074 2 96 2 1075 2 97 2 745 3 421 3 98 2 747 2 423 2 424 2 99 2 748 2 1078 2 100 6 1080 2 1079 2 430 2 1081 2 101 2 433 2 752 26 753 2 103 3 1084 2 104 2 1085 2 436 114 105 2 756 2 438 2 107 2 1089 8 759 1 1091 22 1092 2 762 2 1093 196 764 26 108 2 765 2 1095 2 110 2 1096 84 1097 2 442 8 444 2 114 1 116 48 446 2 768 2 767 4 769 2 1099 6 770 2 771 2 447 2 1101 2 119 2 1103 3 774 2 120 2 449 3 775 3 124 2 1105 4 123 2 1108 4 1109 2 451 1 778 10 1114 240 1117 2 1116 10 129 46 453 2 780 12 131 4 1118 2 132 2 455 8 456 2 781 22 783 2 134 2 784 2 135 14 138 2 786 2 460 2 462 22 139 2 140 2 141 2 1130 26 1131 3 1132 12 142 2 143 2 789 10 144 2 145 2 1134 2 146 26 792 2 465 1 793 6 149 2 150 2 796 12 1136 2 1137 48 1138 2 1139 18 799 2 1140 6 1141 3 800 2 801 2 472 3 1144 8 155 2 1146 2 156 4 804 2 157 3 1147 10 805 3 806 98 807 2 158 2 808 2 475 2 477 26 478 2 1151 2 162 2 1153 2 1154 2 163 2 482 2 166 2 483 26 812 9 816 22 1156 2 169 4 1157 2 818 4 170 6 1160 2 493 2 1161 2 1162 2 173 2 1164 42 1166 2 496 4 1167 2 1168 4 177 2 178 58 497 12 824 2 179 2 1170 14 180 2 1171 48 500 2 1172 22 826 2 828 7 1173 2 183 2 833 2 188 2 1174 12 190 62 505 4 191 2 842 16 841 30 840 6 1176 78 508 8 507 48 509 2 511 6 513 2 1178 2 1177 2 1179 2 844 2 845 162 194 14 516 2 517 2 195 10 519 14 520 2 196 14 847 2 523 5 1184 2 852 2 853 2 199 2 525 2 857 2 1186 2 1187 12 526 2 528 36 201 2 1191 2 861 2 862 26 529 3 1195 52 865 2 1197 2 867 4 868 4 1200 2 204 2 1202 2 531 2 1204 2 870 2 205 2 533 2 534 4 1206 2 1207 2 1208 12 1209 4 874 2 537 2 209 2 875 2 212 52 538 2 214 2 215 18 542 54 544 74 878 2 219 3 879 2 1212 4 221 2 548 48 223 14 1216 2 883 2 884 2 1217 3 1218 2 1219 2 552 1 553 2 226 16 554 2 228 2 890 22 891 3 555 2 1222 2 229 6 230 2 1223 10 231 6 1224 16 232 2 893 2 558 2 557 2 896 2 1226 2 897 4 1227 2 236 7 898 16 237 18 560 2 899 2 561 2 564 1 903 2 902 2 904 2 905 2 906 22 1231 2 242 2 566 2 909 2 1233 4 910 2 245 24 247 2 914 2 570 3 571 2 248 2 572 122 919 2 574 48 920 4 252 2 577 2 578 2 579 2 254 48 580 2 926 2 255 2 256 6 1241 2 258 16 927 2 259 6 931 2 933 2 582 2 260 2 1242 6 1243 6 261 102 1244 2 263 2 936 2 937 8 938 14 264 22 586 2 265 2 1247 3 589 2 267 2 268 4 269 3 942 2 1252 4 1255 15 273 4 943 2 1257 48 593 2 944 2 594 2 945 96 278 2 596 6 279 2 948 2 950 26 599 2 1265 26 600 8 602 5 284 2 951 15 287 38 952 24 289 4 1269 18 290 2 609 2 611 8 612 2 291 22 956 16 613 2 615 2 958 4 1271 2 293 10 620 2 1272 3 621 3 622 18 623 2 624 1 300 8 626 2 627 2 628 2 302 38 303 4 304 2 1276 2 1277 2 629 2 306 2 1278 4 307 2 1279 2 309 2 632 2 969 2 634 2 635 2 970 2 637 3 1283 52 638 2 641 52 1285 6 975 18 644 2 976 2 1290 2 1289 2 316 2 646 4 1294 2 648 2 
67 6 899 2 789 4 753 2 1023 2 879 2 438 2 712 2 129 2 638 2 741 2 1223 2 609 2 1147 2 956 2 135 2 806 2 1208 2 827 2 406 2 1226 2 36 2 621 2 1056 2 
67 6 899 2 789 4 753 2 1023 2 879 2 438 2 712 2 129 2 638 2 741 2 1223 2 609 2 1147 2 956 2 135 2 806 2 1208 2 827 2 406 2 1226 2 36 2 621 2 1056 2 
67 6 899 2 789 4 753 2 1023 2 879 2 438 2 712 2 129 2 638 2 741 2 1223 2 609 2 1147 2 956 2 135 2 806 2 1208 2 827 2 406 2 1226 2 36 2 621 2 1056 2 
858 2 1229 2 16 2 1174 2 256 2 982 4 1133 2 302 2 840 2 84 3 879 2 436 2 511 2 261 6 6 4 1042 4 712 4 1044 2 585 2 1233 2 1234 3 129 3 471 2 890 4 780 2 677 3 229 2 457 2 1029 6 609 2 231 4 497 2 80 4 806 2 766 2 406 10 647 2 646 2 1056 3 237 4 
858 2 1229 2 982 4 84 2 6 4 1233 2 1234 2 129 2 780 2 1029 4 457 2 609 2 497 2 293 2 16 2 1174 2 256 2 302 2 1133 2 840 2 436 2 879 2 793 2 511 2 261 6 712 4 1042 4 1044 2 585 2 800 2 471 2 890 4 677 2 229 2 231 4 80 4 806 2 766 2 406 10 646 2 647 2 1056 2 237 4 
858 2 1229 2 982 4 84 2 6 4 1233 2 1234 2 129 2 780 2 1029 4 457 2 609 2 497 2 293 2 16 2 1174 2 256 2 302 2 1133 2 840 2 436 2 879 2 793 2 511 2 261 6 712 4 1042 4 1044 2 585 2 800 2 471 2 890 4 677 2 229 2 231 4 80 4 806 2 766 2 406 10 646 2 647 2 1056 2 237 4 
858 2 1229 2 982 4 84 2 6 4 1233 2 1234 2 129 2 780 2 1029 4 457 2 609 2 497 2 293 2 16 2 1174 2 256 2 302 2 1133 2 840 2 436 2 879 2 793 2 511 2 261 6 712 4 1042 4 1044 2 585 2 800 2 471 2 890 4 677 2 229 2 231 4 80 4 806 2 766 2 406 10 646 2 647 2 1056 2 237 4 
858 2 1229 2 982 4 84 2 6 4 1233 2 1234 2 129 2 780 2 1029 4 457 2 609 2 497 2 293 4 16 2 1174 2 256 2 302 2 1133 2 840 2 436 2 879 2 793 4 511 2 261 6 712 4 1042 4 1044 2 585 2 800 4 471 2 890 4 677 2 229 2 231 4 80 4 806 2 766 2 406 10 646 2 647 2 1056 2 237 4 
869 2 210 2 63 2 866 2 1267 2 815 2 
454 2 520 2 178 2 782 2 838 2 705 2 1267 2 
1020 2 299 2 563 2 1210 2 1230 1 154 2 693 1 1149 1 487 2 378 2 23 1 22 2 390 2 821 2 445 2 712 8 406 10 575 2 515 1 284 2 995 2 
702 2 835 2 16 6 981 2 202 2 256 6 840 6 259 4 793 4 511 6 1215 2 170 4 712 6 1233 2 800 4 780 6 496 2 455 2 229 6 1029 15 762 2 231 4 497 6 1252 2 293 4 427 2 406 6 767 2 237 12 362 2 
989 2 890 2 164 4 947 2 301 7 1082 2 1094 2 125 2 80 2 1263 1 871 2 1108 2 757 2 6 2 406 1 712 1 1159 2 1098 2 
989 2 890 2 164 4 947 4 301 6 1082 2 1094 2 125 2 80 2 871 2 1108 4 757 4 6 2 1159 2 1098 2 
989 2 890 2 164 4 947 8 301 10 1082 8 1094 2 125 2 80 2 1263 1 871 6 1108 8 757 8 6 2 406 1 712 1 1159 2 1098 2 
989 2 890 2 164 2 947 2 301 2 1094 2 125 2 80 2 1108 2 757 2 6 2 1159 2 1098 2 
480 4 562 6 1155 42 320 2 652 6 87 2 489 4 908 4 243 4 1158 2 1232 6 92 6 1169 12 1236 6 825 6 920 10 499 12 749 2 251 6 100 20 184 2 185 6 751 2 347 4 435 2 755 6 1243 42 349 2 106 4 1008 6 521 8 849 2 522 2 940 6 360 12 678 6 112 2 851 12 34 10 855 6 38 2 1259 1 1101 2 596 36 364 6 277 6 773 2 949 1 864 4 776 6 283 6 452 1 372 4 692 6 130 6 288 2 779 2 459 2 617 22 696 4 1123 6 1035 12 539 6 296 1 1128 12 701 2 1037 13 876 12 963 6 382 2 625 2 703 88 218 2 792 2 1211 2 308 6 709 4 712 78 633 6 1043 6 639 6 888 6 1142 4 716 6 394 20 398 12 311 12 75 4 973 4 78 6 400 3 315 6 406 90 1053 6 1228 2 
1260 2 1101 2 1155 6 364 2 596 20 730 2 773 2 2 2 811 2 654 2 1062 2 87 2 1106 2 776 2 987 2 1025 2 1196 2 489 38 283 2 777 2 737 2 7 2 659 2 452 2 1199 2 335 2 912 2 130 2 174 2 1122 4 696 2 920 2 1123 2 618 2 1035 4 829 2 60 2 428 2 501 2 13 2 14 4 100 3 996 2 994 2 1129 2 186 2 751 4 1128 4 1037 2 701 2 876 4 703 45 218 2 792 2 1003 2 435 2 966 2 546 2 222 2 1243 20 968 2 349 2 469 4 633 2 712 44 1043 2 1008 2 886 2 151 2 28 2 1246 2 676 2 1047 2 889 6 73 2 153 2 398 2 394 3 521 6 74 2 311 2 358 4 524 2 678 2 34 2 443 2 402 2 315 2 855 2 406 46 407 2 479 2 
480 4 562 4 727 8 1155 24 652 4 325 4 985 4 168 2 817 4 489 14 243 4 908 4 1158 2 492 2 1232 4 911 4 92 4 1169 14 825 4 920 6 499 24 749 4 829 10 251 4 100 30 994 2 751 2 185 8 432 16 347 4 435 2 510 4 1243 44 106 4 349 2 1008 4 1180 4 521 6 522 2 940 4 360 8 678 4 680 2 112 4 851 24 1018 2 34 6 113 32 35 8 855 6 1258 2 1260 2 363 2 1101 2 596 36 364 4 277 4 773 2 864 4 776 4 283 4 372 4 288 2 130 4 779 2 954 4 617 30 696 2 1123 4 1035 10 539 4 1129 10 1128 10 1037 10 701 2 876 10 963 16 382 2 703 104 218 2 792 2 1211 4 966 2 709 4 308 4 712 70 633 4 1043 4 310 8 1142 4 639 4 888 4 73 10 716 4 398 6 394 28 972 8 75 4 311 10 973 4 78 8 400 8 233 16 402 2 315 4 406 78 1053 4 
1260 2 1101 2 1155 8 320 2 596 14 364 2 773 2 776 2 1196 2 489 14 283 4 659 2 452 2 288 2 130 2 617 6 696 2 920 2 1123 2 1035 6 749 4 296 2 463 2 100 12 994 2 184 2 1128 6 751 2 701 2 1037 2 876 6 625 10 703 40 218 2 792 2 305 2 435 2 1211 2 1087 2 1243 14 349 2 712 26 633 4 1043 4 1008 4 521 4 394 12 398 2 473 2 311 2 400 6 678 4 112 2 34 2 315 4 855 2 406 28 38 2 1259 2 
791 2 

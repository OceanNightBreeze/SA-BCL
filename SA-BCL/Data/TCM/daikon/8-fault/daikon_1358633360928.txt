#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V ERROR java.lang.NullPointerException 767 215 
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 554 219 1101 82 1050 131 439 275 442 598 673 1035 610 946 160 363 1086 284 681 518 885 568 1168 762 218 24 753 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V ERROR java.lang.NullPointerException 767 95 
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V ERROR java.lang.NullPointerException 767 1150 
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_intersection()V ERROR java.lang.NullPointerException 767 688 
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V ERROR java.lang.NullPointerException 706 288 
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V ERROR java.lang.NullPointerException 706 288 
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V ERROR java.lang.NullPointerException 706 545 (358,1065) 553 (192,1170) (358,1065) 612 (192,1170) 370 28 
daikon.test.diff.DiffTester:testInvs1Invs2()V ERROR java.lang.NullPointerException 706 545 (358,1065) 553 (192,1170) (358,1065) 612 (192,1170) 370 28 
daikon.test.diff.DiffTester:testInvs1Invs3()V ERROR java.lang.NullPointerException 706 545 (358,1065) 553 (192,1170) (358,1065) 612 (192,1170) 370 28 
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V FAILED junit.framework.ComparisonFailure 
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException 179 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NullPointerException 179 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 947 1046 385 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:jj_3R_125()Z
daikon.Quant:eltwiseLT([I)Z
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.simplify.LemmaStack:noticeInt(J)V
utilMDE.Intern:intern([J)[J
daikon.PptTopLevel:getInvariants()Ljava.util.List;
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
utilMDE.FuzzyFloat:gt(DD)Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:concat([I[I)[I
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.ModBitTracker:split(I)I
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_55()Z
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
utilMDE.MathMDE:mod_positive(JJ)J
daikon.Quant:lte(II)Z
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.ProglangType:isIntegral()Z
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:jj_scan_token(I)Z
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
utilMDE.ArraysMDE:sum([[I)I
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.Debug:logOn()Z
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.PptName:PptName(Ljava.lang.String;)V
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
jtb.JavaParser:jj_3_36()Z
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_122()Z
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:setDiff([I[I)[I
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptSlice1:arity()I
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.ProglangType:isFloat()Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
jtb.syntaxtree.NodeList:NodeList()V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.Quant:sameLength([I[I)Z
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.FuzzyFloat:indexOf([D[D)I
utilMDE.FuzzyFloat:eq(DD)Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.Quant:eltwiseGT([I)Z
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.Quant:eltsGT([II)Z
daikon.diff.DetailedStatisticsVisitor:freq(II)D
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
utilMDE.MathMDE:sign(I)I
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
jtb.JavaParser:jj_3R_87()Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:eltsEqualIndex([I)Z
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE:missing_numbers([I)[I
daikon.ValueTuple:isMissing(I)Z
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3_1()Z
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.ProglangType:baseIsFloat()Z
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
utilMDE.ArraysMDE:max([I)I
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_69()Z
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
jtb.JavaCharStream:backup(I)V
utilMDE.FuzzyFloat:lte(DD)Z
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.VarInfoName.Elements:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_2_5(I)Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quant:lexGTE([I[I)Z
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:pairwiseLT([I[I)Z
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.diff.Node:Node(LutilMDE.Pair;)V
utilMDE.WeakHasherMap:processQueue()V
jtb.JavaParser:jj_3R_117()Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.PptTopLevel:name()Ljava.lang.String;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
utilMDE.Intern:internSubsequence([III)[I
jtb.JavaParser:jj_2_3(I)Z
jtb.JavaParser:jj_3R_121()Z
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
utilMDE.Intern:intern([D)[D
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.diff.RootNode:RootNode()V
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
jtb.JavaParser:jj_3R_161()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:subsetOf([D[D)Z
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.Quant:eltsGTE([II)Z
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
utilMDE.ArraysMDE:sum([I)I
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.ProglangType:dimensions()I
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:memberOf(F[D)Z
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
jtb.JavaParser:jj_3R_85()Z
daikon.Quant:memberOf(I[I)Z
jtb.JavaParser:jj_3R_54()Z
jtb.JavaParser:jj_3R_96()Z
jtb.JavaParser:jj_3R_61()Z
jtb.JavaParser:jj_ntk()I
daikon.Quantify.IOAQuantification:getFreeVar(I)Ldaikon.Quantify.Term;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
utilMDE.Intern:intern([I)[I
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3_35()Z
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_2_15(I)Z
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
daikon.Quant:eltwiseEqual([I)Z
jtb.Token:newToken(I)Ljtb.Token;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
utilMDE.ArraysMDE:indexOf([ZZ)I
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.Quant:gt(II)Z
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
daikon.Quant:subsetOf([S[S)Z
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.Quant:eq(FF)Z
utilMDE.ArraysMDE:fn_identity(I)[I
utilMDE.ArraysMDE:sorted([I)Z
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
jtb.JavaParser:jj_3R_118()Z
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
jtb.syntaxtree.NodeToken:trimSpecials()V
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([J)Z
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
utilMDE.ArraysMDE:min([I)I
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE:gcd(II)I
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.LimitedSizeIntSet:add(I)V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
utilMDE.MathMDE:gcd([I)I
utilMDE.FuzzyFloat:set_rel_diff(D)V
jtb.JavaParser:jj_3R_62()Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.Quant:eltsEqual([II)Z
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.ProglangType:baseIsIntegral()Z
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.Intern:numIntArrays()I
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.filter.ObviousFilter:ObviousFilter()V
jtb.JavaParser:jj_3_28()Z
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
jtb.JavaCharStream:getBeginColumn()I
daikon.ModBitTracker:num_vars()I
daikon.inv.unary.LowerBoundCore:calc_range()J
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V | STATEMENT | 8634 | stmt -> ;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
jtb.JavaParser:jj_2_10(I)Z
daikon.Quant:lexLT([I[I)Z
daikon.Quant:eltsLT([II)Z
daikon.VarInfo:new_ppt()V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.Positive:enabled()Z
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.test.InvariantFormatTester:execute()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
daikon.ModBitTracker:num_samples()I
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.WeakIdentityHashMap:indexFor(II)I
jtb.JavaParser:jj_2_21(I)Z
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.inv.Invariant:isWorthPrinting()Z
utilMDE.MathMDE:pow_fast(II)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.FuzzyFloat:ne(DD)Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.Quant:pairwiseSquare([I[I)Z
daikon.diff.Node:Node()V
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_50()Z
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
daikon.Quant:eltwiseGTE([I)Z
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
daikon.Quant:pairwiseDivides([I[I)Z
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.inv.Invariant:prob_and(DD)D
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
jtb.JavaCharStream:readChar()C
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eq(II)Z
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
jtb.JavaParser:jj_3R_52()Z
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
jtb.JavaParser:jj_3R_48()Z
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ValueTuple:isMissingFlow(I)Z
jtb.JavaParser:jj_3R_124()Z
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.Ppt:Ppt()V
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.test.FormatTestCase.SingleOutputTestCase:getDiffString()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.Quant:eq(DD)Z
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.Quant:isReverse([I[I)Z
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.Quant:eltsNotEqualIndex([I)Z
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3_16()Z
utilMDE.MathMDE:pow(II)I
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_53()Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3_25()Z
daikon.Quant:pairwiseGT([I[I)Z
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
jtb.JavaParser:jj_3R_97()Z
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.VarComparabilityImplicit:alwaysComparable()Z
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.Quant:lexLTE([I[I)Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_123()Z
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.Quant:eltsLtIndex([I)Z
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
jtb.JavaParser:jj_2_36(I)Z
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_63()Z
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.Quant:memberOf(J[J)Z
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.Quant:ne(II)Z
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression; | CONDITION | 83870 | if (x) -> if (!x)
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.Quant:eltsLteIndex([I)Z
jtb.JavaParser:jj_3R_77()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_2_12(I)Z
daikon.ValueTuple:isMissingNonsensical(I)Z
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
utilMDE.OrderedPairIterator:setnext1()V
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:gte(DD)Z
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
jtb.JavaCharStream:BeginToken()C
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3_3()Z
daikon.Quant:subsetOf([F[D)Z
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:gcd_differences([I)I
daikon.Quant:eq(JJ)Z
daikon.Quant:eltsGtIndex([I)Z
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3_4()Z
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.Quant:setEqual([I[I)Z
utilMDE.MathMDE:negate(I)I
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.Quant:lexEqual([I[I)Z
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_76()Z
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:simplify_name()Ljava.lang.String;
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:pairwiseEqual([I[I)Z
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_29()Z
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3_13()Z
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.PptName:isEnterPoint()Z
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
jtb.JavaParser:jj_3_21()Z
jtb.JavaParser:jj_3R_119()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel; | RETURN | 571 | return null
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
jtb.JavaParser:jj_3R_162()Z
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.VarInfoName:ioa_name()Ljava.lang.String;
daikon.VarInfo:name()Ljava.lang.String;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.filter.InvariantFilters:InvariantFilters()V
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.inv.Invariant:logDetail()Z
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltwiseNotEqual([I)Z
daikon.PptName:isCombinedExitPoint()Z
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.Quant:intersection([I[I)[I
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_2_1(I)Z
jtb.JavaParser:jj_3R_57()Z
daikon.inv.ValueSet:ValueSet(I)V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z | ASSIGN | 37734 | = null
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.Quantify.IOAQuantification:getMembershipRestriction(I)Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ProglangType:baseIsScalar()Z
daikon.Quant:memberOf(S[S)Z
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
jtb.JavaParser:jj_2_25(I)Z
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_2_4(I)Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.Quant:gte(II)Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.MathMDE:nonmodulus_strict([I)[I
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.Quant:subsetOf([J[J)Z
jtb.JavaCharStream:ReadByte()C
jtb.JavaParser:jj_3R_133()Z
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
utilMDE.ArraysMDE:sum([D)D
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
jtb.JavaParser:jj_3R_88()Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.Quant:eltsLTE([II)Z
utilMDE.ArraysMDE:subarray([III)[I | ASSIGN | 29404 | = null
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.Quant:subsetOf([D[F)Z
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
jtb.JavaParser:jj_3R_86()Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.Quant:union([I[I)[I
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParser:jj_3_22()Z
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ModBitTracker:ModBitTracker(I)V
utilMDE.ArraysMDE:isSubarray([I[II)Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ValueTuple:size()I
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.VarInfo:esc_name()Ljava.lang.String;
utilMDE.ArraysMDE:min_max([I)[I
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:element_range([I)I
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.NonZero:is_pointer()Z
jtb.JavaParser:jj_3R_114()Z
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3_10()Z
jtb.JavaParser:jj_3R_60()Z
utilMDE.LimitedSizeIntSet:size()I
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptSlice0:initInvariantsSeen()V
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_134()Z
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.Quant:memberOf(D[F)Z
utilMDE.MathMDE:modulus([I)[I
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltsGteIndex([I)Z
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
jtb.JavaParser:jj_3R_163()Z
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
utilMDE.ArraysMDE:sum([[D)D
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_81()Z
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
jtb.JavaParser:jj_3R_56()Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
jtb.JavaParser:jj_3R_89()Z
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.filter.InvariantFilter:InvariantFilter()V
utilMDE.Assert:assertTrue(Z)V
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:eltsNotEqual([II)Z
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:pairwiseNotEqual([I[I)Z
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_67()Z
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.VarInfoName:isLiteralConstant()Z
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.inv.Invariant:logOn()Z
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.VarInfo:relate_var()V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.Quant:pairwiseLTE([I[I)Z
utilMDE.WeakHasherMap.EntrySet:size()I
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
jtb.JavaParser:jj_2_16(I)Z
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:dbc_name()Ljava.lang.String; | RETURN | 99658 | return null
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaCharStream:getEndColumn()I
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.diff.InvMap:InvMap()V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
jtb.JavaParser:jj_3R_120()Z
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.Quant:subsetOf([B[I)Z
jtb.JavaParser:jj_3R_51()Z
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.ProglangType:isScalar()Z
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
jtb.JavaParser:jj_3_30()Z
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.PptSlice0:arity()I
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
daikon.test.FormatTestCase:passes()Z
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Invariant:prob_and(DDD)D
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
utilMDE.Options.OptionInfo:argument_required()Z
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.VarInfoName:esc_name()Ljava.lang.String;
utilMDE.FuzzyFloat:lt(DD)Z
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.Quant:subsetOf([F[F)Z
utilMDE.ArraysMDE:noDuplicates([I)Z
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:memberOf(F[F)Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Invariant:prob_or(DD)D
daikon.diff.PrintAllVisitor:bufPrintln()V
jtb.JavaParser:jj_3R_49()Z
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.Debug:logDetail()Z
daikon.Quant:lexGT([I[I)Z
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
jtb.JavaParser:jj_3_5()Z
jtb.JavaParser:jj_2_14(I)Z
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_75()Z
daikon.VarInfo:isPointer()Z
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.ModBitTracker:num_sets()I
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
utilMDE.SimpleLog.LongVal:LongVal(J)V
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.VarInfoName:name()Ljava.lang.String;
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.Quant:subsetOf([I[I)Z
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.MathMDE:gcd(JJ)J
daikon.PptSlice2:arity()I
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
jtb.JavaParser:jj_3_12()Z
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.ProglangType:isPseudoArray()Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
utilMDE.ArraysMDE:indexOf([II)I
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.Quant:eltwiseLTE([I)Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
utilMDE.ArraysMDE:indexOf([I[I)I
jtb.JavaParser:jj_3R_126()Z
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.Quant:noDups([I)Z
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3_15()Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.test.FormatTestCase:getDiffString()Ljava.lang.String;
jtb.JavaParser:jj_3R_58()Z
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_135()Z
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_68()Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
utilMDE.OrderedPairIterator:setnext2()V
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
jtb.JavaParser:jj_2_13(I)Z
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.SimpleLog:SimpleLog(Z)V
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
jtb.JavaParser:jj_3R_148()Z
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
jtb.JavaParser:jj_3_14()Z
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
jtb.JavaParser:jj_3_27()Z
jtb.JavaParser:jj_3R_116()Z
daikon.inv.Invariant:getConfidence()D
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
utilMDE.OrderedPairIterator:hasNext()Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
utilMDE.Intern:internStrings([Ljava.lang.String;)V
jtb.JavaParser:jj_3R_47()Z
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
utilMDE.MathMDE:mod_positive(II)I
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
jtb.JavaCharStream:FillBuff()V
daikon.PptSlice1:num_samples()I
utilMDE.WeakHasherMap:size()I
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:hashCode()I
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.Quant:lexNotEqual([I[I)Z
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.ProglangType:isPointerFileRep()Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.ProglangType:isArray()Z
daikon.Quant:lt(II)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.Quant:concat([I[I)[I
jtb.JavaParser:jj_3R_115()Z
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.Invariants:Invariants()V
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Invariant:justified()Z
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.Quantify.IOAQuantification:getQuantifierExp()Ljava.lang.String;
daikon.Quant:slice([III)[I
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:isSubset([D[D)Z
jtb.JavaCharStream:getEndLine()I
jtb.JavaCharStream:getBeginLine()I
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_80()Z
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:jj_2_35(I)Z
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
823 4 331 2 575 2 544 2 991 2 520 2 872 2 9 2 55 2 
893 2 840 2 695 6 312 2 1120 2 576 6 509 2 1102 2 1000 2 634 2 1069 6 
948 4 684 6 310 2 410 2 749 2 991 2 495 6 872 2 185 6 399 6 660 2 633 4 533 2 
202 2 348 2 667 2 215 2 991 2 1121 6 872 2 999 2 77 6 880 2 723 2 767 2 504 6 87 2 736 8 276 4 341 2 1103 9 891 2 662 4 514 6 416 2 
151 6 248 4 
1117 2 
202 2 899 2 345 2 667 2 348 2 247 2 456 2 1115 2 492 2 1121 2 77 2 880 2 504 4 87 2 23 2 276 2 736 4 412 2 1103 6 662 2 416 2 855 2 514 2 
77 8 202 4 880 4 786 2 926 4 246 6 846 4 1154 2 87 4 253 6 341 2 736 12 1121 8 1103 14 662 5 416 4 514 8 
132 2 600 4 519 2 925 2 1110 14 489 2 1112 4 458 4 906 4 392 4 703 2 178 62 752 2 142 2 291 2 997 2 614 2 113 4 357 2 329 10 572 2 799 4 573 10 618 4 221 4 472 2 808 4 724 2 334 2 1161 4 408 2 270 6 659 2 848 2 368 4 447 8 61 2 232 4 234 2 128 2 
320 2 1117 2 396 2 1085 2 355 2 1002 2 620 2 953 2 152 2 26 2 
1024 2 785 2 134 2 1030 4 72 2 792 2 74 2 872 4 291 2 1038 2 292 4 797 2 432 2 799 4 808 2 304 2 303 2 809 2 955 2 961 2 447 2 161 2 1072 2 970 2 381 4 34 2 242 2 520 2 901 2 741 2 324 2 750 2 252 2 991 4 1157 2 111 2 836 2 326 2 760 2 1160 2 195 2 687 2 854 2 1020 2 
279 2 202 16 926 4 860 6 740 4 102 4 667 2 348 18 605 8 246 6 1081 4 527 6 250 6 609 2 751 6 991 4 253 6 1121 32 872 4 837 2 839 2 77 32 220 4 950 6 880 16 14 4 84 2 846 4 504 6 87 16 156 4 736 48 276 4 1103 53 233 2 661 2 662 22 416 16 514 32 
357 2 270 2 447 2 
51 2 166 2 1127 2 578 2 18 2 335 2 41 2 120 2 121 22 745 2 957 2 411 10 496 2 432 2 
694 2 421 2 697 1 861 2 1026 1 1028 4 560 2 1029 3 699 2 1031 2 562 1 288 2 289 2 2 2 865 2 565 2 1033 1 704 24 567 2 706 2 872 32 873 4 10 32 433 3 714 1 1045 2 882 2 575 2 717 16 437 3 438 1 301 5 729 2 306 2 20 6 154 2 730 2 582 2 732 2 1058 6 590 2 591 3 449 2 316 24 451 2 164 2 738 2 599 2 895 6 32 1 896 2 171 3 897 2 603 2 37 2 746 2 1083 2 611 2 462 2 184 2 615 1 187 2 469 6 52 16 763 2 54 4 914 2 627 2 771 2 773 2 198 1 342 32 919 2 487 2 199 4 1106 2 784 2 641 2 349 2 204 2 1111 2 930 1 1116 2 354 2 1118 4 491 2 937 8 936 2 938 1 76 2 943 2 944 3 1126 2 78 2 498 2 80 2 1128 1 81 2 222 2 1129 16 654 8 655 2 1134 2 812 2 365 2 90 1 229 2 1141 4 374 2 235 2 965 1 515 2 377 4 664 12 820 2 379 2 238 2 1147 3 1148 2 1151 2 101 1 103 2 828 3 986 2 390 3 832 16 391 1 393 2 529 8 674 3 992 3 991 34 1156 4 835 2 838 2 401 1 1005 12 844 2 1009 2 406 2 543 2 1165 3 849 2 274 2 546 2 547 2 1018 2 1019 2 551 2 
973 2 
991 2 594 2 
949 2 445 2 991 4 
278 2 554 2 280 2 284 2 558 2 285 2 863 2 287 48 866 4 869 2 7 2 568 2 570 2 876 4 296 4 297 4 878 14 883 2 16 2 581 16 313 8 589 48 24 2 885 2 888 2 596 2 598 2 31 4 319 2 900 2 606 2 905 2 610 2 907 2 909 4 325 2 910 26 621 14 622 8 626 2 336 2 918 48 630 20 631 2 63 190 64 2 922 4 343 146 639 8 927 8 68 16 352 2 933 4 646 2 73 2 647 8 648 24 649 4 941 2 942 4 945 2 946 2 650 10 360 48 359 2 653 2 82 2 363 2 83 2 656 14 658 4 89 8 371 2 375 2 94 2 96 4 967 2 975 4 978 4 668 48 104 2 105 14 981 2 982 2 983 4 107 2 673 2 989 2 109 4 394 2 398 2 112 36 400 2 681 2 1003 2 683 22 409 28 691 2 1021 6 693 4 692 4 131 2 422 2 1027 2 698 2 135 2 425 2 138 4 430 4 1035 2 708 22 1039 2 1044 2 715 2 149 4 720 2 721 2 1048 4 439 2 722 12 1050 2 442 2 731 2 1056 4 1055 2 159 8 450 14 448 146 1067 6 160 2 163 10 165 48 1075 4 739 2 172 2 1077 2 743 2 457 4 459 4 1082 2 753 2 1086 2 1087 2 1090 48 1089 6 755 146 756 4 1091 8 467 2 1093 4 762 2 1097 2 1098 2 764 2 1099 8 480 2 774 2 1101 2 483 2 484 2 778 20 780 2 782 20 1105 4 488 4 203 8 1113 2 208 36 210 2 494 4 216 2 218 2 217 8 219 2 802 2 1133 2 227 2 228 2 1136 2 814 2 1138 2 231 4 516 2 236 42 239 48 822 2 821 6 240 22 518 2 521 6 826 48 524 16 528 8 251 36 255 2 258 48 259 4 261 4 534 8 1158 48 841 48 538 2 262 6 540 2 264 24 263 4 1159 48 845 4 1164 2 275 2 1167 2 852 4 1168 2 
114 2 168 1 455 2 884 2 
479 2 455 2 
851 2 552 2 
21 2 71 2 1135 2 447 2 
21 2 71 2 1135 2 776 2 447 2 1006 2 
95 2 767 2 
1041 2 961 2 
71 2 1150 2 447 2 767 2 
129 2 48 2 
1130 2 244 2 
744 2 373 2 
766 2 293 2 
1130 2 372 2 293 2 
1130 2 525 2 293 2 
1130 2 980 2 293 2 
1130 2 182 2 293 2 
604 6 71 2 140 2 6 2 1042 6 267 2 337 2 447 2 
237 2 597 2 295 2 601 2 718 2 454 2 302 2 474 4 932 2 847 2 121 6 772 2 960 2 993 2 257 2 754 4 964 2 549 2 
114 2 759 2 
688 2 767 2 
613 2 455 2 260 2 
1013 2 455 2 260 2 
114 2 552 2 476 2 
455 2 260 2 
338 2 552 2 
877 2 455 2 
114 2 628 2 552 2 
114 2 189 2 744 2 
114 2 898 2 293 2 
114 2 517 2 48 2 
1130 2 114 2 1107 2 
286 2 552 2 
455 2 677 2 
744 2 8 2 
1032 2 293 2 
48 2 127 2 
1130 2 436 2 
139 2 552 2 
1130 2 850 2 
602 2 48 2 
557 2 293 2 
535 2 744 2 
114 2 628 2 619 2 552 2 
114 2 628 2 619 2 1122 2 552 2 
443 2 114 2 552 2 
114 2 413 2 552 2 
321 2 1132 2 508 2 91 2 
551 2 
694 2 1106 2 784 2 204 2 699 2 288 2 1116 2 564 2 565 2 1118 4 936 6 706 2 872 18 943 2 10 2 78 2 499 2 12 4 1128 2 575 2 81 2 20 2 306 2 583 2 812 2 1058 4 1141 4 1064 2 374 2 449 2 377 4 968 2 97 2 164 2 895 2 896 2 1148 2 991 18 469 6 401 2 52 6 843 2 333 2 54 4 844 2 543 2 773 2 274 2 342 6 1019 2 
694 2 784 2 1106 2 204 2 699 2 288 2 1116 2 564 2 565 2 1118 4 936 6 706 2 872 18 943 2 10 2 78 2 499 2 12 4 1128 2 575 2 81 2 20 2 306 2 583 2 812 2 1058 6 590 2 1141 4 1064 2 374 2 449 2 377 4 968 2 97 2 164 2 895 2 896 2 1148 2 991 18 469 6 401 2 52 6 843 2 333 2 54 4 844 2 543 2 773 2 274 2 342 6 547 2 1019 2 
556 2 701 2 
130 2 
201 4 857 2 695 6 784 2 923 2 859 4 347 2 204 2 207 10 867 2 644 2 566 2 5 2 872 6 1123 2 940 2 943 2 651 2 81 2 576 6 223 4 15 2 224 2 810 2 657 2 812 2 312 2 733 2 509 2 1061 2 370 2 314 4 1141 2 449 2 1065 2 817 2 1069 6 377 2 28 2 164 2 99 2 825 2 829 2 607 8 612 2 42 2 991 12 45 4 678 2 537 8 679 2 469 4 470 2 192 2 765 2 1102 4 414 4 1170 2 634 4 
201 4 857 2 695 8 784 2 923 2 859 4 347 2 204 2 207 10 867 2 566 2 5 2 1120 2 872 6 1123 2 940 2 943 2 651 2 81 2 576 6 15 2 223 4 17 2 224 2 810 2 657 2 812 2 312 2 733 2 509 2 1061 2 370 2 314 4 1141 2 889 4 449 2 1065 2 817 2 1069 8 377 2 28 2 164 2 99 2 825 2 829 2 607 8 612 2 42 2 991 12 45 4 537 8 679 2 469 4 470 2 192 2 765 2 777 2 1102 4 414 4 1170 2 634 4 
28 2 99 2 857 2 923 2 576 2 825 2 223 4 765 2 810 2 867 2 1102 2 370 2 414 4 314 2 1170 2 817 2 634 2 1069 2 
201 4 857 2 695 6 784 2 923 2 859 4 347 2 204 2 207 6 867 2 644 2 566 2 5 2 1120 2 872 6 1123 2 940 2 943 2 651 2 81 2 576 4 223 4 15 2 224 2 810 2 657 2 812 2 733 2 509 2 1061 2 370 2 314 4 1141 2 449 2 1065 2 817 2 1069 6 377 2 28 2 164 2 99 2 825 2 829 2 607 4 612 2 42 2 991 12 45 4 678 2 537 4 679 2 469 4 470 2 192 2 765 2 1102 4 414 4 1170 2 634 4 
201 4 857 2 695 6 784 2 923 2 859 4 347 2 204 2 207 4 867 2 644 2 566 2 5 2 872 6 1123 2 940 2 943 2 651 2 81 2 576 6 223 4 15 2 224 2 810 2 657 2 812 2 733 2 509 2 1061 2 370 2 314 4 1141 2 449 2 1065 2 817 2 1069 4 377 2 28 2 164 2 99 2 825 2 829 2 607 4 612 2 42 2 991 12 45 4 1000 2 678 2 537 4 679 2 469 4 470 2 192 2 765 2 1102 4 414 4 1170 2 634 4 
201 4 857 2 695 6 784 2 923 2 859 4 347 2 204 2 207 6 867 2 644 2 566 2 5 2 872 6 1123 2 940 2 943 2 651 2 81 2 576 6 223 4 15 2 224 2 810 2 657 2 812 2 312 2 733 2 509 2 1061 2 370 2 314 4 1141 2 449 2 1065 2 817 2 1069 6 377 2 28 2 164 2 99 2 825 2 829 2 607 4 612 2 42 2 991 12 45 4 678 2 537 8 679 2 469 4 470 2 192 2 765 2 1102 4 414 4 1170 2 634 4 
201 4 857 2 695 8 784 2 923 2 859 4 347 2 204 2 207 10 867 2 644 2 566 2 5 2 872 6 1123 2 940 2 943 2 651 2 81 2 576 8 223 4 15 2 224 2 810 2 657 2 812 2 312 2 733 2 509 2 1061 2 370 2 314 4 1141 2 449 2 1065 2 817 2 1069 6 377 2 28 2 164 2 99 2 825 2 829 2 607 8 612 2 42 2 991 12 45 4 1000 2 678 2 537 8 679 2 469 4 470 2 192 2 765 2 1102 4 414 4 1170 2 634 4 
201 4 857 2 695 6 784 2 923 2 859 4 347 2 204 2 207 10 867 2 644 2 566 2 5 2 872 6 1123 2 940 2 943 2 651 2 81 2 576 6 223 4 15 2 224 2 810 2 657 2 812 2 312 2 733 2 509 2 1061 2 370 2 314 4 1141 2 449 2 1065 2 817 2 1069 6 377 2 28 2 164 2 99 2 825 2 829 2 607 8 612 2 42 2 991 12 45 4 678 2 537 8 679 2 469 4 470 2 192 2 765 2 1102 4 414 4 1170 2 634 4 
555 2 857 2 859 4 867 2 566 2 564 2 565 2 5 2 290 2 872 24 871 7 10 2 12 4 575 2 576 8 298 2 15 2 306 2 20 2 307 6 309 2 590 2 314 4 594 6 892 10 28 2 894 6 895 2 896 2 904 2 612 2 42 2 45 6 617 2 50 2 52 6 54 4 623 1 56 2 629 2 342 8 634 4 923 2 347 2 351 1 644 2 936 6 937 2 940 2 943 2 78 12 358 2 651 2 81 2 362 6 657 2 367 2 370 2 374 2 377 4 664 4 97 4 99 2 98 1 973 6 974 2 977 6 666 1 979 2 984 2 987 2 991 46 675 2 1000 4 679 2 1005 4 119 2 406 2 407 2 1012 2 414 4 415 2 1019 2 694 2 695 12 1023 2 424 7 1028 2 699 2 428 6 1040 2 719 1 725 2 445 6 733 2 1058 6 734 2 1061 2 1063 1 449 2 1064 2 1066 4 1065 2 1069 4 164 2 170 2 453 6 1078 1 176 2 757 6 190 1 469 6 470 2 192 2 1096 2 765 2 773 2 1100 6 482 1 1102 4 199 2 201 8 784 2 1106 2 204 2 789 6 206 6 1114 6 1116 2 1118 4 1119 6 1123 2 805 2 223 4 224 4 810 2 812 2 509 4 1141 4 512 8 513 2 1143 4 817 2 1144 6 1148 2 825 2 1152 2 829 2 1156 2 537 2 266 2 844 2 542 2 543 2 274 2 545 2 547 2 1170 2 553 2 
555 2 694 2 1023 2 695 12 857 2 859 4 1028 4 699 2 867 2 428 6 565 2 564 2 566 2 5 2 290 2 706 2 872 24 10 2 1040 2 12 4 575 2 576 8 298 2 15 2 725 2 307 6 20 2 306 2 445 6 309 2 312 4 1058 6 733 2 734 2 1061 2 590 2 314 4 1064 2 449 2 594 6 1065 2 1066 4 1069 8 892 10 28 2 164 2 894 6 895 2 453 6 170 2 896 2 904 2 176 2 612 2 42 2 45 6 757 6 758 2 50 2 617 2 469 6 52 6 470 2 1096 2 192 2 54 4 765 2 56 2 1100 6 773 2 629 2 342 8 1102 4 199 4 634 4 201 8 923 2 1106 2 784 2 347 2 204 2 789 6 206 6 1114 6 1116 2 644 2 1118 4 1119 6 937 2 936 6 1123 2 940 2 943 2 78 12 358 2 81 2 362 6 805 2 223 4 224 2 810 2 657 2 812 2 367 2 509 4 370 2 512 8 1141 4 1143 4 513 2 374 2 1144 6 817 2 377 4 664 6 97 4 99 2 973 6 1148 2 977 6 825 2 1152 2 979 2 984 2 987 2 108 2 675 2 991 46 1156 4 679 2 537 6 1005 6 266 2 542 2 844 2 119 2 406 2 543 2 407 2 1012 2 545 2 274 2 547 2 414 4 415 2 1019 2 1170 2 553 2 
555 2 694 2 1023 2 695 12 857 2 859 4 1028 4 699 2 867 2 428 6 564 2 566 2 565 2 5 2 290 2 706 2 872 24 10 2 1040 2 12 4 575 2 576 8 298 2 15 2 725 2 307 6 20 2 306 2 445 6 309 2 312 4 1058 6 733 2 734 2 1061 2 590 2 314 4 1064 2 449 2 594 6 1065 2 1066 4 1069 8 892 10 28 2 164 2 894 6 895 2 453 6 170 2 896 2 904 2 607 4 176 2 612 2 42 2 45 6 757 6 758 2 50 2 617 2 469 6 52 6 470 2 1096 2 192 2 54 4 765 2 56 2 1100 6 773 2 629 2 342 8 1102 4 199 4 634 4 201 8 784 2 923 2 1106 2 347 2 204 2 789 6 206 6 1114 6 207 4 1116 2 644 2 1118 4 1119 6 937 2 936 6 1123 2 940 2 943 2 78 12 358 2 81 2 362 6 805 2 223 4 224 2 810 2 657 2 812 2 367 2 509 4 370 2 512 8 1141 4 1143 4 513 2 374 2 1144 6 817 2 377 4 664 6 97 4 99 2 973 6 1148 2 977 6 825 2 1152 2 979 2 984 2 987 2 108 2 675 2 991 46 1156 4 679 2 537 6 1005 6 266 2 542 2 844 2 119 2 406 2 543 2 407 2 1012 2 545 2 274 2 547 2 414 4 415 2 1019 2 1170 2 553 2 
555 2 694 2 1023 2 695 16 857 2 859 4 1028 4 699 2 867 2 428 6 566 2 564 2 565 2 5 2 290 2 706 2 872 22 10 4 1040 2 12 6 575 2 576 10 298 2 15 2 725 2 307 6 20 4 306 2 445 6 309 2 312 4 1058 6 733 2 734 2 1061 2 590 2 314 4 1064 2 449 2 594 6 1065 2 1066 4 1069 10 892 8 28 2 164 2 894 6 895 4 453 6 170 2 896 2 607 4 176 2 612 2 42 2 45 6 757 6 758 2 50 2 617 2 469 6 52 8 470 2 1096 2 192 2 54 4 765 2 56 2 1100 6 773 2 629 2 342 12 1102 4 781 2 199 4 634 4 201 8 784 2 923 2 1106 2 347 2 69 2 204 2 789 6 206 6 1114 6 207 4 1116 2 644 2 1118 4 1119 6 1120 2 937 2 936 8 1123 2 940 2 796 2 943 2 78 10 358 2 81 2 362 6 805 2 223 4 224 2 810 2 657 2 812 2 367 2 509 4 815 2 370 2 512 8 1141 4 1143 4 513 2 374 2 1144 6 817 2 377 4 664 6 97 4 99 2 973 6 1148 2 977 6 825 2 1152 2 979 2 984 2 987 2 108 2 675 2 833 2 991 44 1156 4 1000 2 679 2 537 6 1005 6 266 2 542 2 844 2 119 2 406 2 543 2 407 2 686 2 1012 2 545 2 274 2 547 2 414 4 415 2 1019 2 1170 2 553 2 
201 2 695 4 99 2 857 2 923 2 859 2 347 2 607 4 207 4 644 2 867 2 566 2 5 2 42 2 991 4 45 2 1123 2 940 2 679 2 537 6 470 2 576 6 15 2 223 2 765 2 810 2 657 2 312 2 1061 2 509 2 1102 4 414 2 817 2 634 4 1069 6 
694 2 695 4 857 2 859 2 699 2 289 2 867 2 565 2 564 2 566 2 5 2 872 24 874 2 10 3 12 4 575 2 576 6 15 2 306 2 20 3 312 2 1058 6 733 2 1061 2 590 2 449 2 1064 2 1069 6 892 2 164 2 162 2 895 3 896 2 603 2 904 2 462 2 42 2 45 2 469 6 52 6 470 2 54 4 765 2 773 2 342 8 1102 4 634 4 201 2 1106 2 784 2 637 2 923 2 347 2 204 2 207 2 1116 2 644 2 1118 4 934 2 936 6 1123 2 940 2 943 2 78 4 79 3 81 2 223 2 810 2 657 2 812 2 509 2 1141 4 374 2 817 2 377 4 97 2 99 2 1148 2 991 28 679 2 537 6 844 2 543 2 274 2 547 2 414 2 1019 2 551 2 417 2 
679 2 657 2 115 2 
679 2 657 2 115 2 
419 2 694 2 420 2 857 2 695 16 859 2 1028 4 559 2 699 2 565 2 564 2 1034 4 872 16 10 2 710 2 575 2 576 12 306 2 1058 6 312 4 590 2 1061 2 314 2 449 2 1064 2 1066 2 1069 12 892 2 317 2 164 2 32 2 896 2 36 2 607 4 612 2 179 2 45 4 469 6 52 2 473 2 54 4 1100 2 196 4 773 2 342 2 1102 4 779 2 199 4 634 4 201 4 1106 2 784 2 923 4 204 2 207 6 1116 2 1118 4 1120 4 936 2 1123 2 943 2 78 4 651 2 81 2 223 2 503 2 810 2 657 2 812 2 509 4 370 2 1141 4 1143 2 374 2 377 4 664 4 97 6 1148 2 245 2 991 24 1156 4 1000 4 679 4 537 6 115 2 1005 4 405 2 406 4 543 2 271 4 274 2 277 2 547 2 414 2 1019 2 1170 2 
892 2 78 2 317 2 556 2 842 2 825 2 36 2 1152 2 1100 2 545 2 991 4 277 2 1037 2 872 2 834 2 1143 2 943 2 
419 2 555 2 694 2 420 2 1023 2 857 2 695 16 859 2 1028 4 559 2 699 2 1 2 565 2 564 2 1034 4 872 16 10 4 710 2 575 2 576 12 441 2 306 2 1058 6 312 4 734 2 590 2 1061 2 314 4 449 2 1064 2 1066 2 1069 12 317 2 164 2 32 1 896 2 36 2 607 4 612 2 179 2 45 4 469 6 1094 2 52 2 192 2 473 4 54 4 1100 2 196 4 773 2 342 2 1102 4 199 4 634 4 201 4 1106 2 784 2 923 4 204 2 207 6 1116 2 1118 4 214 2 1120 4 936 2 1123 2 943 2 1124 2 78 2 651 2 81 2 223 2 503 2 224 4 810 2 657 4 812 2 509 4 370 2 1141 4 374 2 377 4 664 4 97 6 1148 2 245 2 829 2 991 24 1156 4 1000 4 679 6 537 6 115 2 1004 2 1005 4 406 4 543 2 125 2 271 4 274 2 277 2 547 2 414 2 1019 2 1170 2 553 2 
419 2 555 2 694 2 420 2 1023 2 857 2 695 16 859 2 1028 4 559 2 699 2 136 2 565 2 564 2 1034 4 872 16 10 2 710 2 575 2 576 12 306 2 1058 6 312 4 734 2 590 2 1061 2 314 4 449 2 1064 2 1066 2 1069 12 892 2 317 2 164 2 32 1 896 2 36 2 903 2 607 4 612 2 179 2 45 4 1088 2 469 6 52 2 192 2 473 2 54 4 1100 2 196 4 773 2 342 2 1102 4 199 4 634 4 201 4 1106 2 784 2 923 4 204 2 207 6 1116 2 1118 4 214 2 1120 4 936 2 1123 2 943 2 78 4 651 2 81 2 223 2 503 2 224 4 810 2 657 4 812 2 509 4 1140 2 370 2 1141 4 1143 2 374 2 377 4 664 4 97 6 1148 2 245 2 829 2 991 24 1156 4 1000 4 679 6 537 6 115 2 1004 2 1005 4 404 2 406 4 543 2 271 4 274 2 277 2 547 2 414 2 1019 2 1170 2 553 2 
281 2 858 1 0 10 283 2 860 6 864 2 3 2 563 4 4 2 565 2 868 2 870 4 872 52 569 2 874 2 10 19 294 2 574 2 12 12 575 4 880 4 13 10 14 4 300 2 579 2 580 2 305 2 20 16 306 2 308 2 583 2 585 2 586 2 311 16 587 2 590 4 886 2 592 1 315 2 593 2 595 2 27 6 895 19 32 1 318 2 33 2 896 2 35 2 38 2 40 2 608 2 322 8 609 4 906 2 908 2 43 2 616 2 47 6 327 2 328 2 617 2 618 2 52 14 332 2 333 2 54 18 625 16 915 12 624 2 57 2 58 4 916 2 59 2 339 2 340 4 342 28 60 2 921 2 920 2 62 2 65 2 635 2 637 2 67 4 926 4 929 6 928 2 346 2 640 2 69 2 348 4 353 2 643 2 645 2 934 2 936 14 937 20 943 2 356 2 78 2 77 8 79 2 947 2 951 2 652 2 81 2 954 10 956 26 86 2 364 4 958 2 959 4 87 4 366 2 367 46 93 2 962 2 963 2 374 2 662 6 661 2 663 14 966 2 377 4 968 2 664 24 97 2 969 2 382 3 380 2 383 2 100 4 385 2 106 2 388 14 670 2 669 2 671 2 672 4 990 4 991 64 996 2 995 4 397 24 110 2 998 3 676 2 1001 2 401 2 116 2 117 2 403 4 1005 26 682 2 118 3 1007 2 1008 4 406 4 685 2 686 2 123 4 1014 2 689 2 690 2 1016 2 1017 2 415 2 1019 2 416 4 418 2 694 4 133 2 699 4 426 2 427 2 705 4 144 3 1036 2 707 4 145 2 146 4 713 2 147 2 1043 2 148 4 716 12 150 2 717 4 1046 2 1047 2 153 2 1049 2 725 2 1052 2 727 2 728 2 444 2 155 4 1054 2 1057 2 1058 34 446 2 736 12 735 2 1059 2 1064 2 449 2 164 2 162 2 452 16 1074 10 169 2 170 2 1076 2 1080 2 174 2 177 2 1084 2 186 14 1092 2 468 6 469 6 1095 2 471 2 475 2 768 2 769 12 773 2 485 2 1103 16 486 2 781 2 784 2 1106 6 202 4 1109 4 204 2 788 2 1112 2 490 2 205 2 209 2 1116 2 211 4 790 2 791 3 1118 20 213 2 493 4 1121 8 795 4 796 2 1125 4 798 12 801 2 499 2 1128 2 221 2 500 2 803 16 805 4 1129 4 501 2 807 2 806 2 506 1 812 2 813 2 230 2 1139 2 815 2 232 2 1141 4 511 2 513 2 818 4 819 2 514 8 1149 2 1148 2 241 2 827 2 246 6 830 14 249 2 526 2 831 2 833 2 1155 3 532 16 539 2 265 2 266 2 844 2 269 2 543 6 1162 2 272 10 274 2 547 4 853 2 548 14 
382 2 1074 2 895 2 0 4 640 2 1153 2 991 2 936 2 872 2 10 2 356 2 328 2 539 2 52 2 12 2 951 2 844 2 20 2 624 2 916 2 272 2 690 2 367 6 342 2 
382 2 1074 2 895 2 0 4 640 2 1153 2 991 2 936 2 872 2 10 2 356 2 328 2 539 2 52 2 12 2 951 2 844 2 20 2 624 2 916 2 272 2 690 2 367 6 342 2 
382 2 1074 2 895 2 0 4 640 2 1153 2 991 2 936 2 872 2 10 2 356 2 328 2 539 2 52 2 12 2 951 2 844 2 20 2 624 2 916 2 272 2 690 2 367 6 342 2 
1071 2 202 2 895 3 976 2 860 4 1025 2 384 2 902 2 137 4 985 4 175 4 322 6 702 2 464 4 493 2 254 4 991 10 1155 3 1121 2 872 4 709 2 10 3 356 2 77 2 800 2 880 2 717 2 14 2 118 3 1129 2 844 2 87 2 736 4 342 2 1103 5 632 2 158 3 1169 2 416 2 514 2 
1071 2 202 2 895 2 976 2 860 4 1025 2 384 2 348 2 902 2 137 4 985 4 175 4 322 6 702 2 464 4 493 2 254 4 991 10 1155 2 1121 2 872 4 709 2 10 2 356 2 839 2 77 2 800 2 880 2 717 2 14 2 118 2 1129 2 844 2 87 2 736 4 342 2 1103 4 632 2 158 2 1169 2 662 2 416 2 514 2 
1071 2 202 2 895 2 976 2 860 4 1025 2 384 2 348 2 902 2 137 4 985 4 175 4 322 6 702 2 464 4 493 2 254 4 991 10 1155 2 1121 2 872 4 709 2 10 2 356 2 839 2 77 2 800 2 880 2 717 2 14 2 118 2 1129 2 844 2 87 2 736 4 342 2 1103 4 632 2 158 2 1169 2 662 2 416 2 514 2 
1071 2 202 2 895 2 976 2 860 4 1025 2 384 2 348 2 902 2 137 4 985 4 175 4 322 6 702 2 464 4 493 2 254 4 991 10 1155 2 1121 2 872 4 709 2 10 2 356 2 839 2 77 2 800 2 880 2 717 2 14 2 118 2 1129 2 844 2 87 2 736 4 342 2 1103 4 632 2 158 2 1169 2 662 2 416 2 514 2 
1071 2 202 2 895 2 976 2 860 4 1025 2 384 2 348 4 902 2 137 4 985 4 175 4 322 6 702 2 464 4 493 2 254 4 991 10 1155 2 1121 2 872 4 709 2 10 2 356 2 839 4 77 2 800 2 880 2 717 2 14 2 118 2 1129 2 844 2 87 2 736 4 342 2 1103 4 632 2 158 2 1169 2 662 4 416 2 514 2 
1131 2 197 2 461 2 299 2 548 2 200 2 642 2 
282 2 1017 2 299 2 386 2 931 2 1010 2 
856 1 29 2 971 1 784 2 489 1 789 2 173 1 748 2 180 2 530 2 991 10 794 2 994 2 143 2 395 2 46 2 872 8 571 2 466 2 361 2 1051 2 19 2 408 1 122 2 584 2 1068 2 
279 1 696 2 202 6 638 2 926 2 133 2 860 4 522 2 740 2 35 2 348 3 605 2 246 4 750 2 991 6 751 4 1121 6 872 6 111 2 77 6 839 2 880 6 403 2 14 2 87 6 736 12 1103 15 662 5 1104 2 514 6 416 6 
1108 2 423 2 193 2 523 2 726 3 137 2 505 2 985 2 481 2 126 2 775 2 254 2 44 2 
1108 2 879 2 423 2 193 2 523 2 726 6 225 1 137 2 505 2 985 2 481 2 126 2 775 4 991 1 254 2 44 2 872 1 911 2 
1108 4 879 2 423 2 193 2 523 4 726 6 137 2 505 2 985 2 481 4 126 2 775 4 254 2 44 2 911 2 
1108 8 879 6 423 2 193 2 523 8 726 10 225 1 137 2 505 2 985 2 481 8 126 2 775 4 991 1 254 2 44 2 872 1 911 8 
281 4 699 2 563 24 4 2 427 8 870 11 144 8 872 70 569 4 712 1 11 2 574 4 881 8 577 8 153 4 727 4 585 4 1058 103 587 4 590 27 886 2 1062 8 887 2 890 4 315 1 32 1 33 2 38 2 39 2 1079 10 1080 4 177 4 616 4 465 2 49 16 188 2 1095 4 912 2 332 4 913 2 54 36 478 10 340 6 485 4 920 6 921 4 62 8 65 4 636 4 1106 6 67 10 924 2 344 4 929 14 1109 10 788 4 205 16 490 4 209 4 211 6 790 3 1118 44 212 2 935 4 939 2 497 2 652 4 804 16 500 4 956 30 226 4 364 24 86 4 959 8 93 4 816 10 818 4 819 4 376 2 969 2 972 2 1146 2 383 4 827 4 387 2 106 4 830 24 831 4 670 4 991 78 531 2 995 10 996 4 676 4 1001 4 1005 15 682 2 1007 4 543 6 685 4 1162 4 123 10 124 4 1014 4 1166 32 273 8 1016 4 547 29 853 4 550 4 
1106 2 858 1 924 2 67 6 1109 6 787 2 699 2 211 2 790 2 212 2 1118 14 870 2 939 2 872 26 144 5 652 4 500 4 727 4 956 6 506 1 311 10 507 2 1058 40 590 12 1060 2 886 2 887 2 819 2 969 2 167 2 972 2 32 2 383 4 38 2 830 8 831 4 991 28 995 2 532 2 676 2 256 2 330 2 1095 2 912 2 1005 14 332 4 682 2 541 2 54 14 1007 2 268 2 543 2 123 6 340 4 1016 2 547 12 920 2 921 4 65 2 
1022 4 281 6 858 11 283 24 862 8 699 8 561 10 563 84 4 2 427 24 870 16 872 134 144 16 431 24 569 6 875 8 711 4 434 18 435 4 574 4 153 6 727 6 1053 4 585 4 311 22 1058 248 587 6 157 24 1060 2 590 58 886 8 887 2 315 4 1070 2 1073 2 737 10 167 2 32 4 33 2 742 4 38 4 1080 6 323 24 177 4 747 4 181 26 616 4 330 4 191 6 1095 10 912 2 332 6 913 2 54 88 194 4 477 90 340 8 485 6 920 10 921 6 62 42 65 10 1106 14 67 16 929 12 1109 16 787 2 350 4 788 4 205 42 490 6 209 4 643 6 790 6 211 36 1118 112 212 2 213 24 939 2 75 4 497 2 652 6 500 6 956 34 364 92 86 6 811 8 506 8 959 50 507 2 1137 2 93 4 818 5 819 4 969 8 972 2 824 10 383 6 243 2 827 4 106 6 830 124 389 12 831 8 670 6 991 150 996 6 995 18 676 4 532 4 1001 6 536 26 402 90 1005 28 682 8 541 2 1007 10 268 2 543 14 685 4 1162 6 123 16 1011 2 1014 6 1016 10 547 58 853 4 
783 2 1106 2 924 2 67 4 1109 4 862 2 699 2 561 2 70 4 700 2 790 2 211 2 212 2 1118 20 429 2 141 2 793 2 870 2 939 2 872 44 431 2 952 2 716 6 652 2 500 2 440 2 502 2 727 2 85 2 22 4 88 2 1058 48 157 2 588 2 590 6 92 2 886 2 510 2 369 2 887 2 25 2 1142 2 816 2 737 2 969 2 1145 2 972 2 30 2 665 2 32 2 824 2 383 2 39 2 1079 2 830 6 460 2 323 2 988 2 463 2 991 46 995 2 183 2 256 2 188 2 680 2 1095 2 53 2 912 2 761 2 1005 36 332 2 682 2 54 20 1007 2 268 2 194 2 543 2 478 2 768 4 770 2 1163 2 123 4 1015 2 917 4 1016 2 340 6 547 6 920 2 921 2 65 2 66 2 
378 2 

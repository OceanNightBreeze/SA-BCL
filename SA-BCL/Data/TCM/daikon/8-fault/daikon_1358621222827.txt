#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V ERROR java.lang.ArrayIndexOutOfBoundsException (566,1001) 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V ERROR utilMDE.Options$ArgException 98 
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 297 193 312 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.Quant:eltsGteIndex([I)Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
jtb.JavaParser:jj_3R_161()Z
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaCharStream:readChar()C
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.Quant:eltsGT([II)Z
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Ppt:Ppt()V
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
jtb.JavaParser:jj_3R_62()Z
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE:gcd(JJ)J
daikon.inv.Invariant:getConfidence()D
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.inv.Invariant:justified()Z
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.Quant:intersection([I[I)[I
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.MathMDE:missing_numbers([I)[I
daikon.Quant:noDups([I)Z
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3_1()Z
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.inv.unary.scalar.NonZero:enabled()Z
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:subarray([JII)[J
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
utilMDE.FuzzyFloat:lte(DD)Z
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
jtb.JavaParser:jj_3R_50()Z
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
utilMDE.MathMDE:negate(I)I
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
utilMDE.MathMDE:gcd([I)I
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.ModBitTracker:ModBitTracker(I)V
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaCharStream:getBeginLine()I
jtb.JavaParser:jj_3_15()Z
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.Quant:lexGT([I[I)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakHasherMap:size()I
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE:gcd(II)I
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:memberOf(D[F)Z
jtb.JavaParser:jj_3R_52()Z
jtb.JavaParser:jj_3R_53()Z
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
jtb.JavaParser:generateParseException()Ljtb.ParseException;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.ProglangType:dimensions()I
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.diff.Node:Node()V
daikon.Quant:eltwiseGT([I)Z
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.inv.Invariant:format()Ljava.lang.String;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.Quant:lte(II)Z
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
jtb.JavaParser:jj_3_5()Z
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
jtb.JavaParser:jj_3R_57()Z
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_2_1(I)Z
daikon.Quant:pairwiseDivides([I[I)Z
utilMDE.FuzzyFloat:ne(DD)Z
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.diff.InvMap:InvMap()V
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaCharStream:backup(I)V
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:gt(DD)Z
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:slice([III)[I
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.Quant:subsetOf([F[D)Z
jtb.JavaParser:jj_3_14()Z
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.diff.PrintAllVisitor:bufPrintln()V
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:internSubsequence([JII)[J
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_2_16(I)Z
utilMDE.ArraysMDE:element_range([I)I
daikon.PptSlice0:arity()I
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.Quant:concat([I[I)[I
jtb.JavaParser:jj_3R_120()Z
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3_12()Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
utilMDE.MathMDE:pow_fast(II)I
jtb.JavaParser:jj_3R_148()Z
daikon.Quant:eltsNotEqual([II)Z
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3R_86()Z
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
jtb.ParseException:ParseException(Ljava.lang.String;)V
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.Quant:sameLength([I[I)Z
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_2_5(I)Z
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
daikon.Quant:union([I[I)[I
utilMDE.WeakIdentityHashMap:indexFor(II)I
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.Quant:lexGTE([I[I)Z
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.ProglangType:isScalar()Z
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.Quant:isReverse([I[I)Z
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:isPseudoArray()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_121()Z
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.Invariant:prob_and(DD)D
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:jj_3R_133()Z
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Invariants:Invariants()V
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.ProglangType:isArray()Z
daikon.inv.Invariant:isWorthPrinting()Z
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
utilMDE.MathMDE:gcd_differences([I)I
jtb.JavaParser:jj_2_15(I)Z
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.ValueTuple:isMissingFlow(I)Z
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_55()Z
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.ModBitTracker:num_sets()I
jtb.JavaParser:jj_scan_token(I)Z
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:pairwiseLTE([I[I)Z
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.test.InvariantFormatTester:execute()Z
daikon.Quant:eq(FF)Z
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.Quant:eltsGTE([II)Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.unary.UpperBoundCore:calc_range()J
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_68()Z
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.Quant:eltsLtIndex([I)Z
utilMDE.MathMDE:pow(II)I
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:setDiff([I[I)[I
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
jtb.JavaCharStream:getEndColumn()I
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_123()Z
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.Quant:eltwiseNotEqual([I)Z
utilMDE.FuzzyFloat:indexOf([DD)I
utilMDE.MathMDE:sign(I)I
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
jtb.JavaParser:jj_3R_48()Z
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:ne(II)Z
jtb.ParseException:getMessage()Ljava.lang.String;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.PptSlice1:arity()I
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.Quant:subsetOf([S[S)Z
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.test.TestQuant:assert_arrays_equals([I[I)V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.inv.filter.ObviousFilter:ObviousFilter()V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.Quant:eltsLT([II)Z
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.unary.scalar.LowerBound:enabled()Z
utilMDE.ArraysMDE:concat([I[I)[I
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.Quant:pairwiseGT([I[I)Z
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Quant:eltsLteIndex([I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I | CONSTANT | 4963 | 78 -> 77
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.Quant:memberOf(S[S)Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
jtb.JavaParser:jj_3R_85()Z
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.Quant:memberOf(J[J)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.Quant:subsetOf([I[I)Z
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.Intern:numIntArrays()I
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.Quant:subsetOf([B[I)Z
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.PptMap:asCollection()Ljava.util.Collection;
jtb.JavaParser:jj_3R_135()Z
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
jtb.JavaCharStream:getBeginColumn()I
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_63()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.Quant:pairwiseSquare([I[I)Z
daikon.Quant:eltwiseLTE([I)Z
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:mod_positive(II)I
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_54()Z
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName:name()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoAux:hashCode()I
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.Quant:lexLTE([I[I)Z
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.ProglangType:isIntegral()Z
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_2_3(I)Z
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
jtb.JavaParser:jj_3R_60()Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.Quant:eltsEqual([II)Z
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.inv.unary.LowerBoundCore:calc_range()J
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.ArraysMDE:sum([[I)I | CONSTANT | 8702 | 0 -> -1
jtb.JavaParser:jj_3R_69()Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3_4()Z
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
jtb.JavaParser:jj_2_14(I)Z
utilMDE.Intern.SequenceAndIndices:hashCode()I
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
utilMDE.FuzzyFloat:lt(DD)Z
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
jtb.JavaParser:jj_3R_118()Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_122()Z
jtb.JavaParser:jj_3_3()Z
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.Quant:subsetOf([D[F)Z
utilMDE.LimitedSizeIntSet:size()I
utilMDE.SimpleLog:SimpleLog(Z)V
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.Quant:pairwiseLT([I[I)Z
daikon.Quant:lt(II)Z
jtb.JavaParser:jj_3R_89()Z
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
utilMDE.OrderedPairIterator:setnext1()V
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_47()Z
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.diff.RootNode:RootNode()V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
jtb.JavaParser:jj_3R_56()Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
jtb.JavaParser:jj_2_4(I)Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
utilMDE.FuzzyFloat:gte(DD)Z
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
jtb.JavaParser:jj_3R_134()Z
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.inv.filter.ParentFilter:ParentFilter()V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Simple:isLiteralConstant()Z
utilMDE.Options.ArgException:ArgException(Ljava.lang.String;)V
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptName:isCombinedExitPoint()Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.inv.Invariant:logOn()Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:min([I)I
jtb.Token:newToken(I)Ljtb.Token;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
jtb.JavaParser:jj_3R_96()Z
jtb.JavaParser:jj_3R_51()Z
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.UpperBoundCore:computeProbability()D
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:memberOf(F[F)Z
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:new_ppt()V
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.Quant:memberOf(I[I)Z
daikon.PptSlice1:num_samples()I
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.Quant:eq(II)Z
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.VarInfo:relate_var()V
daikon.inv.ValueSet:ValueSet(I)V
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.ModBitTracker:split(I)I
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.ProglangType:baseIsScalar()Z
utilMDE.WeakHasherMap:processQueue()V
daikon.inv.unary.scalar.NonModulus:enabled()Z
utilMDE.SimpleLog.LongVal:LongVal(J)V
jtb.JavaParser:jj_3R_76()Z
daikon.ProglangType:baseIsIntegral()Z
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.VarInfo:name()Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_117()Z
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
jtb.JavaParser:jj_2_12(I)Z
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.inv.Invariant:prob_or(DD)D
daikon.Quant:setEqual([I[I)Z
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName:hashCode()I
jtb.JavaParser:jj_ntk()I
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_162()Z
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.Quant:subsetOf([F[F)Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.Quant:subsetOf([D[D)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.Quant:eq(JJ)Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.inv.Invariant:prob_and(DDD)D
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.Quant:memberOf(F[D)Z
utilMDE.Intern:intern([D)[D
jtb.JavaCharStream:getEndLine()I
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.Quant:eltwiseLT([I)Z
daikon.ModBitTracker:num_samples()I
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
jtb.JavaParser:jj_3R_61()Z
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.Intern:intern([I)[I
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.inv.unary.UpperBoundCore:calc_modulus()J
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V | STATEMENT | 10772 | stmt -> ;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quant:lexEqual([I[I)Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.NodeList:NodeList()V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.Debug:logDetail()Z
utilMDE.LimitedSizeIntSet:add(I)V
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
utilMDE.OrderedPairIterator:hasNext()Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.Quant:eltsGtIndex([I)Z
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
jtb.JavaCharStream:FillBuff()V
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.Debug:logOn()Z
jtb.JavaParser:jj_3R_49()Z
utilMDE.Assert:assertTrue(Z)V
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
utilMDE.TestUtilMDE:lsis_test(I)V
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.ValueTuple:size()I
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
jtb.JavaParser:jj_2_10(I)Z
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.Quant:subsetOf([J[J)Z
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Quant:eltsLTE([II)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.diff.Node:Node(LutilMDE.Pair;)V
utilMDE.FuzzyFloat:eq(DD)Z
jtb.JavaParser:jj_3R_119()Z
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_88()Z
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eq(DD)Z
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
utilMDE.ArraysMDE:subarray([III)[I
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
utilMDE.ArraysMDE:max([I)I
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3_10()Z
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String; | RETURN | 10951 | return null
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.PptSlice0:initInvariantsSeen()V
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
jtb.JavaParser:jj_3_16()Z
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_2_13(I)Z
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:gt(II)Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:min_max([I)[I
daikon.Quant:lexLT([I[I)Z
daikon.ProglangType:elementType()Ldaikon.ProglangType;
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.ModBitTracker:num_vars()I
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.ValueTuple:isMissing(I)Z
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.PptSlice2:arity()I
daikon.PptName:isEnterPoint()Z
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.Quant:eltwiseEqual([I)Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.VarInfoName:isLiteralConstant()Z
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaCharStream:ReadByte()C
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
jtb.JavaParser:jj_3R_163()Z
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
utilMDE.Intern:internSubsequence([III)[I
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
jtb.JavaParser:jj_3_13()Z
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
jtb.JavaParser:jj_3R_97()Z
daikon.VarInfoName:esc_name()Ljava.lang.String;
jtb.JavaParser:jj_3R_116()Z
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
utilMDE.OrderedPairIterator:setnext2()V
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.Quant:eltwiseGTE([I)Z
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:gte(II)Z
utilMDE.MathMDE:modulus([I)[I
jtb.JavaCharStream:BeginToken()C
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.Quant:pairwiseEqual([I[I)Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
daikon.Quant:eltsEqualIndex([I)Z
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
utilMDE.ArraysMDE:sum([I)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.Intern:intern([J)[J
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_58()Z
daikon.Quant:lexNotEqual([I[I)Z
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.inv.Invariant:logDetail()Z
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
815 2 837 2 589 4 832 2 168 2 833 2 72 2 311 2 677 2 
645 2 1011 2 599 6 166 6 537 2 497 2 817 2 561 2 973 6 274 2 131 2 
832 2 834 2 308 2 86 6 311 2 636 6 231 6 407 4 769 2 953 6 1003 2 413 4 1006 2 
335 8 275 16 306 4 885 8 886 26 311 6 287 16 789 6 385 10 724 10 467 12 61 2 1005 6 321 2 731 29 957 2 435 10 832 6 633 8 401 2 701 10 803 2 214 4 738 2 606 10 874 4 544 16 575 8 171 2 991 4 
534 6 898 4 
220 2 
910 2 668 2 566 2 877 2 1001 2 655 2 
335 6 275 32 221 4 881 2 779 4 816 4 47 2 416 4 886 48 885 18 311 4 287 32 1000 4 789 4 724 16 353 4 385 6 467 22 595 6 356 2 1005 4 321 2 731 54 860 2 435 16 700 4 832 4 701 16 605 2 1018 6 606 16 192 6 215 2 135 6 544 32 106 6 304 6 991 2 772 8 
668 2 66 2 320 2 
746 2 63 2 125 2 160 2 716 2 147 10 864 22 782 2 368 2 702 2 623 2 383 2 577 2 447 2 
275 2 48 2 7 2 885 2 886 4 346 2 949 2 232 2 92 2 287 2 789 2 724 2 385 4 467 2 757 2 731 6 435 2 890 2 701 2 479 2 606 2 544 2 991 2 
275 8 731 16 435 4 816 4 416 4 701 4 886 12 214 2 606 4 192 6 287 8 544 8 466 2 724 4 56 2 467 4 595 6 
910 4 843 2 451 2 278 2 44 2 549 2 6 4 522 2 224 2 198 2 309 10 342 2 619 2 89 4 177 4 289 4 122 2 320 6 97 4 533 2 238 2 956 4 630 62 503 14 538 4 269 4 668 8 100 10 66 2 369 2 476 2 371 4 872 2 985 2 608 2 73 2 252 4 546 4 936 4 77 2 
98 2 792 2 590 2 638 2 726 2 
1 3 647 2 142 3 521 2 257 4 649 2 523 16 148 1 526 1 259 2 153 1 154 2 10 2 530 16 261 1 262 16 384 1 918 2 919 2 790 8 19 6 265 3 663 3 264 24 664 2 921 2 536 1 924 4 670 1 672 2 28 2 27 2 801 2 674 2 677 2 405 2 406 6 804 2 542 2 37 3 170 1 933 1 809 2 808 2 934 2 935 2 681 2 39 2 685 2 940 2 279 2 941 2 689 2 281 4 690 2 944 2 53 4 286 1 821 1 556 2 951 1 178 2 696 32 180 2 828 2 562 2 830 2 832 32 564 2 296 3 437 2 190 3 438 2 440 2 571 2 707 2 710 2 966 2 968 6 712 2 78 2 713 2 79 2 581 1 844 3 455 2 971 4 456 5 310 2 459 2 311 34 90 2 720 2 723 16 315 2 93 2 203 2 728 32 730 12 857 2 596 24 977 3 733 8 604 2 102 2 212 8 737 2 104 2 216 2 217 1 988 1 989 2 610 2 879 3 992 2 747 2 614 2 615 4 493 6 749 4 113 2 345 2 352 2 354 2 627 2 235 2 502 2 629 2 124 2 758 3 892 2 505 1 128 2 894 2 129 2 242 2 1017 2 635 2 765 3 372 2 249 2 1022 2 639 4 511 2 514 2 138 2 777 2 
311 2 445 2 
248 2 311 4 776 2 
744 2 
908 2 254 4 2 40 519 2 141 2 145 4 780 40 379 2 149 4 653 40 652 22 913 4 8 2 656 40 659 4 785 24 786 2 529 2 660 4 11 4 13 120 156 40 661 2 20 44 21 2 535 2 268 2 398 4 161 2 270 2 163 40 165 8 34 4 930 16 805 2 273 20 810 2 812 2 276 22 548 4 280 4 50 2 950 2 421 24 176 4 54 4 952 120 954 4 826 2 181 2 58 8 60 16 431 40 186 4 187 2 831 4 961 4 959 8 963 4 68 4 567 10 298 2 191 6 301 132 838 16 964 2 572 2 574 4 443 4 76 30 576 2 578 2 580 4 82 2 81 40 80 4 307 2 454 4 583 4 457 4 458 2 972 2 584 2 460 2 199 4 847 18 848 2 463 4 721 2 853 10 594 2 727 4 729 30 468 4 206 2 207 2 208 2 323 20 732 2 473 6 734 4 210 2 101 2 865 4 603 4 866 2 983 2 869 2 740 10 986 40 328 2 108 4 611 30 742 2 485 4 487 40 489 2 488 36 109 4 880 2 339 4 112 2 882 4 617 4 748 2 884 14 996 2 228 2 229 2 750 18 343 10 347 18 621 2 752 4 349 12 350 40 754 4 626 4 1002 20 500 10 361 4 360 2 363 14 760 2 1013 4 506 4 243 2 130 2 244 4 132 2 373 4 507 2 508 2 133 120 1021 2 899 4 901 4 140 4 906 2 773 8 
699 2 38 1 981 2 219 2 
441 2 699 2 
694 2 699 2 874 2 668 2 211 2 415 2 40 2 
745 2 694 2 699 2 
694 2 699 2 474 2 
378 2 239 2 219 2 
694 2 699 2 
378 2 547 2 
200 2 699 2 
378 2 994 2 219 2 
592 2 219 2 984 2 
903 2 219 2 305 2 
126 2 219 2 428 2 
137 2 593 2 219 2 
378 2 932 2 
699 2 367 2 
783 2 984 2 
903 2 499 2 
126 2 120 2 
979 2 593 2 
378 2 997 2 
9 2 593 2 
126 2 819 2 
430 2 903 2 
341 2 984 2 
378 2 994 2 807 2 219 2 
378 2 994 2 807 2 1014 2 219 2 
378 2 146 2 219 2 
378 2 498 2 219 2 
551 2 285 2 897 2 902 2 
185 2 668 2 415 2 426 2 
185 2 668 2 211 2 415 2 426 2 230 2 
694 2 699 2 874 2 668 2 415 2 344 2 
45 2 943 2 
874 2 668 2 162 2 415 2 
126 2 15 2 
319 2 593 2 
422 2 984 2 
903 2 856 2 
911 2 593 2 903 2 
517 2 593 2 903 2 
593 2 903 2 88 2 
233 2 593 2 903 2 
415 2 87 6 382 2 391 6 322 2 668 2 64 2 1023 2 
378 2 907 2 
472 2 778 2 433 2 687 2 761 2 864 6 164 2 313 2 767 2 588 2 871 4 850 4 679 2 481 2 107 2 411 2 756 2 412 2 
219 2 96 2 
129 2 
647 2 521 2 649 2 257 4 380 2 523 6 10 2 788 4 919 2 388 2 389 2 19 6 923 2 924 4 801 2 674 2 677 2 406 2 804 2 685 2 281 2 690 2 53 2 944 2 286 2 178 2 696 4 57 2 429 2 828 2 830 2 832 26 836 2 571 2 968 2 712 2 713 2 448 4 79 2 582 2 459 2 311 26 90 2 720 2 203 2 728 6 730 8 733 2 604 2 104 2 216 2 614 2 615 4 491 2 493 4 749 4 351 2 355 2 235 6 357 2 1007 2 124 2 505 2 128 2 894 2 635 2 372 2 245 2 249 4 639 2 1022 2 900 2 251 2 777 2 
647 2 521 2 649 2 257 4 523 6 10 2 788 4 919 2 386 2 388 2 19 6 923 2 924 4 801 2 674 2 677 2 406 2 804 2 935 2 685 2 940 2 281 2 690 2 53 2 944 2 286 2 178 2 696 4 57 2 429 2 828 2 830 2 832 26 836 2 571 2 707 2 968 2 712 2 713 2 448 4 79 2 582 2 459 2 311 26 90 2 720 2 203 2 728 6 730 8 733 2 604 2 104 2 216 2 110 2 614 2 615 4 491 2 493 6 749 4 351 2 355 2 235 6 357 2 1007 2 1009 2 124 2 505 2 128 2 894 2 635 2 372 2 245 2 249 4 639 2 1022 2 900 2 777 2 
127 2 
557 2 65 2 
79 2 452 2 257 2 84 8 973 6 311 12 151 2 202 2 591 2 10 2 260 2 318 2 976 2 19 4 599 6 861 8 396 2 922 2 863 4 604 2 801 2 213 2 404 2 33 2 104 2 166 6 543 2 105 2 480 4 408 4 409 2 216 2 609 4 484 2 613 2 615 2 414 2 818 2 817 4 552 2 494 2 554 2 118 2 119 4 497 4 178 2 625 2 179 2 561 2 62 2 434 2 832 6 565 2 131 2 764 4 896 2 703 10 640 2 711 2 775 2 
79 2 452 2 257 2 84 8 973 8 311 12 151 2 202 2 587 4 591 2 10 2 260 2 318 2 976 2 19 4 599 6 861 8 396 2 863 4 604 2 801 2 213 2 404 2 33 2 104 2 166 8 543 2 105 2 480 4 408 4 409 2 216 2 609 4 484 2 274 2 613 2 615 2 414 2 46 2 818 2 817 4 552 2 494 2 554 2 822 2 118 2 119 4 178 2 497 4 625 2 179 2 561 2 62 2 434 2 832 6 565 2 131 2 764 4 896 2 703 10 711 2 775 2 
599 2 818 2 817 2 973 2 552 2 764 2 896 2 151 2 494 2 118 2 260 2 119 4 543 2 409 2 497 2 609 4 711 2 484 2 
79 2 452 2 257 2 84 4 973 6 311 12 151 2 202 2 591 2 10 2 260 2 318 2 976 2 19 4 599 4 861 4 396 2 922 2 863 4 604 2 801 2 213 2 404 2 33 2 104 2 166 6 543 2 105 2 480 4 408 4 409 2 216 2 609 4 484 2 274 2 613 2 615 2 414 2 818 2 817 4 552 2 494 2 554 2 118 2 119 4 497 4 178 2 625 2 179 2 561 2 62 2 434 2 832 6 565 2 764 4 896 2 703 6 640 2 711 2 775 2 
79 2 452 2 257 2 84 4 973 4 311 12 151 2 202 2 591 2 10 2 260 2 318 2 976 2 19 4 599 6 861 4 396 2 922 2 537 2 863 4 604 2 801 2 213 2 404 2 33 2 104 2 166 6 543 2 105 2 480 4 408 4 409 2 216 2 609 4 484 2 613 2 615 2 414 2 818 2 817 4 552 2 494 2 554 2 118 2 119 4 497 4 178 2 625 2 179 2 561 2 62 2 434 2 832 6 565 2 764 4 896 2 703 6 640 2 711 2 775 2 
79 2 452 2 257 2 84 4 973 6 311 12 151 2 202 2 591 2 10 2 260 2 318 2 976 2 19 4 599 6 861 8 396 2 922 2 863 4 604 2 801 2 213 2 404 2 33 2 104 2 166 6 543 2 105 2 480 4 408 4 409 2 216 2 609 4 484 2 613 2 615 2 414 2 818 2 817 4 552 2 494 2 554 2 118 2 119 4 497 4 178 2 625 2 179 2 561 2 62 2 434 2 832 6 565 2 131 2 764 4 896 2 703 6 640 2 711 2 775 2 
79 2 452 2 257 2 84 8 973 6 311 12 151 2 202 2 591 2 10 2 260 2 318 2 976 2 19 4 599 8 861 8 396 2 922 2 537 2 863 4 604 2 801 2 213 2 404 2 33 2 104 2 166 8 543 2 105 2 480 4 408 4 409 2 216 2 609 4 484 2 613 2 615 2 414 2 818 2 817 4 552 2 494 2 554 2 118 2 119 4 497 4 178 2 625 2 179 2 561 2 62 2 434 2 832 6 565 2 131 2 764 4 896 2 703 10 640 2 711 2 775 2 
79 2 452 2 257 2 84 8 973 6 311 12 151 2 202 2 591 2 10 2 260 2 318 2 976 2 19 4 599 6 861 8 396 2 922 2 863 4 604 2 801 2 213 2 404 2 33 2 104 2 166 6 543 2 105 2 480 4 408 4 409 2 216 2 609 4 484 2 613 2 615 2 414 2 818 2 817 4 552 2 494 2 554 2 118 2 119 4 497 4 178 2 625 2 179 2 561 2 62 2 434 2 832 6 565 2 131 2 764 4 896 2 703 10 640 2 711 2 775 2 
521 2 257 4 523 6 525 2 10 2 260 2 788 4 263 2 17 2 19 6 22 2 793 4 537 4 26 6 799 2 800 1 801 2 32 4 33 2 541 7 543 2 35 1 814 2 281 2 817 4 818 2 53 2 552 2 820 2 553 6 554 2 823 2 558 8 560 6 559 6 561 4 62 2 829 2 830 12 291 2 832 24 565 2 571 2 839 2 573 1 79 2 845 6 311 46 91 2 591 2 318 4 599 8 861 2 863 8 604 2 104 2 105 2 609 4 331 6 334 2 613 2 615 4 614 2 337 6 340 6 118 2 119 4 625 2 121 6 124 2 632 1 128 2 896 2 372 2 374 1 134 2 639 2 642 10 647 2 648 2 649 2 151 2 388 4 392 2 666 2 396 2 922 2 923 2 924 4 671 6 674 2 677 2 404 2 406 2 166 12 678 2 408 6 167 2 409 2 410 2 935 2 684 6 683 2 685 2 938 6 414 2 690 2 691 2 175 2 420 1 695 6 178 2 696 2 179 2 425 2 429 2 434 2 698 7 703 2 707 2 705 2 194 2 968 2 711 2 712 2 445 6 713 2 452 2 717 2 459 2 973 4 461 1 202 4 976 2 203 2 728 8 730 4 733 2 213 2 736 1 480 4 216 2 482 2 484 2 744 6 493 6 749 4 494 2 496 1 497 4 755 2 235 6 501 2 1007 2 1004 2 764 4 1020 2 248 6 775 2 
647 2 648 2 521 2 649 2 257 4 523 6 525 2 151 2 10 2 260 2 788 4 263 2 388 4 17 2 19 6 22 2 392 2 793 4 666 2 922 2 396 2 923 2 924 4 671 6 26 6 799 2 801 2 674 2 32 4 677 2 33 2 404 2 406 2 166 12 167 2 543 2 408 6 678 2 409 2 410 2 935 2 683 2 684 6 814 2 938 6 685 2 414 2 281 4 690 2 818 2 817 4 691 2 53 4 553 6 820 2 552 2 554 2 175 2 823 2 695 6 558 8 288 2 696 2 178 2 559 6 560 6 425 2 179 2 561 4 429 2 829 2 62 2 830 12 434 2 291 2 832 26 565 2 703 2 839 2 571 2 705 2 707 2 194 2 968 2 711 2 445 6 712 2 713 2 79 2 196 2 452 2 845 6 717 2 459 2 973 8 311 48 91 2 202 4 591 2 318 4 976 2 203 2 728 8 730 8 599 8 733 2 861 6 863 8 604 2 213 2 104 2 480 4 105 2 216 2 482 2 609 4 331 6 334 2 484 2 613 2 744 6 614 2 615 4 337 6 340 6 493 6 749 4 494 2 118 2 119 4 497 4 625 2 121 6 755 2 501 2 235 6 1004 2 1007 2 124 2 128 2 131 4 764 4 896 2 372 2 1020 2 134 2 249 2 248 6 639 4 642 10 775 2 
647 2 648 2 521 2 649 2 257 4 523 6 525 2 151 2 10 2 260 2 788 4 263 2 388 4 17 2 19 6 22 2 392 2 793 4 666 2 922 2 396 2 923 2 924 4 671 6 26 6 799 2 674 2 801 2 32 4 677 2 33 2 404 2 406 2 166 12 167 2 543 2 408 6 678 2 409 2 410 2 935 2 683 2 684 6 814 2 938 6 685 2 414 2 281 4 690 2 818 2 817 4 691 2 53 4 553 6 820 2 552 2 554 2 175 2 823 2 695 6 558 8 288 2 696 2 178 2 559 6 560 6 425 2 179 2 561 4 429 2 829 2 62 2 830 12 434 2 291 2 832 26 565 2 703 6 839 2 571 2 705 2 707 2 194 2 968 2 711 2 445 6 712 2 713 2 79 2 196 2 452 2 845 6 717 2 84 4 459 2 973 8 311 48 91 2 202 4 591 2 318 4 976 2 203 2 728 8 730 8 599 8 733 2 861 6 863 8 604 2 213 2 104 2 480 4 105 2 216 2 482 2 609 4 331 6 334 2 484 2 613 2 744 6 614 2 615 4 337 6 340 6 493 6 749 4 494 2 118 2 119 4 497 4 625 2 121 6 755 2 501 2 235 6 1004 2 1007 2 124 2 128 2 131 4 764 4 896 2 372 2 1020 2 134 2 249 2 248 6 639 4 642 10 775 2 
521 2 257 4 523 8 525 2 10 2 260 2 788 6 263 2 17 2 19 6 791 6 22 2 793 4 267 2 537 2 26 6 799 2 801 2 32 4 33 2 543 2 274 2 814 2 281 4 817 4 818 2 51 6 53 4 552 2 820 2 553 6 554 2 823 2 825 2 558 8 288 2 560 6 559 12 561 4 62 2 829 2 830 10 291 2 832 24 565 2 67 6 571 2 839 2 79 2 845 6 84 4 311 52 91 2 591 2 318 4 599 10 861 6 863 8 604 2 325 6 104 2 327 6 105 2 609 4 331 6 334 2 613 2 615 4 614 2 337 6 340 6 118 2 119 4 624 6 625 2 121 6 123 2 124 2 364 2 128 2 131 4 896 2 372 2 134 2 639 4 642 8 377 2 647 2 648 2 649 2 151 2 388 4 666 2 396 2 922 2 923 4 924 4 671 6 674 2 676 6 677 2 404 2 406 4 166 16 167 2 678 2 408 6 409 2 410 2 935 2 684 6 683 2 685 2 938 12 414 2 690 2 691 2 175 2 695 12 178 2 696 4 179 2 425 2 429 2 434 2 703 6 707 2 705 2 194 2 968 4 711 2 712 2 445 12 713 2 714 6 196 2 452 2 717 2 459 2 973 10 202 4 976 2 203 2 728 12 730 10 733 4 213 2 480 4 216 2 987 2 482 2 484 2 744 12 493 6 226 6 749 4 227 2 751 2 494 2 497 4 755 2 235 8 501 2 1007 2 1004 2 764 4 1020 2 249 2 248 12 775 2 
452 2 84 4 817 4 973 6 311 4 552 2 151 2 494 2 554 2 118 2 591 2 119 2 497 4 625 2 179 2 561 2 62 2 599 6 922 2 396 2 861 6 863 2 131 2 896 2 33 2 404 2 213 2 703 4 166 4 408 2 480 2 105 2 409 2 609 2 484 2 
647 2 521 2 257 4 649 2 523 6 151 2 10 2 788 4 388 2 19 6 392 2 922 2 396 2 669 2 924 4 927 3 27 2 801 2 674 2 677 2 404 2 33 2 406 3 166 4 408 2 409 2 935 2 39 2 685 2 690 2 817 4 692 2 552 2 554 2 178 2 696 3 179 2 561 2 429 2 62 2 830 4 832 24 703 2 571 2 707 2 303 2 968 3 712 2 713 2 79 2 452 2 459 2 973 6 311 28 591 2 976 2 203 2 725 2 728 8 599 6 861 6 863 2 604 2 103 2 213 2 104 2 480 2 105 2 216 2 609 2 484 2 615 4 614 2 747 2 493 6 749 4 494 2 118 2 119 2 497 4 625 2 235 6 1007 2 128 2 129 2 131 2 896 2 372 2 642 2 
62 2 213 2 741 2 
62 2 213 2 741 2 
516 2 647 2 649 2 257 4 523 2 657 4 151 4 527 2 10 2 388 6 19 6 23 2 793 2 665 2 396 2 537 4 924 4 26 2 801 2 674 2 31 2 32 2 677 2 166 16 543 2 408 4 409 2 935 2 274 4 685 2 414 2 43 2 281 4 690 2 818 2 817 4 53 4 178 2 696 2 179 2 561 4 429 2 182 2 183 2 62 6 830 4 832 16 565 2 302 2 703 6 571 2 707 2 712 2 713 2 79 2 715 2 717 2 84 4 459 2 973 12 311 24 202 2 974 2 975 2 318 4 203 2 728 2 730 4 599 12 861 6 863 4 604 2 213 4 104 2 480 2 216 2 741 2 609 2 613 2 614 2 615 4 995 2 493 6 749 4 494 2 119 2 497 4 755 2 235 2 1004 2 1007 2 362 2 124 4 128 2 893 2 131 4 764 4 372 2 246 4 376 2 639 4 900 4 513 2 642 2 
830 2 665 2 715 2 667 2 832 2 980 2 26 2 691 2 311 4 32 2 91 2 260 2 557 2 376 2 178 2 642 2 774 2 
516 4 647 2 649 2 257 4 523 2 657 4 151 4 10 2 388 6 19 6 23 2 793 2 665 2 396 2 537 4 924 4 26 2 801 2 674 2 31 2 677 2 166 16 543 2 408 4 409 2 935 2 274 4 685 2 414 2 939 2 281 4 690 2 818 2 817 4 53 4 178 2 696 4 179 2 427 2 561 4 429 2 182 2 183 2 62 6 830 2 832 16 565 2 302 2 703 6 571 2 707 2 712 2 713 2 79 2 715 2 717 2 84 4 459 2 973 12 311 24 202 4 974 2 318 4 203 2 728 2 730 4 599 12 861 6 863 4 604 2 213 4 104 2 480 2 216 2 741 2 609 2 613 2 614 2 615 4 493 6 749 4 618 2 494 2 119 2 497 4 755 2 235 2 1004 2 1007 2 362 2 124 4 128 2 893 2 131 4 764 4 372 2 246 4 376 2 639 4 900 4 513 2 139 2 515 2 775 2 
516 2 647 2 649 2 257 4 523 2 657 4 151 4 916 2 10 2 388 6 19 6 23 2 793 2 665 2 396 2 537 4 924 4 26 2 801 2 674 2 31 2 32 2 677 2 166 16 543 2 408 4 409 2 935 2 274 4 685 2 414 2 281 4 690 2 818 2 817 4 53 4 178 2 696 2 179 2 561 4 429 2 182 2 183 2 62 6 830 4 832 16 565 2 302 2 703 6 571 2 707 2 712 2 713 2 79 2 83 2 715 2 717 2 84 4 459 2 973 12 311 24 202 4 974 2 318 4 203 2 728 2 855 2 470 2 730 4 599 12 861 6 863 4 604 2 213 4 104 2 480 2 329 2 216 2 741 2 609 2 613 2 614 2 615 4 493 6 749 4 494 2 119 2 497 4 755 2 235 2 1004 2 1007 2 362 2 124 4 128 2 893 2 131 4 764 4 372 2 246 4 376 2 639 4 900 4 513 2 642 2 775 2 
713 2 79 2 450 2 648 2 521 2 3 2 5 2 257 4 459 2 523 6 585 2 525 2 311 24 312 2 10 2 787 2 462 2 788 4 203 2 388 2 204 2 728 8 19 6 22 2 794 2 397 2 924 2 604 2 674 2 801 2 403 2 677 2 406 2 104 2 876 2 216 2 607 2 614 2 615 4 690 2 493 2 417 2 749 2 947 2 820 2 887 2 696 2 178 2 827 2 425 2 429 2 235 6 59 1 830 2 832 18 297 2 504 1 365 2 366 2 372 2 570 2 839 2 571 2 512 2 193 2 968 2 712 2 
521 2 197 2 523 2 311 2 948 2 999 2 788 2 696 3 854 2 728 2 235 2 628 2 159 2 960 2 832 2 923 6 436 4 29 2 475 2 928 2 406 3 509 2 442 3 968 3 644 1 
159 2 960 2 832 2 521 2 923 6 436 4 197 2 523 2 29 2 311 2 928 2 475 2 948 2 406 2 509 2 788 2 999 2 442 2 854 2 696 2 728 2 968 2 235 2 628 2 
159 2 960 2 832 2 521 2 923 6 436 4 197 2 523 2 29 2 311 2 928 2 475 2 948 2 406 2 509 2 788 2 999 2 442 2 854 2 696 2 728 2 968 2 235 2 628 2 
912 4 521 2 150 2 311 10 846 2 723 2 262 2 317 2 724 2 387 3 728 2 471 3 731 6 600 2 868 3 406 3 606 2 739 2 544 2 878 2 275 2 335 4 550 4 883 4 886 4 948 2 114 4 287 2 696 3 888 6 1005 2 832 4 435 2 241 2 69 2 701 2 70 2 71 2 74 4 1025 2 
335 4 275 2 912 4 521 2 550 4 883 4 150 2 885 2 886 4 311 10 948 2 114 4 846 2 287 2 262 2 723 2 696 2 724 2 317 2 387 2 467 2 728 2 888 6 1005 2 321 2 471 2 731 4 600 2 435 2 832 4 701 2 69 2 241 2 868 2 70 2 739 2 606 2 71 2 406 2 544 2 74 4 878 2 1025 2 
335 4 275 2 912 4 521 2 550 4 883 4 150 2 885 2 886 4 311 10 948 2 114 4 846 2 287 2 262 2 723 2 696 2 724 2 317 2 387 2 467 2 728 2 888 6 1005 2 321 2 471 2 731 4 600 2 435 2 832 4 701 2 69 2 241 2 868 2 70 2 739 2 606 2 71 2 406 2 544 2 74 4 878 2 1025 2 
335 4 275 2 912 4 521 2 550 4 883 4 150 2 885 2 886 4 311 10 948 2 114 4 846 2 287 2 262 2 723 2 696 2 724 2 317 2 387 2 467 2 728 2 888 6 1005 2 321 2 471 2 731 4 600 2 435 2 832 4 701 2 69 2 241 2 868 2 70 2 739 2 606 2 71 2 406 2 544 2 74 4 878 2 1025 2 
335 4 275 2 912 4 521 2 550 4 883 4 150 2 885 4 886 4 311 10 948 2 114 4 846 2 287 2 262 2 723 2 696 2 724 2 317 2 387 2 467 4 728 2 888 6 1005 2 321 4 471 2 731 4 600 2 435 2 832 4 701 2 69 2 241 2 868 2 70 2 739 2 606 2 71 2 406 2 544 2 74 4 878 2 1025 2 
25 2 762 2 483 2 697 2 675 2 446 2 
184 2 929 2 490 2 247 2 491 2 675 2 381 2 
842 2 938 2 79 2 277 2 453 2 718 2 198 1 342 1 914 2 311 10 784 2 622 2 917 2 14 2 495 2 290 2 95 2 958 2 631 1 832 8 293 2 634 2 300 2 477 2 811 1 643 1 
275 6 335 4 416 2 886 12 885 2 311 6 586 2 287 6 353 2 724 6 467 3 1005 2 321 2 731 16 832 6 435 6 925 2 400 2 701 6 568 2 1018 4 606 6 931 2 192 4 271 2 544 6 136 2 708 2 641 2 772 2 
686 2 394 2 832 1 993 2 189 7 735 2 550 2 311 1 284 4 114 2 768 2 998 2 419 1 875 2 330 2 424 2 74 2 662 2 
686 2 394 2 993 4 189 6 735 2 550 2 284 4 114 2 768 2 998 4 875 2 330 2 74 2 424 4 662 2 
686 2 394 2 832 1 993 8 189 10 735 2 550 2 311 1 284 4 114 2 768 6 998 8 419 1 875 2 330 8 74 2 424 8 662 2 
686 2 394 2 993 2 189 2 735 2 550 2 284 2 114 2 998 2 875 2 74 2 424 2 662 2 
253 24 255 24 520 2 144 2 4 2 524 4 654 4 152 92 658 8 915 12 531 6 532 42 157 6 390 2 16 6 920 2 795 4 393 6 796 10 797 6 924 88 399 8 926 8 798 6 540 5 30 11 802 4 36 6 806 124 272 90 545 26 935 58 813 6 682 4 42 10 688 6 942 10 52 2 283 4 945 4 946 6 173 4 693 17 555 2 174 22 824 4 55 2 955 4 432 10 188 10 292 16 962 34 832 134 294 2 295 4 835 4 439 24 569 8 299 10 571 14 707 58 704 24 965 4 195 16 967 8 841 6 579 4 449 6 969 4 970 6 311 150 201 26 314 6 464 24 851 4 722 6 852 84 316 16 203 14 94 6 469 6 597 10 598 50 978 18 209 4 601 8 324 8 982 6 870 4 478 2 873 2 218 2 333 2 990 12 612 2 743 6 111 4 614 8 336 90 616 2 223 6 492 4 225 6 493 248 749 112 620 4 115 8 117 18 234 2 358 4 237 4 1008 8 889 24 1010 6 1012 2 1015 10 240 4 895 42 763 2 1016 6 370 1 1019 2 375 8 510 28 637 16 770 4 905 36 904 2 
449 2 909 2 970 2 518 2 255 2 143 2 256 2 650 2 85 2 781 2 654 2 311 46 528 2 658 6 258 2 719 4 155 4 316 4 465 2 203 2 94 2 18 2 99 2 597 2 266 2 24 2 393 2 859 2 796 2 395 4 209 2 797 2 862 2 602 2 924 20 399 2 926 2 673 2 540 2 402 2 326 2 478 2 873 2 806 6 935 2 218 2 614 2 41 2 338 2 42 2 942 2 222 2 282 2 223 4 493 44 172 2 749 20 693 2 418 2 115 2 117 2 753 2 359 2 236 2 889 2 563 2 432 2 188 2 292 4 832 44 759 2 891 2 1015 2 763 2 299 2 569 2 1019 2 510 38 571 2 704 2 707 2 706 2 709 2 1024 2 75 6 771 4 444 2 905 2 904 2 195 4 840 2 841 2 
646 4 0 2 253 8 651 8 524 4 152 24 528 10 658 6 12 16 531 4 532 16 157 4 16 4 920 2 158 4 795 4 393 4 797 4 924 36 926 2 539 2 36 4 806 24 169 4 680 2 935 28 813 4 682 4 937 4 42 4 49 8 283 4 945 4 172 2 946 4 693 10 824 4 423 2 55 2 432 6 188 4 292 10 962 30 832 70 569 2 299 4 571 6 707 30 706 2 965 4 195 10 840 10 841 4 579 4 449 4 970 4 311 78 849 8 314 4 851 4 852 24 722 4 316 10 203 6 94 4 205 32 469 4 858 2 598 8 601 4 862 10 982 4 867 4 870 4 478 2 873 2 332 2 218 2 990 14 486 4 743 4 111 2 614 2 616 2 222 2 223 2 225 4 493 104 749 44 115 2 116 16 117 10 237 4 1010 4 1012 2 1015 4 240 4 895 8 763 2 1016 4 766 4 375 4 510 14 637 8 250 8 905 6 904 2 
969 2 449 4 970 4 520 2 144 2 650 2 311 28 658 4 316 6 203 2 390 2 94 4 795 2 393 4 797 4 924 14 926 2 30 2 540 2 478 2 873 2 806 8 935 12 218 2 682 2 612 2 111 2 614 2 42 2 223 2 493 40 749 14 693 2 115 2 555 2 174 10 117 2 432 2 188 2 292 6 832 26 962 6 295 2 1015 2 763 2 299 2 569 2 1019 2 375 4 510 14 571 2 637 6 706 2 707 12 967 2 195 6 904 2 905 2 841 4 
348 2 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V FAILED junit.framework.AssertionFailedError (633,1030) 
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR utilMDE.Assert$AssertionException (617,730) (617,730) 1124 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V ERROR java.lang.NullPointerException 902 
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR utilMDE.Assert$AssertionException (617,730) (617,730) 1124 602 809 620 598 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 222 1158 1055 
daikon.test.VarInfoNameTest:testJML()V FAILED junit.framework.AssertionFailedError 899 1055 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_0()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_1()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_2()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_3()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_4()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_5()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_6()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_7()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_8()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_9()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_10()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_11()V ERROR java.lang.RuntimeException (652,961) (652,961) (132,322) (132,322) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_12()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_13()V ERROR java.lang.RuntimeException (652,961) (652,961) (132,322) (132,322) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_14()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_15()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_16()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_17()V PASSED
daikon.test.split.SplitterFactoryTest:testmisc_Fib_main_18()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_19()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_20()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_21()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_22()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_23()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_24()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_25()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_26()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_27()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_28()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_29()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_30()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_31()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_32()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__33()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__34()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__35()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__36()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__37()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__38()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__39()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__40()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__41()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__42()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__43()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.inv.unary.UpperBoundCore:wouldChange(J)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.PptSlice1:arity()I
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.ElementsFinder:inPre()Z
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.inv.unary.sequence.EltOneOf:get_proto()Ldaikon.inv.Invariant;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_daikon()Ljava.lang.String;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.inv.Invariant:prob_and(DDD)D
utilMDE.LimitedSizeIntSet:add(I)V
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.ProglangType:baseIsString()Z
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
utilMDE.ArraysMDE:noDuplicates([I)Z
utilMDE.UtilMDE:lineNumberFileReader(Ljava.lang.String;)Ljava.io.LineNumberReader;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:isPseudoArray()Z
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.ValueTuple:isMissingFlow(I)Z
daikon.Debug:logOn()Z
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant; | RETURN | 2124 | return null
daikon.ModBitTracker:num_vars()I
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
jtb.JavaParser:jj_3R_58()Z
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltUpperBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.inv.unary.sequence.NoDuplicates:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.inv.Invariant:logOn()Z
daikon.Quant:lexLTE([I[I)Z
daikon.inv.unary.sequence.NoDuplicates:NoDuplicates(Ldaikon.PptSlice;)V
daikon.Quant:setDiff([I[I)[I
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Invariant:prob_or(DD)D
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.Quant:slice([III)[I
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfo:simplify_quantify(Ljava.util.EnumSet;[Ldaikon.VarInfo;)[Ljava.lang.String;
utilMDE.Intern:intern([J)[J
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_ioa()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.Quantify.QuantFlags:distinct()Ljava.util.EnumSet;
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:gt(II)Z
daikon.Quant:eltsNotEqual([II)Z
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
daikon.VarInfo:isDerived()Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
utilMDE.ArraysMDE:fn_compose([I[I)[I
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
utilMDE.ArraysMDE:sum([[D)D
daikon.Quant:eq(DD)Z
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.PptSlice2:arity()I
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:enabled()Z
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.inv.unary.sequence.SeqIndexIntNonEqual:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.Quant:eq(II)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.inv.unary.scalar.LowerBound:enabled()Z
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.inv.Invariants:Invariants()V
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.ProglangType:isScalar()Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.ValueTuple:isMissingNonsensical(I)Z
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.inv.unary.sequence.EltUpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_161()Z
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.test.FormatTestCase:passes()Z
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
utilMDE.Intern:intern([I)[I
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
jtb.JavaParser:jj_3R_163()Z
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;Ljava.lang.String;)V
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.PptSlice0:initInvariantsSeen()V
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
jtb.JavaParser:jj_3R_85()Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_scan_token(I)Z
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quantify:quantify([Ldaikon.VarInfo;)[Ldaikon.Quantify.QuantifyReturn;
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.ProglangType:baseIsScalar()Z
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan()V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.Quant:eltsGtIndex([I)Z
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.EltwiseIntLessThan:format_ioa()Ljava.lang.String;
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:memberOf(I[I)Z
daikon.Quant:eltsGT([II)Z
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ModBitTracker:split(I)I
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.VarInfoName.InorderFlattener:InorderFlattener(Ldaikon.VarInfoName;)V
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.VarInfo:domainTypeIOA()Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.Quant:subsetOf([J[J)Z
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.inv.unary.string.OneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:indexOf([ZZ)I
utilMDE.MathMDE:gcd(JJ)J
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_daikon()Ljava.lang.String;
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltOneOf:format_ioa()Ljava.lang.String;
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:format_daikon()Ljava.lang.String;
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.stringsequence.EltOneOfString:format_esc()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.inv.unary.string.OneOfString:sort_rep()V
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
jtb.syntaxtree.NodeOptional:NodeOptional()V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.ModBitTracker:num_sets()I
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.VarComparabilityNone:comparable(Ldaikon.VarComparabilityNone;Ldaikon.VarComparabilityNone;)Z
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltNonZero:is_pointer()Z
daikon.Quant:eltwiseLTE([I)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_49()Z
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.inv.unary.sequence.EltUpperBound:format_daikon()Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.Quantify.QuantFlags:adjacent()Ljava.util.EnumSet;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.inv.unary.stringsequence.SingleStringSequence:SingleStringSequence(Ldaikon.PptSlice;)V
daikon.VarInfo:isPointer()Z
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.inv.unary.sequence.NoDuplicates:format_simplify()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.string.OneOfString:add_modified(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.stringsequence.EltOneOfString:format_daikon()Ljava.lang.String;
daikon.Quant:concat([I[I)[I
daikon.Quant:pairwiseLT([I[I)Z
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName:hasTypeOf()Z
utilMDE.UtilMDE:lineNumberFileReader(Ljava.io.File;)Ljava.io.LineNumberReader;
jtb.JavaParser:jj_3R_57()Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.inv.unary.sequence.EltOneOf:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.diff.RootNode:RootNode()V
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.inv.unary.string.OneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
daikon.ModBitTracker:ModBitTracker(I)V
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:lte(DD)Z
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.sequence.EltOneOf:subarray_rep()Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntComparison:EltwiseIntComparison(Ldaikon.PptSlice;)V
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.inv.unary.stringsequence.EltOneOfString:enabled()Z
daikon.ProglangType:isArray()Z
daikon.inv.unary.sequence.EltOneOf:sort_rep()V
daikon.inv.unary.stringsequence.SingleStringSequence:var()Ldaikon.VarInfo;
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:enabled()Z
utilMDE.MathMDE:sign(I)I
daikon.diff.DetailedStatisticsVisitor:freq(II)D
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
utilMDE.MathMDE:missing_numbers([I)[I
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.Quantify.Term:ioa_name()Ljava.lang.String;
daikon.Quant:eq(FF)Z
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.ProglangType:baseIsFloat()Z
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
jtb.JavaCharStream:ReadByte()C
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;)V
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.inv.unary.sequence.EltwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.string.SingleString:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.VarInfo:isDerivedSubSequenceOf()Ldaikon.VarInfo;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfo:apply_subscript(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.Quant:lexGT([I[I)Z
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.inv.unary.string.OneOfString:format_daikon()Ljava.lang.String;
jtb.JavaParser:jj_3R_55()Z
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_56()Z
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
jtb.JavaParser:jj_2_1(I)Z
daikon.inv.unary.string.OneOfString:is_type()Z
daikon.inv.unary.sequence.NoDuplicates:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfo:jml_name()Ljava.lang.String;
jtb.JavaParser:jj_3R_50()Z
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.inv.unary.string.OneOfString:get_proto()Ldaikon.inv.Invariant;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
utilMDE.ArraysMDE:concat([I[I)[I
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.Quant:memberOf(J[J)Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.VarInfo:dbc_name()Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.inv.Invariant:justified()Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
jtb.JavaParser:generateParseException()Ljtb.ParseException;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:subsetOf([F[D)Z
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.PptName:isCombinedExitPoint()Z
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.Quant:subsetOf([D[D)Z
daikon.ModBitTracker:num_samples()I
jtb.JavaCharStream:getEndColumn()I
daikon.inv.unary.string.OneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext1()V
daikon.Quant:isReverse([I[I)Z
daikon.inv.unary.sequence.NoDuplicates:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:enabled()Z
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String; | CONDITION | 44690 | if (x) -> if (!x)
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.Positive:enabled()Z
daikon.inv.unary.stringsequence.EltOneOfString:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.PptSlice0:arity()I
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
utilMDE.ArraysMDE:isSubarray([I[II)Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.Quantify.IOAQuantification:getMembershipRestriction(I)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:noDups([I)Z
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.Invariant:format()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.inv.Invariant:prob_and(DD)D
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.inv.unary.string.OneOfString:format_simplify()Ljava.lang.String;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltOneOf:format_simplify()Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_daikon()Ljava.lang.String;
utilMDE.MathMDE:gcd([I)I
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
daikon.VarInfoName.Elements:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:element_range([I)I
daikon.Quant:pairwiseDivides([I[I)Z
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.sequence.EltOneOf:enabled()Z
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.Quant:pairwiseGT([I[I)Z
jtb.ParseException:getMessage()Ljava.lang.String;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.ProglangType:isPointerFileRep()Z
daikon.Quant:eltsLTE([II)Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.Quantify.QuantFlags:include_index()Ljava.util.EnumSet;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
jtb.JavaParser:jj_3R_51()Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.Token:newToken(I)Ljtb.Token;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object; | RETURN | 76740 | return null
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:mod_positive(II)I
daikon.diff.Node:Node()V
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.Quant:eltsGteIndex([I)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.Quant:memberOf(F[D)Z
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
jtb.JavaCharStream:getEndLine()I
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.Quant:lte(II)Z
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:format_ioa()Ljava.lang.String;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.EltNonZero:format_esc()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:subsetOf([S[S)Z
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.Quant:eltwiseEqual([I)Z
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan(Ldaikon.PptSlice;)V
daikon.VarInfoName.Elements:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.PptSlice1:num_samples()I
jtb.JavaParser:jj_3R_133()Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.inv.unary.stringsequence.EltOneOfString:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.NoDuplicates:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltsEqual([II)Z
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.inv.unary.sequence.EltUpperBound:enabled()Z
daikon.inv.unary.sequence.EltNonZero:format_ioa()Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:enabled()Z
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
utilMDE.Intern:internSubsequence([III)[I
daikon.inv.unary.sequence.EltNonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.inv.Invariant:isWorthPrinting()Z
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.inv.unary.sequence.EltOneOf:runValue([JIZ)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.inv.unary.sequence.NoDuplicates:enabled()Z
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_esc()Ljava.lang.String;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.VarInfoName.Elements:ioa_name_impl()Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:is_type()Z
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.test.InvariantFormatTester:execute()Z
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.inv.unary.stringsequence.EltOneOfString:format_ioa()Ljava.lang.String;
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:pairwiseNotEqual([I[I)Z
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.inv.unary.sequence.NoDuplicates:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.Quant:eltwiseGTE([I)Z
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_esc()Ljava.lang.String;
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
utilMDE.Intern:internSubsequence([JII)[J
daikon.Quantify.IOAQuantification:getClosingExp()Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual()V
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.Quant:subsetOf([I[I)Z
utilMDE.ArraysMDE:fn_inverse([II)[I
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
utilMDE.ArraysMDE:indexOf([II)I
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
utilMDE.MathMDE:modulus([I)[I
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
utilMDE.ArraysMDE:sum([I)I
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfo:relate_var()V
daikon.inv.unary.sequence.EltNonZero:format_daikon()Ljava.lang.String;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_esc()Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.MathMDE:negate(I)I
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;Z)Z
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
utilMDE.WeakHasherMap:processQueue()V
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.Quantify.QuantifyReturn:QuantifyReturn(Ldaikon.VarInfo;)V
daikon.PptName:isEnterPoint()Z
utilMDE.FuzzyFloat:gt(DD)Z
daikon.VarInfoName.NodeFinder:inPre()Z
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.Quant:intersection([I[I)[I
daikon.inv.unary.stringsequence.EltOneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
utilMDE.MathMDE:mod_positive(JJ)J
daikon.VarInfo:apply_subscript(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.InvMap:InvMap()V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfo:isIOAArray()Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quantify.IOAQuantification:getFreeVar(I)Ldaikon.Quantify.Term;
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfo:name()Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
utilMDE.MathMDE:pow(II)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
utilMDE.Intern:numIntArrays()I
utilMDE.FuzzyFloat:gte(DD)Z
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltOneOf:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ProglangType:isFloat()Z
jtb.JavaCharStream:BeginToken()C
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.VarInfoName:inOrderTraversal()Ljava.util.Collection;
daikon.ValueTuple:isMissing(I)Z
daikon.VarInfoName:hasNodeOfType(Ljava.lang.Class;)Z
daikon.inv.filter.ObviousFilter:ObviousFilter()V
utilMDE.MathMDE:gcd_differences([I)I
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.VarInfoName:name()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.Quant:subsetOf([B[I)Z
utilMDE.FuzzyFloat:eq(DD)Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.string.OneOfString:format_esc()Ljava.lang.String;
daikon.VarInfoName:isLiteralConstant()Z
jtb.JavaCharStream:getBeginLine()I
daikon.inv.unary.sequence.EltNonZero:EltNonZero(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltNonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.string.OneOfString:format_ioa()Ljava.lang.String;
daikon.Quant:subsetOf([D[F)Z
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
utilMDE.UtilMDE:escapeNonASCII(C)Ljava.lang.String;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.Quantify.IOAQuantification:getQuantifierExp()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.inv.unary.sequence.EltOneOf:format_esc()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.Assert:assertTrue(Z)V
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.Debug:logDetail()Z
daikon.Quant:lexGTE([I[I)Z
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:min_max([I)[I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:ioa_name()Ljava.lang.String;
jtb.JavaCharStream:getBeginColumn()I
daikon.inv.unary.sequence.EltUpperBound:format_esc()Ljava.lang.String;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.inv.unary.stringsequence.EltOneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:gte(II)Z
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfo:isPrestate()Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;Ldaikon.VarInfo;)V
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.string.OneOfString:runValue(Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_54()Z
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
daikon.Quant:eltsLtIndex([I)Z
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.Quant:lexNotEqual([I[I)Z
daikon.inv.unary.sequence.EltNonZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.inv.unary.sequence.EltUpperBound:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.inv.Invariant:getConfidence()D
daikon.inv.unary.stringsequence.EltOneOfString:sort_rep()V
daikon.Quant:eltwiseGT([I)Z
daikon.ProglangType:dimensions()I
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
utilMDE.UtilMDE:escapeNonASCII(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaCharStream:readChar()C
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
utilMDE.ArraysMDE:sum([[I)I
daikon.Quantify.IOAQuantification:getVarIndexedString(I)Ljava.lang.String;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.inv.unary.sequence.EltwiseIntLessThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:repr()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.sequence.EltwiseIntLessThan:EltwiseIntLessThan(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.ValueSet.ValueSetStringArray:ValueSetStringArray(I)V
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltOneOf:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.inv.unary.string.SingleString:SingleString(Ldaikon.PptSlice;)V
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.Quant:ne(II)Z
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_135()Z
utilMDE.Intern:intern([D)[D
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.VarInfo:simplify_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_simplify()Ljava.lang.String;
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.Ppt:Ppt()V
daikon.ProglangType:isString()Z
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.InorderFlattener:nodes()Ljava.util.List;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.inv.unary.stringsequence.EltOneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarComparabilityNone:indexType(I)Ldaikon.VarComparability;
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_simplify()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:EltOneOf(Ldaikon.PptSlice;)V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltNonZero:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.EltUpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
utilMDE.WeakIdentityHashMap:indexFor(II)I
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.ProglangType:baseIsIntegral()Z
daikon.VarComparabilityNone:elementType()Ldaikon.VarComparability;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:enabled()Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.VarInfo:is_direct_non_slice_array()Z
daikon.inv.unary.string.OneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.UpperBoundCore:calc_modulus()J
jtb.JavaParser:jj_3R_52()Z
daikon.inv.unary.scalar.Modulus:enabled()Z
jtb.JavaParser:jj_3R_48()Z
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.inv.unary.sequence.EltOneOf:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object; | ASSIGN | 266434 | = null
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
utilMDE.ArraysMDE:sorted([I)Z
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:lexLT([I[I)Z
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.Quantify.IOAQuantification:getFreeVarName(I)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
daikon.Quant:eltwiseNotEqual([I)Z
daikon.inv.Invariant:logDetail()Z
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
utilMDE.MathMDE:pow_fast(II)I
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_ioa()Ljava.lang.String;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
utilMDE.MathMDE:bitwiseComplement(I)I
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.simplify.LemmaStack:noticeInt(J)V
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.inv.unary.stringsequence.SingleStringSequence:valid_types([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:fn_is_permutation([I)Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I | CONDITION | 9296 | while (x) -> while (!x)
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3_16()Z
daikon.VarInfoName:hashCode()I
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
utilMDE.OrderedPairIterator:hasNext()Z
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.ArraysMDE:subarray([III)[I
daikon.VarInfo:isIOASet()Z
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.inv.unary.stringsequence.EltOneOfString:subarray_rep()Ljava.lang.String;
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.inv.unary.sequence.EltOneOf:is_hashcode()Z
daikon.inv.unary.sequence.EltUpperBound:format_ioa()Ljava.lang.String;
daikon.Quant:union([I[I)[I
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_simplify()Ljava.lang.String;
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;)Z
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.Quant:eq(JJ)Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.Quant:memberOf(D[F)Z
daikon.inv.unary.sequence.EltUpperBound:EltUpperBound(Ldaikon.PptSlice;)V
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.VarInfoName.InorderFlattener:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:sum([D)D
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.InorderFlattener:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.Quant:pairwiseGTE([I[I)Z
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
utilMDE.UtilMDE.NullableStringComparator:compare(Ljava.lang.String;Ljava.lang.String;)I
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
utilMDE.ArraysMDE:isSubset([D[D)Z
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.unary.stringsequence.EltOneOfString:add_modified([Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltsEqualIndex([I)Z
utilMDE.ArraysMDE:min([I)I
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:pairwiseSquare([I[I)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.OrderedPairIterator:setnext2()V
daikon.ProglangType:base()Ljava.lang.String;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
jtb.JavaParser:jj_ntk()I
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
jtb.JavaCharStream:FillBuff()V
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltUpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltOneOf:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:max([I)I
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:lt(II)Z
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
daikon.Quant:sameLength([I[I)Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
utilMDE.LimitedSizeIntSet:size()I
daikon.inv.unary.sequence.SeqIndexIntNonEqual:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:eltsGTE([II)Z
daikon.inv.ValueSet:ValueSet(I)V
daikon.inv.Invariant:simplify_format_string(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_162()Z
daikon.Quant:pairwiseLTE([I[I)Z
daikon.ProglangType:isIntegral()Z
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:eltwiseLT([I)Z
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.VarInfo:get_all_simple_names()Ljava.util.List;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaCharStream:backup(I)V
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:subsetOf([F[F)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
jtb.JavaParser:jj_2_16(I)Z
utilMDE.WeakHasherMap:size()I
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quantify.FreeVar:name()Ljava.lang.String;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfo:get_enclosing_var()Ldaikon.VarInfo;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_simplify()Ljava.lang.String;
daikon.Quant:memberOf(S[S)Z
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.string.OneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.VarInfo:has_typeof()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
utilMDE.MathMDE:gcd(II)I
daikon.VarInfoName.Elements:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I | CONDITION | 16534 | if (x) -> if (!x)
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.inv.unary.string.OneOfString:enabled()Z
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:setEqual([I[I)Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.Quant:eltsLT([II)Z
jtb.JavaParser:jj_3R_47()Z
jtb.JavaParser:jj_3R_53()Z
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.VarInfo:new_ppt()V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.Quant:lexEqual([I[I)Z
jtb.JavaParser:jj_3R_134()Z
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.unary.stringsequence.EltOneOfString:EltOneOfString(Ldaikon.PptSlice;)V
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.Quant:eltsLteIndex([I)Z
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.PptMap:asCollection()Ljava.util.Collection;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.inv.unary.sequence.EltOneOf:is_boolean()Z
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.Quantify.IOAQuantification:IOAQuantification([Ldaikon.VarInfo;)V
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.inv.ValueSet.ValueSetString:ValueSetString(I)V
utilMDE.FuzzyFloat:ne(DD)Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
jtb.ParseException:ParseException(Ljava.lang.String;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:fn_identity(I)[I
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.inv.unary.sequence.EltUpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:runValue([Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3_1()Z
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.ValueTuple:size()I
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.EltUpperBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.inv.unary.sequence.EltNonZero:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.Quant:memberOf(F[F)Z
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:subarray([JII)[J
utilMDE.Options.OptionInfo:argument_required()Z
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.inv.unary.string.SingleString:var()Ldaikon.VarInfo;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.string.OneOfString:OneOfString(Ldaikon.PptSlice;)V
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.FuzzyFloat:lt(DD)Z
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
utilMDE.SimpleLog.LongVal:LongVal(J)V
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.Quant:pairwiseEqual([I[I)Z
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
730 2 1052 4 617 2 779 2 590 2 15 2 993 2 987 2 639 2 
406 6 492 2 936 2 1115 2 946 2 1020 6 624 2 890 2 542 2 709 2 849 6 
758 2 617 2 761 2 280 2 881 6 726 2 96 6 730 2 443 6 166 2 803 4 889 6 303 4 
421 2 455 4 948 4 457 10 426 8 385 26 730 6 732 10 654 10 656 12 566 2 1219 4 1075 10 472 8 128 6 614 2 435 16 617 6 1201 2 242 8 712 10 582 8 61 6 1004 16 783 16 552 28 826 2 554 2 1092 4 1211 2 
1186 6 986 4 
3 2 
421 2 1 4 73 2 262 2 76 2 798 2 264 2 730 4 342 2 1030 2 428 2 1185 2 806 2 573 2 1042 2 744 4 21 2 818 2 186 2 511 2 512 2 977 2 904 2 211 2 380 2 535 2 465 2 996 2 928 2 1079 2 617 4 133 2 622 4 625 4 138 2 629 2 630 2 863 2 1009 2 633 2 323 2 1240 2 870 2 639 2 
1093 4 833 4 457 6 644 4 162 3 213 6 8 6 882 8 915 2 385 47 730 4 732 15 654 15 656 22 391 4 1075 15 472 6 128 4 924 6 1037 4 435 32 617 4 439 4 1199 2 1201 2 712 15 100 2 365 6 582 19 61 4 677 4 1004 32 783 32 552 52 251 6 1129 2 1092 2 202 5 906 2 
1030 2 1176 2 361 2 
277 2 207 2 689 2 616 2 1178 2 1180 10 708 22 710 2 192 2 286 2 659 2 633 2 326 2 1223 2 
688 2 256 2 457 4 422 2 385 4 732 2 654 2 656 2 1075 2 128 2 177 2 929 2 435 2 360 2 1084 2 712 2 582 2 1004 2 1005 2 783 2 552 6 1092 2 415 2 
435 8 8 6 385 12 712 4 677 4 732 4 583 2 1004 8 783 8 654 4 753 2 656 4 552 16 251 6 1219 2 1075 4 1037 4 
908 2 1176 4 293 2 462 2 797 2 499 2 297 2 648 2 918 2 1030 6 921 2 1105 8 701 4 742 2 930 2 437 2 361 2 101 2 628 2 678 2 1126 14 979 2 639 2 
1212 2 3 2 985 2 1147 2 1149 2 607 2 661 2 1227 2 245 2 751 2 
157 14 1098 3 335 2 337 2 1101 2 802 6 964 1 19 2 811 4 506 1 1116 6 1117 2 1118 1 669 2 970 2 671 2 673 2 675 2 513 2 820 25 1124 2 368 1 980 1 981 2 28 2 1131 2 204 2 375 2 30 2 377 1 32 2 984 2 691 2 1136 2 215 2 220 1 839 6 1146 2 845 3 43 1 541 2 1153 2 993 2 232 2 703 2 704 1 1000 2 705 3 547 2 55 2 549 4 58 2 414 3 1013 2 67 2 419 2 1018 6 74 2 878 14 724 2 75 2 884 28 424 2 886 3 729 1 730 30 80 2 81 2 82 2 733 2 734 3 272 1 275 2 1041 3 740 2 87 2 745 2 1045 1 1049 2 581 2 288 14 102 4 103 19 445 1 901 1 446 2 1054 2 589 5 107 2 108 1 1060 2 113 2 295 4 763 2 459 3 601 2 765 1 1065 14 1066 2 766 3 302 2 127 2 775 2 617 32 313 19 1082 2 134 1 933 4 485 2 318 2 627 2 785 1 631 2 149 2 942 2 787 2 635 2 327 2 
617 2 348 2 
617 4 14 2 442 2 
52 2 
491 2 332 2 5 24 495 22 796 74 956 74 344 2 350 2 354 2 1109 6 813 2 359 2 514 4 518 22 371 2 978 10 197 4 201 2 206 2 832 2 210 8 381 16 533 10 36 2 387 2 386 2 1141 2 989 4 1142 2 695 22 225 2 844 2 228 2 1156 2 997 2 235 14 706 14 1168 2 239 2 404 22 857 12 551 2 862 4 1172 16 715 22 255 2 874 16 559 26 1023 10 423 2 1182 22 1183 2 266 4 84 2 1031 2 737 2 1189 2 569 16 273 2 572 2 1040 10 575 2 1192 2 894 2 1193 2 578 2 897 2 896 2 93 10 749 22 98 4 284 2 580 2 285 2 587 22 1208 8 448 8 110 22 454 10 114 2 1063 2 1214 22 768 2 1071 6 772 2 1072 22 922 2 471 2 774 8 1222 2 1224 4 130 2 478 2 312 74 623 2 1083 4 932 4 1087 2 935 10 142 2 152 32 
606 2 1228 1 1048 2 97 2 
969 2 97 2 
663 2 1030 2 948 2 167 2 827 2 1022 2 97 2 
167 2 1130 2 97 2 
167 2 621 2 97 2 
407 2 1048 2 830 2 
167 2 97 2 
557 2 830 2 
69 2 97 2 
1048 2 1229 2 830 2 
249 2 1048 2 756 2 
68 2 1048 2 1064 2 
520 2 470 2 1048 2 
1044 2 1048 2 992 2 
534 2 830 2 
913 2 97 2 
1068 2 756 2 
68 2 219 2 
791 2 520 2 
1044 2 610 2 
1008 2 830 2 
505 2 1044 2 
520 2 161 2 
68 2 1161 2 
777 2 756 2 
1048 2 1229 2 1155 2 830 2 
1048 2 1229 2 780 2 1155 2 830 2 
466 2 1048 2 830 2 
1048 2 1012 2 830 2 
902 2 595 2 
963 2 376 2 259 2 1078 2 180 4 966 2 402 2 532 2 508 2 931 2 1095 2 707 2 77 4 708 6 300 2 390 2 1209 2 719 2 
13 2 1048 2 
1030 2 248 2 1022 2 373 2 
1030 2 248 2 827 2 959 2 1022 2 373 2 
47 2 1030 2 948 2 167 2 1022 2 97 2 
21 2 431 2 
1030 2 948 2 1022 2 57 2 
520 2 168 2 
1044 2 1059 2 
756 2 1140 2 
484 2 68 2 
68 2 1044 2 907 2 
68 2 1044 2 45 2 
341 2 68 2 1044 2 
68 2 1044 2 736 2 
834 2 1022 2 78 6 953 2 1030 2 1039 2 754 2 865 6 
830 2 995 2 
1101 2 
2 2 802 4 16 2 19 2 1112 2 811 4 1116 2 675 8 513 2 820 4 1124 2 974 2 680 2 370 2 981 2 27 2 28 2 375 2 30 2 528 4 691 2 215 2 839 6 388 2 1146 2 43 2 393 2 541 2 1153 2 993 2 1157 2 703 8 851 2 549 4 58 2 864 2 558 4 869 2 419 2 1018 2 724 2 884 6 730 26 1029 2 82 2 887 2 888 2 1187 2 272 2 739 2 275 2 436 2 1049 2 102 4 1054 2 901 4 107 6 1060 2 760 2 1065 6 119 2 1066 2 609 2 775 2 1077 2 617 26 1082 2 1086 2 933 4 139 2 141 2 627 2 148 2 635 2 153 4 788 2 
2 2 335 2 802 6 962 2 19 2 1112 2 811 4 1116 2 675 8 513 2 820 4 1124 2 974 2 680 2 981 2 27 2 28 2 375 2 30 2 528 4 691 2 215 2 839 6 388 2 1144 2 1146 2 43 2 393 2 541 2 847 2 1153 2 993 2 1157 2 703 8 1000 2 851 2 549 4 58 2 864 2 558 4 869 2 419 2 1018 2 724 2 884 6 730 26 1029 2 82 2 887 2 888 2 272 2 739 2 275 2 436 2 438 2 1049 2 102 4 1054 2 901 2 107 6 1060 2 760 2 1065 6 119 2 1066 2 609 2 775 2 1077 2 617 26 1082 2 1086 2 933 4 139 2 141 2 627 2 148 2 635 2 153 4 788 2 
294 2 
983 2 250 2 
720 2 687 2 90 2 72 2 1020 2 668 2 561 2 1167 2 9 2 140 2 500 4 406 2 991 2 936 2 265 4 147 2 890 2 1015 2 
720 2 419 2 492 2 72 2 1020 6 645 2 263 2 724 2 561 2 883 2 9 2 500 4 730 6 265 4 11 2 658 2 890 4 173 2 275 2 811 2 181 2 965 4 90 2 668 2 1198 2 184 4 1121 2 509 4 1049 2 752 2 102 2 1125 2 375 2 687 2 527 2 910 2 115 2 215 2 120 2 839 4 991 2 696 2 469 4 540 4 395 2 1154 6 775 2 849 6 617 12 53 2 1165 2 1167 2 709 2 140 4 406 4 936 4 62 2 147 2 489 2 1015 2 
720 2 419 2 492 2 72 2 1020 4 645 2 263 2 724 2 561 2 883 2 9 2 500 4 730 6 265 4 11 2 658 2 890 4 173 2 275 2 811 2 181 2 965 4 90 2 668 2 1198 2 184 4 1121 2 509 4 1049 2 752 2 102 2 1125 2 375 2 687 2 527 2 910 2 115 2 215 2 120 2 839 4 991 2 696 2 469 4 540 4 395 2 1154 6 775 2 849 6 617 12 53 2 1165 2 1167 2 624 2 140 4 406 6 936 4 62 2 147 2 489 2 1015 2 
720 2 419 2 492 2 946 2 72 2 1020 6 645 2 263 2 724 2 561 2 883 2 9 2 500 4 730 6 265 4 11 2 658 2 890 4 173 2 275 2 811 2 181 2 965 8 90 2 668 2 1198 2 184 4 1121 2 509 4 1049 2 752 2 102 2 1125 2 375 2 687 2 527 2 910 2 115 2 215 2 120 2 839 4 991 2 696 2 469 4 540 4 395 2 1154 6 775 2 849 6 617 12 53 2 1165 2 1167 2 140 4 406 6 936 4 62 2 147 2 489 2 1015 2 
720 2 419 2 492 2 946 2 72 2 1020 6 645 2 263 2 724 2 561 2 883 2 9 2 500 4 730 6 265 4 11 2 658 2 890 4 173 2 275 2 811 2 181 2 965 8 90 2 668 2 1198 2 184 8 1121 2 509 4 1049 2 752 2 102 2 1125 2 375 2 687 2 527 2 910 2 115 2 215 2 120 2 839 4 991 2 696 2 469 4 540 4 395 2 1154 10 775 2 849 8 617 12 53 2 1165 2 1167 2 624 2 140 4 406 8 936 4 62 2 147 2 489 2 1015 2 
720 2 419 2 492 2 946 2 72 2 1020 6 645 2 263 2 724 2 561 2 883 2 9 2 500 4 730 6 265 4 11 2 658 2 890 4 173 2 275 2 811 2 181 2 965 8 90 2 668 2 1198 2 184 8 1121 2 509 4 1049 2 752 2 102 2 1125 2 375 2 687 2 527 2 910 2 115 2 215 2 120 2 839 4 991 2 696 2 469 4 540 4 395 2 1154 10 775 2 849 6 617 12 53 2 1165 2 1167 2 140 4 406 6 936 4 62 2 147 2 489 2 1015 2 
328 6 2 4 947 2 645 2 335 2 9 2 954 6 345 2 11 2 348 6 658 2 19 2 965 2 20 2 668 2 675 4 981 2 28 2 375 2 687 2 30 12 691 2 382 4 384 2 991 2 696 2 993 2 44 10 700 1 53 2 703 4 52 6 1000 2 58 2 406 8 62 2 1015 2 1014 2 419 2 720 2 722 1 1016 2 1018 2 72 2 1020 4 724 2 730 24 82 2 731 2 735 2 88 2 90 2 436 2 1049 2 441 6 99 2 442 6 752 2 102 4 1054 2 107 6 1060 2 760 2 759 2 115 4 1065 6 1066 2 120 2 770 2 469 4 121 1 126 2 1076 6 474 2 775 2 1082 2 479 2 1086 2 136 7 140 4 1090 2 147 2 488 1 489 2 789 6 490 8 492 4 500 4 802 6 173 2 807 2 504 2 1113 2 178 6 811 4 1116 2 181 2 1121 2 509 6 513 2 190 2 820 2 1124 2 194 2 823 1 1125 2 829 7 205 1 1133 2 527 2 215 2 1137 4 1139 2 839 6 224 2 1146 2 842 2 540 8 226 1 1153 2 541 2 1154 2 849 12 233 2 1165 2 1164 2 1167 2 549 4 550 6 558 4 869 2 257 6 1174 6 560 1 261 2 263 2 880 6 561 2 884 8 883 2 265 4 887 2 268 6 271 2 890 4 570 2 275 2 1198 4 901 1 910 2 914 2 604 2 1217 6 617 46 624 4 933 4 936 4 627 2 937 1 635 2 1242 6 
490 8 492 4 328 6 947 2 2 4 946 4 645 2 335 2 9 2 954 6 500 4 345 2 11 2 348 6 658 2 802 6 173 2 807 2 504 2 178 6 1113 2 19 4 1116 2 811 4 20 2 965 6 181 2 668 2 1121 2 509 6 675 8 513 2 190 2 820 2 1124 2 194 2 1125 2 1128 2 981 2 28 2 1133 2 687 2 375 2 30 12 527 2 528 2 691 4 382 4 384 2 1137 4 215 2 1139 2 839 6 991 2 696 2 842 2 1146 2 224 2 540 8 541 4 1153 2 1154 2 44 10 993 2 849 12 233 2 52 6 703 8 53 2 1164 2 1165 2 1000 2 1167 2 58 2 549 4 243 2 406 8 550 6 62 2 869 2 558 4 1014 2 1015 2 257 6 720 2 419 2 1174 6 1016 2 1018 2 72 2 1020 8 261 2 880 6 263 2 724 2 561 2 883 2 884 8 730 26 731 2 265 4 82 2 735 2 887 2 268 6 271 2 890 4 570 2 275 2 88 2 90 2 436 2 1198 4 1049 2 441 6 442 6 99 2 752 2 102 4 1054 2 107 6 1060 2 759 2 760 2 910 2 115 4 1065 6 914 2 1066 2 120 2 770 2 604 2 1217 6 469 4 126 2 474 2 1076 6 775 2 617 48 1082 2 479 2 1086 2 933 4 140 4 1090 2 627 2 936 4 147 2 635 2 489 2 789 6 1242 6 
490 8 492 4 328 6 947 2 2 4 946 4 645 2 335 2 9 2 954 6 500 4 345 2 11 2 348 6 658 2 802 6 173 2 807 2 504 2 178 6 1113 2 19 4 1116 2 811 4 20 2 965 6 181 2 668 2 184 4 1121 2 509 6 675 8 513 2 190 2 820 2 1124 2 194 2 1125 2 1128 2 981 2 28 2 1133 2 687 2 375 2 30 12 527 2 528 2 691 4 382 4 384 2 1137 4 215 2 1139 2 839 6 991 2 696 2 842 2 1146 2 224 2 540 8 541 4 1153 2 44 10 993 2 1154 6 849 12 233 2 52 6 703 8 53 2 1164 2 1165 2 1000 2 1167 2 58 2 549 4 243 2 406 8 550 6 62 2 869 2 558 4 1014 2 1015 2 257 6 720 2 419 2 1174 6 1016 2 1018 2 72 2 1020 8 261 2 880 6 263 2 724 2 561 2 883 2 884 8 730 26 731 2 265 4 82 2 735 2 887 2 268 6 271 2 890 4 570 2 275 2 88 2 90 2 436 2 1198 4 1049 2 441 6 442 6 99 2 752 2 102 4 1054 2 107 6 1060 2 759 2 760 2 910 2 115 4 1065 6 914 2 1066 2 120 2 770 2 604 2 1217 6 469 4 126 2 474 2 1076 6 775 2 617 48 1082 2 479 2 1086 2 933 4 140 4 1090 2 936 4 627 2 147 2 635 2 489 2 789 6 1242 6 
328 6 946 4 2 4 947 2 645 2 335 2 9 2 954 6 345 2 11 2 348 12 658 2 19 4 965 6 20 2 668 2 675 10 981 2 28 2 687 2 375 2 30 10 691 4 382 4 384 2 991 2 696 2 993 2 44 8 51 2 53 2 703 10 52 12 1000 2 709 2 58 2 406 10 62 2 1015 2 1014 2 419 2 720 2 1016 2 1018 4 72 2 1020 10 724 2 730 24 82 2 731 2 735 2 89 2 90 2 436 2 91 6 1049 2 441 12 99 2 442 12 752 2 102 4 1054 2 107 8 1060 2 757 2 759 2 760 2 115 4 1065 8 1066 2 120 2 770 2 469 4 126 2 474 2 1076 6 775 2 1082 2 479 2 1086 2 1085 6 140 4 1090 2 147 2 489 2 789 6 490 8 492 4 500 4 802 6 173 2 171 6 807 2 504 2 1113 2 178 6 811 4 1116 4 181 2 182 2 184 4 1121 2 509 6 513 2 190 2 820 4 1124 2 194 2 193 2 1125 2 1128 2 825 6 1133 2 527 2 528 2 215 2 1137 4 1139 2 839 6 221 6 842 2 224 2 1146 2 540 8 1153 2 541 4 1154 6 849 16 233 2 1165 2 1164 2 853 6 1167 2 549 4 243 2 550 12 558 6 869 4 257 6 873 2 1174 6 261 2 263 2 880 12 561 2 883 2 884 12 265 4 887 4 269 2 268 6 271 2 890 4 570 2 275 2 893 6 1198 4 1202 6 903 2 910 2 914 2 604 2 1217 6 617 52 624 2 933 4 627 2 936 4 321 6 635 2 1242 6 
687 2 492 2 946 2 72 2 910 2 1020 6 645 2 263 2 561 2 9 2 120 2 500 2 991 2 265 2 469 2 540 2 658 2 890 4 1154 4 173 2 849 4 965 6 181 2 617 4 53 2 668 2 1165 2 184 4 1121 2 1167 2 509 2 406 6 936 4 1125 2 489 2 
492 2 946 2 2 2 645 2 335 2 9 2 500 2 1100 3 1101 2 658 2 802 6 173 2 811 4 1116 3 181 2 965 6 668 2 970 2 1121 2 509 2 513 2 820 3 1124 2 1125 2 981 2 28 2 687 2 375 2 30 4 215 2 839 6 991 2 696 2 1146 2 540 2 1153 2 993 2 44 2 1154 2 849 4 53 2 1165 2 1000 2 1167 2 549 4 58 2 406 6 411 2 558 4 419 2 1018 3 72 2 1020 6 263 2 724 2 561 2 884 8 425 2 730 24 265 2 82 2 733 2 1033 2 890 4 275 2 88 2 1049 2 102 4 1054 2 107 6 1060 2 760 2 910 2 1065 6 1066 2 120 2 469 2 775 2 617 28 1082 2 1086 2 933 4 1088 2 936 4 627 2 486 2 489 2 635 2 327 2 
720 2 419 2 492 2 946 2 72 2 1020 6 645 2 263 2 724 2 561 2 883 2 9 2 500 4 730 6 265 4 11 2 658 2 890 4 173 2 275 2 811 2 181 2 965 8 90 2 668 2 1198 2 184 8 1121 2 509 4 1049 2 752 2 102 2 1125 2 375 2 687 2 527 2 910 2 115 2 215 2 120 2 839 4 991 2 696 2 469 4 540 4 395 2 1154 10 775 2 849 6 617 12 53 2 1165 2 1167 2 140 4 406 6 936 4 62 2 147 2 489 2 1015 2 
720 2 419 2 492 2 946 2 72 2 1020 8 645 2 263 2 724 2 561 2 883 2 79 4 9 2 730 6 500 4 265 4 11 2 890 4 173 2 275 2 811 2 181 2 965 8 90 2 668 2 1198 2 184 8 1121 2 509 4 1049 2 752 2 102 2 1125 2 375 2 687 2 527 2 910 2 115 2 215 2 120 2 839 4 991 2 1143 2 696 2 469 4 540 4 1154 10 775 2 849 8 230 2 617 12 53 2 1165 2 1167 2 709 2 140 4 406 6 936 4 62 2 147 2 489 2 1015 2 
800 2 53 2 489 2 
800 2 53 2 489 2 
640 2 492 4 2 6 946 4 335 2 9 2 651 2 500 2 800 2 802 6 1113 2 19 4 811 4 812 2 965 6 668 4 184 4 509 4 675 4 362 2 513 2 820 2 981 2 28 2 375 2 687 2 30 4 31 2 527 2 691 4 382 2 1135 2 1137 2 215 2 839 6 1146 2 540 4 1152 2 541 4 1153 2 44 2 993 2 1154 6 849 16 703 4 53 6 1164 2 1000 2 1165 2 709 4 549 4 58 2 406 12 1015 2 419 2 1020 12 724 2 263 2 883 2 884 2 730 16 82 2 265 2 1036 2 890 4 275 2 90 2 436 4 1198 4 1049 2 752 2 102 4 444 2 901 2 1054 2 107 2 593 2 1060 2 597 2 760 2 115 2 1065 2 119 4 1066 2 604 2 1216 4 469 2 920 2 775 2 305 2 617 24 1082 2 624 4 1086 2 933 4 317 2 140 4 627 2 936 4 319 2 632 2 150 2 635 2 489 4 789 2 1241 4 
983 2 640 2 419 2 30 2 617 4 382 2 1135 2 135 2 730 2 517 2 731 2 842 2 147 2 1150 2 632 2 44 2 789 2 
640 2 492 4 2 6 946 4 335 2 9 2 500 2 164 2 800 2 11 2 802 6 1113 2 19 4 811 4 812 2 965 6 668 4 184 4 509 4 675 4 362 2 513 2 820 4 981 2 28 2 375 2 687 2 30 2 31 2 527 2 691 4 1135 2 1137 2 215 2 839 6 1146 2 540 4 1152 2 541 4 1153 2 993 2 1154 6 849 16 703 4 53 6 1164 2 1000 2 1165 2 1002 2 711 2 709 4 549 4 58 2 406 12 1015 2 419 2 1020 12 724 2 263 2 883 2 884 2 730 16 82 2 265 2 1036 2 890 4 275 2 90 2 436 4 1198 4 1049 2 752 2 102 4 1054 2 107 2 593 2 1060 2 597 2 760 2 456 2 115 4 1065 2 119 4 1066 2 604 2 1216 4 469 2 920 2 775 2 617 24 1082 2 624 4 1086 2 933 4 317 2 140 4 627 2 936 4 319 4 941 2 632 2 635 2 489 4 789 2 1241 4 
640 2 492 4 2 6 946 4 335 2 647 2 9 2 500 2 800 2 11 2 802 6 1113 2 19 4 811 4 812 2 965 6 668 4 184 4 509 4 675 4 362 2 513 2 820 2 981 2 28 2 375 2 687 2 30 4 31 2 527 2 691 4 382 2 1135 2 1137 2 215 2 839 6 1146 2 540 4 1152 2 541 4 1153 2 44 2 993 2 1154 6 849 16 703 4 53 6 1164 2 1000 2 1165 2 709 4 549 4 58 2 406 12 1015 2 419 2 1020 12 1177 2 724 2 263 2 883 2 884 2 730 16 82 2 265 2 1036 2 890 4 275 2 1194 2 90 2 436 4 746 2 1198 4 1049 2 752 2 102 4 104 2 901 1 1054 2 107 2 593 2 1060 2 597 2 760 2 115 4 1065 2 119 4 1066 2 604 2 1216 4 469 2 920 2 775 2 617 24 1082 2 624 4 1086 2 933 4 317 2 140 4 627 2 936 4 319 2 632 2 635 2 489 4 789 2 1241 4 
641 2 642 14 0 2 643 2 2 2 6 2 7 32 649 32 10 2 653 1 12 2 654 6 655 14 656 10 657 18 660 32 17 2 662 64 18 4 664 2 666 6 665 4 667 18 670 18 672 16 675 84 676 2 23 32 24 2 677 4 681 32 25 4 683 4 684 32 26 4 28 2 685 32 686 14 30 4 32 2 34 6 690 2 35 18 692 2 693 2 694 4 37 32 38 2 697 18 41 2 43 2 699 18 46 3 702 2 49 14 51 2 54 6 703 85 705 2 58 2 713 2 59 32 712 6 60 18 61 4 63 2 64 2 65 2 717 2 716 3 718 2 721 20 723 16 70 2 71 18 74 2 724 2 725 18 727 2 730 408 81 2 82 4 732 6 83 2 735 4 738 4 740 2 743 64 89 4 92 2 747 2 94 2 748 38 99 2 750 2 102 6 103 2 105 2 106 18 107 14 755 4 757 2 111 2 112 2 760 2 762 18 116 32 118 2 767 4 771 2 123 2 773 6 127 2 775 2 131 2 778 3 137 2 781 2 141 2 143 2 145 1 144 2 783 12 148 2 784 2 786 2 151 36 154 18 790 14 792 20 158 2 159 1 157 18 794 16 163 2 799 14 801 2 802 460 169 4 805 3 172 20 807 2 174 18 808 2 809 2 811 6 179 2 182 2 183 2 185 2 816 10 817 1 819 2 187 2 188 2 189 2 820 48 821 2 194 2 193 2 195 2 824 3 198 14 199 2 200 8 202 6 203 2 208 10 209 2 835 10 216 4 215 2 836 2 218 8 217 32 837 2 839 8 838 16 840 2 223 33 843 20 227 2 846 2 848 4 229 36 234 2 236 3 851 2 238 16 237 8 240 2 854 14 858 34 859 2 247 4 246 2 860 2 861 4 251 6 253 18 866 2 867 3 869 46 872 2 258 10 873 2 260 2 876 24 877 2 878 6 879 2 884 60 882 8 885 4 887 42 269 2 888 2 270 2 271 2 272 2 891 2 275 2 892 2 279 14 895 2 281 2 282 3 898 14 287 2 288 40 289 10 900 2 901 1 290 20 905 12 292 2 909 24 911 28 912 2 296 2 915 2 914 4 916 4 299 62 919 2 301 32 923 16 304 45 308 4 307 4 927 2 310 2 309 2 311 2 313 2 314 14 315 2 316 14 933 200 934 14 938 1 939 2 940 32 942 2 943 42 324 20 945 2 329 2 330 2 331 2 333 2 949 4 951 2 952 36 334 4 335 130 338 36 339 18 955 4 343 4 347 4 958 2 957 8 349 3 352 2 353 1 355 12 960 2 356 4 357 64 358 34 967 3 968 32 972 64 364 4 363 2 367 2 973 12 974 38 975 2 981 2 372 2 982 8 374 64 375 2 378 24 379 34 383 2 988 20 385 18 990 2 394 32 396 4 993 8 994 14 400 2 998 2 401 32 1000 130 1001 2 405 4 409 2 408 2 1004 12 1006 3 412 2 413 2 1007 2 1010 2 1011 1 420 14 419 2 1017 12 1018 16 1019 2 1021 22 1025 64 424 2 425 2 1026 2 1027 2 1029 2 1032 232 1033 2 1034 2 1035 2 429 16 1038 2 433 32 435 12 436 10 1046 4 1049 2 1050 32 1051 2 1053 2 1054 36 447 2 1056 12 1060 8 451 2 453 2 1061 4 1062 2 461 2 460 2 1065 16 463 2 1066 2 464 2 1067 32 1069 102 1070 18 468 2 1073 1 1074 2 1075 6 472 6 475 4 1077 2 1082 2 479 2 481 2 482 2 1088 2 1089 62 483 8 486 2 1091 2 487 4 493 3 1093 4 1094 2 1098 2 1097 2 1096 2 496 72 1099 2 497 2 498 2 1100 2 1102 38 1103 18 1104 2 1106 2 1107 2 503 2 504 4 1111 13 1110 2 1114 2 1116 46 507 2 1120 10 1122 2 513 2 515 2 1123 2 516 2 1124 2 519 2 521 2 522 2 1129 4 523 2 1131 2 1132 10 1134 32 524 4 525 2 526 2 529 2 530 14 1139 2 537 2 1146 2 1145 2 538 2 539 2 1151 32 1153 36 543 2 544 2 1159 3 545 2 1160 6 546 2 1162 2 1163 2 1166 4 547 2 549 168 1170 2 553 2 552 23 1171 8 1173 18 556 2 558 12 1175 32 1179 2 562 2 563 2 564 2 1181 2 565 10 1184 2 567 2 568 12 1190 2 1191 2 571 2 1195 2 579 2 1200 2 1201 2 582 6 1203 2 585 32 1204 32 584 2 586 2 1205 2 1207 2 591 2 592 6 594 64 596 32 598 2 1213 2 599 2 602 2 603 2 605 7 1218 24 1220 2 1221 3 608 2 609 2 611 4 612 2 1225 2 615 18 618 1 617 510 619 32 620 2 1230 2 1231 32 626 2 1232 32 1233 20 627 2 1234 8 631 2 1239 32 634 20 635 2 637 1 636 2 
1132 2 258 4 1062 2 1018 2 1019 2 531 2 6 2 951 2 884 2 1065 2 565 2 730 2 83 2 1116 2 617 2 1195 2 778 2 820 2 516 2 1124 2 519 2 107 2 558 2 869 6 
1132 2 258 4 1062 2 1018 2 1019 2 531 2 6 2 951 2 884 2 1065 2 565 2 730 2 83 2 1116 2 617 2 1195 2 778 2 820 2 516 2 1124 2 519 2 107 2 558 2 869 6 
1132 2 258 4 1062 2 1018 2 1019 2 531 2 6 2 951 2 884 2 1065 2 565 2 730 2 83 2 1116 2 617 2 1195 2 778 2 820 2 516 2 1124 2 519 2 107 2 558 2 869 6 
721 4 792 4 1062 2 157 2 1017 2 378 3 876 3 884 2 385 4 730 4 1069 6 732 2 654 2 392 4 351 2 1075 2 472 4 925 2 810 2 278 2 741 2 1116 3 617 10 435 2 1197 2 856 2 712 2 820 3 288 2 1124 2 61 2 976 2 1004 2 783 2 552 5 252 3 634 4 1238 2 26 2 324 4 
721 4 792 4 157 2 1017 2 876 2 884 2 730 4 732 2 654 2 656 2 351 2 810 2 1116 2 741 2 278 2 435 2 1197 2 1201 2 820 2 1124 2 288 2 582 2 976 2 26 2 1062 2 378 2 385 4 1069 6 392 4 1075 2 472 4 925 2 617 10 856 2 712 2 61 2 1004 2 783 2 552 4 252 2 1238 2 634 4 324 4 
721 4 792 4 157 2 1017 2 876 2 884 2 730 4 732 2 654 2 656 2 351 2 810 2 1116 2 741 2 278 2 435 2 1197 2 1201 2 820 2 1124 2 288 2 582 2 976 2 26 2 1062 2 378 2 385 4 1069 6 392 4 1075 2 472 4 925 2 617 10 856 2 712 2 61 2 1004 2 783 2 552 4 252 2 1238 2 634 4 324 4 
721 4 792 4 157 2 1017 2 876 2 884 2 730 4 732 2 654 2 656 2 351 2 810 2 1116 2 741 2 278 2 435 2 1197 2 1201 2 820 2 1124 2 288 2 582 2 976 2 26 2 1062 2 378 2 385 4 1069 6 392 4 1075 2 472 4 925 2 617 10 856 2 712 2 61 2 1004 2 783 2 552 4 252 2 1238 2 634 4 324 4 
721 4 792 4 157 2 1017 2 876 2 884 2 730 4 732 2 654 2 656 4 351 2 810 2 1116 2 741 2 278 2 435 2 1197 2 1201 4 820 2 1124 2 288 2 582 4 976 2 26 2 1062 2 378 2 385 4 1069 6 392 4 1075 2 472 4 925 2 617 10 856 2 712 2 61 2 1004 2 783 2 552 4 252 2 1238 2 634 4 324 4 
306 2 175 2 769 2 1169 2 187 2 449 2 
728 2 48 2 974 2 822 2 679 2 1169 2 855 2 
29 2 33 2 458 2 793 2 880 2 214 2 730 8 918 1 40 2 1188 2 698 2 170 2 275 2 926 2 576 1 617 10 1196 2 852 2 403 2 1003 2 244 2 678 1 320 1 828 1 109 2 868 2 
1093 2 526 2 383 2 882 2 296 2 385 12 730 6 732 6 654 6 428 2 656 5 1075 6 472 4 848 2 476 2 617 6 435 6 138 2 1201 2 712 6 582 2 677 2 61 2 144 2 1004 6 783 6 552 16 251 4 1057 2 202 4 
231 2 721 2 452 4 792 2 156 2 160 2 617 1 875 6 764 2 364 2 298 2 730 1 340 2 917 2 165 1 42 2 634 2 86 2 
231 4 721 2 452 4 792 2 156 2 160 2 875 6 764 2 298 2 364 4 340 2 917 2 42 4 634 2 86 2 
231 8 721 2 452 4 792 2 156 6 160 2 617 1 875 10 764 2 298 8 364 8 730 1 340 2 917 2 165 1 42 8 634 2 86 2 
231 2 721 2 452 2 792 2 160 2 875 2 764 2 364 2 340 2 917 2 42 2 634 2 86 2 
642 4 945 2 158 4 331 2 494 2 4 4 950 10 7 6 496 8 335 28 336 4 649 4 502 2 653 2 346 16 655 4 802 102 660 4 662 30 357 10 1111 8 176 2 1114 2 968 4 510 2 972 10 23 4 366 10 369 8 682 2 681 4 684 4 685 4 686 4 374 11 1134 4 212 4 530 4 222 2 841 32 223 6 1151 8 394 4 1153 6 399 2 1158 2 702 2 49 4 401 4 54 5 703 16 999 2 1000 26 854 4 56 8 549 36 714 4 871 4 416 4 1175 4 1025 10 730 70 82 2 1032 24 427 16 85 8 568 16 276 4 433 4 743 6 1043 2 279 4 440 2 1050 4 898 4 283 2 899 2 1204 4 585 4 1206 2 1207 4 1054 6 1055 2 901 2 905 16 594 10 596 4 116 4 1067 4 467 8 125 8 301 4 773 4 1226 2 617 78 1081 8 619 4 316 4 933 44 1231 4 934 4 1232 4 145 2 782 10 938 4 940 4 1239 4 943 14 637 2 944 1 
1175 2 945 2 158 2 331 2 7 2 335 12 1025 6 646 2 649 2 730 26 1102 2 82 2 1032 8 802 40 662 6 357 2 1111 6 433 4 1114 2 743 2 968 4 817 2 510 2 95 2 972 6 899 2 585 4 1206 2 1207 2 901 2 1055 2 1054 2 594 6 374 2 524 2 116 4 222 2 223 4 605 2 1073 2 301 4 773 4 1153 2 304 10 702 2 1158 2 617 28 401 2 703 14 1160 2 1000 12 241 2 933 14 549 14 1232 4 938 2 940 2 1237 2 1011 2 
642 4 155 18 945 6 158 2 331 4 494 2 795 4 7 6 496 50 335 54 649 6 650 12 1102 4 501 4 653 2 655 4 802 216 804 54 660 6 662 30 357 14 1111 8 1114 6 815 2 968 6 1119 4 817 2 971 26 510 2 23 6 972 12 191 20 196 2 681 6 684 6 685 6 686 4 374 12 831 10 1134 6 524 2 530 4 35 2 217 24 37 6 222 2 223 8 39 20 1151 24 394 6 1153 14 399 2 1158 2 702 6 49 4 401 6 54 1 703 16 1160 8 1000 54 548 4 854 4 549 76 59 24 1006 2 1011 2 555 2 417 2 1175 6 1024 10 1025 12 730 118 82 8 1032 116 274 54 433 6 743 32 577 2 279 4 1047 2 95 2 1050 6 898 4 1204 6 585 6 1207 2 1054 14 1055 2 905 2 1210 8 594 12 596 6 117 4 600 10 116 6 1067 6 605 4 122 2 1073 2 301 6 773 4 304 20 613 4 776 2 617 130 619 6 477 6 480 20 316 4 933 100 1231 6 934 4 1232 6 145 2 938 2 940 6 1237 2 1239 6 943 12 637 2 638 26 
945 2 950 2 7 2 335 6 646 2 649 2 802 48 1108 2 357 2 1114 2 814 2 968 2 674 2 510 2 972 4 191 2 366 2 1127 2 374 2 831 2 536 2 1138 2 222 2 223 6 389 2 39 2 1148 2 1153 2 397 2 398 2 702 2 1158 2 50 2 401 2 703 36 850 2 1000 6 548 2 241 2 549 20 410 4 66 2 418 2 1175 2 1024 2 1025 4 730 44 1028 4 82 2 1032 6 267 2 430 2 574 2 432 4 434 2 433 2 743 2 440 2 899 2 585 2 1206 2 1054 2 1055 2 901 2 588 2 291 2 1058 2 594 4 450 2 116 2 600 2 1215 2 124 2 301 2 473 2 611 4 613 2 1226 2 617 46 1080 2 480 2 933 20 1232 2 146 2 782 2 938 2 940 2 1235 2 1236 2 151 6 325 2 
129 2 
652 1 132 1 254 1 322 1 22 1 961 1 
652 1 132 1 254 1 322 1 22 1 961 1 
652 1 132 1 254 1 322 1 22 1 961 1 
652 1 132 1 254 1 322 1 22 1 961 1 
652 1 132 1 254 1 322 1 22 1 961 1 
652 1 132 1 254 1 322 1 22 1 961 1 
652 1 132 1 254 1 322 1 22 1 961 1 
652 1 132 1 254 1 322 1 22 1 961 1 
652 1 132 1 254 1 322 1 22 1 961 1 
652 1 132 1 254 1 322 1 22 1 961 1 
652 1 132 1 254 1 322 1 22 1 961 1 
652 1 132 1 254 1 322 1 22 1 961 1 
652 1 132 1 254 1 322 1 22 1 961 1 
652 1 132 1 254 1 322 1 22 1 961 1 
652 1 132 1 254 1 322 1 22 1 961 1 
652 1 132 1 254 1 322 1 22 1 961 1 
652 1 132 1 254 1 322 1 22 1 961 1 
652 1 132 1 254 1 322 1 22 1 961 1 
652 1 132 1 254 1 322 1 22 1 961 1 
652 1 132 1 254 1 322 1 22 1 961 1 
652 1 132 1 254 1 322 1 22 1 961 1 
652 1 132 1 254 1 322 1 22 1 961 1 
652 1 132 1 254 1 322 1 22 1 961 1 
652 1 132 1 254 1 322 1 22 1 961 1 
652 1 132 1 254 1 322 1 22 1 961 1 
652 1 132 1 254 1 322 1 22 1 961 1 
652 1 132 1 254 1 322 1 22 1 961 1 
652 1 132 1 254 1 322 1 22 1 961 1 
652 1 132 1 254 1 322 1 22 1 961 1 
652 1 132 1 254 1 322 1 22 1 961 1 
652 1 132 1 254 1 322 1 22 1 961 1 
652 1 132 1 254 1 322 1 22 1 961 1 
652 1 132 1 254 1 322 1 22 1 961 1 
652 1 132 1 254 1 322 1 22 1 961 1 
652 1 132 1 254 1 322 1 22 1 961 1 
652 1 132 1 254 1 322 1 22 1 961 1 
652 1 132 1 254 1 322 1 22 1 961 1 
652 1 132 1 254 1 322 1 22 1 961 1 
652 1 132 1 254 1 322 1 22 1 961 1 
652 1 132 1 254 1 322 1 22 1 961 1 
652 1 132 1 254 1 322 1 22 1 961 1 
652 1 132 1 254 1 322 1 22 1 961 1 
652 1 132 1 254 1 322 1 22 1 961 1 
652 1 132 1 254 1 322 1 22 1 961 1 

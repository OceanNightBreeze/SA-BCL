#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.NullPointerException 353 286 93 914 963 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 123 482 54 934 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V ERROR java.lang.NullPointerException 424 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 244 554 979 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 244 554 979 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 244 554 979 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 244 554 979 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.PptSlice1:arity()I
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3_12()Z
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.Quant:memberOf(S[S)Z
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
jtb.JavaParser:jj_3_18()Z
daikon.Quant:eq(DD)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
jtb.JavaParser:jj_2_3(I)Z
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
jtb.JavaParser:jj_3R_108()Z
daikon.Quant:pairwiseDivides([I[I)Z
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.ProglangType:isArray()Z
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.Intern:intern([I)[I
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
utilMDE.TestUtilMDE:lsis_test(I)V
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.PptName:isCombinedExitPoint()Z
utilMDE.WeakHasherMap:processQueue()V
utilMDE.ArraysMDE:sum([D)D
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
utilMDE.ArraysMDE:sum([[D)D
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
jtb.JavaParser:jj_3_16()Z
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_97()Z
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.Quant:lte(II)Z
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
jtb.JavaParser:jj_3_25()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
jtb.JavaParser:jj_3_5()Z
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
jtb.JavaParser:jj_3_13()Z
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.Quant:setDiff([I[I)[I
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ProglangType:isScalar()Z
jtb.JavaParser:jj_3R_162()Z
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.ArraysMDE:indexOf([ZZ)I
jtb.JavaParser:jj_3R_53()Z
daikon.Quant:eq(FF)Z
jtb.JavaParser:jj_3R_119()Z
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
utilMDE.MathMDE:mod_positive(II)I
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:isPseudoArray()Z
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
jtb.JavaParser:jj_3R_114()Z
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.Quant:pairwiseLT([I[I)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_72()Z
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
utilMDE.MathMDE:sign(I)I
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_ntk()I
daikon.Quant:isReverse([I[I)Z
daikon.Quant:lexNotEqual([I[I)Z
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
jtb.JavaCharStream:GetImage()Ljava.lang.String;
jtb.JavaParser:jj_3_3()Z
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.PptTopLevel.CondIterator:hasNext()Z
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
utilMDE.FuzzyFloat:gt(DD)Z
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.MathMDE:pow_fast(II)I
daikon.Quant:eltsEqual([II)Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.inv.OutputFormat:isJavaFamily()Z
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_2_18(I)Z
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_80()Z
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_2_35(I)Z
daikon.Quant:lexEqual([I[I)Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String; | RETURN | 50824 | return null
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
daikon.Quant:lexLT([I[I)Z
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 2268 | = null
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.Quant:eltwiseLTE([I)Z
jtb.JavaParser:jj_3R_161()Z
jtb.JavaParser:jj_3R_87()Z
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.FuzzyFloat:lt(DD)Z
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.inv.unary.LowerBoundCore:calc_range()J
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
jtb.JavaParser:jj_3_4()Z
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.PptTopLevel:name()Ljava.lang.String;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.MathMDE:gcd(II)I
jtb.JavaParser:jj_3R_135()Z
utilMDE.Assert:assertTrue(Z)V
jtb.JavaParser:jj_3R_55()Z
utilMDE.OrderedPairIterator:setnext2()V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_51()Z
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
daikon.Quant:subsetOf([D[F)Z
utilMDE.ArraysMDE:concat([I[I)[I
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
jtb.JavaParser:jj_3R_85()Z
jtb.JavaParser:jj_3_29()Z
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.Quant:pairwiseGT([I[I)Z
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:pairwiseGTE([I[I)Z
daikon.ProglangType:baseIsScalar()Z
daikon.inv.Invariant:isWorthPrinting()Z
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_48()Z
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
jtb.JavaCharStream:getEndLine()I
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
utilMDE.ArraysMDE:element_range([I)I
jtb.JavaParser:jj_3_30()Z
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
jtb.JavaParser:jj_3R_122()Z
daikon.Quant:gte(II)Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
utilMDE.MathMDE:negate(I)I
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_123()Z
jtb.JavaParser:jj_3_35()Z
daikon.VarInfo:relate_var()V
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfo:name()Ljava.lang.String;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
utilMDE.ArraysMDE:subarray([JII)[J
jtb.JavaParser:jj_3_14()Z
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:eltsGteIndex([I)Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.diff.InvMap:InvMap()V
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.Quant:eltsEqualIndex([I)Z
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
jtb.Token:newToken(I)Ljtb.Token;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.Quant:subsetOf([F[D)Z
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
utilMDE.ArraysMDE:subarray([III)[I
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.Debug:logDetail()Z
jtb.JavaParser:jj_3R_105()Z
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName:name()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
jtb.JavaParser:jj_3R_103()Z
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_50()Z
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.Debug:logOn()Z
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.JavaParser:getToken(I)Ljtb.Token;
daikon.PptSlice1:num_samples()I
daikon.ModBitTracker:num_samples()I
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.Quant:subsetOf([S[S)Z
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration; | RETURN | 28404 | return null
jtb.JavaParser:jj_3R_67()Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.ValueTuple:size()I
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.Quant:pairwiseSquare([I[I)Z
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([D)Z
jtb.JavaParser:jj_3R_76()Z
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.EntrySet:size()I
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
jtb.JavaParser:jj_3R_125()Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_120()Z
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo; | RETURN | 20729 | return null
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
jtb.JavaParser:jj_3R_118()Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_57()Z
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltsLT([II)Z
daikon.Quant:union([I[I)[I
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.Quant:eltwiseGT([I)Z
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_89()Z
utilMDE.WeakHasherMap:size()I
daikon.ProglangType:baseIsIntegral()Z
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression; | RETURN | 64861 | return null
daikon.ProglangType:dimensions()I
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.filter.InvariantFilters:InvariantFilters()V
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:eq(JJ)Z
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
jtb.JavaParser:jj_3R_107()Z
utilMDE.MathMDE:nonmodulus_strict([I)[I
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:internSubsequence([JII)[J
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.diff.PrintAllVisitor:bufPrintln()V
jtb.JavaParser:jj_3R_148()Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.Quant:eq(II)Z
utilMDE.ArraysMDE:isSubset([D[D)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
jtb.JavaParser:jj_3R_58()Z
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.inv.unary.UpperBoundCore:calc_modulus()J
jtb.JavaParser:jj_2_14(I)Z
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
jtb.JavaCharStream:readChar()C
jtb.JavaCharStream:ReadByte()C
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
utilMDE.FuzzyFloat:eq(DD)Z
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
utilMDE.FuzzyFloat:isSubset([D[D)Z
jtb.JavaParser:jj_3R_68()Z
daikon.inv.Invariant:prob_and(DD)D
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
jtb.JavaParser:jj_3_10()Z
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.inv.Invariant:logOn()Z
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
jtb.JavaParser:jj_2_25(I)Z
utilMDE.FuzzyFloat:lte(DD)Z
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_63()Z
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
daikon.Quant:eltwiseLT([I)Z
jtb.JavaParser:jj_3R_117()Z
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.ValueTuple:isMissing(I)Z
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
jtb.JavaParser:jj_3_19()Z
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.Quant:ne(II)Z
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.Invariant:prob_or(DD)D
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.LowerBoundCore:calc_modulus()J
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
jtb.JavaParser:jj_3R_100()Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
utilMDE.WeakIdentityHashMap:indexFor(II)I
jtb.syntaxtree.NodeList:NodeList()V
daikon.Quant:lexLTE([I[I)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.UpperBoundCore:calc_range()J
utilMDE.LimitedSizeIntSet:add(I)V
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.ProglangType:isIntegral()Z
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.Quant:intersection([I[I)[I
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.ModBitTracker:num_sets()I
daikon.ModBitTracker:num_vars()I
daikon.Quant:memberOf(F[D)Z
jtb.JavaParser:jj_2_13(I)Z
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
utilMDE.Options.OptionInfo:argument_required()Z
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.Quant:subsetOf([J[J)Z
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
utilMDE.MathMDE:modulus([I)[I
jtb.JavaParser:jj_3R_102()Z
daikon.Quant:gt(II)Z
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaCharStream:BeginToken()C
jtb.JavaParser:jj_3R_124()Z
daikon.Quant:subsetOf([B[I)Z
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
utilMDE.ArraysMDE:fn_is_total([I)Z
jtb.JavaParser:jj_3R_52()Z
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.Quant:concat([I[I)[I
utilMDE.ArraysMDE:min([I)I
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.Quant:memberOf(J[J)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:eltsGtIndex([I)Z
jtb.JavaParser:jj_3R_77()Z
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
jtb.JavaParser:jj_3R_62()Z
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
jtb.JavaParser:jj_3R_54()Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.Quant:eltsGT([II)Z
daikon.Quant:eltwiseGTE([I)Z
jtb.JavaParser:jj_3R_104()Z
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
utilMDE.MathMDE:gcd_differences([I)I
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
utilMDE.Intern:intern([J)[J
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
jtb.JavaParser:jj_3R_106()Z
jtb.JavaParser:jj_3_15()Z
jtb.JavaParser:jj_2_12(I)Z
daikon.PptMap:asCollection()Ljava.util.Collection;
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_69()Z
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.Quant:pairwiseLTE([I[I)Z
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_2_1(I)Z
jtb.JavaParser:jj_2_17(I)Z
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant:logDetail()Z
jtb.JavaParser:jj_scan_token(I)Z
daikon.Quant:memberOf(F[F)Z
utilMDE.ArraysMDE:noDuplicates([I)Z
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.inv.unary.LowerBoundCore:computeConfidence()D
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
jtb.JavaParser:jj_3R_126()Z
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_60()Z
daikon.Quant:subsetOf([F[F)Z
utilMDE.FuzzyFloat:ne(DD)Z
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.PptSlice0:initInvariantsSeen()V
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
jtb.JavaCharStream:FillBuff()V
utilMDE.MathMDE:gcd([I)I
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:missing_numbers([I)[I
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:hashCode()I
daikon.inv.Invariant:justified()Z
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_61()Z
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
jtb.JavaParser:jj_3R_134()Z
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
utilMDE.ArraysMDE:sorted([I)Z
jtb.JavaParser:jj_3_36()Z
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
utilMDE.Intern:intern([D)[D
daikon.Quant:memberOf(I[I)Z
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
daikon.Quant:setEqual([I[I)Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_110()Z
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.Quant:sameLength([I[I)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaCharStream:getEndColumn()I
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.inv.ValueSet:ValueSet(I)V
utilMDE.MathMDE:pow(II)I
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.inv.Invariant:getConfidence()D
daikon.inv.unary.scalar.LowerBound:enabled()Z
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3_27()Z
daikon.Quant:pairwiseEqual([I[I)Z
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.FuzzyFloat:set_rel_diff(D)V
jtb.JavaParser:jj_2_10(I)Z
jtb.JavaParser:jj_3R_81()Z
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
jtb.JavaParser:jj_3R_121()Z
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_133()Z
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
utilMDE.ArraysMDE:indexOf([II)I
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.Quant:noDups([I)Z
jtb.JavaParser:jj_3R_56()Z
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.inv.filter.ParentFilter:ParentFilter()V
jtb.JavaParser:jj_2_21(I)Z
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.FuzzyFloat:indexOf([D[D)I
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
jtb.JavaParser:jj_3R_86()Z
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
jtb.JavaParser:jj_3_22()Z
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.Quant:lexGT([I[I)Z
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
utilMDE.LimitedSizeIntSet:size()I
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaCharStream:backup(I)V
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:subsetOf([I[I)Z
daikon.Quant:eltsLteIndex([I)Z
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
jtb.JavaParser:jj_2_5(I)Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
utilMDE.MathMDE:gcd(JJ)J
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Ppt:Ppt()V
jtb.JavaParser:jj_3R_70()Z
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
jtb.JavaParser:jj_2_36(I)Z
daikon.ValueTuple:isMissingFlow(I)Z
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.Quant:eltsLtIndex([I)Z
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
utilMDE.OrderedPairIterator:setnext1()V
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
jtb.JavaCharStream:getBeginLine()I
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_99()Z
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.ArraysMDE:sum([[I)I
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
jtb.JavaParser:jj_3R_73()Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
jtb.JavaCharStream:getBeginColumn()I
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
jtb.JavaParser:jj_3R_96()Z
utilMDE.ArraysMDE:min_max([I)[I
jtb.JavaParser:jj_2_16(I)Z
jtb.JavaParser:jj_3R_163()Z
jtb.JavaParser:jj_3R_109()Z
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_116()Z
daikon.ModBitTracker:ModBitTracker(I)V
daikon.inv.Invariant:prob_and(DDD)D
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
jtb.JavaParser:jj_2_4(I)Z
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
jtb.JavaParser:jj_3R_75()Z
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.Quant:eltwiseNotEqual([I)Z
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.diff.RootNode:RootNode()V
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.Quant:eltsNotEqual([II)Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
utilMDE.OrderedPairIterator:hasNext()Z
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.UpperBoundCore:computeConfidence()D
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
utilMDE.FuzzyFloat:gte(DD)Z
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
jtb.JavaParser:jj_3R_47()Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.Intern:internSubsequence([III)[I
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
jtb.JavaParser:jj_3_28()Z
daikon.diff.DetailedStatisticsVisitor:freq(II)D
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:new_ppt()V
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.Invariants:Invariants()V
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.ArraysMDE:max([I)I
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
jtb.JavaParser:jj_3R_115()Z
daikon.Quant:lt(II)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.NonZero:enabled()Z
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
jtb.JavaParser:jj_3_17()Z
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.ModBitTracker:split(I)I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
utilMDE.ArraysMDE:isSubarray([I[II)Z
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.ArraysMDE:fn_inverse([II)[I
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
jtb.JavaParser:jj_3R_88()Z
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.Intern:numIntArrays()I
jtb.JavaParserTokenManager:jjStopAtPos(II)I
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
daikon.Quant:eltsLTE([II)Z
daikon.diff.Node:Node(LutilMDE.Pair;)V
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.PptName:isEnterPoint()Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_74()Z
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
daikon.inv.filter.ObviousFilter:ObviousFilter()V
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.VarInfoAux:hashCode()I
daikon.PptSlice2:arity()I
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.Quant:lexGTE([I[I)Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:memberOf(D[F)Z
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.InvariantFormatTester:execute()Z
daikon.diff.Node:Node()V
jtb.JavaParser:jj_3_20()Z
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:eltwiseEqual([I)Z
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:jj_3R_49()Z
daikon.PptSlice0:arity()I
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
jtb.JavaParser:jj_3R_101()Z
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.Quant:eltsGTE([II)Z
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:sum([I)I
jtb.JavaParser:jj_3_21()Z
daikon.Quant:pairwiseNotEqual([I[I)Z
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.Quant:subsetOf([D[D)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
jtb.JavaParser:jj_3_1()Z
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.test.TestQuant:removeAdjacentDups([I)[I
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
jtb.JavaParser:jj_2_15(I)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.Node:getUserRight()Ljava.lang.Object;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.Quant:slice([III)[I
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
517 2 748 4 516 2 174 2 659 2 510 2 23 2 386 2 252 2 
779 6 374 2 176 6 466 2 582 2 838 2 266 2 121 2 498 2 575 2 691 6 
174 2 357 2 659 2 542 6 504 6 960 2 496 4 712 2 261 4 416 2 993 6 994 2 51 6 
659 6 28 10 726 26 313 10 737 10 484 2 64 8 167 30 743 8 584 4 268 4 368 8 893 2 318 2 234 2 487 8 702 12 171 16 174 6 202 2 177 10 206 4 590 6 274 4 866 2 21 6 900 16 420 10 842 16 388 2 
705 4 253 6 
847 2 
28 2 726 4 309 2 313 2 737 2 64 2 791 2 167 6 584 2 702 2 68 2 171 2 435 2 142 2 177 4 208 2 21 2 900 2 420 2 217 2 842 2 355 2 909 2 
256 2 28 4 726 12 729 2 206 2 646 4 326 6 313 4 360 4 737 4 497 6 167 14 900 8 420 4 702 5 842 8 171 8 
124 2 193 4 220 2 544 2 428 2 453 2 454 2 634 2 637 2 736 2 977 2 854 2 462 4 700 2 824 10 172 10 586 4 106 2 800 4 674 2 108 2 589 6 77 2 525 2 378 2 648 2 349 2 991 62 49 4 761 4 82 14 473 4 870 2 212 4 302 4 417 4 901 4 839 8 52 4 500 4 
847 2 162 2 164 2 888 2 486 2 672 2 210 2 529 2 620 2 218 2 
1 4 537 2 659 4 306 2 608 2 553 2 558 2 367 2 893 2 560 2 613 2 562 2 14 2 77 2 957 2 146 2 678 2 899 4 148 2 382 2 835 2 212 2 839 2 775 2 29 2 32 2 787 2 638 2 100 2 699 2 464 2 236 2 174 4 517 2 403 2 800 4 243 2 711 4 713 2 714 2 651 2 184 2 597 2 877 2 
659 4 28 16 726 48 727 2 128 2 313 16 735 2 228 6 360 4 737 16 788 8 97 6 484 2 64 18 668 4 167 54 584 2 317 6 138 6 368 6 372 4 703 2 702 22 171 32 174 4 177 6 590 4 646 4 326 6 833 4 497 6 654 4 21 4 900 32 248 4 420 16 284 2 598 2 842 32 
870 2 589 2 839 2 
537 2 725 2 449 2 429 22 481 2 163 2 851 2 151 2 432 2 698 2 684 2 122 2 907 2 627 10 
356 32 601 1 254 3 123 2 602 1 126 1 4 2 881 3 131 2 887 2 136 1 890 2 370 2 369 3 745 2 746 2 490 3 897 2 751 2 493 8 273 2 752 8 753 2 275 2 278 2 279 2 617 2 19 16 763 6 767 2 622 2 904 2 624 4 387 2 908 2 26 2 631 2 157 1 782 1 635 2 394 2 395 16 396 2 287 2 288 2 639 2 640 4 508 2 789 1 916 2 918 2 513 16 290 2 169 4 37 3 174 32 644 2 926 2 927 2 43 2 526 1 929 5 527 2 414 24 183 24 808 2 418 2 419 2 531 2 534 2 938 3 814 2 535 2 659 34 940 1 308 1 194 4 59 2 61 32 196 16 945 2 821 8 947 2 316 2 949 2 670 2 66 2 951 2 828 2 673 2 323 3 564 2 74 2 440 2 675 2 567 2 76 4 831 1 832 2 328 2 834 3 967 2 329 2 837 1 445 6 687 1 573 2 221 2 92 2 973 3 222 6 693 2 848 2 226 2 580 2 694 2 98 3 231 12 338 2 581 1 853 2 340 2 103 6 342 2 701 3 982 1 105 2 862 2 107 4 706 2 588 1 707 2 708 2 986 2 988 2 591 2 864 2 990 3 472 2 247 4 995 2 873 2 875 4 720 2 998 2 1000 2 252 2 
488 2 
659 2 857 2 
659 4 809 2 434 2 
475 4 2 2 476 2 477 2 259 42 730 2 732 2 731 36 733 2 5 2 738 2 739 2 740 2 485 2 6 6 7 146 264 2 263 2 10 2 271 2 12 24 489 2 13 2 492 2 750 48 749 2 16 2 494 2 756 36 757 2 764 2 281 2 765 2 766 2 768 2 770 2 283 2 24 2 25 2 499 2 777 10 776 2 502 2 501 2 285 4 783 48 785 2 505 2 286 2 790 2 289 46 512 4 795 48 35 2 291 4 36 4 518 4 799 6 801 4 802 4 803 2 523 4 298 2 42 6 524 2 44 2 299 2 48 2 47 2 807 8 530 2 50 2 532 20 533 2 813 2 536 2 539 10 55 8 307 8 816 2 815 2 541 2 310 2 545 2 312 2 548 48 314 4 818 4 820 2 549 2 552 2 556 2 559 4 67 4 825 2 320 2 563 2 829 2 72 2 73 2 324 8 78 4 327 2 569 2 80 8 570 2 572 2 331 8 574 4 89 2 841 2 844 2 91 2 93 2 578 2 334 2 94 2 579 2 849 8 337 4 852 2 101 2 102 2 856 20 863 4 110 26 109 2 592 2 593 2 868 2 114 22 115 2 594 2 872 2 350 28 351 26 596 2 353 18 876 2 599 10 354 2 600 2 878 2 358 2 879 2 129 2 607 2 882 2 606 4 884 2 133 22 886 2 363 2 365 2 364 2 135 2 611 216 137 2 894 2 895 2 140 2 614 26 377 2 376 48 615 2 144 2 379 2 149 2 384 2 902 2 621 2 153 2 905 2 623 14 625 2 910 24 389 2 390 48 911 2 632 2 633 2 160 4 161 2 392 2 636 2 914 2 166 2 919 2 168 2 398 6 920 2 401 2 922 48 173 4 175 4 404 4 405 4 178 4 407 4 645 4 647 4 410 4 179 2 411 2 412 48 650 2 652 2 936 2 186 4 937 48 187 2 656 24 658 2 423 4 660 48 661 2 425 146 427 2 426 146 662 2 431 14 665 2 667 2 666 2 946 4 948 16 198 4 433 6 671 48 950 2 952 16 200 2 437 6 204 2 205 36 207 4 958 2 209 48 680 2 963 2 966 4 965 28 969 2 211 2 213 2 444 2 215 8 685 2 971 2 686 2 448 2 690 4 689 8 972 2 692 2 450 2 974 2 224 8 452 2 975 2 225 2 227 2 229 2 456 2 978 2 230 2 459 2 461 8 980 2 463 2 235 8 704 2 983 4 238 16 709 4 710 2 249 48 717 4 999 2 722 2 
669 2 959 2 294 1 402 2 
781 2 402 2 
538 4 295 2 522 2 223 2 566 2 429 6 180 2 550 2 79 2 262 2 964 2 932 2 81 2 8 2 612 2 626 2 11 4 373 2 
669 2 989 2 
84 2 839 2 561 2 181 2 
344 2 968 2 84 2 839 2 561 2 181 2 
84 2 839 2 655 2 268 2 63 2 402 2 
716 2 613 2 
84 2 839 2 268 2 987 2 
46 2 576 2 
880 2 955 2 
216 2 343 2 
912 2 546 2 
880 2 546 2 154 2 
880 2 546 2 506 2 
742 2 880 2 546 2 
880 2 546 2 930 2 
335 2 885 2 269 2 319 6 442 2 928 6 84 2 839 2 
45 2 478 2 
968 2 84 2 839 2 655 2 268 2 402 2 515 2 
655 2 663 2 402 2 
754 2 655 2 402 2 
478 2 669 2 111 2 
655 2 402 2 
125 2 478 2 
836 2 402 2 
681 2 478 2 669 2 
99 2 216 2 669 2 
604 2 669 2 546 2 
46 2 669 2 189 2 
880 2 669 2 195 2 
944 2 478 2 
822 2 402 2 
460 2 216 2 
159 2 546 2 
46 2 352 2 
577 2 880 2 
245 2 478 2 
880 2 240 2 
46 2 568 2 
755 2 546 2 
216 2 774 2 
681 2 141 2 478 2 669 2 
681 2 141 2 478 2 669 2 112 2 
478 2 669 2 17 2 
303 2 478 2 669 2 
657 2 734 2 119 2 923 2 
967 2 
356 6 0 2 123 2 605 2 130 2 480 2 131 2 883 2 132 2 136 2 9 2 890 2 745 2 375 2 753 2 752 2 275 4 380 2 763 6 624 2 631 2 635 2 287 2 640 4 513 6 39 2 174 26 43 2 527 2 808 2 531 2 814 2 659 26 941 2 308 2 194 2 59 2 61 4 947 2 66 6 439 2 673 2 440 2 74 2 675 2 76 4 445 2 573 2 843 4 219 2 222 2 92 2 221 2 693 2 226 2 580 2 231 8 338 2 339 2 853 2 340 2 103 4 583 4 981 2 107 4 707 2 988 2 471 2 472 2 247 2 873 2 875 4 1000 2 252 2 
356 6 0 2 123 2 605 2 130 2 480 2 131 2 883 2 132 2 136 2 890 2 745 2 139 2 897 2 753 2 752 2 275 4 380 2 763 6 624 2 26 2 631 2 635 2 287 2 640 4 513 6 39 2 174 26 43 2 527 2 808 2 531 2 814 2 659 26 941 2 308 2 194 2 59 2 61 4 947 2 66 6 673 2 440 2 74 2 675 2 76 4 445 2 573 2 843 4 219 2 222 2 92 2 221 2 693 2 226 2 580 2 231 8 338 2 339 2 853 2 340 2 103 6 583 4 232 2 981 2 107 4 707 2 988 2 591 2 471 2 472 2 247 2 873 2 875 4 1000 2 252 2 723 2 
869 2 
996 2 961 2 
659 12 123 2 62 2 819 2 131 2 315 2 947 2 266 2 744 2 953 2 827 4 565 2 440 2 143 2 76 2 145 2 147 2 381 8 150 2 763 4 838 4 330 2 772 2 498 2 575 4 691 6 779 6 27 2 693 2 976 2 695 2 913 4 95 2 786 2 915 2 457 2 33 2 696 4 792 2 793 2 917 2 400 8 794 2 170 10 174 6 176 6 347 4 805 2 242 2 409 2 867 2 527 2 413 2 808 2 935 4 871 2 595 2 810 4 875 2 190 2 
659 12 123 2 62 2 819 2 131 2 551 2 315 2 947 2 266 2 744 2 953 2 827 4 565 2 440 2 143 2 76 2 145 2 147 2 381 8 150 2 763 4 838 4 330 2 772 2 498 2 575 4 691 8 779 6 693 2 976 2 695 2 913 4 95 2 786 2 915 2 457 2 33 2 696 4 792 2 793 2 400 8 794 2 170 10 174 6 176 8 466 2 347 4 805 2 242 2 409 2 867 2 527 2 413 2 808 2 935 4 871 2 595 2 120 4 810 4 875 2 719 2 190 2 
779 2 176 2 565 2 347 2 805 2 143 2 242 2 786 2 33 2 793 2 935 4 595 2 838 2 744 2 330 2 953 2 827 4 575 2 
659 12 123 2 62 2 819 2 131 2 315 2 947 2 266 2 744 2 953 2 827 4 565 2 440 2 143 2 76 2 145 2 147 2 381 4 150 2 763 4 838 4 330 2 772 2 575 4 691 6 779 4 27 2 693 2 976 2 695 2 913 4 95 2 786 2 915 2 457 2 33 2 696 4 792 2 793 2 917 2 400 4 794 2 170 6 174 6 176 6 466 2 347 4 805 2 242 2 409 2 867 2 527 2 413 2 808 2 935 4 871 2 595 2 810 4 875 2 190 2 
659 12 123 2 62 2 819 2 131 2 315 2 947 2 266 2 744 2 953 2 827 4 374 2 565 2 440 2 143 2 76 2 145 2 147 2 381 4 150 2 763 4 838 4 330 2 772 2 575 4 691 6 779 6 27 2 693 2 976 2 695 2 913 4 95 2 786 2 915 2 457 2 33 2 696 4 792 2 793 2 917 2 400 4 794 2 170 6 174 6 176 4 347 4 805 2 242 2 409 2 867 2 527 2 413 2 808 2 935 4 871 2 595 2 810 4 875 2 190 2 
659 12 123 2 62 2 819 2 131 2 315 2 947 2 266 2 744 2 953 2 827 4 565 2 440 2 143 2 76 2 145 2 147 2 381 4 150 2 763 4 838 4 330 2 772 2 498 2 575 4 691 6 779 6 27 2 693 2 976 2 695 2 913 4 95 2 786 2 915 2 457 2 33 2 696 4 792 2 793 2 917 2 400 8 794 2 170 6 174 6 176 6 347 4 805 2 242 2 409 2 867 2 527 2 413 2 808 2 935 4 871 2 595 2 810 4 875 2 190 2 
659 12 123 2 62 2 819 2 131 2 315 2 947 2 266 2 744 2 953 2 827 4 374 2 565 2 440 2 143 2 76 2 145 2 147 2 381 8 150 2 763 4 838 4 330 2 772 2 498 2 575 4 691 8 779 8 27 2 693 2 976 2 695 2 913 4 95 2 786 2 915 2 457 2 33 2 696 4 792 2 793 2 917 2 400 8 794 2 170 10 174 6 176 6 347 4 805 2 242 2 409 2 867 2 527 2 413 2 808 2 935 4 871 2 595 2 810 4 875 2 190 2 
659 12 123 2 62 2 819 2 131 2 315 2 947 2 266 2 744 2 953 2 827 4 565 2 440 2 143 2 76 2 145 2 147 2 381 8 150 2 763 4 838 4 330 2 772 2 498 2 575 4 691 6 779 6 27 2 693 2 976 2 695 2 913 4 95 2 786 2 915 2 457 2 33 2 696 4 792 2 793 2 917 2 400 8 794 2 170 10 174 6 176 6 347 4 805 2 242 2 409 2 867 2 527 2 413 2 808 2 935 4 871 2 595 2 810 4 875 2 190 2 
0 4 483 2 266 4 744 2 488 6 745 2 270 2 752 2 495 6 18 2 280 6 763 6 22 1 772 2 779 8 784 2 30 4 786 2 287 12 33 2 34 1 793 2 792 2 513 6 794 2 292 6 38 2 514 6 40 2 297 7 805 2 41 2 43 2 527 2 808 2 810 4 531 2 814 2 62 2 61 2 819 2 315 2 65 2 66 6 827 4 322 6 74 2 565 2 76 4 83 6 838 4 330 2 573 2 87 2 88 2 575 4 843 4 333 1 95 2 580 2 96 2 336 2 850 6 338 2 339 2 853 2 340 2 103 6 857 6 858 2 861 2 107 4 345 2 347 4 591 2 865 2 867 2 871 2 595 2 873 2 875 4 356 8 123 2 130 2 131 2 610 2 366 1 890 2 891 1 896 2 897 2 374 4 143 2 616 7 145 2 147 2 150 2 619 6 624 2 906 6 635 2 913 8 915 2 397 2 640 4 165 6 917 2 400 2 170 2 641 4 921 1 643 2 174 24 176 4 409 2 413 2 935 4 190 2 659 46 941 2 194 2 943 2 430 2 197 2 947 2 434 6 953 2 201 2 673 2 440 2 441 10 677 2 676 6 962 2 682 1 445 2 446 2 688 8 447 6 691 12 222 2 693 2 976 4 226 2 695 4 457 2 231 4 458 6 696 6 984 2 242 2 241 2 469 2 470 2 992 1 247 2 474 2 252 2 721 1 
0 4 356 8 123 2 130 2 131 2 483 2 610 2 266 4 744 2 890 2 488 6 745 2 270 2 896 2 897 2 752 2 143 2 275 2 145 2 495 6 147 2 18 2 619 6 150 2 280 6 763 6 772 2 906 6 624 4 498 4 779 8 784 2 30 4 635 2 913 8 786 2 915 2 287 12 397 2 165 6 33 2 640 4 792 2 917 2 793 2 513 6 400 6 794 2 170 2 641 4 292 6 38 2 514 6 643 2 40 2 174 26 176 8 805 2 41 2 409 2 43 2 527 2 413 2 933 2 935 4 808 2 810 4 531 2 190 2 814 2 659 48 941 2 194 4 61 2 62 2 943 2 819 2 430 2 197 2 315 2 947 2 65 2 66 6 434 6 953 2 827 4 201 2 322 6 673 2 565 2 74 2 440 2 441 10 76 4 676 6 677 2 962 2 83 6 838 4 446 2 445 2 330 2 688 8 573 2 447 6 88 2 87 2 843 4 691 12 575 4 222 2 693 2 976 4 226 2 580 2 695 4 95 2 96 2 336 2 850 6 458 6 231 8 457 2 339 2 696 6 338 2 340 2 853 2 103 6 857 6 858 2 861 2 107 4 984 2 345 2 347 4 241 2 242 2 591 2 865 2 469 2 867 2 470 2 116 2 595 2 871 2 247 4 873 2 474 2 875 4 252 2 
0 4 356 8 123 2 130 2 131 2 483 2 610 2 266 4 744 2 890 2 488 6 745 2 270 2 896 2 897 2 752 2 143 2 275 2 145 2 495 6 147 2 18 2 381 4 619 6 150 2 280 6 763 6 772 2 906 6 624 4 498 4 779 8 784 2 30 4 635 2 913 8 786 2 915 2 287 12 397 2 165 6 33 2 640 4 792 2 917 2 793 2 513 6 400 6 794 2 170 6 641 4 292 6 38 2 514 6 643 2 40 2 174 26 176 8 805 2 41 2 409 2 43 2 527 2 413 2 933 2 935 4 808 2 810 4 531 2 190 2 814 2 659 48 941 2 194 4 61 2 62 2 943 2 819 2 430 2 197 2 315 2 947 2 65 2 66 6 434 6 953 2 827 4 201 2 322 6 673 2 565 2 74 2 440 2 441 10 76 4 676 6 677 2 962 2 83 6 838 4 446 2 445 2 330 2 688 8 573 2 447 6 88 2 87 2 843 4 691 12 575 4 222 2 693 2 976 4 226 2 580 2 695 4 95 2 96 2 336 2 850 6 458 6 231 8 457 2 339 2 338 2 696 6 340 2 853 2 103 6 857 6 858 2 861 2 107 4 984 2 345 2 347 4 241 2 242 2 591 2 865 2 469 2 867 2 470 2 116 2 595 2 871 2 247 4 873 2 474 2 875 4 252 2 
0 4 724 2 257 2 483 2 266 4 744 2 488 12 745 2 270 2 752 4 275 2 495 6 18 2 280 6 763 6 772 2 498 4 779 10 784 2 30 4 786 2 287 10 33 2 793 2 792 2 509 6 513 8 794 2 292 12 38 2 514 6 40 2 519 6 296 2 804 2 805 2 41 2 43 2 527 2 808 2 810 4 531 2 814 2 62 2 61 4 819 2 315 2 65 2 66 8 827 4 322 6 74 2 565 2 76 4 83 6 838 4 85 2 330 2 573 2 87 2 88 2 575 4 843 6 846 6 95 2 580 2 96 2 336 2 850 6 338 2 339 4 853 2 340 2 103 6 857 12 858 2 861 2 107 4 345 2 347 4 591 2 865 2 867 2 116 2 118 6 871 2 595 2 873 2 875 4 356 12 123 2 603 6 130 2 131 2 361 2 610 2 890 2 897 2 374 2 143 2 145 2 147 2 381 4 150 2 619 6 624 4 906 6 628 2 391 2 635 2 913 8 915 2 397 2 640 4 165 6 917 2 400 6 170 6 641 4 643 2 174 24 176 10 409 2 649 6 413 2 933 2 935 4 190 2 422 6 659 52 941 2 194 4 943 2 430 2 197 2 947 2 434 12 953 2 201 2 673 2 440 2 441 8 677 2 676 6 962 2 445 4 446 2 688 8 447 12 691 16 222 4 693 2 976 4 226 2 695 4 457 2 231 10 458 12 696 6 466 2 984 2 467 6 242 2 241 2 469 2 470 2 247 4 715 6 474 2 252 2 
779 6 659 4 62 2 913 2 819 2 915 2 315 2 457 2 33 2 696 2 917 2 793 2 266 2 400 6 794 2 744 2 170 4 953 2 827 2 176 6 805 2 242 2 409 2 867 2 381 4 150 2 935 2 595 2 871 2 838 4 810 2 772 2 498 2 691 4 575 4 
356 8 0 2 123 2 130 2 131 2 266 2 744 2 890 2 745 2 896 2 897 2 150 2 763 6 772 2 498 2 908 2 779 6 780 2 158 3 635 2 913 2 915 2 287 4 640 4 33 2 917 2 793 2 513 6 400 6 794 2 170 2 174 24 176 6 805 2 43 2 409 2 527 2 935 2 808 2 810 2 531 2 814 2 659 28 941 2 304 2 61 3 62 2 819 2 945 2 315 2 947 2 66 6 953 2 827 2 673 2 74 2 440 2 441 2 76 4 679 2 967 2 838 4 445 3 573 2 691 4 575 4 843 4 845 2 222 3 693 2 226 2 95 2 457 2 696 2 338 2 853 2 340 2 103 6 105 2 107 4 348 2 242 2 591 2 867 2 871 2 595 2 873 2 875 4 252 2 
794 2 393 2 867 2 
794 2 393 2 867 2 
356 2 0 6 123 2 728 2 3 2 130 2 131 2 266 4 744 2 890 2 897 2 374 4 145 2 147 2 381 4 763 6 624 4 498 4 779 12 156 2 30 2 393 2 635 2 913 4 786 2 287 4 507 2 640 4 792 2 513 2 400 6 796 2 794 6 170 6 641 2 642 2 39 4 643 2 174 16 176 12 43 2 182 2 527 2 808 2 935 2 810 2 531 2 814 2 191 2 659 24 941 2 942 2 194 4 61 2 817 2 819 2 315 2 947 2 557 2 66 2 953 2 826 2 827 2 321 4 673 2 440 2 74 2 441 2 76 4 676 2 970 2 838 4 330 2 573 2 575 4 691 16 693 2 976 2 226 2 695 4 580 4 231 4 696 4 338 2 853 2 340 2 697 2 103 6 104 2 465 2 107 4 466 4 345 2 347 4 242 4 591 2 867 4 247 4 873 2 474 2 875 4 251 4 997 2 252 2 
201 2 174 2 659 4 956 2 156 2 565 2 784 2 441 2 277 2 676 2 287 2 947 2 697 2 996 2 641 2 939 2 465 2 
356 2 0 6 123 2 728 2 3 4 130 2 131 2 266 4 744 2 890 2 897 2 374 4 145 2 898 2 147 2 381 4 763 6 624 4 498 4 779 12 156 2 30 2 393 2 635 2 913 4 786 2 287 2 507 2 640 4 792 2 399 2 513 2 400 6 794 6 170 6 642 2 39 4 643 2 174 16 176 12 43 2 527 2 808 2 935 2 810 2 812 2 531 2 190 2 814 2 659 24 941 2 194 4 61 4 817 2 819 2 315 2 947 2 557 2 66 2 953 2 826 2 827 2 321 4 673 2 440 2 74 2 76 4 676 2 970 2 838 4 330 2 573 2 575 4 691 16 693 2 976 4 226 2 695 4 580 4 231 4 696 4 338 2 853 2 340 2 697 2 103 6 104 2 465 2 237 2 107 4 587 2 466 4 345 2 347 4 242 4 591 2 867 4 247 4 873 2 474 2 875 4 251 4 997 2 252 2 
356 2 0 6 123 2 728 2 3 2 130 2 131 2 266 4 744 2 890 2 897 2 374 4 145 2 147 2 381 4 763 6 624 4 498 4 779 12 156 2 30 2 393 2 635 2 913 4 786 2 287 4 507 2 640 4 792 2 513 2 400 6 794 6 170 6 641 2 642 2 39 4 643 2 174 16 176 12 408 2 43 2 931 2 527 2 300 2 808 2 935 2 810 2 531 2 190 2 814 2 659 24 941 2 194 4 61 2 817 2 819 2 315 2 947 2 557 2 66 2 953 2 826 2 827 2 321 4 69 2 673 2 440 2 74 2 441 2 76 4 676 2 970 2 86 2 838 4 330 2 573 2 575 4 691 16 693 2 976 4 226 2 695 4 580 4 231 4 696 4 338 2 853 2 340 2 697 2 103 6 104 2 465 2 107 4 466 4 345 2 347 4 242 4 591 2 867 4 247 4 873 2 474 2 875 4 251 4 997 2 252 2 
629 2 54 2 123 2 659 6 192 2 630 2 543 2 482 2 640 2 853 2 103 2 341 2 233 2 272 2 954 2 436 2 747 2 174 2 107 2 925 2 406 1 346 2 325 2 43 2 653 1 934 2 185 2 531 2 573 2 421 2 
356 2 659 2 255 2 222 3 31 2 61 3 609 2 339 6 823 2 513 2 199 2 66 2 859 2 745 2 585 1 174 2 203 2 70 2 924 2 239 2 618 4 113 2 443 3 445 3 843 2 
174 2 356 2 924 2 255 2 70 2 659 2 203 2 222 2 239 2 31 2 61 2 609 2 618 4 339 6 113 2 443 2 823 2 513 2 199 2 445 2 66 2 859 2 745 2 843 2 
174 2 356 2 924 2 255 2 70 2 659 2 203 2 222 2 239 2 31 2 61 2 609 2 618 4 339 6 113 2 443 2 823 2 513 2 199 2 445 2 66 2 859 2 745 2 843 2 
356 2 659 10 56 2 726 4 258 2 58 3 60 6 260 2 359 4 61 3 313 2 547 2 196 2 737 2 134 2 199 2 368 4 745 2 438 3 19 2 383 2 900 2 840 2 842 2 90 2 28 2 222 3 451 2 455 3 167 5 511 4 797 4 171 2 174 4 798 2 590 2 246 2 420 2 250 4 188 4 
356 2 659 10 28 2 726 4 56 2 222 2 58 2 258 2 451 2 60 6 359 4 260 2 455 2 61 2 547 2 313 2 737 2 196 2 484 2 134 2 64 2 167 4 511 4 199 2 368 4 797 4 702 2 745 2 171 2 798 2 438 2 174 4 590 2 246 2 19 2 383 2 900 2 250 4 420 2 840 2 188 4 842 2 90 2 
356 2 659 10 28 2 726 4 56 2 222 2 58 2 258 2 451 2 60 6 359 4 260 2 455 2 61 2 547 2 313 2 737 2 196 2 484 2 134 2 64 2 167 4 511 4 199 2 368 4 797 4 702 2 745 2 171 2 798 2 438 2 174 4 590 2 246 2 19 2 383 2 900 2 250 4 420 2 840 2 188 4 842 2 90 2 
356 2 659 10 28 2 726 4 56 2 222 2 58 2 258 2 451 2 60 6 359 4 260 2 455 2 61 2 547 2 313 2 737 2 196 2 484 2 134 2 64 2 167 4 511 4 199 2 368 4 797 4 702 2 745 2 171 2 798 2 438 2 174 4 590 2 246 2 19 2 383 2 900 2 250 4 420 2 840 2 188 4 842 2 90 2 
356 2 659 10 28 2 726 4 56 2 222 2 58 2 258 2 451 2 60 6 359 4 260 2 455 2 61 2 547 2 313 2 737 2 196 2 484 4 134 2 64 4 167 4 511 4 199 2 368 4 797 4 702 4 745 2 171 2 798 2 438 2 174 4 590 2 246 2 19 2 383 2 900 2 250 4 420 2 840 2 188 4 842 2 90 2 
491 2 305 2 555 2 75 2 874 2 132 2 528 2 
759 2 571 2 555 2 265 2 811 2 282 2 
124 1 659 10 540 2 479 1 741 2 889 2 892 2 371 2 293 2 174 8 15 2 674 1 520 2 985 1 521 2 468 2 830 2 758 2 301 2 808 2 117 2 771 2 718 2 773 1 447 2 778 2 
28 2 424 2 726 4 503 2 646 2 313 2 326 4 737 2 167 5 152 2 267 2 900 2 420 2 842 2 171 2 
332 2 71 2 57 2 359 2 311 2 760 3 20 2 855 2 214 2 769 2 250 2 188 2 53 2 
174 1 332 2 659 1 71 2 57 4 359 2 664 2 311 2 760 6 20 2 415 2 855 2 214 2 769 2 250 2 860 1 188 2 53 2 
332 2 71 2 57 4 359 2 664 2 311 4 760 6 415 2 20 4 855 2 214 2 769 2 250 2 188 2 53 4 
174 1 332 2 659 1 71 2 57 4 359 2 664 6 311 8 760 10 415 8 20 8 855 2 214 2 769 2 250 2 860 1 188 2 53 8 
659 6 362 1 554 2 897 2 276 2 683 1 385 1 903 2 573 2 155 2 640 2 853 2 979 2 103 4 174 6 107 2 591 2 244 2 531 2 
174 6 107 2 155 2 659 6 276 2 244 2 554 2 640 2 762 2 853 2 979 2 103 2 385 2 531 2 573 2 
174 6 107 2 155 2 659 6 806 2 276 2 244 2 554 2 640 2 853 2 979 2 103 2 385 2 531 2 573 2 
897 2 174 6 107 2 155 2 659 6 806 2 591 2 276 2 244 2 554 2 640 2 853 2 979 2 103 4 531 2 573 2 
127 2 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V ERROR java.lang.NullPointerException (946,1125) 
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V FAILED junit.framework.ComparisonFailure 
daikon.test.diff.XorVisitorTester:testXor()V FAILED junit.framework.ComparisonFailure 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 289 711 720 695 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Debug:logDetail()Z
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.ProglangType:isScalar()Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ProglangType:isIntegral()Z
daikon.diff.RootNode:RootNode()V
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.diff.Node:Node()V
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.MathMDE:mod_positive(II)I
daikon.Quantify.ESCQuantification:get_quantification()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:enabled()Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.inv.Invariant:prob_and(DDD)D
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
jtb.JavaParser:jj_3R_49()Z
daikon.inv.unary.scalar.NonZero:is_pointer()Z
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.Quant:subsetOf([D[D)Z
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.VarInfo:isIOAArray()Z
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.VarInfo:apply_subscript(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.Quant:eltwiseLTE([I)Z
daikon.Quant:eq(DD)Z
daikon.Quant:noDups([I)Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.inv.unary.sequence.EltOneOf:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.Quantify.QuantFlags:adjacent()Ljava.util.EnumSet;
daikon.PptMap:asCollection()Ljava.util.Collection;
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.Quant:eltsGT([II)Z
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:element_range([I)I
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:lexNotEqual([I[I)Z
utilMDE.ArraysMDE:noDuplicates([I)Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;Ldaikon.VarInfo;)V
daikon.Quant:isReverse([I[I)Z
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.EltNonZero:format_ioa()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
utilMDE.LimitedSizeIntSet:size()I
daikon.Quant:eltsGteIndex([I)Z
daikon.Quant:memberOf(D[F)Z
daikon.Quantify.ESCQuantification:get_arr_vars_indexed(I)Ljava.lang.String;
daikon.Quant:memberOf(F[D)Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
jtb.JavaParser:jj_ntk()I
daikon.Quant:lte(II)Z
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.inv.Invariant:getConfidence()D
daikon.PptSlice2:arity()I
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE:negate(I)I
daikon.Ppt:find_var_by_name(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.Quant:gte(II)Z
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eq(II)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:sum([D)D
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
utilMDE.FuzzyFloat:ne(DD)Z
daikon.inv.unary.sequence.NoDuplicates:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:concat([I[I)[I
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.inv.unary.sequence.EltNonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:format_esc()Ljava.lang.String;
daikon.Ppt:Ppt()V
jtb.JavaParser:jj_3R_85()Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_134()Z
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:pairwiseSquare([I[I)Z
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:pairwiseDivides([I[I)Z
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.inv.unary.sequence.NoDuplicates:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:sort_rep()V
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:eltwiseGTE([I)Z
jtb.JavaParser:generateParseException()Ljtb.ParseException;
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.inv.Invariant:prob_or(DD)D
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.Quant:sameLength([I[I)Z
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.MathMDE:mod_positive(JJ)J
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Invariants:Invariants()V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.ProglangType:base()Ljava.lang.String;
daikon.Quantify.SimplifyQuantification:get_quantification()Ljava.lang.String;
jtb.JavaParser:jj_3R_133()Z
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:EltwiseIntLessThan(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.inv.unary.UpperBoundCore:calc_modulus()J
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName:isLiteralConstant()Z
daikon.Quant:eltwiseGT([I)Z
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.inv.ValueSet:ValueSet(I)V
daikon.inv.unary.sequence.EltOneOf:is_hashcode()Z
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.Quantify.IOAQuantification:getFreeVarName(I)Ljava.lang.String;
daikon.Quant:eltsEqualIndex([I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.Quantify.IOAQuantification:getClosingExp()Ljava.lang.String;
jtb.JavaParser:jj_3R_50()Z
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
daikon.Quant:pairwiseGT([I[I)Z
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:max([I)I
daikon.VarInfo:get_enclosing_var()Ldaikon.VarInfo;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.EltwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.inv.unary.sequence.EltOneOf:is_boolean()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
utilMDE.FuzzyFloat:FuzzyFloat()V
jtb.JavaParser:jj_3R_58()Z
utilMDE.ArraysMDE:sum([[I)I
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.Quant:pairwiseEqual([I[I)Z
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.VarInfo:old_var_names(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3_1()Z
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.Quant:eltwiseEqual([I)Z
daikon.ProglangType:dimensions()I
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String;
daikon.VarInfo:get_array_var()Ldaikon.VarInfo;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.Quantify.QuantifyReturn:QuantifyReturn(Ldaikon.VarInfo;)V
daikon.VarInfo:simplify_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_57()Z
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.VarInfo:isDerived()Z
daikon.Quant:eltsLtIndex([I)Z
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
utilMDE.FuzzyFloat:lt(DD)Z
daikon.inv.unary.sequence.EltUpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quantify:get_flags(Z)Ljava.util.EnumSet;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.Quantify.ESCQuantification:ESCQuantification(Ljava.util.EnumSet;[Ldaikon.VarInfo;)V
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.Quant:eltsGtIndex([I)Z
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.inv.Invariant:isWorthPrinting()Z
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.inv.unary.sequence.EltOneOf:format_daikon()Ljava.lang.String;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltNonZero:is_pointer()Z
daikon.inv.unary.sequence.NoDuplicates:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
utilMDE.Intern:intern([I)[I
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:get_lower_bound()Ldaikon.Quantify.Term;
utilMDE.ArraysMDE:min_max([I)[I
daikon.Quantify.Term:esc_name()Ljava.lang.String;
daikon.VarInfo:isPrestate()Z
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.Quant:subsetOf([I[I)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I | CONDITION | 16534 | if (x) -> if (!x)
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakHasherMap:size()I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.inv.filter.InvariantFilter:InvariantFilter()V
utilMDE.ArraysMDE:min([I)I
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_2_1(I)Z
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
utilMDE.Options.OptionInfo:argument_required()Z
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
jtb.ParseException:ParseException(Ljava.lang.String;)V
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfo:simplify_name()Ljava.lang.String;
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltNonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quantify.SimplifyQuantification:SimplifyQuantification(Ljava.util.EnumSet;[Ldaikon.VarInfo;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_daikon()Ljava.lang.String;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:jml_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarComparabilityImplicit:alwaysComparable()Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.Quant:lexLT([I[I)Z
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.inv.Invariant:logDetail()Z
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:subsetOf([B[I)Z
daikon.Quant:subsetOf([F[D)Z
utilMDE.MathMDE:sign(I)I
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.OrderedPairIterator:setnext1()V
daikon.inv.unary.sequence.EltOneOf:subarray_rep()Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:concat([I[I)[I
daikon.Quant:lexEqual([I[I)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.MathMDE:pow(II)I
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
utilMDE.Intern:internSubsequence([III)[I | ASSIGN | 23040 | = null
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.inv.unary.sequence.EltOneOf:EltOneOf(Ldaikon.PptSlice;)V
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.inv.unary.sequence.EltUpperBound:format_daikon()Ljava.lang.String;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.Quant:gt(II)Z
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eq(FF)Z
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.Ppt:indexOf(Ljava.lang.String;)I
utilMDE.MathMDE:gcd([I)I
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.VarInfo:esc_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
utilMDE.FuzzyFloat:gte(DD)Z
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_48()Z
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.inv.unary.sequence.EltOneOf:format_simplify()Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.PptSlice1:num_samples()I
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltOneOf:format_esc()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
utilMDE.Assert:assertTrue(Z)V
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eltsLT([II)Z
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.PptName:PptName(Ljava.lang.String;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
jtb.JavaParser:jj_3R_55()Z
jtb.JavaParser:jj_3_16()Z
daikon.inv.unary.sequence.EltLowerBound:format_simplify()Ljava.lang.String;
utilMDE.ArraysMDE:subarray([III)[I
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfo:name()Ljava.lang.String;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.unary.sequence.EltwiseIntLessThan:format_ioa()Ljava.lang.String;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
utilMDE.OrderedPairIterator:setnext2()V
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
utilMDE.ArraysMDE:sum([[D)D
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.Quantify.Constant:name()Ljava.lang.String;
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.FuzzyFloat:isSubset([D[D)Z
utilMDE.LimitedSizeIntSet:add(I)V
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.Quantify.Constant:Constant(I)V
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.Quant:setDiff([I[I)[I
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
jtb.ParseException:getMessage()Ljava.lang.String;
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:eq(DD)Z
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.ModBitTracker:split(I)I
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.Token:newToken(I)Ljtb.Token;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.VarInfo:domainTypeIOA()Ljava.lang.String;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
jtb.JavaCharStream:getBeginLine()I
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
utilMDE.FuzzyFloat:gt(DD)Z
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.NoDuplicates:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | RETURN | 2178 | return null
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.Quant:subsetOf([D[F)Z
jtb.JavaParser:jj_3R_54()Z
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.VarInfoName:name()Ljava.lang.String;
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.inv.unary.sequence.EltNonZero:enabled()Z
daikon.PptSlice0:initInvariantsSeen()V
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
jtb.JavaCharStream:backup(I)V
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.VarInfo:relate_var()V
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.PptName:isEnterPoint()Z
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:setEqual([I[I)Z
daikon.VarInfoName:simplify_name()Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.EltUpperBound:enabled()Z
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.Quantify.Length:simplify_name()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.Quant:slice([III)[I
daikon.inv.Invariant:logOn()Z
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V
jtb.JavaParser:jj_3R_135()Z
jtb.JavaParser:jj_3R_56()Z
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.inv.unary.sequence.EltUpperBound:format_esc()Ljava.lang.String;
daikon.ValueTuple:isMissing(I)Z
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.NoDuplicates:enabled()Z
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.Simple:isLiteralConstant()Z
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.Quantify.Term:name_with_offset(Ljava.lang.String;I)Ljava.lang.String;
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.inv.unary.sequence.EltUpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.PrintAllVisitor:bufPrintln()V
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.test.InvariantFormatTester:execute()Z
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.inv.Invariant:justified()Z
daikon.VarInfo:is_direct_non_slice_array()Z
utilMDE.Intern:numIntArrays()I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
jtb.JavaParser:jj_3R_47()Z
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.FormatTestCase:passes()Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.Quant:lexGTE([I[I)Z
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltNonZero:EltNonZero(Ldaikon.PptSlice;)V
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.inv.unary.sequence.NoDuplicates:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Debug:logOn()Z
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
utilMDE.ArraysMDE:sum([I)I
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltOneOf:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoAux:hashCode()I
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.WeakHasherMap:processQueue()V
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
jtb.JavaCharStream:FillBuff()V
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.NoDuplicates:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.VarInfo:simplify_quantify(Ljava.util.EnumSet;[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltsNotEqualIndex([I)Z
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.Quant:subsetOf([J[J)Z
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_162()Z
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.Quant:union([I[I)[I
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.diff.Node:children()Ljava.util.Iterator;
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.Quantify.SimplifyQuantification:get_closer()Ljava.lang.String;
utilMDE.MathMDE:gcd(II)I
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.inv.unary.sequence.EltwiseIntComparison:EltwiseIntComparison(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
jtb.JavaCharStream:getBeginColumn()I
daikon.Quant:pairwiseLTE([I[I)Z
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_simplify()Ljava.lang.String;
daikon.diff.Node:Node(LutilMDE.Pair;)V
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
daikon.VarInfoName:repr()Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.Quant:memberOf(F[F)Z
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_test(I)V
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.VarInfo:get_base_array()Ldaikon.VarInfo;
utilMDE.FuzzyFloat:lte(DD)Z
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ModBitTracker:ModBitTracker(I)V
daikon.ModBitTracker:num_vars()I
daikon.Quantify.Term:ioa_name()Ljava.lang.String;
daikon.Quant:eq(JJ)Z
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:memberOf(J[J)Z
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.Quantify.IOAQuantification:getFreeVar(I)Ldaikon.Quantify.Term;
daikon.Quant:eltwiseLT([I)Z
daikon.VarInfo:new_ppt()V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
utilMDE.MathMDE:missing_numbers([I)[I
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.ArraysMDE:indexOf([II)I
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.Quant:eltsLteIndex([I)Z
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.diff.Node:add(Ljava.lang.Object;)V
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.inv.unary.sequence.EltOneOf:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:fn_is_total([I)Z
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.ProglangType:baseIsFloat()Z
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.inv.unary.sequence.EltNonZero:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.inv.unary.sequence.EltUpperBound:format_ioa()Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
jtb.JavaParser:jj_scan_token(I)Z
daikon.Quantify.Length:Length(Ldaikon.VarInfo;I)V
daikon.inv.OutputFormat:toString()Ljava.lang.String;
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.Intern:intern([D)[D
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:format_ioa()Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.Quantify.IOAQuantification:IOAQuantification([Ldaikon.VarInfo;)V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.EltUpperBound:format_simplify()Ljava.lang.String;
jtb.JavaCharStream:readChar()C
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.Quantify.FreeVar:name()Ljava.lang.String;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:pow_fast(II)I
daikon.VarInfo:get_base_array_hashcode()Ldaikon.VarInfo;
jtb.JavaParser:jj_3R_53()Z
utilMDE.MathMDE:gcd_differences([I)I
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.Quantify.ESCQuantification:bld_quant(Ldaikon.VarInfo;Ldaikon.Quantify.Term;)Ljava.lang.String;
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.ProglangType:baseIsIntegral()Z
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.Quant:eltsNotEqual([II)Z
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_esc()Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptSlice1:arity()I
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:isSubarray([I[II)Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
utilMDE.FuzzyFloat:indexOf([D[D)I
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V | ASSIGN | 956 | = null
daikon.Quant:ne(II)Z
jtb.JavaCharStream:BeginToken()C
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_51()Z
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([ZZ)I
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.VarInfoName:hashCode()I
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:lexGT([I[I)Z
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.Quant:memberOf(S[S)Z
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.inv.Invariant:format()Ljava.lang.String;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.MathMDE:modulus([I)[I
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.ProglangType:baseIsScalar()Z
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant:prob_and(DD)D
utilMDE.OrderedPairIterator:hasNext()Z
daikon.Quant:eltsGTE([II)Z
daikon.inv.unary.sequence.EltNonZero:format_daikon()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.ProglangType:isFloat()Z
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
utilMDE.ArraysMDE:sorted([I)Z
daikon.Quantify.IOAQuantification:getQuantifierExp()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.config.Configuration:apply(Ljava.lang.String;)V
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
utilMDE.MathMDE:gcd(JJ)J
daikon.VarInfo:get_all_simple_names()Ljava.util.List;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.inv.unary.sequence.EltNonZero:format_simplify()Ljava.lang.String;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.Quant:pairwiseLT([I[I)Z
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.PptSlice0.ImplicationWrapper:hashCode()I
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaCharStream:getEndLine()I
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:NoDuplicates(Ldaikon.PptSlice;)V
daikon.inv.unary.UpperBoundCore:wouldChange(J)Z
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.Quant:subsetOf([F[F)Z
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.Quantify.IOAQuantification:getMembershipRestriction(I)Ljava.lang.String;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.ProglangType:isPointerFileRep()Z
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.ModBitTracker:num_sets()I
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_2_16(I)Z
daikon.Quantify:quantify([Ldaikon.VarInfo;)[Ldaikon.Quantify.QuantifyReturn;
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.Quant:eltsLTE([II)Z
daikon.ValueTuple:isMissingFlow(I)Z
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.Quantify.SimplifyQuantification:get_arr_vars_indexed(I)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:lt(II)Z
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.inv.unary.sequence.EltOneOf:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:enabled()Z
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.PptName:isCombinedExitPoint()Z
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.PptTopLevel:name()Ljava.lang.String;
jtb.JavaParser:jj_3R_52()Z
daikon.Quant:subsetOf([S[S)Z
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.Quantify.IOAQuantification:getVarIndexedString(I)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:get_proto()Ldaikon.inv.Invariant;
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.Quant:eltsEqual([II)Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
utilMDE.Intern:intern([J)[J
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.ProglangType:isArray()Z
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_161()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.Quant:eltwiseNotEqual([I)Z
daikon.inv.unary.scalar.Positive:enabled()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.Quant:lexLTE([I[I)Z
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.VarInfo:isPointer()Z
daikon.ValueTuple:size()I
daikon.ModBitTracker:num_samples()I
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V | STATEMENT | 972 | stmt -> ;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.diff.InvMap:InvMap()V
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltUpperBound:EltUpperBound(Ldaikon.PptSlice;)V
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.inv.unary.sequence.EltOneOf:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quantify.FreeVar:simplify_name()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.inv.unary.sequence.EltOneOf:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfo:get_upper_bound()Ldaikon.Quantify.Term;
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
utilMDE.FuzzyFloat:indexOf([DD)I
jtb.JavaParser:jj_3R_163()Z
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.ProglangType:isPseudoArray()Z
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:memberOf(I[I)Z
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.Quant:intersection([I[I)[I
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.PptSlice0:arity()I
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.Quantify.Length:esc_name()Ljava.lang.String;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaCharStream:getEndColumn()I
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.Quantify.Term:simplify_name()Ljava.lang.String;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.VarInfoName.NodeFinder:inPre()Z
jtb.JavaCharStream:ReadByte()C
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
884 2 105 4 640 2 493 2 535 2 575 2 160 2 151 2 805 2 
992 2 758 6 1104 2 35 2 523 6 118 2 866 2 39 2 834 2 797 2 418 6 
173 4 412 2 490 2 493 2 867 6 497 6 558 2 160 2 846 4 442 2 287 6 583 2 168 6 
859 10 435 2 903 4 160 4 946 2 1028 2 53 4 584 6 100 2 14 6 916 2 873 4 1005 4 493 4 337 6 499 4 456 2 740 2 77 6 507 4 344 4 746 4 185 6 636 4 309 12 
20 6 1107 4 
438 2 
859 4 356 2 903 2 1091 2 164 2 53 2 406 2 584 4 14 2 873 2 18 2 1005 2 1099 2 694 2 24 2 699 2 337 2 740 2 77 2 344 2 746 2 185 2 309 6 
1005 4 859 12 432 6 574 4 29 6 903 4 113 2 337 8 77 8 966 2 53 4 746 4 185 5 916 2 14 8 855 4 309 14 
672 4 792 2 470 2 556 4 796 2 716 2 868 4 158 4 983 2 1132 62 986 2 527 10 827 8 363 2 909 2 947 4 1136 4 724 2 130 2 912 4 12 2 484 4 15 14 331 2 778 10 228 4 625 2 843 2 1149 4 416 2 781 2 79 4 968 2 347 4 36 6 599 4 462 2 511 2 426 2 468 2 
434 2 795 2 379 2 438 2 675 2 1026 2 685 2 450 2 86 2 567 2 
1125 2 759 2 160 4 985 2 763 2 827 2 1056 2 320 2 166 2 253 2 999 2 691 2 1008 2 175 4 493 4 347 4 272 2 854 4 520 2 279 2 359 2 528 2 946 2 211 4 530 2 801 2 50 2 367 2 952 2 132 2 374 2 954 2 877 2 141 2 735 2 69 2 595 2 885 2 79 2 968 2 969 2 820 2 85 2 151 2 
859 48 432 6 822 8 355 2 358 2 903 16 980 6 160 4 1135 2 53 16 950 6 584 6 772 2 14 32 1177 6 873 18 618 4 1005 16 23 4 1007 2 623 6 493 4 1105 4 574 4 29 6 231 2 337 32 74 6 740 2 77 32 848 4 508 4 344 4 746 16 185 22 710 2 893 4 309 53 855 4 
331 2 36 2 827 2 
469 2 579 2 311 2 812 2 316 2 339 2 562 22 143 10 948 2 460 2 534 2 132 2 512 2 1158 2 
153 6 1049 32 604 2 472 2 896 1 2 3 475 24 1050 2 4 2 3 2 155 2 477 2 901 1 159 8 318 2 904 2 479 2 160 34 7 16 480 2 612 3 613 2 1058 6 773 1 917 6 487 2 918 2 1065 2 622 1 493 32 624 1 1066 2 335 2 925 2 179 1 498 8 927 2 929 1 502 2 930 32 630 2 509 12 637 2 352 2 196 2 1083 2 942 1 45 2 360 3 207 2 362 3 945 4 800 6 365 2 217 4 951 2 370 2 218 2 1094 3 55 1 372 2 653 2 1095 24 953 1 60 2 1098 1 540 2 659 2 815 2 70 2 73 2 235 2 76 2 1111 16 967 2 80 2 82 4 550 1 553 2 552 3 970 4 390 4 243 2 673 2 395 2 396 2 825 4 977 2 397 3 398 2 984 2 981 3 828 2 251 2 989 16 683 2 831 2 832 2 998 2 255 2 103 2 257 2 1004 2 411 2 261 2 842 3 1010 2 1148 1 700 2 702 8 575 2 417 2 268 2 707 1 425 2 1017 2 577 2 430 1 857 2 1161 4 714 2 862 2 280 2 1023 2 126 2 582 2 1165 2 1166 2 1027 2 872 2 1172 2 729 2 733 4 734 2 1034 2 876 3 592 5 1036 2 741 2 744 2 1187 2 307 2 747 3 467 16 750 1 752 3 1191 2 
202 2 
1073 2 160 2 
991 2 160 4 19 2 
473 2 154 2 607 22 761 2 900 74 1052 2 482 2 766 2 768 2 911 2 1059 4 326 4 329 8 21 2 171 2 621 10 177 10 180 2 627 2 500 2 629 22 503 2 505 4 504 2 784 22 785 22 514 74 516 2 791 4 191 2 354 6 198 4 793 2 940 26 201 8 1085 2 357 4 203 12 214 2 949 2 652 2 223 2 806 2 377 2 959 22 663 2 962 2 964 16 664 2 666 2 387 2 549 2 1114 2 240 2 551 10 821 4 388 10 392 4 554 2 246 2 89 2 976 10 559 2 403 6 1138 2 1141 2 996 2 566 2 569 22 1144 2 570 14 573 22 264 2 701 2 1011 2 271 2 116 10 849 2 853 4 1159 2 861 22 718 8 1025 14 444 2 1029 22 290 2 451 10 588 2 1179 22 590 16 139 2 1035 24 736 8 302 2 148 22 1189 74 748 2 889 32 1046 16 892 2 602 16 
383 2 138 2 270 1 208 2 
138 2 762 2 
610 2 147 2 423 2 827 2 
610 2 147 2 771 2 423 2 827 2 670 2 
610 2 1167 2 138 2 507 2 548 2 827 2 
85 2 59 2 
610 2 507 2 660 2 827 2 
117 2 68 2 
1070 2 993 2 
136 2 496 2 
1063 2 452 2 
1070 2 407 2 452 2 
1070 2 452 2 1119 2 
973 2 1070 2 452 2 
1070 2 719 2 452 2 
827 2 610 2 1030 6 1062 6 453 2 64 2 572 2 928 2 
958 2 576 2 
610 2 1167 2 138 2 507 2 1169 2 827 2 670 2 
1167 2 138 2 619 2 
1167 2 138 2 351 2 
88 2 958 2 208 2 
1167 2 138 2 
958 2 1103 2 
138 2 933 2 
958 2 281 2 208 2 
136 2 1022 2 208 2 
786 2 452 2 208 2 
117 2 250 2 208 2 
1070 2 1043 2 208 2 
958 2 292 2 
138 2 1116 2 
136 2 830 2 
57 2 452 2 
117 2 233 2 
1070 2 190 2 
958 2 239 2 
1070 2 106 2 
117 2 322 2 
856 2 452 2 
136 2 305 2 
958 2 424 2 281 2 208 2 
958 2 424 2 281 2 84 2 208 2 
958 2 184 2 208 2 
181 2 958 2 208 2 
176 2 1106 2 634 2 38 2 
107 2 109 2 414 2 823 2 1086 2 415 2 25 2 454 2 978 2 764 4 562 6 818 2 458 2 802 2 1041 2 1173 2 587 2 58 4 
875 2 208 2 
872 2 
153 6 1049 4 604 2 1050 2 3 6 6 2 160 26 7 6 613 2 1058 2 917 2 918 2 22 2 493 26 624 2 335 2 178 2 925 2 502 2 930 6 509 8 787 2 939 2 45 2 945 4 800 4 365 2 217 4 218 2 653 2 226 2 541 2 815 2 71 2 73 2 235 2 1110 4 82 2 1113 2 241 2 970 4 825 2 984 2 251 2 831 2 1139 2 832 2 998 2 255 4 1004 2 411 2 111 2 262 2 700 2 702 2 575 2 268 2 430 2 1161 4 1020 2 714 2 862 2 280 2 127 2 1027 2 1172 2 447 2 729 2 733 2 1034 2 1187 2 744 2 1039 4 307 2 
153 6 1049 4 604 2 1050 2 3 6 160 26 7 6 613 2 1058 2 917 2 918 2 22 2 493 26 624 2 335 2 178 2 925 2 502 2 930 6 509 8 787 2 939 2 45 2 945 4 800 6 365 2 217 4 218 2 653 2 1097 2 540 2 226 2 541 2 815 2 71 2 73 2 235 2 1110 4 82 2 241 2 970 4 243 2 825 2 977 2 984 2 251 2 831 2 1139 2 832 2 998 2 255 4 1004 2 411 2 1145 2 111 2 262 2 700 2 702 2 575 2 268 2 430 2 1161 4 1020 2 714 2 862 2 280 2 127 2 1027 2 1172 2 449 2 729 2 733 2 1034 2 1187 2 744 2 1039 4 307 2 
81 2 
95 2 923 2 
756 2 153 4 471 4 758 6 156 2 93 2 401 2 160 12 1133 2 1134 2 481 2 8 4 992 4 10 4 769 2 770 2 615 2 775 4 834 4 835 8 486 2 258 2 776 2 493 6 335 2 925 2 27 2 502 2 418 6 1013 2 343 2 37 2 39 2 790 4 431 2 639 2 1161 2 1081 2 1084 10 860 4 436 2 717 2 523 6 866 2 361 2 365 2 217 2 368 2 1172 2 66 2 874 2 298 2 815 2 546 2 72 8 73 2 886 2 75 2 667 2 971 2 
756 2 153 4 471 4 758 8 156 2 93 2 401 2 160 12 1134 2 1133 2 481 2 8 4 992 4 10 4 769 2 770 2 321 2 775 4 834 4 835 8 486 2 258 2 776 2 493 6 335 2 925 2 27 2 502 2 418 6 1013 2 343 2 37 2 39 2 790 4 431 2 639 2 1161 2 1084 10 860 4 436 2 717 2 523 8 866 2 361 2 365 2 217 2 1172 2 368 2 1175 2 66 2 874 2 298 2 1104 2 815 2 546 2 72 8 73 2 886 2 75 2 463 4 667 2 971 2 
66 2 874 2 436 2 717 2 523 2 93 2 1134 2 1133 2 418 2 8 4 1013 2 992 2 10 4 37 2 775 2 667 2 834 2 258 2 
756 2 153 4 471 4 758 6 156 2 93 2 401 2 160 12 1133 2 1134 2 481 2 8 4 992 4 10 4 769 2 770 2 615 2 775 4 834 4 835 4 486 2 258 2 776 2 493 6 335 2 925 2 27 2 502 2 418 4 1013 2 343 2 37 2 39 2 790 4 431 2 639 2 1161 2 1081 2 1084 6 860 4 436 2 717 2 523 6 361 2 365 2 217 2 368 2 1172 2 66 2 874 2 298 2 1104 2 815 2 546 2 72 4 73 2 886 2 75 2 667 2 971 2 
756 2 153 4 471 4 758 6 156 2 93 2 401 2 160 12 1133 2 1134 2 481 2 8 4 992 4 10 4 769 2 770 2 615 2 775 4 834 4 835 4 486 2 258 2 776 2 493 6 335 2 925 2 27 2 502 2 418 6 1013 2 343 2 37 2 118 2 39 2 790 4 431 2 639 2 1161 2 1081 2 1084 6 860 4 436 2 717 2 523 4 361 2 365 2 217 2 368 2 1172 2 66 2 874 2 298 2 815 2 546 2 72 4 73 2 886 2 75 2 667 2 971 2 
756 2 153 4 471 4 758 6 156 2 93 2 401 2 160 12 1133 2 1134 2 481 2 8 4 992 4 10 4 769 2 770 2 615 2 775 4 834 4 835 8 486 2 258 2 776 2 493 6 335 2 925 2 27 2 502 2 418 6 1013 2 343 2 37 2 39 2 790 4 431 2 639 2 1161 2 1081 2 1084 6 860 4 436 2 717 2 523 6 866 2 361 2 365 2 217 2 368 2 1172 2 66 2 874 2 298 2 815 2 546 2 72 4 73 2 886 2 75 2 667 2 971 2 
756 2 153 4 471 4 758 8 156 2 93 2 401 2 160 12 1133 2 1134 2 481 2 8 4 992 4 10 4 769 2 770 2 615 2 775 4 834 4 835 8 486 2 258 2 776 2 493 6 335 2 925 2 27 2 502 2 418 8 1013 2 343 2 37 2 118 2 39 2 790 4 431 2 639 2 1161 2 1081 2 1084 10 860 4 436 2 717 2 523 6 866 2 361 2 365 2 217 2 368 2 1172 2 66 2 874 2 298 2 815 2 546 2 72 8 73 2 886 2 75 2 667 2 971 2 
756 2 153 4 471 4 758 6 156 2 93 2 401 2 160 12 1133 2 1134 2 481 2 8 4 992 4 10 4 769 2 770 2 615 2 775 4 834 4 835 8 486 2 258 2 776 2 493 6 335 2 925 2 27 2 502 2 418 6 1013 2 343 2 37 2 39 2 790 4 431 2 639 2 1161 2 1081 2 1084 10 860 4 436 2 717 2 523 6 866 2 361 2 365 2 217 2 368 2 1172 2 66 2 874 2 298 2 815 2 546 2 72 8 73 2 886 2 75 2 667 2 971 2 
1 2 3 6 606 7 7 6 8 4 10 4 613 2 615 2 917 2 324 2 918 2 335 2 925 2 27 2 30 1 926 2 338 1 31 2 930 8 343 2 34 2 37 2 39 4 934 1 43 2 639 2 939 4 44 2 941 2 641 6 45 2 644 2 361 4 945 4 365 2 366 7 368 2 956 1 66 2 661 10 73 2 75 2 963 2 82 2 667 2 970 4 971 2 93 2 401 2 984 2 991 6 992 4 98 2 998 2 409 2 411 2 1004 2 693 2 697 4 700 2 702 2 703 6 418 8 1013 2 118 4 431 2 1020 2 715 2 436 2 717 2 125 6 127 2 445 2 729 12 134 1 733 2 150 1 756 2 153 6 471 4 1049 2 758 12 1050 2 156 2 160 46 1054 2 481 2 769 2 770 4 1058 2 774 2 775 4 486 2 485 6 776 2 492 2 493 24 780 2 502 2 501 1 182 2 509 4 787 2 1073 6 790 8 1084 2 523 4 1088 1 202 6 206 2 209 2 800 6 217 4 540 2 808 2 229 2 815 2 546 2 235 2 1110 4 1120 2 243 2 244 6 555 2 824 2 825 2 560 1 251 2 1133 2 1134 2 561 2 831 2 252 4 832 2 834 4 835 2 258 2 836 6 840 2 263 6 845 8 575 2 267 2 268 2 269 6 1160 6 1161 4 860 6 862 2 282 6 870 6 1172 2 1181 6 874 2 298 2 882 6 596 2 886 2 1190 2 
756 2 153 6 1049 2 471 4 1 2 758 12 1050 2 3 6 156 2 160 48 1054 2 7 6 481 2 8 4 613 2 769 2 10 4 770 4 1058 2 615 2 775 4 774 2 917 2 324 2 485 6 486 2 776 2 918 2 492 2 493 26 335 2 27 2 925 2 780 2 926 2 31 2 502 2 182 2 930 8 343 2 34 2 509 8 1073 6 787 2 37 2 39 4 790 8 43 2 639 2 199 2 44 2 939 4 1084 2 941 2 641 6 523 8 202 6 45 2 644 2 206 2 361 4 209 2 945 4 800 6 365 2 217 4 368 2 808 2 540 2 66 2 229 2 661 10 815 2 546 2 73 2 235 2 963 2 1110 4 75 2 82 4 667 2 83 2 970 4 971 2 1120 2 243 2 244 6 555 2 824 2 825 4 93 2 984 2 401 2 561 2 1134 2 1133 2 251 2 991 6 992 4 831 2 98 2 832 2 252 4 998 2 255 2 834 4 409 2 835 6 836 6 258 2 1004 2 411 2 693 2 840 2 697 4 263 6 700 2 702 2 845 8 267 2 575 2 703 6 418 8 268 2 269 6 1013 2 1160 6 431 2 1161 4 1020 2 860 6 715 2 862 2 717 2 436 2 125 6 866 4 282 6 127 2 870 6 445 2 1172 2 729 12 1181 6 733 4 874 2 298 2 882 6 596 2 886 2 1190 2 
756 2 153 6 1049 2 471 4 1 2 758 12 1050 2 3 6 156 2 160 48 1054 2 7 6 481 2 8 4 613 2 769 2 10 4 770 4 1058 2 615 2 775 4 774 2 917 2 324 2 485 6 486 2 776 2 918 2 492 2 493 26 335 2 27 2 925 2 780 2 926 2 31 2 502 2 182 2 930 8 343 2 34 2 509 8 1073 6 787 2 37 2 39 4 790 8 43 2 639 2 199 2 44 2 939 4 1084 6 941 2 641 6 523 8 202 6 45 2 644 2 206 2 361 4 209 2 945 4 800 6 365 2 217 4 368 2 808 2 540 2 66 2 229 2 661 10 815 2 546 2 72 4 73 2 235 2 963 2 1110 4 75 2 82 4 667 2 83 2 970 4 971 2 1120 2 243 2 244 6 555 2 824 2 825 4 93 2 984 2 401 2 561 2 1134 2 1133 2 251 2 991 6 992 4 831 2 98 2 832 2 252 4 998 2 255 2 834 4 409 2 835 6 836 6 258 2 1004 2 411 2 693 2 840 2 697 4 263 6 700 2 702 2 845 8 267 2 575 2 703 6 268 2 418 8 269 6 1013 2 1160 6 431 2 1161 4 1020 2 860 6 715 2 862 2 717 2 436 2 125 6 866 4 282 6 127 2 870 6 445 2 1172 2 729 12 1181 6 733 4 874 2 298 2 882 6 596 2 886 2 1190 2 
1 2 3 8 7 8 8 4 10 4 613 2 615 2 917 4 324 2 918 2 335 2 27 2 925 2 626 2 926 2 31 2 930 12 931 2 343 2 34 2 37 2 39 4 43 2 639 2 939 4 44 2 941 2 641 6 45 2 644 2 361 4 945 4 365 2 368 2 61 2 657 2 66 2 661 8 73 2 72 4 963 2 75 2 82 4 667 2 83 2 970 4 971 2 93 2 401 2 984 2 991 12 992 4 98 2 998 2 409 2 411 2 1004 2 693 2 697 4 700 2 702 4 703 12 418 10 1013 2 118 2 431 2 1020 2 123 6 715 2 436 2 717 2 125 6 127 4 445 2 729 10 733 4 751 6 756 2 153 6 471 4 1049 4 758 16 1050 2 156 2 160 52 1054 2 481 2 769 2 770 4 1058 4 774 2 775 4 486 2 485 12 776 2 492 2 493 24 780 2 502 2 182 2 509 10 787 2 1073 12 790 8 199 2 1084 6 523 10 202 12 205 6 206 2 526 6 209 2 800 6 217 4 220 2 807 2 540 2 808 2 1104 2 229 2 815 2 230 6 546 2 235 2 234 6 1110 6 243 2 244 6 555 2 824 2 825 4 251 2 1133 2 1134 2 561 2 563 2 831 2 832 2 252 4 255 2 834 4 835 6 258 2 836 6 840 2 263 12 845 8 575 2 267 2 268 2 269 6 852 6 1160 6 1161 4 860 6 862 2 866 4 282 6 870 6 1172 2 1181 6 874 2 298 2 591 6 882 6 597 2 1186 6 596 2 886 2 1190 2 
431 2 471 2 1084 4 860 2 758 4 717 2 436 2 523 6 866 2 156 2 160 4 1134 2 1133 2 481 2 8 2 992 4 769 2 10 2 368 2 615 2 834 4 486 2 835 6 776 2 66 2 298 2 27 2 72 4 418 6 1013 2 343 2 37 2 39 2 971 2 790 2 
153 6 471 2 1049 3 758 4 1050 2 3 6 156 2 160 28 7 6 481 2 8 2 769 2 10 2 613 2 1058 3 615 2 917 3 486 2 776 2 489 2 918 2 493 24 335 2 925 2 27 2 502 2 930 8 343 2 787 2 37 2 39 2 790 2 939 2 1084 2 523 6 45 2 945 4 800 6 365 2 217 4 368 2 540 2 66 2 659 2 661 2 815 2 73 2 235 2 75 2 1110 4 970 4 971 2 1120 2 243 2 1133 2 251 2 1134 2 990 2 992 4 683 2 831 2 832 2 998 2 834 4 835 6 1004 2 411 2 700 2 575 2 418 6 268 2 1013 2 431 2 1161 4 1020 2 860 2 862 2 436 2 717 2 866 2 1166 2 872 2 1172 2 729 4 731 2 298 2 1185 3 146 2 465 2 
481 2 600 2 971 2 
481 2 600 2 971 2 
1047 2 153 6 757 2 1049 2 471 2 758 16 605 2 1050 2 3 2 315 2 478 2 160 24 7 2 481 4 8 2 613 2 10 2 769 2 770 2 775 4 486 2 918 2 492 2 493 16 26 2 335 2 925 2 502 2 930 2 34 2 345 4 509 4 787 2 39 4 515 2 790 4 939 6 1084 6 794 2 943 2 523 12 45 2 361 4 945 4 212 2 800 6 215 2 365 2 1093 2 217 4 540 2 1104 4 229 2 661 2 815 2 546 2 73 2 72 4 235 2 547 2 82 4 970 4 971 6 243 2 825 4 93 2 401 2 984 4 251 2 1134 4 1133 2 992 4 831 2 252 2 832 2 998 2 834 4 835 6 1004 2 411 2 110 2 697 2 262 4 700 2 575 2 268 2 418 12 1013 2 118 4 1016 4 1161 4 1020 2 860 4 125 2 866 4 1163 2 1172 2 729 4 296 2 733 4 874 2 1037 2 886 2 600 2 
923 2 794 2 493 2 697 2 661 2 125 2 5 2 315 2 160 4 209 2 963 2 565 2 1172 2 729 2 515 2 258 2 1003 2 
1047 2 153 6 757 2 471 2 1049 4 758 16 605 2 1050 2 3 2 478 2 160 20 7 2 481 4 611 2 8 2 613 2 10 2 769 2 165 2 770 4 775 4 486 2 918 2 492 2 493 14 26 2 335 2 925 2 502 2 930 2 34 2 345 4 509 4 787 2 39 4 515 2 790 4 639 2 939 6 1084 6 794 2 943 4 523 12 45 2 361 4 945 4 800 6 365 2 217 4 655 2 540 2 1104 4 229 2 815 2 546 2 73 2 72 4 235 2 547 2 82 4 1115 2 970 4 971 4 243 2 825 4 93 2 1130 2 401 2 984 4 251 2 1134 4 1133 2 992 4 831 2 252 2 832 2 998 2 834 4 835 6 1004 2 411 2 262 4 700 2 575 2 268 2 418 12 1013 2 118 4 1016 4 1161 4 1020 2 860 4 866 4 1163 2 1172 2 729 2 733 4 874 2 1037 2 886 2 600 2 
1047 2 153 6 757 2 1049 2 471 2 758 16 605 2 1050 2 3 2 315 2 478 2 160 24 7 2 481 4 8 2 613 2 10 2 769 2 770 4 775 4 486 2 918 2 492 2 922 2 493 16 26 2 335 2 925 2 502 2 930 2 34 2 345 4 509 4 787 2 39 4 515 2 790 4 639 2 939 6 1084 6 794 2 943 2 523 12 45 2 361 2 945 4 800 6 365 2 1093 2 217 4 540 2 957 2 1104 4 661 2 815 2 546 2 73 2 72 4 235 2 547 2 82 4 970 4 971 6 243 2 825 4 93 2 401 2 984 4 987 2 251 2 1134 4 1133 2 992 4 831 2 252 2 832 2 998 2 834 4 835 6 1004 2 411 2 697 2 262 4 700 2 575 2 268 2 418 12 1013 2 118 4 1016 4 712 2 1161 4 1020 2 860 4 125 2 866 4 1163 2 291 2 1172 2 729 4 733 4 874 2 1037 2 886 2 600 2 
603 2 3 14 7 14 613 2 11 46 14 8 16 8 17 2 22 2 624 2 626 2 28 2 40 10 42 8 638 2 43 2 45 4 645 2 647 1 47 2 48 2 53 4 648 2 650 2 654 2 657 2 656 10 63 2 658 2 65 2 67 2 662 8 71 2 73 2 77 8 78 2 665 2 671 4 672 2 87 2 91 2 676 2 679 3 678 8 682 2 681 2 97 10 96 2 98 2 687 8 689 4 102 2 692 2 108 8 695 2 111 24 698 2 702 30 704 2 706 2 115 2 711 2 119 2 120 2 720 2 127 46 128 2 129 2 723 3 725 2 131 2 729 2 730 6 731 2 732 2 137 4 142 10 737 2 144 2 146 2 742 2 743 4 746 4 149 2 152 2 753 2 755 10 153 6 160 64 161 2 162 2 163 18 767 2 774 4 777 10 170 2 178 2 182 2 782 3 185 6 787 2 186 2 187 10 189 2 789 2 193 24 799 2 800 14 213 6 217 4 219 68 220 2 803 2 221 10 222 10 225 3 807 2 226 2 227 10 811 18 815 2 235 4 817 32 236 8 238 14 819 2 241 2 243 6 245 10 248 8 247 16 251 4 829 8 831 2 254 2 256 2 838 6 259 8 841 2 266 18 267 2 847 2 268 2 850 2 273 2 855 4 274 2 859 12 862 2 283 2 868 2 285 2 286 2 289 2 871 2 293 18 294 2 873 4 295 18 297 24 299 20 878 2 880 4 301 2 300 8 883 2 304 74 887 2 890 18 891 6 309 16 310 2 895 2 312 2 897 10 314 8 899 2 902 48 903 4 905 24 317 8 906 2 908 2 907 22 910 18 913 8 914 2 915 2 917 34 327 18 918 2 330 2 921 8 334 2 335 2 925 2 337 8 336 2 930 44 931 2 340 3 342 2 341 8 932 2 346 18 348 16 349 28 936 2 939 2 358 2 944 2 945 6 365 2 950 6 369 2 375 2 376 4 380 2 386 2 970 6 391 36 393 2 974 22 399 10 400 2 979 2 984 6 402 18 990 2 989 8 404 100 994 2 998 2 997 4 408 2 1000 10 1001 2 1004 4 1005 4 1006 2 1007 4 419 2 420 2 1014 2 1015 20 427 2 1018 4 428 3 1019 2 430 2 432 6 433 18 1021 4 441 3 443 2 446 2 448 2 1032 3 1033 2 457 2 461 2 1044 8 466 38 1048 4 1049 34 474 2 1053 16 1058 16 484 2 483 2 1060 20 488 2 489 2 491 2 493 34 495 2 1067 10 502 2 1069 2 506 2 1071 2 509 92 510 2 1072 2 1075 2 513 2 1078 2 517 2 1080 2 519 2 522 6 521 2 1090 2 531 18 533 2 537 2 538 18 1101 2 540 6 1100 8 541 2 1102 28 1105 4 1108 74 1111 34 1110 12 1112 2 1117 2 1122 4 555 2 1126 2 557 2 1131 2 561 2 563 4 1136 2 1137 2 1139 2 1140 3 1142 2 568 2 571 10 1146 2 1149 2 575 4 1150 2 1151 10 1153 2 1156 18 1157 2 578 2 1161 4 1162 2 1164 4 1168 4 1172 2 585 4 1176 8 1180 2 1182 10 1183 2 594 2 1184 4 1185 2 597 2 
1049 2 0 2 862 2 3 2 160 2 127 6 7 2 681 2 97 2 1058 2 917 2 102 2 170 2 227 4 493 2 380 2 301 2 142 2 930 2 340 2 704 2 1110 2 119 2 189 2 
1049 2 0 2 862 2 3 2 160 2 127 6 7 2 681 2 97 2 1058 2 917 2 102 2 170 2 227 4 493 2 380 2 301 2 142 2 930 2 340 2 704 2 1110 2 119 2 189 2 
1049 2 0 2 862 2 3 2 160 2 127 6 7 2 681 2 97 2 1058 2 917 2 102 2 170 2 227 4 493 2 380 2 301 2 142 2 930 2 340 2 704 2 1110 2 119 2 189 2 
859 4 433 3 1049 3 248 2 862 2 903 2 1162 2 160 10 402 4 319 2 680 2 163 4 609 2 722 2 989 2 53 2 950 4 54 2 293 4 14 2 917 3 327 3 1005 2 493 4 378 3 879 2 1105 2 266 4 593 4 881 2 337 2 930 2 1108 6 704 2 1111 2 77 2 33 2 746 2 935 2 309 4 
859 4 433 2 1049 2 248 2 862 2 903 2 1162 2 160 10 402 4 319 2 680 2 163 4 609 2 722 2 989 2 53 2 950 4 54 2 293 4 14 2 917 2 873 2 327 2 1005 2 493 4 378 2 879 2 1105 2 266 4 593 4 881 2 231 2 337 2 930 2 1108 6 704 2 1111 2 77 2 33 2 746 2 185 2 935 2 309 4 
859 4 433 2 1049 2 248 2 862 2 903 2 1162 2 160 10 402 4 319 2 680 2 163 4 609 2 722 2 989 2 53 2 950 4 54 2 293 4 14 2 917 2 873 2 327 2 1005 2 493 4 378 2 879 2 1105 2 266 4 593 4 881 2 231 2 337 2 930 2 1108 6 704 2 1111 2 77 2 33 2 746 2 185 2 935 2 309 4 
859 4 433 2 1049 2 248 2 862 2 903 2 1162 2 160 10 402 4 319 2 680 2 163 4 609 2 722 2 989 2 53 2 950 4 54 2 293 4 14 2 917 2 873 2 327 2 1005 2 493 4 378 2 879 2 1105 2 266 4 593 4 881 2 231 2 337 2 930 2 1108 6 704 2 1111 2 77 2 33 2 746 2 185 2 935 2 309 4 
859 4 433 2 1049 2 248 2 862 2 903 2 1162 2 160 10 402 4 319 2 680 2 163 4 609 2 722 2 989 2 53 2 950 4 54 2 293 4 14 2 917 2 873 4 327 2 1005 2 493 4 378 2 879 2 1105 2 266 4 593 4 881 2 231 4 337 2 930 2 1108 6 704 2 1111 2 77 2 33 2 746 2 185 4 935 2 309 4 
705 2 260 2 995 2 111 2 1118 2 429 2 937 2 
1014 2 389 2 635 2 104 2 121 2 429 2 
1124 2 1127 2 713 1 124 2 157 2 677 2 160 10 982 2 1055 2 909 1 288 2 1057 2 564 2 56 1 920 1 1064 2 493 8 263 2 455 2 815 2 816 2 631 2 237 2 426 1 41 2 1123 2 
859 12 432 4 822 2 1021 2 279 2 903 6 985 2 160 6 53 6 950 4 772 1 133 2 14 6 1177 4 873 3 837 2 1005 6 841 2 493 6 1105 2 28 2 231 2 337 6 77 6 508 2 1040 2 746 6 185 5 1045 2 309 15 855 2 
353 2 518 2 542 2 493 1 1009 2 863 2 1051 2 381 2 160 1 402 2 163 2 384 1 405 2 293 2 651 7 1174 4 1192 2 62 2 
353 4 518 2 542 2 1009 2 863 2 1051 4 381 2 402 2 163 2 405 4 293 2 651 6 1174 4 1192 2 62 2 
353 8 518 2 542 2 493 1 1009 2 863 2 1051 8 381 6 160 1 402 2 163 2 384 1 405 8 293 2 651 10 1174 4 1192 8 62 2 
353 2 518 2 542 2 1009 2 863 2 1051 2 402 2 163 2 405 2 293 2 651 2 1174 2 62 2 
898 2 313 2 760 6 608 8 160 150 765 4 167 90 13 10 323 2 616 6 617 24 325 6 169 12 1061 24 620 4 919 92 779 50 174 24 493 134 494 6 628 10 1068 42 32 4 783 2 183 8 1077 4 350 2 188 12 1079 6 194 2 195 4 200 2 519 8 1087 124 642 4 45 8 1089 22 643 6 524 11 204 8 525 8 798 4 646 6 945 88 210 6 529 17 800 248 49 26 51 4 532 4 1092 10 536 24 373 5 1096 4 224 6 540 58 955 6 809 6 810 2 543 2 544 8 382 26 960 10 961 4 385 6 970 112 1121 4 669 4 242 90 972 42 243 58 394 6 1126 8 975 4 557 8 249 4 90 2 674 10 1129 4 251 14 988 6 684 16 686 2 833 2 688 6 690 2 1002 1 1004 14 839 6 413 4 1147 6 696 18 112 24 265 2 844 4 1012 10 422 2 1154 2 277 6 858 4 278 4 864 16 865 4 580 4 437 6 439 10 284 16 581 2 440 24 869 8 726 16 1170 6 727 2 586 8 1178 4 589 2 739 4 145 2 459 4 745 18 1188 6 306 6 749 36 464 6 1042 10 888 84 601 28 754 34 
243 3 894 2 1126 2 898 2 557 2 826 6 674 2 476 4 92 2 160 46 251 2 988 2 614 2 99 2 688 2 13 2 323 2 1061 2 410 2 1004 2 839 2 172 2 333 2 1147 2 493 44 924 2 265 2 1012 2 628 2 114 2 1152 4 632 2 421 2 633 2 1155 4 709 2 851 2 1074 2 1076 2 350 2 192 2 275 2 276 2 938 2 858 2 200 2 519 2 864 4 1087 6 45 2 204 2 439 2 525 6 284 4 440 2 646 4 1024 2 945 20 721 2 529 2 800 45 364 2 1092 2 216 2 1170 2 726 4 52 2 728 2 536 2 804 2 373 2 1031 2 224 2 539 2 135 4 540 3 543 2 545 2 814 2 960 2 1109 2 739 2 1038 2 965 2 598 2 745 2 749 2 1042 2 601 38 970 20 668 2 308 2 
898 2 313 2 760 4 160 78 9 4 614 10 616 4 325 4 169 14 328 16 919 24 779 8 174 8 332 2 493 70 494 4 1068 8 32 4 183 4 788 2 1076 2 1077 4 350 2 1079 4 197 16 1082 2 200 2 519 2 1087 24 45 2 525 6 798 4 646 2 46 2 945 36 210 4 529 10 800 104 51 4 1092 6 649 2 371 32 1096 4 224 4 539 2 540 28 955 4 809 4 810 2 543 2 544 4 813 4 545 10 960 4 232 4 961 2 1109 10 385 4 970 44 1121 4 972 16 243 30 394 4 1126 2 975 4 1128 8 557 2 674 4 1129 4 251 6 988 4 94 4 684 8 686 2 688 4 101 8 1143 8 1004 6 839 4 1147 4 265 2 1012 4 421 2 1154 2 708 2 864 10 865 4 580 4 437 4 284 10 726 10 1170 4 1171 4 1178 4 140 8 738 4 303 4 459 4 745 10 306 4 1188 4 749 6 888 24 1042 4 464 4 601 14 754 30 
243 12 1126 2 975 2 557 2 898 2 90 2 674 2 1129 2 160 28 251 2 988 4 684 6 688 4 690 2 323 2 620 2 1004 2 839 4 413 2 1147 4 493 26 265 2 1012 2 783 2 183 4 1076 2 350 2 519 2 200 2 864 6 1087 8 1089 10 45 2 524 2 581 2 525 4 284 6 646 2 869 2 945 14 529 2 800 40 1092 2 726 6 1170 4 727 2 728 2 373 2 224 4 540 12 543 2 960 2 961 2 745 2 749 2 1042 2 601 14 970 14 754 6 
122 2 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V FAILED junit.framework.AssertionFailedError (399,473) 
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V ERROR java.lang.NullPointerException 446 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.NullPointerException 420 184 110 
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.NullPointerException 248 67 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V ERROR java.lang.NullPointerException (395,435) (395,435) 
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V ERROR java.lang.NullPointerException 420 184 110 
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V ERROR java.lang.NullPointerException 420 184 110 
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NullPointerException 420 184 110 
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException 420 184 110 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NullPointerException 420 184 110 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 420 184 110 28 89 500 
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR utilMDE.Assert$AssertionException (49,438) (49,438) 305 297 104 23 363 
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.LimitedSizeIntSet:size()I
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:pairwiseLT([I[I)Z
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:lexLT([I[I)Z
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.inv.Invariant:prob_or(DD)D
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Invariant:prob_is_ge(DD)D
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:pairwiseSquare([I[I)Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
utilMDE.ArraysMDE:min([I)I
daikon.ModBitTracker:num_sets()I
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
utilMDE.FuzzyFloat:set_rel_diff(D)V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.inv.Invariant:prob_and(DD)D
daikon.Quant:eltsNotEqual([II)Z
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_ntk()I
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
jtb.JavaCharStream:getEndColumn()I
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Options.OptionInfo:argument_required()Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.Quant:subsetOf([D[D)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.Quant:memberOf(F[F)Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.Quant:subsetOf([S[S)Z
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
jtb.JavaCharStream:BeginToken()C
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.ModBitTracker:num_samples()I
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
utilMDE.MathMDE:pow_fast(II)I
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.Quant:lexGT([I[I)Z
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:element_range([I)I
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.ProglangType:dimensions()I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
jtb.Token:newToken(I)Ljtb.Token;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:subsetOf([F[F)Z
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.Quant:lexEqual([I[I)Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
utilMDE.ArraysMDE:concat([I[I)[I
daikon.Quant:memberOf(J[J)Z
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:eltsLteIndex([I)Z
daikon.Quant:eltwiseGTE([I)Z
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern:intern([D)[D
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.ModBitTracker:num_vars()I
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
utilMDE.TestUtilMDE.1InternTest:test(Z)V
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.FuzzyFloat:isSubset([D[D)Z
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
utilMDE.OrderedPairIterator:setnext1()V
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.Quant:eltsLTE([II)Z
daikon.VarInfoName:hashCode()I
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
utilMDE.MathMDE:negate(I)I
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
jtb.JavaCharStream:ReadByte()C
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:memberOf(S[S)Z
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.WeakHasherMap:processQueue()V
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quant:eq(JJ)Z
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
jtb.JavaParser:jj_scan_token(I)Z
daikon.Quant:eltwiseNotEqual([I)Z
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.FuzzyFloat:gt(DD)Z
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
jtb.JavaCharStream:getBeginColumn()I
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.VarComparabilityImplicit:alwaysComparable()Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.Quant:lte(II)Z
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
utilMDE.OrderedPairIterator:hasNext()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.Quant:lexNotEqual([I[I)Z
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z | CONDITION | 21420 | if (x) -> if (!x)
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
utilMDE.ArraysMDE:subarray([III)[I
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
jtb.JavaParser:jj_2_16(I)Z
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.Intern:numIntArrays()I
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.Quant:lt(II)Z
daikon.Quant:eltsLtIndex([I)Z
utilMDE.ArraysMDE:sum([[D)D
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.Quant:lexGTE([I[I)Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.Quant:lexLTE([I[I)Z
daikon.Quant:memberOf(D[F)Z
utilMDE.MathMDE:gcd(JJ)J
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
jtb.JavaCharStream:readChar()C
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:sum([I)I
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariants:Invariants()V
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.Quant:noDups([I)Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.Quant:pairwiseDivides([I[I)Z
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern:internSubsequence([III)[I
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.ValueTuple:isMissingFlow(I)Z
utilMDE.ArraysMDE:fn_is_permutation([I)Z
utilMDE.MathMDE:pow(II)I
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration; | RETURN | 7701 | return null
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.ArraysMDE:isSubarray([I[II)Z
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType; | RETURN | 5873 | return null
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
utilMDE.ArraysMDE:indexOf([I[I)I
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:subarray([JII)[J
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.Quant:setEqual([I[I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:eq(DD)Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.Quant:eltsGT([II)Z
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName; | ASSIGN | 4767 | = null
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaCharStream:FillBuff()V
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:concat([I[I)[I
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
jtb.JavaCharStream:getEndLine()I
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:sum([D)D
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.Quant:ne(II)Z
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
utilMDE.ArraysMDE:max([I)I
daikon.Quant:eltsGteIndex([I)Z
utilMDE.FuzzyFloat:lte(DD)Z
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:sorted([I)Z
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:slice([III)[I
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:eltwiseLT([I)Z
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.Ppt:Ppt()V
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
utilMDE.MathMDE:missing_numbers([I)[I
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.FuzzyFloat:gte(DD)Z
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
utilMDE.ArraysMDE:noDuplicates([D)Z
utilMDE.ArraysMDE:min_max([I)[I
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:isReverse([I[I)Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.VarInfoName:simplify_name()Ljava.lang.String;
utilMDE.ArraysMDE:fn_compose([I[I)[I
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.Quant:setDiff([I[I)[I
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.Quant:memberOf(F[D)Z
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.ValueTuple:tuplemodHasModified(I)Z
utilMDE.Intern:internSubsequence([JII)[J
utilMDE.OrderedPairIterator:setnext2()V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.ModBitTracker:ModBitTracker(I)V
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.Quant:subsetOf([F[D)Z
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.Quant:pairwiseGTE([I[I)Z
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.Quant:subsetOf([J[J)Z
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.Quant:intersection([I[I)[I
daikon.Quant:gt(II)Z
daikon.Quant:subsetOf([B[I)Z
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([II)I
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.ModBitTracker:split(I)I
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.VarInfoName.ElementsFinder:inPre()Z
utilMDE.ArraysMDE:indexOf([ZZ)I
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.VarInfoName:name()Ljava.lang.String;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I | ASSIGN | 184000 | = null
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
utilMDE.MathMDE:sign(I)I
utilMDE.Assert:assertTrue(Z)V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:eq(II)Z
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:gcd(II)I
utilMDE.ArraysMDE:isSubset([D[D)Z | ASSIGN | 63640 | = null
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.Quant:eltsLT([II)Z
utilMDE.WeakIdentityHashMap:indexFor(II)I
utilMDE.FuzzyFloat:ne(DD)Z
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.ValueTuple:isMissing(I)Z
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
jtb.JavaCharStream:backup(I)V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.Quant:pairwiseLTE([I[I)Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
utilMDE.ArraysMDE:noDuplicates([J)Z
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:eltsEqual([II)Z
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:eq(FF)Z
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.Quant:pairwiseEqual([I[I)Z
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.FuzzyFloat:eq(DD)Z
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.Quant:pairwiseGT([I[I)Z
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.Quant:sameLength([I[I)Z
daikon.VarInfoName:isLiteralConstant()Z
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.InvariantFormatTester:execute()Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
utilMDE.Intern:intern([J)[J
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:pairwiseNotEqual([I[I)Z
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
utilMDE.FuzzyFloat:lt(DD)Z
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.Quant:memberOf(I[I)Z
utilMDE.ArraysMDE:sum([[I)I
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:eltwiseLTE([I)Z
daikon.Quant:subsetOf([D[F)Z
utilMDE.MathMDE:gcd_differences([I)I
utilMDE.FuzzyFloat:indexOf([DD)I
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
utilMDE.LimitedSizeIntSet:add(I)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
utilMDE.MathMDE:gcd([I)I
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.PptSlice0:arity()I
daikon.Quant:eltwiseGT([I)Z
utilMDE.WeakHasherMap:size()I
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.JavaCharStream:getBeginLine()I
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
utilMDE.MathMDE:mod_positive(II)I
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quant:subsetOf([I[I)Z
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
utilMDE.Intern:intern([I)[I
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.Quant:gte(II)Z
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.Quant:eltsEqualIndex([I)Z
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.ValueTuple:size()I
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.Quant:eltsGTE([II)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3_16()Z
daikon.VarInfoAux:hashCode()I
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.ValueTuple:isMissingNonsensical(I)Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.Quant:eltwiseEqual([I)Z
daikon.Quant:eltsGtIndex([I)Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.inv.Invariant:prob_and(DDD)D
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:union([I[I)[I
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
49 2 304 2 92 2 2 4 40 2 117 2 492 2 438 2 533 2 
326 2 62 6 64 2 195 2 156 6 364 2 428 2 387 6 547 2 30 2 113 2 
79 6 459 6 152 2 313 2 407 2 49 2 449 6 391 2 210 4 212 2 12 4 438 2 416 6 
269 2 34 30 491 8 564 6 204 4 496 26 276 8 46 10 240 4 87 2 386 2 49 6 278 16 280 2 214 2 394 4 353 8 285 10 438 6 173 10 503 6 174 8 105 16 258 2 302 16 27 4 112 2 375 12 31 10 376 10 
476 4 365 6 
412 2 
34 6 307 2 148 2 81 2 564 2 496 4 46 4 278 2 394 2 353 2 285 2 173 2 126 2 584 2 222 2 105 2 302 2 190 2 553 2 191 2 376 2 31 2 375 2 
34 14 291 2 456 6 496 12 105 8 134 6 302 8 278 8 479 4 27 2 285 4 375 5 376 4 31 4 344 2 73 4 173 4 
558 2 522 2 540 2 202 2 274 2 84 2 445 6 337 2 163 2 478 2 304 2 529 2 371 2 265 2 352 2 437 2 399 4 
378 2 381 2 421 2 209 2 51 2 172 2 252 2 588 2 140 2 412 2 
269 2 149 2 35 4 270 2 273 2 463 2 427 2 158 2 464 2 576 2 319 2 244 2 286 2 399 2 327 2 96 2 581 2 99 2 361 2 331 2 136 2 446 2 366 2 367 4 25 2 187 2 413 4 304 2 264 2 230 2 517 2 373 2 
74 4 34 54 456 6 345 6 491 6 379 4 564 4 496 48 46 6 49 4 318 8 499 2 9 2 278 32 215 4 394 2 353 18 285 16 438 4 173 16 403 4 503 4 504 2 537 2 21 6 105 32 135 4 134 6 224 2 546 6 302 32 479 4 482 2 369 6 112 2 376 16 31 16 375 22 73 4 
371 2 274 2 399 2 
488 22 473 2 151 2 359 2 329 2 182 2 205 2 277 2 162 2 513 2 468 2 450 10 530 2 29 2 
77 2 157 2 160 4 246 2 396 2 401 2 184 2 254 2 253 4 186 2 110 2 551 2 554 2 32 2 271 2 194 2 420 2 199 2 348 4 425 2 49 8 573 1 438 8 297 2 585 1 68 5 455 2 
14 2 
49 2 19 2 
49 4 36 2 593 2 
458 12 153 4 524 4 383 6 314 12 241 38 165 38 465 10 531 14 393 2 532 2 470 2 534 2 248 6 95 2 179 4 20 12 103 12 185 12 477 2 411 4 24 8 108 12 261 4 550 2 267 2 484 6 555 12 114 2 489 6 418 2 196 2 39 4 272 12 347 4 565 6 203 2 349 2 208 4 48 12 50 4 569 8 59 8 124 38 288 8 579 4 61 8 507 2 442 8 67 2 132 8 509 8 591 12 512 16 447 2 303 2 514 2 227 2 144 6 72 12 234 2 374 2 147 2 
441 2 508 2 322 1 497 2 
166 2 441 2 
592 2 115 2 441 2 516 2 204 2 399 2 408 2 
441 2 516 2 287 2 
561 2 441 2 516 2 
370 2 323 2 497 2 
441 2 516 2 
475 2 323 2 
37 2 441 2 
323 2 485 2 497 2 
6 2 566 2 497 2 
409 2 460 2 497 2 
192 2 494 2 497 2 
228 2 497 2 400 2 
323 2 586 2 
180 2 441 2 
346 2 566 2 
409 2 527 2 
192 2 552 2 
228 2 131 2 
568 2 323 2 
328 2 228 2 
192 2 587 2 
409 2 130 2 
229 2 566 2 
323 2 485 2 125 2 497 2 
200 2 323 2 485 2 125 2 497 2 
323 2 256 2 497 2 
323 2 22 2 497 2 
312 2 444 2 315 2 123 2 
290 4 488 6 176 2 63 2 405 4 128 2 65 2 380 2 238 2 119 2 410 2 52 2 528 2 481 2 168 2 483 2 398 2 60 2 
557 2 497 2 
592 2 127 2 310 2 399 2 
592 2 115 2 127 2 310 2 596 2 399 2 
592 2 377 2 441 2 516 2 204 2 399 2 
249 2 136 2 
592 2 339 2 204 2 399 2 
192 2 296 2 
228 2 575 2 
448 2 566 2 
409 2 159 2 
409 2 8 2 228 2 
409 2 237 2 228 2 
409 2 97 2 228 2 
409 2 228 2 235 2 
545 2 592 2 395 2 435 6 415 2 399 2 
55 2 323 2 
90 2 
77 2 157 2 160 4 246 2 396 2 401 2 184 2 254 2 253 4 186 2 110 2 551 2 32 2 271 2 194 2 420 2 199 2 424 2 348 4 425 2 49 8 438 8 297 2 68 4 455 2 
77 2 157 2 160 4 246 2 396 2 401 2 184 2 254 2 253 4 186 2 110 2 551 2 32 2 271 2 194 2 420 2 199 2 424 2 348 4 425 2 49 8 573 2 438 8 297 2 585 2 68 6 455 2 
41 2 232 2 107 2 
41 2 232 2 107 2 
77 2 157 2 160 4 246 2 396 2 401 2 184 2 254 2 253 4 186 2 110 2 551 2 32 2 271 2 194 2 420 2 199 2 424 2 348 4 425 2 49 8 438 8 297 2 68 4 455 2 
77 2 157 2 160 4 246 2 396 2 401 2 184 2 254 2 253 4 186 2 110 2 551 2 32 2 271 2 194 2 420 2 199 2 424 2 348 4 425 2 49 8 573 1 438 8 297 2 585 1 68 5 455 2 
77 2 157 2 160 4 246 2 396 2 401 2 184 2 254 2 253 4 186 2 110 2 551 2 32 2 271 2 194 2 420 2 199 2 424 2 348 4 425 2 49 8 573 1 438 8 297 2 585 1 68 5 455 2 
77 2 384 2 160 2 85 2 317 2 89 2 466 2 246 2 396 2 13 1 401 2 94 2 252 1 184 2 253 2 106 2 254 2 186 2 259 2 110 2 28 2 551 2 271 2 420 2 421 1 425 2 348 4 47 2 49 12 120 1 433 2 500 2 574 2 438 8 356 2 580 2 297 2 443 2 300 2 68 2 146 2 455 2 
15 2 539 2 145 2 239 2 439 2 350 2 
283 2 145 2 321 2 42 2 5 2 207 2 33 2 
419 2 82 2 84 1 385 1 49 10 571 2 396 2 324 2 438 8 582 1 332 2 333 2 583 2 541 2 590 1 335 2 223 2 143 2 188 2 26 2 452 2 263 2 341 2 265 1 71 2 236 2 
34 15 74 2 457 2 491 4 496 12 49 6 318 2 567 2 278 6 121 2 501 2 320 2 353 1 397 2 438 6 285 6 173 6 503 2 221 2 105 6 134 4 542 2 302 6 546 4 482 1 597 2 31 6 376 6 375 1 73 2 
250 2 506 2 102 2 423 2 45 2 138 4 351 2 49 1 388 2 431 2 262 1 11 2 515 2 189 2 56 2 266 7 438 1 436 2 
250 2 506 2 102 2 423 2 45 2 138 4 351 4 388 2 431 2 11 2 515 4 189 4 56 2 266 6 436 2 
250 6 506 8 102 2 423 2 45 2 138 4 351 8 49 1 388 2 431 2 262 1 11 2 515 8 189 8 56 2 266 10 438 1 436 2 
102 2 423 2 45 2 138 2 351 2 388 2 431 2 11 2 515 2 189 2 56 2 266 2 436 2 
461 4 154 6 311 6 155 4 3 2 4 3 160 108 161 50 316 8 164 6 10 4 467 4 171 4 469 42 471 90 472 20 325 4 177 4 175 92 178 2 16 42 181 13 17 4 330 24 334 8 183 4 186 14 23 2 338 2 480 2 486 6 487 4 193 2 197 4 198 2 493 6 201 14 495 6 43 2 44 6 206 2 49 140 53 6 211 8 213 4 54 30 502 6 354 6 216 1 358 12 505 4 360 18 66 6 218 6 362 6 363 2 220 6 511 2 225 4 368 8 226 6 68 233 69 2 231 10 372 4 233 2 521 2 75 12 76 2 525 24 83 24 88 10 242 24 91 4 93 9 392 6 245 4 247 2 401 14 402 8 404 6 536 90 538 6 100 2 101 6 255 2 253 84 104 2 543 4 544 6 260 12 109 12 548 10 414 6 549 4 556 6 559 6 560 116 116 2 563 12 422 32 426 6 118 2 430 24 429 6 570 84 572 6 573 55 282 4 281 4 434 8 577 8 438 128 440 4 289 6 293 10 292 26 297 8 133 4 585 55 589 4 139 24 142 26 305 8 454 6 594 24 595 2 
75 4 0 6 150 2 308 2 309 2 80 2 523 2 311 2 382 2 462 2 4 2 83 2 86 2 160 20 526 2 88 2 316 2 164 2 167 4 389 2 467 2 169 2 243 2 245 4 401 2 402 2 181 2 98 2 251 2 406 2 330 2 18 2 334 2 104 2 253 20 186 2 336 2 257 2 23 2 109 4 548 2 414 2 340 2 111 2 342 2 343 2 486 2 417 2 556 2 560 6 562 2 563 4 422 2 201 2 426 2 429 2 430 38 49 46 279 4 432 4 122 2 573 2 434 2 502 2 58 2 57 2 577 6 355 2 578 2 438 44 357 2 217 2 505 2 66 2 294 2 129 2 219 2 363 2 297 2 585 2 299 2 510 2 301 4 68 44 451 2 305 2 454 2 70 2 231 2 594 2 518 2 595 2 
1 8 461 4 154 4 311 4 3 2 462 2 160 44 161 8 316 2 164 4 7 8 170 8 171 4 469 8 325 4 175 24 178 2 16 16 181 10 17 4 474 2 334 2 183 4 186 6 336 10 23 2 486 4 490 4 38 2 493 4 201 10 495 4 44 4 498 4 49 78 53 4 54 30 502 4 354 4 358 14 66 4 218 4 362 4 363 2 220 4 510 2 511 4 225 4 226 4 68 104 518 2 519 4 520 2 521 4 75 10 78 16 382 10 242 8 390 4 91 4 245 2 247 2 535 4 401 6 402 2 538 4 100 2 101 4 253 36 104 2 543 4 109 10 414 4 111 2 549 4 268 32 556 4 559 4 560 24 563 10 422 6 275 8 426 6 430 14 429 4 570 24 572 4 573 30 284 16 577 6 438 70 440 4 289 4 293 8 295 4 297 2 133 2 585 28 589 4 298 4 141 2 451 10 305 4 453 2 454 4 306 2 595 2 
521 2 75 6 76 2 311 4 4 2 160 14 316 2 164 4 93 2 392 2 245 2 472 10 401 2 402 2 181 2 98 2 334 2 104 2 253 14 186 2 23 2 109 6 338 2 480 2 414 2 111 2 486 4 556 4 560 8 563 6 201 2 422 2 43 2 206 2 426 2 118 2 429 4 430 14 49 28 573 12 54 6 502 4 577 4 438 26 440 4 293 6 66 2 294 2 363 2 297 2 133 2 585 12 510 2 511 2 68 40 305 2 454 2 372 2 595 2 
137 2 

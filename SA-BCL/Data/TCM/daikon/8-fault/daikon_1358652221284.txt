#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.NullPointerException 759 702 937 1164 174 362 40 353 383 322 788 196 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 902 1234 799 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V FAILED junit.framework.AssertionFailedError 428 119 
daikon.test.VarInfoNameTest:testJML()V ERROR utilMDE.Assert$AssertionException (340,926) (340,926) 806 110 804 119 
daikon.test.VarInfoNameTest:testEscForall()V FAILED junit.framework.AssertionFailedError 428 119 
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_0()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_1()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_2()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_3()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_4()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_5()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_6()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_7()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_8()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_9()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_10()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_11()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_12()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_13()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_14()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_15()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_16()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_17()V PASSED
daikon.test.split.SplitterFactoryTest:testmisc_Fib_main_18()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_19()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_20()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_21()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_22()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_23()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_24()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_25()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_26()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_27()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_28()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_29()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_30()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_31()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_32()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__33()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__34()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__35()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__36()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__37()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__38()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__39()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__40()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__41()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__42()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__43()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.Quant:eltwiseLTE([I)Z
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;Ljava.lang.String;)V
daikon.ModBitTracker:num_sets()I
daikon.PptSlice2:arity()I
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:sum([D)D
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_106()Z
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltwiseGTE([I)Z
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_109()Z
daikon.diff.Node:Node(LutilMDE.Pair;)V
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
jtb.JavaParser:jj_2_3(I)Z
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.VarInfoName:isLiteralConstant()Z
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.Intern:internSubsequence([JII)[J
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_30()Z
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
daikon.Quant:eltwiseNotEqual([I)Z
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.Quant:eltsLteIndex([I)Z
jtb.JavaParser:jj_3_10()Z
daikon.Quant:subsetOf([B[I)Z
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_81()Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
jtb.JavaParser:jj_3R_120()Z
daikon.Ppt:Ppt()V
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
jtb.JavaParser:jj_3_35()Z
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.Quant:memberOf(I[I)Z
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.FuzzyFloat:ne(DD)Z
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.Quant:eltwiseEqual([I)Z
jtb.JavaParser:jj_3R_57()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.simplify.LemmaStack:noticeInt(J)V
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
jtb.JavaParser:jj_3_19()Z
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
utilMDE.ArraysMDE:max([I)I
utilMDE.WeakHasherMap:processQueue()V
jtb.JavaParser:jj_3R_73()Z
daikon.ProglangType:isIntegral()Z
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:computeConfidence()D
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;)V
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
jtb.JavaParser:jj_3R_118()Z
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_2_12(I)Z
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
jtb.JavaParser:jj_3R_104()Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_16()Z
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
utilMDE.ArraysMDE:indexOf([I[I)I
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.Quant:pairwiseDivides([I[I)Z
jtb.JavaParser:jj_3_27()Z
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_210()Z
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_72()Z
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
utilMDE.ArraysMDE:sum([[D)D
daikon.diff.RootNode:RootNode()V
daikon.Quant:pairwiseSquare([I[I)Z
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_87()Z
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.Quant:eltsGteIndex([I)Z
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
jtb.JavaParser:jj_3_36()Z
jtb.JavaParser:jj_3R_98()Z
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:min([I)I
jtb.JavaParser:jj_3R_99()Z
daikon.Quant:eltsGTE([II)Z
daikon.Quant:subsetOf([F[D)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaCharStream:getEndColumn()I
jtb.JavaParser:jj_3R_51()Z
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:gte(II)Z
daikon.Quant:eltsLTE([II)Z
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
utilMDE.Intern.SequenceAndIndices:hashCode()I
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_2_16(I)Z
jtb.JavaParser:jj_3_15()Z
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.Quant:eq(II)Z
jtb.JavaParser:jj_3R_102()Z
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_scan_token(I)Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.VarInfoName:ioa_name()Ljava.lang.String;
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaCharStream:BeginToken()C
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.Modulus:enabled()Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
utilMDE.ArraysMDE:noDuplicates([D)Z
jtb.Token:newToken(I)Ljtb.Token;
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
utilMDE.MathMDE:negate(I)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
utilMDE.ArraysMDE:sorted([I)Z
daikon.Quant:lexGTE([I[I)Z
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_53()Z
daikon.Quant:eltwiseLT([I)Z
jtb.JavaParser:jj_3_13()Z
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.OutputFormat:isJavaFamily()Z
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quant:eltsGtIndex([I)Z
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:gcd_differences([I)I
utilMDE.OrderedPairIterator:hasNext()Z
jtb.JavaParser:jj_ntk()I
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
utilMDE.MathMDE:sign(I)I
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.ProglangType:isPointerFileRep()Z
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:pairwiseLTE([I[I)Z
daikon.ValueTuple:isMissing(I)Z
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.VarInfo:new_ppt()V
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
daikon.Quant:subsetOf([D[F)Z
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
jtb.JavaParser:jj_2_18(I)Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
utilMDE.OrderedPairIterator:setnext2()V
jtb.JavaParser:jj_3R_88()Z
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
jtb.JavaParser:jj_3R_80()Z
jtb.JavaParser:jj_3R_70()Z
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.VarInfo:name()Ljava.lang.String;
jtb.JavaParser:jj_3R_76()Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfo:java_name()Ljava.lang.String;
jtb.JavaParser:jj_3_21()Z
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.filter.ObviousFilter:ObviousFilter()V
utilMDE.MathMDE:pow_fast(II)I
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:set_rel_diff(D)V
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
jtb.JavaParser:jj_3R_47()Z
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_2_1(I)Z
daikon.VarInfo:jml_name()Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
utilMDE.Intern:numIntArrays()I
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
jtb.JavaParser:jj_3R_105()Z
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
daikon.Quant:lte(II)Z
daikon.Quant:memberOf(S[S)Z
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_123()Z
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaCharStream:backup(I)V
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.Quant:eltsLtIndex([I)Z
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.VarInfoName:name()Ljava.lang.String;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
utilMDE.UtilMDE:lineNumberFileReader(Ljava.lang.String;)Ljava.io.LineNumberReader;
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.Quant:eltwiseGT([I)Z
utilMDE.FuzzyFloat:eq(DD)Z
daikon.PptSlice1:arity()I
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
jtb.JavaCharStream:FillBuff()V
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;)Z
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.ProglangType:isScalar()Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.FuzzyFloat:lt(DD)Z
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName:esc_name()Ljava.lang.String;
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
utilMDE.LimitedSizeIntSet:add(I)V
daikon.inv.Invariant:logOn()Z
daikon.inv.Invariant:format()Ljava.lang.String;
jtb.JavaParser:jj_3R_96()Z
jtb.JavaParser:jj_3_14()Z
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
daikon.Quant:pairwiseLT([I[I)Z
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
utilMDE.SimpleLog.LongVal:LongVal(J)V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
utilMDE.FuzzyFloat:gt(DD)Z
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
jtb.JavaParser:jj_2_10(I)Z
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.Quant:subsetOf([D[D)Z
daikon.inv.Invariant:prob_is_ge(DD)D
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaCharStream:readChar()C
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.VarInfoName:hashCode()I
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.Quant:pairwiseGT([I[I)Z
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
daikon.Quant:eltsGT([II)Z
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.filter.InvariantFilters:InvariantFilters()V
utilMDE.LimitedSizeIntSet:size()I
daikon.inv.filter.InvariantFilter:InvariantFilter()V
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.inv.ValueSet:ValueSet(I)V
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_110()Z
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.Quant:setEqual([I[I)Z
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
utilMDE.FuzzyFloat:indexOf([DD)I
jtb.JavaParser:jj_3_28()Z
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
jtb.JavaParser:jj_2_4(I)Z
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.Quant:lexLT([I[I)Z
daikon.Quant:eltsLT([II)Z
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
jtb.JavaParser:jj_3R_122()Z
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
jtb.JavaParser:jj_3R_69()Z
daikon.Quant:ne(II)Z
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
utilMDE.Options.OptionInfo:argument_required()Z
jtb.JavaParser:jj_3R_75()Z
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.PptName:isCombinedExitPoint()Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.JavaParser:jj_3_22()Z
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.Quant:eq(DD)Z
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.LowerBoundCore:calc_range()J
utilMDE.ArraysMDE:sum([[I)I
jtb.JavaParser:jj_3_1()Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String; | CONDITION | 128308 | if (x) -> if (!x)
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.ValueTuple:isMissingFlow(I)Z
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_2_13(I)Z
jtb.JavaParser:jj_3R_116()Z
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.Quant:union([I[I)[I
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.UpperBoundCore:calc_modulus()J
jtb.JavaParser:jj_3R_48()Z
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
daikon.Quant:memberOf(J[J)Z
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:prob_and(DD)D
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eltsEqualIndex([I)Z
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3_17()Z
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
jtb.JavaParser:jj_3R_97()Z
jtb.JavaParser:jj_3R_52()Z
daikon.Quant:eq(JJ)Z
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_54()Z
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
daikon.Quant:setDiff([I[I)[I
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.Quant:lexLTE([I[I)Z
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.Quant:lexEqual([I[I)Z
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
utilMDE.WeakHasherMap:size()I
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.inv.Invariant:justified()Z
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_161()Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.PptTopLevel:name()Ljava.lang.String;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.ModBitTracker:ModBitTracker(I)V
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eltsEqual([II)Z
jtb.JavaParser:jj_3R_119()Z
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_89()Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3_3()Z
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_124()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([I[II)Z
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.PptSlice1:num_samples()I
daikon.PptSlice0:initInvariantsSeen()V
jtb.JavaParser:jj_3R_63()Z
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_58()Z
utilMDE.WeakHasherMap.EntrySet:size()I
jtb.JavaParser:jj_3R_134()Z
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.LowerBoundCore:computeProbability()D
jtb.JavaCharStream:getBeginLine()I
daikon.Quant:slice([III)[I
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
utilMDE.ArraysMDE:subarray([III)[I
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.inv.Invariant:prob_and(DDD)D
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaCharStream:ReadByte()C
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eq(FF)Z
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
jtb.JavaCharStream:getEndLine()I
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
jtb.JavaParser:jj_3R_61()Z
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
jtb.JavaParser:jj_3R_68()Z
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:subarray([JII)[J
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.ProglangType:isArray()Z
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V | ASSIGN | 49179 | = null
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_85()Z
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE:pow(II)I
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:fn_is_permutation([I)Z
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.Quant:memberOf(D[F)Z
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.inv.unary.scalar.NonModulus:updateResults()V
jtb.JavaParser:jj_3R_148()Z
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.test.InvariantFormatTester:execute()Z
jtb.JavaParser:jj_3R_162()Z
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
jtb.JavaParser:jj_2_17(I)Z
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_67()Z
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
utilMDE.TestUtilMDE.1InternTest:test(Z)V
utilMDE.ArraysMDE:indexOf([II)I
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
utilMDE.ArraysMDE:min_max([I)[I
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.diff.Node:Node()V
jtb.JavaParser:jj_3R_86()Z
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
jtb.JavaParser:jj_3R_115()Z
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_56()Z
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:intern([D)[D
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3_25()Z
jtb.JavaParser:jj_2_14(I)Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.ProglangType:dimensions()I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.OrderedPairIterator:setnext1()V
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:lt(II)Z
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:subsetOf([I[I)Z
utilMDE.ArraysMDE:concat([I[I)[I
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
utilMDE.FuzzyFloat:lte(DD)Z
jtb.JavaParser:jj_3_4()Z
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.inv.Invariant:isWorthPrinting()Z
daikon.VarInfo:isPointer()Z
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.Quant:concat([I[I)[I
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
utilMDE.MathMDE:mod_positive(II)I
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
jtb.JavaParser:jj_3R_50()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ProglangType:isPseudoArray()Z
daikon.Quant:subsetOf([F[F)Z
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_133()Z
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.test.FormatTestCase:passes()Z
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
jtb.JavaParser:jj_3_20()Z
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.PptName:isEnterPoint()Z
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_74()Z
jtb.JavaParser:jj_2_21(I)Z
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
daikon.ProglangType:baseIsIntegral()Z
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.DetailedStatisticsVisitor:freq(II)D
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
utilMDE.Assert:assertTrue(Z)V
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
utilMDE.FuzzyFloat:gte(DD)Z
jtb.JavaParser:jj_3R_125()Z
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfo:relate_var()V
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
jtb.JavaParser:jj_3R_121()Z
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern:intern([J)[J
daikon.Quant:pairwiseEqual([I[I)Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.Quant:gt(II)Z
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
jtb.syntaxtree.NodeList:NodeList()V
utilMDE.Intern:internSubsequence([III)[I
jtb.JavaParser:jj_3_5()Z
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.ValueTuple:size()I
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.inv.Invariant:logDetail()Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.PptSlice0:arity()I
utilMDE.SimpleLog:SimpleLog(Z)V
utilMDE.UtilMDE:lineNumberFileReader(Ljava.io.File;)Ljava.io.LineNumberReader;
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:subsetOf([S[S)Z
utilMDE.MathMDE:gcd([I)I
daikon.inv.Invariants:Invariants()V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:jj_2_35(I)Z
utilMDE.Intern:internStrings([Ljava.lang.String;)V
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParser:jj_3R_103()Z
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_163()Z
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.ModBitTracker:split(I)I
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.ArraysMDE:sum([I)I
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_135()Z
daikon.Quant:memberOf(F[F)Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.VarInfo:ioa_name()Ljava.lang.String;
utilMDE.MathMDE:modulus([I)[I
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
utilMDE.MathMDE:missing_numbers([I)[I
jtb.JavaParser:jj_3R_77()Z
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.Debug:logDetail()Z
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
jtb.JavaParser:jj_3R_117()Z
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_100()Z
daikon.inv.Invariant:getConfidence()D
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_2_5(I)Z
daikon.Quant:lexNotEqual([I[I)Z
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3_18()Z
jtb.JavaParser:jj_3R_107()Z
daikon.diff.InvMap:InvMap()V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
jtb.JavaParser:jj_3R_114()Z
daikon.diff.InvMap:toString()Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.ModBitTracker:num_vars()I
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String; | STATEMENT | 38468 | stmt -> ;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.Quant:intersection([I[I)[I
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.Quant:pairwiseGTE([I[I)Z
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
utilMDE.MathMDE:gcd(II)I
daikon.Quant:isReverse([I[I)Z
daikon.Quant:lexGT([I[I)Z
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_2_36(I)Z
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;Z)Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
jtb.JavaParser:jj_3R_149()Z
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
utilMDE.MathMDE:gcd(JJ)J
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
daikon.VarInfoName:toString()Ljava.lang.String;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
jtb.JavaParser:jj_2_15(I)Z
utilMDE.Intern:intern([I)[I
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.LowerBoundCore:calc_modulus()J
utilMDE.MathMDE:mod_positive(JJ)J
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.Debug:logOn()Z
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
jtb.JavaParser:jj_3_29()Z
jtb.JavaParser:jj_3R_108()Z
jtb.JavaParser:jj_3_12()Z
jtb.JavaParser:jj_2_25(I)Z
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.Quant:memberOf(F[D)Z
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.Quant:noDups([I)Z
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_101()Z
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
jtb.JavaParser:getToken(I)Ljtb.Token;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.ProglangType:isFloat()Z
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.Quant:pairwiseNotEqual([I[I)Z
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.ArraysMDE:element_range([I)I
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.Quant:subsetOf([J[J)Z
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
daikon.ModBitTracker:num_samples()I
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_format_exists(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.ProglangType:baseIsFloat()Z
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
jtb.JavaParser:jj_3R_49()Z
daikon.VarInfoName:simplify_name()Ljava.lang.String;
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.Quant:eltsNotEqual([II)Z
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
jtb.JavaCharStream:getBeginColumn()I
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_62()Z
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_55()Z
daikon.diff.Node:getUserRight()Ljava.lang.Object;
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
jtb.JavaParser:jj_3R_126()Z
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:sameLength([I[I)Z
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.ProglangType:baseIsScalar()Z
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.inv.Invariant:prob_or(DD)D
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V | CONDITION | 919 | if (x) -> if (!x)
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_60()Z
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
340 2 538 4 430 2 465 2 1138 2 926 2 1022 2 517 2 795 2 
594 2 216 2 415 2 334 6 126 2 925 2 151 2 859 6 227 6 274 2 895 2 
641 2 37 2 36 6 689 4 489 6 856 6 926 2 454 2 425 2 340 2 402 2 1238 6 555 4 
639 2 982 4 941 6 728 4 987 8 910 16 248 28 817 4 46 2 615 8 863 8 655 26 619 12 1028 16 958 2 100 10 1107 6 923 2 711 2 926 6 755 2 1079 10 379 10 225 10 602 10 340 6 888 4 1012 16 193 8 80 2 
1020 4 1063 6 
443 2 
0 2 769 4 772 2 1022 2 245 2 400 2 1103 2 99 2 258 2 13 2 623 2 332 2 878 2 711 2 178 2 270 2 340 4 1194 2 1054 2 33 2 348 4 1202 2 580 2 280 2 283 2 1207 2 45 2 821 4 1211 2 587 2 134 2 135 2 826 4 1151 2 991 2 1160 2 149 2 926 4 153 2 930 2 228 2 76 2 1086 2 461 2 
639 2 941 4 3 4 812 2 987 6 6 4 91 4 692 2 910 32 248 52 781 2 655 47 863 19 1028 32 619 22 100 15 210 8 140 6 480 4 704 6 1107 4 1156 6 142 3 177 2 146 6 65 4 926 4 1079 15 225 15 379 15 602 6 844 4 340 4 888 2 1196 6 1012 32 344 5 501 2 390 4 
791 2 1054 2 1043 2 
967 2 487 2 928 2 283 2 422 2 361 2 306 2 405 22 79 10 553 2 870 2 442 2 743 2 444 2 
910 2 248 6 820 2 863 2 655 4 619 2 1028 2 100 2 1217 2 1107 2 372 2 749 2 667 2 1079 2 378 2 20 2 225 2 379 2 602 4 721 2 888 2 1012 2 315 2 
982 2 62 2 3 4 910 8 1079 4 248 16 225 4 379 4 655 12 619 4 1028 8 1196 6 1012 8 233 2 100 4 480 4 1156 6 
277 4 240 2 642 62 89 4 38 2 356 2 282 2 945 2 548 2 205 2 861 2 403 4 826 4 1070 10 869 4 1071 10 829 4 105 4 330 2 448 4 1160 4 791 2 834 4 712 2 1043 6 1004 2 1006 2 974 2 762 2 497 4 882 14 74 2 76 2 273 4 192 2 767 2 1054 8 768 4 852 2 1129 2 
1060 2 1159 2 970 2 244 2 628 2 359 2 11 2 479 2 575 2 443 2 
770 2 2 4 1089 2 1088 4 1092 2 611 2 467 2 775 6 612 2 1093 2 944 2 1099 2 173 2 9 2 954 3 478 2 481 2 324 4 963 1 484 2 328 3 485 2 969 2 490 3 1119 2 792 2 794 2 629 2 182 1 975 4 340 34 801 2 976 2 635 2 503 2 346 12 637 2 34 24 984 1 1138 2 648 2 649 2 650 1 508 2 44 3 203 2 509 4 510 2 366 2 512 3 1147 32 516 3 1152 2 519 2 211 2 669 2 64 6 999 2 376 6 833 1 835 2 68 2 1002 1 672 2 838 2 1166 1 1010 24 232 2 1013 2 849 2 81 2 684 2 1015 2 85 2 236 2 686 2 242 4 396 12 542 2 691 2 545 2 546 3 693 1 1023 2 695 2 250 2 697 2 699 1 866 4 256 1 703 2 1183 2 1036 2 102 16 1185 3 1039 2 558 8 562 8 879 6 111 1 715 2 880 1 1190 2 113 2 569 1 423 2 271 1 114 1 884 2 117 2 429 2 892 16 723 2 894 1 578 2 896 5 898 2 897 2 1204 16 125 3 730 2 908 2 128 2 909 2 434 1 289 2 290 2 133 2 1069 2 590 2 441 2 141 3 919 32 742 2 445 2 1075 2 921 2 926 32 450 2 152 3 758 16 1227 2 931 4 932 2 603 2 1233 3 161 2 313 8 606 2 
340 2 494 2 
340 4 731 2 636 2 
1213 2 
608 6 609 12 4 2 950 2 317 2 318 2 616 4 322 2 12 2 957 4 323 2 959 2 960 2 326 2 621 54 965 4 15 2 14 2 329 40 331 32 335 2 18 16 627 2 337 2 630 20 632 4 338 2 25 2 26 2 28 2 633 2 343 2 30 18 31 2 977 2 347 12 638 2 980 2 352 2 983 2 35 2 985 4 353 2 645 2 647 2 41 30 40 2 652 10 653 4 362 2 363 4 365 2 50 2 658 2 657 4 51 2 992 26 56 6 369 2 370 4 59 2 61 2 374 2 63 12 1000 4 67 158 671 2 1007 2 71 2 676 4 382 2 679 4 383 2 682 26 384 2 84 2 1017 2 388 12 391 54 688 12 392 2 690 2 88 4 1021 12 398 4 93 2 694 2 96 2 701 24 702 2 1031 2 101 2 1033 2 705 18 409 26 411 2 1037 2 706 2 707 26 1040 2 708 2 1041 2 709 2 108 12 716 2 419 10 1048 2 719 2 720 4 426 2 722 4 115 4 121 2 1056 2 725 54 1058 54 431 2 1065 2 733 158 735 2 130 2 131 4 137 2 738 48 746 2 446 2 748 54 143 2 750 4 753 10 150 2 1080 2 759 2 156 2 456 2 764 4 157 2 159 2 1083 4 1084 2 1087 2 773 2 166 2 1095 54 468 10 1094 4 469 12 472 2 474 2 172 2 1100 2 784 2 1101 2 174 2 785 2 1106 2 175 2 176 4 1111 2 788 2 787 26 789 2 1116 2 1117 40 1120 2 179 2 491 2 495 4 184 54 183 2 496 158 797 10 185 4 800 4 186 2 1124 2 802 2 499 54 1125 2 500 18 1126 10 807 2 1127 2 194 2 808 2 1132 2 196 2 1135 2 811 2 813 4 814 2 200 2 201 4 202 2 1143 2 818 2 204 2 207 2 1146 2 1148 4 209 266 518 2 214 2 1157 2 215 2 218 2 221 54 832 2 836 2 223 4 1162 14 840 4 526 2 843 2 527 2 1164 4 529 2 847 2 230 32 229 54 231 2 848 6 850 2 1170 2 851 2 1171 2 533 2 534 2 241 4 1174 2 855 8 1176 4 547 2 252 4 251 6 1178 2 254 12 552 56 257 2 1182 54 871 2 554 2 1184 54 556 26 1186 2 877 2 559 2 265 2 1189 2 566 12 571 14 881 2 1192 4 885 4 887 2 886 10 1197 2 1199 2 576 2 275 30 1203 2 899 4 581 2 903 2 906 4 1205 48 911 2 912 2 585 2 588 4 914 2 292 2 293 2 916 2 917 2 918 2 297 2 299 32 301 2 1225 2 303 2 1226 2 929 2 600 2 604 6 307 2 934 40 935 2 310 2 937 6 938 12 1237 2 
1158 2 206 2 463 1 1201 2 
206 2 395 2 
73 2 206 2 1118 2 728 2 1054 2 1064 2 1045 2 
73 2 551 2 206 2 
73 2 206 2 867 2 
572 2 1201 2 1072 2 
73 2 206 2 
572 2 687 2 
206 2 1180 2 
572 2 942 2 1201 2 
188 2 1201 2 475 2 
953 2 1201 2 286 2 
1201 2 514 2 385 2 
864 2 1068 2 1201 2 
572 2 87 2 
206 2 52 2 
253 2 188 2 
1 2 953 2 
404 2 385 2 
864 2 23 2 
572 2 640 2 
864 2 165 2 
267 2 385 2 
953 2 55 2 
188 2 394 2 
572 2 942 2 1201 2 665 2 
572 2 942 2 1201 2 665 2 1038 2 
572 2 136 2 1201 2 
572 2 1201 2 155 2 
747 2 127 2 596 2 21 2 
1139 2 1001 2 584 4 973 2 493 2 181 2 779 2 1163 4 654 2 405 6 824 2 634 2 890 2 740 2 57 2 311 2 1085 2 386 2 
1195 2 1201 2 
876 2 1118 2 868 2 1054 2 
876 2 1118 2 868 2 1054 2 1045 2 614 2 
73 2 206 2 1118 2 728 2 659 2 1054 2 
258 2 1141 2 
726 2 1118 2 728 2 1054 2 
530 2 385 2 
864 2 180 2 
188 2 564 2 
953 2 189 2 
864 2 953 2 563 2 
864 2 953 2 661 2 
864 2 953 2 1073 2 
864 2 953 2 246 2 
857 2 1118 2 109 6 565 2 567 2 845 6 1198 2 1054 2 
572 2 574 2 
838 2 
770 2 2 4 1088 4 775 2 467 2 1093 2 777 4 316 2 944 2 171 2 1099 2 324 2 482 2 969 2 1119 2 794 2 340 26 975 4 803 2 346 8 503 2 349 2 1138 2 648 2 1140 2 508 2 509 4 510 2 1147 4 825 2 660 2 1152 2 519 2 664 2 828 2 669 2 64 6 376 5 68 2 672 2 1166 4 684 2 83 2 236 2 85 2 242 2 542 2 396 8 695 2 406 2 102 6 1036 2 1039 2 264 2 879 2 715 2 1190 1 418 2 423 2 1049 2 114 2 429 1 723 4 730 2 434 2 289 2 290 2 133 2 1069 2 441 6 919 6 926 26 1077 4 304 2 931 2 932 2 161 2 313 2 
770 2 2 4 1088 4 775 2 467 2 1093 2 777 4 316 2 944 2 171 2 1099 2 324 2 482 2 969 2 488 2 1119 2 794 2 340 26 975 4 801 2 803 2 346 8 503 2 349 2 1138 2 648 2 1140 2 508 2 509 4 510 2 1147 4 825 2 660 2 1152 2 519 2 664 2 669 2 64 6 376 6 68 2 672 2 1166 2 684 2 83 2 236 2 85 2 242 2 542 2 396 8 544 2 695 2 406 2 102 6 1036 2 1039 2 264 2 879 2 715 2 1190 2 423 2 1049 2 114 2 429 2 723 4 730 2 434 2 289 2 290 2 133 2 1069 2 591 2 441 6 919 6 926 26 1077 4 931 2 932 2 161 2 313 2 
924 2 
506 2 1161 2 
2 2 774 2 393 2 249 4 859 6 952 2 407 2 1035 2 410 2 262 2 1115 2 969 2 336 2 17 2 334 6 1042 2 420 2 24 2 1193 2 187 2 340 12 975 2 29 4 342 8 341 2 274 4 895 2 579 2 986 2 648 2 907 2 281 8 816 4 913 2 1069 2 138 2 1152 2 295 4 519 2 144 2 594 4 830 2 831 4 752 2 64 4 1224 2 925 2 926 6 68 2 927 2 756 2 154 4 227 6 681 10 460 2 1235 2 684 2 238 2 162 2 1016 2 
2 2 774 2 393 2 94 4 1098 2 249 4 859 6 952 2 407 2 1035 2 410 2 262 2 1115 2 969 2 17 2 336 2 334 8 1042 2 420 2 24 2 1193 2 187 2 975 2 340 12 29 4 342 8 341 2 274 4 577 2 895 2 986 2 648 2 907 2 281 8 816 4 1069 2 138 2 1152 2 295 4 519 2 144 2 594 4 216 2 830 2 831 4 752 2 64 4 1224 2 926 6 925 2 68 2 927 2 756 2 154 4 227 8 681 10 460 2 1235 2 684 2 238 2 162 2 1016 2 
144 2 594 2 831 4 752 2 336 2 334 2 1042 2 1224 2 927 2 907 2 154 4 249 2 24 2 859 2 274 2 138 2 407 2 1016 2 
2 2 774 2 393 2 249 4 859 4 952 2 407 2 1035 2 410 2 262 2 1115 2 969 2 336 2 17 2 334 6 1042 2 420 2 24 2 1193 2 187 2 340 12 975 2 29 4 342 4 341 2 274 4 895 2 579 2 986 2 648 2 907 2 281 4 816 4 913 2 1069 2 138 2 1152 2 295 4 519 2 144 2 594 4 216 2 830 2 831 4 752 2 64 4 1224 2 926 6 68 2 927 2 756 2 154 4 227 6 681 6 460 2 1235 2 684 2 238 2 162 2 1016 2 
2 2 774 2 393 2 249 4 859 6 952 2 407 2 1035 2 410 2 262 2 1115 2 969 2 336 2 17 2 334 4 1042 2 420 2 24 2 1193 2 187 2 340 12 975 2 29 4 342 4 341 2 274 4 895 2 579 2 986 2 126 2 648 2 907 2 281 4 816 4 913 2 1069 2 138 2 1152 2 295 4 519 2 144 2 594 4 830 2 831 4 752 2 64 4 1224 2 926 6 68 2 927 2 756 2 154 4 227 6 681 6 460 2 1235 2 684 2 238 2 162 2 1016 2 
2 2 774 2 393 2 249 4 859 6 952 2 407 2 1035 2 410 2 262 2 1115 2 969 2 336 2 17 2 334 6 1042 2 420 2 24 2 1193 2 187 2 340 12 975 2 29 4 342 4 341 2 274 4 895 2 579 2 986 2 648 2 907 2 281 8 816 4 913 2 1069 2 138 2 1152 2 295 4 519 2 144 2 594 4 830 2 831 4 752 2 64 4 1224 2 925 2 926 6 68 2 927 2 756 2 154 4 227 6 681 6 460 2 1235 2 684 2 238 2 162 2 1016 2 
2 2 774 2 393 2 249 4 859 8 952 2 407 2 1035 2 410 2 262 2 1115 2 969 2 336 2 17 2 334 6 1042 2 420 2 24 2 1193 2 187 2 975 2 340 12 29 4 342 8 341 2 274 4 895 2 579 2 986 2 126 2 648 2 907 2 281 8 816 4 913 2 1069 2 138 2 1152 2 295 4 519 2 144 2 594 4 830 2 831 4 752 2 64 4 1224 2 925 2 926 6 68 2 927 2 756 2 154 4 227 8 681 10 460 2 1235 2 684 2 238 2 162 2 1016 2 
2 2 774 2 393 2 249 4 859 6 952 2 407 2 1035 2 410 2 262 2 1115 2 969 2 336 2 17 2 334 6 1042 2 420 2 24 2 1193 2 187 2 340 12 975 2 29 4 342 8 341 2 274 4 895 2 579 2 986 2 648 2 907 2 281 8 816 4 913 2 1069 2 138 2 1152 2 295 4 519 2 144 2 594 4 830 2 831 4 752 2 64 4 1224 2 925 2 926 6 68 2 927 2 756 2 154 4 227 6 681 10 460 2 1235 2 684 2 238 2 162 2 1016 2 
2 4 613 2 948 2 952 2 324 2 966 2 969 2 336 2 17 2 334 4 24 2 975 4 340 46 29 8 341 2 636 6 346 4 349 2 986 2 648 2 355 1 49 2 990 2 660 2 669 2 64 6 376 6 68 2 673 4 674 2 70 1 72 7 75 1 1011 2 681 2 82 2 684 2 1016 2 1019 2 393 2 396 4 97 6 1030 2 406 4 407 2 1034 6 1035 2 102 6 1036 2 410 2 1039 2 1042 2 714 6 420 2 1046 1 429 2 1055 6 724 6 126 4 736 2 439 1 1069 2 133 2 441 6 138 2 739 2 144 2 752 2 449 2 756 2 154 4 761 1 158 6 161 2 460 4 162 2 770 2 1088 4 774 2 775 2 466 10 467 2 1093 2 777 4 1099 2 780 6 782 2 783 6 476 2 483 2 1113 6 1115 2 1119 12 494 6 187 2 498 2 810 6 1134 2 1138 2 509 4 816 4 510 2 1144 1 1147 2 825 2 1150 2 1152 2 519 2 830 2 831 4 227 12 236 2 238 2 535 2 537 1 539 7 242 2 542 2 249 4 858 2 859 8 1179 2 865 2 255 2 873 2 261 6 262 2 557 6 879 2 1190 2 1193 4 272 2 274 4 895 4 279 4 905 2 907 2 281 2 285 2 289 2 290 2 586 6 913 2 1213 6 915 2 295 6 919 8 594 4 922 2 1224 2 926 24 927 2 302 1 601 2 931 2 932 2 936 8 1235 2 313 2 605 2 
770 2 2 4 1088 4 774 2 467 2 466 10 775 2 777 4 1093 2 613 2 948 2 951 2 1099 2 780 6 952 2 782 2 783 6 476 2 324 4 483 2 966 2 1113 6 1115 2 969 2 334 8 17 2 336 2 1119 12 494 6 24 2 187 2 340 48 975 4 498 2 29 8 341 2 636 6 346 8 810 6 349 2 981 2 1134 2 1138 2 986 2 648 2 816 4 509 4 510 2 49 2 1147 2 990 2 825 2 1150 2 660 2 1152 2 519 2 830 2 831 4 669 2 64 6 376 6 68 2 673 4 674 2 227 12 1011 2 681 2 82 2 684 2 238 2 1016 2 236 2 535 2 1019 2 242 4 393 2 542 2 396 8 249 4 858 2 859 8 97 6 865 2 1179 2 255 2 1030 2 406 4 407 2 873 2 1034 6 261 6 1036 2 102 6 1035 2 410 2 262 2 1039 2 557 6 1042 2 879 2 714 6 1190 2 420 2 1193 4 272 2 429 2 274 4 723 2 1055 6 724 6 895 4 279 4 905 2 281 6 907 2 285 2 736 2 289 2 586 6 290 2 1213 6 913 2 133 2 1069 2 915 2 138 2 441 6 739 2 295 6 919 8 922 2 144 2 594 4 752 2 1224 2 925 4 926 26 927 2 449 2 756 2 154 4 601 2 931 4 932 2 158 6 161 2 936 8 460 4 1235 2 605 2 313 2 162 2 
770 2 2 4 1088 4 774 2 467 2 466 10 775 2 777 4 1093 2 613 2 948 2 951 2 1099 2 780 6 952 2 782 2 783 6 476 2 324 4 483 2 966 2 1113 6 1115 2 969 2 334 8 17 2 336 2 1119 12 494 6 24 2 187 2 340 48 975 4 498 2 29 8 342 4 341 2 636 6 346 8 810 6 349 2 981 2 1134 2 1138 2 986 2 648 2 816 4 509 4 510 2 49 2 1147 2 990 2 825 2 1150 2 660 2 1152 2 519 2 830 2 831 4 669 2 64 6 376 6 68 2 673 4 674 2 227 12 1011 2 681 6 82 2 684 2 238 2 1016 2 236 2 535 2 1019 2 242 4 393 2 542 2 396 8 249 4 858 2 859 8 97 6 865 2 1179 2 255 2 1030 2 406 4 407 2 873 2 1034 6 261 6 1036 2 102 6 1035 2 410 2 262 2 1039 2 557 6 1042 2 879 2 714 6 1190 2 420 2 1193 4 272 2 429 2 274 4 723 2 1055 6 724 6 895 4 279 4 905 2 281 6 907 2 285 2 736 2 289 2 586 6 290 2 1213 6 913 2 133 2 1069 2 915 2 138 2 441 6 739 2 295 6 919 8 922 2 144 2 594 4 752 2 1224 2 925 4 926 26 927 2 449 2 756 2 154 4 601 2 931 4 932 2 158 6 161 2 936 8 460 4 1235 2 605 2 313 2 162 2 
2 4 613 2 948 2 947 2 951 2 952 2 620 2 324 4 966 2 969 2 336 2 17 2 334 10 631 6 24 2 975 4 340 52 29 8 341 2 342 4 636 12 346 10 349 2 981 2 986 2 648 2 43 6 49 2 990 2 660 2 996 2 669 2 375 6 64 6 376 6 68 2 673 4 674 2 77 6 1011 2 681 6 82 2 684 2 1016 2 1019 2 393 2 396 10 97 6 1027 6 1030 2 406 4 407 2 1034 6 1035 2 102 8 1036 2 410 2 104 6 1039 2 416 2 1042 2 714 12 420 2 429 2 723 2 1055 12 724 6 126 2 736 2 1069 2 133 2 441 8 138 2 739 2 144 2 752 2 449 2 756 2 154 4 158 6 161 2 460 4 162 2 770 2 1088 4 774 2 775 4 467 2 466 8 1093 2 777 6 1099 2 780 12 782 2 783 6 476 2 483 2 1113 6 1115 2 1119 10 494 12 798 6 187 2 498 2 1131 6 810 6 1134 2 1138 2 509 4 816 4 510 2 1147 4 825 4 1150 2 1152 2 519 2 830 2 216 2 831 4 227 16 1169 2 236 2 238 2 242 4 542 2 247 2 249 4 858 2 859 10 549 2 1179 2 865 2 255 2 873 2 261 6 262 2 557 6 879 4 1190 2 1193 4 272 2 274 4 895 4 901 6 279 4 905 2 907 2 281 6 285 2 289 2 290 2 586 6 913 2 1213 12 915 2 295 6 919 12 300 2 594 4 922 2 1224 2 926 24 925 4 927 2 601 2 931 4 932 2 936 8 1235 2 313 4 605 2 
393 2 986 2 281 6 907 2 816 2 859 6 913 2 295 2 1035 2 410 2 830 2 594 4 831 2 752 2 17 2 336 2 334 6 1042 2 1224 2 925 2 927 2 756 2 154 2 227 4 340 4 29 2 342 4 341 2 681 4 274 4 1235 2 895 2 238 2 162 2 1016 2 
770 2 2 4 1089 2 1088 4 775 3 466 2 1093 2 777 4 1099 2 969 2 334 6 336 2 17 2 1119 4 975 4 340 28 29 2 341 2 349 2 986 2 1138 2 648 2 816 2 509 4 510 2 360 3 1147 3 660 2 1152 2 519 2 830 2 831 2 669 2 64 6 376 6 68 2 838 2 227 4 681 2 684 2 236 2 387 2 1016 2 238 2 1018 2 535 2 393 2 542 2 397 2 859 6 703 2 406 2 102 6 1036 2 1035 2 410 2 262 2 1039 2 1042 2 879 3 1188 2 1190 2 429 2 274 4 895 2 907 2 281 6 289 2 290 2 913 2 133 2 1069 2 441 6 295 2 741 2 919 8 445 2 594 4 752 2 1224 2 925 2 926 24 927 2 756 2 154 2 932 2 161 2 1235 2 162 2 
830 2 986 2 815 2 
830 2 986 2 815 2 
770 2 2 4 1088 4 466 2 467 4 1093 2 316 4 1099 2 952 2 324 4 327 2 1112 2 969 2 625 4 336 2 334 12 1119 4 793 2 187 2 340 24 975 4 29 4 342 4 346 4 349 2 1134 2 1138 2 986 4 648 2 815 2 509 4 816 2 510 2 1145 2 1147 2 660 2 1152 2 519 2 58 2 830 6 216 4 669 2 831 2 64 6 376 6 68 2 673 2 674 2 226 2 227 16 1166 2 78 2 681 6 684 2 236 2 854 2 242 4 396 4 542 2 249 4 859 12 406 6 407 2 1034 2 102 2 410 2 1039 2 1042 4 1190 2 420 2 1193 2 1051 4 429 2 274 4 1057 2 895 4 126 4 729 2 279 2 905 2 281 6 289 2 1212 2 290 2 291 2 133 2 1069 2 441 2 295 4 919 2 144 2 594 4 147 2 1224 2 926 16 925 4 756 2 154 2 931 4 932 2 933 2 1232 2 161 2 460 4 1236 2 1239 2 
1112 2 969 2 466 2 1062 2 1119 2 926 2 651 2 1161 2 285 2 673 2 819 2 24 2 1212 2 340 4 865 2 1232 2 1034 2 
770 2 2 4 1088 4 467 4 1093 2 316 4 949 2 1099 2 952 2 324 4 622 2 327 2 1112 2 1115 2 969 2 625 4 336 2 334 12 1119 2 793 4 187 2 340 24 975 4 29 4 342 4 346 4 349 2 1134 2 1138 2 986 4 648 2 815 2 816 2 509 4 510 2 1145 2 1147 4 660 2 1152 2 519 2 58 2 830 6 216 4 669 2 831 2 64 6 376 6 68 2 674 2 226 2 675 2 227 16 681 6 684 2 236 2 854 2 242 4 396 4 542 2 249 4 859 12 550 2 406 6 407 2 1034 2 102 2 410 2 1039 2 1042 4 1190 2 420 2 1193 4 1051 4 429 2 274 4 1057 2 895 4 727 2 126 4 279 2 905 2 281 6 289 2 1212 2 290 2 291 2 133 2 1069 2 441 2 295 4 919 2 144 2 594 4 147 2 1224 2 926 16 925 4 756 2 154 2 931 4 932 2 1232 2 161 2 460 4 1236 2 
770 2 2 4 1088 4 466 2 467 4 1093 2 316 4 1099 2 952 2 324 4 327 2 1112 2 1115 2 969 2 625 4 336 2 334 12 1119 4 793 2 187 2 340 24 975 4 29 4 342 4 346 4 349 2 1134 2 1138 2 986 4 354 2 648 2 815 2 509 4 816 2 510 2 1145 2 1147 2 660 2 1152 2 519 2 58 2 830 6 216 4 669 2 831 2 64 6 376 6 68 2 673 2 674 2 226 2 227 16 1166 1 681 6 684 2 236 2 854 2 242 4 396 4 542 2 249 4 859 12 406 6 407 2 1034 2 102 2 410 2 1039 2 1042 4 1190 2 420 2 1193 4 1051 4 429 2 274 4 1057 2 895 4 126 4 279 2 905 2 432 2 281 6 289 2 1212 2 290 2 291 2 133 2 1069 2 441 2 295 4 919 2 593 2 745 2 144 2 594 4 147 2 148 2 1224 2 926 16 925 4 756 2 154 2 931 4 932 2 1232 2 161 2 460 4 1236 2 
2 4 948 2 320 4 321 2 619 4 955 2 325 2 961 2 964 4 969 2 333 2 626 2 340 32 975 4 27 2 346 18 979 2 349 2 351 10 643 10 644 2 648 2 358 2 357 2 360 2 364 1 47 2 655 6 656 2 49 2 663 4 993 2 994 2 664 2 666 2 371 10 997 2 669 2 64 6 376 6 68 2 377 2 1003 12 379 2 1008 2 677 2 1009 6 1012 4 1014 2 683 2 83 2 684 2 387 2 1018 2 89 2 396 18 90 8 1028 4 403 2 406 2 100 2 1036 2 102 12 1039 2 105 2 710 10 107 2 718 2 1049 2 114 2 429 2 434 2 734 2 436 24 737 2 132 2 133 2 1069 2 441 12 739 2 741 2 145 10 1079 2 1081 2 455 10 765 14 161 2 459 1 770 2 462 2 1088 4 1091 2 776 2 775 11 467 4 777 10 1093 2 778 8 1096 2 1097 2 471 4 171 2 1099 2 786 3 480 4 482 2 1114 6 790 4 177 4 1119 2 796 4 497 2 799 2 803 2 190 2 805 10 806 10 809 2 505 2 1138 2 1140 2 1142 1 198 2 509 4 510 2 822 2 1147 11 825 42 1150 2 1152 2 519 2 1154 4 1155 1 212 2 521 2 217 12 219 2 834 2 224 2 225 2 532 2 236 2 1172 2 237 2 1173 4 540 2 542 2 1175 2 248 7 1177 14 858 2 863 4 1179 2 259 2 260 10 874 4 875 2 264 10 560 2 1187 2 879 11 1188 2 269 2 1190 2 272 2 573 2 1196 6 1200 4 891 4 893 2 276 2 278 14 902 2 583 2 284 4 910 4 288 14 1209 10 289 2 290 2 1215 6 919 18 1221 2 298 2 1223 2 926 24 597 2 305 10 932 2 1234 2 309 2 312 2 313 16 314 1 
462 2 643 4 775 2 777 2 198 2 737 2 1147 2 825 6 441 2 786 2 919 2 212 2 102 2 1036 2 145 2 879 2 926 2 718 2 305 2 340 2 309 2 683 2 532 2 123 2 
462 2 643 4 775 2 777 2 198 2 737 2 1147 2 825 6 441 2 786 2 919 2 212 2 102 2 1036 2 145 2 879 2 926 2 718 2 305 2 340 2 309 2 683 2 532 2 123 2 
462 2 643 4 775 2 777 2 198 2 737 2 1147 2 825 6 441 2 786 2 919 2 212 2 102 2 1036 2 145 2 879 2 926 2 718 2 305 2 340 2 309 2 683 2 532 2 123 2 
940 2 941 2 541 6 470 3 248 6 95 2 696 4 1028 2 98 2 1029 2 1181 3 1032 2 100 2 408 3 1036 2 879 3 19 2 1121 2 340 10 889 2 1204 2 987 4 198 2 910 2 655 4 1147 3 440 4 1153 2 919 2 1074 4 926 4 754 2 1079 2 758 2 452 4 1229 2 379 2 225 2 1012 2 853 4 
940 2 639 2 941 2 1204 2 541 6 987 4 198 2 910 2 248 4 470 2 95 2 696 4 863 2 655 4 1029 2 619 2 98 2 1028 2 1147 2 440 4 1181 2 100 2 1032 2 1153 2 919 2 408 2 1036 2 1074 4 879 2 926 4 19 2 754 2 1121 2 1079 2 758 2 452 4 225 2 379 2 1229 2 340 10 889 2 1012 2 853 4 
940 2 639 2 941 2 1204 2 541 6 987 4 198 2 910 2 248 4 470 2 95 2 696 4 863 2 655 4 1029 2 619 2 98 2 1028 2 1147 2 440 4 1181 2 100 2 1032 2 1153 2 919 2 408 2 1036 2 1074 4 879 2 926 4 19 2 754 2 1121 2 1079 2 758 2 452 4 225 2 379 2 1229 2 340 10 889 2 1012 2 853 4 
940 2 639 2 941 2 1204 2 541 6 987 4 198 2 910 2 248 4 470 2 95 2 696 4 863 2 655 4 1029 2 619 2 98 2 1028 2 1147 2 440 4 1181 2 100 2 1032 2 1153 2 919 2 408 2 1036 2 1074 4 879 2 926 4 19 2 754 2 1121 2 1079 2 758 2 452 4 225 2 379 2 1229 2 340 10 889 2 1012 2 853 4 
940 2 639 4 941 2 1204 2 541 6 987 4 198 2 910 2 248 4 470 2 95 2 696 4 863 4 655 4 1029 2 619 4 98 2 1028 2 1147 2 440 4 1181 2 100 2 1032 2 1153 2 919 2 408 2 1036 2 1074 4 879 2 926 4 19 2 754 2 1121 2 1079 2 758 2 452 4 225 2 379 2 1229 2 340 10 889 2 1012 2 853 4 
414 2 1218 2 120 2 1097 2 42 2 1024 2 
1210 2 350 2 264 2 458 2 598 2 717 2 1024 2 
239 2 356 1 8 2 129 2 287 2 946 1 319 2 473 2 988 2 513 2 989 2 54 1 1105 2 962 2 522 1 926 8 670 2 599 2 340 10 1165 2 381 2 427 2 767 1 1055 2 684 2 1059 2 
639 2 941 2 987 4 910 6 248 16 471 2 655 12 863 2 1028 6 619 5 1103 2 210 2 100 6 480 2 875 2 66 2 926 6 1079 6 379 6 225 6 340 6 1123 2 1196 4 1012 6 344 4 235 2 978 2 237 2 1202 2 390 2 
926 1 167 2 168 4 170 2 452 2 1005 2 453 2 1230 2 696 2 340 1 1067 2 589 1 308 2 680 6 1128 2 122 2 592 2 853 2 
167 2 168 4 170 2 453 2 452 2 1005 2 1230 4 696 2 1067 4 308 2 680 6 1128 4 122 2 592 2 853 2 
926 1 167 2 168 4 170 2 453 8 452 2 1005 2 1230 8 696 2 340 1 1067 8 589 1 308 6 680 10 1128 8 122 2 592 2 853 2 
167 2 168 2 170 2 452 2 1005 2 1230 2 696 2 1067 2 680 2 1128 2 122 2 592 2 853 2 
771 4 1088 88 464 2 1093 14 5 4 943 2 169 4 618 2 10 4 1102 10 477 4 1104 4 956 24 1108 10 1109 4 624 6 16 12 968 6 972 4 492 6 22 4 1122 1 340 150 339 8 191 6 804 2 345 6 502 8 1130 17 504 6 1133 2 197 6 1137 36 1136 2 646 6 1142 11 507 4 199 8 509 112 511 8 364 8 823 2 53 6 515 18 368 10 662 6 1155 8 995 90 213 26 520 4 60 50 668 2 998 4 220 2 523 18 376 248 222 24 524 8 839 8 841 16 380 6 528 4 846 6 1167 4 678 4 1166 4 1168 42 234 6 236 14 536 10 389 6 243 6 396 28 543 24 1177 4 1026 2 698 42 700 8 263 12 412 92 1039 8 268 2 110 2 713 10 1190 58 1044 6 421 4 1047 2 570 6 424 2 1050 2 883 4 428 2 429 58 116 4 1052 4 118 4 1053 6 119 2 278 22 582 6 904 16 433 84 1208 4 435 24 437 4 1214 2 294 2 139 6 1219 24 1220 6 920 16 744 4 595 4 751 124 447 26 1076 10 926 134 1078 6 455 34 760 10 763 8 160 10 457 6 459 16 163 2 607 24 939 90 
1088 10 396 16 776 2 1093 2 92 2 5 2 862 2 617 2 700 2 872 2 413 2 1039 2 110 2 417 2 1190 2 112 2 568 2 340 24 339 2 190 2 429 2 804 2 119 2 806 2 345 2 504 2 1133 2 900 2 1061 2 124 2 904 2 509 10 1066 4 208 4 1216 2 367 2 662 2 296 2 920 2 373 2 751 2 376 22 926 24 524 2 451 2 1078 2 842 2 841 2 1166 2 766 2 531 2 685 2 236 2 86 4 
164 8 1088 36 610 10 1093 6 943 2 169 4 1102 4 477 4 1108 6 1109 4 1110 4 624 4 968 4 972 4 492 4 22 4 340 78 339 2 191 4 804 2 345 4 32 10 1130 10 195 4 504 4 1133 2 197 4 1136 2 1137 6 39 4 646 4 507 4 509 44 364 4 48 2 511 6 823 2 53 4 1149 2 662 2 827 2 60 8 998 4 523 10 376 104 524 2 69 4 837 16 525 4 841 10 380 4 528 4 1167 4 678 2 1168 8 234 4 236 6 536 4 389 4 396 14 243 4 543 8 401 2 1025 8 698 16 700 2 263 14 103 2 412 24 1039 2 561 2 266 32 110 2 713 4 1190 28 1191 8 421 4 568 2 570 4 424 2 883 4 428 2 429 30 1053 4 119 2 582 4 904 10 732 8 433 24 1206 4 139 4 1220 4 920 10 1222 10 595 4 751 24 1076 4 926 70 757 2 1078 4 1228 16 455 30 763 4 1231 2 1082 4 457 4 459 8 
1088 14 243 4 396 14 1093 2 1177 2 860 2 618 2 700 2 1102 2 1108 2 1039 2 110 2 713 2 1190 12 22 2 568 2 1047 2 339 2 340 28 428 2 116 2 429 12 804 2 119 2 345 4 1130 2 504 4 1133 2 197 4 278 10 1137 2 904 6 1142 2 509 14 511 4 1214 2 294 2 662 2 1155 2 920 6 668 2 220 2 751 8 523 2 376 40 1076 2 926 26 524 2 1078 4 841 6 455 6 763 4 528 2 678 2 457 4 1166 2 459 6 236 2 536 2 
486 2 
438 1 1090 1 106 1 971 1 399 1 7 1 
438 1 1090 1 106 1 971 1 399 1 7 1 
438 1 1090 1 106 1 971 1 399 1 7 1 
438 1 1090 1 106 1 971 1 399 1 7 1 
438 1 1090 1 106 1 971 1 399 1 7 1 
438 1 1090 1 106 1 971 1 399 1 7 1 
438 1 1090 1 106 1 971 1 399 1 7 1 
438 1 1090 1 106 1 971 1 399 1 7 1 
438 1 1090 1 106 1 971 1 399 1 7 1 
438 1 1090 1 106 1 971 1 399 1 7 1 
438 1 1090 1 106 1 971 1 399 1 7 1 
438 1 1090 1 106 1 971 1 399 1 7 1 
438 1 1090 1 106 1 971 1 399 1 7 1 
438 1 1090 1 106 1 971 1 399 1 7 1 
438 1 1090 1 106 1 971 1 399 1 7 1 
438 1 1090 1 106 1 971 1 399 1 7 1 
438 1 1090 1 106 1 971 1 399 1 7 1 
438 1 1090 1 106 1 971 1 399 1 7 1 
438 1 1090 1 106 1 971 1 399 1 7 1 
438 1 1090 1 106 1 971 1 399 1 7 1 
438 1 1090 1 106 1 971 1 399 1 7 1 
438 1 1090 1 106 1 971 1 399 1 7 1 
438 1 1090 1 106 1 971 1 399 1 7 1 
438 1 1090 1 106 1 971 1 399 1 7 1 
438 1 1090 1 106 1 971 1 399 1 7 1 
438 1 1090 1 106 1 971 1 399 1 7 1 
438 1 1090 1 106 1 971 1 399 1 7 1 
438 1 1090 1 106 1 971 1 399 1 7 1 
438 1 1090 1 106 1 971 1 399 1 7 1 
438 1 1090 1 106 1 971 1 399 1 7 1 
438 1 1090 1 106 1 971 1 399 1 7 1 
438 1 1090 1 106 1 971 1 399 1 7 1 
438 1 1090 1 106 1 971 1 399 1 7 1 
438 1 1090 1 106 1 971 1 399 1 7 1 
438 1 1090 1 106 1 971 1 399 1 7 1 
438 1 1090 1 106 1 971 1 399 1 7 1 
438 1 1090 1 106 1 971 1 399 1 7 1 
438 1 1090 1 106 1 971 1 399 1 7 1 
438 1 1090 1 106 1 971 1 399 1 7 1 
438 1 1090 1 106 1 971 1 399 1 7 1 
438 1 1090 1 106 1 971 1 399 1 7 1 
438 1 1090 1 106 1 971 1 399 1 7 1 
438 1 1090 1 106 1 971 1 399 1 7 1 
438 1 1090 1 106 1 971 1 399 1 7 1 

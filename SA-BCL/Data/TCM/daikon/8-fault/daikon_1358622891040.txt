#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.NullPointerException 900 889 496 775 715 324 921 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 813 629 479 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 486 40 515 
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 486 40 515 
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.ProglangType:isScalar()Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.UpperBoundCore:calc_range()J
utilMDE.ArraysMDE:fn_is_total([I)Z
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:numIntArrays()I
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.FuzzyFloat:indexOf([D[D)I
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.VarInfo:new_ppt()V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
utilMDE.MathMDE:modulus([I)[I
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.MathMDE:gcd_differences([I)I
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Assert:assertTrue(Z)V
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.ArraysMDE:min([I)I
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
utilMDE.Intern:intern([D)[D
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.inv.unary.LowerBoundCore:computeProbability()D
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
jtb.JavaCharStream:UpdateLineColumn(C)V
jtb.syntaxtree.NodeToken:trimSpecials()V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
utilMDE.Intern:intern([I)[I
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
utilMDE.LimitedSizeIntSet:size()I
jtb.JavaParser:jj_3R_54()Z
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.Quant:subsetOf([J[J)Z
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I | CONSTANT | 65761 | 0 -> 1
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat; | CONDITION | 1730 | if (x) -> if (!x)
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
utilMDE.ArraysMDE:sum([I)I
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:eltsNotEqual([II)Z
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:eltwiseLTE([I)Z
utilMDE.FuzzyFloat:gte(DD)Z
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.Quant:lexEqual([I[I)Z
daikon.Quant:eltsLTE([II)Z
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.inv.Invariant:justified()Z
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
utilMDE.Intern:internSubsequence([III)[I
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.Quant:eq(FF)Z
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
utilMDE.FuzzyFloat:gt(DD)Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.PptSlice1:num_samples()I
daikon.inv.Invariants:Invariants()V
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:isReverse([I[I)Z
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.ProglangType:dimensions()I
daikon.Quant:eltsEqualIndex([I)Z
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.inv.unary.scalar.LowerBound:enabled()Z
utilMDE.ArraysMDE:min_max([I)[I
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_58()Z
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.PptMap:asCollection()Ljava.util.Collection;
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.VarInfoName:simplify_name()Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.PptSlice1:arity()I
daikon.inv.filter.ObviousFilter:ObviousFilter()V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE:noDuplicates([I)Z
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.Quant:pairwiseGT([I[I)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.Quant:eltsGtIndex([I)Z
utilMDE.ArraysMDE:max([I)I
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.inv.ValueSet:ValueSet(I)V
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_49()Z
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_53()Z
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:jj_2_13(I)Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.ArraysMDE:indexOf([I[I)I
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
jtb.JavaParser:jj_ntk()I
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
utilMDE.Intern:intern([J)[J
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:eltsLT([II)Z
daikon.Quant:memberOf(D[F)Z
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
jtb.JavaParser:jj_3R_134()Z
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:noDuplicates([J)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.ModBitTracker:split(I)I
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
utilMDE.FuzzyFloat:eq(DD)Z
utilMDE.FuzzyFloat:lt(DD)Z
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_56()Z
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Add:amount()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.Quant:eq(JJ)Z
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.Invariant:logOn()Z
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.ModBitTracker:ModBitTracker(I)V
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.Quant:eltwiseLT([I)Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:repr()Ljava.lang.String;
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.Quant:eltwiseNotEqual([I)Z
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.ProglangType:baseIsIntegral()Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.ArraysMDE:indexOf([II)I
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.Quant:subsetOf([F[F)Z
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
jtb.JavaParser:jj_3R_162()Z
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ProglangType:isArray()Z
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_135()Z
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE:sign(I)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
jtb.JavaCharStream:ReadByte()C
daikon.Quant:lexNotEqual([I[I)Z
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.Quant:gte(II)Z
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:pairwiseLTE([I[I)Z
daikon.VarInfoAux:hashCode()I
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.Quant:lt(II)Z
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
jtb.JavaParser:jj_3R_50()Z
utilMDE.MathMDE:nonmodulus_strict([I)[I
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_55()Z
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3_1()Z
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:sum([D)D
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.PptSlice0:arity()I
jtb.JavaParser:jj_3R_57()Z
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.PptSlice2:arity()I
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.diff.Node:children()Ljava.util.Iterator;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Quant:memberOf(J[J)Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:sum([[I)I
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:missing_numbers([I)[I
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.Quant:eq(II)Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:getConfidence()D
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.Quant:pairwiseLT([I[I)Z
jtb.JavaCharStream:backup(I)V
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakHasherMap:processQueue()V
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
utilMDE.MathMDE:gcd([I)I
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.Quant:eltsGT([II)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:fn_compose([I[I)[I
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:eltsGTE([II)Z
jtb.JavaParser:jj_3R_85()Z
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.Quant:gt(II)Z
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eltsLtIndex([I)Z
utilMDE.ArraysMDE:concat([I[I)[I
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.inv.Invariant:logDetail()Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.VarInfo:old_var_names(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:inPre()Z
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.Quant:pairwiseSquare([I[I)Z
daikon.test.InvariantFormatTester:execute()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.ValueTuple:size()I
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.ModBitTracker:num_vars()I
daikon.Quant:setDiff([I[I)[I
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_161()Z
jtb.JavaParser:jj_3_13()Z
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.Quant:subsetOf([B[I)Z
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_2_16(I)Z
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.Quant:concat([I[I)[I
utilMDE.OrderedPairIterator:setnext1()V
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
jtb.JavaCharStream:FillBuff()V
daikon.ValueTuple:isMissingFlow(I)Z
utilMDE.WeakHasherMap:size()I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.Quant:subsetOf([I[I)Z
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
utilMDE.OrderedPairIterator:hasNext()Z
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_52()Z
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.diff.Node:Node()V
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.OutputFormat:toString()Ljava.lang.String;
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.InvMap:toString()Ljava.lang.String;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Quant:sameLength([I[I)Z
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:subarray([JII)[J
daikon.VarInfo:relate_var()V
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.PptName:isEnterPoint()Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:memberOf(I[I)Z
daikon.inv.Invariant:prob_or(DD)D
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Invariant:prob_and(DD)D
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.VarInfoName:hashCode()I
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
jtb.JavaParser:jj_3R_133()Z
daikon.Quant:lexGTE([I[I)Z
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:lexLT([I[I)Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.PptSlice0:initInvariantsSeen()V
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.LimitedSizeIntSet:add(I)V
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.Token:newToken(I)Ljtb.Token;
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.VarInfo:name()Ljava.lang.String;
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
utilMDE.OrderedPairIterator:setnext2()V
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
jtb.JavaParser:jj_2_1(I)Z
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
jtb.syntaxtree.NodeOptional:NodeOptional()V
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.Quant:lexLTE([I[I)Z
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.Quant:subsetOf([D[D)Z
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.ValueTuple:isMissing(I)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
jtb.JavaParser:jj_3R_51()Z
daikon.diff.InvMap:InvMap()V
utilMDE.MathMDE:pow_fast(II)I
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.Quant:eltsEqual([II)Z
daikon.inv.unary.UpperBoundCore:calc_modulus()J
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:subsetOf([S[S)Z
daikon.Quant:subsetOf([F[D)Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
utilMDE.Intern:internSubsequence([JII)[J
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
utilMDE.Options.OptionInfo:argument_required()Z
utilMDE.FuzzyFloat:lte(DD)Z
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.JavaCharStream:getBeginLine()I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:sum([[D)D
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
utilMDE.MathMDE:mod_positive(II)I
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:fn_inverse([II)[I
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
jtb.JavaCharStream:readChar()C
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.Quant:lexGT([I[I)Z
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.Debug:logOn()Z
daikon.Quant:memberOf(F[F)Z
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:subarray([III)[I
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_163()Z
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
jtb.JavaCharStream:BeginToken()C
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.diff.RootNode:RootNode()V
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
jtb.JavaParser:jj_scan_token(I)Z
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:jj_3R_47()Z
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
jtb.JavaCharStream:getBeginColumn()I
daikon.ModBitTracker:num_sets()I
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.Quant:setEqual([I[I)Z
utilMDE.MathMDE:gcd(JJ)J
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
utilMDE.FuzzyFloat:ne(DD)Z
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eq(DD)Z
daikon.Quant:pairwiseDivides([I[I)Z
utilMDE.ArraysMDE:sorted([I)Z
utilMDE.MathMDE:negate(I)I
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn; | ASSIGN | 105786 | = null
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.Quant:ne(II)Z
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_69()Z
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.ProglangType:baseIsScalar()Z
daikon.Debug:logDetail()Z
daikon.test.FormatTestCase:passes()Z
daikon.inv.Invariant:isWorthPrinting()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
utilMDE.ArraysMDE:indexOf([ZZ)I
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:memberOf(F[D)Z
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.Quant:memberOf(S[S)Z
daikon.Quant:pairwiseEqual([I[I)Z
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.Quant:eltwiseEqual([I)Z
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_2_14(I)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:gcd(II)I
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
utilMDE.FuzzyFloat:indexOf([DD)I
utilMDE.WeakIdentityHashMap:indexFor(II)I
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.Quant:intersection([I[I)[I
daikon.Quant:slice([III)[I
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.PptName:isCombinedExitPoint()Z
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.ArraysMDE:element_range([I)I
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.ProglangType:isIntegral()Z
daikon.Quant:eltsGteIndex([I)Z
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
utilMDE.MathMDE:pow(II)I
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
jtb.JavaParser:jj_3R_48()Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.Quant:eltwiseGTE([I)Z
daikon.inv.Invariant:prob_and(DDD)D
daikon.inv.Invariant:format()Ljava.lang.String;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
jtb.JavaParser:jj_3_16()Z
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType; | ASSIGN | 47633 | = null
daikon.test.TestQuant:removeAdjacentDups([I)[I
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.Quant:union([I[I)[I
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eltsLteIndex([I)Z
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.ProglangType:isPseudoArray()Z
jtb.JavaCharStream:getEndColumn()I
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.inv.unary.LowerBoundCore:calc_modulus()J
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.Quant:eltwiseGT([I)Z
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName:name()Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:subsetOf([D[F)Z
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
jtb.JavaCharStream:getEndLine()I
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.ModBitTracker:num_samples()I
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
jtb.JavaParser:jj_3_14()Z
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Ppt:Ppt()V
daikon.inv.unary.scalar.UpperBound:enabled()Z
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.Quant:noDups([I)Z
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.Quant:lte(II)Z
daikon.PptTopLevel:name()Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
77 2 955 2 72 4 631 2 51 2 1 2 604 2 38 2 7 2 
630 6 194 2 510 6 412 2 94 2 532 2 271 6 952 2 917 2 722 2 186 2 
845 4 1 2 366 2 98 2 16 2 662 6 180 2 51 2 504 6 553 4 296 2 956 6 857 6 
687 10 385 8 90 26 1 6 269 16 565 2 343 16 466 8 695 4 126 2 65 16 67 6 281 4 794 4 10 12 164 8 647 10 740 4 289 8 349 10 350 10 447 2 902 2 417 10 51 6 144 2 420 30 603 2 683 2 230 6 
861 6 948 4 
142 2 
687 2 23 2 90 4 269 2 312 2 343 2 65 2 67 2 792 2 184 2 858 2 281 2 70 2 10 2 164 2 647 2 350 2 349 4 518 2 417 2 225 2 81 2 420 6 
687 4 475 2 10 5 90 12 613 4 647 4 350 4 269 8 600 6 868 2 445 6 326 4 343 8 417 4 65 8 420 14 794 2 
55 2 657 2 2 2 427 2 659 2 340 2 782 2 817 2 848 4 214 2 539 4 890 4 467 2 853 10 276 6 35 2 36 4 671 4 404 2 160 4 282 4 318 2 46 4 47 4 444 4 167 4 867 4 168 2 714 14 169 4 874 2 718 2 263 62 878 2 174 2 485 2 87 8 749 2 686 10 422 2 
688 2 57 2 92 2 60 2 503 2 369 2 142 2 678 2 806 2 360 2 
236 2 89 2 362 2 335 2 611 2 239 2 781 2 304 4 911 2 392 2 817 2 535 2 935 2 568 2 705 2 405 2 248 2 193 2 9 2 198 2 221 2 222 2 15 2 167 4 446 2 867 2 447 2 549 2 77 2 79 2 717 4 482 2 19 2 421 2 53 2 87 2 907 2 
687 16 56 4 90 48 1 4 613 4 930 8 269 32 460 4 178 4 818 2 343 32 466 6 65 32 219 6 67 4 763 4 281 2 862 6 192 2 10 22 164 18 647 16 833 2 350 16 349 6 600 6 601 6 445 6 326 4 953 2 417 16 419 2 872 6 51 4 294 4 144 2 420 54 905 2 230 4 
276 2 87 2 214 2 
689 2 774 10 104 2 596 2 26 2 28 2 521 2 218 2 854 2 421 2 246 22 856 2 132 2 247 2 
610 2 363 2 1 34 121 2 497 2 364 2 240 2 123 2 241 2 243 2 130 2 618 3 372 2 371 2 735 2 8 2 11 2 253 2 375 2 136 2 12 2 511 1 512 2 739 2 377 1 139 4 257 6 625 2 514 2 259 2 869 2 17 2 870 16 627 12 873 2 21 5 147 3 382 1 22 2 386 4 882 1 632 2 884 3 635 2 534 1 154 1 887 2 396 2 272 2 30 2 399 2 157 3 642 4 274 1 401 2 278 2 280 2 403 2 894 2 895 24 409 2 44 1 285 3 766 2 545 2 650 2 48 1 547 2 293 6 550 2 51 32 554 4 653 2 172 2 175 2 297 2 559 2 776 2 301 32 777 3 302 2 424 3 425 4 912 2 913 1 429 2 311 16 313 2 566 2 432 2 666 2 569 2 667 24 434 1 435 2 316 6 793 8 439 2 189 2 674 2 796 2 442 2 575 2 574 1 199 2 920 2 200 2 798 3 676 2 449 1 802 3 805 1 682 32 924 2 82 2 925 2 809 2 690 2 582 4 456 8 811 16 457 2 91 2 213 8 96 4 585 3 941 2 696 2 101 2 592 1 593 16 945 2 827 4 476 2 946 6 708 3 347 2 597 2 106 2 710 2 955 2 839 2 228 2 957 2 359 3 608 1 724 2 
578 2 
1 2 636 2 
1 4 886 2 580 2 
237 2 493 10 118 2 496 2 847 2 365 2 505 4 131 26 508 2 376 2 513 16 741 6 516 2 744 2 260 2 628 2 748 26 266 28 149 4 148 4 880 2 633 2 153 4 27 2 536 2 889 2 888 26 758 36 639 10 640 20 540 10 34 6 158 10 542 2 893 26 764 2 41 6 162 2 897 4 284 2 414 26 288 4 900 2 767 26 769 8 655 2 173 2 299 12 300 20 561 2 775 2 305 10 309 2 62 82 916 26 665 2 63 2 789 10 315 2 64 26 437 4 185 2 570 4 795 2 73 2 919 6 320 82 322 20 324 2 921 2 202 2 799 12 208 2 451 2 926 24 810 14 210 2 691 2 339 2 815 14 934 26 819 4 586 8 587 2 942 2 217 2 698 26 699 2 473 2 348 2 951 2 712 2 351 2 715 2 109 2 223 10 602 4 355 2 229 2 606 26 488 2 487 2 723 82 607 2 
407 2 558 2 571 2 840 1 
407 2 594 2 
407 2 577 2 901 2 740 2 87 2 133 2 859 2 
407 2 770 2 577 2 
407 2 524 2 577 2 
558 2 143 2 790 2 
407 2 577 2 
663 2 790 2 
407 2 99 2 
558 2 838 2 790 2 
558 2 413 2 323 2 
558 2 458 2 330 2 
558 2 195 2 958 2 
558 2 337 2 702 2 
843 2 790 2 
407 2 295 2 
275 2 323 2 
458 2 103 2 
922 2 958 2 
337 2 885 2 
790 2 156 2 
871 2 337 2 
197 2 958 2 
458 2 906 2 
461 2 323 2 
558 2 838 2 790 2 107 2 
558 2 838 2 790 2 107 2 321 2 
558 2 790 2 780 2 
558 2 478 2 790 2 
694 2 327 2 734 2 39 2 
509 2 87 2 133 2 462 2 
903 2 509 2 901 2 87 2 133 2 462 2 
407 2 484 2 577 2 740 2 87 2 133 2 
193 2 949 2 
860 2 740 2 87 2 133 2 
436 2 958 2 
337 2 450 2 
323 2 232 2 
458 2 108 2 
337 2 458 2 591 2 
646 2 337 2 458 2 
337 2 458 2 730 2 
337 2 588 2 458 2 
115 6 883 2 390 2 932 6 762 2 133 2 507 2 87 2 
387 2 736 2 779 4 75 4 268 2 931 2 307 2 649 2 498 2 215 2 820 2 837 2 679 2 680 2 128 2 246 6 279 2 233 2 
558 2 626 2 
719 2 790 2 
575 2 
610 2 491 2 363 2 1 26 364 2 497 2 368 2 241 2 370 2 372 2 735 2 251 2 8 6 136 2 377 2 139 4 257 2 259 4 870 6 627 8 873 2 386 4 25 2 635 2 887 2 393 2 272 2 538 2 30 2 759 2 274 2 278 2 280 2 409 2 42 2 545 2 293 4 550 2 51 26 554 2 653 2 301 6 425 2 429 2 179 2 566 2 316 2 189 2 190 2 674 2 200 2 677 4 803 2 682 4 88 2 454 2 809 2 690 2 582 4 457 2 213 2 96 4 941 2 696 2 101 2 821 2 827 2 946 6 597 2 106 2 834 4 950 2 955 2 957 2 
610 2 491 2 363 2 1 26 364 2 497 2 241 2 370 2 372 2 735 2 251 2 8 6 136 2 377 2 139 4 257 2 259 4 870 6 627 8 873 2 264 2 386 4 25 2 635 2 887 2 393 2 755 2 272 2 538 2 30 2 274 2 278 2 280 2 894 2 409 2 42 2 545 2 293 6 550 2 51 26 554 2 653 2 175 2 301 6 425 2 429 2 179 2 566 2 316 2 189 2 190 2 674 2 200 2 677 4 803 2 682 4 454 2 809 2 690 2 582 4 457 2 213 2 96 4 941 2 696 2 101 2 821 2 827 2 476 2 946 6 597 2 106 2 834 4 950 2 354 2 955 2 957 2 
342 2 
165 2 899 2 
235 2 177 2 910 2 1 12 58 2 364 2 615 2 241 2 733 2 617 2 917 2 186 2 572 2 863 2 621 2 674 2 510 6 573 2 13 2 254 2 76 2 139 2 380 4 145 2 85 2 384 4 386 2 581 2 630 6 690 2 336 2 754 4 583 4 532 4 271 6 272 2 940 2 638 2 756 8 644 2 943 2 159 2 826 2 220 2 544 4 946 4 832 8 45 2 106 2 545 2 49 2 353 4 552 2 51 6 227 2 171 2 656 2 722 4 959 10 609 2 
235 2 726 4 177 2 495 2 910 2 1 12 58 2 364 2 615 2 241 2 733 2 617 2 917 2 186 2 621 2 674 2 510 6 573 2 13 2 254 2 139 2 76 2 380 4 145 2 85 2 384 4 386 2 581 2 630 8 690 2 336 2 754 4 583 4 532 4 271 8 272 2 638 2 756 8 940 2 644 2 943 2 159 2 826 2 220 2 544 4 946 4 832 8 45 2 412 2 106 2 545 2 49 2 353 4 552 2 51 6 227 2 171 2 358 2 656 2 722 4 959 10 609 2 
177 2 630 2 544 4 510 2 573 2 754 4 532 2 615 2 49 2 638 2 940 2 552 2 733 2 145 2 656 2 159 2 722 2 384 2 
235 2 177 2 910 2 1 12 58 2 364 2 615 2 241 2 733 2 617 2 917 2 572 2 863 2 621 2 674 2 510 4 573 2 13 2 254 2 76 2 139 2 380 4 145 2 85 2 384 4 386 2 581 2 630 6 690 2 336 2 754 4 583 4 532 4 271 6 272 2 940 2 638 2 756 4 644 2 943 2 159 2 826 2 220 2 544 4 946 4 832 4 45 2 412 2 106 2 545 2 49 2 353 4 552 2 51 6 227 2 171 2 656 2 722 4 959 6 609 2 
235 2 177 2 910 2 1 12 58 2 364 2 615 2 241 2 733 2 617 2 917 2 572 2 194 2 863 2 621 2 674 2 510 6 573 2 13 2 254 2 76 2 139 2 380 4 145 2 85 2 384 4 386 2 581 2 630 4 690 2 336 2 754 4 583 4 532 4 271 6 272 2 940 2 638 2 756 4 644 2 943 2 159 2 826 2 220 2 544 4 946 4 832 4 45 2 106 2 545 2 49 2 353 4 552 2 51 6 227 2 171 2 656 2 722 4 959 6 609 2 
235 2 177 2 910 2 1 12 58 2 364 2 615 2 241 2 733 2 617 2 917 2 186 2 572 2 863 2 621 2 674 2 510 6 573 2 13 2 254 2 76 2 139 2 380 4 145 2 85 2 384 4 386 2 581 2 630 6 690 2 336 2 754 4 583 4 532 4 271 6 272 2 940 2 638 2 756 8 644 2 943 2 159 2 826 2 220 2 544 4 946 4 832 4 45 2 106 2 545 2 49 2 353 4 552 2 51 6 227 2 171 2 656 2 722 4 959 6 609 2 
235 2 177 2 910 2 1 12 58 2 364 2 615 2 241 2 733 2 617 2 917 2 186 2 572 2 194 2 863 2 621 2 674 2 510 8 573 2 13 2 254 2 139 2 76 2 380 4 145 2 85 2 384 4 386 2 581 2 630 6 690 2 336 2 754 4 583 4 532 4 271 8 272 2 940 2 638 2 756 8 644 2 943 2 159 2 826 2 220 2 544 4 946 4 832 8 45 2 106 2 545 2 49 2 353 4 552 2 51 6 227 2 171 2 656 2 722 4 959 10 609 2 
235 2 177 2 910 2 1 12 58 2 364 2 615 2 241 2 733 2 617 2 917 2 186 2 572 2 863 2 621 2 674 2 510 6 573 2 13 2 254 2 76 2 139 2 380 4 145 2 85 2 384 4 386 2 581 2 630 6 690 2 336 2 754 4 583 4 532 4 271 6 272 2 940 2 638 2 756 8 644 2 943 2 159 2 826 2 220 2 544 4 946 4 832 8 45 2 106 2 545 2 49 2 353 4 552 2 51 6 227 2 171 2 656 2 722 4 959 10 609 2 
235 2 494 2 1 46 3 1 499 2 241 2 733 2 735 12 249 2 8 6 510 8 254 2 13 2 255 2 256 6 257 2 18 6 754 4 25 2 531 6 532 4 270 10 271 12 272 2 756 2 30 2 278 2 42 2 544 4 45 2 545 2 49 2 293 6 550 2 552 2 51 24 554 2 772 2 298 7 301 8 778 2 58 2 59 6 308 1 785 2 566 2 316 2 69 2 572 2 317 2 573 2 76 2 328 2 85 2 578 6 580 6 581 2 336 2 582 4 812 2 583 8 814 2 96 4 101 2 102 2 825 2 826 4 827 2 831 2 106 2 834 4 599 1 353 4 356 2 609 2 610 2 119 4 364 2 615 2 125 2 617 2 127 6 370 2 855 6 619 2 621 2 136 2 865 2 135 7 138 6 139 4 141 2 870 6 380 6 627 4 873 2 875 6 145 2 384 4 386 4 630 4 636 6 887 2 395 2 637 2 638 2 398 1 644 2 159 2 894 2 896 8 410 6 163 2 415 2 166 2 653 2 171 2 175 2 656 2 908 6 177 2 910 2 423 2 425 2 428 1 429 2 917 4 668 6 669 1 918 6 189 2 190 4 188 2 191 1 194 4 674 2 200 2 682 2 690 2 928 2 213 2 459 6 465 2 940 2 696 2 697 4 469 2 943 2 706 1 220 2 946 6 224 2 955 2 226 2 227 4 957 2 722 4 959 2 490 1 
235 2 610 2 494 2 119 4 1 48 364 2 615 2 499 2 241 2 125 2 733 2 617 2 127 6 855 6 370 2 619 2 249 2 735 12 8 6 621 2 510 8 865 2 136 2 13 2 254 2 255 2 138 6 256 6 743 2 257 2 139 4 259 2 141 2 870 6 380 6 627 8 873 2 18 6 875 6 145 2 384 4 386 4 630 8 25 2 754 4 531 6 636 6 532 4 270 10 887 2 271 12 395 2 637 2 272 2 30 2 756 6 638 2 644 2 278 2 159 2 894 2 896 8 42 2 410 6 544 4 163 2 45 2 415 2 166 2 545 2 49 2 293 6 550 2 552 2 51 26 554 4 653 2 171 2 772 2 656 2 175 2 908 6 177 2 301 8 910 2 778 2 423 2 58 2 59 6 425 4 429 2 785 2 566 2 917 4 66 2 668 6 316 2 186 4 918 6 69 2 188 2 190 4 189 2 572 2 317 2 674 2 573 2 200 2 76 2 328 2 682 2 578 6 85 2 580 6 581 2 690 2 336 2 582 4 812 2 928 2 583 8 814 2 459 6 213 2 96 4 465 2 940 2 696 2 697 4 101 2 469 2 102 2 943 2 825 2 826 4 220 2 827 4 946 6 831 2 834 4 106 2 224 2 353 4 955 2 226 2 356 2 227 4 957 2 722 4 959 2 609 2 
235 2 610 2 494 2 119 4 1 48 364 2 615 2 499 2 241 2 125 2 733 2 617 2 127 6 855 6 370 2 619 2 249 2 735 12 8 6 621 2 510 8 865 2 136 2 13 2 254 2 255 2 138 6 256 6 743 2 257 2 139 4 259 2 141 2 870 6 380 6 627 8 873 2 18 6 875 6 145 2 384 4 386 4 630 8 25 2 754 4 531 6 636 6 532 4 270 10 887 2 271 12 395 2 637 2 272 2 30 2 756 6 638 2 644 2 278 2 159 2 894 2 896 8 42 2 410 6 544 4 163 2 45 2 415 2 166 2 545 2 49 2 293 6 550 2 552 2 51 26 554 4 653 2 171 2 772 2 656 2 175 2 908 6 177 2 301 8 910 2 778 2 423 2 58 2 59 6 425 4 429 2 785 2 566 2 917 4 66 2 668 6 316 2 186 4 918 6 69 2 188 2 190 4 189 2 572 2 317 2 674 2 573 2 200 2 76 2 328 2 682 2 578 6 85 2 580 6 581 2 690 2 336 2 582 4 812 2 928 2 583 8 814 2 459 6 213 2 96 4 465 2 940 2 696 2 697 4 101 2 469 2 102 2 943 2 825 2 826 4 220 2 827 4 946 6 831 2 832 4 834 4 106 2 224 2 353 4 955 2 226 2 356 2 227 4 957 2 722 4 959 6 609 2 
235 2 494 2 1 52 499 2 4 6 241 2 733 2 735 10 249 2 8 8 510 10 254 2 13 2 14 6 255 2 256 6 743 2 257 4 259 2 18 12 754 4 25 2 531 6 532 4 270 8 271 16 537 6 272 2 756 6 30 2 278 2 37 6 42 4 544 4 45 2 545 2 49 2 293 6 550 2 552 2 51 24 554 4 772 2 301 12 778 2 58 2 59 6 785 2 566 2 787 2 66 2 316 4 69 2 572 2 317 2 573 2 76 2 328 2 85 2 578 12 580 12 581 2 336 2 582 4 812 2 583 8 814 2 96 4 101 2 102 2 825 2 826 4 827 4 832 4 106 2 834 6 836 2 353 4 112 2 356 2 609 2 610 2 119 4 364 2 615 2 125 2 617 2 127 6 370 2 855 12 619 2 621 2 136 2 865 2 137 2 624 2 138 12 139 4 141 2 870 8 380 6 627 10 873 2 875 6 145 2 384 4 386 4 630 10 152 2 634 6 636 12 887 2 395 2 637 2 638 2 644 2 159 2 894 2 896 8 410 6 163 2 412 2 415 2 166 2 653 2 171 2 175 2 656 2 908 6 177 2 910 2 423 2 425 4 429 2 664 6 917 4 668 6 186 4 918 6 189 2 190 4 188 2 194 2 674 2 200 2 203 6 682 4 690 2 928 2 213 4 459 6 693 6 465 2 940 2 696 2 697 4 469 2 943 2 704 2 220 2 946 6 947 2 709 6 224 2 955 2 226 2 227 4 957 2 722 4 959 6 
235 2 581 2 177 2 630 6 336 2 910 2 1 4 754 2 583 2 58 2 532 4 271 4 756 6 638 2 940 2 917 2 644 2 943 2 186 2 572 2 544 2 621 2 510 6 832 4 573 2 76 2 49 2 380 2 353 2 145 2 85 2 656 2 722 4 959 4 609 2 
235 2 610 2 238 2 0 2 1 28 364 2 241 2 370 2 735 4 8 6 621 2 253 2 510 6 136 2 139 4 257 3 869 2 870 6 380 2 873 2 145 2 386 4 630 6 754 2 25 2 532 4 270 2 271 4 272 2 30 2 638 2 756 6 644 2 278 2 894 2 544 2 45 2 545 2 49 2 293 6 550 2 51 24 653 2 175 2 656 2 177 2 301 8 910 2 58 2 562 2 429 2 566 2 567 3 917 2 569 2 316 3 186 2 189 2 190 2 572 2 674 2 573 2 575 2 200 2 76 2 682 3 85 2 332 2 581 2 690 2 336 2 582 4 211 2 583 2 96 4 940 2 696 2 101 2 943 2 946 6 831 2 106 2 834 4 353 2 955 2 957 2 722 4 959 2 609 2 
151 2 85 2 943 2 
151 2 85 2 943 2 
610 2 119 2 1 24 364 2 241 2 733 2 370 2 249 2 735 4 8 2 621 2 510 12 136 2 254 2 139 4 870 2 519 2 380 4 627 4 381 2 873 2 145 2 384 4 530 2 386 4 630 12 752 2 151 2 25 2 754 2 532 4 270 2 887 4 271 16 272 2 30 2 756 6 278 2 159 2 894 2 410 2 544 2 43 2 163 2 898 2 412 4 545 2 293 6 550 2 51 16 554 4 653 2 171 2 555 2 175 2 656 4 557 2 54 2 301 2 58 2 425 4 563 2 566 2 917 4 186 4 68 2 187 4 189 2 190 6 194 4 674 2 200 2 682 2 85 6 454 4 690 2 582 4 583 4 96 4 97 2 936 4 344 2 940 2 696 2 697 2 101 2 943 4 825 2 220 2 826 4 829 2 827 4 946 6 832 4 106 2 480 2 353 2 955 2 954 2 227 2 957 2 722 4 231 2 959 6 
735 2 54 2 410 2 829 2 119 2 165 2 1 4 660 2 364 2 270 2 97 2 431 2 637 2 552 2 51 2 791 2 102 2 
610 2 1 24 364 2 241 2 733 2 617 2 370 2 249 2 735 2 8 2 621 2 510 12 136 2 254 2 866 2 139 4 870 2 519 4 380 4 627 4 381 2 873 2 145 2 384 4 530 2 386 4 630 12 752 2 151 2 25 2 754 2 532 4 887 4 271 16 272 2 30 2 756 6 278 2 159 2 894 2 410 2 544 2 43 2 163 2 898 2 412 4 286 2 545 2 293 6 551 2 550 2 51 16 554 4 653 2 654 2 52 2 171 2 555 2 175 2 656 4 54 2 301 2 58 2 425 4 563 2 566 2 917 4 186 4 187 4 189 2 190 6 194 4 674 2 200 2 682 4 85 6 454 4 690 2 582 4 583 4 96 4 97 2 936 4 940 2 696 2 697 2 101 2 943 4 825 2 220 2 826 4 829 2 827 4 946 6 832 4 106 2 480 2 353 2 955 2 954 2 227 4 957 2 722 4 959 6 
610 2 119 2 1 24 364 2 241 2 6 2 733 2 617 2 370 2 249 2 735 4 8 2 621 2 510 12 136 2 254 2 139 4 870 2 519 2 380 4 627 4 381 2 873 2 145 2 384 4 530 2 386 4 630 12 752 2 151 2 25 2 754 2 532 4 270 2 887 4 271 16 272 2 30 2 756 6 278 2 892 2 159 2 894 2 410 2 544 2 43 2 163 2 898 2 412 4 545 2 546 2 293 6 550 2 51 16 554 4 653 2 171 2 555 2 175 2 656 4 54 2 301 2 303 2 58 2 425 4 563 2 566 2 917 4 186 4 187 4 189 2 190 6 194 4 674 2 200 2 682 2 85 6 454 4 333 2 690 2 582 4 583 4 96 4 97 2 936 4 940 2 696 2 697 2 101 2 943 4 825 2 220 2 826 4 829 2 827 4 946 6 832 4 106 2 480 2 353 2 955 2 954 2 227 4 957 2 722 4 959 6 
844 2 727 2 492 2 1 26 364 2 367 2 499 2 241 2 619 2 735 2 252 2 8 6 136 2 865 2 738 2 139 4 257 2 870 6 627 2 747 1 262 2 876 2 527 4 528 2 386 4 629 2 751 1 25 2 269 2 533 1 272 2 757 2 30 2 641 2 643 6 402 2 278 2 42 2 647 2 166 2 545 2 548 4 293 2 417 2 51 20 420 6 904 2 909 2 301 8 778 2 564 2 429 2 566 2 65 2 316 2 672 2 440 2 69 2 189 2 190 2 674 2 675 2 200 2 576 2 326 2 682 2 207 2 209 2 86 2 331 2 687 2 690 2 582 2 90 4 212 2 813 2 213 2 95 2 96 2 341 2 343 2 345 2 696 2 100 2 101 2 823 2 471 2 944 2 946 6 106 2 834 4 479 2 350 2 600 4 955 2 356 2 114 2 721 2 720 2 957 2 234 2 
658 2 560 2 301 2 612 2 1 2 306 4 501 2 429 2 786 2 850 3 760 2 245 2 316 3 161 2 42 6 8 2 828 2 834 2 257 3 870 2 51 2 522 2 804 2 682 3 
658 2 560 2 301 2 612 2 1 2 306 4 501 2 429 2 786 2 850 2 760 2 245 2 316 2 161 2 42 6 8 2 828 2 834 2 257 2 870 2 51 2 522 2 804 2 682 2 
658 2 560 2 301 2 612 2 1 2 306 4 501 2 429 2 786 2 850 2 760 2 245 2 316 2 161 2 42 6 8 2 828 2 834 2 257 2 870 2 51 2 522 2 804 2 682 2 
687 2 658 2 301 2 90 4 811 2 1 10 614 2 269 2 155 4 429 2 394 4 584 4 616 3 311 2 915 2 343 2 314 2 466 4 852 2 65 2 590 2 670 4 411 6 477 4 647 2 737 2 350 2 742 3 290 2 257 3 78 2 261 2 417 2 80 2 418 3 51 4 807 2 420 5 682 3 230 2 
658 2 301 2 1 10 614 2 429 2 311 2 616 2 915 2 314 2 852 2 65 2 670 4 10 2 737 2 742 2 257 2 78 2 261 2 80 2 144 2 682 2 807 2 687 2 811 2 90 4 269 2 155 4 584 4 394 4 343 2 466 4 590 2 411 6 164 2 477 4 647 2 350 2 290 2 417 2 418 2 51 4 420 4 230 2 
658 2 301 2 1 10 614 2 429 2 311 2 616 2 915 2 314 2 852 2 65 2 670 4 10 2 737 2 742 2 257 2 78 2 261 2 80 2 144 2 682 2 807 2 687 2 811 2 90 4 269 2 155 4 584 4 394 4 343 2 466 4 590 2 411 6 164 2 477 4 647 2 350 2 290 2 417 2 418 2 51 4 420 4 230 2 
658 2 301 2 1 10 614 2 429 2 311 2 616 2 915 2 314 2 852 2 65 2 670 4 10 2 737 2 742 2 257 2 78 2 261 2 80 2 144 2 682 2 807 2 687 2 811 2 90 4 269 2 155 4 584 4 394 4 343 2 466 4 590 2 411 6 164 2 477 4 647 2 350 2 290 2 417 2 418 2 51 4 420 4 230 2 
658 2 301 2 1 10 614 2 429 2 311 2 616 2 915 2 314 2 852 2 65 2 670 4 10 4 737 2 742 2 257 2 78 2 261 2 80 2 144 4 682 2 807 2 687 2 811 2 90 4 269 2 155 4 584 4 394 4 343 2 466 4 590 2 411 6 164 4 477 4 647 2 350 2 290 2 417 2 418 2 51 4 420 4 230 2 
520 2 455 2 771 2 378 2 176 2 489 2 
251 2 400 2 196 2 113 2 74 2 319 2 176 2 
879 2 657 1 24 2 388 2 1 10 938 2 272 2 32 2 244 2 277 2 470 1 373 2 250 1 374 1 346 2 648 2 140 2 768 2 517 2 481 2 51 8 652 2 483 2 18 2 878 1 808 2 
687 6 90 12 1 6 930 2 269 6 341 2 343 6 181 2 466 4 65 6 763 2 862 4 944 2 10 5 164 3 647 6 350 6 600 4 326 2 79 2 417 6 51 6 50 2 144 2 420 15 357 2 905 1 556 2 230 2 685 2 528 2 
408 4 116 2 773 2 334 1 283 2 623 2 1 1 881 2 61 2 155 2 394 2 31 7 51 1 523 2 681 2 206 2 670 2 406 2 
116 2 408 4 773 2 283 4 623 4 881 2 61 2 155 2 394 2 31 6 523 4 681 2 206 2 670 2 406 2 
116 8 408 4 773 2 334 1 283 8 623 8 1 1 881 2 61 2 155 2 394 2 31 10 51 1 523 8 681 6 206 2 670 2 406 2 
408 2 773 2 283 2 623 2 881 2 61 2 155 2 394 2 31 2 523 2 206 2 670 2 406 2 
361 2 1 20 728 2 849 2 731 1 242 2 136 4 258 2 515 2 745 2 20 2 526 2 150 2 389 2 397 2 273 1 278 4 894 4 645 1 40 2 651 2 293 14 51 20 175 4 783 4 784 2 914 2 183 2 797 1 201 1 325 2 329 2 452 2 579 2 453 4 582 8 927 2 929 4 93 2 816 4 692 2 96 6 933 2 216 4 101 4 111 1 486 2 842 1 
725 2 120 2 1 46 728 2 729 2 426 2 846 2 122 2 661 2 500 2 310 2 430 4 124 2 502 2 788 4 851 2 182 2 438 2 506 2 71 2 134 4 441 2 673 2 622 2 864 2 136 2 443 2 515 2 800 2 448 2 801 2 746 2 525 2 204 6 205 2 877 2 83 2 923 2 84 4 146 2 684 2 452 4 383 2 265 6 529 2 750 2 267 2 927 2 582 20 929 38 338 4 389 2 96 20 463 2 464 2 933 2 29 2 937 2 939 2 397 2 216 6 101 2 468 2 541 2 589 2 700 2 701 2 822 2 278 2 703 2 824 4 472 2 40 2 543 4 595 2 105 2 287 2 598 2 416 2 713 2 291 2 835 2 292 2 293 42 111 2 170 2 51 44 605 2 486 2 842 2 
1 26 728 2 783 2 784 2 430 2 661 2 914 2 849 2 788 2 242 2 732 2 182 2 433 4 129 2 620 2 506 2 136 2 325 4 515 2 379 2 745 2 20 2 877 2 329 2 452 2 453 6 927 2 582 10 753 2 929 14 389 2 93 2 816 6 692 2 96 8 933 2 939 2 216 6 33 2 101 2 468 2 891 2 278 2 894 4 40 2 543 2 472 2 595 2 830 4 651 2 292 2 293 20 51 26 841 4 175 4 486 2 842 2 
117 2 361 2 1 28 728 2 729 2 846 2 430 6 661 2 731 2 124 4 788 6 5 2 502 4 183 2 506 2 71 4 673 2 136 2 797 2 443 4 258 10 201 2 515 2 800 2 526 10 452 2 265 6 579 2 927 2 582 14 929 14 389 2 391 2 96 14 933 2 29 4 273 6 216 8 761 4 101 2 278 2 822 2 894 10 765 2 40 2 543 6 472 2 474 2 287 2 711 4 835 2 292 2 293 38 352 2 110 2 111 2 716 2 170 4 51 26 175 10 486 2 842 2 
707 2 

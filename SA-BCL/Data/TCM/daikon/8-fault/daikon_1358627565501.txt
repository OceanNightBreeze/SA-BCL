#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V ERROR utilMDE.Options$ArgException 313 332 
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.NoClassDefFoundError 487 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V PASSED
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V ERROR java.lang.NoClassDefFoundError 278 
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V ERROR java.lang.NoClassDefFoundError 278 
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NoClassDefFoundError 278 
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NoClassDefFoundError 278 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NoClassDefFoundError 278 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NoClassDefFoundError 748 178 549 29 287 
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V FAILED junit.framework.AssertionFailedError 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NoClassDefFoundError 323 300 501 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NoClassDefFoundError 323 300 501 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NoClassDefFoundError 323 300 501 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NoClassDefFoundError 323 300 501 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
utilMDE.Intern:intern([J)[J
utilMDE.ArraysMDE:fn_compose([I[I)[I
jtb.syntaxtree.NodeListOptional:getParent()Ljtb.syntaxtree.Node;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.Quant:subsetOf([J[J)Z
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
utilMDE.LimitedSizeIntSet:size()I
daikon.tools.jtb.Ast:print(Ljtb.syntaxtree.Node;)Ljava.lang.String;
jtb.JavaParser:jj_2_21(I)Z
jtb.syntaxtree.NodeSequence:accept(Ljtb.visitor.Visitor;)V
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
jtb.JavaParser:jj_3_29()Z
jtb.syntaxtree.ExclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Block;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AdditiveExpression;)V
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.Quant:isReverse([I[I)Z
jtb.JavaParser:jj_3R_77()Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor.1:visit(Ljtb.syntaxtree.TypeParameter;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
utilMDE.Intern.SequenceAndIndices:hashCode()I
jtb.JavaCharStream:ReadByte()C
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AndExpression;)V
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
daikon.ModBitTracker:num_samples()I
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
jtb.syntaxtree.ClassOrInterfaceType:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.EqualityExpression;)V
jtb.syntaxtree.TypeArgument:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_133()Z
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_2_14(I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Expression;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeToken;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Modifiers;)V
daikon.tools.jtb.Ast:create(Ljava.lang.String;Ljava.lang.String;)Ljtb.syntaxtree.Node;
utilMDE.MathMDE:gcd_differences([I)I
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.tools.jtb.Ast:removeWhitespace(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.PptName:PptName(Ljava.lang.String;)V
jtb.JavaParser:jj_3R_99()Z
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.Quant:subsetOf([S[S)Z
utilMDE.UtilMDE:removeWhitespaceAfter(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljtb.syntaxtree.Node;)Z
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.test.TestQuant:assert_arrays_equals([I[I)V
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:eq(II)Z
jtb.JavaParser:jj_2_16(I)Z
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.tools.jtb.PptNameMatcher:getUngenerifiedType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.syntaxtree.UnaryExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.VariableDeclaratorId:VariableDeclaratorId(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.ArraysMDE:subarray([JII)[J
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
jtb.JavaParser:jj_3R_134()Z
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
daikon.Quant:memberOf(F[F)Z
jtb.syntaxtree.InstanceOfExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_ntk()I
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
utilMDE.MathMDE:gcd(JJ)J
jtb.JavaParser:jj_3R_104()Z
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.Quant:subsetOf([B[I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.RelationalExpression;)V
daikon.ProglangType:dimensions()I
utilMDE.Intern:intern([I)[I
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ReferenceType;)V
utilMDE.ArraysMDE:min_max([I)[I
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:jj_3R_109()Z
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.Quant:pairwiseGTE([I[I)Z
jtb.syntaxtree.NullLiteral:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3_17()Z
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
jtb.JavaParser:jj_3R_67()Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
jtb.JavaParser:jj_3R_76()Z
jtb.JavaParser:jj_3R_60()Z
jtb.JavaCharStream:backup(I)V
jtb.JavaParser:jj_2_10(I)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
jtb.JavaParser:jj_3R_98()Z
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InclusiveOrExpression;)V
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
jtb.JavaParser:jj_3R_124()Z
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
jtb.syntaxtree.ClassOrInterfaceBody:ClassOrInterfaceBody(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.NodeChoice:getParent()Ljtb.syntaxtree.Node;
jtb.visitor.TreeDumper:printToken(Ljava.lang.String;)V
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_87()Z
jtb.syntaxtree.VariableDeclaratorId:accept(Ljtb.visitor.Visitor;)V
daikon.tools.jtb.Ast.1GetParametersVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Literal;)V
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern:internSubsequence([III)[I
jtb.visitor.TreeFormatter:processList(Ljtb.syntaxtree.NodeListInterface;Ljtb.visitor.FormatCommand;)V
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.PptName:getMethodName()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InstanceOfExpression;)V
jtb.JavaParser:jj_scan_token(I)Z
jtb.visitor.TreeFormatter:TreeFormatter(II)V
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
utilMDE.ArraysMDE:noDuplicates([D)Z
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.OrderedPairIterator:setnext1()V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljava.lang.String;Ljava.lang.String;Ljava.util.List;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.Quant:lexLT([I[I)Z
jtb.JavaParser:jj_3R_86()Z
daikon.Quant:eltsLT([II)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameters;)V
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_75()Z
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.tools.jtb.PptNameMatcher:PptNameMatcher(Ljtb.syntaxtree.Node;)V
daikon.Quant:subsetOf([F[F)Z
utilMDE.ArraysMDE:noDuplicates([J)Z
jtb.JavaCharStream:FillBuff()V
daikon.Quant:concat([I[I)[I
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.Type;)V
jtb.syntaxtree.FormalParameter:FormalParameter(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Type;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.VariableDeclaratorId;)V
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.RelationalExpression:accept(Ljtb.visitor.Visitor;)V
daikon.tools.jtb.Ast:format(Ljtb.syntaxtree.Node;)Ljava.lang.String;
jtb.JavaParser:jj_2_1(I)Z
jtb.JavaParser:jj_3R_108()Z
jtb.JavaParser:jj_3R_57()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
jtb.JavaParser:jj_3R_69()Z
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.FuzzyFloat:isSubset([D[D)Z
utilMDE.ArraysMDE:isSubset([D[D)Z
jtb.syntaxtree.TypeArgument:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltwiseEqual([I)Z
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
jtb.JavaParser:jj_3R_89()Z
jtb.syntaxtree.MethodDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.JavaParser:jj_3R_126()Z
daikon.Quant:subsetOf([D[F)Z
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
utilMDE.Intern:internSubsequence([JII)[J
jtb.visitor.FormatCommand:getNumCommands()I
jtb.JavaParser:jj_3_18()Z
jtb.JavaParser:jj_3R_106()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalExpression;)V
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap.EntrySet:size()I
jtb.syntaxtree.ShiftExpression:accept(Ljtb.visitor.Visitor;)V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
jtb.JavaParser:jj_3R_101()Z
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.Quant:gte(II)Z
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.tools.jtb.Ast:getClassName(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.Quant:lexGT([I[I)Z
jtb.syntaxtree.TypeDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.MethodDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.tools.jtb.Ast:getPackage(Ljtb.syntaxtree.CompilationUnit;)Ljava.lang.String;
daikon.Quant:eltsGtIndex([I)Z
daikon.test.TestAst:checkMatch(Ljava.lang.String;Ljtb.syntaxtree.MethodDeclaration;Ldaikon.tools.jtb.PptNameMatcher;)V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:copy(Ljava.util.HashMap;)Ljava.util.HashMap;
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.Quant:lexLTE([I[I)Z
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeDeclaration;)V
utilMDE.FuzzyFloat:indexOf([DD)I
utilMDE.FuzzyFloat:lt(DD)Z
jtb.syntaxtree.ClassOrInterfaceDeclaration:ClassOrInterfaceDeclaration(Ljtb.syntaxtree.NodeChoice;Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ClassOrInterfaceBody;)V
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.visitor.TreeFormatter:add(Ljtb.visitor.FormatCommand;)V
utilMDE.ArraysMDE:indexOf([I[I)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ShiftExpression;)V
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.ValueTuple:isMissing(I)Z
jtb.JavaParser:jj_3R_117()Z
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.syntaxtree.CompilationUnit:accept(Ljtb.visitor.Visitor;)V
daikon.tools.jtb.SimpleTreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V
jtb.syntaxtree.ConditionalAndExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_80()Z
jtb.JavaParser:jj_3R_210()Z
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
jtb.JavaParser:jj_3R_73()Z
daikon.Quant:eltwiseLTE([I)Z
utilMDE.ArraysMDE:sorted([I)Z
jtb.JavaParser:jj_3R_51()Z
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
jtb.JavaParser:jj_3R_47()Z
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.tools.jtb.Ast:getType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Type;)V
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.CompilationUnit:getParent()Ljtb.syntaxtree.Node;
utilMDE.FuzzyFloat:lte(DD)Z
utilMDE.MathMDE:sign(I)I
jtb.visitor.TreeDumper:TreeDumper(Ljava.io.Writer;)V
jtb.JavaParser:jj_3_19()Z
daikon.Quant:intersection([I[I)[I
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.syntaxtree.ClassOrInterfaceDeclaration:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
jtb.JavaParser:jj_2_18(I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
jtb.syntaxtree.TypeArguments:setParent(Ljtb.syntaxtree.Node;)V
daikon.ModBitTracker:ModBitTracker(I)V
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.test.InvariantFormatTester:execute()Z
jtb.JavaParser:jj_3R_115()Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PostfixExpression;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.FuzzyFloat:gt(DD)Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.FormatCommand:FormatCommand(II)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpression;)V
jtb.JavaParser:jj_3R_135()Z
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.MathMDE:gcd([I)I
jtb.syntaxtree.PackageDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:pairwiseGT([I[I)Z
jtb.visitor.TreeFormatter:processList(Ljtb.syntaxtree.NodeListInterface;)V
jtb.JavaParser:jj_3R_118()Z
utilMDE.Options.OptionInfo:argument_required()Z
daikon.Quant:lexEqual([I[I)Z
daikon.Quant:memberOf(J[J)Z
jtb.JavaParser:jj_3_35()Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
jtb.syntaxtree.NodeListOptional:present()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:jj_3R_97()Z
jtb.syntaxtree.Type:accept(Ljtb.visitor.Visitor;)V
daikon.ValueTuple:size()I
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.MathMDE:mod_positive(II)I
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
utilMDE.Assert:assertTrue(Z)V
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String; | CONSTANT | 14759 | 1 -> -1
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
jtb.JavaParser:jj_3R_120()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryPrefix;)V
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
utilMDE.ArraysMDE:element_range([I)I
daikon.Quant:eltwiseNotEqual([I)Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
utilMDE.SimpleLog:SimpleLog(Z)V
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_125()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Statement;)V
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.FormalParameter:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:getToken(I)Ljtb.Token;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
daikon.Quant:eltsEqual([II)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MultiplicativeExpression;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
utilMDE.FuzzyFloat:indexOf([D[D)I
jtb.syntaxtree.Expression:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:subsetOf([F[D)Z
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.FormalParameters:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:isSubarray([I[II)Z
jtb.syntaxtree.ImportDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
daikon.tools.jtb.PptNameMatcher:typeMatch(Ljava.lang.String;Ljtb.syntaxtree.FormalParameter;)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ImportDeclaration;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryExpression;)V
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.ValueTuple:isMissingFlow(I)Z
jtb.JavaParser:jj_3_14()Z
daikon.ModBitTracker:num_vars()I
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.NodeList:NodeList()V
jtb.JavaParser:jj_2_15(I)Z
jtb.JavaParser:jj_2_12(I)Z
utilMDE.UtilMDE:removeWhitespaceBefore(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.LimitedSizeIntSet:add(I)V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
jtb.JavaCharStream:UpdateLineColumn(C)V
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
utilMDE.Options.ArgException:ArgException(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.MathMDE:nonmodulus_strict([I)[I
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.Quant:union([I[I)[I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:pairwiseDivides([I[I)Z
jtb.JavaCharStream:getBeginLine()I
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:missing_numbers([I)[I
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
jtb.JavaParser:jj_3R_54()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclarator;)V
jtb.syntaxtree.ReferenceType:accept(Ljtb.visitor.Visitor;)V
daikon.tools.jtb.PptNameMatcher:extractPptArgs(Ldaikon.PptName;)Ljava.util.List;
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameters;)V
utilMDE.Intern:numIntArrays()I
daikon.Quant:setEqual([I[I)Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
jtb.JavaParser:jj_2_5(I)Z
jtb.JavaCharStream:GetImage()Ljava.lang.String;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
jtb.syntaxtree.VariableDeclaratorId:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.inv.Invariant:prob_or(DD)D
jtb.JavaParser:jj_3R_56()Z
daikon.PptName:getSignature()Ljava.lang.String;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.inv.Invariant:prob_and(DDD)D
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ResultType;)V
jtb.JavaParser:jj_2_13(I)Z
daikon.Quant:eltwiseLT([I)Z
utilMDE.MathMDE:pow_fast(II)I
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.Quant:pairwiseLT([I[I)Z
jtb.syntaxtree.TypeBound:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:pairwiseLTE([I[I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeBound;)V
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
jtb.JavaParser:jj_3R_107()Z
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArguments;)V
daikon.ValueTuple:isMissingNonsensical(I)Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.Quant:eltsGTE([II)Z
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
utilMDE.ArraysMDE:subarray([III)[I
jtb.syntaxtree.TypeArguments:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
utilMDE.UtilMDE:removeWhitespaceAround(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.NodeToken:trimSpecials()V
jtb.syntaxtree.AdditiveExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.Quant:eltsNotEqual([II)Z
daikon.tools.jtb.Ast:typeMatch(Ljava.lang.String;Ljava.lang.String;)Z
jtb.JavaParser:jj_3_16()Z
jtb.JavaParser:jj_3_13()Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.TypeDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
utilMDE.FuzzyFloat:eq(DD)Z
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
utilMDE.MathMDE:pow(II)I
jtb.JavaParser:jj_3R_61()Z
jtb.syntaxtree.Literal:accept(Ljtb.visitor.Visitor;)V
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_116()Z
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
daikon.Quant:noDups([I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.Quant:pairwiseSquare([I[I)Z
jtb.JavaParser:jj_3R_48()Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.JavaParser:jj_3_27()Z
utilMDE.WeakHasherMap:size()I
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ReturnStatement:accept(Ljtb.visitor.Visitor;)V
daikon.ModBitTracker:split(I)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;)V
jtb.syntaxtree.Statement:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.EqualityExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
jtb.syntaxtree.FormalParameter:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.CompilationUnit;)V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
jtb.JavaParser:jj_3R_162()Z
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
utilMDE.OrderedPairIterator:setnext2()V
jtb.syntaxtree.Name:accept(Ljtb.visitor.Visitor;)V
utilMDE.FuzzyFloat:ne(DD)Z
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.Quant:eltwiseGTE([I)Z
jtb.JavaCharStream:getBeginColumn()I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.Quant:sameLength([I[I)Z
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
jtb.JavaParser:jj_3_22()Z
daikon.tools.jtb.Ast:getName(Ljtb.syntaxtree.MethodDeclaration;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBody;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
jtb.JavaCharStream:getEndLine()I
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
daikon.Quant:eq(DD)Z
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.FormalParameter;)V
utilMDE.WeakHasherMap:processQueue()V
daikon.Quant:memberOf(F[D)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.Quant:pairwiseEqual([I[I)Z
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.Quant:lexNotEqual([I[I)Z
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeSequence;)V
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameter;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ExclusiveOrExpression;)V
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.visitor.TreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_58()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalAndExpression;)V
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
jtb.JavaParser:jj_3_1()Z
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
jtb.JavaParser:jj_3R_49()Z
daikon.Quant:eq(FF)Z
daikon.inv.OutputFormat:isJavaFamily()Z
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_52()Z
jtb.syntaxtree.ClassOrInterfaceBody:accept(Ljtb.visitor.Visitor;)V
utilMDE.FuzzyFloat:set_rel_diff(D)V
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
jtb.visitor.TreeFormatter:space()Ljtb.visitor.FormatCommand;
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.Quant:subsetOf([D[D)Z
daikon.Quant:eltwiseGT([I)Z
jtb.syntaxtree.ClassOrInterfaceBody:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltsGteIndex([I)Z
jtb.JavaParser:VariableDeclaratorId()Ljtb.syntaxtree.VariableDeclaratorId;
jtb.JavaParser:jj_2_4(I)Z
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3_30()Z
jtb.syntaxtree.PrimaryExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
jtb.JavaParser:jj_3R_74()Z
utilMDE.OrderedPairIterator:hasNext()Z
utilMDE.ArraysMDE:indexOf([II)I
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_63()Z
jtb.JavaParser:jj_3_20()Z
daikon.tools.jtb.Ast:getParameters(Ljtb.syntaxtree.MethodDeclaration;)Ljava.util.List;
utilMDE.UtilMDE:splitLines(Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.Invariant:prob_and(DD)D
jtb.JavaParser:jj_3R_119()Z
jtb.JavaParser:jj_3R_62()Z
daikon.Quant:memberOf(D[F)Z
jtb.JavaParser:jj_2_35(I)Z
daikon.Quant:eltsLteIndex([I)Z
jtb.JavaParser:jj_3R_161()Z
jtb.JavaParser:jj_3R_169()Z
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
jtb.JavaParser:jj_3R_180()Z
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
jtb.JavaParser:jj_3_25()Z
jtb.JavaParser:jj_3R_121()Z
jtb.JavaParserTokenManager:MoreLexicalActions()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalOrExpression;)V
jtb.JavaParser:jj_2_25(I)Z
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.Quant:memberOf(I[I)Z
daikon.tools.jtb.Ast:getParent(Ljava.lang.Class;Ljtb.syntaxtree.Node;)Ljtb.syntaxtree.Node;
daikon.PptName:getFullClassName()Ljava.lang.String;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_50()Z
daikon.test.TestAst.MethodDeclarationHarvester:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.tools.jtb.Ast:create(Ljava.lang.String;[Ljava.lang.Class;[Ljava.lang.Object;Ljava.lang.String;)Ljtb.syntaxtree.Node;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
utilMDE.MathMDE:bitwiseComplement(I)I
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_148()Z
jtb.syntaxtree.NodeSequence:getParent()Ljtb.syntaxtree.Node;
utilMDE.UtilMDE:split(Ljava.lang.String;Ljava.lang.String;)[Ljava.lang.String;
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.BlockStatement;)V
daikon.Quant:slice([III)[I
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
jtb.JavaParser:jj_3_3()Z
daikon.Quant:eq(JJ)Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:eltsLTE([II)Z
daikon.test.TestAst.ClassOrInterfaceDeclarationHarvester:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments;
daikon.PptName:toString()Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.JavaParser:jj_3_4()Z
jtb.visitor.FormatCommand:getCommand()I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;)V
jtb.JavaParser:jj_3R_70()Z
jtb.syntaxtree.PrimaryPrefix:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaCharStream:getEndColumn()I
jtb.syntaxtree.NodeOptional:present()Z
jtb.JavaParser:jj_2_17(I)Z
jtb.JavaParser:jj_3R_72()Z
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
jtb.JavaParser:jj_3_21()Z
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ModBitTracker:num_sets()I
jtb.JavaParser:jj_3R_137()Z
jtb.syntaxtree.InclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_102()Z
daikon.Quant:setDiff([I[I)[I
jtb.JavaParser:jj_3R_164()Z
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameters;)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
jtb.JavaParser:jj_3R_114()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.MathMDE:modulus([I)[I
jtb.visitor.TreeFormatter:placeToken(Ljtb.syntaxtree.NodeToken;II)V
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.tools.jtb.Ast:quickFixForInternalComment(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.Quant:eltsGT([II)Z
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
jtb.syntaxtree.NodeSequence:elements()Ljava.util.Enumeration;
jtb.syntaxtree.TypeParameters:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ClassOrInterfaceBody:getParent()Ljtb.syntaxtree.Node;
utilMDE.ArraysMDE:sum([[I)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReferenceType;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.JavaParser:jj_3_10()Z
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:max([I)I
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.NodeToken;)V
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.NodeToken:numSpecials()I
jtb.Token:newToken(I)Ljtb.Token;
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
utilMDE.MathMDE:gcd(II)I
jtb.syntaxtree.NodeOptional:NodeOptional()V
jtb.syntaxtree.NodeChoice:accept(Ljtb.visitor.Visitor;)V
daikon.test.TestQuant:removeAdjacentDups([I)[I
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.tools.jtb.SimpleTreeDumper:SimpleTreeDumper(Ljava.io.Writer;)V
jtb.syntaxtree.ConditionalExpression:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:lt(II)Z
daikon.Quant:gt(II)Z
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.TreeFormatter:space(I)Ljtb.visitor.FormatCommand;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NullLiteral;)V
jtb.JavaParser:jj_3R_68()Z
jtb.JavaParser:FormalParameter()Ljtb.syntaxtree.FormalParameter;
jtb.JavaParser:jj_3R_149()Z
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.TestUtilMDE:lsis_test(I)V
jtb.syntaxtree.Block:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:memberOf(S[S)Z
daikon.inv.Invariant:prob_is_ge(DD)D
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
jtb.syntaxtree.NodeToken:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_88()Z
jtb.JavaParser:jj_3R_53()Z
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.PostfixExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
jtb.syntaxtree.ClassOrInterfaceDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.syntaxtree.NodeListOptional:elements()Ljava.util.Enumeration;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
jtb.JavaParser:jj_3R_55()Z
utilMDE.Intern:intern([D)[D
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
jtb.visitor.TreeFormatter:TreeFormatter()V
daikon.Quant:lexGTE([I[I)Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.Quant:lte(II)Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:ungenerify(Ljtb.syntaxtree.ClassOrInterfaceType;)V
jtb.JavaParser:jj_3R_122()Z
utilMDE.MathMDE:negate(I)I
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
jtb.syntaxtree.MethodDeclarator:accept(Ljtb.visitor.Visitor;)V
daikon.ValueTuple:tuplemodHasModified(I)Z
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
jtb.syntaxtree.TypeDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:indexOf([ZZ)I
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_110()Z
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
utilMDE.ArraysMDE:noDuplicates([I)Z
jtb.syntaxtree.AndExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
jtb.JavaParser:jj_3R_123()Z
jtb.JavaParser:jj_3R_103()Z
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;II)V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
jtb.JavaParser:jj_3R_100()Z
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.NodeSequence:elementAt(I)Ljtb.syntaxtree.Node;
daikon.Quant:ne(II)Z
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
jtb.JavaParser:jj_3_12()Z
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
jtb.JavaParser:JavaParser(Ljava.io.Reader;)V
jtb.JavaParser:jj_2_36(I)Z
jtb.JavaCharStream:readChar()C
jtb.JavaParser:jj_3_36()Z
utilMDE.ArraysMDE:concat([I[I)[I
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:eltsEqualIndex([I)Z
daikon.Quant:eltsNotEqualIndex([I)Z
jtb.JavaParser:jj_3_28()Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
jtb.JavaParser:jj_3R_81()Z
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
jtb.JavaParser:jj_3R_105()Z
jtb.syntaxtree.TypeArguments:TypeArguments(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeArgument;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PackageDeclaration;)V
jtb.JavaParser:jj_3R_163()Z
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.ResultType:accept(Ljtb.visitor.Visitor;)V
daikon.tools.jtb.SimpleTreeDumper:printToken(Ljava.lang.String;)V
daikon.Quant:subsetOf([I[I)Z
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
jtb.JavaParser:jj_3_15()Z
jtb.syntaxtree.CompilationUnit:CompilationUnit(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
jtb.JavaParser:jj_3R_136()Z
jtb.syntaxtree.TypeDeclaration:TypeDeclaration(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.ConditionalOrExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3_5()Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.SimpleLog.LongVal:LongVal(J)V
jtb.syntaxtree.TypeParameter:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameter;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Name;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReturnStatement;)V
utilMDE.ArraysMDE:sum([I)I
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
utilMDE.ArraysMDE:sum([[D)D
utilMDE.FuzzyFloat:gte(DD)Z
utilMDE.ArraysMDE:sum([D)D
jtb.syntaxtree.BlockStatement:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
jtb.JavaParser:jj_2_3(I)Z
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.MultiplicativeExpression:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaCharStream:BeginToken()C
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
jtb.syntaxtree.NodeListOptional:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:min([I)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArgument;)V
jtb.syntaxtree.Modifiers:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:eltsLtIndex([I)Z
jtb.JavaParser:jj_3R_96()Z
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
jtb.JavaParser:jj_3R_85()Z
jtb.syntaxtree.NodeOptional:accept(Ljtb.visitor.Visitor;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
329 2 381 2 780 2 430 2 141 2 718 2 6 4 506 2 601 2 
507 6 567 2 513 2 735 2 65 6 152 6 652 2 743 2 583 2 442 2 770 2 
329 2 61 2 166 6 755 4 734 2 417 2 50 2 692 4 518 6 849 6 456 6 815 2 506 2 
477 10 778 4 0 6 84 2 722 2 213 13 139 2 248 2 362 2 387 2 449 4 71 4 117 16 760 8 329 6 310 29 552 16 820 10 49 10 373 8 471 26 527 10 201 2 703 16 23 8 773 4 750 10 777 8 104 6 506 6 
693 4 337 6 
181 2 
637 2 534 2 683 2 59 2 686 2 106 4 1 2 598 2 161 2 490 2 445 2 759 2 447 2 163 2 388 2 329 4 280 2 330 2 763 2 15 4 653 2 338 2 169 2 827 2 829 2 506 4 831 2 780 2 240 2 403 2 35 2 670 4 362 2 192 2 841 2 413 2 149 2 258 2 844 2 677 2 584 4 634 2 681 2 379 2 
477 16 801 2 0 4 85 2 138 6 213 22 691 4 839 2 70 4 444 6 387 2 117 32 329 4 760 18 790 6 820 16 552 32 310 54 49 6 631 4 578 6 737 4 373 6 471 48 453 8 99 4 527 16 153 6 656 2 768 6 703 32 231 4 704 4 773 2 422 2 346 2 750 16 104 4 506 4 
842 2 794 2 653 2 
293 2 830 2 509 10 369 2 796 2 677 2 356 2 272 2 771 2 191 2 234 2 233 2 565 2 467 22 
477 2 58 2 207 2 404 2 408 2 213 2 10 2 489 2 117 2 760 2 675 2 820 2 310 6 552 2 49 4 471 4 741 2 98 2 527 2 703 2 773 2 750 2 104 2 
778 2 477 4 790 6 820 4 552 8 310 16 333 2 471 12 99 4 527 4 703 8 213 4 704 4 289 2 444 6 750 4 117 8 
618 2 429 2 482 4 106 4 620 2 537 4 111 4 67 2 325 2 327 14 301 2 273 2 491 4 162 2 671 2 759 2 386 2 520 4 277 4 43 4 699 10 731 2 842 6 765 62 794 2 122 4 334 4 554 2 17 4 525 4 338 4 653 8 581 2 100 10 396 2 474 2 747 2 175 2 423 2 378 2 
181 2 382 2 821 2 332 2 87 2 313 2 341 2 385 2 571 2 306 2 180 2 
487 2 833 2 151 2 486 2 
721 2 506 2 
425 2 590 2 506 4 
419 2 
427 46 426 6 432 14 3 2 2 4 5 2 434 14 437 2 438 8 439 10 440 26 7 6 8 2 9 244 11 2 443 2 12 6 13 6 14 6 451 4 450 26 452 8 19 2 20 6 21 2 22 2 454 10 455 6 25 6 24 432 26 2 459 2 28 2 30 86 31 6 32 26 33 4 460 4 461 60 34 2 37 2 38 46 463 60 39 6 464 4 40 290 41 10 465 6 466 92 42 26 44 4 468 2 469 24 46 2 47 2 48 8 470 2 472 2 51 2 52 2 475 4 476 6 53 20 56 8 478 30 479 2 60 2 62 2 481 52 63 94 64 2 485 4 68 2 69 4 488 2 492 2 73 2 493 6 74 182 495 6 496 6 497 6 498 2 499 2 500 2 76 2 502 22 78 4 503 4 506 10 505 4 80 2 82 6 83 6 508 12 86 2 512 198 515 192 517 2 516 2 89 4 519 6 90 2 92 6 93 68 94 2 521 198 522 2 524 4 96 2 97 2 526 4 529 12 102 6 531 2 105 4 535 244 108 2 110 2 109 2 538 2 540 6 541 2 539 16 542 48 543 2 113 6 544 2 114 2 546 4 547 6 115 82 116 2 550 4 551 2 118 30 121 8 119 2 120 228 555 2 557 2 123 14 558 60 124 2 559 4 125 6 563 4 562 2 126 16 127 2 564 6 128 112 129 2 130 4 131 48 566 2 568 4 132 20 133 2 134 4 569 2 136 4 135 22 137 6 140 8 574 2 576 6 143 2 577 2 142 2 144 6 145 566 146 4 150 2 579 2 580 6 154 2 582 2 585 2 586 2 587 2 588 2 589 8 156 2 158 2 591 30 592 2 594 2 596 4 160 8 597 2 599 2 600 2 164 2 602 2 603 30 165 2 604 6 605 6 606 2 167 2 609 4 610 2 612 46 613 4 614 2 617 26 170 112 172 4 173 6 174 2 183 8 182 6 621 2 184 4 185 2 622 28 623 4 624 10 186 4 187 2 188 74 189 4 190 2 625 2 626 6 193 12 628 46 629 2 196 2 197 2 198 2 200 2 202 4 633 2 635 12 203 2 204 2 636 2 205 6 206 2 638 2 639 4 208 6 640 6 641 2 642 6 643 2 210 2 212 2 211 2 644 198 645 224 216 4 215 2 646 2 218 4 647 2 648 2 650 2 221 2 219 2 220 2 222 6 223 4 225 2 226 28 227 132 651 2 654 112 228 4 655 6 229 88 232 4 658 2 235 2 659 6 237 22 660 2 662 2 663 6 239 4 664 4 241 6 665 132 242 2 666 4 667 2 668 2 669 118 244 30 247 30 246 4 672 20 250 2 251 12 252 6 674 8 673 4 253 2 254 2 255 2 256 2 259 4 678 244 679 14 680 2 260 2 261 2 263 4 265 2 264 4 682 50 684 12 685 4 268 4 269 24 687 2 270 2 688 18 689 2 690 20 271 4 274 20 694 2 695 98 275 2 696 198 279 4 697 2 698 2 700 106 281 2 282 204 701 192 283 198 284 12 286 2 705 8 706 6 288 2 709 2 710 4 711 6 712 26 713 6 290 2 291 6 714 14 292 328 716 4 294 18 295 2 296 4 717 8 297 6 298 4 719 6 299 2 723 4 302 4 724 386 304 8 305 30 725 2 727 4 726 4 728 2 729 12 730 6 309 2 732 4 733 140 311 336 736 4 739 4 314 26 744 2 745 18 315 28 317 2 746 30 318 64 319 2 320 16 322 2 751 8 753 4 754 2 324 2 757 2 326 2 758 20 328 10 329 10 761 2 764 6 766 30 331 2 767 2 335 30 336 6 769 26 342 2 343 2 772 2 344 6 774 8 345 8 347 2 782 12 781 2 783 32 348 2 784 2 349 2 350 4 352 2 785 26 354 6 786 2 355 6 787 432 357 6 788 2 359 2 360 28 361 8 363 4 365 2 364 2 367 4 368 6 793 2 371 60 795 2 797 2 798 12 374 20 799 4 800 4 375 12 377 16 376 20 380 46 802 6 803 30 805 4 806 112 808 2 383 376 384 66 809 182 810 14 811 2 814 198 816 2 390 64 817 2 391 6 818 6 819 2 392 2 822 22 823 2 824 4 825 12 826 6 394 198 395 70 828 2 398 4 399 8 400 54 401 2 834 2 402 6 832 6 837 6 836 84 835 2 405 28 407 14 411 2 412 106 840 198 843 328 414 6 415 4 416 160 418 6 845 26 420 4 846 10 421 2 848 26 424 2 852 4 853 204 
616 2 77 2 514 2 548 1 
792 2 77 2 
77 2 608 2 276 2 72 2 449 2 653 2 702 2 
409 2 77 2 608 2 
77 2 608 2 804 2 
775 2 514 2 18 2 
77 2 608 2 
353 2 775 2 
77 2 458 2 
530 2 775 2 514 2 
214 2 431 2 514 2 
708 2 433 2 514 2 
303 2 514 2 742 2 
112 2 707 2 514 2 
194 2 775 2 
339 2 77 2 
428 2 214 2 
708 2 257 2 
573 2 742 2 
707 2 511 2 
791 2 775 2 
707 2 575 2 
224 2 742 2 
595 2 708 2 
214 2 847 2 
530 2 775 2 514 2 307 2 
530 2 775 2 514 2 532 2 307 2 
775 2 514 2 393 2 
775 2 514 2 484 2 
533 2 79 2 536 2 66 2 
171 2 789 2 72 2 653 2 
171 2 789 2 72 2 653 2 702 2 389 2 
661 2 77 2 608 2 72 2 449 2 653 2 
763 2 480 2 
627 2 72 2 449 2 653 2 
676 2 742 2 
707 2 446 2 
159 2 214 2 
632 2 708 2 
707 2 708 2 157 2 
230 2 707 2 708 2 
707 2 708 2 217 2 
707 2 708 2 740 2 
715 6 321 2 838 6 410 2 72 2 611 2 653 2 397 2 
775 2 177 2 
267 2 238 2 4 4 523 4 630 2 593 2 199 2 168 2 720 2 101 2 528 2 358 2 560 2 572 2 91 2 55 2 467 6 308 2 
36 2 514 2 
556 2 
278 2 833 2 151 2 486 2 
278 2 833 2 151 2 486 2 
75 2 762 2 107 2 
75 2 762 2 107 2 
278 2 833 2 151 2 486 2 
278 2 833 2 151 2 486 2 
278 2 833 2 151 2 486 2 
29 2 549 2 619 2 510 2 833 2 151 2 435 2 486 2 406 2 287 2 748 2 851 2 457 2 178 2 506 4 236 2 
95 2 155 2 88 2 312 2 16 2 483 2 
147 2 81 2 570 2 561 2 351 2 807 2 155 2 
57 2 429 1 752 1 462 2 436 2 441 2 243 2 249 2 813 2 649 1 329 8 494 2 45 1 370 2 607 2 372 2 285 2 615 2 316 2 474 1 262 2 657 2 504 2 506 10 27 2 179 2 
545 2 
329 1 366 2 148 2 779 2 195 2 738 2 756 1 340 4 473 2 245 2 850 7 812 2 54 2 749 2 776 2 266 2 103 2 506 1 
366 2 148 2 779 4 195 2 738 2 340 4 473 2 245 2 850 6 812 2 54 4 749 2 266 2 103 2 776 4 
329 1 366 2 148 6 779 8 195 2 738 2 756 1 340 4 473 8 245 2 850 10 812 2 54 8 749 2 266 2 103 2 776 8 506 1 
366 2 779 2 195 2 738 2 340 2 245 2 850 2 812 2 54 2 749 2 266 2 103 2 776 2 
209 2 323 2 329 2 553 1 501 2 176 1 506 2 300 2 
329 2 501 2 300 2 209 2 323 2 506 2 
329 2 501 2 300 2 209 2 323 2 506 2 
329 2 501 2 300 2 209 2 323 2 506 2 
448 2 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V ERROR java.lang.ArithmeticException (65,659) (618,992) 225 1019 
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.NullPointerException 1064 424 715 125 626 697 886 930 754 182 33 948 1061 681 411 20 318 337 582 64 460 385 998 368 453 913 567 329 665 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V FAILED junit.framework.AssertionFailedError (538,694) 250 
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 578 187 802 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 1095 0 459 
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 1095 0 459 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String; | ASSIGN | 131294 | = null
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_122()Z
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_50()Z
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.VarInfo:esc_name(Ljava.lang.String;)Ljava.lang.String;
daikon.ProglangType:isFloat()Z
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.Quant:concat([I[I)[I
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.JavaParser:jj_3R_76()Z
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
jtb.JavaParser:jj_3R_63()Z
daikon.PptSlice1:num_samples()I
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
jtb.JavaParser:jj_3R_116()Z
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
utilMDE.ArraysMDE:element_range([I)I
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
utilMDE.LimitedSizeIntSet:add(I)V
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
utilMDE.MathMDE:pow(II)I
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.Quant:lexLTE([I[I)Z
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.Quant:eltsNotEqualIndex([I)Z
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
utilMDE.MathMDE:mod_positive(JJ)J
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_ntk()I
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.VarInfoName.Add:amount()Ljava.lang.String;
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.Quantify.IOAQuantification:getQuantifierExp()Ljava.lang.String;
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_2_15(I)Z
daikon.Quant:lexEqual([I[I)Z
daikon.ModBitTracker:num_sets()I
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.Quant:gte(II)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:setEqual([I[I)Z
jtb.JavaParser:jj_3R_56()Z
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.Intern:internSubsequence([III)[I
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.Quant:pairwiseGTE([I[I)Z
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.UpperBoundCore:computeProbability()D
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.ArraysMDE:max([I)I
jtb.JavaParser:jj_3R_62()Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.Quant:eltwiseLT([I)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
utilMDE.ArraysMDE:sorted([I)Z
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.Quantify:get_flags(Z)Ljava.util.EnumSet;
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.FuzzyFloat:lte(DD)Z
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Ppt:find_var_by_name(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfo:esc_name()Ljava.lang.String;
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
jtb.JavaParser:jj_3R_52()Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeOptional:NodeOptional()V
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.VarInfo:get_base_array_hashcode()Ldaikon.VarInfo;
daikon.Quantify.Constant:name()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
jtb.JavaParser:jj_3R_87()Z
jtb.JavaParser:jj_3_21()Z
daikon.Quant:eq(II)Z
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:jj_3_36()Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
utilMDE.FuzzyFloat:gt(DD)Z
jtb.JavaCharStream:getEndLine()I
daikon.Quant:pairwiseLT([I[I)Z
daikon.inv.OutputFormat:isJavaFamily()Z
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
jtb.JavaParser:jj_3_15()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
jtb.JavaParser:jj_3R_69()Z
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.Quant:eltsLtIndex([I)Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
jtb.JavaCharStream:BeginToken()C
jtb.JavaParser:jj_2_10(I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.PptSlice0:arity()I
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.inv.ValueSet:ValueSet(I)V
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:baseIsFloat()Z
utilMDE.Intern:intern([I)[I
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
utilMDE.ArraysMDE:min([I)I
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.inv.filter.ObviousFilter:ObviousFilter()V
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V | STATEMENT | 8634 | stmt -> ;
daikon.inv.Invariant:prob_and(DD)D
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.OrderedPairIterator:setnext1()V
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
utilMDE.TestUtilMDE:lsis_test(I)V
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
jtb.JavaParser:jj_3_12()Z
daikon.Quant:setDiff([I[I)[I
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
jtb.JavaParser:jj_2_21(I)Z
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
daikon.Quant:subsetOf([J[J)Z | CONDITION | 196771 | if (x) -> if (!x)
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.VarInfo:get_array_var()Ldaikon.VarInfo;
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_135()Z
jtb.JavaParser:jj_3_5()Z
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.VarInfo:isDerived()Z
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
utilMDE.ArraysMDE:subarray([JII)[J
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.PptTopLevel.CondIterator:hasNext()Z
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.Quant:memberOf(J[J)Z
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:gt(II)Z
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
utilMDE.FuzzyFloat:ne(DD)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaCharStream:readChar()C
daikon.Quant:lexGTE([I[I)Z
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
utilMDE.ArraysMDE:min_max([I)[I
utilMDE.Options.OptionInfo:argument_required()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:name()Ljava.lang.String;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
utilMDE.MathMDE:gcd_differences([I)I
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
utilMDE.MathMDE:gcd([I)I
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_53()Z
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator; | RETURN | 36787 | return null
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.VarInfoAux:hashCode()I
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.SequenceAndIndices:hashCode()I
utilMDE.Intern:numIntArrays()I
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.Quant:eltsEqual([II)Z
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_75()Z
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.inv.Invariant:getConfidence()D
jtb.JavaParser:jj_2_5(I)Z
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_58()Z
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:pairwiseDivides([I[I)Z
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
utilMDE.WeakHasherMap:processQueue()V
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.Quantify.ESCQuantification:ESCQuantification(Ljava.util.EnumSet;[Ldaikon.VarInfo;)V
jtb.JavaParser:jj_3R_86()Z
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
jtb.JavaParser:jj_3R_114()Z
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
jtb.JavaParser:jj_3R_49()Z
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.SimpleLog.LongVal:LongVal(J)V
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
jtb.JavaParser:jj_3_16()Z
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.Debug:logDetail()Z
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
daikon.Quant:subsetOf([B[I)Z
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.Quant:union([I[I)[I
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
jtb.JavaParser:jj_3R_88()Z
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfo:get_upper_bound()Ldaikon.Quantify.Term;
utilMDE.LimitedSizeIntSet:size()I
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.PptSlice1:arity()I
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.Positive:enabled()Z
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
utilMDE.Intern:intern([D)[D
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
daikon.Quant:lexLT([I[I)Z
jtb.JavaParser:jj_scan_token(I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.inv.Invariants:Invariants()V
utilMDE.ArraysMDE:noDuplicates([I)Z
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
jtb.JavaParser:jj_3R_148()Z
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
jtb.JavaParser:jj_2_1(I)Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.Invariant:prob_or(DD)D
daikon.Quantify.IOAQuantification:getFreeVar(I)Ldaikon.Quantify.Term;
daikon.Quantify.Term:name_with_offset(Ljava.lang.String;I)Ljava.lang.String;
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral; | RETURN | 92129 | return null
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.inv.unary.UpperBoundCore:calc_modulus()J
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:slice([III)[I
jtb.JavaParser:jj_3R_81()Z
jtb.JavaParser:jj_3R_61()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfo:isPointer()Z
daikon.VarInfoName:name()Ljava.lang.String;
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_85()Z
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.ProglangType:isPointerFileRep()Z
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.inv.unary.scalar.NonZero:enabled()Z
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeList:NodeList()V
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_47()Z
utilMDE.MathMDE:bitwiseComplement(I)I
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.PptSlice2:arity()I
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.Quant:isReverse([I[I)Z
daikon.VarInfo:isPrestate()Z
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.Quant:memberOf(I[I)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:sign(I)I
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String;
jtb.Token:newToken(I)Ljtb.Token;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
jtb.JavaParser:jj_3R_117()Z
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.ProglangType:baseIsScalar()Z
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.ModBitTracker:split(I)I
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.Quantify.FreeVar:name()Ljava.lang.String;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.Quant:sameLength([I[I)Z
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_96()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_120()Z
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Debug:logOn()Z
daikon.Quant:eltwiseEqual([I)Z
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.Quantify.Length:esc_name()Ljava.lang.String;
daikon.diff.InvMap:InvMap()V
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:indexOf([II)I
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
utilMDE.ArraysMDE:concat([I[I)[I
jtb.JavaCharStream:getBeginColumn()I
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_89()Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
jtb.JavaParser:jj_3R_121()Z
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_54()Z
daikon.Quant:eltsEqualIndex([I)Z
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.ValueTuple:isMissing(I)Z
daikon.Quant:pairwiseGT([I[I)Z
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
jtb.JavaParser:jj_3R_97()Z
daikon.test.FormatTestCase:passes()Z
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.ProglangType:isArray()Z
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
daikon.ModBitTracker:num_samples()I
daikon.Quant:lt(II)Z
jtb.JavaCharStream:getEndColumn()I
jtb.JavaParser:jj_3_13()Z
jtb.JavaParser:jj_3R_161()Z
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaCharStream:ReadByte()C
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
jtb.JavaCharStream:FillBuff()V
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
utilMDE.MathMDE:modulus([I)[I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfo:new_ppt()V
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:mod_positive(II)I
utilMDE.ArraysMDE:subarray([III)[I
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.inv.Invariant:isWorthPrinting()Z
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
jtb.JavaParser:jj_3_1()Z
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaCharStream:UpdateLineColumn(C)V
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:lexGT([I[I)Z
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.PptTopLevel:name()Ljava.lang.String;
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.inv.unary.scalar.UpperBound:enabled()Z
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.Quant:pairwiseSquare([I[I)Z
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.diff.PrintAllVisitor:bufPrintln()V
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.inv.Invariant:prob_and(DDD)D
daikon.diff.RootNode:RootNode()V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap:size()I
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.Quantify.IOAQuantification:getMembershipRestriction(I)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.Quant:pairwiseEqual([I[I)Z
daikon.Quant:eltsGT([II)Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:eq(DD)Z
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.Quant:eltsGTE([II)Z
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3_14()Z
jtb.JavaParser:jj_3R_115()Z
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfo:relate_var()V
jtb.JavaParser:jj_2_12(I)Z
utilMDE.ArraysMDE:sum([D)D
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.FuzzyFloat:gte(DD)Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.JavaCharStream:backup(I)V
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfo:dbc_name()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3_4()Z
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
jtb.JavaParser:jj_2_13(I)Z
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:missing_numbers([I)[I
daikon.Quantify.ESCQuantification:bld_quant(Ldaikon.VarInfo;Ldaikon.Quantify.Term;)Ljava.lang.String;
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_3()Z
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.Ppt:indexOf(Ljava.lang.String;)I
daikon.inv.Invariant:logOn()Z
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.FuzzyFloat:lt(DD)Z
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
jtb.JavaCharStream:getBeginLine()I
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.test.InvariantFormatTester:execute()Z
daikon.ValueTuple:isMissingFlow(I)Z
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
utilMDE.MathMDE:negate(I)I
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.Quantify.ESCQuantification:get_arr_vars_indexed(I)Ljava.lang.String;
jtb.JavaParser:jj_3_35()Z
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.Quant:pairwiseLTE([I[I)Z
utilMDE.OrderedPairIterator:hasNext()Z
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.VarInfo:jml_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.Quant:eltwiseGTE([I)Z
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_55()Z
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
jtb.JavaParser:jj_3R_48()Z
daikon.Ppt:Ppt()V
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.ModBitTracker:ModBitTracker(I)V
jtb.JavaParser:jj_3R_68()Z
daikon.ValueTuple:tuplemodHasModified(I)Z
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 6323 | = null
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.PptName:PptName(Ljava.lang.String;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
jtb.JavaParser:jj_3R_134()Z
daikon.PptName:isEnterPoint()Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParser:jj_3_22()Z
daikon.ValueTuple:isMissingNonsensical(I)Z
jtb.JavaParser:jj_3R_162()Z
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.VarInfo:old_var_names(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Assert:assertTrue(Z)V
jtb.JavaParser:jj_2_16(I)Z
daikon.Quantify.Constant:Constant(I)V
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.VarInfoName:repr()Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_60()Z
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_118()Z
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
utilMDE.Intern:internSubsequence([JII)[J
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
jtb.JavaParser:jj_3R_123()Z
utilMDE.MathMDE:gcd(II)I
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParser:jj_2_36(I)Z
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:noDups([I)Z
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:sum([[D)D
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfo:get_base_array()Ldaikon.VarInfo;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.Quant:eltsGtIndex([I)Z
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:subsetOf([I[I)Z
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.Quant:intersection([I[I)[I
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.Quant:eltsNotEqual([II)Z
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I | RETURN | 184235 | return null
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.inv.filter.ParentFilter:ParentFilter()V
jtb.JavaParser:jj_3_10()Z
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
utilMDE.ArraysMDE:sum([[I)I
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.VarInfoName:isLiteralConstant()Z
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:eltsLTE([II)Z
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z | CONSTANT | 23955 | 1 -> 0
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_2_14(I)Z
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
daikon.Quantify.ESCQuantification:get_quantification()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
utilMDE.OrderedPairIterator:setnext2()V
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.inv.Invariant:logDetail()Z
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.VarInfoName:hashCode()I
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.Quant:eltwiseLTE([I)Z
jtb.JavaParser:jj_3R_163()Z
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.Quantify.Length:Length(Ldaikon.VarInfo;I)V
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
utilMDE.MathMDE:nonmodulus_strict([I)[I
utilMDE.Intern:intern([J)[J
utilMDE.MathMDE:pow_fast(II)I
jtb.JavaParser:jj_3R_119()Z
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.ProglangType:isScalar()Z
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_57()Z
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:noDuplicates([J)Z
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:ne(II)Z
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
jtb.JavaParser:jj_2_3(I)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.JavaParserTokenManager:MoreLexicalActions()V
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:eltsGteIndex([I)Z
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.ValueTuple:size()I
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.diff.Node:Node()V
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.PptName:isCombinedExitPoint()Z
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltwiseNotEqual([I)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltsLT([II)Z
daikon.PptSlice0:initInvariantsSeen()V
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
jtb.JavaParser:jj_2_4(I)Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.Quant:eltwiseGT([I)Z
daikon.Quant:eltsLteIndex([I)Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:isSubset([D[D)Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:lexNotEqual([I[I)Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
utilMDE.MathMDE:gcd(JJ)J
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_51()Z
daikon.ModBitTracker:num_vars()I
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.inv.Invariant:justified()Z
jtb.JavaParser:jj_3R_133()Z
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:baseIsIntegral()Z
daikon.Quant:lte(II)Z
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.ProglangType:isPseudoArray()Z
daikon.ProglangType:isIntegral()Z
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.VarInfo:get_lower_bound()Ldaikon.Quantify.Term;
utilMDE.ArraysMDE:sum([I)I
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.ProglangType:dimensions()I
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_2_35(I)Z
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.Quantify.Term:esc_name()Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
704 2 501 2 864 2 237 2 46 2 713 2 894 2 403 4 1097 2 
814 2 1001 6 481 2 1100 2 280 2 1065 2 633 2 18 6 689 2 234 6 391 2 
221 2 864 2 168 6 493 6 732 2 260 4 569 6 530 6 1097 2 431 2 743 2 304 4 558 2 
844 4 192 2 893 2 327 8 737 8 432 10 929 8 963 12 204 2 93 2 864 6 414 10 514 4 1052 10 935 16 660 4 1020 6 275 2 871 16 1097 6 314 8 834 2 1024 2 61 26 348 10 217 6 106 4 289 16 486 10 1108 30 
902 6 463 4 
658 2 
112 2 696 2 293 2 737 2 895 2 432 2 328 2 963 2 414 4 1134 2 1052 2 935 2 871 2 940 2 1144 2 61 4 348 2 106 2 249 2 217 2 289 2 486 2 1108 6 
791 6 844 2 36 4 309 6 1052 4 935 8 671 2 871 8 432 4 61 12 348 4 407 4 963 5 110 2 289 8 486 4 1108 14 
694 8 643 2 805 2 76 2 642 2 949 2 295 4 769 2 496 2 645 2 300 2 702 2 225 4 227 4 44 2 15 4 960 10 653 2 202 2 50 2 901 10 471 2 682 2 167 6 95 4 903 2 378 4 1019 2 659 8 21 2 311 4 1021 2 661 2 313 2 982 60 283 2 992 2 
185 2 729 2 301 2 230 2 367 2 658 2 1136 2 139 2 105 2 598 2 
694 2 1069 2 356 2 846 2 767 2 491 4 848 2 430 2 300 4 704 2 437 2 654 2 864 4 443 2 243 2 1097 4 1104 2 728 2 114 2 120 2 522 2 123 2 323 2 1036 2 1039 2 44 2 676 4 821 2 538 2 620 2 204 2 965 2 338 2 1049 2 548 4 975 2 981 2 832 2 1059 2 1143 2 286 2 910 2 146 2 220 2 
917 2 918 4 566 4 36 4 396 6 737 18 432 16 405 4 819 2 407 4 963 22 469 2 472 6 864 4 791 6 414 6 375 2 309 6 1052 16 380 6 137 4 935 32 1020 4 871 32 1097 4 421 4 314 6 346 6 834 2 61 48 348 16 106 2 217 4 289 32 1105 8 763 2 486 16 1108 54 994 2 
694 2 167 2 202 2 
1 2 294 10 717 2 1135 2 174 2 738 2 129 2 507 2 710 22 538 2 200 2 408 2 1012 2 788 2 
562 2 561 1 147 3 148 2 700 1 152 3 429 4 850 2 154 2 9 1 302 2 434 2 436 1 854 2 303 1 709 2 579 3 160 2 581 16 1010 4 1011 2 864 32 307 12 1016 3 310 3 450 2 870 6 23 2 592 2 312 1 25 2 26 2 879 1 1027 2 316 6 597 2 1030 2 726 2 183 2 884 2 31 2 600 1 1035 2 894 2 609 4 611 2 614 2 1038 2 897 2 615 2 1043 2 197 24 1045 2 199 2 466 4 619 2 745 2 899 2 1048 2 624 16 206 2 1050 8 904 2 342 2 212 2 1053 1 757 2 628 2 344 2 629 1 477 2 60 6 759 2 635 2 764 2 71 1 488 2 638 5 914 3 73 2 358 1 490 2 768 2 644 2 495 2 924 2 925 3 85 2 1081 3 228 2 87 2 366 2 1084 2 88 2 1089 2 513 16 790 2 656 2 94 2 376 2 795 8 97 2 98 24 1096 3 1097 34 797 2 246 4 941 2 1102 1 107 2 390 2 664 4 117 2 119 2 257 2 524 2 397 2 670 4 531 2 532 32 954 2 955 2 535 3 818 2 1124 32 825 2 133 1 541 2 134 4 970 2 417 8 138 2 976 2 977 2 978 2 552 2 1138 1 1140 16 556 2 686 2 983 1 285 3 144 2 288 3 839 6 841 2 991 2 
438 2 
786 2 1097 2 
232 2 692 2 1097 4 
563 2 567 2 568 8 5 8 297 146 571 4 10 4 12 20 856 4 855 10 577 6 582 2 584 2 861 4 859 2 587 46 588 8 865 4 20 2 589 4 308 2 873 2 876 2 595 36 30 8 318 2 885 2 886 2 320 4 322 2 890 8 33 2 326 2 39 2 607 2 610 146 42 8 329 2 613 2 330 18 331 2 334 4 621 2 336 2 900 8 337 2 340 2 626 2 905 2 343 4 57 36 909 2 64 2 632 4 66 48 67 2 70 4 637 2 72 24 913 2 354 2 641 2 357 2 919 28 79 2 361 4 363 2 90 4 368 2 930 2 373 2 657 2 379 4 99 2 100 4 385 2 944 14 666 4 665 2 115 2 948 2 393 2 669 146 125 2 130 36 962 6 678 16 411 2 969 2 681 2 973 2 143 4 688 14 424 2 988 12 145 26 995 4 426 176 697 2 427 8 998 2 705 46 433 6 435 4 155 2 157 2 161 2 162 2 715 2 1014 4 441 2 166 2 446 10 448 2 449 4 175 46 453 2 455 4 1022 8 1023 4 724 2 178 46 723 8 179 2 1031 2 180 14 1032 4 727 2 182 2 184 10 460 2 736 4 194 46 740 46 195 2 1040 2 196 24 1041 2 746 4 747 2 468 2 470 4 473 2 474 2 754 2 475 2 211 2 756 4 1058 2 1060 2 213 20 1061 2 1064 2 1068 14 771 14 772 2 776 2 500 46 503 8 1087 2 238 22 1092 2 241 6 1094 4 799 46 251 2 807 46 1115 2 809 2 1118 4 811 2 528 8 1120 48 534 6 1122 4 1123 4 536 8 1128 22 537 46 264 38 269 4 546 4 270 2 273 4 551 46 278 16 284 2 835 4 1148 2 1149 2 1150 20 838 4 559 2 842 6 
526 2 6 1 497 2 163 2 
63 2 163 2 
694 2 250 2 485 2 943 2 660 2 163 2 553 2 
89 2 485 2 163 2 
939 2 485 2 163 2 
482 2 1051 2 526 2 
485 2 163 2 
1051 2 333 2 
953 2 163 2 
707 2 1051 2 526 2 
176 2 86 2 526 2 
813 2 290 2 526 2 
575 2 1125 2 526 2 
103 2 526 2 586 2 
542 2 1051 2 
1080 2 163 2 
118 2 86 2 
290 2 1013 2 
1098 2 1125 2 
831 2 586 2 
1051 2 572 2 
1063 2 586 2 
1125 2 928 2 
290 2 1099 2 
86 2 190 2 
707 2 1051 2 526 2 80 2 
707 2 1110 2 1051 2 526 2 80 2 
345 2 1051 2 526 2 
684 2 1051 2 526 2 
942 2 801 2 423 2 1130 2 
694 2 250 2 27 2 550 2 
694 2 250 2 27 2 389 2 550 2 553 2 
694 2 250 2 485 2 660 2 242 2 163 2 
908 2 430 2 
694 2 250 2 447 2 660 2 
1125 2 708 2 
586 2 718 2 
86 2 1088 2 
290 2 987 2 
290 2 586 2 425 2 
290 2 586 2 56 2 
290 2 586 2 673 2 
290 2 298 2 586 2 
694 2 381 2 101 2 704 2 958 6 1083 2 250 2 
1051 2 599 2 
721 2 255 4 386 2 281 2 172 2 
765 2 526 2 
1011 2 
562 4 429 4 849 2 154 2 434 2 854 2 303 2 1010 4 306 2 864 26 1015 2 307 8 870 4 592 2 25 2 26 2 177 2 1027 2 316 2 725 2 1030 6 726 2 319 2 462 2 1035 2 894 2 609 2 1043 2 1045 2 466 2 199 2 745 2 899 2 206 2 1050 2 212 2 758 2 344 2 60 2 764 2 488 2 766 2 644 2 775 4 647 2 504 4 1086 2 1089 2 656 2 376 2 1097 26 246 2 387 2 1102 2 107 2 664 4 392 2 113 2 524 2 397 2 532 4 672 2 818 2 1124 6 541 2 134 4 970 2 416 2 976 2 978 2 552 2 1140 6 839 6 841 2 
562 4 429 4 849 2 154 2 434 2 854 2 303 2 1010 4 306 2 864 26 1015 2 307 8 870 5 23 1 592 2 25 2 26 2 177 2 1027 2 316 2 725 2 1030 6 726 2 462 2 1035 2 894 2 609 2 1043 2 1045 2 466 2 199 2 745 2 899 2 206 2 1050 2 212 2 758 2 344 2 60 2 1062 2 764 2 488 2 766 2 644 2 775 4 647 2 504 4 1086 2 1089 2 656 2 376 2 1097 26 246 2 387 2 1102 2 107 2 664 4 668 2 113 2 117 1 524 2 397 2 532 4 818 2 1124 6 825 2 541 2 134 4 970 2 416 2 976 2 978 2 552 2 1140 6 1141 2 839 6 841 2 
554 2 
1147 2 573 2 
693 4 932 2 601 2 545 2 1074 4 720 2 360 2 244 2 812 2 84 2 814 2 1001 2 874 2 1100 2 1007 2 877 2 234 2 560 2 
693 4 1074 4 429 2 360 2 1078 2 84 2 434 2 706 2 854 2 1001 6 1007 4 508 4 857 2 1009 4 18 6 234 4 511 2 91 2 932 2 864 6 1091 4 720 2 244 2 245 2 1097 12 874 2 1100 4 877 2 520 2 601 2 321 2 121 2 191 2 604 2 734 2 812 2 814 4 818 2 1127 2 1043 2 539 2 677 6 206 2 134 2 970 2 545 2 549 4 210 2 974 2 755 2 1056 2 62 4 352 2 1065 2 633 2 839 4 841 2 560 2 989 2 690 2 
693 4 1074 4 429 2 360 2 1078 2 84 2 434 2 706 2 854 2 1001 4 1007 4 508 4 857 2 1009 4 18 6 234 6 511 2 91 2 932 2 864 6 1091 4 720 2 244 2 245 2 1097 12 874 2 1100 4 877 2 520 2 601 2 321 2 121 2 191 2 604 2 734 2 812 2 814 4 818 2 1127 2 1043 2 539 2 677 6 206 2 134 2 970 2 545 2 549 4 210 2 974 2 755 2 1056 2 280 2 62 4 352 2 633 2 839 4 841 2 560 2 989 2 690 2 
693 4 1074 4 429 2 360 2 1078 2 84 2 434 2 706 2 854 2 1001 6 1007 4 508 4 857 2 1009 4 18 6 234 6 511 2 91 2 932 2 864 6 1091 4 720 2 244 2 245 2 1097 12 874 2 1100 4 877 2 520 2 601 2 321 2 121 2 191 2 604 2 734 2 812 2 814 4 818 2 1127 2 1043 2 539 2 677 6 206 2 134 2 970 2 545 2 549 8 210 2 974 2 755 2 1056 2 481 2 62 4 352 2 633 2 839 4 841 2 560 2 989 2 690 2 
693 4 429 2 1074 4 360 2 1078 2 84 2 434 2 706 2 854 2 1001 6 1007 4 508 4 857 2 1009 4 18 8 234 8 511 2 91 2 932 2 864 6 1091 8 720 2 244 2 245 2 1097 12 874 2 1100 4 877 2 520 2 601 2 321 2 121 2 191 2 604 2 734 2 812 2 814 4 818 2 1127 2 1043 2 539 2 677 10 206 2 134 2 970 2 545 2 549 8 210 2 974 2 755 2 1056 2 481 2 280 2 62 4 352 2 633 2 839 4 841 2 560 2 989 2 690 2 
693 4 1074 4 429 2 360 2 1078 2 84 2 434 2 706 2 854 2 1001 6 1007 4 508 4 857 2 1009 4 18 6 234 6 511 2 91 2 932 2 864 6 1091 8 720 2 244 2 245 2 1097 12 874 2 1100 4 877 2 520 2 601 2 321 2 121 2 191 2 604 2 734 2 812 2 814 4 818 2 1127 2 1043 2 539 2 677 10 206 2 134 2 970 2 545 2 549 8 210 2 974 2 755 2 1056 2 481 2 62 4 352 2 633 2 839 4 841 2 560 2 989 2 690 2 
292 2 570 2 851 2 854 2 576 8 857 2 18 12 305 2 864 24 307 4 868 1 870 6 23 2 592 2 25 2 26 2 874 2 877 2 316 2 28 6 29 2 601 2 889 2 321 2 604 2 894 2 605 2 609 2 40 6 616 2 898 6 48 2 622 1 899 2 339 6 630 1 60 2 347 2 62 8 352 4 633 4 634 2 636 2 644 2 360 2 83 2 84 2 648 2 927 6 652 2 91 2 371 6 932 2 656 2 382 2 104 2 387 2 107 2 663 2 108 2 664 4 113 2 117 2 121 4 674 2 677 2 961 1 409 2 966 6 134 4 970 2 416 4 974 2 976 2 978 2 687 2 989 2 690 2 693 4 149 6 699 1 429 4 434 2 706 2 1001 4 711 1 1007 4 1008 2 438 6 1009 4 1010 4 720 2 1027 2 1030 6 726 2 191 2 1034 2 734 2 741 2 1043 2 1045 2 466 2 748 2 206 2 1050 2 755 2 210 2 212 2 1056 2 478 2 764 2 219 6 488 2 766 2 1071 7 1074 4 775 4 224 1 508 6 784 10 232 6 786 6 785 2 234 8 511 2 235 4 789 6 793 2 245 2 244 2 1097 46 246 2 248 1 1100 4 517 2 800 7 253 2 520 2 256 6 258 6 532 2 812 2 1121 4 814 4 815 6 818 2 1124 8 1127 2 539 2 541 12 545 2 830 1 547 2 549 2 1140 6 280 4 839 6 841 2 560 2 
693 4 562 2 292 2 149 6 429 4 570 2 851 2 434 2 706 2 1001 8 854 2 576 8 1007 4 1008 2 438 6 857 2 1009 4 18 12 1010 4 305 2 864 26 307 8 870 6 23 2 720 2 592 2 25 2 874 2 26 2 877 2 316 2 1027 2 28 6 726 2 1030 6 29 2 889 2 601 2 321 2 1034 2 191 2 604 2 734 2 894 2 605 2 40 6 609 4 741 2 1042 2 616 2 1043 2 898 6 48 2 1045 2 466 4 748 2 899 2 339 6 206 2 1050 2 210 2 755 2 212 2 627 2 1056 2 478 2 481 4 347 2 60 2 62 8 352 4 633 4 636 2 634 2 764 2 219 6 488 2 766 2 644 2 1074 4 775 4 360 2 83 2 84 2 648 2 927 6 508 6 652 2 784 10 232 6 785 2 786 6 235 4 91 2 511 2 234 8 371 6 789 6 932 2 793 2 656 2 244 2 245 2 382 2 1097 48 246 4 387 2 104 2 1100 4 517 2 663 2 107 2 108 2 253 2 664 4 113 2 520 2 256 6 117 2 258 6 121 4 532 2 1121 4 812 2 815 6 814 4 674 2 1124 8 818 2 1127 2 539 2 677 2 409 2 541 12 966 6 134 4 970 2 545 2 416 4 547 2 549 6 974 2 976 2 978 2 1140 6 687 2 839 6 841 2 989 2 560 2 690 2 
693 4 562 2 292 2 149 6 429 4 570 2 851 2 434 2 706 2 1001 8 854 2 576 8 1007 4 1008 2 438 6 857 2 1009 4 18 12 1010 4 305 2 864 26 307 8 870 6 23 2 720 2 592 2 25 2 874 2 26 2 877 2 316 2 1027 2 28 6 726 2 1030 6 29 2 889 2 601 2 321 2 1034 2 191 2 604 2 734 2 894 2 605 2 40 6 609 4 741 2 1042 2 616 2 1043 2 898 6 48 2 1045 2 466 4 748 2 899 2 339 6 206 2 1050 2 210 2 755 2 212 2 627 2 1056 2 478 2 481 4 347 2 60 2 62 8 352 4 633 4 636 2 634 2 764 2 219 6 488 2 766 2 644 2 1074 4 775 4 360 2 83 2 84 2 648 2 927 6 508 6 652 2 784 10 232 6 785 2 786 6 235 4 91 2 511 2 234 8 371 6 789 6 932 2 793 2 656 2 1091 4 244 2 245 2 382 2 1097 48 246 4 387 2 104 2 1100 4 517 2 663 2 107 2 108 2 253 2 664 4 113 2 520 2 256 6 117 2 258 6 121 4 532 2 1121 4 812 2 815 6 814 4 674 2 1124 8 818 2 1127 2 539 2 677 6 409 2 541 12 966 6 134 4 970 2 545 2 416 4 547 2 549 6 974 2 976 2 978 2 1140 6 687 2 839 6 841 2 989 2 560 2 690 2 
562 2 845 6 292 2 7 2 570 2 851 2 854 2 576 8 14 6 857 2 18 16 305 2 864 24 307 10 870 6 23 2 592 2 25 2 26 2 874 2 877 2 316 4 28 6 29 2 601 2 889 2 321 2 604 2 894 2 605 2 609 4 40 12 616 2 898 6 47 2 48 2 899 2 339 6 627 2 60 4 62 8 352 4 633 4 634 2 636 2 644 2 360 2 83 2 84 2 648 2 927 6 652 2 91 2 371 6 932 2 656 2 382 2 104 2 387 4 107 2 663 2 108 2 109 6 664 4 113 2 117 2 121 4 674 2 677 6 409 2 966 6 134 4 680 2 970 2 416 4 974 2 976 2 978 2 687 2 989 2 690 2 693 4 149 12 429 4 434 2 706 2 1001 10 158 6 1007 4 1008 2 438 12 1009 4 1010 4 445 6 171 6 720 2 1027 2 1030 8 726 2 191 2 1034 2 734 2 741 2 1042 2 1043 2 1045 2 466 4 467 2 748 2 206 2 1050 4 209 6 755 2 210 2 212 2 1056 2 478 2 481 4 1065 2 764 2 219 6 488 2 766 2 1074 4 775 6 508 6 784 8 232 12 786 12 785 2 234 10 511 2 235 4 789 12 793 2 1091 4 245 2 244 2 1097 52 246 4 1100 4 517 2 253 2 520 2 256 6 258 6 525 6 1117 2 532 4 812 2 1121 4 814 4 815 6 262 6 818 2 1124 12 1127 2 539 2 541 10 545 2 547 2 549 6 1140 8 833 2 280 2 279 2 287 2 839 6 841 2 560 2 
693 2 520 2 601 2 321 2 734 2 1074 2 360 2 814 4 1001 6 508 2 857 2 1009 2 539 2 677 4 18 4 91 2 511 2 234 6 932 2 545 2 1091 4 549 6 755 2 974 2 244 2 1097 4 1056 2 481 2 874 2 1100 4 62 2 633 2 989 2 560 2 690 2 
693 2 429 4 434 2 1001 6 854 2 857 2 1009 2 18 4 1011 2 1010 4 864 24 870 6 23 2 592 2 25 2 26 2 874 2 1027 2 316 3 597 2 1030 6 726 2 601 2 321 2 734 2 894 2 897 2 1043 2 1045 2 899 2 206 2 755 2 212 2 1056 2 481 2 59 2 60 3 347 2 62 2 633 2 764 2 488 2 766 2 644 2 1074 2 775 4 360 2 777 3 508 2 784 2 234 6 511 2 91 2 932 2 656 2 244 2 245 2 1097 28 1100 4 107 2 664 4 113 2 520 2 946 2 117 2 257 2 122 2 1116 2 532 3 814 4 818 2 1124 8 539 2 677 2 541 4 134 4 970 2 545 2 416 2 549 6 974 2 976 2 1140 6 986 2 839 6 841 2 560 2 989 2 690 2 
693 4 1074 4 429 2 360 2 1078 2 84 2 434 2 706 2 854 2 1001 6 1007 4 508 4 857 2 1009 4 18 6 234 6 511 2 91 2 932 2 864 6 1091 8 720 2 244 2 245 2 1097 12 874 2 1100 4 877 2 520 2 601 2 321 2 121 2 191 2 604 2 734 2 812 2 814 4 818 2 1127 2 1043 2 539 2 677 10 206 2 134 2 970 2 545 2 549 8 210 2 974 2 755 2 1056 2 481 2 62 4 352 2 633 2 839 4 841 2 560 2 989 2 690 2 
693 4 429 2 1074 4 360 2 84 2 434 2 706 2 854 2 1001 8 1007 4 508 4 1009 4 18 8 511 2 91 2 234 6 932 2 864 6 1091 8 720 2 244 2 245 2 456 2 1097 12 874 2 1100 4 877 2 804 2 520 2 601 2 321 2 121 2 191 2 604 2 734 2 812 2 814 4 818 2 1127 2 1043 2 539 2 677 10 206 2 134 2 970 2 545 2 549 8 210 2 974 2 755 2 1056 2 277 4 481 2 62 4 352 2 1065 2 633 2 839 4 841 2 560 2 989 2 690 2 
1056 2 734 2 837 2 
1056 2 734 2 837 2 
693 2 997 2 565 2 4 2 428 2 429 4 434 2 854 2 1001 12 1007 4 580 2 1009 2 858 2 18 16 1010 4 862 2 864 16 307 4 870 6 23 2 592 2 25 2 26 2 877 2 1027 2 725 4 1030 2 726 2 186 2 1034 2 325 2 733 2 604 2 734 6 894 2 609 4 1043 2 1044 4 1045 2 466 4 899 2 339 2 206 2 210 2 341 2 755 2 212 2 1056 4 481 4 62 4 352 4 1065 4 633 4 634 2 764 2 488 2 766 2 1074 2 646 2 84 2 648 2 508 4 509 2 784 2 235 2 234 12 931 4 656 2 1091 4 244 2 1097 24 246 4 1100 4 107 2 664 4 113 2 117 2 121 2 950 2 529 2 128 2 532 2 1121 2 814 4 818 2 1124 2 1127 2 677 6 541 4 134 4 970 2 545 4 416 6 549 6 974 2 976 2 978 4 1140 2 142 2 280 4 837 2 839 6 841 2 560 2 
541 2 997 2 206 2 339 2 864 2 4 2 341 2 720 2 573 2 1121 2 1097 4 464 2 816 2 478 2 1005 2 784 2 748 2 
693 2 997 2 565 2 4 2 428 2 429 4 434 2 706 2 854 2 1001 12 1007 4 580 2 1009 2 18 16 1010 4 862 2 864 16 307 4 870 6 23 2 592 2 25 2 26 2 877 2 1027 2 725 4 1030 2 726 2 186 2 1034 2 733 4 604 2 734 6 894 2 739 2 609 4 1043 2 1044 4 1045 2 466 4 899 2 339 2 206 2 210 2 341 2 755 2 212 2 1056 4 481 4 62 4 352 4 1065 4 633 4 634 2 764 2 488 2 766 2 1074 2 646 2 84 2 648 2 508 4 780 2 509 2 235 2 234 12 931 4 656 2 1091 4 240 2 1093 2 244 2 1097 24 246 4 1100 4 107 2 664 4 113 2 117 2 121 4 529 2 532 4 814 4 818 2 1124 2 1127 2 677 6 541 2 1132 2 134 4 970 2 545 4 416 6 549 6 974 2 976 2 978 4 1140 2 142 2 280 4 837 2 839 6 841 2 560 2 
693 2 997 2 565 2 4 2 428 2 429 4 853 2 434 2 706 2 854 2 1001 12 1007 4 580 2 1009 2 18 16 1010 4 862 2 864 16 307 4 870 6 23 2 592 2 24 2 25 2 26 2 877 2 1027 2 725 4 1030 2 726 2 181 2 186 2 1034 2 733 2 604 2 734 6 894 2 609 4 1043 2 1044 4 1045 2 466 4 899 2 339 2 206 2 210 2 341 2 755 2 212 2 1056 4 481 4 62 4 352 4 1065 4 633 4 634 2 764 2 488 2 766 2 1074 2 646 2 84 2 648 2 508 4 509 2 784 2 233 2 235 2 234 12 370 2 931 4 656 2 1091 4 244 2 1097 24 246 4 1100 4 107 2 664 4 113 2 117 2 121 4 529 2 532 2 1121 2 814 4 818 2 1124 2 1127 2 677 6 541 4 134 4 970 2 545 4 416 6 549 6 974 2 976 2 978 4 1140 2 142 2 280 4 837 2 839 6 841 2 560 2 
295 2 7 2 849 2 299 2 570 2 854 2 303 2 15 2 16 18 578 2 581 4 17 4 305 2 306 2 863 2 864 30 866 2 307 42 867 2 590 2 591 2 22 2 870 13 23 5 871 8 593 2 25 2 314 6 26 4 315 10 316 16 596 2 883 2 602 10 603 4 324 2 36 4 894 4 38 4 606 2 605 2 608 2 41 10 45 2 332 2 618 2 47 2 335 2 51 2 52 2 906 2 54 2 53 2 59 2 60 19 61 12 349 14 348 4 65 6 68 2 353 2 916 2 75 2 643 2 77 2 644 2 921 2 922 2 647 2 649 24 362 3 369 2 656 2 96 2 934 4 935 8 102 2 938 2 387 46 107 2 108 2 664 6 111 2 113 2 117 5 394 4 122 2 395 3 124 2 952 6 126 2 127 2 400 2 402 2 956 2 674 2 406 2 132 2 963 6 412 3 413 4 134 4 680 2 970 2 416 2 136 14 135 2 976 4 978 4 419 2 683 2 420 4 980 2 986 2 994 4 150 2 701 2 999 2 151 2 153 2 429 4 1000 2 434 2 432 4 1004 2 1006 2 712 2 439 2 1010 6 440 2 1015 2 1017 2 716 2 451 4 1020 4 457 4 177 14 1029 38 1028 2 726 2 1030 14 731 2 187 2 189 2 462 2 193 2 737 4 742 12 1043 2 467 2 1047 10 203 2 750 2 751 3 205 1 206 2 752 2 208 2 1050 20 1052 4 212 4 758 2 480 2 215 2 483 2 216 4 484 2 760 2 764 4 763 2 486 4 487 2 488 2 489 2 1070 2 492 10 1072 2 1073 16 770 2 1075 2 222 4 775 12 777 2 499 2 1079 2 226 2 227 2 1082 6 506 2 231 2 781 2 783 2 1085 2 1086 2 236 2 513 4 792 3 791 6 239 2 1097 40 796 2 515 2 1101 2 1102 2 1103 16 802 2 1106 2 253 2 252 2 1108 16 519 2 521 2 523 4 806 4 808 2 1112 2 1114 8 259 2 1113 2 1117 2 1116 2 810 2 532 19 1124 28 818 2 1126 2 820 2 263 2 1129 2 823 40 540 4 266 2 827 2 828 14 541 2 544 2 829 2 547 4 1133 2 271 2 272 6 274 2 1140 14 833 2 1142 2 557 4 279 2 1145 2 283 2 282 2 1146 2 839 6 289 8 841 2 1151 4 
519 2 602 2 644 2 1113 2 810 2 775 2 532 2 41 4 406 2 1124 2 263 2 412 2 864 2 1133 2 1097 2 1140 2 722 2 315 2 60 2 387 6 760 2 316 2 596 2 1030 2 
519 2 602 2 644 2 1113 2 810 2 775 2 532 2 41 4 406 2 1124 2 263 2 412 2 864 2 1133 2 1097 2 1140 2 722 2 315 2 60 2 387 6 760 2 316 2 596 2 1030 2 
519 2 602 2 644 2 1113 2 810 2 775 2 532 2 41 4 406 2 1124 2 263 2 412 2 864 2 1133 2 1097 2 1140 2 722 2 315 2 60 2 387 6 760 2 316 2 596 2 1030 2 
3 2 644 2 1114 6 891 2 1072 4 296 2 261 2 532 3 432 2 362 3 505 3 406 2 1124 2 581 2 714 2 513 2 413 2 374 2 792 3 864 4 933 2 1052 2 935 2 1020 2 1097 10 871 2 980 4 1139 2 384 2 314 4 631 4 61 4 60 3 1145 4 348 2 289 2 486 2 1107 2 111 4 1108 5 
3 2 644 2 1114 6 891 2 1072 4 296 2 737 2 261 2 532 2 432 2 362 2 505 2 406 2 1124 2 581 2 963 2 714 2 513 2 413 2 374 2 792 2 864 4 933 2 1052 2 935 2 1020 2 1097 10 871 2 980 4 1139 2 384 2 314 4 834 2 631 4 61 4 60 2 1145 4 348 2 289 2 486 2 1107 2 111 4 1108 4 
3 2 644 2 1114 6 891 2 1072 4 296 2 737 2 261 2 532 2 432 2 362 2 505 2 406 2 1124 2 581 2 963 2 714 2 513 2 413 2 374 2 792 2 864 4 933 2 1052 2 935 2 1020 2 1097 10 871 2 980 4 1139 2 384 2 314 4 834 2 631 4 61 4 60 2 1145 4 348 2 289 2 486 2 1107 2 111 4 1108 4 
3 2 644 2 1114 6 891 2 1072 4 296 2 737 2 261 2 532 2 432 2 362 2 505 2 406 2 1124 2 581 2 963 2 714 2 513 2 413 2 374 2 792 2 864 4 933 2 1052 2 935 2 1020 2 1097 10 871 2 980 4 1139 2 384 2 314 4 834 2 631 4 61 4 60 2 1145 4 348 2 289 2 486 2 1107 2 111 4 1108 4 
3 2 644 2 1114 6 891 2 1072 4 296 2 737 4 261 2 532 2 432 2 362 2 505 2 406 2 1124 2 581 2 963 4 714 2 513 2 413 2 374 2 792 2 864 4 933 2 1052 2 935 2 1020 2 1097 10 871 2 980 4 1139 2 384 2 314 4 834 4 631 4 61 4 60 2 1145 4 348 2 289 2 486 2 1107 2 111 4 1108 4 
404 2 1112 2 920 2 8 2 880 2 223 2 
612 2 476 2 404 2 1002 2 177 2 787 2 1077 2 
843 1 35 2 1119 2 923 2 81 2 574 2 959 2 585 2 1046 2 265 2 860 2 50 1 789 2 864 8 442 2 173 2 1097 10 1021 1 276 1 1025 2 69 1 803 2 841 2 1066 2 691 2 518 2 
917 1 36 2 396 4 38 2 737 3 432 6 779 2 43 2 405 2 963 5 236 2 864 6 791 4 1049 2 1052 6 935 6 1020 2 1097 6 871 6 593 2 832 2 937 2 314 4 834 2 61 12 348 6 761 2 1105 2 289 6 486 6 1108 15 
679 2 864 1 887 2 116 2 543 2 1111 7 1072 2 951 2 1076 2 1097 1 662 2 555 2 214 1 1145 2 651 4 159 2 826 2 111 2 
679 2 887 2 116 2 543 4 1111 6 1072 2 951 2 1076 2 662 2 555 2 1145 2 651 4 159 4 826 4 111 2 
679 2 864 1 887 2 116 2 543 8 1111 10 1072 2 951 6 1076 2 1097 1 662 8 555 2 214 1 1145 2 651 4 159 8 826 8 111 2 
679 2 887 2 116 2 543 2 1111 2 1072 2 1076 2 555 2 1145 2 651 2 159 2 826 2 111 2 
0 2 695 4 291 8 2 2 698 4 703 10 852 24 11 2 156 4 13 4 1010 44 164 2 864 70 444 4 169 2 869 2 170 4 870 102 719 1 23 28 452 16 454 2 872 4 26 6 875 4 594 4 458 10 878 12 1026 8 881 4 317 4 459 2 882 2 32 4 888 8 188 8 461 16 193 2 735 6 892 4 1037 4 198 28 201 10 749 4 625 4 207 10 1054 4 907 2 1055 10 350 2 351 24 762 4 218 2 764 6 912 4 1067 4 915 4 355 32 639 4 640 2 74 6 494 2 359 6 1075 2 82 8 926 4 502 4 650 24 364 4 512 4 372 2 655 8 1090 4 794 2 377 4 1095 2 936 4 1097 78 383 4 516 8 798 10 388 4 664 36 667 8 521 2 1109 4 117 26 947 16 399 2 401 10 533 16 131 4 675 4 817 4 824 4 410 4 964 4 268 6 1131 4 971 4 418 4 976 2 140 2 141 4 984 11 985 2 840 4 990 4 993 4 
0 2 915 2 291 6 640 2 74 4 494 2 359 2 1075 2 774 2 852 8 703 6 926 4 229 2 782 2 92 2 1010 14 512 4 864 26 1090 2 794 2 870 40 23 12 452 14 1095 2 1097 28 26 2 458 6 459 2 664 14 521 2 1109 2 117 12 193 2 527 2 398 10 401 2 1037 4 817 4 675 2 131 2 617 2 198 6 824 4 268 2 967 2 207 6 415 2 753 2 976 2 55 2 1137 2 1057 2 141 2 985 2 984 2 762 4 764 2 990 4 993 2 
0 2 695 4 996 4 291 16 698 4 564 26 703 16 852 124 156 4 1003 8 13 6 583 6 1010 112 165 2 19 12 864 134 444 6 1018 6 869 2 170 6 870 248 23 58 452 28 872 6 26 14 458 16 594 4 878 12 881 4 317 4 459 2 1033 4 882 2 730 8 32 4 188 50 34 10 193 8 735 6 892 6 1037 6 617 2 744 24 198 34 465 90 49 8 749 6 623 2 625 4 207 16 753 2 55 4 1057 11 58 26 479 24 351 84 762 6 218 2 764 14 911 4 1067 6 915 4 640 2 74 8 494 5 78 4 359 10 1075 8 773 4 774 2 926 6 498 10 502 4 778 24 650 92 365 2 782 4 364 6 510 90 92 8 512 8 372 4 1090 10 655 24 794 4 377 4 1095 2 1097 150 383 6 516 42 247 24 388 6 664 88 945 2 254 4 521 8 1109 10 117 58 947 42 527 2 398 22 401 18 957 4 817 6 675 10 131 4 822 2 824 6 267 24 964 6 268 36 1131 6 967 2 968 4 415 2 418 6 976 8 979 18 1137 2 140 2 685 4 141 10 984 16 836 10 840 6 990 6 993 6 
0 2 521 2 640 2 117 3 847 2 494 2 37 2 193 2 1075 2 1010 4 372 1 864 12 972 2 976 2 870 9 23 3 1095 2 452 5 1097 12 26 2 422 2 985 2 764 2 459 2 664 4 993 1 
896 2 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V ERROR java.lang.NullPointerException 955 
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V FAILED junit.framework.ComparisonFailure 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V FAILED junit.framework.ComparisonFailure 
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 840 242 593 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V ERROR java.lang.NullPointerException 1128 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
utilMDE.FuzzyFloat:lt(DD)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.syntaxtree.CompilationUnit:getParent()Ljtb.syntaxtree.Node;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_57()Z
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArgument;)V
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:lexGTE([I[I)Z
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
jtb.syntaxtree.VariableDeclaratorId:VariableDeclaratorId(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.ModBitTracker:num_vars()I
jtb.JavaParser:jj_3R_98()Z
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
jtb.JavaParser:jj_3R_56()Z
jtb.JavaParser:jj_3_5()Z
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.FormalParameter:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE:gcd([I)I
daikon.Quant:pairwiseGT([I[I)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
utilMDE.MathMDE:gcd(JJ)J
daikon.VarInfo:new_ppt()V
daikon.Quant:gte(II)Z
daikon.Quant:lexLT([I[I)Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.ValueSet:ValueSet(I)V
jtb.JavaParser:jj_3_4()Z
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PostfixExpression;)V
daikon.Quant:memberOf(I[I)Z
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.Quant:setDiff([I[I)[I
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.Quant:lexGT([I[I)Z
jtb.JavaParser:jj_3R_180()Z
jtb.JavaCharStream:ReadByte()C
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:jj_3R_117()Z
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.ArraysMDE:min([I)I
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.JavaParser:jj_3R_164()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
utilMDE.ArraysMDE:sum([[D)D
daikon.Quant:concat([I[I)[I
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalExpression;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ShiftExpression;)V
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
jtb.JavaParser:jj_3R_115()Z
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.VariableDeclaratorId:accept(Ljtb.visitor.Visitor;)V
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.Quant:lt(II)Z
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:subarray([III)[I
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
jtb.syntaxtree.NodeListOptional:elements()Ljava.util.Enumeration;
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_12()Z
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
jtb.JavaParser:jj_3R_108()Z
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
utilMDE.MathMDE:nonmodulus_strict([I)[I
jtb.JavaParser:jj_3_29()Z
daikon.VarInfoName.Add:amount()Ljava.lang.String;
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
jtb.syntaxtree.ShiftExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
jtb.syntaxtree.NodeSequence:elements()Ljava.util.Enumeration;
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_123()Z
jtb.JavaCharStream:getBeginColumn()I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeToken;)V
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.ArraysMDE:sorted([I)Z
daikon.Quant:pairwiseLT([I[I)Z
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String; | ASSIGN | 283084 | = null
jtb.syntaxtree.ConditionalAndExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
utilMDE.UtilMDE:removeWhitespaceBefore(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String; | CONSTANT | 53860 | 1 -> 2
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameters;)V
utilMDE.MathMDE:gcd(II)I
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_99()Z
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
jtb.JavaParser:jj_3R_161()Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_2_12(I)Z
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.Debug:logOn()Z
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
jtb.syntaxtree.NodeSequence:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3_18()Z
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
jtb.syntaxtree.NodeListOptional:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_2_15(I)Z
jtb.syntaxtree.InstanceOfExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.BlockStatement:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParserTokenManager:jjStopAtPos(II)I
jtb.JavaParser:jj_3R_88()Z
utilMDE.MathMDE:modulus([I)[I
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.Quant:eltsGTE([II)Z
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.Type:accept(Ljtb.visitor.Visitor;)V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
jtb.syntaxtree.TypeArgument:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltwiseGTE([I)Z
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.Quant:lexNotEqual([I[I)Z
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.RelationalExpression;)V
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.NodeListOptional:getParent()Ljtb.syntaxtree.Node;
utilMDE.OrderedPairIterator:setnext1()V
jtb.JavaCharStream:getEndLine()I
daikon.inv.Invariant:isWorthPrinting()Z
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.Quant:subsetOf([J[J)Z
jtb.JavaParser:jj_3R_121()Z
daikon.Quant:eq(FF)Z
jtb.JavaParser:jj_3R_75()Z
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryPrefix;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.Invariant:getConfidence()D
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpression;)V
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.ValueTuple:isMissing(I)Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeChoice:getParent()Ljtb.syntaxtree.Node;
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
jtb.syntaxtree.UnaryExpressionNotPlusMinus:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
jtb.syntaxtree.Block:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.Quant:eltwiseEqual([I)Z
daikon.inv.unary.UpperBoundCore:computeConfidence()D
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.Quant:subsetOf([F[F)Z
utilMDE.UtilMDE:removeWhitespaceAfter(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_100()Z
jtb.syntaxtree.TypeDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
jtb.JavaParser:jj_3_13()Z
utilMDE.Intern:internSubsequence([JII)[J
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.Quant:lexLTE([I[I)Z
daikon.PptSlice2:arity()I
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
utilMDE.OrderedPairIterator:setnext2()V
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.EqualityExpression;)V
jtb.JavaParser:jj_2_4(I)Z
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ResultType;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
jtb.syntaxtree.ClassOrInterfaceDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_28()Z
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.PptTopLevel.CondIterator:hasNext()Z
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.PptSlice1:arity()I
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
jtb.Token:newToken(I)Ljtb.Token;
jtb.JavaParser:jj_2_3(I)Z
daikon.Quant:lexEqual([I[I)Z
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParser:jj_3R_148()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Statement;)V
jtb.syntaxtree.Literal:accept(Ljtb.visitor.Visitor;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.LimitedSizeIntSet:add(I)V
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.Quant:memberOf(S[S)Z
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.test.TestAst.ClassOrInterfaceDeclarationHarvester:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.ClassOrInterfaceBody:ClassOrInterfaceBody(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
utilMDE.ArraysMDE:indexOf([II)I
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:subsetOf([I[I)Z
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
utilMDE.MathMDE:missing_numbers([I)[I
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
utilMDE.Intern:intern([I)[I
daikon.Quant:pairwiseGTE([I[I)Z
utilMDE.WeakHasherMap:size()I
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.Quant:subsetOf([B[I)Z
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.ValueTuple:size()I
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.diff.Node:Node()V
daikon.Quant:eltwiseGT([I)Z
jtb.JavaParser:VariableDeclaratorId()Ljtb.syntaxtree.VariableDeclaratorId;
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:ClassOrInterfaceDeclaration(Ljtb.syntaxtree.NodeChoice;Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ClassOrInterfaceBody;)V
jtb.JavaParser:jj_3R_55()Z
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.BlockStatement;)V
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_210()Z
jtb.JavaParser:jj_3R_101()Z
jtb.JavaParser:jj_2_10(I)Z
utilMDE.FuzzyFloat:ne(DD)Z
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Block;)V
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.ResultType:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
jtb.syntaxtree.VariableDeclaratorId:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_2_13(I)Z
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:name()Ljava.lang.String;
jtb.syntaxtree.RelationalExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.ModBitTracker:split(I)I
jtb.syntaxtree.NullLiteral:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_116()Z
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.tools.jtb.Ast:print(Ljtb.syntaxtree.Node;)Ljava.lang.String;
jtb.JavaParser:jj_3R_58()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
jtb.JavaParser:jj_2_35(I)Z
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.MathMDE:gcd_differences([I)I
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:setEqual([I[I)Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_48()Z
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.Quant:eltsLT([II)Z
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
daikon.Quant:eq(DD)Z
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
jtb.JavaParser:jj_3R_89()Z
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AndExpression;)V
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameter;)V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
utilMDE.ArraysMDE:element_range([I)I
jtb.JavaParser:jj_3R_134()Z
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.diff.InvMap:toString()Ljava.lang.String;
jtb.syntaxtree.TypeParameter:accept(Ljtb.visitor.Visitor;)V
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Name;)V
daikon.Quant:eq(JJ)Z
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
utilMDE.MathMDE:sign(I)I
jtb.JavaParser:jj_2_18(I)Z
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.LowerBoundCore:computeProbability()D
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
daikon.Quant:pairwiseDivides([I[I)Z
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
jtb.JavaParser:jj_3R_70()Z
jtb.JavaParser:jj_2_21(I)Z
jtb.JavaCharStream:getBeginLine()I
jtb.JavaParser:jj_3R_85()Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_124()Z
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_169()Z
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
jtb.syntaxtree.ReturnStatement:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3_1()Z
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
jtb.JavaParser:jj_3_22()Z
jtb.syntaxtree.TypeDeclaration:TypeDeclaration(Ljtb.syntaxtree.NodeChoice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.CompilationUnit;)V
jtb.JavaParser:jj_3R_49()Z
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:gt(II)Z
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParser:jj_3R_103()Z
daikon.Quant:eltsGteIndex([I)Z
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
jtb.JavaParser:jj_3R_60()Z
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.NodeToken:numSpecials()I
daikon.PptTopLevel:getInvariants()Ljava.util.List;
jtb.JavaParser:jj_3R_162()Z
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.VarInfoName:toString()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
jtb.syntaxtree.ClassOrInterfaceBody:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
jtb.syntaxtree.FormalParameter:FormalParameter(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Type;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.VariableDeclaratorId;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NullLiteral;)V
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
jtb.JavaParser:jj_3_20()Z
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
jtb.JavaParser:jj_3R_69()Z
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.Quant:isReverse([I[I)Z
utilMDE.FuzzyFloat:eq(DD)Z
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_110()Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.UpperBoundCore:computeProbability()D
jtb.JavaParser:jj_3_21()Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.TypeDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.Quant:eltsLteIndex([I)Z
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.TypeArguments:accept(Ljtb.visitor.Visitor;)V
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
utilMDE.ArraysMDE:sum([D)D
daikon.tools.jtb.Ast:removeWhitespace(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant:prob_and(DD)D
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.Quant:noDups([I)Z
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
jtb.syntaxtree.PackageDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_2_25(I)Z
jtb.syntaxtree.CompilationUnit:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeOptional:NodeOptional()V
jtb.syntaxtree.ClassOrInterfaceType:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.MultiplicativeExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeDeclaration;)V
utilMDE.MathMDE:mod_positive(II)I
daikon.Quant:eltwiseLT([I)Z
daikon.Quant:subsetOf([S[S)Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.ProglangType:dimensions()I
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.OrderedPairIterator:hasNext()Z
jtb.JavaParser:jj_3R_54()Z
jtb.syntaxtree.InclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.test.InvariantFormatTester:execute()Z
daikon.inv.Invariant:logOn()Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName:hashCode()I
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.PptSlice0:arity()I
jtb.syntaxtree.NodeChoice:accept(Ljtb.visitor.Visitor;)V
jtb.JavaCharStream:getEndColumn()I
utilMDE.WeakHasherMap.EntrySet:size()I
jtb.JavaParser:jj_3R_87()Z
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
jtb.syntaxtree.TypeBound:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ConditionalOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.PptSlice0:initInvariantsSeen()V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ImportDeclaration;)V
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
jtb.JavaParser:jj_3R_51()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
jtb.syntaxtree.Modifiers:accept(Ljtb.visitor.Visitor;)V
utilMDE.WeakHasherMap:processQueue()V
jtb.JavaCharStream:backup(I)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.ModBitTracker:ModBitTracker(I)V
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.ProglangType:baseIsIntegral()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
jtb.JavaParser:jj_3R_47()Z
daikon.VarInfo:java_name()Ljava.lang.String;
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclarator;)V
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.PptSlice1:num_samples()I
daikon.inv.unary.scalar.Modulus:enabled()Z
jtb.JavaParser:jj_3R_67()Z
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_114()Z
daikon.Quant:eltsGtIndex([I)Z
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
jtb.JavaParser:jj_3R_73()Z
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.Quant:sameLength([I[I)Z
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MultiplicativeExpression;)V
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
jtb.syntaxtree.AndExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PackageDeclaration;)V
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InstanceOfExpression;)V
daikon.diff.Node:children()Ljava.util.Iterator;
jtb.JavaParser:jj_3R_53()Z
utilMDE.ArraysMDE:subarray([JII)[J
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.Debug:logDetail()Z
utilMDE.FuzzyFloat:gt(DD)Z
jtb.syntaxtree.ImportDeclaration:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:indexOf([D[D)I
jtb.JavaParser:jj_3_30()Z
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.PptName:isEnterPoint()Z
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Expression;)V
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfo:esc_name()Ljava.lang.String;
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.ModBitTracker:num_sets()I
daikon.tools.jtb.SimpleTreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaCharStream:readChar()C
jtb.syntaxtree.ExclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
jtb.JavaParser:getToken(I)Ljtb.Token;
daikon.Quant:intersection([I[I)[I
daikon.ProglangType:isFloat()Z
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_102()Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AdditiveExpression;)V
jtb.JavaParser:jj_3R_74()Z
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_80()Z
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName:isLiteralConstant()Z
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_61()Z
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.Quant:union([I[I)[I
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
jtb.JavaParser:jj_3R_104()Z
daikon.inv.Invariants:Invariants()V
daikon.diff.RootNode:RootNode()V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.tools.jtb.SimpleTreeDumper:printToken(Ljava.lang.String;)V
daikon.test.TestQuant:removeAdjacentDups([I)[I
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ModBitTracker:num_samples()I
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.MathMDE:pow_fast(II)I
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:eq(II)Z
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArguments;)V
jtb.JavaParser:jj_3R_137()Z
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.tools.jtb.SimpleTreeDumper:SimpleTreeDumper(Ljava.io.Writer;)V
jtb.JavaParser:jj_3_17()Z
daikon.VarInfo:relate_var()V
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;)V
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.ClassOrInterfaceDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
jtb.JavaParser:jj_3R_120()Z
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
jtb.JavaParser:jj_3R_106()Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.Quant:memberOf(D[F)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String; | CONSTANT | 122114 | 1 -> 0
daikon.inv.Invariant:prob_is_ge(DD)D
utilMDE.UtilMDE:removeWhitespaceAround(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:subsetOf([D[F)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;)V
jtb.JavaParser:jj_3R_63()Z
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
jtb.syntaxtree.TypeParameters:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeList:NodeList()V
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:pairwiseSquare([I[I)Z
daikon.Quant:eltsGT([II)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
jtb.syntaxtree.Expression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
daikon.inv.filter.InvariantFilters:InvariantFilters()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalAndExpression;)V
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.ProglangType:baseIsFloat()Z
jtb.JavaParser:jj_3R_125()Z
daikon.test.FormatTestCase:passes()Z
jtb.syntaxtree.PrimaryExpression:accept(Ljtb.visitor.Visitor;)V
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
jtb.JavaParser:jj_3_15()Z
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.PptMap:asCollection()Ljava.util.Collection;
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.Quant:eltsNotEqual([II)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:eltsLtIndex([I)Z
jtb.JavaParser:jj_3R_77()Z
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
utilMDE.ArraysMDE:sum([[I)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Literal;)V
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eltsEqualIndex([I)Z
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
jtb.syntaxtree.ClassOrInterfaceBody:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:sum([I)I
jtb.JavaParser:jj_2_5(I)Z
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.Name:accept(Ljtb.visitor.Visitor;)V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameters;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.ReferenceType:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_2_14(I)Z
jtb.syntaxtree.FormalParameters:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3_19()Z
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:ne(II)Z
jtb.JavaParser:jj_3_35()Z
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
utilMDE.MathMDE:mod_positive(JJ)J
daikon.ProglangType:isIntegral()Z
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
utilMDE.ArraysMDE:fn_compose([I[I)[I
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
jtb.syntaxtree.MethodDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:eltsEqual([II)Z
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_163()Z
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
utilMDE.UtilMDE:split(Ljava.lang.String;Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.inv.Invariant:prob_or(DD)D
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
jtb.JavaParserTokenManager:MoreLexicalActions()V
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3_27()Z
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.ValueTuple:isMissingFlow(I)Z
daikon.VarInfoName:ioa_name()Ljava.lang.String;
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
jtb.JavaParser:jj_3R_68()Z
jtb.JavaParser:jj_3R_149()Z
utilMDE.ArraysMDE:fn_identity(I)[I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Type;)V
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_133()Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String; | ASSIGN | 13645 | = null
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.Quant:pairwiseEqual([I[I)Z
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_2_1(I)Z
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
jtb.JavaParser:jj_3_25()Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.inv.Invariant:justified()Z
daikon.tools.jtb.Ast:format(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_126()Z
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.PrimaryPrefix:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_105()Z
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_119()Z
utilMDE.Intern:internSubsequence([III)[I
daikon.ProglangType:isPseudoArray()Z
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:max([I)I
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
jtb.JavaParser:jj_3_3()Z
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
jtb.JavaParser:jj_2_17(I)Z
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.NodeToken:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.syntaxtree.MethodDeclarator:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfo:name()Ljava.lang.String;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.filter.ParentFilter:ParentFilter()V
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_2_16(I)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.ProglangType:isScalar()Z
utilMDE.SimpleLog:SimpleLog(Z)V
jtb.JavaParser:jj_3_14()Z
daikon.Quant:subsetOf([D[D)Z
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:jj_3R_136()Z
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
utilMDE.ArraysMDE:isSubarray([I[II)Z
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_ntk()I
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ExclusiveOrExpression;)V
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.Quant:subsetOf([F[D)Z
daikon.Ppt:Ppt()V
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
jtb.JavaParser:jj_3R_135()Z
jtb.JavaParser:jj_3_36()Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
utilMDE.ArraysMDE:concat([I[I)[I
jtb.syntaxtree.NodeOptional:present()Z
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:baseIsScalar()Z
jtb.syntaxtree.TypeArguments:TypeArguments(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeArgument;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_118()Z
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.Quant:lte(II)Z
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBody;)V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeOptional;)V
daikon.Quant:eltwiseNotEqual([I)Z
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:memberOf(F[F)Z
daikon.config.Configuration:apply(Ljava.lang.String;)V
jtb.JavaParser:jj_2_36(I)Z
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.Quant:eltwiseLTE([I)Z
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.tools.jtb.Ast:getParent(Ljava.lang.Class;Ljtb.syntaxtree.Node;)Ljtb.syntaxtree.Node;
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
jtb.syntaxtree.NodeListOptional:present()Z
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z | ASSIGN | 925 | = null
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryExpression;)V
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
jtb.syntaxtree.AdditiveExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
jtb.syntaxtree.UnaryExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_76()Z
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
jtb.JavaParser:jj_3R_62()Z
utilMDE.ArraysMDE:min_max([I)[I
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.inv.Invariant:logDetail()Z
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.UtilMDE:splitLines(Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:memberOf(F[D)Z
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.syntaxtree.Statement:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:FormalParameter()Ljtb.syntaxtree.FormalParameter;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
jtb.syntaxtree.TypeDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaCharStream:FillBuff()V
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V
jtb.syntaxtree.PostfixExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.tools.jtb.Ast:quickFixForInternalComment(Ljava.lang.String;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReturnStatement;)V
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.VarComparabilityImplicit:alwaysComparable()Z
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
utilMDE.MathMDE:pow(II)I
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaCharStream:BeginToken()C
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.ProglangType:isArray()Z
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Modifiers;)V
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
jtb.syntaxtree.ConditionalExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeToken:trimSpecials()V
jtb.JavaParser:jj_3R_72()Z
daikon.inv.unary.LowerBoundCore:calc_range()J
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.diff.InvMap:InvMap()V
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
jtb.JavaParser:jj_3_16()Z
daikon.diff.PrintAllVisitor:bufPrintln()V
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_109()Z
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | RETURN | 27721 | return null
daikon.simplify.LemmaStack:noticeInt(J)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalOrExpression;)V
daikon.Quant:memberOf(J[J)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
jtb.JavaParser:jj_3R_97()Z
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.Quant:pairwiseLTE([I[I)Z
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
utilMDE.ArraysMDE:fn_is_total([I)Z
jtb.JavaParser:jj_3_10()Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.CompilationUnit:CompilationUnit(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.EqualityExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.FuzzyFloat:lte(DD)Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments;
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
utilMDE.Intern:intern([J)[J
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InclusiveOrExpression;)V
jtb.JavaParser:jj_3R_86()Z
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.NodeSequence:getParent()Ljtb.syntaxtree.Node;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
jtb.JavaParser:jj_3R_81()Z
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.TypeArgument:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
jtb.JavaParser:jj_3R_50()Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
jtb.JavaParser:jj_3R_52()Z
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.TypeArguments:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.VarInfo:simplify_name()Ljava.lang.String;
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.tools.jtb.Ast:getClassName(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression; | STATEMENT | 66038 | stmt -> ;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.Quant:slice([III)[I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReferenceType;)V
utilMDE.FuzzyFloat:gte(DD)Z
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
jtb.syntaxtree.NodeOptional:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE:negate(I)I
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Invariant:prob_and(DDD)D
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeSequence;)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Assert:assertTrue(Z)V
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
utilMDE.LimitedSizeIntSet:size()I
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_122()Z
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
jtb.JavaParser:jj_scan_token(I)Z
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern:intern([D)[D
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeBound;)V
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_96()Z
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
utilMDE.Intern:numIntArrays()I
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.tools.jtb.Ast:getPackage(Ljtb.syntaxtree.CompilationUnit;)Ljava.lang.String;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:eltsLTE([II)Z
jtb.JavaParser:jj_3R_107()Z
daikon.PptName:isCombinedExitPoint()Z
jtb.syntaxtree.FormalParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
240 2 315 2 727 2 331 2 469 2 1317 2 132 2 1319 4 325 2 
349 2 252 2 273 6 206 2 587 2 201 6 488 2 1326 2 1220 2 973 2 428 6 
183 2 507 6 954 2 1101 2 509 2 1317 2 1221 6 713 6 331 2 455 2 1143 4 1206 6 57 4 
156 10 92 4 339 6 1317 6 974 10 1136 4 1027 12 1057 4 124 8 677 2 215 16 627 10 1358 16 848 30 254 2 716 2 929 2 1066 2 1346 2 948 8 881 26 1265 6 1009 2 331 6 795 8 889 8 736 10 968 10 1364 4 311 16 
485 6 1190 4 
1200 2 
156 2 621 2 339 2 711 2 974 2 998 2 1136 2 341 2 1027 2 627 2 215 2 1358 2 604 2 877 2 848 6 1219 2 1347 2 881 4 886 2 889 2 736 4 968 2 311 2 
156 4 848 14 1322 6 1141 2 476 4 719 6 974 4 881 12 600 4 1027 5 1057 2 456 2 215 8 968 4 627 4 1358 8 311 8 
798 2 337 2 492 4 1249 8 991 2 93 10 408 4 834 4 1076 2 1278 4 837 4 95 2 598 2 579 14 1154 4 1301 2 384 4 625 62 501 2 178 2 1355 6 844 2 149 10 1262 2 1044 2 296 2 1004 4 461 4 255 4 445 2 281 4 905 4 53 2 640 2 21 2 759 2 111 2 1184 2 855 2 429 4 
1200 2 955 2 1054 2 1183 2 1357 2 1112 2 261 2 537 2 
988 2 1 4 1249 2 240 2 1250 2 431 2 864 2 1299 2 873 2 43 2 693 2 1001 2 9 2 257 2 573 2 52 2 1048 2 1310 2 139 2 1017 2 1315 4 1317 4 1188 2 1154 4 1110 2 942 2 63 2 682 2 220 2 903 2 1065 2 1066 2 1201 2 904 2 851 2 1121 2 331 4 332 4 426 2 558 2 855 2 858 2 429 2 1169 2 
156 16 378 2 239 4 339 4 1317 4 476 4 974 16 383 2 1136 2 1335 4 600 4 1027 22 385 4 627 16 215 32 1358 32 582 4 848 54 716 2 962 2 1322 6 719 6 948 6 881 48 1265 4 328 4 105 6 329 6 331 4 756 2 109 2 984 6 953 6 889 18 736 6 968 16 311 32 448 8 170 2 
1249 2 1355 2 1076 2 
680 2 0 2 204 2 960 2 526 22 195 2 41 2 684 2 1188 2 1298 2 370 10 1256 2 922 2 271 2 
157 1 1130 1 1133 2 3 1 863 2 241 2 1134 2 597 4 956 2 1135 2 1041 12 243 6 517 16 160 2 868 2 867 3 691 2 437 2 692 2 1303 2 1137 2 1138 3 601 2 959 2 770 2 524 1 608 1 529 3 774 2 884 2 260 24 1222 2 885 1 614 2 1047 2 1312 6 777 2 776 3 618 2 263 2 355 3 778 2 25 2 971 2 779 2 91 2 543 2 359 2 1052 2 1317 32 546 2 785 5 28 1 1053 2 1234 2 548 3 978 1 97 2 980 2 33 2 788 3 899 16 1061 2 981 2 634 2 1161 3 35 2 106 2 469 2 374 1 1165 8 1071 2 110 8 639 32 285 2 1167 2 471 2 1072 24 1330 2 1331 2 1252 2 992 2 382 2 118 3 42 2 119 3 1080 2 999 2 290 2 567 2 729 3 1341 4 1084 6 126 4 924 2 1263 3 295 2 1086 6 819 1 1006 2 391 12 299 2 1090 2 131 2 394 2 931 1 1094 2 396 4 1348 2 734 2 199 4 307 1 1350 1 312 1 1351 2 936 2 1015 2 667 2 314 4 833 1 493 8 1277 2 1105 16 498 2 836 2 835 1 145 2 1024 32 1280 2 1192 16 213 2 842 2 746 4 318 1 65 2 751 2 945 2 850 2 224 2 1118 2 512 2 230 4 421 2 331 34 952 2 154 2 1038 2 760 2 1208 2 
921 2 
813 2 331 2 
331 4 1304 2 560 2 
2 2 4 4 688 8 689 2 690 8 6 6 10 2 11 2 699 2 13 6 14 94 15 4 348 2 16 2 703 4 19 2 20 4 1046 4 352 2 707 48 708 22 709 6 357 74 1050 4 358 4 712 12 1055 22 362 2 363 4 714 246 1060 2 715 2 365 2 367 2 1064 2 368 2 34 2 720 2 369 4 1067 30 721 4 375 2 1070 2 724 4 380 62 1073 44 379 2 38 2 1074 4 1075 2 1077 2 1078 2 386 2 45 2 388 12 47 2 730 2 390 4 48 246 1091 4 49 2 1089 2 732 2 1092 2 392 2 50 18 733 2 51 2 1097 2 398 2 735 2 55 2 1099 52 399 18 400 2 56 2 401 2 739 2 740 4 402 4 741 2 406 2 1104 2 1106 4 1107 18 61 2 414 4 745 2 1111 2 417 2 748 50 749 246 1114 50 67 4 1116 2 1119 2 69 12 753 2 754 4 1120 44 70 2 422 2 1123 2 71 2 72 2 425 2 1124 2 1126 88 1127 30 73 2 74 2 427 6 1131 2 762 2 430 4 764 6 434 6 765 2 438 4 439 2 440 2 441 6 80 4 82 2 444 2 772 2 773 2 446 2 1145 2 781 2 1150 2 450 2 782 2 94 36 1151 18 1153 2 452 94 453 2 96 2 457 2 1155 2 459 94 460 4 458 2 1157 2 100 2 1158 2 101 16 791 2 465 2 792 2 466 2 468 2 108 2 1164 2 1166 2 112 2 114 2 472 2 473 2 800 18 801 2 1170 2 474 4 116 2 475 2 120 4 804 2 1172 2 121 58 477 56 478 2 1173 42 479 2 814 2 1176 2 1175 4 816 2 481 4 480 2 817 2 129 2 128 2 1178 2 483 2 1179 2 820 4 821 8 1180 2 486 2 133 2 134 18 826 4 135 94 827 2 828 2 830 2 136 96 137 62 138 2 490 2 1186 94 495 2 142 2 144 4 143 2 499 2 839 2 841 2 502 2 148 4 503 2 843 6 504 4 846 2 506 4 847 2 150 2 1197 4 151 2 1198 4 1199 4 153 2 1202 6 1203 2 1205 4 513 2 155 4 515 2 158 8 861 2 516 2 865 2 1209 2 1210 8 161 2 1211 2 1213 2 872 2 874 2 520 2 1216 94 521 2 522 4 523 28 527 2 880 6 167 58 168 2 533 2 883 2 536 2 539 36 1225 4 171 16 542 2 172 88 1227 2 174 2 173 4 175 2 176 44 177 2 1231 2 890 12 891 12 547 2 893 2 892 2 894 2 1238 2 896 2 182 6 1240 4 1241 14 185 94 184 2 556 6 187 4 906 2 908 88 910 48 1246 42 559 2 1251 8 563 2 1253 2 564 104 914 2 1254 2 566 2 568 2 916 4 918 62 569 2 919 2 570 42 1259 4 926 4 927 2 571 16 930 2 572 2 198 2 200 2 1268 2 1269 2 935 2 1272 2 1271 4 202 94 1274 2 1276 6 208 18 1279 4 578 2 940 14 210 2 212 2 941 6 214 2 1282 4 1283 2 1284 4 943 6 217 2 944 2 219 2 222 4 1287 2 225 8 226 2 947 4 588 4 227 2 1290 2 589 2 232 2 592 4 1294 2 235 2 1297 12 599 2 245 2 1300 50 1302 52 247 2 248 2 605 4 603 94 602 54 253 22 607 12 609 2 1305 2 610 4 611 2 616 16 969 4 1311 58 265 2 620 2 972 2 622 2 623 2 977 2 266 4 624 4 626 4 979 2 268 2 628 94 629 74 274 46 1320 30 277 2 278 2 635 2 1323 18 280 2 283 2 282 2 641 4 1327 358 1328 2 986 2 987 2 643 2 286 2 645 4 646 2 289 2 994 20 996 2 291 2 292 90 1336 4 1339 8 293 2 651 2 1343 2 1005 2 653 4 654 2 298 2 1345 14 301 2 302 94 1008 18 303 2 658 2 306 12 1011 2 662 2 663 2 310 2 308 16 309 2 1352 4 665 2 666 2 668 2 670 2 1353 4 672 4 674 2 1354 2 676 4 1028 2 1030 10 1031 2 1034 2 1360 2 681 2 1362 2 323 2 1037 100 324 4 327 2 685 2 686 2 1039 2 
970 2 661 2 831 1 761 2 
353 2 761 2 
39 2 725 2 1249 2 755 2 92 2 534 2 761 2 
410 2 39 2 761 2 
39 2 334 2 761 2 
525 2 895 2 661 2 
39 2 761 2 
895 2 913 2 
849 2 761 2 
967 2 895 2 661 2 
140 2 26 2 661 2 
1243 2 496 2 661 2 
1109 2 661 2 22 2 
86 2 340 2 661 2 
237 2 895 2 
1115 2 761 2 
580 2 26 2 
1122 2 496 2 
1109 2 351 2 
86 2 188 2 
895 2 869 2 
86 2 500 2 
1109 2 655 2 
496 2 554 2 
860 2 26 2 
304 2 967 2 895 2 661 2 
304 2 967 2 895 2 661 2 191 2 
454 2 895 2 661 2 
895 2 824 2 661 2 
901 2 141 2 231 2 
1249 2 534 2 1098 2 64 2 
743 2 1249 2 755 2 534 2 1098 2 64 2 
39 2 1249 2 92 2 534 2 44 2 761 2 
988 2 562 2 
1249 2 92 2 534 2 1296 2 
1109 2 825 2 
86 2 180 2 
26 2 416 2 
1359 2 496 2 
86 2 496 2 27 2 
86 2 496 2 262 2 
86 2 496 2 46 2 
86 2 496 2 8 2 
1249 2 648 2 1139 6 272 2 696 2 1196 6 463 2 534 2 
750 2 895 2 
815 2 526 6 418 4 1239 2 442 2 1159 2 207 4 1117 2 244 2 209 2 1056 2 793 2 412 2 581 2 809 2 344 2 320 2 1085 2 
1223 2 661 2 
952 2 
1130 2 863 2 241 2 597 4 243 2 1041 8 160 2 691 2 436 4 437 2 1214 2 1137 2 601 2 770 2 531 2 87 2 774 2 1222 2 1142 2 614 2 1309 2 1049 2 1312 2 618 2 778 2 25 2 359 2 1317 26 360 2 361 2 1053 6 978 2 32 2 980 2 33 2 899 6 717 2 981 2 634 2 279 4 35 2 1244 2 469 2 374 4 1165 2 1071 4 639 6 285 2 1167 2 644 2 1341 2 1084 4 924 2 923 2 1086 6 299 2 300 2 391 8 1090 2 131 2 394 2 1094 2 396 4 199 2 314 4 937 2 59 2 145 2 1024 4 842 2 746 4 230 2 331 26 154 2 1038 2 1208 2 
1130 2 863 2 241 2 597 4 243 2 1041 8 160 2 691 2 436 4 437 2 1214 2 1137 2 601 2 770 2 531 2 87 2 774 2 1222 2 1142 2 447 2 614 2 1309 2 1049 2 1312 2 618 2 778 2 25 2 779 2 359 2 1317 26 360 2 1053 6 978 2 980 2 33 2 899 6 1061 2 717 2 981 2 634 2 279 4 35 2 1244 2 469 2 374 2 1165 2 1071 4 639 6 285 2 1167 2 644 2 803 2 1341 2 1084 6 924 2 923 2 1086 6 299 2 300 2 391 8 1090 2 131 2 394 2 1094 2 396 4 199 2 936 2 1185 2 314 4 937 2 145 2 1024 4 842 2 746 4 230 2 331 26 154 2 1038 2 1208 2 
802 2 
1148 2 75 2 
90 2 1273 2 81 2 273 2 561 2 197 2 587 2 731 2 675 2 349 2 305 2 722 2 350 4 201 2 768 2 845 2 747 4 1217 2 
799 2 381 2 687 2 912 2 561 2 805 2 519 2 193 2 768 2 164 4 601 2 1217 2 252 2 81 2 1086 4 197 2 731 2 131 2 394 2 349 4 932 2 305 2 1266 2 1222 2 350 4 201 4 90 2 1273 2 314 2 206 2 405 2 669 4 545 4 359 2 1317 6 675 4 1191 2 62 2 744 4 842 2 1032 2 98 2 746 2 179 2 747 4 845 2 897 2 505 2 273 6 1361 2 587 4 634 2 1289 4 983 2 722 2 331 12 907 2 376 2 470 6 428 6 
799 2 381 2 687 2 912 2 561 2 805 2 519 2 193 2 768 2 164 4 601 2 1217 2 252 2 81 2 1086 4 197 2 731 2 131 2 394 2 349 4 932 2 305 2 1266 2 1222 2 350 4 201 6 488 2 90 2 1273 2 314 2 405 2 669 4 545 4 359 2 1317 6 675 4 1191 2 62 2 744 4 842 2 1032 2 98 2 746 2 179 2 747 4 845 2 897 2 505 2 273 4 1361 2 587 4 634 2 1289 4 983 2 722 2 331 12 907 2 376 2 470 6 428 6 
799 2 381 2 687 2 912 2 561 2 805 2 519 2 193 2 768 2 164 4 601 2 1217 2 252 2 81 2 1086 4 197 2 731 2 131 2 394 2 349 4 932 2 305 2 1266 2 1222 2 350 4 201 6 90 2 1273 2 314 2 405 2 669 8 545 4 359 2 1317 6 675 4 1191 2 62 2 744 4 842 2 1032 2 98 2 746 2 179 2 747 4 845 2 897 2 505 2 273 6 1361 2 587 4 634 2 1289 4 983 2 722 2 331 12 907 2 376 2 1326 2 470 6 428 6 
799 2 381 2 687 2 912 2 561 2 805 2 519 2 193 2 768 2 164 4 601 2 1217 2 252 2 81 2 1086 4 197 2 731 2 131 2 394 2 349 4 932 2 305 2 1266 2 1222 2 350 4 201 8 488 2 90 2 1273 2 314 2 405 2 669 8 545 4 359 2 1317 6 675 4 1191 2 62 2 744 4 842 2 1032 2 746 2 98 2 179 2 747 4 845 2 897 2 505 2 273 6 1361 2 587 4 634 2 1289 8 983 2 722 2 331 12 907 2 376 2 1326 2 470 10 428 8 
799 2 381 2 687 2 912 2 561 2 805 2 519 2 193 2 768 2 164 4 601 2 1217 2 252 2 81 2 1086 4 197 2 731 2 131 2 394 2 349 4 932 2 305 2 1266 2 1222 2 350 4 201 6 90 2 1273 2 314 2 405 2 669 8 545 4 359 2 1317 6 675 4 1191 2 62 2 744 4 842 2 1032 2 98 2 746 2 179 2 747 4 845 2 897 2 505 2 273 6 1361 2 587 4 634 2 1289 8 983 2 722 2 331 12 907 2 376 2 1326 2 470 10 428 6 
687 2 1041 4 160 12 1212 6 691 2 1042 2 342 2 519 2 875 2 1214 2 1043 1 694 2 164 8 1217 2 695 2 700 1 169 2 349 4 1222 2 350 4 354 2 25 2 1226 2 359 2 545 6 360 2 1229 6 1053 6 1235 2 31 4 179 2 33 2 897 4 899 6 35 2 186 8 722 2 907 2 376 2 560 6 381 4 561 2 912 2 40 2 193 2 1257 2 1084 6 387 2 921 6 924 2 925 2 1086 6 197 2 391 4 731 2 1090 2 394 2 932 2 1094 2 396 4 1266 2 199 2 201 8 936 2 576 2 203 2 1273 2 405 2 1275 2 577 1 62 2 744 4 415 2 746 4 747 4 218 6 583 7 587 4 68 2 230 2 594 10 428 12 241 2 597 4 243 2 436 4 1137 2 768 2 601 2 252 4 81 2 964 6 774 2 88 2 1309 2 1144 6 1312 2 618 2 90 2 1146 6 778 2 1313 1 779 2 1317 24 1316 2 451 6 1152 6 976 4 267 6 98 2 980 2 1156 2 273 4 103 2 634 2 983 2 1163 2 636 6 469 2 1165 2 639 8 1325 2 470 2 799 2 649 6 1000 2 805 2 1341 2 1342 2 813 6 1174 7 818 1 482 1 299 2 300 4 131 2 305 2 1349 6 488 4 829 1 314 4 669 2 1187 2 317 1 675 4 1022 2 146 2 1024 2 1191 2 842 2 1032 2 679 2 845 2 505 2 1363 2 330 1 331 46 1038 2 1207 6 857 2 
687 2 241 2 597 4 243 2 1041 8 160 12 1212 6 691 2 436 4 1042 2 342 2 875 2 519 2 1214 2 1137 2 694 2 768 2 164 8 601 2 695 2 1217 2 252 4 81 2 169 2 349 4 964 6 774 2 1222 2 88 2 350 4 1309 2 1144 6 1312 2 618 2 354 2 90 2 1146 6 25 2 778 2 779 2 1226 2 545 6 359 2 1316 2 1317 26 1229 6 360 2 1152 6 451 6 1053 6 976 4 1235 2 267 6 31 4 98 2 179 2 33 2 980 2 897 4 899 6 1156 2 273 8 103 2 634 2 1160 2 983 2 35 2 1163 2 186 8 636 6 722 2 469 2 907 2 1165 2 376 2 1071 2 639 8 1325 2 1326 4 560 6 470 2 799 2 381 4 912 2 561 2 40 2 649 6 805 2 1000 2 193 2 1257 2 1341 4 1084 6 921 6 387 2 925 2 924 2 1342 2 813 6 1086 6 197 2 300 4 391 8 299 2 1090 2 731 2 131 2 394 2 1095 2 1094 2 932 2 1266 2 305 2 396 4 199 4 1349 6 201 8 576 2 936 2 203 2 1273 2 314 4 1275 2 669 6 405 2 1187 2 675 4 1022 2 146 2 1024 2 1191 2 744 4 62 2 842 2 415 2 1032 2 746 4 679 2 845 2 747 4 505 2 218 6 587 4 68 2 1363 2 230 4 331 48 594 10 1038 2 1207 6 857 2 428 12 
687 2 241 2 597 4 243 2 1041 8 160 12 1212 6 691 2 436 4 1042 2 342 2 875 2 519 2 1214 2 1137 2 694 2 768 2 164 8 601 2 695 2 1217 2 252 4 81 2 169 2 349 4 964 6 774 2 1222 2 88 2 350 4 1309 2 1144 6 1312 2 618 2 354 2 90 2 1146 6 25 2 778 2 779 2 1226 2 545 6 359 2 1316 2 1317 26 1229 6 360 2 1152 6 451 6 1053 6 976 4 1235 2 267 6 31 4 98 2 179 2 33 2 980 2 897 4 899 6 1156 2 273 8 103 2 634 2 1160 2 983 2 35 2 1163 2 186 8 636 6 722 2 469 2 907 2 1165 2 376 2 1071 2 639 8 1325 2 1326 4 560 6 470 6 799 2 381 4 912 2 561 2 40 2 649 6 805 2 1000 2 193 2 1257 2 1341 4 1084 6 921 6 387 2 925 2 924 2 1342 2 813 6 1086 6 197 2 300 4 391 8 299 2 731 2 1090 2 131 2 394 2 1095 2 1094 2 932 2 1266 2 305 2 396 4 199 4 1349 6 201 8 576 2 936 2 203 2 1273 2 314 4 1275 2 669 6 405 2 1187 2 675 4 1022 2 146 2 1024 2 1191 2 744 4 62 2 842 2 415 2 1032 2 746 4 679 2 845 2 747 4 505 2 218 6 587 4 1289 4 68 2 1363 2 230 4 331 48 594 10 1038 2 1207 6 857 2 428 12 
687 2 1041 10 160 10 1212 6 691 2 342 2 519 2 875 2 1214 2 694 2 164 8 1217 2 695 2 169 2 349 4 1222 2 350 4 354 2 25 2 541 6 1226 2 359 2 545 6 360 2 1230 2 1229 6 1053 8 1235 2 31 4 179 2 33 2 897 4 899 8 35 2 186 8 722 2 372 2 907 2 376 2 1071 2 560 12 381 4 561 2 912 2 40 2 193 2 1257 2 1084 6 387 2 921 12 925 2 924 2 1086 6 928 2 1264 6 197 2 391 10 1090 2 731 2 394 2 393 6 1095 2 932 2 1094 2 396 4 1266 2 199 4 201 10 936 2 576 2 203 2 1273 2 206 2 405 2 1275 2 62 2 744 4 415 2 746 4 747 4 216 6 1113 6 218 6 587 4 419 6 1289 4 68 2 230 4 590 2 950 6 594 8 428 16 238 6 241 2 597 4 243 4 436 6 1137 2 768 2 601 2 252 4 81 2 964 6 774 2 88 2 1309 4 1144 12 1312 4 618 2 90 2 1146 6 778 2 779 2 780 2 1316 2 1317 24 451 6 1152 6 976 4 267 12 98 2 980 2 1156 2 273 10 790 2 103 2 634 2 1160 2 983 2 1163 2 636 6 469 2 1165 4 639 12 1326 4 1325 2 470 6 799 2 649 12 1000 2 805 2 1341 4 1342 2 813 12 299 2 300 4 131 2 305 2 1349 6 488 2 314 4 669 6 1187 2 1189 2 675 4 1022 2 146 2 1024 4 1191 2 842 2 1032 2 319 6 679 2 845 2 505 2 1363 2 331 52 1038 2 1207 6 336 2 857 2 
90 2 669 6 405 2 687 2 561 2 545 2 1191 2 744 2 62 2 519 2 1032 2 98 2 179 2 164 2 845 2 747 2 505 2 1217 2 252 2 81 2 273 6 587 4 731 2 1289 4 349 4 932 2 1266 2 305 2 331 4 350 2 376 2 201 6 1326 2 428 4 470 4 
687 2 597 4 243 3 160 4 691 2 436 4 1042 2 163 2 519 2 1214 2 1137 2 164 2 601 2 1217 2 252 2 81 2 443 2 349 4 259 3 774 2 1222 2 350 2 775 2 1312 3 618 2 90 2 778 2 25 2 779 2 545 2 359 2 1317 24 360 2 1053 6 98 2 179 2 980 2 33 2 899 6 273 6 630 2 634 2 35 2 469 2 907 2 376 2 639 8 1326 2 470 2 1331 2 561 2 1084 6 924 2 1086 6 299 2 300 2 1090 2 731 2 131 2 394 2 1094 2 932 2 1266 2 396 4 305 2 201 6 936 2 1015 2 205 2 314 4 405 2 669 6 1024 3 1191 2 744 2 62 2 842 2 1032 2 746 4 747 2 845 2 505 2 587 4 331 28 594 2 952 2 1038 2 760 2 428 4 
799 2 381 2 687 2 912 2 561 2 805 2 519 2 193 2 768 2 164 4 601 2 1217 2 252 2 81 2 1086 4 197 2 731 2 131 2 394 2 349 4 932 2 305 2 1266 2 1222 2 350 4 201 6 90 2 1273 2 314 2 405 2 669 8 545 4 359 2 1317 6 675 4 1191 2 62 2 744 4 842 2 1032 2 98 2 746 2 179 2 747 4 845 2 897 2 505 2 273 6 1361 2 587 4 634 2 1289 8 983 2 722 2 331 12 907 2 376 2 1326 2 470 10 428 6 
799 2 381 2 912 2 561 2 805 2 519 2 193 2 768 2 164 4 601 2 1217 2 252 2 81 2 297 4 1086 4 197 2 731 2 131 2 394 2 349 4 932 2 305 2 1266 2 574 2 1222 2 350 4 201 6 90 2 1273 2 314 2 206 2 405 2 669 8 710 2 545 4 359 2 1317 6 675 4 1191 2 62 2 744 4 842 2 1032 2 746 2 98 2 179 2 845 2 747 4 897 2 505 2 273 8 587 4 634 2 1289 8 983 2 722 2 331 12 907 2 376 2 1326 2 470 10 428 8 
405 2 179 2 249 2 
405 2 179 2 249 2 
241 4 433 2 597 4 1041 4 160 4 691 2 875 2 1214 2 1137 2 164 4 249 2 601 2 695 2 1217 4 879 2 252 4 81 2 349 4 17 4 774 2 1222 2 350 2 618 2 90 2 1147 2 778 2 25 2 779 2 544 2 545 4 359 2 1317 16 360 2 1053 2 976 2 31 2 179 6 980 2 33 2 897 4 899 2 273 12 717 4 634 2 983 2 35 2 107 2 469 2 374 2 284 2 639 2 37 2 557 2 1326 4 1168 2 470 6 381 2 990 2 997 4 805 2 193 2 1341 4 1084 6 924 2 1342 2 1086 6 197 2 391 4 299 2 300 6 1090 2 656 2 131 2 394 2 396 4 1266 2 199 4 1096 2 201 12 488 4 936 2 1273 2 314 4 403 2 206 4 405 4 669 6 675 4 1024 2 744 2 842 2 1032 2 746 4 747 2 1195 2 218 2 585 2 587 4 1289 4 230 4 331 24 594 2 1125 2 1292 2 1038 2 428 16 
218 2 878 2 1148 2 544 2 1316 2 1317 2 160 2 68 2 976 2 965 2 591 2 722 2 331 4 594 2 1096 2 601 2 1195 2 
241 4 433 2 597 4 1041 4 160 2 691 2 875 2 1214 2 1137 2 164 4 249 2 601 2 695 2 1217 4 252 4 81 2 961 2 349 4 17 4 774 2 1222 2 350 2 618 2 23 2 90 2 778 2 25 2 779 2 544 2 545 4 359 2 1317 16 360 2 1053 2 31 2 179 6 980 2 33 2 897 4 899 2 273 12 717 4 634 2 983 2 35 2 469 2 374 1 794 2 284 2 639 2 37 2 557 2 1326 4 1168 2 470 6 799 2 381 4 997 4 805 2 193 2 1341 4 1084 6 924 2 1342 2 1003 2 1086 6 197 2 391 4 299 2 300 6 1090 2 656 2 131 2 394 2 396 4 1266 2 199 4 1096 2 201 12 488 4 936 2 1273 2 314 4 403 2 206 4 405 4 669 6 675 4 1024 4 744 2 842 2 1032 2 746 4 747 2 1195 2 218 2 585 2 587 4 1289 4 752 2 230 4 331 24 1125 2 1292 4 1038 2 428 16 
241 4 433 2 597 4 1041 4 160 4 958 2 871 2 691 2 875 2 1214 2 1137 2 164 4 249 2 601 2 695 2 1217 4 252 4 81 2 349 4 17 4 774 2 1222 2 350 2 618 2 90 2 778 2 25 2 779 2 544 2 545 4 359 2 1317 16 360 2 1053 2 976 2 31 2 179 6 980 2 33 2 897 4 899 2 273 12 717 4 634 2 983 2 35 2 469 2 374 1 284 2 639 2 37 2 557 2 1326 4 1168 2 470 6 799 2 381 4 997 4 805 2 193 2 1341 4 1084 6 924 2 1342 2 1086 6 197 2 391 4 299 2 300 6 1090 2 656 2 131 2 394 2 396 4 1266 2 199 4 1096 2 201 12 488 4 936 2 1273 2 314 4 403 2 206 4 405 4 669 6 675 4 1024 2 411 2 744 2 1193 2 842 2 1029 2 1032 2 746 4 747 2 1195 2 218 2 585 2 587 4 1289 4 230 4 331 24 594 2 1125 2 1292 2 1038 2 428 16 
859 2 156 2 1129 2 1132 2 432 2 242 2 597 4 1041 6 243 4 160 2 691 2 436 6 162 2 1137 2 601 2 78 2 250 2 345 2 698 4 346 2 258 2 530 2 169 2 881 4 87 4 532 2 774 2 1222 2 615 2 535 2 889 2 89 2 968 2 1309 4 1312 4 618 2 706 2 264 2 354 2 24 2 778 2 25 2 779 2 359 2 784 4 1317 22 360 2 974 2 1053 8 975 2 1235 2 1233 2 1058 2 1236 2 627 2 1237 2 980 2 33 2 898 2 899 8 275 2 102 2 103 2 634 2 1322 4 982 2 1242 2 35 2 1162 2 371 6 469 2 374 1 1165 4 639 12 1325 2 796 2 642 4 911 2 287 2 726 2 288 2 476 2 1000 2 1337 2 123 2 192 4 1338 2 650 2 1084 6 924 2 1260 2 1086 6 1087 2 391 6 299 2 300 2 1007 4 1090 2 131 2 394 2 1094 2 660 2 396 4 659 2 934 2 489 2 311 2 575 2 1270 2 936 2 491 2 314 4 832 2 1275 2 494 2 1020 2 838 2 1024 4 840 2 211 2 1027 2 413 2 842 2 1356 2 147 2 746 4 1194 1 215 2 1358 2 848 6 1286 2 420 2 229 2 756 2 331 28 593 2 1038 2 234 2 
1018 2 957 3 1317 2 243 3 1053 2 1024 3 436 2 1255 2 1215 2 899 2 165 2 66 2 322 4 1036 2 1288 2 1094 2 487 2 1069 2 331 2 1267 2 639 2 1309 6 1312 3 538 2 
1018 2 957 2 1317 2 243 2 1053 2 1024 2 436 2 1255 2 1215 2 899 2 165 2 66 2 322 4 1036 2 1288 2 1094 2 487 2 1069 2 331 2 1267 2 639 2 1309 6 1312 2 538 2 
1018 2 957 2 1317 2 243 2 1053 2 1024 2 436 2 1255 2 1215 2 899 2 165 2 66 2 322 4 1036 2 1288 2 1094 2 487 2 1069 2 331 2 1267 2 639 2 1309 6 1312 2 538 2 
156 2 862 2 1102 4 1105 2 1228 2 1317 4 243 3 974 2 435 4 1024 3 1192 2 627 2 343 2 215 2 553 3 1358 2 920 3 294 4 584 4 902 4 848 5 221 2 1321 2 276 3 127 2 462 2 948 4 881 4 1010 2 1265 2 1094 2 704 2 1069 2 331 10 423 2 985 2 968 2 639 2 311 2 664 6 
156 2 862 2 243 2 435 4 343 2 920 2 294 4 127 2 881 4 1265 2 1010 2 1094 2 704 2 889 2 968 2 311 2 664 6 1102 4 1228 2 1105 2 1317 4 974 2 1024 2 1192 2 1027 2 215 2 627 2 553 2 1358 2 584 4 848 4 902 4 221 2 276 2 1321 2 716 2 462 2 948 4 331 10 1069 2 423 2 985 2 639 2 
156 2 862 2 243 2 435 4 343 2 920 2 294 4 127 2 881 4 1265 2 1010 2 1094 2 704 2 889 2 968 2 311 2 664 6 1102 4 1228 2 1105 2 1317 4 974 2 1024 2 1192 2 1027 2 215 2 627 2 553 2 1358 2 584 4 848 4 902 4 221 2 276 2 1321 2 716 2 462 2 948 4 331 10 1069 2 423 2 985 2 639 2 
156 2 862 2 243 2 435 4 343 2 920 2 294 4 127 2 881 4 1265 2 1010 2 1094 2 704 2 889 2 968 2 311 2 664 6 1102 4 1228 2 1105 2 1317 4 974 2 1024 2 1192 2 1027 2 215 2 627 2 553 2 1358 2 584 4 848 4 902 4 221 2 276 2 1321 2 716 2 462 2 948 4 331 10 1069 2 423 2 985 2 639 2 
156 2 862 2 243 2 435 4 343 2 920 2 294 4 127 2 881 4 1265 2 1010 2 1094 2 704 2 889 4 968 2 311 2 664 6 1102 4 1228 2 1105 2 1317 4 974 2 1024 2 1192 2 1027 4 215 2 627 2 553 2 1358 2 584 4 848 4 902 4 221 2 276 2 1321 2 716 4 462 2 948 4 331 10 1069 2 423 2 985 2 639 2 
24 2 1295 2 810 2 552 2 104 2 1023 2 
87 2 949 2 876 2 783 2 77 2 1340 2 104 2 
1314 2 1149 2 1317 8 673 2 870 1 549 2 251 2 1035 2 223 2 12 2 634 2 228 1 702 2 347 2 397 2 933 2 637 2 331 10 36 2 638 2 757 2 759 1 1144 2 1224 1 1184 1 856 2 
156 6 58 2 491 2 476 2 974 6 413 2 1027 4 1058 2 215 6 627 6 582 2 1358 6 9 2 848 15 716 2 1322 4 84 2 881 12 948 4 1265 2 1068 2 105 4 889 2 968 6 311 6 858 2 1128 2 
584 2 902 2 938 4 763 2 338 2 1317 1 995 2 1093 2 565 2 29 2 435 2 882 2 1026 7 331 1 54 2 1281 2 1182 2 1318 1 
584 2 902 2 938 4 763 2 338 2 995 2 1093 2 565 4 29 2 435 2 882 2 1026 6 1281 2 54 4 1182 4 
584 2 902 2 938 4 763 2 338 2 1317 1 995 6 1093 2 565 8 29 2 435 2 882 2 1026 10 331 1 1281 8 54 8 1182 8 1318 1 
584 2 902 2 938 2 763 2 338 2 1093 2 565 2 29 2 435 2 882 2 1026 2 54 2 1182 2 
514 4 596 8 597 44 5 10 766 4 7 4 769 2 166 4 606 4 1140 4 1218 4 963 8 701 4 1307 2 1308 2 771 4 612 4 613 16 617 2 618 6 540 4 779 26 449 24 356 16 1317 70 1232 8 30 2 550 4 270 4 364 14 275 6 632 4 633 4 718 10 35 2 467 2 373 4 374 2 189 10 909 10 723 4 1247 4 190 2 113 6 989 32 647 2 993 4 915 4 1081 4 192 30 806 2 808 4 1083 4 1084 102 811 4 1002 6 1258 4 389 10 1261 4 652 4 1177 2 1088 4 299 6 391 16 130 4 657 1 396 36 1181 2 1012 4 1013 8 1014 4 738 4 737 4 936 28 1100 2 1016 2 313 2 404 2 407 16 1019 4 671 8 1103 10 497 11 939 4 60 4 409 4 1025 2 742 24 678 4 1033 4 321 4 1285 2 586 8 508 4 683 8 420 8 510 10 946 4 511 2 326 4 852 6 152 2 853 4 951 4 331 78 1204 2 758 24 854 2 1293 2 595 2 
113 4 1132 2 159 2 597 14 1079 2 1081 4 192 6 808 4 767 2 1084 40 769 2 1258 4 1002 2 389 6 606 4 1140 2 528 2 391 14 299 2 130 2 1308 2 1307 2 612 4 532 2 396 14 1181 2 618 2 936 12 779 12 316 2 497 2 1103 2 1317 26 409 2 975 10 30 2 147 2 678 2 1033 2 270 2 508 2 420 6 946 4 511 2 326 4 467 2 35 2 852 2 331 28 333 2 374 2 424 2 909 6 189 6 758 8 854 2 1329 2 190 2 595 2 
514 4 1132 4 596 42 159 2 597 112 866 24 518 10 766 4 76 24 767 4 7 4 79 2 769 4 166 6 606 6 256 10 528 2 1140 6 1218 4 701 6 1307 8 1308 8 771 4 83 90 612 6 85 6 532 11 966 6 887 26 617 2 705 4 618 14 540 6 779 58 449 92 1051 2 1317 134 1232 24 975 22 30 2 1059 24 550 4 787 24 270 10 364 12 275 5 1062 4 632 6 633 6 35 8 373 6 374 4 1324 2 189 16 909 16 1245 4 377 4 723 4 1247 6 190 2 797 12 113 8 1248 4 115 8 1171 4 117 4 1079 2 1333 10 915 4 1081 6 192 34 807 4 808 6 917 24 1083 4 1084 248 811 4 1258 6 1002 36 812 2 389 16 194 4 1344 26 196 8 1088 6 391 28 299 14 130 10 396 88 1012 6 1181 8 1013 50 1014 6 936 58 313 2 404 2 316 2 407 42 1019 6 1103 18 497 16 939 6 60 6 1021 18 409 4 742 84 147 8 678 10 1033 4 508 10 420 16 946 6 511 2 326 8 852 10 951 6 152 4 331 150 333 2 1204 2 424 2 758 124 1291 90 854 2 1366 8 236 2 595 2 
859 6 113 6 1248 2 597 20 866 2 1332 2 1079 2 518 2 246 2 1333 2 1334 2 1081 2 5 2 122 2 1082 2 917 2 728 2 808 2 76 2 125 2 1084 45 1002 2 1258 2 78 4 389 4 606 2 697 2 1045 2 256 2 1306 2 1140 3 196 2 391 37 299 2 130 2 1307 2 1308 2 612 2 484 2 822 2 395 2 823 2 396 20 18 2 1181 2 888 2 618 2 936 3 1100 2 619 2 779 3 1103 2 497 2 1317 44 30 2 678 2 181 2 551 2 99 4 786 2 269 2 270 2 789 4 900 2 1285 2 508 2 1063 2 366 2 631 2 510 2 464 2 946 2 718 2 511 2 35 2 467 2 555 4 852 2 152 1 331 46 374 2 909 4 189 4 758 6 854 2 1365 2 335 2 233 2 1329 2 190 2 1040 2 595 2 
1108 2 

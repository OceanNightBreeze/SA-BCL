#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testOptions()V ERROR utilMDE.Options$ArgException 907 6 
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.NullPointerException 352 1063 947 449 77 365 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V ERROR java.lang.NullPointerException (172,514) 329 (147,601) 681 1050 
daikon.test.diff.DiffTester:testConditionalPptsTrue()V ERROR java.lang.NullPointerException (172,514) 329 (147,601) 681 1050 
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V ERROR java.lang.NullPointerException (172,514) 329 (147,601) 681 1050 
daikon.test.diff.DiffTester:testPpts1Empty()V ERROR java.lang.NullPointerException (172,514) 329 (147,601) 681 1050 
daikon.test.diff.DiffTester:testPpts1Ppts1()V ERROR java.lang.NullPointerException (172,514) 329 (147,601) 681 1050 
daikon.test.diff.DiffTester:testPpts1Ppts2()V ERROR java.lang.NullPointerException (172,514) 329 (147,601) 681 1050 
daikon.test.diff.DiffTester:testPpts1Ppts3()V ERROR java.lang.NullPointerException (172,514) 329 (147,601) 681 1050 
daikon.test.diff.DiffTester:testInvs1Empty()V ERROR java.lang.NullPointerException (172,514) 329 (147,601) 681 1050 
daikon.test.diff.DiffTester:testInvs1Invs1()V ERROR java.lang.NullPointerException (172,514) 329 (147,601) 681 1050 
daikon.test.diff.DiffTester:testInvs1Invs2()V ERROR java.lang.NullPointerException (172,514) 329 (147,601) 681 1050 
daikon.test.diff.DiffTester:testInvs1Invs3()V ERROR java.lang.NullPointerException (172,514) 329 (147,601) 681 1050 
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 613 708 82 55 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V FAILED junit.framework.AssertionFailedError 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V FAILED junit.framework.AssertionFailedError 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V FAILED junit.framework.AssertionFailedError 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V FAILED junit.framework.AssertionFailedError 
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.inv.unary.sequence.EltNonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.Quant:lexGT([I[I)Z
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaCharStream:getEndLine()I
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.inv.unary.LowerBoundCore:calc_range()J
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.VarInfo:isIOAArray()Z
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.ProglangType:isFloat()Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.inv.unary.sequence.EltNonZero:format_ioa()Ljava.lang.String;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_49()Z
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltNonZero:enabled()Z
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.test.InvariantFormatTester:execute()Z
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.VarInfo:get_array_var()Ldaikon.VarInfo;
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.VarInfo:get_base_array_hashcode()Ldaikon.VarInfo;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.ModBitTracker:ModBitTracker(I)V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.VarInfo:apply_subscript(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.VarInfo:simplify_quantify(Ljava.util.EnumSet;[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.Quant:setDiff([I[I)[I
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.inv.unary.scalar.LowerBound:enabled()Z
utilMDE.OrderedPairIterator:hasNext()Z
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.VarInfoName:isLiteralConstant()Z
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.inv.unary.sequence.EltOneOf:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.VarInfo:get_upper_bound()Ldaikon.Quantify.Term;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.Quantify.IOAQuantification:getQuantifierExp()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.ProglangType:isArray()Z
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.diff.Node:Node(LutilMDE.Pair;)V
utilMDE.Assert:assertTrue(Z)V
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:subsetOf([I[I)Z
daikon.inv.unary.sequence.EltOneOf:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.PptName:isEnterPoint()Z
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:pairwiseGT([I[I)Z
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.ProglangType:dimensions()I
daikon.VarInfo:dbc_name()Ljava.lang.String;
jtb.ParseException:ParseException(Ljava.lang.String;)V
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:pairwiseDivides([I[I)Z
daikon.inv.unary.sequence.EltOneOf:format_daikon()Ljava.lang.String; | RETURN | 8658 | return null
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.OrderedPairIterator:setnext1()V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.MathMDE:negate(I)I
daikon.Quantify.IOAQuantification:getVarIndexedString(I)Ljava.lang.String;
daikon.Quant:memberOf(I[I)Z
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:memberOf(J[J)Z
daikon.inv.unary.scalar.UpperBound:enabled()Z
utilMDE.ArraysMDE:indexOf([II)I
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.EltOneOf:is_hashcode()Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.diff.InvMap:toString()Ljava.lang.String;
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.Quantify.SimplifyQuantification:get_closer()Ljava.lang.String;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eq(JJ)Z
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.Quantify.IOAQuantification:getMembershipRestriction(I)Ljava.lang.String;
utilMDE.MathMDE:sign(I)I
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.VarInfo:is_direct_non_slice_array()Z
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
utilMDE.MathMDE:pow_fast(II)I | CONDITION | 3350 | if (x) -> if (!x)
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.Quantify.IOAQuantification:getClosingExp()Ljava.lang.String;
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.Quantify.IOAQuantification:getFreeVarName(I)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.Options.ArgException:ArgException(Ljava.lang.String;)V
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_scan_token(I)Z
daikon.VarInfo:get_enclosing_var()Ldaikon.VarInfo;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_2_16(I)Z
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quantify.Term:esc_name()Ljava.lang.String;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.inv.unary.UpperBoundCore:calc_range()J
utilMDE.WeakHasherMap:processQueue()V
daikon.Ppt:find_var_by_name(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltOneOf:EltOneOf(Ldaikon.PptSlice;)V
daikon.PptSlice0:initInvariantsSeen()V
utilMDE.ArraysMDE:subarray([III)[I
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.Quantify.FreeVar:simplify_name()Ljava.lang.String;
daikon.PptSlice1:arity()I
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.inv.unary.UpperBoundCore:computeProbability()D
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.Invariant:prob_and(DD)D
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.Quantify.ESCQuantification:get_arr_vars_indexed(I)Ljava.lang.String;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.VarInfoName:name()Ljava.lang.String;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
jtb.JavaCharStream:BeginToken()C
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
utilMDE.FuzzyFloat:eq(DD)Z
daikon.Quantify.Term:name_with_offset(Ljava.lang.String;I)Ljava.lang.String;
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.EltNonZero:format_esc()Ljava.lang.String;
utilMDE.MathMDE:mod_positive(JJ)J
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:subarray([JII)[J
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.Quantify.FreeVar:name()Ljava.lang.String;
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:lexNotEqual([I[I)Z
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.Quant:eltsEqualIndex([I)Z
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.VarInfo:jml_name()Ljava.lang.String;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.inv.unary.sequence.EltOneOf:get_proto()Ldaikon.inv.Invariant;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.Quantify.Length:Length(Ldaikon.VarInfo;I)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
jtb.JavaCharStream:readChar()C
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.inv.ValueSet:ValueSet(I)V
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltNonZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.OutputFormat:isJavaFamily()Z
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
utilMDE.ArraysMDE:indexOf([ZZ)I
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.inv.unary.scalar.Positive:enabled()Z
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.Quant:lexLTE([I[I)Z
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ProglangType:isPointerFileRep()Z
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.VarInfo:isPrestate()Z
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.inv.unary.sequence.EltOneOf:enabled()Z
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.ProglangType:isPseudoArray()Z
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.ArraysMDE:max([I)I
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.Debug:logOn()Z
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:eltsLT([II)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
jtb.JavaCharStream:getEndColumn()I
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.VarInfo:jml_name(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.FuzzyFloat:lt(DD)Z
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.Quant:gte(II)Z
jtb.JavaParser:jj_3R_47()Z
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfo:isDerived()Z
daikon.Ppt:Ppt()V
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.PptSlice0:arity()I
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.Quantify.SimplifyQuantification:get_arr_vars_indexed(I)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:get_base_array()Ldaikon.VarInfo;
daikon.inv.unary.sequence.EltNonZero:is_pointer()Z
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.Quant:eltsGT([II)Z
daikon.inv.OutputFormat:toString()Ljava.lang.String;
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.Quant:isReverse([I[I)Z
utilMDE.WeakIdentityHashMap:indexFor(II)I
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.inv.Invariant:format()Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.Quantify.ESCQuantification:ESCQuantification(Ljava.util.EnumSet;[Ldaikon.VarInfo;)V
daikon.ProglangType:baseIsIntegral()Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.Quantify.SimplifyQuantification:SimplifyQuantification(Ljava.util.EnumSet;[Ldaikon.VarInfo;)V
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ValueTuple:isMissing(I)Z
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:subsetOf([F[F)Z
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.inv.Invariant:isWorthPrinting()Z
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.inv.Invariant:getConfidence()D
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.Quant:eltwiseNotEqual([I)Z
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:intersection([I[I)[I
daikon.inv.unary.sequence.EltOneOf:is_boolean()Z
jtb.ParseException:getMessage()Ljava.lang.String;
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:gt(II)Z
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.MathMDE:gcd(JJ)J
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.Quantify.QuantifyReturn:QuantifyReturn(Ldaikon.VarInfo;)V
daikon.Quantify.ESCQuantification:bld_quant(Ldaikon.VarInfo;Ldaikon.Quantify.Term;)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.Quant:noDups([I)Z
daikon.Quant:eq(FF)Z
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptName:isCombinedExitPoint()Z
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.Quant:memberOf(F[F)Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_48()Z
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.VarInfo:name()Ljava.lang.String;
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.Quant:pairwiseGTE([I[I)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.Quant:lexGTE([I[I)Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.Quant:lexEqual([I[I)Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.Quantify.SimplifyQuantification:get_quantification()Ljava.lang.String;
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.Quant:pairwiseLT([I[I)Z
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:union([I[I)[I
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quantify.Length:simplify_name()Ljava.lang.String;
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.Debug:logDetail()Z
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext2()V
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.Quantify.IOAQuantification:IOAQuantification([Ldaikon.VarInfo;)V
daikon.Quant:eltsLtIndex([I)Z
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.VarInfo:simplify_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:sum([D)D
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.Quant:eq(DD)Z
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
jtb.JavaCharStream:getBeginColumn()I
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfo:old_var_names(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:concat([I[I)[I
daikon.PptTopLevel.CondIterator:hasNext()Z
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.Quantify.Constant:name()Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z | STATEMENT | 8020 | stmt -> ;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:generateParseException()Ljtb.ParseException;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.VarInfoName:toString()Ljava.lang.String;
utilMDE.LimitedSizeIntSet:add(I)V
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.Quant:concat([I[I)[I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String;
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.Quant:lexLT([I[I)Z
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
utilMDE.Intern:intern([J)[J
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
utilMDE.WeakHasherMap:size()I
jtb.JavaParser:jj_3R_50()Z
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
utilMDE.Intern:intern([D)[D
daikon.ProglangType:baseIsScalar()Z
daikon.Quantify.Term:ioa_name()Ljava.lang.String;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
utilMDE.Intern:intern([I)[I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.inv.unary.sequence.EltOneOf:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.Quant:subsetOf([B[I)Z
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.VarInfoAux:hashCode()I
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
utilMDE.ArraysMDE:sum([[I)I
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
utilMDE.ArraysMDE:element_range([I)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.EltOneOf:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.ValueTuple:isMissingFlow(I)Z
jtb.Token:newToken(I)Ljtb.Token;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
utilMDE.ArraysMDE:min_max([I)[I
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern:internSubsequence([III)[I
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.VarInfo:new_ppt()V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.Quant:eltsLteIndex([I)Z
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:set_rel_diff(D)V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.VarInfo:esc_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.test.FormatTestCase:passes()Z
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.VarInfoName:hashCode()I
utilMDE.Intern:internSubsequence([JII)[J
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.LimitedSizeIntSet:size()I
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.Quantify.Length:esc_name()Ljava.lang.String;
daikon.inv.Invariant:logDetail()Z
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
utilMDE.ArraysMDE:sorted([I)Z
daikon.inv.unary.sequence.EltOneOf:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltsGtIndex([I)Z
daikon.Quant:pairwiseLTE([I[I)Z
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:eq(II)Z
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
jtb.JavaParser:jj_3_16()Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.EltNonZero:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ModBitTracker:num_sets()I
daikon.Quant:sameLength([I[I)Z
daikon.inv.filter.ParentFilter:ParentFilter()V
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:lt(II)Z
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:ne(DD)Z
daikon.Quant:eltsEqual([II)Z
jtb.JavaParser:jj_ntk()I
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.Quantify.ESCQuantification:get_quantification()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Options.OptionInfo:argument_required()Z
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.diff.RootNode:RootNode()V
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfo:isPointer()Z
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfo:get_lower_bound()Ldaikon.Quantify.Term;
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
utilMDE.ArraysMDE:fn_is_permutation([I)Z
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.Quant:subsetOf([D[D)Z
daikon.inv.Invariant:logOn()Z
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.Quant:lte(II)Z
daikon.PptSlice1:num_samples()I
daikon.Quant:memberOf(F[D)Z
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z | CONDITION | 4936 | if (x) -> if (!x)
daikon.ProglangType:isScalar()Z
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:eltwiseGTE([I)Z
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
jtb.JavaCharStream:ReadByte()C
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:subsetOf([F[D)Z
daikon.inv.unary.LowerBoundCore:calc_modulus()J
utilMDE.Intern:numIntArrays()I
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.diff.InvMap:InvMap()V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:eltsNotEqual([II)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:sum([[D)D
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.ModBitTracker:num_samples()I
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.Quant:memberOf(S[S)Z
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
utilMDE.MathMDE:pow(II)I
daikon.Quant:setEqual([I[I)Z
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.VarInfo:get_all_simple_names()Ljava.util.List;
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:eltsGteIndex([I)Z
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.Quant:eltsGTE([II)Z
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.ProglangType:isIntegral()Z
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V | CONDITION | 17522 | if (x) -> if (!x)
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
daikon.Quantify.Term:simplify_name()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.Quant:subsetOf([J[J)Z
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:format_daikon()Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
jtb.JavaParser:jj_2_1(I)Z
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.Quantify.IOAQuantification:getFreeVar(I)Ldaikon.Quantify.Term;
daikon.inv.Invariants:Invariants()V
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.inv.Invariant:justified()Z
daikon.Quant:ne(II)Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.Quant:eltwiseLTE([I)Z
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quantify:quantify([Ldaikon.VarInfo;)[Ldaikon.Quantify.QuantifyReturn;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.ProglangType:base()Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
utilMDE.ArraysMDE:min([I)I
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltNonZero:EltNonZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:format_simplify()Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:subsetOf([S[S)Z
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.ProglangType:baseIsFloat()Z
utilMDE.FuzzyFloat:lte(DD)Z
jtb.JavaCharStream:FillBuff()V
daikon.Quant:slice([III)[I
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaCharStream:backup(I)V
daikon.inv.unary.sequence.EltLowerBound:format_simplify()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quantify.Constant:Constant(I)V
utilMDE.ArraysMDE:sum([I)I
daikon.VarInfo:relate_var()V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.Quant:pairwiseEqual([I[I)Z
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
utilMDE.MathMDE:bitwiseComplement(I)I
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
utilMDE.FuzzyFloat:gte(DD)Z
utilMDE.ArraysMDE:noDuplicates([I)Z
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.PptSlice2:arity()I
jtb.JavaCharStream:getBeginLine()I
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
daikon.Ppt:indexOf(Ljava.lang.String;)I
utilMDE.FuzzyFloat:gt(DD)Z
daikon.ModBitTracker:num_vars()I
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:eltwiseEqual([I)Z
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.Quantify:get_flags(Z)Ljava.util.EnumSet;
jtb.JavaParser:jj_3_1()Z | CONDITION | 171303 | if (x) -> if (!x)
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.inv.unary.sequence.EltNonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.Quant:eltsLTE([II)Z
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.Quant:eltwiseLT([I)Z
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.VarInfo:domainTypeIOA()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant:prob_or(DD)D
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String; | ASSIGN | 18974 | = null
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.inv.unary.sequence.EltOneOf:sort_rep()V
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ModBitTracker:split(I)I
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.Quant:memberOf(D[F)Z
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | ASSIGN | 2590 | = null
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ValueTuple:size()I
daikon.inv.Invariant:prob_and(DDD)D
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.diff.Node:Node()V
daikon.Quant:subsetOf([D[F)Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.Quant:pairwiseSquare([I[I)Z
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.ElementsFinder:inPre()Z
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.Quant:eltwiseGT([I)Z
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
1022 2 735 2 727 4 633 2 161 2 476 2 123 2 80 2 448 2 
354 2 596 2 896 2 27 2 902 6 95 2 1094 2 153 6 537 2 559 6 19 2 
609 4 697 2 87 2 703 6 447 6 216 2 451 6 602 6 797 2 123 2 80 2 890 2 330 4 
39 16 484 2 751 10 657 6 160 4 487 26 721 4 231 10 725 2 164 8 236 4 279 8 424 10 500 2 80 6 668 8 207 16 288 4 24 10 289 2 642 10 696 2 645 6 550 8 1087 2 221 16 619 12 590 29 123 6 369 2 
1012 6 274 4 
623 2 
1022 2 484 2 192 2 201 2 691 2 342 2 572 2 282 2 79 2 693 2 80 4 501 2 694 4 908 2 585 2 586 2 366 2 31 2 785 2 786 4 981 2 306 2 377 2 860 2 381 2 864 2 456 2 167 4 390 2 995 2 546 2 949 2 672 2 1001 4 394 2 950 2 674 2 398 2 1091 2 745 2 813 2 560 2 123 4 621 2 
39 29 228 2 853 6 751 14 657 4 487 43 491 2 275 4 231 14 495 1 989 6 164 6 131 4 420 2 764 6 424 6 18 4 345 4 80 4 608 8 24 14 288 2 207 29 668 17 642 14 645 4 1087 2 433 2 221 29 1057 2 653 3 588 6 1017 2 619 19 620 4 590 47 186 4 187 3 123 4 
181 2 572 2 494 2 
370 2 775 10 702 2 276 22 723 2 1004 2 969 2 586 2 47 2 49 2 835 2 994 2 1096 2 408 2 
39 2 751 2 983 2 561 2 657 2 487 4 231 2 424 4 940 2 24 2 288 2 668 2 207 2 642 2 648 2 61 2 221 2 846 2 326 2 619 2 715 2 439 2 590 6 
39 8 24 4 207 8 853 6 642 4 751 4 487 12 721 2 739 2 231 4 989 6 131 4 221 8 281 2 619 4 186 4 590 16 
874 2 184 2 990 2 155 2 196 2 
870 2 208 2 158 2 410 2 821 2 789 2 6 2 343 2 784 2 907 2 623 2 
0 2 270 2 2 2 273 5 127 3 417 6 5 3 826 2 687 2 419 2 134 2 568 2 423 2 837 2 283 2 841 2 972 2 430 2 698 2 580 2 701 3 294 2 143 24 973 2 583 2 28 2 706 2 295 6 298 2 300 2 152 2 848 1 589 2 304 2 591 1 851 32 159 2 855 3 982 2 449 2 724 4 448 2 861 2 991 1 599 2 310 3 726 2 454 32 312 1 605 2 459 2 317 2 997 2 318 2 59 2 465 2 1006 1 1009 2 473 2 475 1 889 16 622 1 189 1 749 2 488 2 753 2 493 2 195 3 630 2 76 2 199 1 77 2 763 2 905 2 344 2 80 34 909 2 773 2 352 2 353 2 89 2 1049 3 914 3 913 4 218 2 219 2 778 1 918 3 1054 2 1056 2 365 2 521 2 654 16 524 3 927 24 98 6 371 3 528 4 787 3 372 6 1063 2 929 4 229 1 531 1 1067 2 235 2 238 2 386 16 389 2 244 1 539 2 541 2 665 2 939 2 800 2 666 2 249 4 1081 1 947 2 392 2 805 1 1084 4 114 16 1086 2 255 1 953 2 399 2 554 2 120 2 402 2 677 2 957 2 1095 2 403 2 123 32 817 2 124 2 
977 2 80 2 
250 2 1073 2 80 4 
1043 2 
624 8 331 2 482 2 409 2 412 2 335 2 191 6 627 2 685 2 490 2 756 4 629 2 966 4 198 2 8 4 830 50 339 10 829 10 569 50 137 4 970 2 769 4 21 6 23 14 502 2 209 10 211 12 141 2 351 2 214 2 88 10 1051 2 144 4 974 14 777 6 297 2 649 2 710 2 222 4 93 14 224 4 651 6 519 2 225 2 151 8 925 2 442 10 592 14 42 2 100 14 718 2 658 14 162 8 597 6 450 2 1069 2 936 2 793 8 314 50 732 4 667 2 545 10 998 14 174 2 873 4 176 2 1089 18 552 8 322 2 260 2 616 14 676 18 68 8 886 2 680 14 404 14 814 2 1021 2 268 14 
497 1 903 2 752 2 767 2 
9 2 752 2 
66 2 480 2 566 2 236 2 752 2 572 2 157 2 
875 2 752 2 157 2 
752 2 157 2 125 2 
446 2 767 2 932 2 
752 2 157 2 
776 2 932 2 
854 2 752 2 
985 2 767 2 932 2 
411 2 549 2 767 2 
748 2 489 2 767 2 
822 2 135 2 767 2 
767 2 532 2 770 2 
1018 2 932 2 
478 2 752 2 
411 2 1030 2 
935 2 489 2 
1092 2 822 2 
828 2 770 2 
301 2 932 2 
881 2 770 2 
747 2 822 2 
489 2 700 2 
411 2 571 2 
985 2 767 2 540 2 932 2 
299 2 985 2 767 2 540 2 932 2 
767 2 932 2 145 2 
1082 2 767 2 932 2 
376 2 182 2 906 2 457 2 
1062 2 1080 2 505 2 964 2 510 2 276 6 824 2 178 2 661 2 467 2 920 4 650 2 844 2 587 4 165 2 865 2 407 2 818 2 
393 2 767 2 
566 2 572 2 635 2 614 2 
66 2 566 2 572 2 635 2 551 2 614 2 
566 2 236 2 86 2 752 2 572 2 157 2 
504 2 995 2 
971 2 566 2 236 2 572 2 
822 2 440 2 
883 2 770 2 
411 2 401 2 
489 2 1027 2 
643 2 489 2 770 2 
489 2 355 2 770 2 
489 2 770 2 20 2 
489 2 536 2 770 2 
566 2 426 6 572 2 1074 2 699 6 395 2 1000 2 738 2 
575 2 932 2 
861 2 
270 2 2 2 417 6 826 6 419 2 833 2 837 2 842 2 972 2 698 2 294 2 583 2 973 2 28 2 706 2 295 2 709 2 589 2 716 2 851 4 717 2 159 2 982 2 724 4 448 2 449 2 598 2 599 2 726 2 454 6 318 2 876 2 59 2 612 4 465 2 321 2 889 6 189 2 749 2 897 2 493 2 338 2 630 2 76 2 199 2 77 2 905 4 80 26 913 4 218 2 365 2 521 2 368 2 98 4 1061 2 372 2 528 8 929 4 1065 2 788 2 235 2 242 2 388 2 941 4 944 2 947 2 392 2 1084 4 1086 2 399 2 120 2 1095 2 403 2 123 26 
270 2 2 2 417 6 826 6 419 2 833 2 837 2 695 2 842 2 972 2 698 2 294 2 583 2 973 2 28 2 706 2 295 2 709 2 300 2 589 2 716 2 851 4 159 2 982 2 856 2 984 2 724 4 448 2 449 2 598 2 599 2 726 2 454 6 318 2 876 2 59 2 612 4 465 2 321 2 889 6 189 2 749 2 897 2 493 2 338 2 630 2 76 2 199 2 77 2 905 4 80 26 913 4 361 2 218 2 1056 2 365 2 521 2 98 6 1061 2 372 2 528 8 929 4 788 2 235 2 242 2 388 2 941 4 944 2 947 2 392 2 1084 4 1086 2 399 2 120 2 1095 2 403 2 123 26 
264 2 
206 2 380 2 
1026 2 129 2 754 2 417 4 757 2 686 2 630 2 76 2 419 2 902 6 422 2 80 12 972 2 90 2 507 2 91 2 27 2 1050 2 913 2 1052 2 147 2 514 2 780 2 924 2 517 2 95 4 153 6 714 2 35 2 589 2 37 2 852 2 593 4 443 8 159 2 929 2 596 2 309 8 105 2 601 2 109 2 108 2 795 4 1079 4 169 2 460 2 877 4 553 2 258 2 743 2 617 4 1094 4 403 2 681 2 1019 2 122 4 329 2 559 6 123 6 960 8 
1026 2 754 2 417 4 757 2 686 2 630 2 76 2 419 2 902 8 422 2 80 12 19 2 972 2 90 2 91 2 27 2 1050 2 913 2 1052 2 147 2 514 2 780 2 924 2 517 2 95 4 153 6 714 2 35 2 589 2 37 2 852 2 593 4 443 8 159 2 929 2 596 2 309 8 105 2 601 2 109 2 108 2 795 4 1079 4 169 2 460 2 877 4 63 2 615 4 553 2 257 2 258 2 743 2 617 4 1094 4 403 2 681 2 1019 2 122 4 329 2 123 6 559 8 960 8 
877 2 90 2 1050 2 757 2 1052 2 147 2 553 2 95 2 422 2 1094 2 795 4 153 2 35 2 681 2 1019 2 559 2 1079 4 852 2 
1026 2 129 2 754 2 417 4 757 2 686 2 630 2 76 2 419 2 902 6 422 2 80 12 19 2 972 2 90 2 507 2 91 2 27 2 1050 2 913 2 1052 2 147 2 514 2 780 2 924 2 517 2 95 4 153 4 714 2 35 2 589 2 37 2 852 2 593 4 443 4 159 2 929 2 309 4 105 2 601 2 109 2 108 2 795 4 1079 4 169 2 460 2 877 4 553 2 258 2 743 2 617 4 1094 4 403 2 681 2 1019 2 122 4 329 2 559 6 123 6 960 4 
1026 2 896 2 129 2 754 2 417 4 757 2 686 2 630 2 76 2 419 2 902 6 422 2 80 12 972 2 90 2 507 2 91 2 27 2 1050 2 913 2 1052 2 147 2 514 2 780 2 924 2 517 2 95 4 153 6 714 2 35 2 589 2 37 2 852 2 593 4 443 4 159 2 929 2 309 4 105 2 601 2 109 2 108 2 795 4 1079 4 169 2 460 2 877 4 553 2 258 2 743 2 617 4 1094 4 403 2 681 2 1019 2 122 4 329 2 559 4 123 6 960 4 
1026 2 129 2 754 2 417 4 757 2 686 2 630 2 76 2 419 2 902 6 422 2 80 12 972 2 90 2 507 2 91 2 27 2 1050 2 913 2 1052 2 147 2 514 2 780 2 924 2 517 2 95 4 153 6 714 2 35 2 589 2 37 2 852 2 593 4 443 4 159 2 929 2 596 2 309 8 105 2 601 2 109 2 108 2 795 4 1079 4 169 2 460 2 877 4 553 2 258 2 743 2 617 4 1094 4 403 2 681 2 1019 2 122 4 329 2 559 6 123 6 960 4 
1026 2 896 2 129 2 754 2 417 4 757 2 686 2 630 2 76 2 419 2 902 8 422 2 80 12 972 2 90 2 507 2 91 2 27 2 1050 2 913 2 1052 2 147 2 514 2 780 2 924 2 517 2 95 4 153 8 714 2 35 2 589 2 37 2 852 2 593 4 443 8 159 2 929 2 596 2 309 8 105 2 601 2 109 2 108 2 795 4 1079 4 169 2 460 2 877 4 553 2 258 2 743 2 617 4 1094 4 403 2 681 2 1019 2 122 4 329 2 559 6 123 6 960 8 
1026 2 129 2 754 2 417 4 757 2 686 2 630 2 76 2 419 2 902 6 422 2 80 12 972 2 90 2 507 2 91 2 27 2 1050 2 913 2 1052 2 147 2 514 2 780 2 924 2 517 2 95 4 153 6 714 2 35 2 589 2 37 2 852 2 593 4 443 8 159 2 929 2 596 2 309 8 105 2 601 2 109 2 108 2 795 4 1079 4 169 2 460 2 877 4 553 2 258 2 743 2 617 4 1094 4 403 2 681 2 1019 2 122 4 329 2 559 6 123 6 960 8 
270 2 819 10 823 6 826 6 10 6 837 2 839 2 840 1 292 2 27 4 26 6 28 2 295 2 300 2 845 6 589 2 35 2 37 2 852 2 851 2 593 6 858 2 46 2 309 2 599 2 601 2 48 2 603 6 866 2 313 2 867 1 318 2 610 2 877 4 59 2 612 4 321 2 617 4 325 2 889 6 329 2 893 6 896 4 898 1 630 2 76 2 902 12 80 46 81 2 83 2 350 2 90 2 644 7 356 6 91 2 647 1 913 4 919 2 924 2 95 4 94 2 98 6 372 2 929 4 931 4 933 2 105 2 937 2 109 2 108 2 387 2 388 2 392 2 399 12 120 2 403 2 122 8 681 2 123 24 129 2 417 6 686 2 133 6 419 2 967 8 689 6 422 2 690 2 972 2 698 2 973 2 706 2 707 2 147 2 977 6 712 1 153 8 714 4 159 2 982 2 724 4 448 2 449 2 726 2 454 8 168 2 460 2 169 4 172 2 1007 2 742 2 743 2 469 1 472 2 1019 2 474 6 188 2 749 2 1026 2 1029 1 754 2 755 2 757 2 1032 1 1040 6 768 1 1043 6 210 2 1046 6 1050 2 218 2 1052 2 514 2 780 2 223 2 517 2 1056 2 521 2 783 2 1061 2 528 4 242 4 245 2 795 4 1079 4 250 6 1084 4 1085 2 1086 2 258 2 553 2 810 7 557 2 1094 4 263 6 1095 2 266 4 559 4 
819 10 270 2 823 6 129 2 417 6 826 6 686 2 133 6 419 2 967 8 10 6 689 6 690 2 422 2 837 4 839 2 972 2 292 2 698 2 26 6 27 4 973 2 707 2 295 2 706 2 28 4 147 2 300 2 977 6 845 6 153 8 714 4 35 2 589 2 37 2 851 2 852 2 593 6 159 2 982 2 858 2 596 4 449 2 448 2 724 4 46 2 599 2 309 6 603 6 48 2 601 2 454 8 726 2 313 2 866 2 168 2 169 4 460 2 172 2 318 2 610 2 736 2 877 4 612 4 59 2 466 2 321 2 1007 2 742 2 743 2 617 4 325 2 472 2 474 6 1019 2 329 2 889 6 188 2 749 2 893 6 1026 2 754 2 755 2 757 2 630 2 76 2 902 12 905 2 1040 6 80 48 81 2 1043 6 83 2 350 2 210 2 1046 6 90 2 356 6 91 2 1050 2 913 4 1052 2 218 2 514 2 919 2 223 2 780 2 924 2 517 2 94 2 95 4 1056 2 521 2 783 2 1061 2 98 6 372 2 528 8 929 4 931 4 933 2 105 2 937 2 242 4 108 2 109 2 387 2 245 2 388 2 795 4 1079 4 250 6 392 2 1084 4 1085 2 1086 2 553 2 399 12 258 2 557 2 120 2 263 6 1094 4 1095 4 403 2 266 4 681 2 122 8 559 8 123 26 
819 10 270 2 823 6 129 2 417 6 826 6 686 2 133 6 419 2 967 8 10 6 689 6 690 2 422 2 837 4 839 2 972 2 292 2 698 2 26 6 27 4 973 2 707 2 295 2 28 4 706 2 147 2 300 2 977 6 845 6 153 8 714 4 35 2 589 2 37 2 851 2 852 2 593 6 443 4 159 2 982 2 858 2 596 4 449 2 448 2 724 4 46 2 599 2 309 6 603 6 48 2 601 2 454 8 726 2 313 2 866 2 168 2 169 4 460 2 172 2 318 2 610 2 736 2 877 4 612 4 59 2 466 2 321 2 1007 2 742 2 743 2 617 4 325 2 472 2 474 6 1019 2 329 2 889 6 188 2 749 2 893 6 1026 2 754 2 755 2 757 2 630 2 76 2 902 12 905 2 1040 6 80 48 81 2 1043 6 83 2 350 2 210 2 1046 6 90 2 356 6 91 2 1050 2 913 4 1052 2 218 2 514 2 919 2 223 2 780 2 924 2 517 2 94 2 95 4 1056 2 521 2 783 2 1061 2 98 6 372 2 528 8 929 4 931 4 933 2 105 2 937 2 242 4 108 2 109 2 387 2 245 2 388 2 795 4 1079 4 250 6 392 2 1084 4 1085 2 1086 2 553 2 399 12 258 2 557 2 120 2 263 6 1094 4 1095 4 403 2 266 4 681 2 122 8 559 8 123 26 960 4 
270 2 819 8 823 12 826 8 10 12 837 4 839 2 19 2 292 2 27 4 26 6 28 4 295 4 300 2 845 6 847 2 589 2 35 2 37 2 852 2 851 4 593 6 595 6 596 4 858 2 46 2 309 6 599 2 601 2 48 2 603 6 866 2 313 2 318 2 610 2 877 4 59 2 612 6 321 4 617 4 325 2 889 8 329 2 893 6 896 2 630 2 76 2 902 16 905 2 80 52 81 2 349 6 83 2 350 2 90 2 356 6 91 2 913 4 919 2 924 2 95 4 94 2 98 6 372 4 929 4 931 4 933 2 105 2 937 2 109 2 108 2 387 2 388 2 392 2 399 10 120 2 403 2 122 8 681 2 123 24 960 4 129 2 417 6 686 2 133 6 419 2 967 8 689 6 422 2 690 2 972 2 698 2 973 4 706 2 707 2 147 2 977 12 153 10 714 4 443 4 159 2 982 2 719 2 724 4 448 2 449 2 726 2 454 12 166 2 168 2 460 2 169 4 172 2 736 2 999 6 464 2 466 2 177 2 1010 6 742 2 743 2 472 2 1019 2 474 6 188 2 749 2 1026 2 754 2 755 2 757 2 1037 6 1040 6 1043 12 210 2 1046 6 1050 2 218 2 1052 2 514 2 780 2 223 2 517 2 1056 2 521 2 783 2 1061 2 528 10 230 6 1064 6 534 6 1068 2 242 4 245 2 795 4 248 6 1079 4 803 2 250 12 1084 4 1085 2 1086 2 808 2 258 2 553 2 557 2 1094 4 263 12 1095 4 266 4 559 10 
593 2 443 4 1026 2 596 2 129 2 757 2 686 2 309 6 105 2 902 4 108 2 109 2 422 2 795 2 80 4 1079 2 90 2 91 2 27 2 1052 2 258 2 780 2 924 2 517 2 617 2 95 4 1094 4 153 6 35 2 122 2 37 2 1019 2 559 6 960 4 852 2 
684 2 270 2 819 2 129 2 417 6 130 2 564 2 826 6 686 2 419 2 422 2 972 2 698 2 431 2 27 2 706 2 295 3 300 2 713 2 153 6 35 2 589 2 37 2 851 3 852 2 593 2 159 2 982 2 596 2 724 4 448 2 861 2 599 2 309 6 726 2 454 8 460 2 318 2 59 2 612 4 1007 2 617 2 1019 2 889 6 749 2 1026 2 757 2 630 2 76 2 902 4 80 28 774 3 353 2 90 2 91 2 913 4 218 2 1052 2 1054 2 780 2 517 2 924 2 95 4 1056 2 521 2 1061 2 98 6 372 3 929 4 105 2 109 2 242 2 108 2 388 2 795 2 1079 2 392 2 1084 4 1086 2 399 4 258 2 120 2 1094 4 403 2 122 2 559 6 123 24 124 2 960 2 
1026 2 91 2 247 2 
1026 2 91 2 247 2 
819 2 270 2 4 2 417 6 826 2 419 2 12 2 422 2 836 4 837 4 839 2 19 4 972 2 698 2 290 2 27 4 28 4 706 2 147 2 300 2 153 12 714 4 589 2 35 2 37 2 716 4 851 2 852 4 593 4 443 4 159 2 982 2 596 4 449 4 724 4 448 2 309 6 601 2 726 2 454 2 729 2 169 2 318 2 173 2 611 2 877 4 59 2 743 2 617 2 887 2 474 2 329 2 889 2 749 2 1026 4 896 4 755 2 630 2 76 2 762 2 902 16 636 2 80 24 1042 2 210 2 503 2 91 6 511 2 913 4 218 2 780 2 1056 2 95 4 520 2 521 2 367 2 98 6 1061 2 525 2 528 4 929 4 930 4 931 2 934 2 242 6 388 2 795 2 247 2 1079 2 392 2 1084 4 1086 2 399 4 120 2 1094 4 956 2 1095 4 403 2 266 2 681 2 122 4 123 16 559 12 960 6 
544 2 819 2 350 2 610 2 931 2 4 2 62 2 399 2 553 2 934 2 419 2 206 2 816 2 474 2 123 2 80 4 1042 2 
270 2 4 2 417 6 826 2 419 2 12 2 422 2 836 4 837 4 839 2 19 4 576 2 972 2 698 2 290 2 27 4 28 4 706 2 147 2 300 2 153 12 714 4 154 2 589 2 35 2 37 2 716 4 851 4 852 4 593 4 443 4 159 2 982 2 596 4 449 4 724 4 448 2 309 6 601 2 726 2 454 2 169 4 318 2 173 2 877 4 59 2 743 2 617 2 887 2 474 2 329 2 889 2 749 2 1026 4 896 4 754 2 755 2 630 2 76 2 762 4 902 16 636 2 80 24 1042 2 210 2 503 2 91 6 913 4 218 2 780 2 1056 2 95 4 652 2 521 2 367 2 98 6 1061 2 525 2 528 4 929 4 930 4 934 2 242 6 388 2 795 2 247 2 542 2 1079 2 392 2 1084 4 1086 2 399 2 119 2 120 2 1094 4 956 2 1095 4 403 2 266 2 681 2 122 4 123 16 559 12 960 6 
1 2 819 2 270 2 4 2 417 6 826 2 565 2 419 2 12 2 422 2 836 4 837 4 839 2 19 4 972 2 698 2 290 2 27 4 28 4 706 2 434 2 147 2 300 2 153 12 714 4 589 2 35 2 37 2 716 4 979 2 851 2 852 4 593 4 443 4 159 2 982 2 596 4 449 4 724 4 448 2 309 6 601 2 726 2 454 2 169 4 318 2 173 2 877 4 59 2 743 2 617 2 887 2 474 2 329 2 889 2 749 2 1026 4 896 4 754 2 755 2 630 2 76 2 761 2 762 2 902 16 636 2 80 24 1042 2 210 2 503 2 91 6 913 4 218 2 780 2 1056 2 95 4 521 2 367 2 98 6 1061 2 525 2 528 4 929 4 930 4 931 2 934 2 242 6 388 2 795 2 247 2 1079 2 392 2 1084 4 1086 2 399 4 120 2 1094 4 956 2 1095 4 403 2 266 2 681 2 122 4 123 16 559 12 960 6 
270 4 820 4 277 2 563 2 564 2 826 14 567 2 11 2 13 2 570 4 833 2 573 2 285 2 286 6 24 4 577 28 842 2 292 2 579 4 582 4 296 16 295 16 300 6 29 2 847 2 32 4 36 2 34 4 589 2 590 16 851 25 40 2 39 8 41 2 305 48 594 2 307 2 44 2 598 2 45 2 308 2 599 2 311 6 868 3 315 28 52 2 869 2 871 2 318 4 54 2 55 2 876 2 56 2 878 8 879 2 58 2 613 2 612 12 60 2 320 2 321 46 64 6 882 16 67 6 325 2 327 2 618 6 885 2 69 2 619 6 889 14 891 2 71 4 894 12 332 2 333 9 336 4 72 6 338 18 74 2 630 2 631 2 76 2 901 2 78 4 340 2 341 2 80 46 639 2 81 2 82 2 641 2 348 2 83 4 84 2 85 4 642 4 645 4 357 2 360 2 913 4 915 4 917 4 916 3 922 2 923 2 94 2 363 4 364 2 96 2 654 4 655 12 928 2 98 14 372 25 373 10 929 4 102 2 375 2 378 2 659 2 382 2 662 2 937 2 106 2 385 2 388 2 110 6 942 8 944 2 945 4 946 4 668 4 112 4 391 10 948 2 669 2 670 2 671 2 114 14 115 2 952 2 399 2 954 2 955 2 120 2 678 2 403 2 958 3 406 60 123 30 126 2 961 2 414 2 413 2 416 26 417 6 130 2 132 2 419 2 968 4 420 4 421 2 692 2 427 2 429 4 140 16 972 2 139 6 698 2 431 2 973 22 705 20 146 2 148 2 708 2 975 2 709 2 976 2 711 18 436 6 437 8 713 2 438 3 441 4 156 4 980 6 159 2 982 2 719 2 445 2 987 2 722 2 989 6 449 4 448 4 724 6 164 6 452 2 453 2 454 36 992 4 166 2 993 2 461 4 996 24 171 2 734 4 175 4 737 2 1003 2 464 2 741 2 177 2 1008 4 180 9 468 2 744 2 746 2 1013 10 470 4 1015 2 1017 2 1016 6 183 2 1020 2 185 2 186 4 189 2 749 2 1023 2 481 2 190 2 483 2 750 2 751 4 486 2 1025 2 487 12 1028 2 194 2 496 2 199 2 1033 2 202 4 498 8 203 24 499 2 1035 12 205 6 1036 4 765 2 1039 10 1041 2 207 8 1044 2 212 2 774 2 1048 6 509 2 218 2 217 2 220 2 515 1 221 8 779 16 781 2 1056 6 1058 2 521 4 522 10 227 4 528 62 788 2 232 2 231 4 1066 4 533 2 234 3 791 2 535 6 241 4 242 2 1071 4 1075 2 798 2 1078 2 802 2 804 4 803 2 1084 6 1083 2 1085 2 547 4 253 2 807 6 1086 4 808 2 809 2 555 4 1093 2 267 2 
372 2 750 2 594 2 826 2 599 2 662 2 454 2 1039 2 868 2 798 2 80 2 802 2 391 4 1083 2 56 2 113 2 612 2 321 6 295 2 1013 2 364 2 889 2 123 2 851 2 
372 2 750 2 594 2 826 2 599 2 662 2 454 2 1039 2 868 2 798 2 80 2 802 2 391 4 1083 2 56 2 113 2 612 2 321 6 295 2 1013 2 364 2 889 2 123 2 851 2 
372 2 750 2 594 2 826 2 599 2 662 2 454 2 1039 2 868 2 798 2 80 2 802 2 391 4 1083 2 56 2 113 2 612 2 321 6 295 2 1013 2 364 2 889 2 123 2 851 2 
683 2 39 2 333 3 372 3 751 2 487 4 103 2 231 2 164 4 599 2 900 2 535 4 454 2 240 4 385 2 1038 2 14 2 315 6 80 10 24 2 946 2 207 2 642 2 802 2 139 4 911 2 1048 4 645 2 114 2 513 2 180 3 221 2 435 2 782 2 654 2 1016 4 590 5 123 4 850 3 851 3 
683 2 333 2 751 2 487 4 900 2 1038 2 14 2 80 10 207 2 24 2 642 2 139 4 911 2 1048 4 645 2 513 2 221 2 435 2 782 2 654 2 590 4 851 2 850 2 39 2 372 2 103 2 231 2 164 4 599 2 454 2 535 4 385 2 240 4 315 6 946 2 668 2 802 2 114 2 1087 2 180 2 619 2 1016 4 123 4 
683 2 333 2 751 2 487 4 900 2 1038 2 14 2 80 10 207 2 24 2 642 2 139 4 911 2 1048 4 645 2 513 2 221 2 435 2 782 2 654 2 590 4 851 2 850 2 39 2 372 2 103 2 231 2 164 4 599 2 454 2 535 4 385 2 240 4 315 6 946 2 668 2 802 2 114 2 1087 2 180 2 619 2 1016 4 123 4 
683 2 333 2 751 2 487 4 900 2 1038 2 14 2 80 10 207 2 24 2 642 2 139 4 911 2 1048 4 645 2 513 2 221 2 435 2 782 2 654 2 590 4 851 2 850 2 39 2 372 2 103 2 231 2 164 4 599 2 454 2 535 4 385 2 240 4 315 6 946 2 668 2 802 2 114 2 1087 2 180 2 619 2 1016 4 123 4 
683 2 333 2 751 2 487 4 900 2 1038 2 14 2 80 10 207 2 24 2 642 2 139 4 911 2 1048 4 645 2 513 2 221 2 435 2 782 2 654 2 590 4 851 2 850 2 39 2 372 2 103 2 231 2 164 4 599 2 454 2 535 4 385 2 240 4 315 6 946 2 668 4 802 2 114 2 1087 4 180 2 619 4 1016 4 123 4 
496 2 7 2 600 2 1024 2 720 2 396 2 
600 2 53 2 425 2 338 2 538 2 607 2 675 2 
625 2 271 2 196 1 759 2 76 2 862 2 455 2 10 2 904 2 766 2 1072 2 80 10 943 2 874 1 463 2 951 1 1005 2 1053 2 812 2 679 2 815 1 123 8 1060 2 656 2 477 2 926 1 
39 6 751 6 487 12 492 2 231 6 989 4 164 4 420 1 691 2 50 2 764 4 345 2 80 6 608 2 207 6 24 6 668 4 642 6 394 2 645 2 1087 3 704 2 915 2 217 2 221 6 518 2 619 4 267 2 590 16 186 2 123 6 
139 2 530 2 1048 2 254 2 660 2 825 2 1031 2 118 2 51 2 938 2 638 2 1016 2 347 3 
139 2 530 2 1047 1 1048 2 254 2 660 4 825 2 1031 2 118 2 51 2 243 2 938 2 638 2 1016 2 123 1 80 1 347 6 
139 2 530 2 1048 2 254 2 660 4 825 2 1031 2 118 2 51 2 938 2 638 2 1016 2 347 4 
139 2 530 2 1047 1 1048 2 254 2 660 4 825 2 1031 2 118 2 51 2 938 2 638 2 1016 2 123 1 80 1 347 4 
270 8 962 16 128 24 562 4 418 42 827 2 831 6 136 4 834 6 15 4 573 8 838 2 287 6 574 2 25 10 428 24 291 12 578 10 293 12 142 4 581 8 432 8 584 6 300 58 150 4 302 4 978 90 30 6 849 42 43 2 986 6 163 8 859 24 988 22 724 112 863 4 604 2 731 5 316 2 606 6 458 2 869 8 733 18 462 4 872 6 319 10 1002 26 179 6 1011 16 324 6 471 6 884 26 888 8 328 90 479 4 70 8 332 8 334 10 626 4 895 50 628 2 337 36 193 6 73 2 197 1 899 4 632 10 760 16 75 6 200 6 1034 6 204 4 637 34 346 4 80 150 640 4 772 4 215 2 646 4 508 24 912 24 359 4 358 6 92 10 512 2 921 2 1056 58 521 14 523 92 98 248 527 11 101 2 529 2 374 8 233 6 104 4 792 2 237 6 384 2 239 4 107 84 794 6 664 2 796 6 1076 2 1077 6 799 8 801 124 111 4 251 4 806 18 1084 88 1086 14 1088 10 256 4 400 2 117 4 811 4 259 16 556 24 558 4 265 28 121 10 405 6 959 17 123 134 682 2 1097 6 
485 2 332 2 270 2 334 2 272 2 963 2 962 4 3 2 415 2 337 2 965 2 758 4 632 2 1034 2 634 2 832 6 17 2 573 2 80 46 22 2 287 2 910 2 25 2 1045 2 428 2 578 2 213 2 506 2 215 2 358 2 92 2 843 2 512 2 149 2 300 2 921 2 362 2 1056 2 1059 2 521 2 303 4 98 44 526 2 43 2 444 2 857 2 374 6 859 2 379 2 724 20 790 2 383 2 237 4 1070 2 728 2 794 2 731 2 1076 2 246 2 799 2 869 2 801 6 170 2 872 2 806 2 1084 20 319 2 740 4 1086 2 1088 2 673 4 1090 2 256 2 116 2 880 2 397 2 65 2 323 2 117 2 1011 4 259 4 261 2 556 2 1014 2 262 2 121 2 265 38 959 2 123 44 892 2 1097 2 682 2 
269 16 270 2 962 10 963 2 562 6 418 16 688 4 278 32 831 4 280 2 834 4 15 3 16 8 17 10 573 2 284 2 287 4 574 3 578 4 293 14 581 5 300 30 30 4 33 2 849 8 38 4 986 4 724 44 863 4 730 8 606 4 458 3 869 2 170 2 462 4 872 4 319 4 57 8 1011 10 324 4 471 4 888 6 479 6 332 2 334 4 895 8 337 6 193 4 899 4 75 4 632 4 760 10 200 4 1034 4 637 38 80 78 771 2 772 4 1045 10 215 2 646 4 912 8 358 4 512 2 921 2 516 4 1055 2 1056 28 521 6 97 4 226 8 523 24 98 104 99 4 374 7 233 4 104 4 790 2 663 16 384 2 237 2 107 24 794 4 664 2 796 4 1076 2 1077 4 801 24 111 4 543 4 251 4 252 2 806 10 1084 36 548 6 1086 6 1088 6 116 10 811 4 259 10 558 4 265 14 405 4 959 10 123 70 682 2 1097 4 
479 2 332 2 270 2 334 2 963 2 962 6 337 2 562 2 632 2 760 6 204 2 1034 4 15 2 637 6 573 2 80 28 287 4 578 2 142 2 215 2 358 4 512 2 300 12 921 2 1056 12 521 2 98 40 527 2 43 2 101 2 529 2 374 4 163 2 988 10 724 14 383 2 237 2 794 4 604 2 731 2 1076 2 316 2 869 2 801 8 872 4 1084 14 806 2 319 2 1086 2 1088 2 400 2 1011 6 259 6 265 14 959 2 888 4 123 26 682 2 1097 4 
138 2 

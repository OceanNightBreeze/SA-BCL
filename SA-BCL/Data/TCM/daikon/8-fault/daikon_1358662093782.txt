#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V ERROR java.lang.Error 
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V FAILED junit.framework.ComparisonFailure 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 884 1084 265 1218 438 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 205 9 68 
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.Quant:eq(DD)Z
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.ClassOrInterfaceDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ExclusiveOrExpression;)V
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InstanceOfExpression;)V
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.OrderedPairIterator:hasNext()Z
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_2_21(I)Z
jtb.syntaxtree.TypeDeclaration:TypeDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.ValueTuple:tuplemodHasModified(I)Z
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.ValueSet:ValueSet(I)V
jtb.syntaxtree.MethodDeclarator:accept(Ljtb.visitor.Visitor;)V
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
utilMDE.ArraysMDE:noDuplicates([I)Z
jtb.JavaParser:VariableDeclaratorId()Ljtb.syntaxtree.VariableDeclaratorId;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
jtb.JavaParser:jj_2_25(I)Z
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaCharStream:FillBuff()V
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:noDups([I)Z
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_119()Z
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.VarInfoName:name()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
utilMDE.SimpleLog.LongVal:LongVal(J)V
jtb.syntaxtree.Type:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.inv.Invariant:prob_or(DD)D
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.inv.unary.LowerBoundCore:calc_range()J
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
jtb.JavaParser:jj_3R_149()Z
jtb.JavaParser:jj_3R_56()Z
utilMDE.WeakHasherMap.EntrySet:size()I
utilMDE.ArraysMDE:fn_inverse([II)[I
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
daikon.ProglangType:isScalar()Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.NonZero:is_pointer()Z
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.TypeArgument:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
jtb.syntaxtree.AdditiveExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.Quant:eltsLT([II)Z
daikon.PptTopLevel:name()Ljava.lang.String;
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_122()Z
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.ProglangType:isArray()Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_63()Z
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
utilMDE.UtilMDE:splitLines(Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PackageDeclaration;)V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.Quant:subsetOf([B[I)Z
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.ClassOrInterfaceDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
jtb.syntaxtree.ExclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.Quant:memberOf(I[I)Z
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.UtilMDE:removeWhitespaceAfter(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.TypeParameter:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_148()Z
daikon.Quant:lexNotEqual([I[I)Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_2_16(I)Z
utilMDE.UtilMDE:split(Ljava.lang.String;Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
jtb.JavaParser:jj_3R_50()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
utilMDE.Assert:assertTrue(Z)V
utilMDE.MathMDE:sign(I)I
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.diff.Node:children()Ljava.util.Iterator;
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.syntaxtree.ImportDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.tools.jtb.Ast:getPackage(Ljtb.syntaxtree.CompilationUnit;)Ljava.lang.String;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
jtb.JavaParser:jj_3_28()Z
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
jtb.syntaxtree.CompilationUnit:CompilationUnit(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.Invariant:prob_and(DDD)D
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.inv.Invariant:isWorthPrinting()Z
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
jtb.syntaxtree.ConditionalOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.PptSlice0:arity()I
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_80()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalExpression;)V
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
daikon.tools.jtb.Ast:quickFixForInternalComment(Ljava.lang.String;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
jtb.syntaxtree.ReferenceType:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.TypeArguments:TypeArguments(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeArgument;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.Quant:setDiff([I[I)[I
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_55()Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:pairwiseLT([I[I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameter;)V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.Quant:pairwiseGTE([I[I)Z
jtb.syntaxtree.TypeBound:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_53()Z
daikon.diff.RootNode:RootNode()V
utilMDE.Options.OptionInfo:argument_required()Z
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.inv.unary.scalar.UpperBound:enabled()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.RelationalExpression;)V
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
jtb.syntaxtree.RelationalExpression:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBody;)V
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:min_max([I)[I
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_106()Z
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.PptName:isEnterPoint()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AdditiveExpression;)V
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_102()Z
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
jtb.syntaxtree.ClassOrInterfaceDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:gcd(II)I
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
jtb.syntaxtree.NodeToken:trimSpecials()V
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.NodeChoice:getParent()Ljtb.syntaxtree.Node;
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I | CONDITION | 69793 | if (x) -> if (!x)
daikon.Quant:subsetOf([D[D)Z | CONDITION | 81695 | if (x) -> if (!x)
utilMDE.UtilMDE:removeWhitespaceBefore(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String; | CONSTANT | 53860 | 1 -> 2
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase; | ASSIGN | 13963 | = null
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.Quant:eltwiseGT([I)Z
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.inv.filter.ObviousFilter:ObviousFilter()V
jtb.JavaParser:jj_3R_60()Z
daikon.Quant:subsetOf([S[S)Z
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator; | ASSIGN | 15073 | = null
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.tools.jtb.Ast:getParent(Ljava.lang.Class;Ljtb.syntaxtree.Node;)Ljtb.syntaxtree.Node;
utilMDE.ArraysMDE:isSubset([D[D)Z
jtb.JavaParser:jj_2_15(I)Z
jtb.JavaParser:jj_3R_58()Z
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
utilMDE.FuzzyFloat:gt(DD)Z
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
utilMDE.LimitedSizeIntSet:add(I)V
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
jtb.JavaParser:jj_3R_114()Z
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Statement;)V
jtb.JavaParser:jj_3R_126()Z
jtb.JavaParser:jj_3_25()Z
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Block;)V
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.Quant:eltwiseLTE([I)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
jtb.JavaParser:jj_3R_97()Z
daikon.VarInfoName:hashCode()I
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;)V
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_87()Z
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
jtb.JavaParser:jj_2_12(I)Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.diff.InvMap:InvMap()V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArguments;)V
daikon.Quant:eltsEqual([II)Z
daikon.VarInfo:relate_var()V
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
jtb.syntaxtree.ClassOrInterfaceBody:ClassOrInterfaceBody(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.ValueTuple:isMissingFlow(I)Z
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.Quant:lexLTE([I[I)Z
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:jj_3R_73()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_136()Z
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.Modifiers:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
jtb.JavaParser:jj_3R_77()Z
daikon.inv.filter.ParentFilter:ParentFilter()V
jtb.JavaParser:jj_2_10(I)Z
jtb.JavaCharStream:getEndLine()I
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:indexOf([D[D)I
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:eltwiseEqual([I)Z
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.Quant:eltsEqualIndex([I)Z
jtb.JavaParser:jj_3R_169()Z
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.Quant:eq(JJ)Z
jtb.JavaParser:jj_3R_133()Z
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
utilMDE.MathMDE:pow_fast(II)I
daikon.ProglangType:baseIsScalar()Z
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_96()Z
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
utilMDE.MathMDE:pow(II)I
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
jtb.JavaParser:jj_3_29()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.EqualityExpression;)V
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.Quant:lt(II)Z
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.Quant:slice([III)[I
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.tools.jtb.Ast:getClassName(Ljtb.syntaxtree.Node;)Ljava.lang.String;
jtb.syntaxtree.NodeToken:numSpecials()I
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaCharStream:BeginToken()C
daikon.tools.jtb.Ast:removeWhitespace(Ljava.lang.String;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.test.InvariantFormatTester:execute()Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Quant:eq(II)Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName; | RETURN | 3858 | return null
jtb.JavaParser:jj_3R_125()Z
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.ProglangType:isIntegral()Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
jtb.JavaCharStream:backup(I)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeOptional;)V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
jtb.JavaParser:jj_3_12()Z
daikon.Debug:logDetail()Z
jtb.JavaParser:jj_3R_76()Z
utilMDE.FuzzyFloat:eq(DD)Z
daikon.PptSlice1:arity()I
jtb.JavaParser:jj_3R_101()Z
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
jtb.JavaParser:jj_3_30()Z
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.Quant:union([I[I)[I
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.ValueTuple:size()I
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
jtb.JavaParser:jj_3_21()Z
utilMDE.FuzzyFloat:lt(DD)Z
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
jtb.JavaCharStream:getBeginColumn()I
utilMDE.FuzzyFloat:indexOf([DD)I
utilMDE.WeakHasherMap:processQueue()V
jtb.JavaParser:jj_3R_137()Z
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.Statement:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_72()Z
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
utilMDE.OrderedPairIterator:setnext1()V
jtb.JavaParser:jj_3R_54()Z
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
utilMDE.ArraysMDE:subarray([III)[I
jtb.syntaxtree.Literal:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3_10()Z
jtb.syntaxtree.VariableDeclaratorId:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE:negate(I)I
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:intersection([I[I)[I
jtb.JavaParser:jj_3_20()Z
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:numIntArrays()I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclarator;)V
jtb.JavaParser:jj_3R_68()Z
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.CompilationUnit;)V
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Literal;)V
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
jtb.JavaParser:jj_3R_163()Z
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeDeclaration;)V
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
jtb.syntaxtree.CompilationUnit:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_116()Z
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
jtb.JavaParser:jj_3R_108()Z
daikon.inv.Invariant:prob_is_ge(DD)D
utilMDE.ArraysMDE:max([I)I
daikon.VarInfo:name()Ljava.lang.String;
jtb.JavaParser:jj_3R_86()Z
utilMDE.ArraysMDE:element_range([I)I
jtb.JavaParser:jj_2_18(I)Z
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
jtb.JavaParser:jj_3R_85()Z
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.PrimaryPrefix:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:eltsLtIndex([I)Z
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
jtb.syntaxtree.NullLiteral:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.PptMap:asCollection()Ljava.util.Collection;
jtb.JavaParser:jj_2_1(I)Z
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.FuzzyFloat:ne(DD)Z
daikon.VarInfoName.ElementsFinder:inPre()Z
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryPrefix;)V
jtb.JavaParser:jj_2_17(I)Z
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Quant:eltsGTE([II)Z
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
jtb.JavaParser:jj_3_1()Z
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.syntaxtree.VariableDeclaratorId:VariableDeclaratorId(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
jtb.syntaxtree.TypeDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.Quant:subsetOf([I[I)Z
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_100()Z
jtb.syntaxtree.CompilationUnit:getParent()Ljtb.syntaxtree.Node;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReferenceType;)V
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.Quant:sameLength([I[I)Z
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_123()Z
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.Invariant:logOn()Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:lexGT([I[I)Z
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceDeclaration:ClassOrInterfaceDeclaration(Ljtb.syntaxtree.NodeChoice;Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ClassOrInterfaceBody;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.Quant:pairwiseDivides([I[I)Z
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.Quant:subsetOf([F[D)Z
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3_14()Z
daikon.test.TestAst.ClassOrInterfaceDeclarationHarvester:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.tools.jtb.SimpleTreeDumper:printToken(Ljava.lang.String;)V
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParser:jj_2_13(I)Z
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
jtb.JavaParser:jj_3R_110()Z
jtb.JavaParser:jj_3_17()Z
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.inv.Invariants:Invariants()V
daikon.Quant:eltsGT([II)Z
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
jtb.JavaParser:jj_3R_105()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Type;)V
jtb.JavaCharStream:getBeginLine()I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NullLiteral;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameters;)V
daikon.diff.Node:add(Ljava.lang.Object;)V
utilMDE.ArraysMDE:noDuplicates([J)Z
jtb.JavaParser:jj_scan_token(I)Z
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.inv.Invariant:prob_and(DD)D
jtb.JavaParser:jj_3R_117()Z
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
utilMDE.Intern:intern([D)[D
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
jtb.JavaCharStream:getEndColumn()I
daikon.VarInfoName:simplify_name()Ljava.lang.String;
jtb.syntaxtree.TypeArgument:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
utilMDE.FuzzyFloat:set_rel_diff(D)V
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:gt(II)Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
utilMDE.Intern:internSubsequence([JII)[J
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_98()Z
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
jtb.JavaParser:jj_3_5()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Modifiers;)V
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MultiplicativeExpression;)V
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ResultType;)V
jtb.syntaxtree.BlockStatement:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReturnStatement;)V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
jtb.JavaParser:jj_3R_61()Z
jtb.syntaxtree.TypeArguments:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE:missing_numbers([I)[I
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3_36()Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_120()Z
daikon.Quant:eltwiseLT([I)Z
daikon.diff.Node:Node()V
jtb.syntaxtree.InstanceOfExpression:accept(Ljtb.visitor.Visitor;)V
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.Quant:memberOf(F[D)Z
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
jtb.syntaxtree.VariableDeclaratorId:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.UnaryExpressionNotPlusMinus:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_88()Z
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.Quant:concat([I[I)[I
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.Quant:eltwiseNotEqual([I)Z
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
jtb.syntaxtree.NodeList:NodeList()V
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_16()Z
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.FormalParameters:accept(Ljtb.visitor.Visitor;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.Quant:ne(II)Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonZero:enabled()Z
jtb.JavaParser:jj_3R_70()Z
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
jtb.syntaxtree.NodeSequence:elements()Ljava.util.Enumeration;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
jtb.syntaxtree.MethodDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_48()Z
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_210()Z
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
jtb.JavaParser:jj_3_35()Z
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:eltsGteIndex([I)Z
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
jtb.syntaxtree.ShiftExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.ModBitTracker:num_sets()I
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.Intern:intern([J)[J
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.Ppt:Ppt()V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
jtb.syntaxtree.NodeOptional:present()Z
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Invariant:format()Ljava.lang.String;
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.Quant:pairwiseSquare([I[I)Z
utilMDE.FuzzyFloat:FuzzyFloat()V
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.Intern:internStrings([Ljava.lang.String;)V
jtb.syntaxtree.NodeListOptional:getParent()Ljtb.syntaxtree.Node;
jtb.JavaParser:jj_2_35(I)Z
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
jtb.syntaxtree.ResultType:accept(Ljtb.visitor.Visitor;)V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.VarInfoName:isLiteralConstant()Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.ProglangType:baseIsIntegral()Z
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_67()Z
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.Invariant:getConfidence()D
daikon.tools.jtb.SimpleTreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.diff.Node:Node(LutilMDE.Pair;)V
jtb.JavaParser:jj_3_3()Z
jtb.syntaxtree.FormalParameter:FormalParameter(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Type;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.ModBitTracker:num_vars()I
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_99()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ShiftExpression;)V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:dimensions()I
jtb.syntaxtree.PostfixExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
jtb.JavaParser:jj_3R_161()Z
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalOrExpression;)V
daikon.ModBitTracker:ModBitTracker(I)V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.Quant:isReverse([I[I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.BlockStatement;)V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.inv.Invariant:justified()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.FuzzyFloat:lte(DD)Z
daikon.diff.DetailedStatisticsVisitor:freq(II)D
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.OrderedPairIterator:setnext2()V
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_69()Z
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
jtb.JavaParser:jj_3_19()Z
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltsLTE([II)Z
jtb.syntaxtree.ReturnStatement:accept(Ljtb.visitor.Visitor;)V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:lexLT([I[I)Z
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.Quant:eltsNotEqual([II)Z
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.Quant:subsetOf([J[J)Z
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
jtb.syntaxtree.PackageDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
jtb.JavaParser:jj_3R_164()Z
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
jtb.syntaxtree.Block:accept(Ljtb.visitor.Visitor;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.Quant:eltwiseGTE([I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpression;)V
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_52()Z
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParser:jj_3R_134()Z
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:sum([[I)I
daikon.Quant:lte(II)Z
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:sorted([I)Z
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
jtb.JavaParser:jj_3R_81()Z
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
jtb.syntaxtree.Expression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:pairwiseLTE([I[I)Z
jtb.JavaParser:jj_3R_135()Z
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
utilMDE.ArraysMDE:concat([I[I)[I
daikon.PptName:isCombinedExitPoint()Z
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
jtb.JavaParser:jj_3R_89()Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
jtb.JavaParser:jj_3_15()Z
utilMDE.ArraysMDE:fn_is_total([I)Z
utilMDE.FuzzyFloat:gte(DD)Z
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
jtb.syntaxtree.NodeToken:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_51()Z
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
jtb.syntaxtree.ClassOrInterfaceType:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.MultiplicativeExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_47()Z
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.tools.jtb.SimpleTreeDumper:SimpleTreeDumper(Ljava.io.Writer;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
jtb.JavaParser:jj_ntk()I
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
jtb.Token:newToken(I)Ljtb.Token;
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:sum([[D)D
jtb.JavaParser:jj_2_5(I)Z
jtb.syntaxtree.NodeOptional:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
utilMDE.UtilMDE:removeWhitespaceAround(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
jtb.JavaParser:jj_3R_162()Z
daikon.PptSlice1:num_samples()I
daikon.Quant:eltsGtIndex([I)Z
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.tools.jtb.Ast:format(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
jtb.JavaCharStream:ReadByte()C
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_13()Z
jtb.JavaParser:jj_2_3(I)Z
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_74()Z
daikon.tools.jtb.Ast:print(Ljtb.syntaxtree.Node;)Ljava.lang.String;
utilMDE.Intern:intern([I)[I
jtb.syntaxtree.ConditionalExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3_27()Z
jtb.syntaxtree.NodeListOptional:elements()Ljava.util.Enumeration;
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3_4()Z
jtb.syntaxtree.ClassOrInterfaceBody:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptSlice0:initInvariantsSeen()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArgument;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryExpression;)V
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_57()Z
jtb.syntaxtree.NodeListOptional:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern:internSubsequence([III)[I
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.ModBitTracker:split(I)I
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.TypeDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:memberOf(S[S)Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.Quant:memberOf(J[J)Z
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.PptSlice2:arity()I
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.FormalParameter:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.inv.unary.scalar.LowerBound:enabled()Z
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
jtb.JavaParser:jj_3R_104()Z
utilMDE.MathMDE:bitwiseComplement(I)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
jtb.syntaxtree.NodeSequence:getParent()Ljtb.syntaxtree.Node;
jtb.JavaParser:jj_3_18()Z
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
utilMDE.ArraysMDE:sum([D)D
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
jtb.JavaParser:jj_3R_121()Z
jtb.syntaxtree.AndExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
jtb.JavaParser:jj_3R_75()Z
utilMDE.MathMDE:gcd(JJ)J
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.diff.PrintAllVisitor:bufPrintln()V
jtb.JavaParser:jj_3R_107()Z
daikon.Quant:pairwiseEqual([I[I)Z
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjStopAtPos(II)I
jtb.JavaParser:jj_3R_180()Z
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
jtb.JavaCharStream:readChar()C
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ImportDeclaration;)V
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.Debug:logOn()Z
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
utilMDE.ArraysMDE:indexOf([II)I
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.ValueTuple:isMissingNonsensical(I)Z
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Name;)V
jtb.JavaParser:jj_3R_62()Z
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.ArraysMDE:fn_compose([I[I)[I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalAndExpression;)V
daikon.Quant:lexEqual([I[I)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.syntaxtree.Name:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
jtb.syntaxtree.PrimaryExpression:accept(Ljtb.visitor.Visitor;)V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
jtb.syntaxtree.TypeDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.MathMDE:gcd_differences([I)I
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:setEqual([I[I)Z
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
utilMDE.MathMDE:modulus([I)[I
daikon.inv.Invariant:logDetail()Z
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.ValueTuple:isMissing(I)Z
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.Quant:eltsLteIndex([I)Z
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameters;)V
utilMDE.ArraysMDE:sum([I)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.VarInfoName:toString()Ljava.lang.String;
jtb.JavaParser:jj_3R_118()Z
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.JavaParser:jj_3_22()Z
daikon.inv.filter.InvariantFilter:InvariantFilter()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InclusiveOrExpression;)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
utilMDE.WeakHasherMap:size()I
jtb.JavaParser:jj_3R_109()Z
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
utilMDE.ArraysMDE:subarray([JII)[J
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_115()Z
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Expression;)V
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
jtb.syntaxtree.UnaryExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeListOptional:present()Z
jtb.JavaParser:jj_3R_49()Z
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:indexFor(II)I
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PostfixExpression;)V
jtb.syntaxtree.NodeChoice:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.Quant:pairwiseGT([I[I)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfo:new_ppt()V
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.MathMDE:gcd([I)I
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
jtb.JavaParser:FormalParameter()Ljtb.syntaxtree.FormalParameter;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
jtb.JavaParser:getToken(I)Ljtb.Token;
jtb.syntaxtree.NodeSequence:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:mod_positive(II)I
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
jtb.JavaParser:jj_3R_124()Z
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.VarInfoName:esc_name()Ljava.lang.String;
jtb.syntaxtree.TypeArguments:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.InclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_2_14(I)Z
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AndExpression;)V
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_2_4(I)Z
jtb.syntaxtree.ConditionalAndExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.EqualityExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:isPseudoArray()Z
utilMDE.ArraysMDE:min([I)I
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ClassOrInterfaceBody:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
daikon.VarInfoName:repr()Ljava.lang.String;
utilMDE.LimitedSizeIntSet:size()I
daikon.Quant:lexGTE([I[I)Z
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeBound;)V
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.ModBitTracker:num_samples()I
daikon.Quant:gte(II)Z
jtb.syntaxtree.FormalParameter:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_103()Z
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
jtb.syntaxtree.TypeParameters:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeSequence;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;)V
jtb.JavaParser:jj_2_36(I)Z
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
1077 2 1225 2 151 2 474 2 154 2 1052 2 1273 4 290 2 1281 2 
19 2 1012 2 379 2 1056 2 692 2 496 6 32 2 867 6 812 6 313 2 835 2 
258 2 1207 6 928 4 1057 2 608 2 555 6 1089 6 151 2 613 2 154 2 1114 2 793 6 118 4 
1222 8 1048 2 678 2 1054 30 686 4 1230 8 641 2 488 10 690 2 1189 2 2 10 248 4 406 12 7 16 296 8 412 16 791 6 870 8 499 4 1024 6 874 26 1166 10 912 4 596 10 151 6 561 2 154 6 279 2 955 16 439 10 
1293 6 208 4 
398 2 
281 2 1183 2 218 2 508 2 86 2 1156 2 976 2 65 2 1063 2 
874 12 755 6 1166 4 1011 4 686 2 1054 14 488 4 2 4 406 5 881 4 204 2 7 8 917 6 412 8 37 2 955 8 439 4 
522 2 239 4 1147 4 525 2 1227 2 402 2 535 4 1153 2 324 2 1060 4 360 4 128 2 90 2 578 2 1236 8 254 10 169 2 414 2 705 2 1243 14 1073 2 940 6 503 2 335 4 378 4 1079 2 756 10 1291 4 342 4 383 2 666 2 882 2 29 2 153 62 597 4 155 2 36 4 773 4 38 4 957 2 
1026 2 725 2 398 2 219 2 164 2 229 2 67 2 699 2 53 2 653 2 
239 4 284 2 83 2 532 2 690 2 535 2 126 2 694 2 651 2 1236 2 790 2 169 2 983 2 1281 2 377 2 1163 2 753 2 1121 4 262 2 1032 2 181 2 948 2 1087 2 716 2 66 4 186 2 1093 2 34 2 918 2 769 2 1003 2 1135 2 775 2 1263 2 923 2 
1222 6 353 4 1007 2 822 2 1054 56 1011 4 488 16 641 2 82 2 2 16 406 22 934 4 7 32 328 2 412 32 791 4 870 18 1279 6 745 6 1024 4 659 4 874 48 750 8 755 6 1166 16 990 2 912 2 881 4 151 4 596 6 996 6 154 4 917 6 1095 4 955 32 351 2 439 16 1221 4 565 6 
1236 2 1073 2 940 2 
462 22 487 2 47 2 288 2 949 2 126 2 669 2 109 2 863 2 559 10 366 2 478 2 740 2 586 2 
815 2 816 1 637 4 817 32 1140 1 318 2 1149 2 320 4 967 2 824 3 5 1 828 2 168 4 17 1 1161 3 657 2 336 2 20 2 660 24 839 2 840 2 987 2 1167 2 989 2 341 2 667 2 1169 4 183 1 842 8 992 4 843 1 668 3 27 2 33 2 672 1 190 2 674 3 195 2 1176 2 519 2 1005 2 1181 2 680 2 355 3 856 2 1013 2 48 2 1186 2 533 12 1191 2 860 2 537 2 1192 2 862 2 697 2 52 5 701 2 57 2 707 2 708 2 214 24 552 1 1034 2 714 6 1035 2 879 1 384 16 557 1 1039 2 885 2 73 2 1044 2 721 2 238 2 394 2 1223 2 1049 2 1229 2 401 2 730 2 896 3 733 3 1062 2 1066 2 1064 2 411 2 410 2 736 32 1071 1 582 1 93 2 424 4 427 2 261 1 267 2 107 2 270 2 108 16 768 3 112 2 772 2 920 2 440 2 777 2 922 2 1265 4 443 2 444 2 446 3 1269 2 602 3 449 16 1272 6 786 3 607 2 609 8 450 1 452 2 133 2 132 2 135 2 795 6 1118 8 137 1 800 2 1119 2 139 2 1284 2 1122 2 465 2 303 16 302 2 467 6 308 2 1129 4 310 3 151 34 150 2 474 2 1130 2 154 32 476 2 629 1 311 2 631 2 1138 2 634 2 
58 2 
151 2 531 2 
185 2 151 4 654 2 
639 4 642 62 645 94 643 2 644 6 3 2 646 6 648 2 649 4 8 4 652 358 10 2 11 2 13 2 655 18 14 4 18 2 661 94 21 2 22 2 663 4 26 2 28 2 670 2 35 2 673 36 39 2 675 2 676 42 42 2 43 2 681 90 682 2 683 6 46 18 687 2 688 4 693 2 695 2 696 2 698 2 700 12 703 4 702 4 55 4 54 6 711 4 712 4 713 2 61 2 63 6 715 2 64 4 717 18 72 2 720 2 78 2 726 2 727 2 728 4 81 4 79 6 85 2 731 2 88 48 732 2 744 8 747 2 748 4 96 2 97 2 749 2 751 2 752 2 100 42 759 2 760 2 104 2 105 18 106 94 762 12 761 2 764 58 765 4 766 2 110 52 767 2 113 2 770 4 114 2 115 2 117 2 778 2 120 16 779 2 780 2 123 2 782 2 785 2 129 2 798 52 138 2 801 2 802 246 140 2 141 6 142 16 147 4 805 2 148 2 807 2 152 4 808 2 811 2 159 2 820 46 821 2 162 2 823 8 827 4 166 2 167 20 829 12 832 2 833 2 171 2 174 2 837 2 838 2 184 2 846 2 848 2 192 2 850 4 197 2 198 2 852 2 855 2 200 2 201 2 859 2 203 12 865 2 868 2 207 4 871 28 873 2 211 4 875 2 215 4 877 2 220 2 222 6 226 4 227 4 230 4 232 2 236 2 237 2 888 2 889 2 244 2 893 2 894 2 247 2 895 2 898 2 251 2 250 2 901 2 253 2 902 4 257 8 259 2 907 4 908 4 264 4 910 16 271 2 915 4 275 2 278 2 921 104 277 2 924 2 283 2 285 4 926 2 286 4 927 44 930 2 931 2 294 2 933 4 295 2 298 2 939 2 941 2 299 2 300 2 946 4 301 2 947 6 953 8 312 48 954 42 315 2 956 100 958 2 960 2 961 4 963 16 964 4 319 14 965 2 966 4 321 2 968 2 970 2 971 4 974 44 326 2 977 94 327 6 978 2 329 4 330 30 331 8 982 74 984 2 985 50 986 2 339 6 993 2 994 22 345 2 998 2 999 4 354 2 356 2 1009 2 1008 62 1017 246 359 4 361 2 363 4 1019 22 364 94 1020 2 1022 2 367 2 1023 2 368 4 369 2 371 2 372 2 1025 2 376 2 1030 2 1031 36 381 4 382 2 1037 2 385 2 386 2 1038 2 1040 6 1041 2 1043 2 1046 4 1047 88 393 2 395 2 396 14 1058 2 407 2 408 2 1067 2 1068 2 413 4 1069 2 417 4 420 10 1074 62 1076 30 425 2 426 4 1078 2 428 94 1080 96 429 2 1082 2 1083 2 431 2 1091 18 1092 2 435 4 1096 2 1097 2 445 2 1099 2 447 2 1103 2 1105 2 1106 2 1109 2 1110 2 1111 30 1112 44 1113 2 1116 246 1117 2 456 94 457 50 459 16 461 18 464 2 1124 2 1127 2 466 2 1131 6 1132 2 477 2 1136 2 480 8 481 2 1139 6 1142 2 1146 2 1144 2 486 94 489 2 490 2 494 2 493 2 1158 2 497 4 500 2 501 8 1160 2 502 4 1162 2 1164 50 506 2 507 2 509 2 510 14 1172 18 512 2 514 2 1174 8 521 4 1178 2 523 4 1180 2 524 2 528 18 1184 2 527 2 530 2 1185 2 1187 4 534 2 536 2 1194 2 1196 2 540 12 541 4 1199 2 542 4 1201 4 1200 88 543 2 544 2 1204 2 551 2 1208 2 1210 2 1211 54 1214 4 1213 2 1212 2 554 4 1215 94 558 4 562 2 563 2 567 2 569 74 1224 2 1228 2 1231 2 577 4 576 2 1233 2 1235 2 1237 4 580 2 1238 58 584 2 1245 94 588 56 1246 2 590 2 591 2 1247 2 594 12 1250 6 1251 2 1252 12 1254 2 1257 2 1258 2 1259 2 1267 2 1268 2 604 18 1271 2 1275 4 615 2 616 2 1277 4 1282 2 1288 2 1287 4 622 2 1289 94 1290 2 623 22 624 2 1295 4 1296 58 1297 88 626 4 1299 2 628 2 1300 2 1301 2 630 12 1302 4 632 2 633 2 
600 2 441 2 620 2 804 1 
1219 2 441 2 
936 2 1236 2 737 2 387 2 
473 2 936 2 1236 2 737 2 387 2 1190 2 
1236 2 131 2 387 2 499 2 210 2 441 2 
44 2 34 2 
1236 2 387 2 499 2 423 2 
638 2 919 2 
573 2 415 2 
1286 2 98 2 
876 2 671 2 
671 2 415 2 880 2 
348 2 671 2 415 2 
612 2 671 2 415 2 
671 2 415 2 1274 2 
890 2 1148 2 1232 2 1065 6 1236 2 1244 6 30 2 387 2 
754 2 903 2 
1236 2 505 2 131 2 387 2 499 2 1190 2 441 2 
131 2 1151 2 441 2 
131 2 585 2 441 2 
600 2 754 2 858 2 
131 2 441 2 
754 2 340 2 
883 2 441 2 
600 2 754 2 1104 2 
600 2 1286 2 221 2 
932 2 600 2 671 2 
600 2 919 2 1216 2 
600 2 415 2 225 2 
754 2 370 2 
741 2 441 2 
1286 2 718 2 
317 2 671 2 
919 2 268 2 
900 2 415 2 
375 2 754 2 
415 2 783 2 
1001 2 919 2 
671 2 1159 2 
1286 2 546 2 
600 2 754 2 1137 2 1104 2 
600 2 754 2 143 2 1137 2 1104 2 
600 2 754 2 617 2 
600 2 754 2 803 2 
610 2 309 2 495 2 1241 2 
176 2 121 2 891 4 462 2 263 2 1 2 304 2 380 2 1059 2 1061 2 276 2 619 2 722 2 
600 2 255 2 
967 2 
637 4 817 6 320 4 165 2 168 2 336 2 20 2 341 2 992 4 843 2 842 2 27 2 1177 2 195 2 1005 2 1181 2 680 4 45 4 856 2 533 8 860 2 1193 2 701 2 57 2 708 2 714 2 556 2 1039 2 73 6 1042 2 721 2 77 2 1045 2 238 2 1223 2 243 4 1049 2 401 2 574 2 84 2 734 2 736 4 92 2 93 2 424 4 758 2 267 2 107 2 920 2 440 2 777 2 1265 2 443 2 444 2 449 6 1272 4 132 2 795 6 137 2 1119 2 942 2 800 2 139 2 463 2 302 2 1126 2 467 2 1129 2 150 2 151 26 474 2 154 26 156 2 634 2 
637 4 817 6 320 4 165 2 168 2 504 2 336 2 20 2 341 2 667 2 992 4 843 2 842 2 27 2 1177 2 195 2 1005 2 1181 2 680 4 45 4 856 2 533 8 860 2 1192 2 1193 2 701 2 57 2 708 2 714 2 556 2 1039 2 73 6 1042 2 721 2 77 2 238 2 1223 2 243 4 1049 2 401 2 574 2 734 2 736 4 93 2 424 4 758 2 593 2 267 2 107 2 112 2 920 2 440 2 777 2 1265 2 443 2 444 2 122 2 449 6 1272 6 132 2 795 6 137 2 1119 2 942 2 800 2 139 2 463 2 302 2 1126 2 467 2 1129 2 151 26 150 2 474 2 154 26 156 2 634 2 
864 2 
202 2 94 2 
723 2 724 2 158 4 636 2 637 2 1145 2 1049 2 485 2 245 2 246 2 401 2 1056 4 4 2 496 6 650 4 831 4 742 2 835 2 416 2 583 2 424 2 332 2 658 2 334 2 99 10 19 4 1086 4 107 2 347 2 844 2 272 2 598 2 517 2 442 2 195 2 280 2 119 2 856 2 124 2 1188 2 1107 2 130 8 867 6 1115 2 937 2 209 8 455 2 796 2 795 4 553 2 150 2 228 4 151 12 154 6 388 2 812 6 313 2 719 4 721 2 635 2 
723 2 724 2 158 4 637 2 636 2 1145 2 1049 2 485 2 245 2 401 2 1056 4 491 4 4 2 496 6 650 4 831 4 742 2 835 2 416 2 583 2 424 2 332 2 658 2 334 2 99 10 19 4 1086 4 107 2 347 2 844 2 272 2 598 2 517 2 195 2 442 2 280 2 119 2 856 2 124 2 784 2 1188 2 691 2 692 2 1107 2 130 8 867 8 1115 2 209 8 455 2 796 2 795 4 553 2 150 2 228 4 151 12 154 6 388 2 812 8 313 2 719 4 721 2 635 2 
723 2 19 2 334 2 158 2 636 2 553 2 124 2 1056 2 1107 2 496 2 228 4 844 2 867 2 388 2 719 4 442 2 796 2 280 2 
723 2 724 2 158 4 636 2 637 2 1145 2 1049 2 485 2 245 2 246 2 401 2 1056 4 4 2 496 4 650 4 831 4 742 2 416 2 583 2 424 2 332 2 658 2 334 2 99 6 19 4 1086 4 107 2 347 2 844 2 272 2 598 2 517 2 442 2 195 2 280 2 119 2 856 2 124 2 1188 2 692 2 1107 2 130 4 867 6 1115 2 937 2 209 4 455 2 796 2 795 4 553 2 150 2 228 4 151 12 154 6 388 2 812 6 313 2 719 4 721 2 635 2 
723 2 724 2 158 4 636 2 637 2 1145 2 1049 2 485 2 245 2 246 2 401 2 1056 4 4 2 496 6 650 4 831 4 742 2 416 2 583 2 424 2 332 2 658 2 334 2 99 6 19 4 1086 4 107 2 347 2 844 2 272 2 598 2 517 2 442 2 195 2 280 2 119 2 856 2 1012 2 124 2 1188 2 1107 2 130 4 867 4 1115 2 937 2 209 4 455 2 796 2 795 4 553 2 150 2 228 4 151 12 154 6 388 2 812 6 313 2 719 4 721 2 635 2 
723 2 724 2 158 4 636 2 637 2 1145 2 1049 2 485 2 245 2 246 2 401 2 1056 4 4 2 496 6 650 4 831 4 742 2 835 2 416 2 583 2 424 2 332 2 658 2 334 2 99 6 19 4 1086 4 107 2 347 2 844 2 272 2 598 2 517 2 442 2 195 2 280 2 119 2 856 2 124 2 1188 2 1107 2 130 4 867 6 1115 2 937 2 209 8 455 2 796 2 795 4 553 2 150 2 228 4 151 12 154 6 388 2 812 6 313 2 719 4 721 2 635 2 
723 2 724 2 158 4 637 2 636 2 1145 2 1049 2 485 2 245 2 246 2 401 2 1056 4 4 2 496 8 650 4 831 4 742 2 835 2 416 2 583 2 424 2 332 2 658 2 334 2 99 10 19 4 1086 4 107 2 347 2 844 2 272 2 598 2 517 2 442 2 195 2 280 2 119 2 856 2 1012 2 124 2 1188 2 1107 2 130 8 867 6 1115 2 937 2 209 8 455 2 796 2 795 4 553 2 150 2 228 4 151 12 154 6 388 2 812 8 313 2 719 4 721 2 635 2 
723 2 724 2 158 4 636 2 637 2 1145 2 1049 2 485 2 245 2 246 2 401 2 1056 4 4 2 496 6 650 4 831 4 742 2 835 2 416 2 583 2 424 2 332 2 658 2 334 2 99 10 19 4 1086 4 107 2 347 2 844 2 272 2 598 2 517 2 442 2 195 2 280 2 119 2 856 2 124 2 1188 2 1107 2 130 8 867 6 1115 2 937 2 209 8 455 2 796 2 795 4 553 2 150 2 228 4 151 12 154 6 388 2 812 6 313 2 719 4 721 2 635 2 
637 4 636 2 320 4 322 2 4 4 650 6 654 6 332 2 333 2 658 2 334 2 19 4 336 2 20 2 23 6 341 2 667 2 992 4 27 2 347 2 997 6 1000 6 1005 2 45 4 1012 4 362 1 701 2 57 2 59 1 58 6 60 6 714 2 73 6 388 2 389 7 1042 2 719 4 76 2 721 2 723 2 724 2 1049 2 1050 2 401 2 400 2 1056 4 736 2 742 2 416 2 746 2 93 2 419 2 424 4 1075 2 99 2 102 2 1086 4 107 2 771 6 436 2 437 6 442 2 119 2 1098 1 444 2 124 2 449 6 1102 2 1107 2 789 6 1115 2 132 2 455 2 795 6 796 2 1119 12 800 2 139 2 460 2 463 4 1126 2 467 2 1129 2 150 2 151 46 472 1 474 2 154 24 812 12 813 2 482 2 483 2 817 8 158 4 485 2 1145 2 163 2 492 2 826 6 1155 8 1154 2 496 8 831 8 168 2 172 2 179 2 182 2 842 2 844 2 188 2 517 4 195 2 1177 2 1179 7 856 2 529 2 1188 2 533 4 531 6 1192 2 861 4 206 2 867 4 209 2 545 2 548 1 1205 6 550 2 553 2 1209 6 217 2 224 2 228 4 566 1 1223 2 240 2 245 2 246 2 572 4 249 2 583 2 904 6 260 6 1255 2 272 2 274 1 920 2 598 2 280 2 1265 2 1272 6 606 10 1278 6 302 2 305 2 1298 1 952 1 313 4 635 2 
483 2 482 2 158 4 817 8 636 2 637 4 1145 2 485 2 320 4 322 2 163 2 492 2 826 6 1154 2 1155 8 4 4 496 8 650 6 168 4 831 8 172 2 835 4 654 6 332 2 333 2 19 4 334 2 658 2 336 2 20 2 179 2 23 6 341 2 182 2 667 2 842 2 992 4 27 2 347 2 844 2 997 6 188 2 1000 6 517 4 1177 2 195 2 1005 2 680 2 45 4 529 2 856 2 1188 2 531 6 533 8 861 4 1192 2 206 2 701 2 867 8 57 2 58 6 209 6 545 2 60 6 1205 6 550 2 1209 6 553 2 217 2 714 2 224 2 228 4 388 2 73 6 1042 2 719 4 76 2 721 2 723 2 724 2 240 2 1223 2 1049 2 1050 2 245 2 572 4 246 2 400 2 401 2 1056 4 249 2 736 2 416 2 742 2 746 2 904 6 583 2 419 2 93 2 424 4 1075 2 99 2 260 6 102 2 1086 4 107 2 1255 2 272 2 1260 2 436 2 771 6 437 6 920 2 598 2 442 2 1265 4 119 2 280 2 444 2 124 2 449 6 1102 2 1272 6 606 10 1107 2 789 6 1278 6 1115 2 132 2 455 2 796 2 795 6 800 2 1119 12 139 2 460 2 463 4 302 2 305 2 467 2 1126 2 146 2 1129 4 151 48 150 2 474 2 154 26 812 12 813 2 313 4 635 2 
483 2 482 2 158 4 817 8 636 2 637 4 1145 2 485 2 320 4 322 2 163 2 492 2 826 6 1154 2 1155 8 4 4 496 8 650 6 168 4 831 8 172 2 835 4 654 6 332 2 333 2 19 4 334 2 658 2 336 2 20 2 179 2 23 6 341 2 182 2 667 2 842 2 992 4 27 2 347 2 844 2 997 6 188 2 1000 6 517 4 1177 2 195 2 1005 2 680 2 45 4 529 2 856 2 1188 2 531 6 533 8 861 4 1192 2 206 2 701 2 867 8 57 2 58 6 209 6 545 2 60 6 1205 6 550 2 1209 6 553 2 217 2 714 2 224 2 228 4 73 6 388 2 1042 2 719 4 76 2 721 2 723 2 724 2 240 2 1223 2 1049 2 1050 2 245 2 572 4 246 2 400 2 401 2 1056 4 249 2 736 2 416 2 742 2 746 2 904 6 583 2 419 2 93 2 424 4 1075 2 99 6 260 6 102 2 1086 4 107 2 1255 2 272 2 1260 2 436 2 771 6 437 6 920 2 598 2 442 2 1265 4 119 2 280 2 444 2 124 2 449 6 1102 2 1272 6 606 10 1107 2 130 4 789 6 1278 6 1115 2 132 2 455 2 796 2 795 6 800 2 1119 12 139 2 460 2 463 4 302 2 305 2 467 2 1126 2 146 2 1129 4 151 48 150 2 474 2 154 26 812 12 813 2 313 4 635 2 
637 4 636 2 320 4 322 2 4 4 650 6 654 12 332 2 333 2 658 2 334 2 19 4 336 2 20 2 23 6 341 2 667 2 992 4 27 2 343 6 347 2 997 6 1000 12 1005 2 680 2 45 6 357 2 1012 2 692 2 701 2 57 2 58 12 60 6 1033 6 714 4 388 2 73 8 1042 4 719 4 76 2 721 2 723 2 724 2 1049 2 1050 2 401 2 400 2 1056 4 736 4 742 2 416 2 746 2 93 2 419 2 424 4 1075 2 99 6 102 2 1086 4 107 2 1090 6 771 6 436 2 437 6 442 2 119 2 444 2 124 2 449 8 1102 2 1107 2 130 4 789 12 1115 2 132 2 455 2 794 6 795 6 796 2 1119 10 800 2 139 2 460 2 463 4 1126 2 467 4 146 2 470 6 1129 4 151 52 150 2 474 2 154 24 812 16 482 2 483 2 817 12 158 4 1145 2 485 2 818 6 163 2 492 2 826 6 1155 8 1154 2 496 10 831 8 168 4 835 4 172 2 179 2 182 2 842 4 844 2 188 2 517 4 195 2 1177 2 856 2 529 2 1188 2 533 10 531 12 1192 2 861 4 206 2 867 10 209 6 545 2 1205 6 550 2 553 2 1209 6 217 2 224 2 228 4 231 2 564 2 1220 2 1223 2 240 2 245 2 246 2 572 4 249 2 575 2 583 2 904 6 587 2 260 6 1255 2 272 2 1260 2 920 2 598 2 280 2 1265 4 929 6 1272 6 605 2 606 8 1278 12 945 2 1292 6 302 2 305 2 950 6 313 4 635 2 
723 2 636 2 485 2 245 2 246 2 1188 2 1056 4 496 6 650 2 831 2 130 4 867 6 1115 2 416 2 835 2 742 2 583 2 209 6 99 4 334 2 658 2 19 4 553 2 1086 2 151 4 347 2 228 2 812 4 388 2 313 2 598 2 719 2 442 2 119 2 280 2 
637 4 817 8 636 2 485 2 320 4 967 2 496 6 650 2 831 2 835 2 19 4 658 2 334 2 336 2 20 2 341 2 667 2 992 4 27 2 347 2 195 2 1177 2 519 2 1005 2 45 4 856 2 1188 2 1186 2 1018 2 1192 2 701 2 867 6 57 2 209 6 553 2 714 3 1036 2 228 2 73 6 388 2 719 2 721 2 723 2 1223 2 1049 2 245 2 246 2 401 2 1056 4 409 2 736 3 416 2 742 2 583 2 93 2 424 4 99 2 1086 2 107 2 272 2 920 2 598 2 442 2 280 2 119 2 444 2 282 3 449 6 1272 6 606 2 1115 2 132 2 795 6 135 2 1119 4 139 2 463 2 302 2 1126 2 467 3 625 2 151 28 150 2 474 2 154 24 809 2 812 4 313 2 813 2 
658 2 618 2 1188 2 
658 2 618 2 1188 2 
1141 2 158 4 637 4 817 2 320 4 322 2 163 2 826 2 973 4 4 2 496 12 650 4 168 4 831 4 835 4 15 2 332 2 334 4 658 4 19 4 336 2 337 2 341 2 667 2 992 4 27 2 1170 2 1002 2 516 2 517 4 1177 2 195 2 1005 2 856 2 1012 4 1188 6 533 4 358 2 692 4 861 2 1192 2 51 2 1193 4 701 2 867 12 57 2 209 6 217 2 228 2 73 2 391 2 234 2 719 2 721 2 723 2 1223 2 241 2 1049 2 399 2 572 2 401 2 1056 4 736 2 416 2 583 2 93 2 424 4 99 6 101 2 1086 2 911 2 107 2 430 2 920 2 776 2 774 2 442 2 1265 4 444 2 124 2 449 2 1272 6 606 2 614 4 130 4 618 2 132 2 455 2 796 2 795 6 800 4 1119 4 139 2 463 6 302 2 1126 2 1129 4 151 24 150 2 474 2 154 16 812 16 313 4 635 2 
1119 2 399 2 857 2 202 2 358 2 606 2 249 2 826 2 861 2 430 2 1107 2 151 4 154 2 1094 2 706 2 545 2 195 2 
1141 2 158 4 637 4 817 2 1145 2 320 4 322 2 163 2 826 2 973 4 4 4 496 12 650 4 168 4 831 4 835 4 332 2 334 4 658 4 19 4 177 2 336 2 337 2 341 2 665 2 667 2 992 4 27 2 1170 2 1002 2 517 4 1177 2 195 2 1005 2 856 2 1012 4 1188 6 1015 2 533 4 358 2 692 4 1192 2 51 2 1193 4 701 2 867 12 57 2 209 6 217 2 228 2 73 2 391 2 719 2 721 2 723 2 1223 2 241 2 1049 2 399 2 572 2 729 2 401 2 1056 4 736 4 416 2 583 2 93 2 424 4 99 6 1086 2 911 4 107 2 430 2 920 2 776 2 774 2 442 2 1265 4 444 2 124 2 449 2 1272 6 614 4 130 4 618 2 132 2 455 2 796 2 795 6 800 4 1119 2 139 2 463 6 302 2 1126 2 1129 4 151 24 150 2 474 2 154 16 812 16 313 4 157 2 635 2 
1141 2 158 4 637 4 817 2 1145 2 320 4 322 2 163 2 826 2 973 4 4 4 496 12 650 4 168 4 831 4 835 4 332 2 334 4 658 4 19 4 336 2 337 2 1165 2 341 2 667 2 992 4 27 2 1170 2 1002 2 517 4 1177 2 195 2 41 2 1005 2 856 2 1012 4 1188 6 533 4 358 2 692 4 861 2 1192 2 51 2 1193 4 701 2 56 2 867 12 57 2 209 6 217 2 228 2 73 2 391 2 719 2 721 2 723 2 1223 2 241 2 1049 2 399 2 572 2 401 2 1056 4 736 2 416 2 583 2 93 2 424 4 99 6 1086 2 911 2 107 2 914 2 430 2 920 2 776 2 774 2 442 2 1265 4 444 2 124 2 449 2 1272 6 606 2 788 2 614 4 130 4 618 2 132 2 455 2 796 2 795 6 800 4 1119 4 139 2 463 6 302 2 1126 2 1129 4 151 24 150 2 474 2 154 16 812 16 313 4 635 2 
913 2 884 2 151 2 1218 2 892 2 1143 2 579 2 434 2 1084 2 265 2 438 2 
817 2 484 2 677 4 526 3 45 2 449 2 325 2 736 3 451 2 738 2 453 1 1242 2 943 2 20 2 714 3 467 3 469 2 991 2 1088 2 151 2 995 2 154 2 73 2 849 2 1042 6 
817 2 484 2 677 4 526 2 45 2 449 2 325 2 736 2 451 2 738 2 1242 2 943 2 20 2 714 2 467 2 469 2 991 2 1088 2 151 2 995 2 154 2 73 2 849 2 1042 6 
817 2 484 2 677 4 526 2 45 2 449 2 325 2 736 2 451 2 738 2 1242 2 943 2 20 2 714 2 467 2 469 2 991 2 1088 2 151 2 995 2 154 2 73 2 849 2 1042 6 
1222 4 817 2 1054 5 488 2 2 2 825 2 125 4 293 2 7 2 935 2 736 3 738 2 412 2 791 2 581 2 498 6 1240 3 95 3 656 2 874 4 709 2 1166 2 338 2 20 2 878 4 714 3 384 2 108 2 151 10 154 4 847 4 233 2 69 4 111 3 193 4 1261 2 955 2 439 2 194 2 1262 2 
1222 4 817 2 1054 4 488 2 641 2 2 2 825 2 125 4 293 2 406 2 7 2 935 2 736 2 738 2 412 2 791 2 581 2 870 2 498 6 1240 2 95 2 656 2 874 4 709 2 1166 2 338 2 20 2 878 4 714 2 384 2 108 2 151 10 154 4 847 4 233 2 69 4 111 2 193 4 1261 2 955 2 439 2 194 2 1262 2 
1222 4 817 2 1054 4 488 2 641 2 2 2 825 2 125 4 293 2 406 2 7 2 935 2 736 2 738 2 412 2 791 2 581 2 870 2 498 6 1240 2 95 2 656 2 874 4 709 2 1166 2 338 2 20 2 878 4 714 2 384 2 108 2 151 10 154 4 847 4 233 2 69 4 111 2 193 4 1261 2 955 2 439 2 194 2 1262 2 
1222 4 817 2 1054 4 488 2 641 2 2 2 825 2 125 4 293 2 406 2 7 2 935 2 736 2 738 2 412 2 791 2 581 2 870 2 498 6 1240 2 95 2 656 2 874 4 709 2 1166 2 338 2 20 2 878 4 714 2 384 2 108 2 151 10 154 4 847 4 233 2 69 4 111 2 193 4 1261 2 955 2 439 2 194 2 1262 2 
1222 4 817 2 1054 4 488 2 641 4 2 2 825 2 125 4 293 2 406 4 7 2 935 2 736 2 738 2 412 2 791 2 581 2 870 4 498 6 1240 2 95 2 656 2 874 4 709 2 1166 2 338 2 20 2 878 4 714 2 384 2 108 2 151 10 154 4 847 4 233 2 69 4 111 2 193 4 1261 2 955 2 439 2 194 2 1262 2 
50 2 549 2 160 2 592 2 314 2 574 2 352 2 
50 2 1283 2 458 2 1100 2 710 2 1175 2 
854 2 856 2 1051 2 640 2 402 1 1016 2 787 2 1157 2 830 2 980 2 789 2 739 1 834 2 256 2 1285 2 1248 2 144 2 25 1 1123 2 383 1 306 2 346 2 151 10 154 8 475 2 518 1 
1222 4 353 2 822 1 1054 15 1011 2 685 2 488 6 641 2 2 6 405 2 406 4 7 6 412 6 791 2 870 3 421 2 134 2 797 2 750 2 874 12 755 4 1166 6 988 2 664 2 806 2 151 6 154 6 955 6 887 2 439 6 565 4 
878 2 1085 1 689 4 969 2 223 2 1217 2 899 2 511 2 151 1 154 1 1234 2 273 7 847 2 69 2 74 2 16 2 959 2 454 2 
878 2 689 4 969 4 223 4 1217 2 899 2 511 4 1234 2 273 6 847 2 69 2 74 2 16 2 959 2 454 2 
878 2 1085 1 689 4 969 8 223 8 1217 2 899 2 511 8 151 1 154 1 1234 8 273 10 847 2 69 2 74 6 16 2 959 2 454 2 
878 2 689 2 969 2 223 2 1217 2 899 2 511 2 273 2 847 2 69 2 16 2 959 2 454 2 
962 24 320 60 1152 8 975 2 647 6 9 2 981 4 12 4 836 24 175 4 178 6 180 2 662 4 24 8 1168 12 667 36 992 48 841 2 344 6 1171 6 349 2 513 4 187 6 31 2 845 4 1173 4 191 2 851 6 520 12 853 8 679 2 1182 6 1014 6 49 6 1192 36 205 2 538 4 866 12 57 12 869 4 539 6 1198 6 373 6 872 6 374 8 547 2 1028 4 1027 6 216 4 62 2 560 6 68 2 390 1 570 66 242 6 1226 2 397 2 571 4 80 6 897 3 403 12 735 2 252 12 91 6 1070 4 1072 2 743 24 418 4 93 12 422 6 906 12 589 2 909 2 1081 6 757 12 1249 26 1253 6 1256 18 763 6 433 2 1264 6 444 6 1266 6 601 2 448 12 603 24 781 6 1101 4 287 16 1272 132 289 6 292 12 127 4 1108 8 297 4 1280 6 136 13 1120 24 145 2 468 6 627 12 951 4 149 4 471 2 151 102 154 90 810 1 1134 4 479 2 316 6 
570 6 161 2 1053 2 320 20 1150 2 1152 2 404 2 972 2 975 2 6 2 647 2 89 2 252 4 9 2 170 2 173 2 93 2 905 2 175 2 757 2 1081 2 178 2 103 2 24 2 1253 2 841 2 992 20 344 2 595 2 1256 2 1171 2 763 2 432 2 187 2 916 2 350 2 31 4 845 2 189 2 851 2 599 2 515 2 196 2 520 4 1004 2 1006 2 444 2 199 2 679 2 925 4 448 4 781 2 1270 2 1010 2 1272 42 291 2 611 6 49 38 1108 2 205 2 1276 2 1021 2 704 2 1195 2 57 2 869 2 1197 2 938 4 792 2 374 6 136 2 1203 2 212 2 799 2 944 2 621 2 1125 2 307 4 1128 2 151 46 560 2 154 44 810 2 68 2 71 4 70 2 886 2 75 2 235 2 568 2 
814 4 819 2 320 44 323 16 647 4 979 16 9 2 981 4 12 4 836 24 175 2 178 4 667 28 992 36 841 2 344 4 1171 4 349 2 513 4 187 4 31 2 350 2 845 2 191 2 851 4 40 4 520 10 853 8 1182 4 684 4 1014 4 49 14 1192 30 205 2 365 4 538 4 866 16 704 2 57 6 869 2 1197 10 1198 4 373 4 872 4 1202 8 374 6 547 4 213 4 1206 2 1028 4 1027 4 1029 8 216 4 560 6 68 2 392 4 570 24 397 2 571 4 80 4 1055 2 403 14 87 2 735 4 252 10 91 4 1070 4 1239 32 743 24 418 4 93 6 422 4 906 8 757 10 1081 4 1249 30 103 10 266 4 1253 4 595 2 269 2 1256 6 763 4 1264 4 116 8 444 2 1266 4 448 10 781 4 1270 2 1272 104 127 4 297 4 1280 4 792 10 136 10 1120 8 1294 8 468 4 627 8 951 2 149 4 151 78 1133 2 154 70 479 2 316 4 
570 8 1226 2 320 14 897 2 647 2 735 2 252 6 9 2 93 2 175 2 589 2 909 2 1081 2 757 2 178 4 180 2 662 2 1249 6 667 12 1253 4 841 2 992 14 344 4 1256 2 763 4 1171 2 187 4 350 2 31 2 845 2 851 2 520 6 1006 2 444 2 853 6 601 2 448 6 781 4 1270 2 287 10 1272 40 49 14 1192 12 205 2 297 4 869 2 57 2 374 4 136 2 547 2 145 2 1125 2 951 2 151 28 154 26 560 2 810 2 68 2 1134 2 
0 2 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR utilMDE.Assert$AssertionException (900,909) (900,909) (502,640,771,926,948) (502,640,771,926,948) (502,640,771,926,948) 
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.NullPointerException 928 744 157 992 1062 620 759 866 29 1154 912 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V FAILED junit.framework.ComparisonFailure 
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 64 837 1163 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 966 320 1007 
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
utilMDE.FuzzyFloat:FuzzyFloat()V
utilMDE.ArraysMDE:min_max([I)[I
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.Quant:eltwiseGTE([I)Z
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:subsetOf([I[I)Z
jtb.JavaParser:jj_3R_77()Z
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
jtb.JavaParser:jj_3R_162()Z
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.Quant:eq(DD)Z
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.PptSlice0:arity()I
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
utilMDE.FuzzyFloat:isSubset([D[D)Z
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
utilMDE.MathMDE:gcd_differences([I)I
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.ProglangType:baseIsIntegral()Z
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | CONDITION | 3770 | if (x) -> if (!x)
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltsLtIndex([I)Z
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaCharStream:getBeginColumn()I
utilMDE.ArraysMDE:sum([I)I
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:passes()Z
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.diff.PrintAllVisitor:bufPrintln()V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:sum([[I)I
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.inv.unary.scalar.Positive:enabled()Z
daikon.VarInfoName:name()Ljava.lang.String;
jtb.JavaParser:jj_3R_120()Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:pairwiseLT([I[I)Z
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3_12()Z
jtb.JavaParser:jj_3_13()Z
jtb.JavaParser:jj_3R_55()Z
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String; | ASSIGN | 121036 | = null
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
utilMDE.MathMDE:mod_positive(II)I
daikon.ProglangType:isPseudoArray()Z
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3_4()Z
jtb.JavaParser:jj_3_16()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.Invariant:justified()Z
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
jtb.JavaParser:jj_2_1(I)Z
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:gt(II)Z
utilMDE.LimitedSizeIntSet:add(I)V
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.PptName:isCombinedExitPoint()Z
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:lexGTE([I[I)Z
jtb.JavaParser:jj_3R_163()Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
jtb.JavaParser:jj_3_1()Z
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_70()Z
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.Quant:subsetOf([D[D)Z
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.inv.Invariant:prob_or(DD)D
daikon.ValueTuple:isMissingFlow(I)Z
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_97()Z
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.Quant:eltsLteIndex([I)Z
jtb.JavaParser:jj_2_36(I)Z
jtb.JavaParser:jj_2_13(I)Z
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
utilMDE.TestUtilMDE:lsis_test(I)V
jtb.JavaParser:jj_3_17()Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
jtb.JavaParser:jj_3R_51()Z
daikon.diff.Node:children()Ljava.util.Iterator;
utilMDE.MathMDE:negate(I)I
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_3_15()Z
daikon.ProglangType:isScalar()Z
jtb.JavaParser:jj_3_25()Z
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_72()Z
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.inv.unary.scalar.UpperBound:enabled()Z
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:prob_is_ge(DD)D
jtb.JavaParser:jj_3R_89()Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:indexOf([ZZ)I
jtb.syntaxtree.NodeToken:trimSpecials()V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.Quant:pairwiseGTE([I[I)Z
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.Quant:eltsEqual([II)Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.Quant:eltsGT([II)Z
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.LowerBoundCore:computeConfidence()D
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.Quant:eq(JJ)Z
daikon.VarInfoName:isLiteralConstant()Z
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:subsetOf([D[F)Z
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.inv.Invariant:prob_and(DDD)D
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
jtb.JavaParser:jj_3R_161()Z
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.JavaParser:jj_3R_67()Z
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.diff.Node:Node()V
daikon.VarInfo:relate_var()V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_54()Z
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.ModBitTracker:split(I)I
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
jtb.JavaParser:jj_3R_135()Z
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
jtb.JavaParser:jj_ntk()I
jtb.JavaParser:jj_3R_60()Z
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_2_17(I)Z
daikon.Quant:isReverse([I[I)Z
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.Quant:setDiff([I[I)[I
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.MathMDE:modulus([I)[I
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual; | RETURN | 1527 | return null
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.inv.unary.UpperBoundCore:computeConfidence()D
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_2_10(I)Z
daikon.Quant:concat([I[I)[I
daikon.Quant:memberOf(F[F)Z
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
jtb.JavaCharStream:backup(I)V
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_103()Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
jtb.JavaParser:jj_3R_63()Z
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap:size()I
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.Invariant:getConfidence()D
jtb.JavaParser:jj_3R_48()Z
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
utilMDE.ArraysMDE:indexOf([II)I
daikon.PptSlice0:initInvariantsSeen()V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
jtb.JavaParser:jj_3_27()Z
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
daikon.Debug:logDetail()Z
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.ProglangType:baseIsScalar()Z
jtb.JavaParser:jj_3R_109()Z
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
utilMDE.Intern:internSubsequence([JII)[J
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ProglangType:isFloat()Z
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:subsetOf([F[F)Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.UpperBoundCore:calc_range()J
utilMDE.ArraysMDE:fn_compose([I[I)[I
jtb.JavaParser:jj_3R_61()Z
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
utilMDE.ArraysMDE:concat([I[I)[I
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
utilMDE.WeakHasherMap:processQueue()V
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_110()Z
jtb.JavaParser:jj_3R_57()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_36()Z
utilMDE.FuzzyFloat:lt(DD)Z
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
utilMDE.MathMDE:gcd(II)I
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3_29()Z
daikon.diff.RootNode:RootNode()V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
jtb.JavaParser:jj_3R_99()Z
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
jtb.JavaCharStream:GetImage()Ljava.lang.String;
utilMDE.MathMDE:pow(II)I
daikon.Quant:lte(II)Z
daikon.Quant:union([I[I)[I
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.inv.ValueSet:ValueSet(I)V
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
jtb.JavaParser:jj_3_14()Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_49()Z
jtb.JavaParser:jj_3R_75()Z
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
utilMDE.Intern:internSubsequence([III)[I
jtb.JavaParser:jj_3R_68()Z
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:pairwiseSquare([I[I)Z
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
jtb.JavaParser:jj_3R_114()Z
utilMDE.MathMDE:sign(I)I
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
utilMDE.MathMDE:pow_fast(II)I
utilMDE.FuzzyFloat:gte(DD)Z
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.OrderedPairIterator:setnext2()V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.Quant:pairwiseEqual([I[I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:subsetOf([F[D)Z
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.Quant:lexNotEqual([I[I)Z
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.Quant:eltsNotEqual([II)Z
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
jtb.Token:newToken(I)Ljtb.Token;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:ioa_name()Ljava.lang.String;
jtb.JavaParser:jj_3_20()Z
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:jj_3R_86()Z
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
utilMDE.Options.OptionInfo:argument_required()Z
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_108()Z
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.Quant:eq(II)Z
jtb.JavaParser:jj_3R_88()Z
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
jtb.JavaParser:jj_3R_50()Z
daikon.ValueTuple:isMissing(I)Z
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_2_15(I)Z
jtb.JavaParser:jj_2_35(I)Z
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression; | RETURN | 57109 | return null
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.Quant:eltwiseGT([I)Z
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaCharStream:getEndLine()I
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.PptName:isEnterPoint()Z
utilMDE.ArraysMDE:noDuplicates([I)Z
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.diff.InvMap:InvMap()V
jtb.JavaParser:jj_3R_105()Z
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.inv.unary.scalar.NonModulus:enabled()Z
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Elements:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.Quant:eq(FF)Z
jtb.JavaParser:jj_3R_122()Z
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltsGtIndex([I)Z
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
utilMDE.MathMDE:gcd(JJ)J
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
utilMDE.OrderedPairIterator:setnext1()V
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.ProglangType:isArray()Z
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.Quant:eltsLT([II)Z
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.PptSlice1:arity()I
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaCharStream:readChar()C
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
daikon.VarComparabilityImplicit:alwaysComparable()Z
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.inv.unary.LowerBoundCore:computeProbability()D
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
jtb.JavaCharStream:getEndColumn()I
jtb.JavaParser:jj_3_22()Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeList:NodeList()V
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
jtb.syntaxtree.NodeOptional:NodeOptional()V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.Quant:eltwiseLT([I)Z
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.Quant:lexEqual([I[I)Z
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
jtb.JavaParser:jj_2_21(I)Z
jtb.JavaParser:jj_3_5()Z
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.config.Configuration.ConfigException:ConfigException(Ljava.lang.String;Ljava.lang.Throwable;)V
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfo:simplify_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.inv.Invariant:logDetail()Z
daikon.Quant:sameLength([I[I)Z
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.Quant:lt(II)Z
utilMDE.FuzzyFloat:lte(DD)Z
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
jtb.JavaParser:jj_3R_116()Z
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
jtb.JavaParser:jj_3R_74()Z
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
jtb.JavaParser:jj_3R_107()Z
daikon.Quant:eltsGTE([II)Z
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.inv.OutputFormat:toString()Ljava.lang.String;
jtb.JavaParser:jj_scan_token(I)Z
utilMDE.SimpleLog.LongVal:LongVal(J)V
utilMDE.ArraysMDE:sum([[D)D
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.inv.Invariant:format()Ljava.lang.String;
jtb.JavaParser:jj_3R_52()Z
jtb.JavaParser:jj_3R_121()Z
jtb.JavaParser:jj_3R_123()Z
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:gte(II)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
jtb.JavaParser:getToken(I)Ljtb.Token;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.PptSlice2:arity()I
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.ModBitTracker:ModBitTracker(I)V
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
jtb.JavaParser:jj_3_18()Z
jtb.JavaCharStream:getBeginLine()I
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_117()Z
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Debug:logOn()Z
daikon.Quant:intersection([I[I)[I
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.ModBitTracker:num_vars()I
daikon.PptSlice1:num_samples()I
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
jtb.JavaCharStream:ReadByte()C
daikon.VarInfoName:simplify_name()Ljava.lang.String;
utilMDE.MathMDE:missing_numbers([I)[I
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
utilMDE.FuzzyFloat:eq(DD)Z
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:subsetOf([S[S)Z
utilMDE.Intern:intern([J)[J
jtb.JavaParser:jj_3R_85()Z
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.Quant:pairwiseDivides([I[I)Z
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
jtb.JavaParser:jj_3R_81()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.Quant:lexLTE([I[I)Z
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
daikon.VarInfo:name()Ljava.lang.String;
daikon.ProglangType:isPointerFileRep()Z
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:simplify_quantify(Ljava.util.EnumSet;[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
utilMDE.MathMDE:bitwiseComplement(I)I
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
utilMDE.MathMDE:mod_positive(JJ)J
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_126()Z
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.inv.unary.scalar.NonZero:is_pointer()Z
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
utilMDE.LimitedSizeIntSet:size()I
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String; | ASSIGN | 283084 | = null
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
jtb.JavaParser:jj_3R_69()Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
jtb.JavaParser:jj_2_18(I)Z
daikon.inv.Invariant:isWorthPrinting()Z
daikon.inv.unary.LowerBoundCore:calc_modulus()J
jtb.JavaParser:jj_3R_53()Z
jtb.JavaParser:jj_3R_73()Z
daikon.ModBitTracker:num_sets()I
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:min([I)I
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.Quant:memberOf(S[S)Z
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.Quant:memberOf(J[J)Z
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.ProglangType:isIntegral()Z
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.VarInfo:ioa_name()Ljava.lang.String;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.inv.unary.sequence.EltLowerBound:format_simplify()Ljava.lang.String;
jtb.JavaParser:jj_3_28()Z
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_87()Z
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:noDups([I)Z
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:baseIsFloat()Z
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_124()Z
daikon.Quant:memberOf(D[F)Z
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_2_12(I)Z
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.FuzzyFloat:FuzzyFloat(D)V
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.Quant:slice([III)[I
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
jtb.JavaParser:jj_2_4(I)Z
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_30()Z
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
jtb.JavaParser:jj_2_25(I)Z
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
jtb.JavaParser:jj_3_10()Z
jtb.JavaParser:jj_2_16(I)Z
daikon.Quant:setEqual([I[I)Z
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern:numIntArrays()I
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.Quant:lexLT([I[I)Z
jtb.JavaParser:jj_3_3()Z
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.Quant:subsetOf([J[J)Z
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
utilMDE.OrderedPairIterator:hasNext()Z
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern:intern([D)[D
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_134()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_62()Z
utilMDE.ArraysMDE:sorted([I)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Assert:assertTrue(Z)V
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
jtb.JavaCharStream:FillBuff()V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
daikon.Quant:memberOf(I[I)Z
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.Invariant:logOn()Z
daikon.Quant:eltsLTE([II)Z
utilMDE.FuzzyFloat:ne(DD)Z
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.Ppt:Ppt()V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_118()Z
daikon.ModBitTracker:num_samples()I
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
utilMDE.ArraysMDE:subarray([III)[I
daikon.inv.unary.scalar.Modulus:enabled()Z
jtb.JavaParser:jj_3_21()Z
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
utilMDE.ArraysMDE:max([I)I
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
jtb.JavaParser:jj_3_19()Z
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.VarInfoName.ElementsFinder:inPre()Z
jtb.JavaParser:jj_3R_100()Z
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_133()Z
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.inv.Invariants:Invariants()V
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:gcd([I)I
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParser:jj_3R_96()Z
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
utilMDE.Intern:intern([I)[I
daikon.Quant:eltsEqualIndex([I)Z
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
jtb.JavaParser:jj_3R_115()Z
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:eltwiseEqual([I)Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
jtb.JavaParser:jj_3R_56()Z
jtb.JavaParser:jj_3R_47()Z
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
utilMDE.FuzzyFloat:gt(DD)Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.Quant:eltsNotEqualIndex([I)Z
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.ProglangType:dimensions()I
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
utilMDE.ArraysMDE:element_range([I)I
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.VarInfoName:hashCode()I
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
jtb.JavaParser:jj_3R_104()Z
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:ne(II)Z
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_2_3(I)Z
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_106()Z
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:eltwiseLTE([I)Z
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:new_ppt()V
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.Quant:pairwiseGT([I[I)Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltsGteIndex([I)Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:subsetOf([B[I)Z
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
utilMDE.Intern.SequenceAndIndices:hashCode()I
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.inv.filter.ObviousFilter:ObviousFilter()V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
jtb.JavaCharStream:BeginToken()C
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_101()Z
jtb.JavaParser:jj_3R_58()Z
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.PptTopLevel:getInvariants()Ljava.util.List;
jtb.JavaParser:jj_3R_119()Z
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.VarInfo:esc_name()Ljava.lang.String;
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:lexGT([I[I)Z
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:memberOf(F[D)Z
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.ValueTuple:size()I
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_80()Z
utilMDE.ArraysMDE:fn_is_total([I)Z
jtb.JavaParser:jj_3_35()Z
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.Quant:pairwiseNotEqual([I[I)Z
jtb.JavaParser:jj_3R_76()Z
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_102()Z
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.inv.Invariant:prob_and(DD)D
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
daikon.VarInfo:isPointer()Z
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
jtb.JavaParser:jj_3R_148()Z
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_2_5(I)Z
jtb.JavaParser:jj_3R_125()Z
utilMDE.ArraysMDE:sum([D)D
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.ArraysMDE:subarray([JII)[J
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_2_14(I)Z
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.Quant:pairwiseLTE([I[I)Z
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eltwiseNotEqual([I)Z
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.InvariantFormatTester:execute()Z
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
770 4 265 2 400 2 167 2 117 2 900 2 572 2 819 2 909 2 
1106 2 592 2 438 6 735 2 889 2 13 6 566 6 931 2 445 2 652 2 951 2 
730 4 1024 2 498 2 900 2 146 6 523 2 965 6 281 6 1076 2 270 2 427 4 993 6 909 2 
234 10 409 2 538 2 900 6 8 30 540 8 359 4 761 26 984 6 43 10 464 2 465 10 178 16 1079 8 1149 2 325 2 909 6 732 6 262 4 1086 8 397 16 94 4 927 8 1160 2 599 12 813 2 160 16 198 10 347 10 936 4 
287 6 808 4 
825 2 
234 4 312 2 8 6 540 2 761 4 1071 2 984 2 43 2 465 2 178 2 880 2 588 2 118 2 262 2 191 2 296 2 397 2 599 2 160 2 198 2 816 2 347 2 303 2 
351 4 8 14 1135 6 397 8 249 2 94 2 761 12 227 6 599 5 155 4 43 4 465 4 60 2 160 8 198 4 178 8 347 4 
976 2 1026 4 132 2 758 2 210 2 541 4 38 4 39 2 318 62 12 4 505 2 647 4 176 2 421 2 580 2 45 4 423 2 387 2 876 4 723 2 286 4 838 2 593 4 916 2 223 8 370 10 1045 2 263 2 95 14 1011 6 1016 2 1017 4 195 2 197 10 603 2 1055 2 1122 2 348 4 103 4 605 4 
494 2 825 2 44 2 693 2 22 2 665 2 478 2 442 2 1158 2 491 2 
940 2 4 2 75 2 12 4 280 2 433 2 223 2 666 2 1110 2 811 2 1116 2 1120 2 528 2 892 2 99 2 530 2 304 4 606 2 236 2 977 2 755 2 32 2 538 2 610 2 900 4 905 2 906 2 1140 2 1142 4 1146 2 909 4 335 2 701 2 929 2 400 2 1008 2 59 2 850 2 402 4 1017 2 195 2 787 2 1095 2 1019 2 
234 6 351 4 495 4 941 8 381 6 900 4 8 54 1135 6 540 18 761 48 828 4 984 4 43 16 465 16 464 2 178 32 1034 6 553 6 991 4 692 2 872 2 909 4 182 6 1037 2 732 4 262 2 339 2 397 32 927 6 227 6 599 22 155 4 891 4 160 32 198 16 98 2 347 16 895 2 28 4 
1011 2 223 2 1045 2 
639 2 469 2 725 22 31 2 576 2 367 2 368 2 610 2 924 10 1047 2 849 2 1010 2 424 2 635 2 
855 2 708 6 1025 2 413 4 6 1 861 4 713 2 870 2 426 2 284 2 1038 2 726 1 1041 1 292 1 736 2 1044 2 294 2 738 1 26 2 1050 1 1059 2 306 2 900 24 615 2 42 5 323 5 324 2 180 2 48 2 909 22 769 6 621 1 771 2 914 2 51 1 333 1 921 2 1087 2 926 2 930 6 70 1 791 2 640 2 74 2 798 1 86 2 805 4 806 2 97 1 231 2 818 1 679 1 819 2 973 4 1130 2 239 2 244 1 248 1 688 2 829 1 694 2 392 2 1156 1 563 1 703 2 264 1 1014 2 267 3 1020 4 
141 2 
900 2 189 2 
222 2 900 4 1132 2 
854 2 275 2 276 36 857 2 277 48 10 48 862 2 864 4 865 2 866 2 279 2 868 4 867 6 16 2 18 2 873 2 582 146 874 4 583 18 21 4 589 20 883 2 288 2 289 2 594 48 293 20 595 2 295 2 886 2 597 2 602 26 27 4 301 4 896 4 29 2 30 14 307 2 315 2 34 2 37 2 904 2 41 146 617 2 618 2 326 2 620 2 911 2 913 2 912 2 331 2 53 4 917 48 336 4 918 2 337 2 624 2 57 2 928 10 58 48 629 2 631 2 933 8 62 2 633 2 68 2 938 2 72 2 71 2 353 2 642 8 76 2 354 4 77 8 80 8 645 2 361 2 649 2 653 48 656 2 655 48 87 2 949 2 366 2 950 2 660 2 953 2 89 2 90 6 956 36 664 216 91 8 670 4 960 2 671 8 672 8 92 4 962 2 675 2 967 4 971 2 375 2 102 4 101 2 378 2 104 2 105 4 681 10 684 4 981 6 386 22 987 2 986 2 988 2 114 4 691 2 115 2 989 2 990 2 992 2 696 2 697 48 698 2 700 8 702 2 120 2 1003 2 122 4 1004 4 398 2 1005 4 1006 4 401 8 124 2 403 4 125 2 127 4 404 2 406 28 128 2 410 6 130 2 411 4 1028 2 1027 4 416 2 419 2 420 2 712 22 1031 16 1032 2 714 4 718 2 1035 2 721 146 431 2 724 2 144 4 733 4 734 2 1043 2 153 6 742 14 1048 2 741 2 443 48 156 2 444 2 157 2 158 24 744 2 447 2 748 14 749 2 1062 2 162 2 752 2 452 48 163 4 168 2 170 2 1065 2 759 2 1069 2 174 4 763 2 1074 2 179 2 181 2 1080 2 768 2 183 2 1081 2 184 42 775 10 188 14 475 42 778 2 479 48 190 2 485 2 483 18 1089 48 781 4 487 2 1091 2 782 2 1092 4 489 2 196 2 199 2 201 2 492 2 204 2 203 4 496 2 793 2 497 2 499 22 501 2 1099 8 503 4 797 16 1101 2 506 2 213 2 215 2 802 2 508 2 509 2 513 2 219 2 514 2 1109 2 224 4 226 2 524 48 1118 2 1119 2 1121 2 1125 2 1124 8 1127 2 233 4 537 2 822 2 823 2 1133 36 824 2 247 4 246 20 1139 6 250 26 251 2 831 2 1144 2 253 2 550 8 1145 2 1151 4 1154 2 562 2 843 2 565 2 847 2 1159 2 573 2 271 2 853 2 
628 2 500 2 1123 2 11 1 
1013 2 500 2 
575 2 384 2 704 2 223 2 500 2 919 2 936 2 
869 2 500 2 919 2 
500 2 17 2 919 2 
1030 2 628 2 254 2 
500 2 919 2 
1030 2 208 2 
473 2 500 2 
451 2 1030 2 628 2 
88 2 680 2 628 2 
628 2 1155 2 116 2 
1049 2 628 2 388 2 
628 2 634 2 200 2 
1030 2 995 2 
500 2 1157 2 
680 2 609 2 
1039 2 116 2 
388 2 521 2 
15 2 634 2 
1030 2 985 2 
1070 2 634 2 
388 2 561 2 
116 2 161 2 
680 2 56 2 
451 2 1030 2 628 2 611 2 
451 2 1030 2 628 2 611 2 458 2 
1030 2 628 2 737 2 
1030 2 628 2 418 2 
2 2 773 2 192 2 
377 2 273 2 725 6 220 2 332 2 455 2 731 2 133 2 844 2 24 4 887 4 1115 2 799 2 371 2 801 2 549 2 1077 2 217 2 
628 2 554 2 
575 2 223 2 345 2 272 2 
575 2 384 2 223 2 345 2 389 2 272 2 
575 2 258 2 223 2 500 2 919 2 936 2 
827 2 528 2 
575 2 223 2 851 2 936 2 
388 2 211 2 
657 2 634 2 
680 2 577 2 
923 2 116 2 
882 2 634 2 116 2 
747 2 634 2 116 2 
1113 2 634 2 116 2 
121 2 634 2 116 2 
575 2 407 2 795 6 1100 6 690 2 223 2 999 2 148 2 
1030 2 1078 2 
324 2 
274 2 708 4 855 2 1025 2 861 4 579 2 719 2 726 2 736 2 1044 2 294 2 26 2 604 4 893 4 1059 2 750 8 449 2 305 2 306 2 166 2 756 2 900 26 319 2 615 2 614 2 903 2 616 2 42 2 323 2 765 2 466 2 180 6 48 6 328 2 767 2 909 26 769 4 914 2 921 2 338 2 1087 2 930 6 786 4 350 2 791 2 74 2 942 2 79 8 356 2 86 2 805 4 806 6 669 2 812 2 970 2 817 2 231 2 232 2 819 2 973 4 532 2 1130 2 975 2 239 2 243 4 983 2 545 2 1150 2 994 2 694 2 392 2 840 2 1156 2 703 2 574 2 1020 4 
274 2 708 6 855 2 1025 2 861 4 579 2 713 2 426 2 719 2 726 2 736 2 1044 2 294 2 297 2 26 2 604 4 893 2 1059 2 750 8 449 2 305 2 306 2 166 2 756 2 900 26 1066 2 1067 2 319 2 615 2 614 2 616 2 42 2 323 2 765 2 180 6 48 6 328 2 767 2 909 26 769 4 914 2 921 2 338 2 1087 2 930 6 932 2 786 4 350 2 791 2 74 2 942 2 79 8 356 2 86 2 805 4 806 6 669 2 812 2 970 2 817 2 231 2 232 2 819 2 973 4 532 2 1130 2 975 2 239 2 243 4 983 2 545 2 1150 2 694 2 392 2 840 2 1156 2 703 2 574 2 1020 4 
477 2 
1141 2 557 2 
73 2 5 2 1098 2 861 2 13 6 360 2 84 2 652 2 86 2 428 8 143 2 432 4 434 2 592 2 884 4 149 2 438 6 441 2 889 4 26 2 445 4 601 2 230 4 373 10 527 2 1059 2 376 4 973 2 899 2 306 2 235 2 453 2 536 2 1130 2 382 2 682 4 239 2 900 12 316 2 685 2 460 2 175 4 1138 2 1073 2 177 8 46 2 694 2 909 6 841 2 1084 2 261 2 119 2 481 2 566 6 123 2 930 4 632 2 405 2 1096 2 707 2 
73 2 5 2 1098 2 861 2 13 8 360 2 84 2 652 2 86 2 428 8 143 2 432 4 434 2 1106 2 592 2 884 4 1042 2 149 2 438 8 441 2 810 2 889 4 26 2 445 4 601 2 373 10 230 4 1059 2 973 2 376 4 899 2 306 2 235 2 453 2 536 2 1130 2 382 2 682 4 239 2 900 12 171 4 316 2 685 2 460 2 175 4 1138 2 1073 2 177 8 46 2 694 2 909 6 841 2 1084 2 261 2 481 2 566 6 123 2 930 4 632 2 405 2 1096 2 707 2 
235 2 536 2 841 2 382 2 1084 2 149 2 438 2 261 2 175 2 889 2 360 2 566 2 123 2 445 2 230 4 46 2 707 2 376 4 
73 2 5 2 1098 2 861 2 13 6 360 2 84 2 86 2 428 4 143 2 432 4 434 2 1106 2 592 2 884 4 149 2 438 6 441 2 889 4 26 2 445 4 601 2 230 4 373 6 527 2 1059 2 376 4 973 2 899 2 306 2 235 2 453 2 536 2 1130 2 382 2 682 4 239 2 900 12 316 2 685 2 460 2 175 4 1138 2 1073 2 177 4 46 2 694 2 909 6 841 2 1084 2 261 2 119 2 481 2 566 4 123 2 930 4 632 2 405 2 1096 2 707 2 
73 2 5 2 1098 2 861 2 13 6 360 2 84 2 86 2 428 4 951 2 143 2 432 4 434 2 592 2 884 4 149 2 438 4 441 2 889 4 26 2 445 4 601 2 230 4 373 6 527 2 1059 2 376 4 973 2 899 2 306 2 235 2 453 2 536 2 1130 2 382 2 682 4 239 2 900 12 316 2 685 2 460 2 175 4 1138 2 1073 2 177 4 46 2 694 2 909 6 841 2 1084 2 261 2 119 2 481 2 566 6 123 2 930 4 632 2 405 2 1096 2 707 2 
73 2 5 2 1098 2 861 2 13 6 360 2 84 2 652 2 86 2 428 4 143 2 432 4 434 2 592 2 884 4 149 2 438 6 441 2 889 4 26 2 445 4 601 2 230 4 373 6 527 2 1059 2 376 4 973 2 899 2 306 2 235 2 453 2 536 2 1130 2 382 2 682 4 239 2 900 12 316 2 685 2 460 2 175 4 1138 2 1073 2 177 8 46 2 694 2 909 6 841 2 1084 2 261 2 119 2 481 2 566 6 123 2 930 4 632 2 405 2 1096 2 707 2 
73 2 5 2 1098 2 861 2 13 8 360 2 84 2 652 2 86 2 428 8 951 2 143 2 432 4 434 2 592 2 884 4 149 2 438 6 441 2 889 4 26 2 445 4 601 2 230 4 373 10 527 2 1059 2 973 2 376 4 899 2 306 2 235 2 453 2 536 2 1130 2 382 2 682 4 239 2 900 12 316 2 685 2 460 2 175 4 1138 2 1073 2 177 8 46 2 694 2 909 6 841 2 1084 2 261 2 119 2 481 2 566 8 123 2 930 4 632 2 405 2 1096 2 707 2 
73 2 5 2 1098 2 861 2 13 6 360 2 84 2 652 2 86 2 428 8 143 2 432 4 434 2 592 2 884 4 149 2 438 6 441 2 889 4 26 2 445 4 601 2 230 4 373 10 527 2 1059 2 376 4 973 2 899 2 306 2 235 2 453 2 536 2 1130 2 382 2 682 4 239 2 900 12 316 2 685 2 460 2 175 4 1138 2 1073 2 177 8 46 2 694 2 909 6 841 2 1084 2 261 2 119 2 481 2 566 6 123 2 930 4 632 2 405 2 1096 2 707 2 
855 2 858 2 5 2 861 4 13 12 579 4 584 2 590 2 591 6 592 4 884 8 885 2 294 2 889 4 26 2 601 2 300 6 893 1 306 2 899 2 309 2 900 46 612 7 316 2 319 2 615 2 42 2 322 2 323 2 46 2 48 8 47 2 619 1 328 2 909 24 914 2 330 2 921 2 922 10 625 2 627 2 930 6 63 2 632 2 66 2 67 2 349 1 73 2 74 2 942 2 79 4 356 2 360 2 84 2 86 2 951 4 661 4 954 2 668 1 669 2 373 2 973 4 376 4 380 1 106 4 382 2 682 6 107 2 982 2 685 2 694 2 695 8 997 1 392 2 1002 2 703 12 123 2 126 6 405 2 1020 4 707 2 1022 6 708 6 131 6 1025 2 713 2 426 2 141 6 717 6 143 2 432 4 434 4 1040 2 147 6 149 2 438 4 736 2 1044 2 441 2 445 4 1057 2 1059 2 750 4 1058 2 449 2 1063 1 453 4 166 2 169 2 172 6 1068 1 460 2 175 4 1073 2 177 2 180 6 769 2 1084 2 189 6 1085 1 779 2 481 2 1087 2 780 6 486 7 786 4 1096 2 791 2 1098 2 800 2 214 6 507 2 512 2 805 4 806 6 520 2 812 2 230 4 527 2 231 2 1126 2 232 2 819 2 1128 6 531 6 235 2 1130 2 536 2 239 2 1132 6 240 1 1138 2 256 2 259 2 841 2 842 2 261 2 845 6 848 2 566 8 1168 2 
1023 2 1022 6 855 2 708 6 131 6 1025 2 5 2 858 2 861 4 13 12 579 4 713 2 426 2 141 6 717 6 432 4 143 2 434 4 584 2 590 2 591 6 1040 2 592 4 147 6 884 8 885 2 438 8 149 2 736 2 1044 2 294 2 441 2 889 4 26 2 300 6 601 2 445 4 1057 2 1058 2 750 8 1059 2 449 4 899 2 306 2 309 2 453 4 166 2 900 48 169 2 172 6 316 2 319 2 615 2 460 2 175 4 1073 2 42 2 177 6 322 2 323 2 46 2 180 6 47 2 48 8 328 4 769 2 909 26 914 2 330 2 1084 2 189 6 922 10 921 2 625 2 779 2 481 2 780 6 1087 2 627 2 930 6 63 2 786 4 66 2 632 2 67 2 1096 2 73 2 791 2 942 2 74 2 79 8 356 4 1098 2 360 2 84 2 800 2 214 6 507 2 652 4 86 2 512 2 661 4 954 2 669 2 806 6 805 4 520 2 812 2 373 2 527 2 230 4 100 2 231 2 232 2 1126 2 819 2 376 4 973 4 531 6 1128 6 235 2 536 2 1130 2 106 4 107 2 682 6 382 2 239 2 1132 6 243 2 982 2 685 2 1138 2 256 2 694 2 695 8 259 2 392 2 841 2 842 2 261 2 1002 2 845 6 703 12 848 2 566 8 123 2 126 6 405 2 1168 2 1020 4 707 2 
1023 2 1022 6 855 2 708 6 131 6 1025 2 5 2 858 2 861 4 13 12 579 4 713 2 426 2 141 6 717 6 428 4 432 4 143 2 434 4 584 2 590 2 591 6 1040 2 592 4 147 6 884 8 885 2 438 8 149 2 736 2 1044 2 294 2 441 2 889 4 26 2 300 6 601 2 445 4 1057 2 1058 2 750 8 1059 2 449 4 899 2 306 2 309 2 453 4 166 2 900 48 169 2 172 6 316 2 319 2 615 2 460 2 175 4 1073 2 42 2 177 6 322 2 323 2 46 2 180 6 47 2 48 8 328 4 769 2 909 26 914 2 330 2 1084 2 189 6 922 10 921 2 625 2 779 2 481 2 780 6 1087 2 627 2 930 6 63 2 786 4 66 2 632 2 67 2 1096 2 73 2 791 2 942 2 74 2 79 8 356 4 1098 2 360 2 84 2 800 2 214 6 507 2 652 4 86 2 512 2 661 4 954 2 669 2 806 6 805 4 520 2 812 2 527 2 373 6 230 4 100 2 231 2 232 2 1126 2 819 2 376 4 973 4 531 6 1128 6 235 2 536 2 1130 2 106 4 107 2 682 6 382 2 239 2 1132 6 243 2 982 2 685 2 1138 2 256 2 694 2 695 8 259 2 392 2 841 2 842 2 261 2 1002 2 845 6 703 12 848 2 566 8 123 2 126 6 405 2 1168 2 1020 4 707 2 
855 2 5 2 858 2 861 4 13 16 579 4 878 6 584 2 590 2 591 6 592 4 290 2 884 8 885 2 294 2 889 4 26 2 601 2 300 6 306 2 899 2 309 2 900 52 901 6 316 2 319 2 615 2 42 4 322 2 323 4 46 2 48 12 47 2 328 4 909 24 914 2 330 2 334 6 921 2 922 8 625 2 341 6 627 2 930 6 63 2 632 2 66 2 67 2 73 2 74 2 942 2 79 10 356 4 360 2 84 2 652 4 86 2 951 2 661 4 954 2 669 2 373 6 100 2 973 4 376 4 106 4 682 6 382 2 107 2 982 2 685 2 687 6 694 2 695 8 392 2 699 2 1002 2 703 10 123 2 1018 2 126 12 405 2 1020 4 707 2 1023 2 1022 6 708 6 131 6 1025 2 713 2 426 2 141 12 428 4 717 12 143 2 432 4 1036 6 434 4 1040 2 147 6 149 2 438 10 736 2 151 2 1044 2 441 2 1052 2 743 2 445 4 1057 2 750 10 1059 2 1058 2 449 4 450 6 453 4 166 4 169 2 172 6 460 2 175 4 1073 2 177 6 180 8 769 4 187 2 1084 2 189 12 779 2 481 2 1087 2 780 6 1090 2 490 6 786 6 1096 2 791 2 1098 2 800 2 214 6 507 2 512 2 1106 2 805 4 806 8 520 2 812 2 230 4 527 2 231 2 1126 2 232 4 819 2 1128 6 531 12 235 2 1130 2 536 2 239 2 1132 12 243 2 1138 2 256 2 259 2 841 2 261 2 845 6 848 2 566 10 269 6 1168 2 
899 2 235 2 536 2 682 2 382 2 900 4 316 2 1098 2 460 2 13 4 1138 2 1073 2 177 6 652 2 46 2 428 4 432 2 143 2 841 2 592 2 884 2 149 2 438 6 261 2 481 2 441 2 889 4 566 6 601 2 445 4 527 2 373 4 230 2 405 2 376 2 
855 2 708 6 1025 2 861 4 13 4 579 2 713 2 426 2 432 2 143 2 437 2 592 2 884 2 438 6 149 2 736 2 1044 2 294 2 441 2 889 4 26 2 601 2 445 4 1059 2 306 2 899 2 900 28 757 3 316 2 319 2 615 2 460 2 1073 2 42 3 177 6 323 3 324 2 46 2 180 6 48 8 909 24 769 3 914 2 921 2 922 2 481 2 1087 2 340 2 930 6 65 2 786 4 1096 2 791 2 74 2 942 2 1098 2 502 2 652 2 86 2 948 2 805 4 806 6 812 2 527 2 230 2 373 2 231 2 819 2 376 2 973 4 235 2 1130 2 536 2 682 2 239 2 382 2 383 2 539 2 1138 2 1143 2 694 2 392 2 841 2 842 2 261 2 703 4 566 6 405 2 1020 4 
405 2 875 2 481 2 
405 2 875 2 481 2 
708 6 855 2 1025 2 861 4 13 16 579 6 713 2 426 2 875 2 428 4 432 2 434 4 592 4 884 4 439 2 438 12 736 2 1044 2 294 2 889 4 26 2 300 2 445 4 601 2 893 2 1058 2 750 4 1059 2 449 4 306 2 453 2 900 24 319 2 615 2 175 4 762 2 1073 2 462 2 177 6 180 2 48 2 328 4 909 16 769 2 470 2 914 2 777 2 922 2 921 2 481 6 1087 2 193 2 930 6 63 2 632 2 73 2 791 2 74 2 1097 2 79 4 356 4 84 2 652 4 86 2 216 2 951 4 661 2 1106 4 517 2 669 4 805 4 806 2 959 2 1114 4 812 2 814 2 230 2 373 6 817 4 231 2 972 4 819 2 973 4 376 2 820 2 235 2 1130 2 536 4 978 2 980 2 106 2 682 4 239 2 546 2 834 2 694 2 996 2 392 2 261 2 1002 2 703 4 566 12 123 2 405 4 1020 4 707 2 
954 2 978 2 330 2 106 2 557 2 900 4 1084 2 415 2 922 2 703 2 193 2 462 2 1009 2 26 2 300 2 85 2 909 2 
708 6 855 2 3 2 1025 2 5 2 861 4 13 16 579 6 713 2 426 2 875 2 428 4 432 2 434 4 592 4 884 4 439 4 438 12 736 2 1044 2 294 2 889 4 26 2 300 2 445 4 601 2 1058 2 750 4 1059 2 449 4 306 2 453 4 900 24 319 2 615 2 175 4 1073 2 462 2 177 6 180 2 48 2 328 4 909 16 769 4 470 2 914 2 777 2 921 2 481 6 1087 2 193 2 930 6 343 2 63 2 632 2 73 2 791 2 74 2 641 2 1097 2 79 4 356 4 84 2 652 4 86 2 216 2 951 4 661 2 1106 4 517 2 518 2 669 4 805 4 806 2 1114 4 812 2 814 2 230 2 373 6 817 4 231 2 972 4 819 2 973 4 376 2 820 2 235 2 1130 2 536 4 978 2 682 4 239 2 546 2 547 2 834 2 694 2 392 2 261 2 1002 2 703 2 566 12 123 2 405 4 1020 4 707 2 
708 6 855 2 1025 2 5 2 135 2 861 4 13 16 579 6 713 2 426 2 875 2 428 4 432 2 434 4 592 4 884 4 439 2 438 12 736 2 1044 2 294 2 889 4 298 2 26 2 300 2 445 4 601 2 893 1 1058 2 750 4 1059 2 449 4 306 2 453 4 900 24 319 2 615 2 175 4 1073 2 462 2 177 6 180 2 48 2 328 4 909 16 769 2 470 2 914 2 1082 2 777 2 922 2 921 2 481 6 1087 2 193 2 930 6 63 2 632 2 73 2 791 2 74 2 1097 2 79 4 356 4 81 2 84 2 652 4 86 2 216 2 951 4 661 2 1106 4 517 2 669 4 805 4 806 2 1114 4 812 2 814 2 230 2 373 6 677 2 817 4 231 2 972 4 819 2 973 4 376 2 820 2 235 2 1130 2 536 4 978 2 106 2 682 4 239 2 546 2 834 2 694 2 392 2 261 2 1002 2 703 4 566 12 123 2 405 4 1020 4 707 2 
0 2 855 2 856 2 859 4 578 14 7 4 8 16 9 2 860 2 861 4 863 24 278 16 579 2 14 2 19 2 581 4 872 4 283 10 876 2 877 14 584 2 285 2 586 2 593 2 23 12 290 2 291 2 885 2 596 3 294 2 598 3 600 2 599 6 26 2 893 1 302 2 607 2 306 2 308 2 310 2 313 12 900 64 314 4 33 2 902 2 36 2 613 2 317 2 614 14 615 2 321 2 908 12 907 12 42 16 43 4 323 19 45 2 47 2 48 28 909 52 910 2 49 1 914 2 50 2 329 4 54 2 623 2 921 2 925 4 927 6 626 2 930 6 346 2 64 2 347 4 937 2 637 2 636 3 638 2 352 3 942 2 74 6 643 2 943 2 78 2 79 25 358 2 644 2 82 2 83 4 945 2 650 2 946 4 654 2 363 4 86 2 659 2 365 2 952 2 955 16 663 6 369 2 957 12 667 4 669 4 93 2 674 2 963 2 676 4 969 2 970 2 98 2 103 2 973 4 974 2 975 2 379 2 683 4 383 2 982 4 109 2 111 2 689 10 385 2 694 2 392 4 699 2 393 4 394 2 396 1 703 2 397 8 399 2 705 2 1018 2 1020 20 129 1 1021 2 708 39 1026 2 1025 4 412 2 710 2 709 2 134 2 417 2 1029 2 136 2 138 2 137 2 139 2 713 9 140 2 426 9 715 4 719 2 720 2 430 4 722 18 435 2 726 2 728 1 437 2 1040 2 732 4 736 2 151 2 440 2 1044 2 739 3 152 2 154 1 1046 2 155 4 743 2 446 2 160 8 1054 2 745 2 746 16 1056 2 1059 2 750 24 751 4 448 2 753 2 165 2 166 46 454 2 757 2 457 2 760 6 459 2 761 12 465 4 463 2 765 2 178 8 180 14 767 2 769 19 185 2 474 2 187 2 480 2 1087 2 1088 2 484 14 1090 2 194 4 488 2 1094 4 198 4 786 12 788 2 202 2 790 2 791 6 792 2 205 10 206 6 207 18 796 2 1103 2 510 2 511 2 803 3 1107 2 1108 12 806 14 805 18 807 2 519 2 1111 4 225 2 228 2 812 2 229 2 526 2 529 4 815 14 231 2 1126 2 232 20 819 4 532 2 821 2 534 2 1130 2 238 4 239 2 241 4 1134 6 539 2 1135 6 540 4 1136 3 1137 4 826 12 544 2 548 2 1143 2 255 2 1147 2 836 4 256 2 835 2 257 2 837 2 556 2 840 2 558 2 1156 2 564 2 1163 2 569 2 570 2 571 4 1167 12 1165 2 1166 2 
534 2 942 2 310 2 166 6 205 4 943 2 900 2 317 2 42 2 689 2 323 2 425 2 180 2 48 2 283 2 835 2 769 2 909 2 806 2 519 2 598 2 569 2 786 2 1166 2 
534 2 942 2 310 2 166 6 205 4 943 2 900 2 317 2 42 2 689 2 323 2 425 2 180 2 48 2 283 2 835 2 769 2 909 2 806 2 519 2 598 2 569 2 786 2 1166 2 
534 2 942 2 310 2 166 6 205 4 943 2 900 2 317 2 42 2 689 2 323 2 425 2 180 2 48 2 283 2 835 2 769 2 909 2 806 2 519 2 598 2 569 2 786 2 1166 2 
608 4 942 2 311 2 314 2 900 10 794 2 8 4 1134 6 110 2 761 4 43 2 465 2 252 2 323 3 871 4 178 2 48 2 20 4 769 3 909 4 585 2 915 3 774 2 395 2 732 2 519 2 596 3 673 4 397 2 927 4 96 2 194 2 1015 4 344 2 160 2 198 2 571 2 347 2 636 3 374 2 
942 2 794 2 8 4 871 4 20 4 585 2 732 2 519 2 596 2 673 4 599 2 96 2 160 2 374 2 608 4 311 2 900 10 314 2 1134 6 540 2 110 2 761 4 43 2 464 2 465 2 252 2 323 2 178 2 48 2 909 4 769 2 915 2 774 2 395 2 397 2 927 4 194 2 1015 4 344 2 198 2 571 2 347 2 636 2 
942 2 794 2 8 4 871 4 20 4 585 2 732 2 519 2 596 2 673 4 599 2 96 2 160 2 374 2 608 4 311 2 900 10 314 2 1134 6 540 2 110 2 761 4 43 2 464 2 465 2 252 2 323 2 178 2 48 2 909 4 769 2 915 2 774 2 395 2 397 2 927 4 194 2 1015 4 344 2 198 2 571 2 347 2 636 2 
942 2 794 2 8 4 871 4 20 4 585 2 732 2 519 2 596 2 673 4 599 2 96 2 160 2 374 2 608 4 311 2 900 10 314 2 1134 6 540 2 110 2 761 4 43 2 464 2 465 2 252 2 323 2 178 2 48 2 909 4 769 2 915 2 774 2 395 2 397 2 927 4 194 2 1015 4 344 2 198 2 571 2 347 2 636 2 
942 2 794 2 8 5 871 4 20 4 585 2 732 2 519 2 596 2 673 4 599 4 96 2 160 2 374 2 608 4 311 2 900 10 314 2 1134 6 540 4 110 2 761 4 43 2 464 4 465 2 252 2 323 2 178 2 48 2 909 4 769 2 915 2 774 2 395 2 397 2 927 4 194 2 1015 4 344 2 198 2 571 2 347 2 636 2 
408 2 964 2 839 2 186 2 113 2 564 2 
897 2 1161 2 964 2 391 2 1083 2 355 2 614 2 
939 2 754 2 237 2 1131 2 900 10 504 2 422 1 423 1 387 1 327 1 364 2 716 2 694 2 142 2 909 8 221 1 776 2 559 2 961 2 740 2 1117 2 1053 2 934 2 783 2 785 2 126 2 
606 2 1 2 941 2 381 4 900 6 7 2 8 15 1135 4 860 2 540 5 761 12 648 2 43 6 465 6 464 4 832 2 178 6 991 2 659 2 909 6 727 2 732 2 701 2 397 6 927 4 599 6 155 2 160 6 198 6 347 6 895 1 
587 2 608 2 52 2 662 1 900 1 209 2 173 2 686 2 266 2 1051 4 1015 2 871 2 935 2 468 2 833 2 852 7 909 1 1061 2 
587 4 608 2 52 2 209 2 173 4 686 2 266 4 1051 4 1015 2 871 2 935 2 468 2 833 2 852 6 1061 2 
587 8 608 2 52 2 662 1 900 1 209 8 173 8 686 2 266 8 1051 4 1015 2 871 2 935 6 468 2 833 2 852 10 909 1 1061 2 
587 2 608 2 52 2 173 2 686 2 266 2 1051 2 1015 2 871 2 468 2 833 2 852 2 1061 2 
129 4 708 88 1025 4 578 42 859 12 414 2 134 6 417 6 14 6 713 20 140 6 1033 4 19 6 426 20 715 12 429 2 722 4 285 6 728 2 145 2 23 22 739 3 154 2 446 6 1056 6 607 6 900 90 613 8 459 6 320 2 321 6 909 78 50 6 772 2 55 2 476 2 626 2 488 6 1094 12 1093 4 346 6 69 4 790 2 791 10 792 6 74 10 643 6 207 4 79 4 358 6 82 6 83 12 1102 2 650 3 1103 6 362 2 651 2 947 2 511 6 952 6 803 5 1107 6 515 4 369 6 667 12 805 36 807 2 1111 12 1112 4 809 4 93 2 522 4 228 6 966 2 676 13 526 6 969 6 238 12 542 1 111 6 255 6 1147 6 551 2 257 6 390 4 1153 2 1152 4 393 12 394 6 560 4 396 2 567 2 1007 2 1164 12 1020 42 
790 2 493 2 791 2 708 42 74 2 1025 2 578 6 859 4 79 38 134 2 711 2 212 2 796 4 82 2 944 2 83 4 1104 2 715 2 511 2 952 2 879 2 881 2 1107 2 729 2 436 2 728 4 369 2 804 2 805 20 958 2 807 2 1111 4 25 2 154 2 888 4 890 2 676 2 525 2 966 2 526 2 372 2 968 2 893 2 678 2 1060 2 898 2 1129 2 533 2 164 2 535 2 979 2 456 2 900 46 242 2 245 2 35 2 613 6 826 6 543 2 461 2 320 2 830 2 1075 2 255 2 467 2 766 2 257 2 909 44 555 2 471 2 622 2 772 2 260 4 393 2 920 2 1001 2 846 2 482 2 1007 2 626 2 630 2 1012 2 706 2 1162 2 488 2 568 2 346 2 268 4 784 2 1020 20 
129 4 708 104 1025 2 859 10 578 24 414 2 134 4 417 4 14 4 713 30 1033 4 140 4 426 28 19 4 282 32 715 10 429 2 285 8 728 2 23 30 150 8 1056 4 894 4 607 8 898 2 1064 16 900 78 613 6 459 4 320 2 40 4 1072 4 764 2 909 70 471 10 472 2 50 4 772 2 55 4 476 2 920 10 626 2 342 8 61 8 488 4 1093 4 1094 8 346 4 789 2 69 4 790 2 493 2 791 6 74 6 643 4 79 14 357 4 358 16 646 2 82 4 944 10 83 10 1102 4 362 4 1103 4 651 2 658 2 511 4 952 6 803 8 1105 4 218 4 1107 4 515 4 804 2 516 4 369 4 805 36 667 24 807 2 1111 10 1112 4 809 4 522 4 228 4 676 10 966 2 526 4 969 4 238 24 108 2 111 4 830 2 255 4 551 2 1147 4 552 16 257 4 390 4 1152 4 393 6 394 4 998 8 560 4 1007 2 1164 14 1020 44 
790 2 493 2 791 2 708 40 74 2 1025 2 207 10 578 8 859 6 79 14 134 2 82 4 83 6 1102 4 650 2 362 2 713 12 426 12 715 2 511 2 722 2 952 2 803 6 1107 4 728 2 145 2 23 6 369 4 805 14 807 2 1111 6 739 2 299 2 966 2 676 2 526 4 159 2 893 2 900 28 613 4 320 2 112 2 830 2 1075 2 255 4 551 2 1148 2 257 2 909 26 772 2 55 2 393 2 567 2 626 2 1007 2 1012 2 488 4 346 2 1020 14 
1000 2 

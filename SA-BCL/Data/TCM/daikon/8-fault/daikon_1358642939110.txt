#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.NullPointerException 517 748 693 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 495 24 851 705 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V ERROR java.lang.NullPointerException 307 672 
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_0()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_1()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_2()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_3()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_4()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_5()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_6()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_7()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_8()V FAILED junit.framework.AssertionFailedError (494,785) (494,785) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_9()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_10()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_11()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_12()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_13()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_14()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_15()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_16()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_17()V PASSED
daikon.test.split.SplitterFactoryTest:testmisc_Fib_main_18()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_19()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_20()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_21()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_22()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_23()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_24()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_25()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_26()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_27()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_28()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_29()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_30()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_31()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_32()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__33()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__34()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__35()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__36()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__37()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__38()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__39()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__40()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__41()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__42()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__43()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:intersection([I[I)[I
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;Z)Z
daikon.Quant:eltwiseLT([I)Z
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
jtb.JavaCharStream:getEndLine()I
jtb.JavaCharStream:FillBuff()V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
utilMDE.MathMDE:modulus([I)[I
daikon.inv.OutputFormat:isJavaFamily()Z
utilMDE.FuzzyFloat:eq(DD)Z
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
utilMDE.MathMDE:sign(I)I
daikon.VarInfo:new_ppt()V
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Ppt:Ppt()V
utilMDE.OrderedPairIterator:hasNext()Z
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:noDups([I)Z
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.ProglangType:baseIsScalar()Z
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.ProglangType:isPseudoArray()Z
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.Quant:pairwiseSquare([I[I)Z
daikon.Quant:eltwiseGTE([I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I | CONSTANT | 14018 | 108 -> 109
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.Quant:isReverse([I[I)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:lexLTE([I[I)Z
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
utilMDE.UtilMDE:lineNumberFileReader(Ljava.lang.String;)Ljava.io.LineNumberReader;
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.inv.Invariant:logDetail()Z
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
jtb.JavaCharStream:readChar()C
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.OrderedPairIterator:setnext1()V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.MathMDE:gcd([I)I
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.Quant:setDiff([I[I)[I
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.ArraysMDE:sum([I)I
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:eltsLtIndex([I)Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.Quant:memberOf(I[I)Z
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:union([I[I)[I
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:pairwiseGT([I[I)Z
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.Quant:subsetOf([D[D)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:ne(II)Z
daikon.Quant:memberOf(F[F)Z
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.Quant:eltsNotEqual([II)Z
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Quant:eq(FF)Z
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaCharStream:getBeginLine()I
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.Quant:subsetOf([I[I)Z
jtb.JavaCharStream:GetImage()Ljava.lang.String;
utilMDE.Options.OptionInfo:argument_required()Z
daikon.Quant:subsetOf([S[S)Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.Quant:lexGTE([I[I)Z
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.FuzzyFloat:lte(DD)Z
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.Quant:pairwiseDivides([I[I)Z
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
utilMDE.ArraysMDE:sum([[D)D
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.diff.Node:children()Ljava.util.Iterator;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.Quant:setEqual([I[I)Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.ValueTuple:isMissingNonsensical(I)Z
utilMDE.LimitedSizeIntSet:add(I)V
utilMDE.ArraysMDE:sorted([I)Z
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.ProglangType:isIntegral()Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaCharStream:getEndColumn()I
daikon.PptSlice0:initInvariantsSeen()V
utilMDE.ArraysMDE:sum([D)D
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D | OPERATOR | 36891 | != -> ==
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.inv.Invariant:prob_and(DDD)D
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
utilMDE.FuzzyFloat:isSubset([D[D)Z
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
utilMDE.ArraysMDE:indexOf([II)I
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.diff.Node:Node()V
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.unary.UpperBoundCore:computeProbability()D
jtb.JavaParserTokenManager:jjStopAtPos(II)I
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.Quant:eltwiseGT([I)Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.ValueTuple:isMissingFlow(I)Z
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([I)Z
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.diff.RootNode:RootNode()V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
utilMDE.WeakHasherMap:processQueue()V
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;)Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.ModBitTracker:num_vars()I
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.Quant:lexGT([I[I)Z
jtb.JavaCharStream:ReadByte()C
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.Quant:subsetOf([J[J)Z
daikon.Quant:memberOf(S[S)Z
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.Quant:eltsEqualIndex([I)Z
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.Quant:eq(DD)Z
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.Quant:subsetOf([B[I)Z
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.Quant:memberOf(J[J)Z
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.inv.Invariant:getConfidence()D
daikon.diff.InvMap:InvMap()V
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.Quant:sameLength([I[I)Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
jtb.JavaCharStream:getBeginColumn()I
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
utilMDE.Intern:numIntArrays()I
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String; | ASSIGN | 123126 | = null
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:isWorthPrinting()Z
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.ModBitTracker:split(I)I
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.Quant:eltsEqual([II)Z
utilMDE.Intern:internSubsequence([III)[I
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.VarInfo:name()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;)V
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant; | ASSIGN | 41066 | = null
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.PptSlice1:num_samples()I
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
utilMDE.UtilMDE:lineNumberFileReader(Ljava.io.File;)Ljava.io.LineNumberReader;
utilMDE.MathMDE:negate(I)I
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.Quant:eltsGteIndex([I)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.Quant:eltsLTE([II)Z
daikon.Quant:eltsLT([II)Z
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken; | ASSIGN | 215280 | = null
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:gt(II)Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:concat([I[I)[I
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:intern([I)[I
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.Quant:eltwiseEqual([I)Z
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.Intern:intern([J)[J
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.PptSlice2:arity()I
daikon.ProglangType:isScalar()Z
daikon.inv.Invariant:prob_or(DD)D
daikon.Quant:eltsGT([II)Z
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.inv.Invariant:logOn()Z
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.ModBitTracker:ModBitTracker(I)V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltwiseNotEqual([I)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.Quant:lexEqual([I[I)Z
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.VarInfoName:hashCode()I
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
utilMDE.ArraysMDE:min_max([I)[I
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.Quant:pairwiseLTE([I[I)Z
utilMDE.OrderedPairIterator:setnext2()V
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.ProglangType:baseIsIntegral()Z
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
utilMDE.ArraysMDE:indexOf([ZZ)I
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.Quant:subsetOf([F[F)Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Invariant:justified()Z
daikon.Quant:pairwiseLT([I[I)Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.Quant:memberOf(D[F)Z
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.Quant:lexNotEqual([I[I)Z
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.Quant:lexLT([I[I)Z
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.diff.DetailedStatisticsVisitor:freq(II)D
utilMDE.ArraysMDE:subarray([III)[I
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:memberOf(F[D)Z
daikon.ValueTuple:isMissing(I)Z
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.Quant:subsetOf([F[D)Z
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.FuzzyFloat:gt(DD)Z
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:sum([[I)I
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.Quant:eltsGtIndex([I)Z
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:subarray([JII)[J
utilMDE.MathMDE:bitwiseComplement(I)I
utilMDE.Intern:intern([D)[D
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.ValueTuple:size()I
utilMDE.FuzzyFloat:ne(DD)Z
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
utilMDE.MathMDE:gcd_differences([I)I
daikon.PptSlice1:arity()I
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.Quant:eq(JJ)Z
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.Quant:subsetOf([D[F)Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.ProglangType:dimensions()I
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.Debug:logOn()Z
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.inv.ValueSet:ValueSet(I)V
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.test.InvariantFormatTester:execute()Z
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eltwiseLTE([I)Z
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.VarInfoName:name()Ljava.lang.String;
daikon.ModBitTracker:num_samples()I
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:lte(II)Z
utilMDE.MathMDE:gcd(II)I
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:FuzzyFloat()V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.inv.Invariants:Invariants()V
utilMDE.ArraysMDE:max([I)I
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
daikon.PptSlice0:arity()I
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.VarInfoName:isLiteralConstant()Z
jtb.JavaCharStream:backup(I)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.PptName:isCombinedExitPoint()Z
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.VarInfoName.NodeFinder:inPre()Z
utilMDE.FuzzyFloat:gte(DD)Z
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.Token:newToken(I)Ljtb.Token;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.Assert:assertTrue(Z)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.Quant:eltsGTE([II)Z
daikon.inv.unary.LowerBoundCore:computeProbability()D
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Debug:logDetail()Z
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.Quant:slice([III)[I
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfo:relate_var()V
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.inv.Invariant:prob_and(DD)D
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
jtb.JavaCharStream:BeginToken()C
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.ProglangType:isArray()Z
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:missing_numbers([I)[I
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
utilMDE.MathMDE:gcd(JJ)J
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.Quant:pairwiseEqual([I[I)Z
utilMDE.ArraysMDE:fn_identity(I)[I
utilMDE.MathMDE:mod_positive(II)I
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
utilMDE.MathMDE:pow(II)I
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
utilMDE.FuzzyFloat:lt(DD)Z
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaCharStream:UpdateLineColumn(C)V
jtb.JavaParser:jj_ntk()I
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:size()I
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
utilMDE.MathMDE:pow_fast(II)I
utilMDE.ArraysMDE:min([I)I
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:concat([I[I)[I
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.Quant:gte(II)Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.ModBitTracker:num_sets()I
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
utilMDE.ArraysMDE:element_range([I)I
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Quant:eq(II)Z
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
utilMDE.LimitedSizeIntSet:size()I
daikon.PptName:isEnterPoint()Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern:internSubsequence([JII)[J
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.Quant:lt(II)Z
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.Quant:eltsLteIndex([I)Z
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
726 2 88 2 795 2 295 2 845 2 471 2 919 4 819 2 291 2 
264 2 394 2 593 6 147 6 909 2 901 2 216 2 634 2 36 2 288 6 52 2 
557 6 204 6 219 4 256 2 648 2 792 4 127 6 726 2 148 2 795 2 412 2 876 6 534 2 
75 2 476 8 660 10 661 2 630 4 482 4 274 8 726 6 583 10 487 2 392 8 922 2 253 16 334 8 61 10 335 2 561 16 616 2 309 28 371 10 528 6 709 2 820 4 742 10 533 6 795 6 624 12 152 26 380 16 934 4 
252 6 361 4 
54 2 
348 2 296 2 118 2 726 4 886 2 195 2 137 2 360 2 56 2 489 2 613 2 305 2 200 4 366 2 616 2 496 2 741 2 144 2 849 2 795 4 853 2 444 2 573 4 689 2 157 2 384 2 751 2 752 2 321 4 323 2 915 2 518 4 279 2 808 2 706 2 819 2 405 2 342 2 651 2 767 2 598 2 931 2 932 2 599 2 
244 4 75 2 270 2 660 6 800 6 663 4 125 4 274 6 726 4 583 15 93 6 227 2 228 2 554 8 392 19 461 5 253 32 61 15 369 6 561 32 205 4 231 2 371 15 309 52 528 4 501 4 820 2 742 15 622 3 533 4 650 2 795 4 152 47 624 22 443 6 19 4 380 32 315 6 687 4 
808 2 37 2 55 2 
33 22 419 2 232 2 271 2 862 2 649 2 300 2 44 2 669 10 314 2 857 2 931 2 825 2 784 2 
293 2 119 2 660 4 188 2 879 2 881 2 583 2 389 2 392 2 464 2 253 2 61 2 561 2 371 2 309 6 528 2 820 2 742 2 679 2 624 2 152 4 380 2 263 2 
253 8 61 4 561 8 800 6 309 16 371 4 789 2 482 2 742 4 583 4 903 2 624 4 152 12 19 4 380 8 687 4 315 6 
653 2 573 4 575 2 347 10 154 4 858 2 509 2 662 2 723 10 31 2 754 4 833 4 275 4 885 2 584 4 915 4 888 4 866 62 548 2 194 2 808 8 427 4 55 6 430 2 815 2 844 2 203 2 642 2 674 4 37 2 142 2 438 2 874 4 850 14 175 4 209 4 149 2 598 2 47 2 212 2 
320 2 776 2 249 2 54 2 35 2 64 2 500 2 794 2 290 2 381 2 
827 2 828 24 716 2 349 1 717 12 113 1 115 3 605 2 721 2 477 2 122 2 479 2 124 2 4 2 3 1 724 1 726 34 728 1 5 1 729 3 839 2 609 2 8 1 733 2 841 16 843 2 491 12 845 2 493 2 12 6 740 4 847 2 257 2 143 3 743 8 145 2 259 2 260 4 18 2 377 1 855 2 503 2 506 2 859 2 269 2 861 2 158 2 510 2 387 3 632 24 161 2 637 2 390 2 167 2 523 16 169 2 170 2 395 1 396 2 759 2 761 3 644 2 171 1 529 2 531 2 174 2 875 2 410 4 407 2 411 2 43 8 177 2 48 2 768 1 414 2 877 3 415 4 416 2 535 2 536 2 537 2 185 2 659 2 51 6 420 1 880 2 191 2 190 2 192 5 780 1 301 16 552 2 302 2 304 2 895 6 306 2 62 16 434 3 677 2 791 3 207 8 67 2 900 2 568 4 795 32 210 1 907 2 908 2 316 6 215 4 445 2 74 2 910 2 692 2 319 3 448 3 78 2 449 4 81 2 694 2 453 2 697 2 579 1 912 2 803 3 324 2 580 2 328 2 916 2 809 2 92 2 699 1 812 2 701 2 921 2 235 2 336 2 708 2 238 2 710 2 101 2 469 32 595 32 822 2 105 3 240 2 241 4 713 2 108 1 
726 2 620 2 
726 4 829 2 312 2 
538 2 
383 18 475 2 693 2 245 2 719 2 28 2 29 2 421 2 801 2 831 2 30 2 248 2 85 2 834 2 517 2 164 2 165 2 459 2 358 2 782 2 303 2 139 2 524 2 870 18 788 2 141 18 254 2 871 2 255 2 645 2 39 2 99 2 439 2 467 2 466 2 764 2 341 2 854 2 766 2 150 2 748 2 796 2 
725 1 455 2 917 2 385 2 
134 2 917 2 
33 6 198 2 614 2 397 4 760 2 603 2 398 2 431 2 189 2 422 4 678 2 680 2 425 2 225 2 250 2 638 2 610 2 641 2 
455 2 577 2 
526 2 808 2 344 2 890 2 
172 2 911 2 526 2 808 2 344 2 890 2 
808 2 917 2 166 2 344 2 153 2 630 2 
58 2 360 2 
808 2 823 2 344 2 630 2 
539 2 722 2 
929 2 817 2 
516 2 902 2 
515 2 521 2 
626 2 929 2 521 2 
929 2 521 2 109 2 
929 2 521 2 382 2 
929 2 267 2 521 2 
690 2 155 2 779 6 802 6 808 2 790 2 176 2 344 2 
197 2 715 2 
911 2 14 2 808 2 917 2 166 2 344 2 630 2 
292 2 917 2 166 2 
917 2 166 2 247 2 
197 2 455 2 107 2 
917 2 166 2 
197 2 486 2 
218 2 917 2 
197 2 455 2 848 2 
902 2 455 2 607 2 
455 2 592 2 521 2 
455 2 722 2 179 2 
929 2 455 2 628 2 
197 2 530 2 
555 2 917 2 
902 2 26 2 
521 2 714 2 
343 2 722 2 
929 2 98 2 
197 2 408 2 
929 2 511 2 
655 2 722 2 
521 2 933 2 
160 2 902 2 
197 2 455 2 563 2 848 2 
197 2 455 2 563 2 619 2 848 2 
197 2 455 2 277 2 
197 2 455 2 97 2 
117 2 502 2 456 2 242 2 
531 2 
827 2 717 8 121 2 724 2 726 26 728 4 839 1 135 2 609 1 251 2 843 2 491 8 845 2 12 2 740 4 260 2 506 2 859 2 510 2 861 2 161 2 868 2 32 2 169 2 396 2 759 2 529 2 410 2 407 2 411 2 177 2 43 2 48 2 415 4 181 2 535 2 656 2 772 2 537 6 185 2 186 2 51 6 190 2 193 2 665 2 301 6 552 2 304 2 895 5 306 2 675 2 677 2 568 4 795 26 316 2 908 2 215 4 73 4 445 2 910 2 692 2 78 2 449 2 81 2 694 2 695 2 452 4 697 2 912 2 322 2 699 2 95 2 814 2 235 2 336 4 469 4 595 6 822 2 
827 2 717 8 121 2 4 2 724 2 726 26 728 2 839 2 135 2 609 2 251 2 843 2 491 8 845 2 12 2 740 4 260 2 506 2 859 2 510 2 861 2 161 2 868 2 32 2 169 2 525 2 396 2 759 2 529 2 41 2 410 2 407 2 411 2 177 2 43 2 48 2 415 4 654 2 535 2 656 2 537 6 185 2 186 2 51 6 190 2 193 2 301 6 552 2 304 2 895 6 306 2 675 2 677 2 568 4 795 26 316 2 908 2 215 4 73 4 445 2 910 2 692 2 78 2 449 2 81 2 694 2 695 2 452 4 697 2 912 2 322 2 699 2 95 2 814 2 235 2 336 4 469 4 595 6 822 2 
629 2 
676 2 66 2 
415 2 49 2 535 2 184 2 773 8 774 2 51 4 778 4 123 2 882 2 52 4 544 2 726 12 130 8 424 2 840 2 485 2 551 10 552 2 362 4 892 2 893 2 898 2 370 2 65 2 677 2 739 2 740 2 311 2 147 6 441 2 795 6 572 2 70 2 798 4 909 4 749 2 216 2 220 2 510 2 631 2 87 2 161 2 804 2 163 2 330 4 920 2 332 2 394 2 759 2 230 2 234 2 38 4 529 2 285 2 928 2 593 6 597 2 289 4 288 6 
415 2 49 2 535 2 184 2 773 8 51 4 778 4 123 2 882 2 52 4 544 2 726 12 130 8 424 2 840 2 485 2 551 10 552 2 362 4 892 2 893 2 898 2 370 2 65 2 677 2 740 2 739 2 311 2 441 2 147 6 795 6 572 2 261 2 70 2 625 4 798 4 909 4 749 2 216 2 220 2 510 2 631 2 87 2 161 2 804 2 163 2 330 4 332 2 394 2 759 2 230 2 36 2 234 2 38 4 529 2 285 2 928 2 593 8 597 2 289 4 288 8 180 2 
362 4 909 2 184 2 898 2 234 2 370 2 65 2 739 2 123 2 52 2 928 2 593 2 87 2 441 2 147 2 289 2 330 4 485 2 
415 2 49 2 535 2 184 2 773 4 774 2 51 4 778 4 123 2 882 2 52 4 544 2 726 12 130 4 424 2 840 2 485 2 551 6 552 2 362 4 892 2 893 2 898 2 370 2 65 2 677 2 739 2 740 2 311 2 147 4 441 2 795 6 572 2 70 2 798 4 909 4 749 2 220 2 510 2 631 2 87 2 161 2 804 2 163 2 330 4 920 2 332 2 394 2 759 2 230 2 36 2 234 2 38 4 529 2 285 2 928 2 593 6 597 2 289 4 288 6 
415 2 49 2 535 2 184 2 773 4 774 2 51 4 778 4 123 2 882 2 52 4 544 2 726 12 130 4 424 2 840 2 485 2 551 6 552 2 362 4 892 2 893 2 898 2 370 2 65 2 677 2 739 2 740 2 311 2 147 6 441 2 795 6 572 2 70 2 798 4 264 2 909 4 749 2 220 2 510 2 631 2 87 2 161 2 804 2 163 2 330 4 920 2 332 2 394 2 759 2 230 2 234 2 38 4 529 2 285 2 928 2 593 4 597 2 289 4 288 6 
415 2 49 2 535 2 184 2 773 8 774 2 51 4 778 4 123 2 882 2 52 4 544 2 726 12 130 4 424 2 840 2 485 2 551 6 552 2 362 4 892 2 893 2 898 2 370 2 65 2 677 2 739 2 740 2 311 2 147 6 441 2 795 6 572 2 70 2 798 4 909 4 749 2 216 2 220 2 510 2 631 2 87 2 161 2 804 2 163 2 330 4 920 2 332 2 394 2 759 2 230 2 234 2 38 4 529 2 285 2 928 2 593 6 597 2 289 4 288 6 
415 2 49 2 535 2 184 2 773 8 774 2 51 4 778 4 123 2 882 2 52 4 544 2 726 12 130 8 424 2 840 2 485 2 551 10 552 2 362 4 892 2 893 2 898 2 370 2 65 2 677 2 740 2 739 2 311 2 147 8 441 2 795 6 572 2 70 2 798 4 264 2 909 4 749 2 216 2 220 2 510 2 631 2 87 2 161 2 804 2 163 2 330 4 920 2 332 2 394 2 759 2 230 2 234 2 38 4 529 2 285 2 928 2 593 6 597 2 289 4 288 8 
415 2 49 2 535 2 184 2 773 8 774 2 51 4 778 4 123 2 882 2 52 4 544 2 726 12 130 8 424 2 840 2 485 2 551 10 552 2 362 4 892 2 893 2 898 2 370 2 65 2 677 2 739 2 740 2 311 2 147 6 441 2 795 6 572 2 70 2 798 4 909 4 749 2 216 2 220 2 510 2 631 2 87 2 161 2 804 2 163 2 330 4 920 2 332 2 394 2 759 2 230 2 234 2 38 4 529 2 285 2 928 2 593 6 597 2 289 4 288 6 
717 4 726 46 727 1 485 2 488 2 251 2 734 2 737 1 738 1 491 4 12 2 740 4 739 2 498 6 744 6 260 2 504 6 507 2 264 4 22 2 749 2 510 2 272 6 280 1 519 2 759 2 38 4 529 2 763 2 285 2 43 2 288 12 289 4 48 2 49 2 535 2 773 2 537 6 538 6 51 6 778 8 52 4 544 2 781 2 301 6 550 10 551 2 552 2 558 2 65 2 311 2 568 4 795 24 68 2 570 6 572 2 69 1 70 2 72 1 798 6 316 2 73 4 799 2 78 2 79 2 81 2 84 6 87 2 804 4 330 4 589 7 331 1 332 2 814 2 96 2 818 6 100 2 339 2 593 4 102 4 595 8 596 2 597 2 821 2 106 6 827 2 829 6 121 2 120 2 123 2 353 2 606 4 126 2 839 2 840 2 609 2 362 4 843 2 845 2 370 2 618 2 372 6 620 6 621 1 375 6 376 6 147 8 859 2 156 2 631 2 161 2 162 2 163 2 636 8 169 2 394 4 396 2 643 2 403 2 872 1 410 2 407 2 415 4 184 2 185 2 882 2 190 2 667 2 424 2 892 2 893 2 895 6 896 7 898 2 675 4 677 2 440 6 441 2 208 6 904 2 685 2 215 4 910 2 909 4 692 12 449 2 220 4 697 2 912 2 920 2 700 2 230 2 235 2 234 2 465 2 928 2 469 2 930 2 239 2 473 2 
111 2 827 2 717 8 829 6 120 2 121 2 123 2 606 4 353 2 126 2 726 48 839 2 840 2 485 2 609 2 731 2 488 2 362 4 734 2 251 2 843 2 491 8 845 2 370 2 12 2 618 2 739 2 740 4 372 6 498 6 620 6 376 6 375 6 744 6 147 8 260 4 504 6 507 2 22 2 749 2 859 2 156 2 510 2 272 6 631 2 161 2 162 2 163 2 519 2 636 8 169 2 394 4 396 2 759 2 38 4 643 2 403 2 763 2 529 2 285 2 407 2 410 4 43 2 289 4 288 12 48 2 415 4 49 2 535 2 184 2 773 6 538 6 185 2 537 6 51 6 778 8 882 2 52 4 190 2 544 2 667 2 424 2 781 2 301 6 550 10 551 2 552 2 893 2 892 2 895 6 898 2 558 2 675 4 65 2 677 2 311 2 440 6 208 6 441 2 568 4 68 2 795 26 570 6 572 2 904 2 70 2 685 2 798 6 316 2 215 4 73 4 909 4 910 2 692 12 216 4 799 2 78 2 79 2 449 4 81 2 220 4 697 2 84 6 912 2 87 2 804 4 330 4 920 2 332 2 700 2 814 2 96 2 230 2 234 2 235 2 336 2 818 6 100 2 465 2 339 2 928 2 593 8 469 2 930 2 239 2 102 4 595 8 596 2 821 2 597 2 106 6 473 2 
111 2 827 2 717 8 829 6 120 2 121 2 123 2 606 4 353 2 126 2 726 48 130 4 839 2 840 2 485 2 609 2 731 2 488 2 362 4 734 2 251 2 843 2 491 8 845 2 370 2 12 2 618 2 739 2 740 4 372 6 498 6 620 6 376 6 375 6 744 6 147 8 260 4 504 6 507 2 22 2 749 2 859 2 156 2 510 2 272 6 631 2 161 2 162 2 163 2 519 2 636 8 169 2 394 4 396 2 759 2 38 4 643 2 403 2 763 2 529 2 285 2 410 4 407 2 43 2 289 4 288 12 48 2 415 4 49 2 535 2 184 2 773 6 538 6 185 2 537 6 51 6 778 8 882 2 52 4 190 2 544 2 667 2 424 2 781 2 301 6 550 10 551 6 552 2 893 2 892 2 895 6 898 2 558 2 675 4 65 2 677 2 311 2 440 6 208 6 441 2 568 4 68 2 795 26 570 6 572 2 904 2 70 2 685 2 798 6 316 2 215 4 73 4 909 4 910 2 692 12 216 4 799 2 78 2 79 2 449 4 81 2 220 4 697 2 84 6 912 2 87 2 804 4 330 4 920 2 332 2 700 2 814 2 96 2 230 2 234 2 235 2 336 2 818 6 100 2 465 2 339 2 928 2 593 8 469 2 930 2 239 2 102 4 595 8 596 2 821 2 597 2 106 6 473 2 
717 10 726 52 485 2 731 2 488 2 251 2 9 6 734 2 491 10 12 4 740 4 739 2 498 6 744 6 260 4 504 12 507 2 264 2 22 2 749 2 510 2 272 6 519 2 755 2 759 2 36 2 38 4 529 2 763 2 285 2 43 4 288 16 289 4 48 2 769 2 49 2 535 2 773 6 537 8 538 12 51 6 778 8 52 4 544 2 781 2 301 8 550 8 551 6 552 2 59 6 558 2 65 2 311 2 310 2 567 6 568 4 795 24 68 2 570 6 572 2 70 2 798 6 316 4 73 6 76 2 799 2 78 2 79 2 81 2 84 6 87 2 581 6 804 4 330 4 332 2 814 2 96 2 336 2 818 6 100 2 339 2 593 10 340 6 102 4 595 12 596 2 597 2 821 2 106 6 111 2 827 2 829 12 351 6 121 4 120 2 123 2 353 2 606 4 130 4 835 6 839 2 840 2 609 2 362 4 843 2 845 2 370 2 618 2 372 12 620 12 375 6 376 6 147 10 859 2 156 2 386 2 631 2 161 2 162 2 163 2 636 8 391 2 169 2 394 4 396 2 643 2 403 2 407 2 410 4 413 2 415 4 184 2 185 2 882 2 190 2 667 2 424 2 670 6 892 2 893 2 895 6 898 2 675 4 677 2 440 6 441 2 208 12 904 2 685 2 214 2 215 4 910 2 909 4 216 4 692 10 449 4 220 4 697 2 912 2 226 6 920 2 700 2 230 2 235 2 234 2 465 2 928 2 469 4 930 2 239 2 473 2 
909 4 216 2 184 2 749 2 773 6 778 2 52 4 631 2 726 4 544 2 130 4 87 2 163 2 330 2 485 2 551 4 920 2 362 2 394 2 893 2 892 2 230 2 38 2 234 2 370 2 739 2 311 2 285 2 593 6 441 2 147 6 572 2 597 2 288 4 798 2 
827 2 126 2 726 28 839 2 485 2 609 2 362 2 251 2 736 2 843 2 845 2 370 2 12 3 739 2 740 4 147 6 379 3 265 2 749 2 859 2 510 2 158 2 631 2 161 2 163 2 169 2 394 2 759 2 396 2 38 2 529 2 531 2 285 2 407 2 288 4 48 2 415 4 535 2 184 2 773 6 537 6 185 2 51 6 778 2 52 4 190 2 544 2 424 2 301 6 550 2 551 2 552 2 892 2 893 2 895 6 675 2 308 2 677 2 311 2 67 2 568 4 441 2 795 24 572 2 798 2 316 3 215 4 73 4 909 4 910 2 216 2 692 4 78 2 697 2 912 2 87 2 328 2 330 2 920 2 814 2 230 2 235 2 234 2 237 2 926 2 593 6 469 3 595 8 597 2 
749 2 572 2 426 2 
749 2 572 2 426 2 
0 2 602 2 827 2 717 4 606 2 128 2 726 24 130 4 728 2 839 2 609 2 362 2 251 2 491 4 845 2 370 2 740 4 739 2 147 12 260 4 507 2 264 4 749 4 859 2 27 2 510 2 512 2 514 2 276 2 161 2 169 2 394 4 396 2 759 2 36 4 38 2 529 2 406 2 410 4 407 2 289 4 288 16 48 2 415 4 182 2 535 2 773 6 537 2 185 2 51 6 298 2 778 4 882 2 52 4 190 2 193 4 426 2 301 2 550 2 551 6 552 2 895 6 556 2 898 2 897 2 559 2 675 6 677 2 440 2 568 4 441 4 795 16 572 6 70 2 798 4 688 2 215 4 910 2 909 4 446 4 692 4 216 4 78 2 79 2 449 4 81 4 220 4 82 4 697 2 912 2 804 2 330 2 224 2 332 2 814 2 230 2 235 2 337 2 465 2 928 2 593 12 469 2 102 2 595 2 597 2 104 2 
0 2 182 2 759 2 692 2 897 2 66 2 562 2 123 2 100 2 606 2 440 2 726 4 239 2 795 2 652 2 547 2 550 2 
0 2 826 2 602 2 827 2 346 2 717 4 246 2 128 2 726 24 130 4 839 2 609 2 362 2 251 2 491 4 845 2 370 2 740 4 739 2 147 12 260 4 507 2 264 4 749 4 859 2 27 2 510 2 512 2 514 2 161 2 169 2 394 4 396 2 759 2 36 4 38 2 529 2 410 4 407 2 289 4 288 16 48 2 415 4 49 2 182 2 535 2 773 6 537 2 185 2 51 6 778 4 882 2 52 4 190 2 193 4 426 2 301 2 551 6 552 2 895 6 556 4 898 2 897 2 559 2 433 2 675 6 677 2 440 2 568 4 441 4 795 16 572 6 70 2 798 4 688 2 215 4 910 2 909 4 446 4 692 2 216 4 78 2 217 2 79 2 449 4 81 4 220 4 82 4 697 2 912 2 804 4 330 2 332 2 814 2 230 2 235 2 337 2 465 2 928 2 593 12 469 4 102 2 595 2 597 2 104 2 
0 2 602 2 827 2 717 4 606 2 128 2 726 24 130 4 728 1 839 2 609 2 362 2 251 2 491 4 845 2 370 2 740 4 739 2 147 12 260 4 507 2 264 4 749 4 859 2 27 2 510 2 512 2 514 2 161 2 169 2 394 4 396 2 759 2 36 4 38 2 529 2 40 2 532 2 410 4 407 2 289 4 288 16 48 2 415 4 49 2 182 2 535 2 773 6 537 2 185 2 51 6 778 4 882 2 52 4 190 2 193 4 426 2 301 2 550 2 551 6 552 2 895 6 556 2 898 2 897 2 559 2 675 6 677 2 440 2 568 4 441 4 795 16 572 6 211 2 70 2 798 4 688 2 215 4 910 2 909 4 446 4 692 4 216 4 78 2 79 2 449 4 81 4 220 4 82 4 83 2 697 2 912 2 804 4 330 2 810 2 332 2 814 2 230 2 235 2 337 2 465 2 928 2 593 12 469 2 102 2 595 2 597 2 104 2 
415 4 827 2 535 2 185 2 537 2 51 6 190 2 726 20 545 2 839 2 301 2 609 2 552 2 429 2 895 6 845 2 675 2 495 2 677 2 740 4 568 4 795 16 851 2 215 4 317 2 910 2 691 2 692 2 24 2 859 2 78 2 860 2 510 2 697 2 912 2 223 2 161 2 169 2 94 2 814 2 757 2 396 2 759 2 282 2 705 2 235 2 529 2 407 2 595 2 45 2 48 2 
316 3 73 2 627 2 658 2 537 2 121 6 696 2 451 2 726 2 326 3 666 2 586 2 301 2 91 2 843 2 492 2 432 2 615 2 923 4 12 3 338 1 469 3 146 2 595 2 795 2 
316 2 73 2 843 2 658 2 627 2 432 2 492 2 537 2 923 4 615 2 121 6 12 2 451 2 696 2 726 2 469 2 146 2 326 2 666 2 795 2 595 2 586 2 301 2 91 2 
316 2 73 2 843 2 658 2 627 2 432 2 492 2 537 2 923 4 615 2 121 6 12 2 451 2 696 2 726 2 469 2 146 2 326 2 666 2 795 2 595 2 586 2 301 2 91 2 
726 10 423 2 786 2 611 2 841 2 843 2 60 2 253 2 62 2 61 2 561 2 309 6 371 2 497 4 435 2 742 2 795 4 682 4 152 4 380 2 316 3 21 4 753 2 578 3 221 2 274 4 222 2 86 2 583 2 586 2 590 3 591 3 703 6 399 4 646 2 925 4 469 3 533 2 595 2 824 2 
21 4 316 2 75 2 221 2 578 2 753 2 274 4 726 10 222 2 86 2 423 2 583 2 586 2 590 2 392 2 591 2 611 2 786 2 841 2 703 6 60 2 843 2 399 4 253 2 61 2 62 2 561 2 497 4 371 2 309 4 435 2 925 4 646 2 742 2 469 2 533 2 682 4 595 2 795 4 624 2 152 4 824 2 380 2 
21 4 316 2 75 2 221 2 578 2 753 2 274 4 726 10 222 2 86 2 423 2 583 2 586 2 590 2 392 2 591 2 611 2 786 2 841 2 703 6 60 2 843 2 399 4 253 2 61 2 62 2 561 2 497 4 371 2 309 4 435 2 925 4 646 2 742 2 469 2 533 2 682 4 595 2 795 4 624 2 152 4 824 2 380 2 
21 4 316 2 75 2 221 2 578 2 753 2 274 4 726 10 222 2 86 2 423 2 583 2 586 2 590 2 392 2 591 2 611 2 786 2 841 2 703 6 60 2 843 2 399 4 253 2 61 2 62 2 561 2 497 4 371 2 309 4 435 2 925 4 646 2 742 2 469 2 533 2 682 4 595 2 795 4 624 2 152 4 824 2 380 2 
21 4 316 2 75 4 221 2 578 2 753 2 274 4 726 10 222 2 86 2 423 2 583 2 586 2 590 2 392 4 591 2 611 2 786 2 841 2 703 6 60 2 843 2 399 4 253 2 61 2 62 2 561 2 497 4 371 2 309 4 435 2 925 4 646 2 742 2 469 2 533 2 682 4 595 2 795 4 624 4 152 4 824 2 380 2 
600 2 462 2 454 2 746 2 867 2 32 2 110 2 
281 2 672 2 454 2 202 2 846 2 307 2 
294 2 858 1 604 2 718 2 480 2 481 2 726 10 884 1 129 2 885 1 668 2 357 2 329 2 460 2 639 2 552 2 140 2 333 2 560 2 374 1 566 1 468 2 208 2 795 8 378 2 906 2 
75 2 800 4 863 2 513 2 274 4 726 6 583 6 918 2 522 2 56 2 554 2 392 2 461 4 253 6 61 6 205 2 561 6 496 2 309 16 371 6 742 6 533 2 795 6 681 2 852 2 152 12 624 4 380 6 474 2 687 2 
363 2 771 2 399 2 2 2 352 2 497 2 402 2 582 2 682 2 887 2 712 2 6 2 458 2 
363 2 771 4 399 2 77 2 2 2 352 2 497 2 402 2 726 1 795 1 582 2 682 2 16 1 887 2 712 6 608 2 6 2 458 2 
363 2 771 4 77 2 399 2 2 4 352 2 497 2 402 2 582 2 682 2 887 4 712 6 608 2 6 4 458 2 
363 2 771 4 77 8 399 2 2 8 352 2 497 2 402 2 726 1 795 1 582 2 682 2 16 1 887 8 712 10 608 6 6 8 458 2 
1 2 112 6 243 4 717 28 350 4 116 10 720 4 830 6 478 26 726 150 354 4 131 6 355 12 728 4 484 11 356 42 836 2 837 24 839 58 609 58 136 4 359 2 732 8 364 2 490 24 365 4 735 124 367 6 368 17 10 16 11 2 617 24 499 4 258 4 17 8 856 36 262 2 505 6 23 4 266 6 268 6 750 24 159 12 273 4 864 2 865 2 278 50 635 6 640 22 168 8 393 6 758 4 283 10 762 4 527 4 284 6 647 4 173 6 873 2 42 2 178 6 46 4 183 2 770 2 417 92 775 4 297 26 540 8 777 6 542 6 664 2 883 42 543 2 53 6 546 8 428 18 549 6 783 6 553 1 891 16 673 16 895 248 199 8 894 84 201 2 206 4 436 18 437 4 565 90 568 112 569 90 795 134 793 6 442 8 797 4 905 4 213 6 215 88 910 8 576 34 447 10 80 8 450 10 912 14 325 2 805 6 807 2 587 24 89 6 588 10 698 10 457 4 90 6 811 4 702 10 813 2 704 8 816 16 924 8 233 4 235 14 236 24 707 6 103 4 711 10 470 2 472 4 345 2 
50 2 243 2 878 2 657 2 717 38 418 2 116 2 187 2 541 2 483 2 726 46 53 2 299 2 728 2 132 2 133 4 889 2 838 2 839 2 428 2 609 2 138 2 7 2 730 2 671 2 57 4 891 4 364 2 490 2 787 2 673 4 895 44 199 2 842 2 735 6 368 2 617 2 899 2 568 20 15 2 795 44 571 2 745 2 747 2 17 2 442 2 683 2 856 2 262 2 151 2 505 2 684 2 215 20 910 2 266 2 447 2 318 4 450 2 912 2 388 2 325 2 913 4 633 2 327 2 585 2 807 2 89 2 588 2 520 2 698 2 90 2 168 2 702 2 869 6 756 2 463 2 229 2 704 6 816 4 283 2 762 2 235 2 401 2 236 2 707 2 927 2 873 2 286 2 409 2 711 2 42 2 178 4 
1 2 601 4 112 4 717 14 830 4 832 2 726 78 354 4 131 4 356 8 836 2 838 2 839 28 609 30 136 2 138 10 612 16 842 10 735 24 367 4 368 10 10 8 13 8 258 4 499 4 623 8 17 2 856 6 262 2 505 4 20 2 23 4 266 4 268 4 750 8 159 14 864 2 633 2 278 8 635 4 168 2 393 4 34 4 283 4 400 2 401 2 527 4 404 4 284 4 873 2 765 4 42 2 287 32 178 2 417 24 878 10 775 4 777 4 542 4 883 16 53 4 546 4 428 10 783 4 196 8 891 10 673 10 895 104 199 2 894 24 63 2 206 4 564 8 568 44 795 70 793 4 71 4 797 4 905 4 686 2 213 4 215 36 910 2 574 4 576 30 447 4 80 4 912 6 325 2 914 16 806 2 805 4 807 2 89 4 588 4 457 4 90 4 813 2 702 4 704 6 816 10 235 6 707 4 594 4 103 4 711 6 472 4 
770 2 183 2 717 14 540 2 664 2 726 28 53 4 728 2 484 2 839 12 609 12 428 2 136 2 359 2 730 2 891 6 364 2 673 6 199 2 895 40 735 8 368 2 10 6 437 2 258 2 568 14 795 26 17 2 262 2 856 2 505 4 215 14 910 2 266 4 447 2 576 6 80 4 912 2 325 2 633 2 865 2 807 2 89 4 588 2 457 2 90 4 640 10 168 2 811 2 702 2 704 4 816 6 283 2 235 2 707 4 873 2 42 2 711 2 178 2 
313 2 
785 1 25 1 508 1 114 1 494 1 373 1 
785 1 25 1 508 1 114 1 494 1 373 1 
785 1 25 1 508 1 114 1 494 1 373 1 
785 1 25 1 508 1 114 1 494 1 373 1 
785 1 25 1 508 1 114 1 494 1 373 1 
785 1 25 1 508 1 114 1 494 1 373 1 
785 1 25 1 508 1 114 1 494 1 373 1 
785 1 25 1 508 1 114 1 494 1 373 1 
785 1 25 1 508 1 114 1 494 1 373 1 
785 1 25 1 508 1 114 1 494 1 373 1 
785 1 25 1 508 1 114 1 494 1 373 1 
785 1 25 1 508 1 114 1 494 1 373 1 
785 1 25 1 508 1 114 1 494 1 373 1 
785 1 25 1 508 1 114 1 494 1 373 1 
785 1 25 1 508 1 114 1 494 1 373 1 
785 1 25 1 508 1 114 1 494 1 373 1 
785 1 25 1 508 1 114 1 494 1 373 1 
785 1 25 1 508 1 114 1 494 1 373 1 
785 1 25 1 508 1 114 1 494 1 373 1 
785 1 25 1 508 1 114 1 494 1 373 1 
785 1 25 1 508 1 114 1 494 1 373 1 
785 1 25 1 508 1 114 1 494 1 373 1 
785 1 25 1 508 1 114 1 494 1 373 1 
785 1 25 1 508 1 114 1 494 1 373 1 
785 1 25 1 508 1 114 1 494 1 373 1 
785 1 25 1 508 1 114 1 494 1 373 1 
785 1 25 1 508 1 114 1 494 1 373 1 
785 1 25 1 508 1 114 1 494 1 373 1 
785 1 25 1 508 1 114 1 494 1 373 1 
785 1 25 1 508 1 114 1 494 1 373 1 
785 1 25 1 508 1 114 1 494 1 373 1 
785 1 25 1 508 1 114 1 494 1 373 1 
785 1 25 1 508 1 114 1 494 1 373 1 
785 1 25 1 508 1 114 1 494 1 373 1 
785 1 25 1 508 1 114 1 494 1 373 1 
785 1 25 1 508 1 114 1 494 1 373 1 
785 1 25 1 508 1 114 1 494 1 373 1 
785 1 25 1 508 1 114 1 494 1 373 1 
785 1 25 1 508 1 114 1 494 1 373 1 
785 1 25 1 508 1 114 1 494 1 373 1 
785 1 25 1 508 1 114 1 494 1 373 1 
785 1 25 1 508 1 114 1 494 1 373 1 
785 1 25 1 508 1 114 1 494 1 373 1 
785 1 25 1 508 1 114 1 494 1 373 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V ERROR utilMDE.Assert$AssertionException (513,844) (513,844) 
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V ERROR java.lang.NullPointerException 
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 169 473 767 697 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 99 190 14 374 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 99 190 14 374 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 99 190 14 374 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 99 190 14 374 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.Quant:pairwiseEqual([I[I)Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.PptSlice2:arity()I
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
utilMDE.MathMDE:missing_numbers([I)[I
daikon.ProglangType:isArray()Z
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.VarInfoName:esc_name()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.Quant:union([I[I)[I
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:subsetOf([B[I)Z
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
utilMDE.WeakIdentityHashMap:indexFor(II)I
utilMDE.ArraysMDE:fn_is_permutation([I)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
utilMDE.ArraysMDE:sum([I)I
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.ValueSet:ValueSet(I)V
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:sameLength([I[I)Z
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltsGtIndex([I)Z
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.ArraysMDE:sum([[D)D
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.ModBitTracker:num_vars()I
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:gte(II)Z
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:intern([J)[J
daikon.inv.unary.scalar.NonZero:is_pointer()Z
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName; | ASSIGN | 63682 | = null
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
jtb.JavaCharStream:UpdateLineColumn(C)V
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:sum([[I)I
utilMDE.ArraysMDE:fn_inverse([II)[I
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
utilMDE.WeakHasherMap:size()I
utilMDE.Intern:internStrings([Ljava.lang.String;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.Quant:eltwiseEqual([I)Z
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.ModBitTracker:num_samples()I
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
jtb.JavaParser:jj_ntk()I
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:jj_3_13()Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.PptName:isEnterPoint()Z
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaCharStream:getBeginLine()I
utilMDE.TestUtilMDE:lsis_test(I)V
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_58()Z
utilMDE.FuzzyFloat:gt(DD)Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:gcd([I)I
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.Node:Node()V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant; | ASSIGN | 41066 | = null
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.inv.Invariant:logOn()Z
daikon.Quant:lexLTE([I[I)Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.Quant:pairwiseGT([I[I)Z
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.Quant:gt(II)Z
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
utilMDE.FuzzyFloat:ne(DD)Z
daikon.Quant:eltwiseLT([I)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.Quant:memberOf(S[S)Z
daikon.VarInfoName:hashCode()I
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.ValueTuple:isMissing(I)Z
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.Quant:subsetOf([F[D)Z
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.inv.Invariant:prob_or(DD)D
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.Quant:pairwiseGTE([I[I)Z
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.ProglangType:baseIsIntegral()Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.Quant:eltwiseLTE([I)Z
daikon.inv.unary.scalar.UpperBound:enabled()Z
utilMDE.FuzzyFloat:lt(DD)Z
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Invariant:prob_is_ge(DD)D
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Invariant:getConfidence()D
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.ProglangType:isIntegral()Z
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:isSubarray([I[II)Z
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.Token:newToken(I)Ljtb.Token;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_57()Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
utilMDE.Options.OptionInfo:argument_required()Z
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.Ppt:Ppt()V
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
jtb.JavaParser:generateParseException()Ljtb.ParseException;
daikon.Quant:memberOf(J[J)Z
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
jtb.JavaCharStream:GetImage()Ljava.lang.String;
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
jtb.JavaParser:jj_2_1(I)Z
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.Quant:concat([I[I)[I
utilMDE.MathMDE:modulus([I)[I
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict([I)[I
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
jtb.JavaParser:jj_3R_49()Z
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:processQueue()V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
utilMDE.ArraysMDE:subarray([III)[I
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3_1()Z
jtb.JavaParser:jj_scan_token(I)Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_56()Z
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.Quant:memberOf(F[D)Z
jtb.JavaParser:jj_3_16()Z
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
utilMDE.ArraysMDE:indexOf([II)I
jtb.JavaParser:jj_3R_54()Z
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.VarInfoName:name()Ljava.lang.String;
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.OrderedPairIterator:setnext2()V
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ProglangType:baseIsScalar()Z
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:setEqual([I[I)Z
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.Invariant:logDetail()Z
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
utilMDE.ArraysMDE:element_range([I)I
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
jtb.JavaCharStream:ReadByte()C
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.VarInfoAux:hashCode()I
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.Quant:lexEqual([I[I)Z
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
jtb.JavaParser:jj_2_5(I)Z
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
jtb.JavaParser:jj_3_15()Z
daikon.Quant:eltsGT([II)Z
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:sorted([I)Z
utilMDE.MathMDE:pow(II)I
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:indexOf([ZZ)I
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
utilMDE.ArraysMDE:fn_is_total([I)Z
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.Quant:eltsNotEqual([II)Z
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ModBitTracker:split(I)I
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.Quant:lt(II)Z
daikon.Quant:pairwiseSquare([I[I)Z
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.ProglangType:isScalar()Z
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.Quant:lexGTE([I[I)Z
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.Quant:subsetOf([D[F)Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.ProglangType:dimensions()I
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.ModBitTracker:num_sets()I
jtb.JavaParser:jj_3_5()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.Quant:subsetOf([F[F)Z
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Invariant:justified()Z
daikon.Quant:eq(II)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
utilMDE.ArraysMDE:subarray([JII)[J
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
utilMDE.MathMDE:gcd(II)I
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.ArraysMDE:sum([D)D
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.Quant:eltsLteIndex([I)Z
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
utilMDE.LimitedSizeIntSet:add(I)V
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.Quant:eq(JJ)Z
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.InvMap:InvMap()V
daikon.PptName:isCombinedExitPoint()Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:isReverse([I[I)Z
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.Quant:eltsEqualIndex([I)Z
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eltsLTE([II)Z
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.Quant:noDups([I)Z
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
jtb.JavaParser:jj_3R_135()Z
daikon.PptSlice1:num_samples()I
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
jtb.JavaParser:jj_3R_52()Z
daikon.Quant:eq(FF)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.Quant:eq(DD)Z
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
jtb.JavaCharStream:getEndColumn()I
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.PptTopLevel:name()Ljava.lang.String;
utilMDE.Intern:internSubsequence([III)[I
utilMDE.ArraysMDE:min_max([I)[I
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptSlice0:arity()I
jtb.JavaParser:jj_2_15(I)Z
jtb.JavaParser:jj_3R_89()Z
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
utilMDE.Intern:intern([I)[I
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration; | CONDITION | 25988 | if (x) -> if (!x)
utilMDE.MathMDE:sign(I)I
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_133()Z
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_2_14(I)Z
daikon.Quant:eltwiseGT([I)Z
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltsGteIndex([I)Z
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Intern:internSubsequence([JII)[J
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:min([I)I
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.Quant:slice([III)[I
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.RootNode:RootNode()V
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.Quant:ne(II)Z
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_53()Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.ValueTuple:size()I
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Quant:memberOf(F[F)Z
daikon.VarInfo:name()Ljava.lang.String;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.Debug:logDetail()Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
jtb.JavaCharStream:FillBuff()V
jtb.JavaCharStream:backup(I)V
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:intersection([I[I)[I
daikon.VarInfoName:repr()Ljava.lang.String;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.ProglangType:isPseudoArray()Z
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
jtb.JavaCharStream:getEndLine()I
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
jtb.JavaParser:jj_2_16(I)Z
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object; | ASSIGN | 20834 | = null
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.Quant:eltsEqual([II)Z
jtb.JavaParser:jj_3R_63()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.PptTopLevel:getInvariants()Ljava.util.List;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.Quant:memberOf(I[I)Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
utilMDE.FuzzyFloat:lte(DD)Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
jtb.JavaParser:jj_3R_48()Z
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.Invariants:Invariants()V
daikon.inv.unary.LowerBoundCore:computeProbability()D
utilMDE.LimitedSizeIntSet:size()I
utilMDE.OrderedPairIterator:hasNext()Z
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
jtb.syntaxtree.NodeToken:trimSpecials()V
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.Quant:lte(II)Z
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.Quant:memberOf(D[F)Z
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.InvariantFormatTester:execute()Z
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.JavaParser:jj_2_13(I)Z
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:eltwiseNotEqual([I)Z
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
utilMDE.ArraysMDE:noDuplicates([I)Z
jtb.JavaParser:jj_3R_51()Z
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.Invariant:prob_and(DD)D
jtb.JavaParser:jj_3R_161()Z
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.Quant:eltsGTE([II)Z
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:setDiff([I[I)[I
daikon.inv.Invariant:format()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.Quant:lexNotEqual([I[I)Z
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.Invariant:prob_and(DDD)D
utilMDE.MathMDE:negate(I)I
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
utilMDE.MathMDE:gcd(JJ)J
jtb.JavaParser:jj_3R_85()Z
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.inv.unary.LowerBoundCore:computeConfidence()D
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.Quant:pairwiseLTE([I[I)Z
jtb.JavaParser:jj_3R_47()Z
jtb.ParseException:ParseException(Ljava.lang.String;)V
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
utilMDE.OrderedPairIterator:setnext1()V
daikon.inv.filter.InvariantFilters:InvariantFilters()V
utilMDE.MathMDE:mod_positive(II)I
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
utilMDE.ArraysMDE:max([I)I
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_50()Z
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.MathMDE:bitwiseComplement(I)I
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:indexOf([DD)I
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3_14()Z
daikon.PptSlice0:initInvariantsSeen()V
utilMDE.FuzzyFloat:gte(DD)Z
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.PptSlice1:arity()I
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.MathMDE:pow_fast(II)I
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:pairwiseDivides([I[I)Z
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
jtb.JavaCharStream:getBeginColumn()I
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:subsetOf([I[I)Z
jtb.JavaParser:jj_3R_55()Z
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.Quant:eltwiseGTE([I)Z
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_69()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_163()Z
daikon.Quant:lexGT([I[I)Z
utilMDE.Assert:assertTrue(Z)V
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
jtb.JavaParser:jj_3R_88()Z
utilMDE.MathMDE:gcd_differences([I)I
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.ParseException:getMessage()Ljava.lang.String;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String; | ASSIGN | 279238 | = null
daikon.VarInfo:new_ppt()V
daikon.ValueTuple:isMissingFlow(I)Z
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
jtb.JavaCharStream:readChar()C
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Quant:subsetOf([S[S)Z
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
jtb.JavaCharStream:BeginToken()C
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Quant:eltsLT([II)Z
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.VarInfo:relate_var()V
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
jtb.JavaParser:Initializer()Ljtb.syntaxtree.Initializer;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.Quant:lexLT([I[I)Z
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:pairwiseLT([I[I)Z
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.Quant:subsetOf([D[D)Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
jtb.JavaParser:jj_3R_162()Z
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.ModBitTracker:ModBitTracker(I)V
jtb.JavaParser:jj_3R_134()Z
daikon.Debug:logOn()Z
utilMDE.Intern:numIntArrays()I
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:subsetOf([J[J)Z
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | CONSTANT | 3683 | 1 -> 0
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.FuzzyFloat:eq(DD)Z
daikon.inv.Invariant:isWorthPrinting()Z
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.Intern:intern([D)[D
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:concat([I[I)[I
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.Quant:eltsLtIndex([I)Z
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.Quant:pairwiseNotEqual([I[I)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
481 2 325 2 680 4 916 2 844 2 140 2 513 2 584 2 30 2 
177 6 778 6 8 2 381 2 610 2 561 2 681 2 348 6 776 2 80 2 616 2 
647 2 251 2 844 2 740 2 519 4 662 6 39 6 435 6 728 2 729 2 230 2 857 2 736 6 513 2 
249 2 323 8 754 4 351 26 191 16 192 4 326 4 454 2 357 12 830 2 168 8 590 16 555 6 938 4 442 2 883 2 112 10 844 6 884 10 743 16 472 10 318 8 717 8 570 2 856 10 345 29 87 6 320 10 544 2 513 6 
691 6 794 4 
82 2 
249 2 188 2 516 4 399 2 67 2 69 2 362 2 899 2 199 2 73 2 405 2 461 2 527 2 711 2 408 2 407 2 594 2 844 4 415 2 370 2 421 2 855 2 916 2 477 2 783 2 27 2 91 2 545 4 222 2 35 2 157 2 281 2 104 2 40 2 436 2 105 4 690 2 45 2 502 2 341 4 47 2 812 2 572 2 513 4 
644 2 32 4 323 18 351 48 191 32 580 2 761 6 357 22 457 6 333 2 590 32 9 2 10 4 555 4 938 2 466 2 138 6 442 2 266 4 112 16 844 4 884 16 743 32 472 16 636 8 420 4 318 6 913 6 641 4 947 4 474 6 949 2 856 6 345 55 320 16 87 4 89 6 426 4 513 4 
781 2 784 2 91 2 
385 2 226 2 943 22 897 2 922 2 180 10 663 2 638 2 49 2 145 2 362 2 655 2 798 2 803 2 
323 2 865 2 191 2 351 4 357 2 928 2 625 2 590 2 232 2 366 2 131 2 555 2 938 2 108 2 406 2 112 2 884 2 743 2 113 2 472 2 856 4 345 6 320 2 
191 8 351 12 192 2 267 2 112 4 884 4 743 8 472 4 357 4 420 4 457 6 710 2 474 6 590 8 345 16 320 4 10 4 
545 4 193 2 400 2 284 4 402 2 287 2 793 2 924 4 257 4 458 10 165 2 405 2 382 4 687 2 41 4 441 2 175 2 494 2 559 2 495 2 205 4 496 10 297 2 16 4 635 4 370 4 447 62 780 14 852 4 423 4 542 2 781 2 150 2 816 2 25 2 247 2 784 6 29 4 753 2 91 8 
787 2 546 2 483 2 459 2 260 2 76 2 637 2 849 2 82 2 814 2 
1 2 701 2 350 16 576 2 352 2 353 1 704 3 256 2 358 2 359 2 361 3 365 3 833 6 464 2 261 8 262 1 593 2 11 2 264 6 15 2 268 2 369 2 844 32 596 2 270 2 271 2 848 2 850 2 273 2 146 1 602 12 149 2 26 16 859 6 722 3 863 2 30 2 480 2 156 2 278 1 159 4 615 6 867 2 622 2 731 2 732 1 875 2 489 2 291 3 171 2 491 24 292 1 630 2 739 2 44 2 499 1 741 2 742 2 885 2 501 2 182 3 184 4 48 2 54 2 58 2 300 2 60 2 301 4 513 34 185 2 186 2 894 2 63 2 645 1 304 2 305 1 64 8 308 2 197 2 71 3 898 2 766 8 657 2 526 2 901 2 529 3 204 2 909 1 79 2 209 2 537 3 413 3 210 2 417 2 540 2 665 1 214 1 215 2 422 2 86 2 319 1 217 32 219 3 782 2 670 32 221 1 427 2 674 2 94 2 675 2 95 1 678 4 96 2 228 2 792 4 682 2 550 2 551 2 925 2 796 4 683 4 329 4 927 2 554 2 930 2 439 2 933 2 934 2 802 2 937 3 233 2 556 2 689 2 444 2 236 2 941 2 560 1 562 5 811 2 343 2 450 2 815 2 819 24 244 16 820 16 349 2 822 2 
231 2 513 2 
752 2 513 4 714 2 
202 2 
0 2 250 22 123 10 122 2 253 32 703 2 826 32 255 2 3 2 588 2 128 14 589 2 364 6 832 2 130 2 836 2 712 2 839 4 840 8 368 2 842 2 139 32 141 2 715 2 471 2 142 2 144 2 851 2 475 2 372 106 151 2 607 2 862 2 275 2 608 32 277 2 280 18 282 2 723 12 283 2 724 2 161 2 874 106 290 12 730 12 166 2 626 40 384 8 879 32 293 2 881 2 497 2 632 32 633 2 388 18 389 2 298 18 745 2 639 10 747 4 53 4 508 2 394 2 510 2 61 2 514 2 896 2 396 2 187 8 646 4 756 2 309 14 651 2 517 2 763 32 764 2 314 2 201 8 532 2 533 22 208 2 773 2 536 18 538 18 774 2 660 2 539 2 541 32 220 32 671 24 321 22 673 2 790 2 921 2 552 2 926 2 102 106 103 12 684 32 331 42 330 2 686 2 553 2 106 2 799 4 440 2 801 2 936 2 334 2 558 2 688 2 110 32 337 4 446 2 564 4 563 2 565 2 342 2 948 18 567 12 569 2 696 4 347 32 953 2 698 4 
155 1 52 2 452 2 955 2 
302 2 452 2 
664 2 438 2 656 2 326 2 614 2 452 2 91 2 
656 2 452 2 354 2 
656 2 831 2 452 2 
587 2 52 2 490 2 
656 2 452 2 
587 2 650 2 
410 2 452 2 
587 2 52 2 4 2 
83 2 52 2 906 2 
178 2 52 2 772 2 
176 2 52 2 692 2 
52 2 424 2 212 2 
587 2 111 2 
708 2 452 2 
83 2 181 2 
178 2 224 2 
566 2 692 2 
424 2 834 2 
493 2 587 2 
568 2 424 2 
692 2 62 2 
178 2 470 2 
83 2 952 2 
587 2 52 2 387 2 4 2 
587 2 52 2 749 2 387 2 4 2 
587 2 823 2 52 2 
587 2 52 2 425 2 
124 2 17 2 828 2 658 2 
664 2 950 2 286 2 91 2 
664 2 438 2 950 2 286 2 91 2 31 2 
664 2 656 2 326 2 452 2 91 2 738 2 
504 2 711 2 
664 2 326 2 91 2 574 2 
395 2 692 2 
734 2 424 2 
83 2 890 2 
178 2 500 2 
178 2 424 2 900 2 
178 2 424 2 173 2 
178 2 424 2 843 2 
178 2 430 2 424 2 
866 2 455 2 873 2 664 2 243 6 605 2 91 2 
587 2 668 2 
919 2 530 4 33 2 276 2 515 2 484 2 336 2 827 2 943 6 196 2 70 2 434 2 448 2 183 2 695 2 601 2 876 2 935 4 
52 2 279 2 
930 2 
1 4 701 2 576 2 252 2 352 2 456 4 833 2 261 2 264 6 844 26 270 2 602 8 859 2 863 2 30 2 278 2 485 2 159 2 615 4 867 2 870 2 875 2 630 2 739 2 44 2 184 4 48 2 392 2 54 2 58 2 513 26 751 2 894 2 63 2 304 2 397 2 759 2 197 2 310 2 901 2 315 2 204 2 909 2 209 2 416 2 540 2 422 2 217 6 782 2 88 2 670 4 427 6 678 4 792 2 682 2 925 2 551 2 796 4 683 4 329 2 927 2 933 2 802 2 689 2 804 4 807 2 234 2 444 2 236 2 339 2 340 2 241 2 244 6 349 2 
1 4 701 2 576 2 252 2 352 2 706 2 456 4 833 2 261 2 264 6 369 2 844 26 270 2 273 2 602 8 148 2 859 2 863 2 30 2 278 2 159 2 615 6 867 2 870 2 875 2 630 2 739 2 44 2 184 4 48 2 392 2 54 2 55 2 58 2 513 26 751 2 894 2 63 2 304 2 397 2 759 2 197 2 901 2 315 2 204 2 909 2 209 2 416 2 540 2 422 2 217 6 782 2 88 2 670 4 427 6 678 4 792 2 682 2 551 2 925 2 796 4 683 4 329 2 927 2 554 2 933 2 802 2 689 2 804 4 807 2 444 2 236 2 339 2 340 2 241 2 244 6 349 2 
492 2 
889 2 624 2 
895 2 699 4 65 2 576 2 195 2 197 2 581 4 258 2 707 2 654 2 835 2 136 2 264 4 908 2 534 2 316 2 209 2 844 6 272 2 778 6 317 2 371 2 274 8 23 2 782 2 543 10 152 4 429 2 864 8 677 2 678 2 610 2 285 2 37 2 160 4 38 2 681 4 925 2 551 2 487 2 683 2 488 2 623 2 685 2 381 2 932 2 628 2 177 6 444 2 43 2 561 4 886 2 503 2 115 2 393 2 119 4 817 4 891 2 513 12 348 6 
895 2 699 4 65 2 576 2 195 2 197 2 581 4 258 2 707 2 654 2 835 2 837 2 264 4 908 2 534 2 316 2 209 2 844 6 776 2 272 2 317 2 778 6 371 2 274 8 23 2 782 2 543 10 152 4 429 2 864 8 678 2 677 2 610 2 285 2 37 2 38 2 160 4 681 4 549 4 925 2 551 2 487 2 683 2 623 2 685 2 381 2 932 2 628 2 177 8 444 2 43 2 561 4 179 2 886 2 503 2 115 2 393 2 119 4 817 4 891 2 513 12 348 8 
895 2 65 2 43 2 534 2 561 2 285 2 38 2 160 4 681 2 581 4 115 2 317 2 487 2 778 2 119 2 932 2 348 2 429 2 
895 2 699 4 65 2 576 2 195 2 197 2 581 4 258 2 707 2 654 2 835 2 136 2 264 4 908 2 534 2 316 2 209 2 844 6 776 2 272 2 778 4 317 2 371 2 274 4 23 2 782 2 543 6 152 4 429 2 864 4 677 2 678 2 610 2 285 2 37 2 160 4 38 2 681 4 925 2 551 2 487 2 683 2 488 2 623 2 685 2 932 2 628 2 177 6 444 2 43 2 561 4 886 2 503 2 115 2 393 2 119 4 817 4 891 2 513 12 348 6 
895 2 699 4 65 2 576 2 195 2 197 2 581 4 258 2 707 2 654 2 8 2 835 2 136 2 264 4 908 2 534 2 316 2 209 2 844 6 272 2 778 6 317 2 371 2 274 4 23 2 782 2 543 6 152 4 429 2 864 4 677 2 678 2 610 2 285 2 37 2 160 4 38 2 681 4 925 2 551 2 487 2 683 2 488 2 623 2 685 2 932 2 628 2 177 6 444 2 43 2 561 4 886 2 503 2 115 2 393 2 119 4 817 4 891 2 513 12 348 4 
895 2 699 4 65 2 576 2 195 2 197 2 581 4 258 2 707 2 654 2 835 2 136 2 264 4 908 2 534 2 316 2 209 2 844 6 272 2 778 6 317 2 371 2 274 8 23 2 782 2 543 6 152 4 429 2 864 4 677 2 678 2 610 2 285 2 37 2 160 4 38 2 681 4 925 2 551 2 487 2 683 2 488 2 623 2 685 2 381 2 932 2 628 2 177 6 444 2 43 2 561 4 886 2 503 2 115 2 393 2 119 4 817 4 891 2 513 12 348 6 
895 2 699 4 65 2 576 2 195 2 197 2 581 4 258 2 707 2 654 2 8 2 835 2 136 2 264 4 908 2 534 2 316 2 209 2 844 6 272 2 778 8 317 2 371 2 274 8 23 2 782 2 543 10 152 4 429 2 864 8 678 2 677 2 610 2 285 2 37 2 160 4 38 2 681 4 925 2 551 2 487 2 683 2 488 2 623 2 685 2 381 2 932 2 628 2 177 8 444 2 43 2 561 4 886 2 503 2 115 2 393 2 119 4 817 4 891 2 513 12 348 6 
895 2 699 4 65 2 576 2 195 2 197 2 581 4 258 2 707 2 654 2 835 2 136 2 264 4 908 2 534 2 316 2 209 2 844 6 272 2 778 6 317 2 371 2 274 8 23 2 782 2 543 10 152 4 429 2 864 8 677 2 678 2 610 2 285 2 37 2 160 4 38 2 681 4 925 2 551 2 487 2 683 2 488 2 623 2 685 2 381 2 932 2 628 2 177 6 444 2 43 2 561 4 886 2 503 2 115 2 393 2 119 4 817 4 891 2 513 12 348 6 
699 4 701 2 705 1 258 2 707 2 259 2 8 4 261 2 264 6 270 2 269 6 714 6 272 4 273 2 274 2 23 2 30 2 36 2 486 2 37 2 285 2 38 2 726 6 487 2 42 2 43 2 739 2 503 2 48 2 50 6 507 2 54 2 509 6 57 2 750 6 513 46 751 2 304 2 65 2 307 6 68 2 760 6 521 1 765 6 523 1 74 1 534 2 316 2 778 8 317 2 779 1 782 2 543 2 785 2 786 6 792 2 551 2 796 4 329 2 107 6 335 1 804 4 807 4 561 4 339 2 340 2 115 2 813 2 119 4 817 6 818 2 348 4 349 2 576 2 352 2 126 2 581 4 356 2 586 1 833 2 835 2 136 2 367 2 838 2 369 2 844 24 597 2 143 2 371 2 600 4 602 4 147 2 859 2 604 2 152 8 863 2 610 4 159 2 160 4 615 6 867 2 617 2 619 2 167 7 623 2 172 10 628 2 177 12 630 2 886 2 887 2 184 4 393 2 891 2 894 2 895 2 649 2 195 4 197 2 198 8 654 2 404 2 902 6 202 6 204 2 206 2 908 2 209 2 911 7 422 2 217 8 670 2 917 1 427 6 429 2 678 4 677 2 679 6 432 2 681 4 433 1 925 2 683 4 927 12 685 2 932 2 231 6 939 2 689 2 444 2 235 6 944 2 239 2 945 2 946 2 244 6 246 2 451 4 951 2 
699 4 1 2 701 2 576 2 126 2 352 2 581 4 356 2 258 2 259 2 707 2 833 2 835 2 261 2 136 2 367 2 838 2 264 6 369 2 844 26 269 6 270 2 18 2 714 6 597 2 143 2 272 4 273 2 600 4 371 2 147 2 602 8 23 2 274 6 859 2 604 2 152 8 30 2 863 2 36 2 610 4 285 2 159 4 37 2 486 2 38 2 160 4 867 2 615 6 617 2 726 6 619 2 487 2 623 2 381 4 172 10 628 2 177 12 42 2 630 2 43 2 739 2 886 2 887 2 503 2 184 4 48 2 50 6 507 2 509 6 54 2 393 2 750 6 57 2 891 2 751 2 513 48 895 2 894 2 304 2 65 2 307 6 649 2 68 2 195 4 198 8 197 2 760 6 654 2 765 6 404 2 902 6 202 6 204 2 908 2 206 2 316 2 534 2 209 2 317 2 778 8 422 2 217 8 782 2 543 2 670 2 785 2 786 6 427 6 429 2 677 2 678 4 679 6 432 2 792 4 681 4 551 2 925 2 796 4 683 4 927 12 329 4 685 2 231 6 932 2 107 6 939 2 804 4 689 2 807 4 444 2 808 2 235 6 561 4 944 2 239 2 339 2 946 2 945 2 340 2 115 2 813 2 119 4 817 6 818 2 451 4 246 2 244 6 951 2 348 8 349 2 
699 4 1 2 701 2 576 2 126 2 352 2 581 4 356 2 258 2 259 2 707 2 833 2 835 2 261 2 136 2 367 2 838 2 264 6 369 2 844 26 269 6 270 2 18 2 714 6 597 2 143 2 272 4 273 2 600 4 371 2 147 2 602 8 23 2 274 6 859 2 604 2 152 8 30 2 863 2 864 4 36 2 610 4 285 2 159 4 37 2 486 2 38 2 160 4 867 2 615 6 617 2 726 6 619 2 487 2 623 2 381 4 172 10 628 2 177 12 42 2 630 2 43 2 739 2 886 2 887 2 503 2 184 4 48 2 50 6 507 2 509 6 54 2 393 2 750 6 57 2 891 2 751 2 513 48 895 2 894 2 304 2 65 2 307 6 649 2 68 2 195 4 198 8 197 2 760 6 654 2 765 6 404 2 902 6 202 6 204 2 908 2 206 2 316 2 534 2 209 2 317 2 778 8 422 2 217 8 782 2 670 2 543 6 785 2 786 6 427 6 429 2 677 2 678 4 679 6 432 2 792 4 681 4 551 2 925 2 796 4 683 4 927 12 329 4 685 2 231 6 932 2 107 6 939 2 804 4 689 2 807 4 444 2 808 2 235 6 561 4 944 2 239 2 339 2 946 2 945 2 340 2 115 2 813 2 119 4 817 6 818 2 451 4 246 2 244 6 951 2 348 8 349 2 
699 4 1 2 701 2 254 2 258 2 707 2 259 2 8 2 261 4 264 6 270 2 269 6 18 2 714 12 272 4 273 2 274 6 23 2 30 2 36 2 486 2 37 2 285 2 38 2 726 6 487 2 294 6 42 2 43 2 739 2 503 2 48 2 50 6 507 2 748 6 54 2 509 12 57 2 750 6 56 6 751 2 513 52 304 2 65 2 307 6 68 2 760 6 765 6 313 6 534 2 316 2 776 2 778 10 317 2 84 2 782 2 543 6 785 2 786 12 97 6 792 4 551 2 796 4 329 4 107 6 804 6 807 4 808 2 561 4 339 2 340 4 115 2 813 2 119 4 817 6 818 2 348 10 349 2 576 2 825 6 126 2 352 2 581 4 356 2 127 6 833 4 835 2 136 2 367 2 838 2 369 2 844 24 597 2 143 2 599 6 371 2 600 4 602 10 147 2 859 4 604 2 152 8 861 2 863 2 864 4 610 4 159 4 160 4 615 6 867 2 617 2 872 2 619 2 163 2 623 2 381 4 172 8 628 2 177 16 630 2 882 2 886 2 887 2 184 4 393 2 891 2 894 2 895 2 648 6 195 4 197 2 198 8 654 2 404 2 902 12 202 12 905 2 204 2 908 2 206 2 209 2 422 2 217 12 670 4 427 8 429 2 678 4 677 2 225 2 679 6 432 2 681 4 925 2 683 4 927 10 685 2 932 2 231 12 939 2 689 2 444 2 235 6 944 2 239 2 945 2 946 2 244 8 246 2 451 4 951 2 
699 2 864 4 65 2 610 2 37 2 38 2 160 2 681 4 581 2 258 2 487 2 654 2 381 2 932 2 835 2 136 2 177 4 43 2 316 2 534 2 561 4 886 2 503 2 317 2 778 6 371 2 393 2 23 2 274 6 817 2 891 2 513 4 152 2 543 4 348 6 
699 2 701 2 576 2 352 2 581 2 258 2 833 3 835 2 136 2 264 6 137 2 369 2 844 24 270 2 273 2 371 2 718 3 274 6 23 2 859 3 152 2 863 2 30 2 610 2 37 2 160 2 38 2 615 6 867 2 487 2 381 2 172 2 177 4 630 2 43 2 886 2 184 4 503 2 48 2 393 2 54 2 891 2 751 2 513 28 894 2 304 2 65 2 649 2 197 2 654 2 769 2 204 2 77 2 534 2 316 2 79 2 209 2 778 6 317 2 422 2 217 8 782 2 670 3 543 2 427 6 93 2 678 4 677 2 681 4 551 2 925 2 683 4 796 4 927 4 930 2 932 2 689 2 804 4 807 2 444 2 561 4 339 2 815 2 817 2 244 6 348 6 349 2 954 2 822 2 
258 2 700 2 835 2 
258 2 700 2 835 2 
699 2 575 2 700 2 701 2 576 2 352 2 581 2 829 2 258 6 259 2 707 2 709 2 8 4 835 4 264 6 369 2 844 16 845 4 270 2 272 4 716 2 273 2 600 2 602 4 274 6 152 4 863 2 30 2 864 4 611 2 610 4 285 2 159 4 37 2 160 2 615 6 867 2 487 4 381 4 172 2 878 4 177 16 630 2 43 2 739 4 184 4 48 2 507 2 54 2 393 2 513 24 751 2 894 2 304 2 195 2 652 2 197 2 200 2 315 4 204 2 908 2 534 2 207 2 209 2 414 2 776 4 778 12 422 2 216 2 217 2 782 2 670 2 543 6 427 2 678 4 432 2 98 2 792 4 327 2 681 4 551 2 925 2 795 2 796 4 683 4 329 4 927 4 332 2 685 2 689 2 806 2 807 6 444 2 235 2 561 4 339 2 115 2 118 2 119 4 817 4 451 2 244 2 348 12 821 2 
411 2 66 2 235 2 844 2 617 2 829 2 551 2 391 2 716 2 927 2 624 2 216 2 172 2 451 2 513 4 785 2 429 2 
699 2 575 2 700 2 701 2 576 2 352 2 581 2 829 2 258 6 259 2 707 2 709 2 8 4 835 4 264 6 369 2 844 16 845 4 270 2 272 4 716 2 273 2 600 2 602 4 274 6 152 4 863 2 30 2 864 4 611 2 610 4 285 2 159 4 37 2 160 2 615 6 867 2 487 4 623 2 381 4 627 2 878 4 177 16 630 2 43 2 739 4 184 4 48 2 507 2 54 2 393 2 511 2 513 24 751 2 894 2 304 2 195 4 652 2 197 2 312 2 315 4 204 2 908 2 534 2 207 4 209 2 776 4 778 12 422 2 216 2 217 2 782 2 670 4 543 6 427 2 678 4 920 2 432 2 98 2 792 4 327 2 681 4 551 2 925 2 795 2 796 4 683 4 329 4 927 2 685 2 805 2 689 2 806 2 807 6 444 2 235 2 561 4 339 2 115 2 118 2 119 4 817 4 244 2 348 12 
699 2 575 2 700 2 701 2 576 2 352 2 581 2 829 2 258 6 259 2 707 2 460 2 709 2 8 4 835 4 264 6 369 2 844 16 845 4 270 2 272 4 716 2 273 2 600 2 602 4 274 6 152 4 863 2 30 2 864 4 611 2 610 4 285 2 159 4 37 2 160 2 615 6 867 2 487 4 623 2 381 4 172 2 174 2 878 4 177 16 630 2 43 2 739 4 184 4 48 2 507 2 54 2 393 2 513 24 751 2 894 2 304 2 398 2 195 4 652 2 197 2 311 2 903 2 315 4 204 2 908 2 534 2 207 2 209 2 776 4 778 12 422 2 216 2 217 2 782 2 670 2 543 6 427 2 678 4 432 2 98 2 792 4 327 2 681 4 551 2 925 2 795 2 796 4 683 4 329 4 927 4 685 2 689 2 806 2 807 6 444 2 235 2 561 4 339 2 115 2 118 2 119 4 817 4 451 2 244 2 348 12 
894 2 702 2 576 2 401 2 197 2 585 2 360 2 767 2 462 2 463 2 771 2 264 6 204 2 209 2 844 16 211 1 270 2 473 2 598 2 666 2 422 2 217 2 782 2 427 2 30 2 863 2 376 2 482 2 791 2 678 4 867 2 615 2 328 2 377 2 923 1 925 2 551 2 796 2 683 4 927 2 169 2 689 2 807 2 444 2 339 2 184 2 48 2 117 2 54 2 244 2 697 2 245 2 513 20 
672 2 223 1 758 2 125 2 158 2 613 2 833 3 804 2 940 2 535 2 942 2 844 2 114 2 340 6 744 4 847 2 240 3 217 2 859 3 244 2 512 2 670 3 513 2 427 2 349 2 
672 2 758 2 125 2 158 2 613 2 833 2 804 2 940 2 535 2 942 2 844 2 114 2 340 6 744 4 847 2 240 2 217 2 859 2 244 2 512 2 670 2 513 2 427 2 349 2 
672 2 758 2 125 2 158 2 613 2 833 2 804 2 940 2 535 2 942 2 844 2 114 2 340 6 744 4 847 2 240 2 217 2 859 2 244 2 512 2 670 2 513 2 427 2 349 2 
350 2 191 2 351 4 590 2 525 2 592 2 263 2 265 2 468 2 841 2 844 4 713 4 472 2 777 3 318 4 21 3 854 2 217 2 87 2 320 2 859 3 26 2 670 3 92 4 918 2 34 3 613 2 288 2 869 2 620 2 437 4 383 6 112 2 884 2 743 2 694 4 345 6 513 10 573 4 349 2 
918 2 323 2 34 2 350 2 351 4 191 2 613 2 288 2 869 2 357 2 620 2 437 4 590 2 383 6 525 2 592 2 442 2 263 2 468 2 265 2 841 2 112 2 844 4 713 4 884 2 743 2 694 4 472 2 777 2 318 4 21 2 854 2 345 4 217 2 320 2 87 2 26 2 859 2 573 4 670 2 513 10 92 4 349 2 
918 2 323 2 34 2 350 2 351 4 191 2 613 2 288 2 869 2 357 2 620 2 437 4 590 2 383 6 525 2 592 2 442 2 263 2 468 2 265 2 841 2 112 2 844 4 713 4 884 2 743 2 694 4 472 2 777 2 318 4 21 2 854 2 345 4 217 2 320 2 87 2 26 2 859 2 573 4 670 2 513 10 92 4 349 2 
918 2 323 2 34 2 350 2 351 4 191 2 613 2 288 2 869 2 357 2 620 2 437 4 590 2 383 6 525 2 592 2 442 2 263 2 468 2 265 2 841 2 112 2 844 4 713 4 884 2 743 2 694 4 472 2 777 2 318 4 21 2 854 2 345 4 217 2 320 2 87 2 26 2 859 2 573 4 670 2 513 10 92 4 349 2 
918 2 323 4 34 2 350 2 351 4 191 2 613 2 288 2 869 2 357 4 620 2 437 4 590 2 383 6 525 2 592 2 442 4 263 2 468 2 265 2 841 2 112 2 844 4 713 4 884 2 743 2 694 4 472 2 777 2 318 4 21 2 854 2 345 4 217 2 320 2 87 2 26 2 859 2 573 4 670 2 513 10 92 4 349 2 
7 2 755 2 164 2 443 2 498 2 524 2 
392 2 467 2 164 2 520 2 721 2 238 2 378 2 
400 1 194 2 518 2 868 2 5 2 871 2 925 2 72 2 591 2 132 1 135 2 809 2 386 2 445 2 844 8 338 1 418 2 81 2 116 2 218 2 816 1 858 1 893 2 513 10 786 2 428 2 
32 2 323 2 351 12 191 6 578 2 676 2 357 3 457 4 590 6 10 2 109 2 442 2 631 2 112 6 844 6 884 6 743 6 472 6 47 2 636 2 421 2 318 4 913 4 476 2 345 16 320 6 87 2 642 2 892 2 513 6 
629 2 880 2 453 2 824 2 612 2 844 1 713 2 6 2 733 2 437 2 914 2 915 4 667 7 170 2 513 1 303 1 92 2 479 2 
629 4 880 4 453 2 824 4 612 2 713 2 6 2 733 2 437 2 914 2 915 4 667 6 170 2 92 2 479 2 
629 8 880 8 453 2 824 8 612 6 844 1 713 2 6 2 733 2 437 2 914 2 915 4 667 10 170 2 513 1 303 1 92 2 479 8 
629 2 880 2 453 2 824 2 713 2 6 2 733 2 437 2 914 2 915 2 667 2 170 2 92 2 
2 1 579 1 582 2 583 2 14 2 13 2 469 2 369 4 844 26 270 6 273 4 28 2 478 2 153 2 374 2 615 16 618 2 289 2 380 2 295 1 184 10 506 2 299 4 513 28 643 2 189 2 190 2 306 1 762 2 768 4 409 2 412 2 907 2 204 6 661 2 669 2 324 2 788 1 99 2 547 2 227 2 548 1 229 2 796 8 797 2 931 4 689 4 237 2 810 2 344 1 120 4 346 4 571 2 248 2 
757 2 190 2 306 2 653 2 583 2 403 2 522 2 75 2 528 4 133 2 134 2 465 4 904 2 12 4 204 2 78 2 595 2 14 2 844 42 270 2 846 2 775 2 419 2 910 2 213 2 912 2 19 2 20 2 85 2 22 2 853 6 720 2 603 2 24 2 860 2 606 2 90 2 322 2 153 2 154 2 374 2 375 2 431 2 789 2 99 2 100 2 615 36 725 2 101 2 162 2 796 18 621 2 380 2 929 2 735 2 877 2 800 2 737 2 557 2 689 2 296 4 634 2 237 2 390 6 693 2 46 2 449 2 184 18 888 2 746 2 640 2 51 2 120 2 242 2 346 32 571 2 59 2 513 42 248 2 
121 2 189 2 190 2 577 4 2 2 355 2 583 2 582 2 363 2 768 6 129 4 770 2 134 2 409 2 531 2 203 2 412 2 907 2 204 4 659 2 13 2 14 2 469 2 369 6 844 32 270 4 775 2 661 2 273 6 20 2 719 2 860 2 478 2 153 2 154 2 324 2 374 2 609 2 99 2 100 2 227 2 615 24 725 2 229 2 379 2 289 4 727 2 796 10 380 2 797 2 931 2 737 2 689 2 237 2 184 12 505 4 746 2 506 2 120 6 346 14 299 6 248 2 513 34 643 2 
374 2 190 2 689 2 204 2 431 2 306 2 14 2 99 2 369 4 844 12 270 2 615 10 583 2 184 4 796 4 273 4 380 2 346 4 737 2 248 2 513 12 153 2 
373 2 

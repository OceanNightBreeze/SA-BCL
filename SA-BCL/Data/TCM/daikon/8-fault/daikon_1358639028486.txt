#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 747 58 860 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 647 405 952 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 865 952 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 647 405 952 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 865 952 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_0()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_1()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_2()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_3()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_4()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_5()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_6()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_7()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_8()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_9()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_10()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_11()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_12()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_13()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_14()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_15()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_16()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_17()V PASSED
daikon.test.split.SplitterFactoryTest:testmisc_Fib_main_18()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_19()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_20()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_21()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_22()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_23()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_24()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_25()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_26()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_27()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_28()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_29()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_30()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_31()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_32()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__33()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__34()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__35()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__36()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__37()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__38()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__39()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__40()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__41()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__42()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__43()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.inv.unary.UpperBoundCore:calc_range()J
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.EltOneOf:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
daikon.VarInfo:apply_subscript(Ljava.lang.String;)Ljava.lang.String;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.diff.InvMap:InvMap()V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:slice([III)[I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.inv.Invariant:getConfidence()D
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:runValue([JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:logOn()Z
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.inv.Invariant:prob_and(DDD)D
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eq(DD)Z
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.Ppt:Ppt()V
daikon.Debug:logDetail()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.ValueTuple:isMissingFlow(I)Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
jtb.Token:newToken(I)Ljtb.Token;
daikon.ProglangType:dimensions()I
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3_16()Z
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.VarInfoName.InorderFlattener:InorderFlattener(Ldaikon.VarInfoName;)V
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.Quant:memberOf(F[D)Z
daikon.VarInfoName.InorderFlattener:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.Intern:numIntArrays()I
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:subsetOf([F[F)Z
utilMDE.ArraysMDE:subarray([III)[I
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.VarInfo:isPointer()Z
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaCharStream:getEndColumn()I
daikon.Quant:pairwiseLTE([I[I)Z
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.Quant:subsetOf([D[D)Z
utilMDE.Intern:internSubsequence([III)[I
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
jtb.JavaCharStream:readChar()C
utilMDE.ArraysMDE:indexOf([II)I
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:bitwiseComplement(I)I
utilMDE.WeakHasherMap:size()I
daikon.Quant:eltsGT([II)Z
jtb.JavaCharStream:getBeginLine()I
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.Intern:intern([D)[D
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Quant:setEqual([I[I)Z
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.sequence.EltUpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.PptName:isCombinedExitPoint()Z
daikon.Quant:eltsNotEqual([II)Z
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
jtb.ParseException:getMessage()Ljava.lang.String;
daikon.Quant:lexGTE([I[I)Z
daikon.Quant:eq(JJ)Z
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.Quantify.IOAQuantification:getMembershipRestriction(I)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.inv.filter.ParentFilter:ParentFilter()V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.PptSlice1:num_samples()I
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.VarInfo:isDerived()Z
daikon.Quantify:quantify([Ldaikon.VarInfo;)[Ldaikon.Quantify.QuantifyReturn;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.UtilMDE:lineNumberFileReader(Ljava.lang.String;)Ljava.io.LineNumberReader;
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.sequence.EltNonZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.Quant:gte(II)Z
utilMDE.MathMDE:modulus([I)[I
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:noDuplicates([J)Z
jtb.JavaParser:generateParseException()Ljtb.ParseException;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.Quant:subsetOf([I[I)Z
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
jtb.JavaCharStream:getBeginColumn()I
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat:lte(DD)Z
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
utilMDE.ArraysMDE:sum([D)D
daikon.inv.Invariant:prob_is_ge(DD)D
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.VarInfo:get_all_simple_names()Ljava.util.List;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.diff.RootNode:RootNode()V
utilMDE.MathMDE:gcd(JJ)J
daikon.inv.unary.sequence.EltUpperBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:pow_fast(II)I
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 3923 | = null
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;)Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.sequence.EltOneOf:get_proto()Ldaikon.inv.Invariant;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.ProglangType:baseIsScalar()Z
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.LowerBoundCore:calc_modulus()J
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.inv.Invariant:isWorthPrinting()Z
daikon.VarInfo:isIOAArray()Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Elements:ioa_name_impl()Ljava.lang.String;
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.ModBitTracker:split(I)I
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.ModBitTracker:num_vars()I
daikon.inv.unary.sequence.EltOneOf:format_daikon()Ljava.lang.String;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Invariant:justified()Z
daikon.Quant:union([I[I)[I
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.EltUpperBound:enabled()Z
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.Quant:pairwiseGTE([I[I)Z
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;Z)Z
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
utilMDE.Intern:intern([J)[J
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.ProglangType:isScalar()Z
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:subarray([JII)[J
utilMDE.MathMDE:gcd(II)I
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Elements:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.inv.unary.sequence.EltOneOf:enabled()Z
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.inv.unary.sequence.EltNonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.SimpleLog:SimpleLog(Z)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE:gcd([I)I
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.Quant:noDups([I)Z
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.PptTopLevel:name()Ljava.lang.String;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.VarInfo:get_enclosing_var()Ldaikon.VarInfo;
utilMDE.OrderedPairIterator:hasNext()Z
utilMDE.FuzzyFloat:eq(DD)Z
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.FuzzyFloat:gt(DD)Z
daikon.ProglangType:isPseudoArray()Z
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.VarInfo:is_direct_non_slice_array()Z
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
utilMDE.FuzzyFloat:indexOf([DD)I
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.sequence.EltUpperBound:EltUpperBound(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.inv.unary.sequence.EltNonZero:is_pointer()Z
utilMDE.ArraysMDE:sorted([I)Z
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName.Elements:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.EltNonZero:format_simplify()Ljava.lang.String;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.ModBitTracker:ModBitTracker(I)V
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:is_boolean()Z
daikon.Quant:pairwiseDivides([I[I)Z
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:hashCode()I
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:baseIsIntegral()Z
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.unary.sequence.EltOneOf:format_simplify()Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:lte(II)Z
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.Quant:eq(FF)Z
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:isReverse([I[I)Z
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltOneOf:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.ProglangType:isPointerFileRep()Z
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:element_range([I)I
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant:prob_or(DD)D
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.Quantify.Term:ioa_name()Ljava.lang.String;
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
utilMDE.OrderedPairIterator:setnext1()V
daikon.VarInfo:domainTypeIOA()Ljava.lang.String;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
jtb.ParseException:ParseException(Ljava.lang.String;)V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.Quant:eltwiseNotEqual([I)Z
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:EltOneOf(Ldaikon.PptSlice;)V
daikon.Quant:memberOf(D[F)Z
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.Ppt:indexOf(Ljava.lang.String;)I
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
utilMDE.ArraysMDE:max([I)I
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.VarInfoName:name()Ljava.lang.String;
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.Ppt:find_var_by_name(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.inv.unary.scalar.NonZero:is_pointer()Z
utilMDE.ArraysMDE:noDuplicates([D)Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.Quant:subsetOf([B[I)Z
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.inv.unary.sequence.EltNonZero:format_esc()Ljava.lang.String;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I | CONSTANT | 14318 | 112 -> 0
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.Quant:eltwiseEqual([I)Z
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.Quant:intersection([I[I)[I
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.ValueTuple:size()I
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.MathMDE:gcd_differences([I)I
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.EltNonZero:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.VarInfo:simplify_quantify(Ljava.util.EnumSet;[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eltsGTE([II)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.Quant:subsetOf([D[F)Z
utilMDE.LimitedSizeIntSet:add(I)V
daikon.inv.unary.sequence.EltOneOf:format_esc()Ljava.lang.String;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.Quant:memberOf(J[J)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:subsetOf([J[J)Z
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
utilMDE.Assert:assertTrue(Z)V
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.Quant:lexGT([I[I)Z
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.Quant:subsetOf([S[S)Z
daikon.inv.Invariants:Invariants()V
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.ValueSet:ValueSet(I)V
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.inv.unary.sequence.EltUpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.VarInfoName.NodeFinder:inPre()Z
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.ProglangType:isIntegral()Z
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.Quant:subsetOf([F[D)Z
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
jtb.JavaParser:jj_ntk()I
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:gte(DD)Z
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
utilMDE.FuzzyFloat:lt(DD)Z
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | RETURN | 3667 | return null
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.diff.Node:Node()V
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.Quant:pairwiseGT([I[I)Z
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaCharStream:BeginToken()C
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.PptSlice0:initInvariantsSeen()V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
utilMDE.ArraysMDE:sum([[D)D
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.Quant:pairwiseEqual([I[I)Z
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaCharStream:getEndLine()I
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.Quant:sameLength([I[I)Z
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.Quant:eltsEqualIndex([I)Z
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltNonZero:format_ioa()Ljava.lang.String;
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.EltOneOf:sort_rep()V
daikon.ProglangType:isFloat()Z
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.Quant:eltsEqual([II)Z
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.Quant:pairwiseSquare([I[I)Z
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
utilMDE.ArraysMDE:concat([I[I)[I
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltOneOf:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quantify.IOAQuantification:getClosingExp()Ljava.lang.String;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.Quant:ne(II)Z
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.ModBitTracker:num_sets()I
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.inv.unary.sequence.EltNonZero:EltNonZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
utilMDE.OrderedPairIterator:setnext2()V
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.PptSlice2:arity()I
utilMDE.MathMDE:mod_positive(JJ)J
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.PptSlice1:arity()I
daikon.VarInfoName.InorderFlattener:nodes()Ljava.util.List;
daikon.inv.unary.sequence.EltOneOf:subarray_rep()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.Quant:lexLT([I[I)Z
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.Quant:eltsLteIndex([I)Z
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.test.FormatTestCase:passes()Z
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:memberOf(F[F)Z
daikon.inv.unary.sequence.EltLowerBound:format_simplify()Ljava.lang.String;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
utilMDE.FuzzyFloat:isSubset([D[D)Z
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.Quantify.IOAQuantification:getFreeVarName(I)Ljava.lang.String;
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.inv.unary.scalar.Positive:enabled()Z
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltOneOf:is_hashcode()Z
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:wouldChange(J)Z
daikon.inv.unary.LowerBoundCore:computeConfidence()D
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:mod_positive(II)I
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Invariant:logDetail()Z
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltsGtIndex([I)Z
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
utilMDE.Intern:internSubsequence([JII)[J
daikon.VarInfo:isPrestate()Z
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.VarInfo:new_ppt()V
daikon.VarInfo:simplify_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:min_max([I)[I
daikon.Quant:lt(II)Z
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.Quantify.IOAQuantification:getQuantifierExp()Ljava.lang.String;
daikon.Quant:concat([I[I)[I
daikon.inv.unary.UpperBoundCore:computeConfidence()D
utilMDE.MathMDE:negate(I)I
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat:ne(DD)Z
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
utilMDE.ArraysMDE:min([I)I
daikon.Quantify.QuantifyReturn:QuantifyReturn(Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.Debug:logOn()Z
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.Quant:eltwiseGT([I)Z
daikon.ProglangType:base()Ljava.lang.String;
daikon.VarInfoName.InorderFlattener:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.Quant:eltwiseLTE([I)Z
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.WeakHasherMap:processQueue()V
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
utilMDE.LimitedSizeIntSet:size()I
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.test.InvariantFormatTester:execute()Z
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.Quant:eltwiseLT([I)Z
daikon.PptSlice0:arity()I
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V | ASSIGN | 2809 | = null
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName; | ASSIGN | 4561 | = null
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltNonZero:format_daikon()Ljava.lang.String;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Quant:gt(II)Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.Quant:setDiff([I[I)[I
daikon.Quant:eltsLTE([II)Z
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.Quantify.IOAQuantification:getFreeVar(I)Ldaikon.Quantify.Term;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.inv.unary.sequence.EltOneOf:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.JavaCharStream:UpdateLineColumn(C)V
utilMDE.FuzzyFloat:FuzzyFloat()V
utilMDE.Intern:intern([I)[I
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.Quant:eltwiseGTE([I)Z
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.ProglangType:isArray()Z
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.unary.sequence.EltNonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:missing_numbers([I)[I
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.Quant:pairwiseLT([I[I)Z
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([I[I)I
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.Quant:eq(II)Z
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParser:jj_scan_token(I)Z
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
jtb.JavaParserTokenManager:MoreLexicalActions()V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
utilMDE.UtilMDE:lineNumberFileReader(Ljava.io.File;)Ljava.io.LineNumberReader;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
jtb.JavaCharStream:backup(I)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.Quant:eltsGteIndex([I)Z
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.inv.unary.sequence.EltOneOf:format_ioa()Ljava.lang.String;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Elements:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_2_16(I)Z
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
jtb.JavaCharStream:ReadByte()C
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName:ioa_name()Ljava.lang.String;
daikon.Quant:memberOf(S[S)Z
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.VarInfo:apply_subscript(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.Quant:lexEqual([I[I)Z
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.ValueTuple:isMissing(I)Z
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.ProglangType:baseIsFloat()Z
daikon.PptName:isEnterPoint()Z
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:enabled()Z
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quantify.FreeVar:name()Ljava.lang.String;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([I)Z
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
utilMDE.Options.OptionInfo:argument_required()Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:sum([[I)I
daikon.Quant:lexLTE([I[I)Z
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.Quant:eltsLT([II)Z
daikon.ModBitTracker:num_samples()I
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quantify.IOAQuantification:IOAQuantification([Ldaikon.VarInfo;)V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.inv.unary.sequence.EltOneOf:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaCharStream:FillBuff()V
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.MathMDE:sign(I)I
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.Quant:memberOf(I[I)Z
daikon.Quant:eltsLtIndex([I)Z
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant:prob_and(DD)D
daikon.diff.InvMap:toString()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.ArraysMDE:sum([I)I
daikon.Quantify.IOAQuantification:getVarIndexedString(I)Ljava.lang.String;
utilMDE.MathMDE:pow(II)I
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfo:name()Ljava.lang.String;
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.inv.unary.sequence.EltOneOf:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.VarInfo:relate_var()V
daikon.Quant:lexNotEqual([I[I)Z
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
995 2 613 2 567 2 707 2 733 2 642 2 117 2 856 4 550 2 
338 2 30 2 452 6 958 6 791 2 939 2 718 6 732 2 518 2 697 2 758 2 
223 6 567 2 112 4 1047 4 837 6 485 6 783 6 237 2 1013 2 561 2 733 2 940 2 699 2 
474 28 517 8 774 12 154 8 778 4 158 2 267 6 884 10 165 8 890 6 853 10 896 2 102 2 347 10 750 2 526 26 412 16 567 6 78 4 798 2 606 8 755 2 910 16 282 2 20 4 315 10 188 10 733 6 85 16 923 4 
636 4 95 6 
937 2 
812 4 399 2 1027 4 879 2 205 2 208 2 456 2 1036 2 825 2 599 2 274 2 1040 2 210 2 604 2 911 2 913 2 354 2 545 2 27 2 995 2 151 2 628 2 1066 2 229 2 480 2 158 2 850 2 437 2 560 2 1005 2 440 2 169 2 646 2 106 4 945 2 567 4 948 2 862 2 501 4 504 2 807 2 184 2 1017 2 733 4 
811 6 1024 4 1 4 474 52 517 6 774 22 927 6 329 2 967 2 61 4 126 4 267 4 884 15 65 6 1033 4 239 5 165 19 890 4 853 15 896 2 347 15 600 4 378 3 526 47 980 4 412 32 567 4 1079 2 110 6 910 32 988 2 20 2 618 2 315 15 188 6 733 4 511 6 85 32 396 8 
169 2 352 2 914 2 
586 2 200 2 384 2 754 2 756 2 339 22 615 2 823 10 341 2 617 2 672 2 1006 2 599 2 346 2 
474 6 735 2 774 2 121 2 710 2 884 2 369 2 165 2 890 2 853 2 347 2 74 2 133 2 526 4 412 2 649 2 910 2 20 2 866 2 315 2 188 4 85 2 842 2 
702 2 474 16 980 4 526 12 774 4 412 8 110 6 927 6 61 4 910 8 884 4 315 4 853 4 85 8 150 2 923 2 347 4 
812 4 771 14 151 2 263 2 120 2 91 2 1068 2 62 2 1030 4 882 10 404 62 818 2 596 2 434 2 435 4 437 4 671 2 376 4 410 2 169 8 171 2 12 4 414 4 907 2 610 2 216 2 249 4 138 2 689 2 537 4 283 10 914 6 352 2 1053 2 147 4 768 4 544 4 320 2 86 2 1062 4 
297 2 937 2 458 2 69 2 1008 2 13 2 80 2 350 2 512 2 810 2 
397 4 124 2 402 32 129 4 268 1 820 1 822 8 272 4 408 3 670 1 521 2 829 2 976 3 411 6 525 2 679 8 678 2 680 2 276 2 529 1 278 2 984 2 985 2 18 6 532 2 538 2 21 2 691 3 286 2 693 2 145 1 542 2 149 1 843 4 994 2 424 4 554 2 32 2 155 2 427 6 35 1 160 2 847 24 39 2 1002 2 557 2 1003 2 42 2 436 2 562 3 720 2 43 6 857 1 306 2 45 2 567 32 569 2 443 2 308 1 726 2 310 2 864 2 727 2 576 32 578 3 183 2 579 2 869 2 316 2 1022 2 733 34 581 4 872 2 451 2 195 1 1028 2 202 24 738 5 333 3 588 1 455 16 457 3 594 2 595 2 66 2 744 2 68 2 746 2 1041 2 900 16 349 2 905 2 1046 3 605 16 465 2 1049 2 612 2 1052 2 616 2 470 2 619 2 769 2 624 2 623 3 1059 2 921 1 222 1 225 2 775 2 227 2 928 2 368 2 481 2 232 16 233 2 238 1 370 8 785 2 240 2 640 3 938 3 1072 12 792 2 241 2 642 2 103 2 377 2 644 2 493 2 494 2 943 2 645 2 795 1 245 1 496 12 111 2 383 2 1081 3 801 2 1084 2 502 2 251 1 390 2 656 2 957 4 507 2 1088 2 960 2 809 4 
209 2 733 2 
34 2 733 4 1060 2 
442 2 
585 2 516 6 963 2 450 2 965 30 197 2 196 6 327 2 325 4 1029 6 123 6 204 6 335 2 64 2 590 6 207 2 340 2 888 30 1035 2 669 2 892 2 1037 2 459 2 1039 6 674 4 899 6 1044 2 530 2 279 2 462 6 908 2 611 2 139 2 989 6 83 8 546 2 922 2 926 2 89 6 228 2 782 8 633 6 298 2 164 2 935 2 786 2 641 2 301 4 105 30 942 6 1076 2 722 2 1077 2 175 2 382 4 48 6 386 2 248 6 951 6 387 6 53 2 506 2 657 6 185 2 189 2 
667 2 889 1 915 2 919 2 
919 2 533 2 
169 2 874 2 527 2 1055 2 78 2 621 2 919 2 
130 2 1055 2 919 2 
194 2 1055 2 919 2 
667 2 704 2 426 2 
1055 2 919 2 
704 2 684 2 
135 2 919 2 
667 2 654 2 704 2 
667 2 170 2 909 2 
873 2 667 2 90 2 
667 2 629 2 417 2 
667 2 261 2 813 2 
704 2 519 2 
463 2 919 2 
170 2 863 2 
873 2 848 2 
844 2 417 2 
813 2 893 2 
704 2 673 2 
813 2 947 2 
793 2 417 2 
873 2 739 2 
170 2 1056 2 
667 2 654 2 704 2 983 2 
667 2 654 2 704 2 983 2 1089 2 
667 2 704 2 393 2 
667 2 704 2 687 2 
902 2 690 2 96 2 318 2 
169 2 874 2 692 2 816 2 
169 2 874 2 692 2 621 2 257 2 816 2 
169 2 874 2 1055 2 876 2 78 2 919 2 
323 2 1005 2 
169 2 874 2 11 2 78 2 
122 2 417 2 
813 2 543 2 
170 2 1020 2 
873 2 877 2 
873 2 813 2 734 2 
873 2 813 2 1018 2 
873 2 813 2 571 2 
873 2 140 2 813 2 
28 2 874 2 169 2 528 2 705 6 800 2 953 2 740 6 
704 2 375 2 
422 2 751 2 564 4 77 2 553 2 609 2 1009 2 467 2 969 2 339 6 141 2 40 4 658 2 510 2 580 2 101 2 549 2 72 2 
667 2 573 2 
494 2 
397 4 124 4 402 6 129 4 406 2 822 2 670 2 829 2 523 2 411 2 525 2 276 2 278 6 985 2 18 5 21 2 145 4 287 2 843 4 994 2 424 2 427 2 296 2 42 2 557 2 436 2 43 6 723 2 567 26 864 2 576 4 869 2 868 2 448 4 186 2 316 2 733 26 581 4 190 2 872 2 1028 2 595 2 598 4 605 6 607 2 465 2 1049 1 1052 2 470 2 769 2 225 2 227 1 928 2 481 2 371 2 240 2 1072 8 241 2 642 2 377 2 493 2 644 2 645 2 496 8 383 2 801 2 650 2 251 2 1084 2 503 2 390 2 254 2 955 2 957 2 255 2 1088 2 809 2 258 2 
397 4 124 4 402 6 129 4 406 2 822 2 670 2 829 2 523 2 411 2 525 2 276 2 278 6 985 2 18 6 21 2 145 2 287 2 843 4 994 2 424 2 423 2 706 2 427 2 296 2 1002 2 42 2 557 2 436 2 43 6 723 2 567 26 864 2 1012 2 576 4 869 2 868 2 448 4 316 2 733 26 581 4 190 2 872 2 1028 2 595 2 598 4 605 6 607 2 465 2 1049 2 1052 2 470 2 769 2 225 2 227 2 928 2 481 2 371 2 240 2 1072 8 241 2 642 2 377 2 493 2 644 2 645 2 496 8 383 2 801 2 650 2 251 2 1084 2 503 2 390 2 955 2 957 2 255 2 1088 2 809 2 
1042 2 
262 2 821 2 
452 6 326 2 328 10 518 4 127 2 970 2 129 2 338 4 819 2 520 2 971 2 67 4 273 2 7 2 1038 2 898 2 8 2 833 2 9 2 525 2 904 2 213 4 134 2 760 4 470 2 142 2 697 2 991 2 994 2 627 4 476 2 31 2 552 8 292 2 931 2 366 2 781 2 157 2 431 2 851 2 42 2 791 2 718 6 1073 4 493 2 43 4 381 8 307 2 567 6 47 2 950 2 864 2 572 2 728 2 390 2 958 6 1091 4 733 12 581 2 191 2 
452 6 326 2 328 10 518 4 127 2 129 2 970 2 338 4 819 2 520 2 971 2 67 4 273 2 7 2 1038 2 898 2 8 2 833 2 9 2 525 2 904 2 213 4 760 4 470 2 142 2 697 2 994 2 627 4 30 2 476 2 31 2 552 8 292 2 931 2 366 2 781 2 157 2 431 2 851 2 42 2 791 2 718 8 1073 4 493 2 43 4 380 2 381 8 566 2 567 6 307 2 47 2 950 2 864 2 572 2 728 2 390 2 958 8 1091 4 733 12 581 2 191 2 260 4 
9 2 627 4 213 4 452 2 47 2 326 2 931 2 518 2 950 2 338 2 728 2 520 2 971 2 142 2 67 2 718 2 898 2 8 2 
452 4 326 2 328 6 518 4 127 2 970 2 129 2 338 4 819 2 520 2 971 2 67 4 273 2 7 2 1038 2 898 2 8 2 833 2 9 2 525 2 904 2 213 4 134 2 760 4 470 2 142 2 697 2 991 2 994 2 627 4 30 2 476 2 31 2 552 4 292 2 931 2 366 2 781 2 157 2 431 2 851 2 42 2 718 6 1073 4 493 2 43 4 381 4 307 2 567 6 47 2 950 2 864 2 572 2 728 2 390 2 958 6 1091 4 733 12 581 2 191 2 
452 6 326 2 328 6 518 4 127 2 970 2 129 2 338 4 819 2 520 2 971 2 67 4 273 2 7 2 1038 2 898 2 8 2 833 2 9 2 525 2 904 2 213 4 134 2 758 2 760 4 470 2 142 2 697 2 991 2 994 2 627 4 476 2 31 2 552 4 292 2 931 2 366 2 781 2 157 2 431 2 851 2 42 2 718 4 1073 4 493 2 43 4 381 4 307 2 567 6 47 2 950 2 864 2 572 2 728 2 390 2 958 6 1091 4 733 12 581 2 191 2 
452 6 326 2 328 6 518 4 127 2 970 2 129 2 338 4 819 2 520 2 971 2 67 4 273 2 7 2 1038 2 898 2 8 2 833 2 9 2 525 2 904 2 213 4 134 2 760 4 470 2 142 2 697 2 991 2 994 2 627 4 476 2 31 2 552 4 292 2 931 2 366 2 781 2 157 2 431 2 851 2 42 2 791 2 718 6 1073 4 493 2 43 4 381 8 307 2 567 6 47 2 950 2 864 2 572 2 728 2 390 2 958 6 1091 4 733 12 581 2 191 2 
452 8 326 2 328 10 518 4 127 2 970 2 129 2 338 4 819 2 520 2 971 2 67 4 273 2 7 2 1038 2 898 2 8 2 833 2 9 2 525 2 904 2 213 4 134 2 758 2 760 4 470 2 142 2 697 2 991 2 994 2 627 4 476 2 31 2 552 8 292 2 931 2 366 2 781 2 157 2 431 2 851 2 42 2 791 2 718 6 1073 4 493 2 43 4 381 8 307 2 567 6 47 2 950 2 864 2 572 2 728 2 390 2 958 8 1091 4 733 12 581 2 191 2 
452 6 326 2 328 10 518 4 127 2 970 2 129 2 338 4 819 2 520 2 971 2 67 4 273 2 7 2 1038 2 898 2 8 2 833 2 9 2 525 2 904 2 213 4 134 2 760 4 470 2 142 2 697 2 991 2 994 2 627 4 476 2 31 2 552 8 292 2 931 2 366 2 781 2 157 2 431 2 851 2 42 2 791 2 718 6 1073 4 493 2 43 4 381 8 307 2 567 6 47 2 950 2 864 2 572 2 728 2 390 2 958 6 1091 4 733 12 581 2 191 2 
2 2 518 4 269 1 520 2 819 2 822 2 273 2 829 12 831 4 523 2 7 2 8 2 833 2 9 2 525 2 276 2 278 6 836 2 18 6 17 6 536 2 534 7 284 1 285 6 22 10 843 4 289 2 31 2 292 2 296 2 849 6 851 2 42 2 855 2 43 6 44 2 567 24 307 2 47 2 864 2 572 2 576 2 869 2 317 2 581 4 321 2 324 6 59 2 326 2 328 2 338 4 595 2 598 4 67 4 894 2 70 6 898 2 901 1 75 2 904 2 605 6 607 2 627 4 928 2 931 2 366 4 642 2 377 2 645 2 381 2 383 2 950 2 389 1 652 7 390 2 391 2 655 6 958 12 957 2 397 4 662 6 663 2 402 8 127 2 129 4 970 2 971 2 675 2 411 2 677 2 683 6 142 2 143 1 697 4 991 2 994 2 996 6 424 2 153 1 157 2 427 2 156 2 999 2 431 4 159 6 436 2 718 4 719 2 442 6 723 4 173 2 174 2 444 2 178 1 728 2 1015 2 733 46 191 2 452 8 736 2 198 8 206 2 209 6 1038 2 213 4 465 2 1049 2 758 4 760 8 470 2 1054 1 767 6 769 2 1060 6 476 2 225 2 227 2 776 2 781 2 481 2 236 6 1072 4 491 6 241 2 1073 6 493 2 1074 2 243 2 495 2 1078 1 496 4 801 2 1085 2 256 4 1088 2 509 2 1091 4 1092 2 1090 2 809 2 
397 4 2 2 662 6 663 2 518 4 124 2 402 8 127 2 970 2 129 4 819 2 520 2 971 2 822 2 273 2 829 12 523 2 831 4 7 2 675 2 833 2 8 2 411 2 677 2 9 2 525 2 276 2 278 6 683 6 836 2 17 6 18 6 536 2 285 6 22 10 142 2 991 2 697 4 843 4 994 2 289 2 996 6 424 4 31 2 292 2 156 2 427 2 157 2 294 2 159 6 431 4 999 2 849 6 296 2 851 2 42 2 436 2 718 8 719 2 855 2 442 6 43 6 44 2 723 4 173 2 174 2 307 2 567 26 47 2 444 2 864 2 572 2 576 2 728 2 869 2 1015 2 317 2 733 48 321 2 581 4 191 2 59 2 324 6 736 2 452 8 198 8 326 2 328 2 206 2 338 4 209 6 595 2 67 4 598 4 894 2 70 6 1038 2 898 2 75 2 904 2 213 4 605 6 607 2 465 2 1049 2 760 8 470 2 767 6 769 2 1060 6 627 4 476 2 225 2 227 2 776 2 928 2 931 2 366 4 781 2 481 2 236 6 791 4 1072 8 491 6 642 2 1073 6 241 2 377 2 1074 2 493 2 243 2 645 2 381 6 495 2 496 8 383 2 801 2 950 2 1085 2 391 2 390 2 655 6 957 4 958 12 256 4 509 2 1088 2 808 2 1090 2 1092 2 1091 4 809 4 
397 4 2 2 662 6 663 2 518 4 124 2 402 8 127 2 970 2 129 4 819 2 520 2 971 2 822 2 273 2 829 12 523 2 831 4 7 2 675 2 833 2 8 2 411 2 677 2 9 2 525 2 276 2 278 6 683 6 836 2 17 6 18 6 536 2 285 6 22 10 142 2 991 2 697 4 843 4 994 2 289 2 996 6 424 4 31 2 552 4 292 2 156 2 427 2 157 2 294 2 159 6 431 4 999 2 849 6 296 2 851 2 42 2 436 2 718 8 719 2 855 2 442 6 43 6 44 2 723 4 173 2 174 2 307 2 567 26 47 2 444 2 864 2 572 2 576 2 728 2 869 2 1015 2 317 2 733 48 321 2 581 4 191 2 59 2 324 6 736 2 452 8 198 8 326 2 328 6 206 2 338 4 209 6 595 2 67 4 598 4 894 2 70 6 1038 2 898 2 75 2 904 2 213 4 605 6 607 2 465 2 1049 2 760 8 470 2 767 6 769 2 1060 6 627 4 476 2 225 2 227 2 776 2 928 2 931 2 366 4 781 2 481 2 236 6 791 4 1072 8 491 6 642 2 1073 6 241 2 377 2 1074 2 493 2 243 2 645 2 381 6 495 2 496 8 383 2 801 2 950 2 1085 2 391 2 390 2 655 6 957 4 958 12 256 4 509 2 1088 2 808 2 1090 2 1092 2 1091 4 809 4 
0 6 2 2 518 4 817 6 520 2 819 2 822 4 273 2 829 10 523 2 831 4 7 2 8 2 833 2 9 2 525 2 276 2 278 8 836 2 18 6 17 6 536 2 285 6 22 8 843 4 289 2 30 2 31 2 552 4 292 2 294 2 296 2 849 12 851 2 42 2 300 2 855 2 43 6 44 2 859 6 567 24 307 2 47 2 570 2 864 2 572 2 576 4 869 2 314 2 317 2 581 4 321 2 582 6 59 2 324 6 875 6 326 2 328 6 332 6 338 4 593 2 595 2 598 6 67 4 894 2 70 6 898 2 75 2 904 2 605 8 607 4 357 2 627 4 928 2 931 2 366 4 642 2 377 2 645 2 381 6 383 2 950 2 390 2 391 2 655 12 958 16 957 4 397 4 662 6 663 2 124 2 402 12 127 2 129 4 970 2 971 2 675 2 411 4 677 2 683 6 142 2 697 4 991 2 994 2 996 6 424 4 156 2 157 2 427 4 431 4 159 12 436 2 718 10 719 2 442 12 723 4 173 2 174 2 444 2 728 2 1015 2 733 52 191 2 452 10 736 2 198 8 206 2 1032 2 209 12 1038 2 213 4 465 2 1049 2 758 2 760 8 470 2 767 6 769 2 770 2 1060 12 772 6 476 2 225 2 1064 2 227 2 776 2 781 2 481 2 482 6 236 6 791 4 1072 10 491 6 241 2 1073 6 493 2 1074 2 794 6 243 2 495 2 496 10 801 2 1085 2 256 4 509 2 1088 2 808 2 1091 4 1092 2 1090 2 809 4 
627 2 31 2 552 4 292 2 452 6 326 2 328 4 157 2 518 4 127 2 970 2 338 4 520 2 971 2 791 2 718 6 1073 2 1038 2 7 2 833 2 8 2 9 2 381 6 904 2 213 2 307 2 728 2 760 2 142 2 958 4 733 4 1091 2 991 2 697 2 191 2 
397 4 119 2 518 4 402 8 127 2 129 4 970 2 520 2 971 2 975 2 521 2 829 4 523 2 7 2 833 2 8 2 411 3 9 2 525 2 276 2 278 6 18 6 22 2 142 2 991 2 697 2 994 2 843 4 31 2 292 2 33 2 427 3 157 2 999 2 296 2 42 2 436 2 718 6 304 2 43 6 723 2 307 2 567 24 864 2 576 3 728 2 869 2 733 28 581 4 191 2 452 6 326 2 328 2 338 4 595 2 598 4 1038 2 904 2 349 2 213 2 605 6 464 3 1049 2 760 2 470 2 769 2 627 2 476 2 225 2 227 2 928 2 481 2 486 2 791 2 1073 2 241 2 642 2 377 2 494 2 493 2 645 2 381 6 111 2 383 2 801 2 390 2 958 4 1088 2 1091 2 
345 2 1038 2 191 2 
345 2 1038 2 191 2 
397 4 814 2 518 4 402 2 129 4 403 2 819 2 971 2 271 2 668 2 273 2 829 4 831 2 523 2 8 4 833 2 9 2 525 2 276 2 278 2 836 2 17 2 18 6 22 2 145 2 694 2 148 2 697 4 843 4 994 2 30 4 424 4 152 2 552 4 709 2 431 4 296 2 42 2 436 2 718 12 439 2 43 6 723 6 567 16 307 2 47 2 864 2 572 2 50 2 576 2 447 2 869 2 733 24 581 4 190 4 191 4 192 2 452 12 328 6 206 2 338 4 742 2 595 2 67 4 345 2 1038 6 213 2 605 2 465 4 1049 2 758 4 760 4 470 2 622 4 769 2 1061 2 627 2 225 2 227 2 928 2 632 4 366 2 791 4 1072 4 374 2 1073 4 241 2 642 2 377 2 493 2 645 2 381 6 497 2 496 4 383 2 801 2 950 2 390 2 957 4 958 16 256 2 1088 2 1090 2 1091 2 809 4 661 2 
262 2 212 2 814 2 736 2 567 2 156 2 17 2 864 2 403 2 22 2 936 2 638 2 256 2 439 2 829 2 733 4 898 2 
397 4 814 2 518 4 402 2 129 4 403 2 819 2 971 2 271 2 668 2 273 2 829 2 831 2 523 2 8 4 833 2 9 2 525 2 276 2 278 2 836 2 17 2 18 6 694 2 148 4 697 4 843 4 994 2 30 4 424 4 152 2 552 4 709 2 431 4 296 2 851 2 42 2 436 2 716 2 718 12 439 2 43 6 723 6 567 16 307 2 47 2 864 2 572 2 576 4 869 2 733 24 581 4 190 4 191 4 452 12 328 6 331 2 206 2 338 4 742 2 595 2 67 4 345 2 1038 6 213 2 605 2 465 4 1049 2 758 4 760 4 470 2 622 4 769 2 918 2 1061 2 627 2 225 2 226 2 227 2 928 2 632 4 366 4 791 4 1072 4 1073 4 241 2 642 2 377 2 493 2 645 2 944 2 381 6 497 2 496 4 383 2 801 2 950 2 390 2 957 4 958 16 1088 2 1090 2 1091 2 809 4 661 2 
397 4 814 2 518 4 402 2 129 4 403 2 819 2 971 2 271 2 668 2 273 2 829 4 831 2 523 2 8 4 833 2 9 2 525 2 982 2 276 2 278 2 836 2 17 2 18 6 22 2 145 1 694 2 148 2 25 2 697 4 843 4 994 2 30 4 424 4 152 2 552 4 709 2 431 4 296 2 851 2 42 2 436 2 718 12 439 2 43 6 723 6 567 16 307 2 47 2 864 2 572 2 576 2 869 2 733 24 55 2 581 4 190 4 191 4 452 12 328 6 206 2 338 4 742 2 595 2 67 4 345 2 1038 6 213 2 605 2 465 4 1049 2 758 4 760 4 470 2 84 2 622 4 769 2 1061 2 627 2 225 2 227 2 928 2 632 4 366 4 639 2 791 4 1072 4 1073 4 241 2 642 2 377 2 493 2 645 2 381 6 497 2 496 4 383 2 801 2 950 2 390 2 957 4 958 16 256 2 1088 2 1090 2 1091 2 809 4 661 2 
514 2 517 6 3 2 4 2 5 2 6 4 522 2 10 1 525 2 526 12 12 2 18 152 536 4 535 10 19 2 539 2 541 6 23 2 547 2 548 27 26 10 551 2 33 2 555 28 556 4 37 10 41 10 42 2 558 4 559 4 563 2 43 6 565 20 567 144 49 16 576 28 575 2 51 2 577 4 54 14 581 4 584 10 56 10 58 2 60 2 587 3 589 2 592 6 593 2 595 4 597 2 598 12 73 2 602 10 76 4 603 10 605 14 607 46 81 4 614 1 620 2 625 10 85 8 626 12 87 2 88 10 630 10 92 10 93 2 634 2 635 2 637 2 97 2 100 2 642 4 645 14 110 6 109 10 648 2 651 2 650 2 653 18 659 1 115 18 116 4 660 72 118 4 119 2 664 10 125 20 666 16 129 4 670 2 132 2 676 2 675 2 681 10 682 4 136 2 137 2 688 10 146 4 147 2 695 2 696 2 700 6 701 2 703 10 711 3 714 2 715 2 163 6 162 6 165 4 717 4 721 6 168 2 723 2 724 2 176 4 177 6 725 2 180 2 729 2 730 16 731 2 733 192 193 10 737 1 199 2 201 20 203 20 743 2 747 2 749 10 211 6 752 2 753 22 214 2 215 2 757 2 217 2 759 8 761 2 762 10 763 8 764 12 766 2 768 2 769 2 221 2 770 2 224 2 225 2 774 6 773 20 227 42 777 1 779 2 780 2 231 3 232 6 234 6 784 12 235 22 787 12 790 1 241 2 242 10 244 6 796 20 797 10 246 2 801 2 799 6 802 6 251 2 804 2 253 2 805 2 806 1 255 2 259 2 265 2 815 6 267 4 822 24 824 1 827 4 826 6 828 2 830 2 829 2 834 22 275 2 276 2 278 14 277 4 280 3 281 2 838 6 839 10 287 2 841 2 288 2 843 58 291 2 845 6 293 2 846 2 295 4 296 2 300 2 853 4 854 2 303 6 304 2 305 4 860 2 309 2 864 2 311 4 867 20 869 4 868 20 315 4 314 2 870 2 321 2 871 2 322 2 878 4 880 4 334 2 881 10 883 2 337 2 884 4 336 2 886 4 887 16 342 2 343 7 344 2 894 2 897 2 347 4 900 14 348 2 903 2 906 2 351 3 910 8 912 2 353 8 355 2 357 2 917 10 359 2 360 2 362 10 364 2 925 2 928 2 365 2 367 10 371 2 377 2 376 2 379 2 946 11 949 2 383 2 390 2 391 2 954 16 955 2 392 8 394 10 959 10 395 2 961 2 962 2 397 68 967 4 400 10 401 4 968 22 402 40 406 2 407 48 974 2 975 2 409 2 977 10 411 28 979 4 980 4 412 8 413 2 414 2 415 4 416 20 986 2 418 4 990 4 993 3 992 2 420 24 994 2 425 4 428 2 427 16 998 2 429 4 430 4 1001 18 436 14 1004 6 438 2 1010 10 445 18 1011 2 446 1 1014 14 1019 2 1023 6 449 4 1025 2 1026 2 453 6 1031 2 1032 2 1034 2 1043 2 1045 2 464 2 465 4 466 3 1049 42 1048 4 1051 20 470 2 469 10 471 2 1057 20 472 18 474 15 1064 4 1065 10 477 2 478 2 479 10 1067 4 481 2 1069 4 483 3 484 2 487 2 1070 22 488 3 1072 42 493 2 1074 2 496 45 1079 2 499 2 500 2 1080 4 1082 2 1083 2 503 2 1087 2 508 2 1088 2 1092 2 1093 1 513 16 
701 2 703 2 797 4 567 2 278 2 605 2 607 6 427 2 92 2 281 2 481 2 587 2 402 2 803 2 93 2 336 2 576 2 51 2 598 2 23 2 508 2 733 2 897 2 411 2 
701 2 703 2 797 4 567 2 278 2 605 2 607 6 427 2 92 2 281 2 481 2 587 2 402 2 803 2 93 2 336 2 576 2 51 2 598 2 23 2 508 2 733 2 897 2 411 2 
701 2 703 2 797 4 567 2 278 2 605 2 607 6 427 2 92 2 281 2 481 2 587 2 402 2 803 2 93 2 336 2 576 2 51 2 598 2 23 2 508 2 733 2 897 2 411 2 
701 2 474 5 475 2 517 4 481 2 402 2 63 2 232 2 267 2 884 2 887 4 592 2 342 2 407 6 891 2 853 2 441 2 347 2 411 3 900 2 526 4 412 2 567 4 79 2 49 4 113 4 910 2 114 2 576 3 52 2 730 4 764 3 82 3 315 2 733 10 583 2 626 3 85 2 920 2 513 4 
517 4 402 2 267 2 63 2 884 2 887 4 592 2 342 2 407 6 891 2 896 2 411 2 347 2 900 2 526 4 412 2 79 2 910 2 764 2 82 2 85 2 626 2 920 2 701 2 475 2 474 4 774 2 481 2 232 2 165 2 853 2 441 2 567 4 113 4 49 4 114 2 576 2 730 4 52 2 315 2 733 10 583 2 513 4 
517 4 402 2 267 2 63 2 884 2 887 4 592 2 342 2 407 6 891 2 896 2 411 2 347 2 900 2 526 4 412 2 79 2 910 2 764 2 82 2 85 2 626 2 920 2 701 2 475 2 474 4 774 2 481 2 232 2 165 2 853 2 441 2 567 4 113 4 49 4 114 2 576 2 730 4 52 2 315 2 733 10 583 2 513 4 
517 4 402 2 267 2 63 2 884 2 887 4 592 2 342 2 407 6 891 2 896 2 411 2 347 2 900 2 526 4 412 2 79 2 910 2 764 2 82 2 85 2 626 2 920 2 701 2 475 2 474 4 774 2 481 2 232 2 165 2 853 2 441 2 567 4 113 4 49 4 114 2 576 2 730 4 52 2 315 2 733 10 583 2 513 4 
517 4 402 2 267 2 63 2 884 2 887 4 592 2 342 2 407 6 891 2 896 4 411 2 347 2 900 2 526 4 412 2 79 2 910 2 764 2 82 2 85 2 626 2 920 2 701 2 475 2 474 4 774 4 481 2 232 2 165 4 853 2 441 2 567 4 113 4 49 4 114 2 576 2 730 4 52 2 315 2 733 10 583 2 513 4 
973 2 916 2 214 2 421 2 104 2 748 2 
858 2 964 2 98 2 868 2 997 2 916 2 643 2 
473 1 266 1 230 2 708 2 1068 1 885 1 849 2 789 2 460 2 601 2 567 8 531 2 568 2 46 2 608 2 216 1 987 2 250 2 388 2 252 2 181 2 390 2 220 2 733 10 1021 2 698 2 
1024 2 474 16 517 4 774 5 478 2 966 2 267 2 713 2 884 6 239 4 165 2 853 6 896 2 347 6 210 2 526 12 980 2 412 6 567 6 110 4 604 2 910 6 137 2 574 2 577 2 505 2 315 6 733 6 85 6 396 2 
515 2 363 6 567 1 108 2 665 1 15 2 49 2 454 2 38 2 161 2 591 4 887 2 730 2 356 2 372 2 895 2 733 1 373 2 
515 2 363 6 108 4 15 2 49 2 454 2 161 2 38 2 591 4 887 2 730 2 356 4 372 2 895 2 373 4 
515 2 363 10 567 1 108 8 665 1 15 2 49 2 454 2 161 8 38 2 591 4 887 2 730 2 356 8 372 2 895 6 733 1 373 8 
515 2 363 2 108 2 15 2 49 2 454 2 38 2 591 2 887 2 730 2 356 2 372 2 373 2 
397 18 664 2 400 2 401 2 125 4 128 2 405 2 830 2 834 4 977 2 524 1 10 2 277 2 280 2 685 2 18 32 535 2 688 2 418 2 839 2 548 2 993 3 843 16 26 2 425 2 429 2 555 16 37 2 295 2 41 2 436 6 559 1 438 2 567 34 176 2 1010 2 312 2 867 4 869 4 733 38 584 2 56 2 193 2 1026 2 737 2 878 2 201 4 203 4 881 2 1034 2 343 3 749 2 602 2 603 2 753 2 1049 4 1048 2 1051 5 614 2 218 2 762 2 469 2 1057 4 917 2 625 2 362 2 88 2 1065 2 227 4 630 2 479 2 231 1 367 2 1069 2 1070 4 235 4 787 6 790 2 242 2 645 6 647 2 946 4 496 4 109 2 952 2 806 2 394 2 959 2 660 14 1093 2 
397 20 1026 2 664 2 737 4 330 2 201 4 125 2 203 4 128 2 270 2 405 2 972 2 745 4 830 2 71 2 832 2 978 2 981 4 602 2 835 2 416 6 14 2 686 2 16 2 18 42 688 2 1050 2 1051 2 839 2 762 2 540 2 765 2 468 2 358 2 1057 2 145 2 221 4 24 2 1058 2 843 20 924 2 362 2 29 2 929 2 631 2 367 2 36 2 932 2 1000 2 933 2 934 2 94 2 299 2 433 2 41 2 788 2 490 2 436 2 438 2 1007 2 492 2 242 2 941 4 645 2 647 2 946 6 172 2 498 2 496 38 567 44 861 2 247 2 385 2 1010 2 865 2 952 2 179 2 1086 2 182 2 867 4 806 2 956 2 869 2 394 2 1016 2 187 2 733 46 319 2 660 6 57 2 
397 20 664 2 400 2 401 2 125 6 128 2 405 2 830 2 131 2 834 2 977 2 10 2 277 2 280 2 18 40 535 2 688 2 418 2 839 4 540 2 840 2 144 2 419 2 993 2 843 18 26 2 29 2 425 2 290 8 429 2 555 14 295 2 37 2 712 2 432 2 41 2 436 4 852 2 438 2 167 8 302 2 567 40 176 2 867 4 869 2 313 2 1016 2 733 44 584 2 1026 2 737 2 878 2 330 6 201 4 203 4 881 2 741 4 343 4 603 2 1048 2 1049 6 1051 6 218 2 765 6 469 4 1057 4 917 2 361 2 88 2 1063 2 1065 2 227 6 479 2 367 2 1069 2 235 6 1070 6 1071 8 787 6 790 2 489 2 1075 2 645 4 647 2 496 14 107 2 109 2 952 2 956 6 959 2 660 10 
397 14 1026 2 664 2 737 2 201 6 203 6 125 2 128 2 405 2 1034 4 972 2 343 6 830 2 10 2 602 4 753 2 280 4 685 2 18 38 1049 10 688 2 614 2 1051 2 839 2 762 4 355 2 145 2 1057 2 548 10 843 14 362 4 29 2 227 10 777 2 231 2 367 2 555 10 41 2 790 2 436 2 559 2 438 2 242 4 645 2 647 2 946 6 496 14 567 26 1010 4 865 2 952 2 446 2 179 2 312 2 867 6 869 2 394 4 659 2 733 28 660 8 1093 2 
398 2 
461 1 219 1 930 1 264 1 99 1 166 1 
461 1 219 1 930 1 264 1 99 1 166 1 
461 1 219 1 930 1 264 1 99 1 166 1 
461 1 219 1 930 1 264 1 99 1 166 1 
461 1 219 1 930 1 264 1 99 1 166 1 
461 1 219 1 930 1 264 1 99 1 166 1 
461 1 219 1 930 1 264 1 99 1 166 1 
461 1 219 1 930 1 264 1 99 1 166 1 
461 1 219 1 930 1 264 1 99 1 166 1 
461 1 219 1 930 1 264 1 99 1 166 1 
461 1 219 1 930 1 264 1 99 1 166 1 
461 1 219 1 930 1 264 1 99 1 166 1 
461 1 219 1 930 1 264 1 99 1 166 1 
461 1 219 1 930 1 264 1 99 1 166 1 
461 1 219 1 930 1 264 1 99 1 166 1 
461 1 219 1 930 1 264 1 99 1 166 1 
461 1 219 1 930 1 264 1 99 1 166 1 
461 1 219 1 930 1 264 1 99 1 166 1 
461 1 219 1 930 1 264 1 99 1 166 1 
461 1 219 1 930 1 264 1 99 1 166 1 
461 1 219 1 930 1 264 1 99 1 166 1 
461 1 219 1 930 1 264 1 99 1 166 1 
461 1 219 1 930 1 264 1 99 1 166 1 
461 1 219 1 930 1 264 1 99 1 166 1 
461 1 219 1 930 1 264 1 99 1 166 1 
461 1 219 1 930 1 264 1 99 1 166 1 
461 1 219 1 930 1 264 1 99 1 166 1 
461 1 219 1 930 1 264 1 99 1 166 1 
461 1 219 1 930 1 264 1 99 1 166 1 
461 1 219 1 930 1 264 1 99 1 166 1 
461 1 219 1 930 1 264 1 99 1 166 1 
461 1 219 1 930 1 264 1 99 1 166 1 
461 1 219 1 930 1 264 1 99 1 166 1 
461 1 219 1 930 1 264 1 99 1 166 1 
461 1 219 1 930 1 264 1 99 1 166 1 
461 1 219 1 930 1 264 1 99 1 166 1 
461 1 219 1 930 1 264 1 99 1 166 1 
461 1 219 1 930 1 264 1 99 1 166 1 
461 1 219 1 930 1 264 1 99 1 166 1 
461 1 219 1 930 1 264 1 99 1 166 1 
461 1 219 1 930 1 264 1 99 1 166 1 
461 1 219 1 930 1 264 1 99 1 166 1 
461 1 219 1 930 1 264 1 99 1 166 1 
461 1 219 1 930 1 264 1 99 1 166 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR daikon.config.Configuration$ConfigException (449,497,593,609,1218) (449,497,593,609,1218) (449,497,593,609,1218) (449,497,593,609,1218) 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.NullPointerException (17,53,78,89,154,255,273,343,425,447,476,551,562,600,605,658,673,756,768,811,812,853,906,928,958,1083,1121,1122,1136,1140,1198,1207) 348 (17,53,78,89,154,255,273,343,425,447,476,551,562,600,605,658,673,756,768,811,812,853,906,928,958,1083,1121,1122,1136,1140,1198,1207) 950 (17,53,78,89,154,255,273,343,425,447,476,551,562,600,605,658,673,756,768,811,812,853,906,928,958,1083,1121,1122,1136,1140,1198,1207) 949 (17,53,78,89,154,255,273,343,425,447,476,551,562,600,605,658,673,756,768,811,812,853,906,928,958,1083,1121,1122,1136,1140,1198,1207) 340 (17,53,78,89,154,255,273,343,425,447,476,551,562,600,605,658,673,756,768,811,812,853,906,928,958,1083,1121,1122,1136,1140,1198,1207) 1139 (17,53,78,89,154,255,273,343,425,447,476,551,562,600,605,658,673,756,768,811,812,853,906,928,958,1083,1121,1122,1136,1140,1198,1207) 867 (17,53,78,89,154,255,273,343,425,447,476,551,562,600,605,658,673,756,768,811,812,853,906,928,958,1083,1121,1122,1136,1140,1198,1207) 140 (17,53,78,89,154,255,273,343,425,447,476,551,562,600,605,658,673,756,768,811,812,853,906,928,958,1083,1121,1122,1136,1140,1198,1207) 178 34 (17,53,78,89,154,255,273,343,425,447,476,551,562,600,605,658,673,756,768,811,812,853,906,928,958,1083,1121,1122,1136,1140,1198,1207) 975 34 (17,53,78,89,154,255,273,343,425,447,476,551,562,600,605,658,673,756,768,811,812,853,906,928,958,1083,1121,1122,1136,1140,1198,1207) 535 (17,53,78,89,154,255,273,343,425,447,476,551,562,600,605,658,673,756,768,811,812,853,906,928,958,1083,1121,1122,1136,1140,1198,1207) 871 (17,53,78,89,154,255,273,343,425,447,476,551,562,600,605,658,673,756,768,811,812,853,906,928,958,1083,1121,1122,1136,1140,1198,1207) 765 34 (17,53,78,89,154,255,273,343,425,447,476,551,562,600,605,658,673,756,768,811,812,853,906,928,958,1083,1121,1122,1136,1140,1198,1207) 1210 34 (17,53,78,89,154,255,273,343,425,447,476,551,562,600,605,658,673,756,768,811,812,853,906,928,958,1083,1121,1122,1136,1140,1198,1207) 14 34 (17,53,78,89,154,255,273,343,425,447,476,551,562,600,605,658,673,756,768,811,812,853,906,928,958,1083,1121,1122,1136,1140,1198,1207) 753 (17,53,78,89,154,255,273,343,425,447,476,551,562,600,605,658,673,756,768,811,812,853,906,928,958,1083,1121,1122,1136,1140,1198,1207) 871 (17,53,78,89,154,255,273,343,425,447,476,551,562,600,605,658,673,756,768,811,812,853,906,928,958,1083,1121,1122,1136,1140,1198,1207) 1086 611 34 (17,53,78,89,154,255,273,343,425,447,476,551,562,600,605,658,673,756,768,811,812,853,906,928,958,1083,1121,1122,1136,1140,1198,1207) 14 34 (17,53,78,89,154,255,273,343,425,447,476,551,562,600,605,658,673,756,768,811,812,853,906,928,958,1083,1121,1122,1136,1140,1198,1207) 1174 (17,53,78,89,154,255,273,343,425,447,476,551,562,600,605,658,673,756,768,811,812,853,906,928,958,1083,1121,1122,1136,1140,1198,1207) 871 (17,53,78,89,154,255,273,343,425,447,476,551,562,600,605,658,673,756,768,811,812,853,906,928,958,1083,1121,1122,1136,1140,1198,1207) 435 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 782 395 746 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.inv.unary.UpperBoundCore:computeConfidence()D
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:subsetOf([F[D)Z
jtb.JavaParser:jj_3R_107()Z
jtb.JavaParser:jj_3R_88()Z
jtb.syntaxtree.NodeSequence:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;)V
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
jtb.syntaxtree.MethodDeclarator:accept(Ljtb.visitor.Visitor;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
jtb.JavaParser:jj_3R_137()Z
jtb.JavaParser:jj_3R_81()Z
jtb.JavaParser:jj_3_30()Z
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Invariant:isWorthPrinting()Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.Quant:pairwiseSquare([I[I)Z
jtb.syntaxtree.NodeChoice:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:pairwiseGTE([I[I)Z
daikon.diff.Node:children()Ljava.util.Iterator;
utilMDE.MathMDE:bitwiseComplement(I)I
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.PptTopLevel:getInvariants()Ljava.util.List;
utilMDE.OrderedPairIterator:hasNext()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
jtb.JavaParser:jj_3_5()Z
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.PptSlice0.ImplicationWrapper:hashCode()I
jtb.JavaParser:jj_3_16()Z
jtb.JavaParser:jj_3_25()Z
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:calc_range()J
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.CompilationUnit;)V
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
jtb.JavaParser:jj_2_1(I)Z
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
jtb.JavaParser:jj_3R_162()Z
daikon.inv.Invariant:logDetail()Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
jtb.JavaParser:jj_3R_53()Z
jtb.JavaParser:jj_3R_161()Z
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
jtb.JavaParser:jj_3R_76()Z
daikon.inv.Invariant:logOn()Z
daikon.Quant:eltsEqualIndex([I)Z
daikon.Quant:isReverse([I[I)Z
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:eq(II)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalAndExpression;)V
daikon.inv.Invariant:prob_and(DD)D
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_133()Z
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
utilMDE.ArraysMDE:element_range([I)I
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.Quant:memberOf(J[J)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Name;)V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
jtb.JavaParser:jj_2_5(I)Z
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
utilMDE.ArraysMDE:min([I)I
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
daikon.Quant:memberOf(S[S)Z
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3_35()Z
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.PptSlice0:arity()I
jtb.JavaParser:jj_3R_163()Z
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName:hashCode()I
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.Quant:subsetOf([D[D)Z
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeOptional:present()Z
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.UpperBoundCore:calc_range()J
jtb.syntaxtree.Modifiers:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
jtb.JavaParser:jj_3R_56()Z
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
daikon.Quant:intersection([I[I)[I
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
jtb.syntaxtree.NodeOptional:accept(Ljtb.visitor.Visitor;)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.ArraysMDE:sum([[I)I
utilMDE.MathMDE:nonmodulus_strict([I)[I
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
jtb.JavaParser:jj_3_15()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.Quant:subsetOf([F[F)Z
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalExpression;)V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
jtb.JavaParser:jj_3R_148()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.PptSlice0:initInvariantsSeen()V
daikon.ValueTuple:isMissing(I)Z
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.Quant:memberOf(F[D)Z
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
jtb.JavaParser:jj_3R_106()Z
daikon.Quant:eq(JJ)Z
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceBody:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:pairwiseDivides([I[I)Z
jtb.syntaxtree.ReturnStatement:accept(Ljtb.visitor.Visitor;)V
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.Quant:eltwiseLT([I)Z
utilMDE.MathMDE:negate(I)I
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.JavaParser:jj_3R_121()Z
utilMDE.MathMDE:missing_numbers([I)[I
jtb.JavaCharStream:readChar()C
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Quant:subsetOf([B[I)Z
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.diff.PrintAllVisitor:bufPrintln()V
jtb.JavaParser:jj_3R_110()Z
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
jtb.JavaParser:jj_scan_token(I)Z
daikon.Quant:memberOf(D[F)Z
utilMDE.Intern:internStrings([Ljava.lang.String;)V
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_210()Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.Quant:lte(II)Z
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_2_36(I)Z
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:lexNotEqual([I[I)Z
jtb.syntaxtree.TypeDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_2_3(I)Z
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3_21()Z
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.ProglangType:baseIsIntegral()Z
daikon.Quant:slice([III)[I
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
utilMDE.MathMDE:pow_fast(II)I
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_ntk()I
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.Quant:eltwiseGT([I)Z
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.inv.filter.InvariantFilters:InvariantFilters()V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
jtb.syntaxtree.FormalParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
jtb.JavaParser:jj_3R_70()Z
daikon.test.TestAst.ClassOrInterfaceDeclarationHarvester:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameters;)V
jtb.syntaxtree.TypeParameters:accept(Ljtb.visitor.Visitor;)V
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
jtb.syntaxtree.VariableDeclaratorId:VariableDeclaratorId(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaCharStream:getBeginLine()I
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.Debug:logOn()Z
utilMDE.LimitedSizeIntSet:size()I
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ImportDeclaration;)V
utilMDE.Intern.SequenceAndIndices:hashCode()I
utilMDE.ArraysMDE:indexOf([II)I
jtb.JavaParser:jj_2_15(I)Z
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
jtb.JavaParser:VariableDeclaratorId()Ljtb.syntaxtree.VariableDeclaratorId;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
daikon.Quant:gt(II)Z
jtb.JavaParser:jj_3R_96()Z
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:eltwiseLTE([I)Z
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_87()Z
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
jtb.JavaParser:jj_3R_89()Z
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
jtb.JavaParser:jj_3R_85()Z
jtb.JavaParser:jj_2_16(I)Z
jtb.JavaParser:jj_3R_54()Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_77()Z
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3_19()Z
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Invariant:justified()Z
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
jtb.JavaParser:jj_3R_115()Z
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
jtb.JavaParser:jj_3_14()Z
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:intern([I)[I
daikon.VarInfo:name()Ljava.lang.String;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
jtb.JavaCharStream:getEndLine()I
daikon.Quant:eltsGtIndex([I)Z
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
jtb.syntaxtree.ConditionalOrExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.SimpleLog.LongVal:LongVal(J)V
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeToken;)V
utilMDE.Intern:internSubsequence([III)[I
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression; | RETURN | 64861 | return null
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
jtb.syntaxtree.ExclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:concat([I[I)[I
jtb.Token:newToken(I)Ljtb.Token;
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.VarInfo:new_ppt()V
jtb.syntaxtree.ClassOrInterfaceBody:ClassOrInterfaceBody(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.VarInfoName.Simple:isLiteralConstant()Z
jtb.JavaParser:jj_3_28()Z
jtb.JavaParser:jj_3R_102()Z
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat()V
utilMDE.ArraysMDE:fn_identity(I)[I
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.Quant:eltsEqual([II)Z
jtb.JavaParser:jj_3_20()Z
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.FormalParameter:FormalParameter(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Type;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.VariableDeclaratorId;)V
jtb.JavaParser:jj_3R_80()Z
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
utilMDE.MathMDE:mod_positive(II)I
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeListOptional:elements()Ljava.util.Enumeration;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
jtb.JavaParser:FormalParameter()Ljtb.syntaxtree.FormalParameter;
jtb.JavaParser:jj_3_29()Z
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:gte(DD)Z
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:gte(II)Z
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3_18()Z
utilMDE.ArraysMDE:max([I)I
jtb.JavaParser:jj_3R_55()Z
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
jtb.syntaxtree.TypeParameter:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Add:amount()Ljava.lang.String;
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.PptName:isCombinedExitPoint()Z
jtb.JavaParser:jj_3R_109()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
jtb.JavaParser:getToken(I)Ljtb.Token;
utilMDE.FuzzyFloat:gt(DD)Z
jtb.JavaParser:jj_3R_118()Z
jtb.JavaParser:jj_2_13(I)Z
daikon.config.Configuration.ConfigException:ConfigException(Ljava.lang.String;)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclarator;)V
utilMDE.WeakIdentityHashMap:indexFor(II)I
jtb.JavaParser:jj_2_12(I)Z
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
jtb.JavaParser:jj_3R_99()Z
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments;
jtb.syntaxtree.CompilationUnit:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:lexLT([I[I)Z
jtb.JavaParser:jj_3_1()Z
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
jtb.JavaParser:jj_3R_67()Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameter;)V
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V | OPERATOR | 5137 | + -> /
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.PptSlice1:arity()I
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:noDups([I)Z
utilMDE.ArraysMDE:subarray([III)[I
jtb.JavaParser:jj_3R_149()Z
utilMDE.Options.OptionInfo:argument_required()Z
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.VarInfoName.NodeFinder:inPre()Z
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.VarInfoName:simplify_name()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReferenceType;)V
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.ModBitTracker:num_samples()I
daikon.Quant:eltsGTE([II)Z
daikon.Quant:eltwiseGTE([I)Z
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_134()Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
utilMDE.WeakHasherMap:processQueue()V
utilMDE.ArraysMDE:sum([I)I
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:computeConfidence()D
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_104()Z
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.inv.unary.UpperBoundCore:calc_modulus()J
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_2_4(I)Z
daikon.Quant:eq(DD)Z
daikon.Quant:lexGTE([I[I)Z
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:concat([I[I)[I
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.JavaParser:jj_3R_108()Z
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
jtb.JavaCharStream:FillBuff()V
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
jtb.syntaxtree.BlockStatement:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.Quant:pairwiseLT([I[I)Z
utilMDE.MathMDE:pow(II)I
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3R_124()Z
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
utilMDE.ArraysMDE:min_max([I)[I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.VarInfoName:isLiteralConstant()Z
daikon.Debug:logDetail()Z
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.ProglangType:isScalar()Z
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3_27()Z
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_2_10(I)Z
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE:sorted([I)Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.NodeList:NodeList()V
jtb.JavaParser:jj_3R_169()Z
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ExclusiveOrExpression;)V
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Expression;)V
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_49()Z
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.ClassOrInterfaceDeclaration:ClassOrInterfaceDeclaration(Ljtb.syntaxtree.NodeChoice;Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ClassOrInterfaceBody;)V
utilMDE.ArraysMDE:sum([D)D
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariants:Invariants()V
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3_22()Z
utilMDE.FuzzyFloat:ne(DD)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
jtb.syntaxtree.ResultType:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
jtb.JavaParser:jj_3_4()Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
utilMDE.ArraysMDE:sum([[D)D
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:pairwiseNotEqual([I[I)Z
jtb.JavaCharStream:UpdateLineColumn(C)V
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:subsetOf([D[F)Z
jtb.JavaParser:jj_3R_72()Z
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
utilMDE.WeakHasherMap:size()I
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Type;)V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.Quant:eltsLTE([II)Z
daikon.Quant:eltsGT([II)Z
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.Quant:lexEqual([I[I)Z
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.Intern:numIntArrays()I
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
jtb.JavaParser:jj_3R_97()Z
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.Quant:pairwiseGT([I[I)Z
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_50()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.Quant:lexLTE([I[I)Z
utilMDE.MathMDE:gcd([I)I
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:internSubsequence([JII)[J
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
jtb.JavaCharStream:getEndColumn()I
daikon.ModBitTracker:num_sets()I
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.VarInfo:relate_var()V
daikon.inv.Invariant:format()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
utilMDE.LimitedSizeIntSet:add(I)V
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
jtb.syntaxtree.CompilationUnit:CompilationUnit(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.TypeDeclaration:TypeDeclaration(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3R_116()Z
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat; | RETURN | 1511 | return null
utilMDE.Intern:intern([J)[J
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
jtb.syntaxtree.VariableDeclaratorId:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaCharStream:BeginToken()C
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.MathMDE:modulus([I)[I
daikon.ProglangType:dimensions()I
daikon.Quant:ne(II)Z
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.PptTopLevel:name()Ljava.lang.String;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:lexGT([I[I)Z
daikon.inv.Invariant:prob_and(DDD)D
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
utilMDE.MathMDE:gcd_differences([I)I
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_62()Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.test.InvariantFormatTester:execute()Z
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_119()Z
jtb.JavaParser:jj_3R_120()Z
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
jtb.syntaxtree.Block:accept(Ljtb.visitor.Visitor;)V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBody;)V
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ClassOrInterfaceType:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
jtb.JavaParser:jj_3R_73()Z
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:indexOf([ZZ)I
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
daikon.diff.RootNode:RootNode()V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.Quant:subsetOf([I[I)Z
jtb.JavaParser:jj_3R_58()Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
utilMDE.MathMDE:sign(I)I
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
utilMDE.FuzzyFloat:eq(DD)Z
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.ValueTuple:isMissingFlow(I)Z
utilMDE.FuzzyFloat:FuzzyFloat(D)V
utilMDE.Intern:intern([D)[D
daikon.Quant:memberOf(I[I)Z
daikon.PptSlice1:num_samples()I
jtb.JavaParser:jj_3R_68()Z
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Statement;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InclusiveOrExpression;)V
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
jtb.JavaParser:jj_3R_164()Z
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
jtb.syntaxtree.Name:accept(Ljtb.visitor.Visitor;)V
jtb.JavaCharStream:ReadByte()C
daikon.VarInfoName:name()Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_69()Z
jtb.JavaParser:jj_3R_47()Z
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.ProglangType:isIntegral()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.Quant:eq(FF)Z
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eltsLT([II)Z
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.ProglangType:isPseudoArray()Z
jtb.JavaParser:jj_3R_122()Z
daikon.Quant:pairwiseEqual([I[I)Z
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.PptName:isEnterPoint()Z
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeDeclaration;)V
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.Quant:sameLength([I[I)Z
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_100()Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.Expression:accept(Ljtb.visitor.Visitor;)V
daikon.diff.DetailedStatisticsVisitor:freq(II)D
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_117()Z
jtb.syntaxtree.NodeListOptional:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:eltwiseEqual([I)Z
daikon.Ppt:Ppt()V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
jtb.JavaParser:jj_3_3()Z
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
jtb.JavaParser:jj_3R_75()Z
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.Quant:union([I[I)[I
jtb.JavaParser:jj_3R_135()Z
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
utilMDE.MathMDE:gcd(JJ)J
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_180()Z
jtb.syntaxtree.TypeArguments:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.Quant:setDiff([I[I)[I
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Block;)V
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.FuzzyFloat:lt(DD)Z
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.FuzzyFloat:indexOf([DD)I
utilMDE.MathMDE:gcd(II)I
daikon.Quant:eltsLteIndex([I)Z
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:subarray([JII)[J
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.ReferenceType:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReturnStatement;)V
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.Quant:eltsGteIndex([I)Z
jtb.syntaxtree.NodeSequence:elements()Ljava.util.Enumeration;
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.syntaxtree.Type:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.TypeArgument:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.OrderedPairIterator:setnext2()V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.ValueTuple:size()I
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_57()Z
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
jtb.syntaxtree.ConditionalAndExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.InclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.ProglangType:baseIsScalar()Z
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_63()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Modifiers;)V
daikon.inv.unary.LowerBoundCore:computeProbability()D
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.Quant:memberOf(F[F)Z
utilMDE.FuzzyFloat:lte(DD)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
jtb.JavaParser:jj_2_35(I)Z
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.Statement:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.ModBitTracker:num_vars()I
jtb.JavaParser:jj_3_13()Z
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3_12()Z
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_114()Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
jtb.JavaParser:jj_3R_136()Z
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
jtb.syntaxtree.TypeBound:accept(Ljtb.visitor.Visitor;)V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
jtb.JavaParser:jj_3R_126()Z
daikon.diff.Node:Node()V
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.JavaParser:jj_3R_48()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
jtb.JavaCharStream:getBeginColumn()I
jtb.syntaxtree.PackageDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.inv.Invariant:getConfidence()D
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.Quant:eltsLtIndex([I)Z
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.JavaParser:jj_3R_103()Z
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_2_21(I)Z
daikon.diff.InvMap:InvMap()V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.ModBitTracker:split(I)I
daikon.Quant:subsetOf([J[J)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
utilMDE.OrderedPairIterator:setnext1()V
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.JavaParser:jj_3_10()Z
jtb.JavaParser:jj_3R_123()Z
daikon.inv.Invariant:prob_or(DD)D
jtb.JavaParser:jj_3_17()Z
daikon.ModBitTracker:ModBitTracker(I)V
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
jtb.JavaParser:jj_3R_125()Z
jtb.JavaParser:jj_3R_74()Z
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
jtb.JavaCharStream:backup(I)V
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_51()Z
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaCharStream:GetImage()Ljava.lang.String;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.syntaxtree.ClassOrInterfaceDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameters;)V
daikon.Quant:lt(II)Z
jtb.JavaParser:jj_2_17(I)Z
jtb.syntaxtree.ClassOrInterfaceBody:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ImportDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_98()Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.Quant:eltsNotEqual([II)Z
utilMDE.Assert:assertTrue(Z)V
jtb.JavaParser:jj_3_36()Z
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_2_25(I)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
jtb.JavaParser:jj_3R_61()Z
utilMDE.SimpleLog:SimpleLog(Z)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
jtb.JavaParser:jj_2_18(I)Z
jtb.JavaParser:jj_3R_105()Z
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
jtb.syntaxtree.NodeOptional:NodeOptional()V
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.ValueSet:ValueSet(I)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeBound;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ResultType;)V
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.PptSlice2:arity()I
jtb.syntaxtree.NodeListOptional:present()Z
jtb.JavaParser:jj_2_14(I)Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeSequence;)V
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.ConditionalExpression:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PackageDeclaration;)V
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.ProglangType:isArray()Z
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.FormalParameters:accept(Ljtb.visitor.Visitor;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.Quant:setEqual([I[I)Z
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
jtb.syntaxtree.TypeDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE:lsis_test(I)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.Quant:subsetOf([S[S)Z
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_60()Z
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.Quant:eltwiseNotEqual([I)Z
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
jtb.syntaxtree.TypeArguments:TypeArguments(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeArgument;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
daikon.Quant:pairwiseLTE([I[I)Z
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalOrExpression;)V
jtb.JavaParser:jj_3R_86()Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
jtb.syntaxtree.NodeToken:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.BlockStatement;)V
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
jtb.syntaxtree.MethodDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_101()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:jj_3R_52()Z
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
1094 2 1180 2 51 2 1168 2 268 4 699 2 992 2 723 2 877 2 
1045 6 938 6 40 2 1069 2 496 2 1075 2 797 2 119 2 671 2 94 6 242 2 
1201 6 312 4 819 6 416 2 905 6 1094 2 1168 2 581 2 603 2 1149 4 271 2 869 2 426 6 
333 6 371 2 370 4 713 8 501 10 1039 10 344 2 204 16 457 4 787 8 900 26 1204 16 274 8 690 2 433 4 1094 6 532 12 987 2 739 10 443 10 27 8 1168 6 887 2 698 4 915 2 32 29 620 2 539 10 707 6 1222 16 
315 6 549 4 
649 2 
369 2 371 2 629 2 1074 2 8 2 630 2 85 2 550 4 784 2 239 2 96 2 644 2 468 2 1094 4 324 2 1168 4 582 2 741 2 400 2 483 2 38 2 745 2 1025 2 748 2 960 2 821 2 961 2 502 2 270 2 971 2 428 2 523 2 275 4 431 2 277 2 357 2 142 2 615 2 147 2 1220 2 702 2 992 2 624 4 993 4 
333 4 4 6 1031 6 594 6 501 16 713 6 1035 8 342 2 1039 6 601 6 204 32 1194 4 241 2 561 6 900 48 353 4 1204 32 58 4 389 2 433 2 1054 4 613 2 1094 4 803 4 532 22 952 6 443 16 739 16 987 2 27 18 1168 4 107 4 29 4 108 2 32 54 539 16 809 2 707 4 1222 32 
1074 2 224 2 319 2 
466 2 8 2 908 2 391 2 798 22 87 2 802 2 362 2 420 2 910 2 968 2 206 2 1200 2 623 10 
1133 2 333 2 501 2 670 2 1039 4 780 2 302 2 204 2 862 2 95 2 900 4 1204 2 433 2 219 2 532 2 443 2 739 2 27 2 656 2 32 6 539 2 407 2 1222 2 
1204 8 1031 6 749 2 370 2 501 4 532 4 952 6 443 4 204 8 739 4 107 4 953 2 1194 4 32 16 539 4 900 12 1222 8 
1070 4 542 2 228 4 294 2 415 4 1074 8 85 4 926 2 550 4 1190 4 717 2 784 2 379 14 1044 10 1008 2 684 4 384 2 727 4 646 4 686 2 1012 2 792 2 181 2 795 4 729 4 1091 2 185 2 319 2 878 2 439 2 143 2 911 10 28 62 886 2 583 4 479 4 224 6 37 2 225 2 540 2 
747 2 341 2 863 2 459 2 649 2 907 2 730 2 392 2 766 2 1101 2 
449 2 300 5 783 1 174 2 788 1 791 2 1089 1 1092 2 800 1 1094 24 190 4 808 1 329 2 661 2 497 2 339 2 202 2 969 1 1116 2 1117 2 829 2 679 1 976 1 836 2 355 2 64 1 363 1 696 2 221 2 223 2 1130 2 543 1 230 2 711 6 81 8 998 2 1001 6 864 2 723 2 383 6 563 2 1010 2 873 6 566 2 248 2 733 2 881 1 105 2 1020 2 1168 26 106 1 888 1 111 2 890 1 114 2 116 2 118 4 260 1 752 1 122 1 423 2 267 2 604 2 760 1 609 2 1051 2 1055 1 282 2 440 4 913 4 618 4 1218 2 1221 2 772 2 
1168 2 916 2 
726 2 79 2 1168 4 
1049 2 
628 2 5 4 10 2 634 2 13 2 12 2 14 18 17 2 19 2 642 2 647 2 21 2 651 246 22 2 652 2 23 2 654 2 658 2 34 26 660 30 662 4 41 94 42 2 44 4 673 22 45 12 674 4 47 2 49 4 50 2 678 14 53 2 683 4 682 2 57 4 688 2 59 4 62 4 689 2 63 4 693 94 695 2 70 18 703 2 705 18 704 2 78 2 709 2 710 94 80 2 83 2 82 4 714 8 715 4 716 4 89 4 93 2 721 2 724 2 99 2 738 2 103 2 740 2 109 2 112 4 113 4 115 12 753 2 754 2 123 22 126 2 756 26 761 2 128 4 133 4 134 2 762 18 763 18 140 22 765 2 767 44 769 30 144 2 768 2 145 6 146 2 770 4 771 56 773 2 774 2 150 4 153 2 154 2 156 16 777 2 168 8 170 2 785 2 176 2 790 4 178 2 793 16 184 18 799 2 186 246 806 14 810 4 812 2 811 2 820 2 195 2 822 4 197 358 823 246 200 2 826 28 827 4 203 2 205 2 209 2 835 2 837 4 211 2 214 2 213 2 216 2 840 18 220 2 851 62 850 46 853 2 854 8 227 20 856 2 236 12 235 44 860 4 861 2 866 90 867 2 870 18 871 26 247 4 876 2 880 2 250 2 252 2 253 2 254 2 885 4 256 2 255 2 892 2 893 8 261 2 262 2 264 2 265 94 272 4 273 2 902 4 901 2 276 4 278 2 906 2 280 2 909 4 284 2 286 14 288 2 290 2 291 4 292 2 919 2 293 2 921 2 922 94 296 4 297 4 298 4 928 2 301 2 929 4 303 2 306 2 932 18 933 2 308 42 934 4 936 2 937 4 314 2 316 2 944 4 947 4 948 2 949 2 950 2 320 22 951 4 325 4 330 2 336 94 957 2 958 4 340 2 964 4 965 2 343 48 347 2 346 2 348 2 350 94 972 2 975 2 978 22 979 4 356 2 981 16 358 2 361 2 984 2 365 2 366 2 991 2 995 2 373 2 375 2 376 2 1003 2 381 18 385 2 386 2 1011 4 388 2 1014 4 1016 94 1017 2 1019 48 398 2 399 2 401 4 1027 2 408 4 410 4 1029 2 414 2 1037 2 419 4 421 18 422 12 425 2 427 8 1047 8 1048 18 430 2 1050 2 434 4 437 4 435 2 1057 2 1058 2 441 2 1060 94 442 2 1061 2 1063 2 444 2 447 4 1065 4 1068 52 1071 74 450 48 1073 2 1077 2 455 2 1078 2 458 6 1082 2 460 2 461 2 1083 2 1085 2 1086 2 1088 6 1087 2 473 2 1095 2 476 2 1098 2 1100 4 1102 50 488 10 1103 2 489 8 1105 2 492 2 495 4 505 2 1109 2 508 2 509 2 1110 2 1113 42 1114 12 515 2 519 2 1120 2 1121 2 1122 2 1124 2 1126 2 529 2 533 2 1128 2 1129 2 535 2 1131 26 537 62 538 2 1132 12 545 42 1136 18 546 2 1137 30 547 2 548 72 1139 2 1140 2 1142 104 551 4 554 2 557 2 1151 2 562 2 1153 2 570 2 568 2 1158 2 571 2 572 4 573 2 1162 94 574 2 579 2 1169 2 1172 2 1173 94 584 2 586 2 1174 2 1176 6 1181 22 1186 2 595 8 1187 62 596 2 1191 4 600 2 602 2 1193 36 1195 2 605 2 1198 2 1199 2 1205 48 1207 2 611 2 612 4 1209 2 1208 2 1210 2 1212 2 1213 6 1214 2 614 2 1215 44 619 2 1219 4 622 2 625 4 
368 1 650 2 77 2 859 2 
1 2 77 2 
804 2 457 2 828 2 1074 2 135 2 734 2 77 2 
804 2 77 2 1165 2 
789 2 804 2 77 2 
719 2 73 2 859 2 
804 2 77 2 
719 2 372 2 
1093 2 77 2 
719 2 841 2 859 2 
397 2 859 2 541 2 
285 2 1196 2 859 2 
207 2 680 2 859 2 
1084 2 35 2 859 2 
872 2 719 2 
1188 2 77 2 
397 2 180 2 
285 2 289 2 
243 2 207 2 
1084 2 486 2 
719 2 72 2 
1084 2 931 2 
337 2 207 2 
285 2 912 2 
397 2 1024 2 
719 2 666 2 841 2 859 2 
719 2 212 2 666 2 841 2 859 2 
177 2 719 2 859 2 
719 2 33 2 859 2 
1026 2 61 2 136 2 90 2 
1074 2 526 2 349 2 734 2 
884 2 828 2 1074 2 526 2 349 2 734 2 
804 2 457 2 904 2 1074 2 734 2 77 2 
523 2 456 2 
457 2 222 2 1074 2 734 2 
664 2 207 2 
1084 2 485 2 
397 2 834 2 
285 2 663 2 
285 2 1084 2 436 2 
285 2 1084 2 685 2 
285 2 1084 2 725 2 
285 2 1084 2 521 2 
813 2 1074 2 46 6 1119 2 645 6 942 2 734 2 659 2 
719 2 681 2 
152 2 191 2 1184 2 117 2 198 2 120 2 798 6 11 2 165 2 653 2 88 2 967 2 104 2 171 2 970 2 831 2 1043 4 520 4 
424 2 859 2 
604 2 
626 2 159 2 454 2 163 2 174 2 640 2 935 2 791 2 24 2 471 4 1094 26 190 4 657 2 326 2 661 2 332 2 815 2 334 8 196 2 667 4 499 2 824 8 202 2 48 2 676 2 1116 2 1117 2 829 6 976 2 836 2 355 2 985 2 696 2 221 6 697 2 990 2 852 2 711 4 81 4 998 2 999 2 374 2 1143 2 1001 2 1148 4 723 2 383 2 1010 2 873 6 566 6 567 2 248 2 733 2 735 2 105 2 1168 26 743 2 111 2 114 2 1182 2 1183 2 116 2 118 4 1036 4 597 2 124 2 267 2 606 2 1051 2 1053 2 1055 2 440 4 618 4 1221 2 772 2 1067 2 
626 2 159 2 454 2 7 2 163 2 174 2 640 2 935 2 791 2 24 2 1092 2 471 4 1094 26 190 4 326 2 329 2 661 2 332 2 815 2 334 8 196 2 667 4 499 2 824 8 202 2 48 2 676 2 1116 2 1117 2 829 6 976 2 836 2 355 2 985 2 696 2 221 6 697 2 852 2 711 6 997 2 81 4 998 2 999 2 374 2 1143 2 1001 2 1148 2 723 2 383 2 1010 2 873 6 566 6 567 2 248 2 733 2 735 2 105 2 1168 26 743 2 111 2 114 2 1182 2 1183 2 1030 2 116 2 118 4 1036 4 597 2 124 2 267 2 606 2 1051 2 1053 2 1055 2 440 4 914 2 618 4 1221 2 772 2 
868 2 
845 2 825 2 
155 8 158 2 1075 2 998 2 631 2 167 8 173 2 94 6 865 2 242 4 174 2 1004 4 786 4 722 10 938 6 873 4 464 2 791 2 1013 2 1154 2 182 2 797 2 875 2 470 2 394 2 25 2 1094 6 580 2 190 2 1168 12 111 2 36 4 807 4 661 2 39 2 40 4 335 2 413 2 592 2 116 2 1106 2 417 2 1038 2 599 2 895 2 345 2 897 2 513 2 1112 2 1045 6 610 2 1051 2 217 2 438 4 1056 2 986 2 843 2 844 2 847 4 618 2 
155 8 1069 2 158 2 1075 2 998 2 631 2 167 8 173 2 94 8 865 2 242 4 174 2 786 4 1004 4 722 10 938 8 873 4 464 2 791 2 1013 2 1154 2 182 2 797 2 875 2 100 4 470 2 25 2 394 2 1094 6 580 2 190 2 1168 12 111 2 36 4 807 4 661 2 39 2 40 4 335 2 592 2 116 2 1106 2 417 2 1038 2 599 2 895 2 345 2 897 2 513 2 1112 2 1045 6 610 2 354 2 1051 2 217 2 438 4 1056 2 986 2 843 2 618 2 847 4 149 2 
1045 2 938 2 40 2 335 2 158 2 1013 2 1106 2 217 2 1038 2 394 2 895 2 843 2 173 2 865 2 242 2 786 4 1004 4 36 2 
155 4 1069 2 158 2 998 2 631 2 167 4 173 2 94 6 865 2 242 4 174 2 1004 4 786 4 722 6 938 6 873 4 464 2 791 2 1013 2 1154 2 182 2 797 2 875 2 470 2 394 2 25 2 1094 6 580 2 190 2 1168 12 111 2 36 4 807 4 661 2 39 2 40 4 335 2 413 2 592 2 116 2 1106 2 417 2 1038 2 599 2 895 2 345 2 897 2 513 2 1112 2 1045 4 610 2 1051 2 217 2 438 4 1056 2 986 2 843 2 844 2 847 4 618 2 
155 4 158 2 998 2 631 2 167 4 173 2 94 6 865 2 242 4 174 2 1004 4 786 4 722 6 938 4 873 4 464 2 791 2 1013 2 1154 2 182 2 797 2 875 2 470 2 394 2 25 2 1094 6 580 2 190 2 1168 12 111 2 36 4 807 4 661 2 39 2 40 4 335 2 413 2 592 2 116 2 1106 2 417 2 119 2 1038 2 599 2 895 2 345 2 897 2 513 2 1112 2 1045 6 610 2 1051 2 217 2 438 4 1056 2 986 2 843 2 844 2 847 4 618 2 
155 4 158 2 1075 2 998 2 631 2 167 8 173 2 94 6 865 2 242 4 174 2 1004 4 786 4 722 6 938 6 873 4 464 2 791 2 1013 2 1154 2 182 2 797 2 875 2 470 2 394 2 25 2 1094 6 580 2 190 2 1168 12 111 2 36 4 807 4 661 2 39 2 40 4 335 2 413 2 592 2 116 2 1106 2 417 2 1038 2 599 2 895 2 345 2 897 2 513 2 1112 2 1045 6 610 2 1051 2 217 2 438 4 1056 2 986 2 843 2 844 2 847 4 618 2 
155 8 158 2 1075 2 998 2 631 2 167 8 173 2 94 8 865 2 242 4 174 2 1004 4 786 4 722 10 938 6 873 4 464 2 791 2 1013 2 1154 2 182 2 797 2 875 2 470 2 394 2 25 2 1094 6 580 2 190 2 1168 12 111 2 36 4 807 4 661 2 39 2 40 4 335 2 413 2 592 2 116 2 1106 2 417 2 119 2 1038 2 599 2 895 2 345 2 897 2 513 2 1112 2 1045 8 610 2 1051 2 217 2 438 4 1056 2 986 2 843 2 844 2 618 2 847 4 
155 8 158 2 1075 2 998 2 631 2 167 8 173 2 94 6 865 2 242 4 174 2 1004 4 786 4 722 10 938 6 873 4 464 2 791 2 1013 2 1154 2 182 2 797 2 875 2 470 2 394 2 25 2 1094 6 580 2 190 2 1168 12 111 2 36 4 807 4 661 2 39 2 40 4 335 2 413 2 592 2 116 2 1106 2 417 2 1038 2 599 2 895 2 345 2 897 2 513 2 1112 2 1045 6 610 2 1051 2 217 2 438 4 1056 2 986 2 843 2 844 2 847 4 618 2 
626 2 627 1 631 2 633 2 16 1 15 2 930 2 304 2 640 2 935 2 641 2 938 4 20 2 313 4 318 1 24 2 25 2 321 6 323 6 30 2 31 2 36 4 661 2 329 2 39 2 332 2 334 4 40 4 335 2 959 6 667 4 963 2 345 2 676 2 52 6 677 2 60 2 355 2 985 2 986 2 696 2 71 10 697 2 74 2 708 6 79 6 711 6 81 2 998 2 1001 2 720 7 94 12 1004 4 97 6 722 2 723 2 383 2 1009 2 1007 8 1010 2 728 2 387 2 1013 2 733 2 394 2 105 2 1022 6 1023 1 111 2 114 2 116 2 118 4 1032 7 417 2 119 4 1038 2 1045 8 1049 6 1051 2 438 4 1056 2 440 4 772 2 775 2 158 2 453 2 454 4 164 1 167 2 173 2 174 2 786 4 791 2 464 2 182 2 183 2 794 4 797 4 796 2 1092 2 469 6 470 2 1094 24 190 4 805 6 807 6 194 2 1106 2 1107 6 1108 6 506 1 504 6 824 4 202 2 1112 2 513 4 1116 2 1117 2 829 6 832 2 1123 2 836 2 217 2 843 2 844 2 221 8 847 8 848 6 231 2 857 2 234 2 1141 2 865 2 242 4 560 2 1148 1 873 6 1154 4 566 6 246 1 875 2 248 2 580 2 1168 46 889 2 1175 1 1182 2 592 2 599 2 263 1 895 2 897 2 267 12 608 2 610 2 1211 2 287 2 616 2 618 4 916 6 1221 2 
626 4 158 2 453 2 454 4 1075 4 631 2 633 2 167 6 930 2 15 2 304 2 173 2 786 4 174 2 640 2 641 2 935 2 938 8 464 2 791 2 20 2 313 4 183 2 182 2 794 4 796 2 797 4 24 4 1092 2 469 6 470 2 471 2 25 2 1094 26 321 6 323 6 190 4 805 6 31 2 30 2 36 4 807 6 329 2 661 2 332 2 39 2 334 8 40 4 335 2 194 2 959 6 1106 2 1107 6 667 4 963 2 1108 6 504 6 824 8 345 2 202 2 513 4 1112 2 52 6 676 2 1116 2 677 2 829 6 1117 2 832 2 1123 2 836 2 60 2 355 2 217 2 985 2 986 2 696 2 843 2 71 10 221 8 844 2 846 2 697 2 847 8 74 2 848 6 708 6 79 6 231 2 857 2 711 6 81 2 998 2 234 2 1141 2 1001 2 94 12 1144 2 865 2 560 2 242 4 1004 4 722 2 97 6 723 2 1007 8 1009 2 383 2 728 2 1010 2 873 6 387 2 1013 2 1154 4 566 6 875 2 733 2 248 2 394 2 580 2 105 2 1168 48 1022 6 889 2 111 2 114 2 1182 4 592 2 116 2 118 4 417 2 1038 2 599 2 895 2 897 2 267 12 608 2 1045 8 1049 6 610 2 1051 2 1211 2 438 4 1056 2 440 4 287 2 616 2 618 4 916 6 772 2 1221 2 775 2 
626 4 155 4 158 2 453 2 454 4 1075 4 631 2 633 2 167 6 930 2 15 2 304 2 173 2 786 4 174 2 640 2 641 2 935 2 938 8 464 2 791 2 20 2 313 4 183 2 182 2 794 4 796 2 797 4 24 4 1092 2 469 6 470 2 471 2 25 2 1094 26 321 6 323 6 190 4 805 6 31 2 30 2 36 4 807 6 329 2 661 2 332 2 39 2 334 8 40 4 335 2 194 2 959 6 1106 2 1107 6 667 4 963 2 1108 6 504 6 824 8 345 2 202 2 513 4 1112 2 52 6 676 2 1116 2 677 2 829 6 1117 2 832 2 1123 2 836 2 60 2 355 2 217 2 985 2 986 2 696 2 843 2 71 10 221 8 844 2 846 2 697 2 847 8 74 2 848 6 708 6 79 6 231 2 857 2 711 6 81 2 998 2 234 2 1141 2 1001 2 94 12 1144 2 865 2 560 2 242 4 1004 4 97 6 722 6 723 2 1007 8 1009 2 383 2 728 2 1010 2 873 6 387 2 1013 2 1154 4 566 6 875 2 733 2 248 2 394 2 580 2 105 2 1168 48 1022 6 889 2 111 2 114 2 1182 4 592 2 116 2 118 4 417 2 1038 2 599 2 895 2 897 2 267 12 608 2 1045 8 1049 6 610 2 1051 2 1211 2 438 4 1056 2 440 4 287 2 616 2 618 4 916 6 772 2 1221 2 775 2 
626 4 2 2 631 2 9 6 633 2 15 2 930 2 304 2 640 2 935 2 641 2 938 10 20 2 313 4 24 4 25 2 321 6 323 6 30 2 31 2 36 4 328 6 329 2 661 2 39 2 332 4 334 10 40 4 335 2 959 6 667 6 963 2 345 2 675 6 676 4 52 6 677 2 60 2 355 2 985 2 986 2 696 2 71 8 697 2 74 2 708 6 79 12 711 6 81 4 998 2 1001 4 94 16 1004 4 722 6 97 12 723 2 380 2 383 4 1009 2 1007 8 1010 2 728 2 387 2 1013 2 733 2 393 6 394 2 105 2 1022 6 111 2 114 2 116 2 118 4 417 2 119 2 1038 2 127 6 1045 10 759 6 1049 12 1051 2 132 6 438 4 1056 2 440 4 772 2 775 2 155 4 1069 2 158 2 453 2 1075 4 454 4 167 6 173 2 786 4 174 2 791 2 464 2 182 2 183 2 794 4 797 4 796 2 1092 2 469 6 470 2 471 2 1094 24 190 4 805 12 807 6 194 2 1106 2 1107 12 1108 6 507 2 504 6 824 10 202 2 1112 2 513 4 514 6 1116 2 1117 2 829 8 833 2 1123 2 836 2 217 2 843 2 844 2 221 12 846 2 847 8 848 6 231 2 857 2 234 2 1141 2 1144 2 865 2 242 4 560 2 873 6 1154 4 566 8 875 2 248 2 577 2 1167 2 580 2 1168 52 889 2 1182 4 592 2 599 2 895 2 266 6 897 2 267 10 608 2 1206 2 610 2 1211 2 287 2 616 2 617 2 618 4 916 12 1221 2 
155 4 40 4 158 2 335 2 1075 2 417 2 631 2 1038 2 345 2 167 6 1112 2 94 4 173 2 242 4 786 2 1004 2 722 4 1045 6 938 6 464 2 610 2 1013 2 182 2 797 2 438 2 470 2 25 2 1056 2 394 2 843 2 844 2 1168 4 847 2 807 2 39 2 
0 2 158 2 452 2 1075 2 454 2 631 2 167 6 173 2 786 2 174 2 640 2 935 2 938 6 464 2 791 2 182 2 797 2 1092 2 470 2 25 2 1094 24 190 4 807 2 329 2 661 2 39 2 40 4 335 2 497 2 667 4 345 2 202 2 510 2 1112 2 1116 2 1117 2 829 6 832 2 210 2 836 2 355 2 215 2 985 2 696 2 843 2 844 2 221 8 71 2 847 2 711 6 81 3 998 2 1001 3 94 4 242 4 1004 2 377 2 722 2 723 2 383 3 873 6 1010 2 1013 2 566 6 1156 3 248 2 733 2 394 2 105 2 1168 28 111 2 114 2 593 2 116 2 118 4 417 2 599 2 1038 2 267 4 604 2 1045 6 610 2 1051 2 438 2 1056 2 440 4 618 4 772 2 1221 2 
182 2 1066 2 1056 2 
182 2 1066 2 1056 2 
626 4 155 4 1069 4 157 2 454 6 1075 4 167 6 173 2 174 2 786 2 935 2 938 12 791 2 464 2 313 2 182 6 794 2 797 4 24 4 1092 2 1094 16 190 4 1096 2 36 4 807 4 329 2 661 2 334 4 40 4 1106 2 824 4 966 2 202 2 345 2 513 4 1115 2 1116 2 1117 2 829 2 974 4 836 2 355 2 217 2 68 2 985 2 986 2 696 2 71 2 221 2 697 4 989 2 847 4 857 2 711 6 81 2 998 2 238 2 1143 4 94 16 242 4 1004 2 1148 2 722 6 723 2 1009 2 1010 2 873 6 1154 2 1155 2 566 2 874 2 1159 2 875 2 248 2 733 2 394 2 737 2 580 2 105 2 1168 24 1022 2 402 4 111 2 1177 2 114 2 1182 4 591 2 116 2 118 4 119 4 1033 2 1038 4 267 4 269 2 1045 12 1051 2 1211 2 281 2 438 2 1056 4 440 4 618 4 1221 2 772 2 918 2 1066 2 
487 2 608 2 490 2 591 2 338 2 313 2 874 2 1141 2 1094 2 238 2 71 2 1168 4 845 2 267 2 1022 2 865 2 111 2 
626 4 155 4 1069 4 157 2 454 6 1075 4 299 2 167 6 173 2 18 2 174 2 786 2 935 2 938 12 791 2 464 2 182 6 794 2 797 4 24 4 1092 2 1094 16 190 4 1096 2 36 4 807 4 329 2 661 2 1099 2 334 4 40 4 1106 2 669 2 824 4 966 2 202 2 345 2 513 4 1116 2 1117 2 829 2 974 4 836 2 355 2 217 2 985 2 986 2 696 2 221 2 697 4 989 2 847 4 857 2 711 6 81 4 998 2 238 2 555 2 1143 4 94 16 242 4 1004 2 1148 1 722 6 723 2 1009 2 1010 2 873 6 1154 4 1155 2 566 2 874 2 875 2 248 2 733 2 394 2 737 2 580 2 105 2 1168 24 1022 2 402 4 111 2 114 2 1182 4 591 2 116 2 118 4 119 4 1033 2 1038 4 897 2 267 2 269 2 1045 12 1051 2 1211 2 438 2 281 2 1056 4 440 4 618 4 1221 2 772 2 918 4 1066 2 
626 4 155 4 1069 4 157 2 454 6 1075 4 167 6 173 2 174 2 786 2 935 2 938 12 791 2 464 2 313 2 182 6 794 2 797 4 24 4 1092 2 1094 16 190 4 1096 2 36 4 807 4 329 2 661 2 334 4 40 4 1106 2 824 4 966 2 1111 2 202 2 345 2 513 4 1116 2 1117 2 829 2 974 4 522 2 836 2 355 2 980 2 217 2 985 2 986 2 696 2 71 2 221 2 697 4 989 2 847 4 857 2 711 6 81 2 998 2 238 2 553 2 1143 4 94 16 242 4 1004 2 1148 1 722 6 723 2 1009 2 1010 2 873 6 1154 4 1155 2 566 2 874 2 875 2 248 2 733 2 394 2 737 2 580 2 105 2 1168 24 1022 2 402 4 111 2 114 2 1182 4 591 2 116 2 118 4 119 4 1033 2 1038 4 897 2 267 4 269 2 1045 12 1051 2 1211 2 281 2 438 2 1056 4 141 2 440 4 618 4 1221 2 772 2 918 2 1066 2 
855 2 453 2 711 5 454 2 81 2 998 2 782 2 930 2 15 2 304 2 1001 2 174 2 640 2 723 2 935 2 309 2 383 2 1010 2 873 6 387 2 791 2 566 6 1157 2 1092 1 732 2 733 2 248 2 1161 4 1094 18 576 2 395 2 105 2 190 4 1168 24 478 2 30 2 111 2 661 2 746 2 329 1 114 2 589 2 411 2 116 2 118 4 667 4 500 2 755 2 202 2 1116 2 267 2 829 6 1117 2 607 2 758 2 1046 2 836 2 355 2 1051 2 982 2 440 4 696 2 221 8 618 4 706 2 1221 2 772 2 
1179 2 1072 1 667 2 81 3 6 2 86 2 1079 2 1001 3 676 6 636 4 1041 2 829 2 640 2 383 3 565 2 566 2 1125 2 1127 2 1094 2 530 2 221 2 1168 2 477 3 1064 2 446 2 
1179 2 667 2 81 2 6 2 86 2 1079 2 1001 2 676 6 636 4 1041 2 829 2 640 2 383 2 565 2 566 2 1125 2 1127 2 1094 2 530 2 221 2 1168 2 477 2 1064 2 446 2 
1179 2 667 2 81 2 6 2 86 2 1079 2 1001 2 676 6 636 4 1041 2 829 2 640 2 383 2 565 2 566 2 1125 2 1127 2 1094 2 530 2 221 2 1168 2 477 2 1064 2 446 2 
257 4 493 3 259 2 498 2 43 4 501 2 713 4 81 3 1034 2 923 2 233 2 237 2 718 4 204 2 1145 2 1147 2 640 2 900 4 383 3 1204 2 317 2 839 2 279 6 528 4 879 2 218 2 139 4 1094 4 443 2 739 2 221 2 1168 10 742 3 32 6 1064 2 954 2 539 2 151 3 707 2 1222 2 
257 4 493 2 259 2 498 2 43 4 501 2 713 4 81 2 1034 2 923 2 233 2 237 2 718 4 204 2 1145 2 1147 2 640 2 900 4 383 2 1204 2 317 2 839 2 279 6 528 4 879 2 218 2 139 4 1094 4 532 2 443 2 739 2 987 2 27 2 221 2 1168 10 742 2 32 4 1064 2 954 2 539 2 151 2 707 2 1222 2 
257 4 493 2 259 2 498 2 43 4 501 2 713 4 81 2 1034 2 923 2 233 2 237 2 718 4 204 2 1145 2 1147 2 640 2 900 4 383 2 1204 2 317 2 839 2 279 6 528 4 879 2 218 2 139 4 1094 4 532 2 443 2 739 2 987 2 27 2 221 2 1168 10 742 2 32 4 1064 2 954 2 539 2 151 2 707 2 1222 2 
257 4 493 2 259 2 498 2 43 4 501 2 713 4 81 2 1034 2 923 2 233 2 237 2 718 4 204 2 1145 2 1147 2 640 2 900 4 383 2 1204 2 317 2 839 2 279 6 528 4 879 2 218 2 139 4 1094 4 532 2 443 2 739 2 987 2 27 2 221 2 1168 10 742 2 32 4 1064 2 954 2 539 2 151 2 707 2 1222 2 
257 4 493 2 259 2 498 2 43 4 501 2 713 4 81 2 1034 2 923 2 233 2 237 2 718 4 204 2 1145 2 1147 2 640 2 900 4 383 2 1204 2 317 2 839 2 279 6 528 4 879 2 218 2 139 4 1094 4 532 4 443 2 739 2 987 4 27 4 221 2 1168 10 742 2 32 4 1064 2 954 2 539 2 151 2 707 2 1222 2 
56 2 896 2 940 2 245 2 744 2 891 2 
1134 2 940 2 179 2 491 2 830 2 499 2 98 2 
542 1 776 2 996 2 160 2 858 2 84 2 924 2 121 2 1118 2 1042 2 97 2 429 2 977 2 943 2 1051 2 1015 2 694 2 801 2 1094 8 1168 10 1216 1 1171 2 482 1 917 1 484 2 225 1 
4 4 1031 4 161 2 418 2 501 6 713 4 1035 2 199 2 204 6 1194 2 270 2 971 2 900 12 1202 2 1204 6 941 2 1090 2 1163 2 1094 6 532 3 739 6 443 6 987 2 27 2 1168 6 29 2 32 16 539 6 1222 6 707 2 
226 2 564 2 1028 2 463 2 295 2 43 2 528 2 764 2 672 7 1094 1 26 2 882 4 718 2 188 2 1168 1 1002 1 988 2 382 2 
564 2 226 2 1028 4 463 4 295 2 43 2 528 2 764 2 672 6 26 2 882 4 718 2 188 2 988 2 382 4 
564 8 226 6 1028 8 463 8 295 2 43 2 528 2 764 2 672 10 1094 1 26 2 882 4 718 2 188 2 1168 1 1002 1 988 2 382 8 
1028 2 463 2 295 2 43 2 528 2 764 2 672 2 26 2 882 2 718 2 188 2 988 2 382 2 
920 2 451 2 778 2 779 6 162 6 925 4 927 8 632 6 781 22 166 6 1081 4 305 8 637 4 307 6 175 8 638 17 639 90 310 4 643 4 311 6 462 16 939 6 465 16 945 4 467 6 946 24 1092 58 472 84 1094 134 187 42 322 8 189 2 655 6 475 4 481 2 956 10 329 58 331 6 814 92 816 4 1104 4 193 2 494 26 665 6 962 2 824 28 202 8 512 10 517 42 208 2 351 6 55 4 54 24 973 50 524 4 687 18 525 2 838 34 527 4 692 16 359 24 69 1 531 8 364 16 534 24 536 4 701 24 367 4 994 2 229 2 544 4 712 36 711 248 552 6 92 6 91 26 556 2 558 6 240 2 1146 10 1005 6 1148 4 378 10 1006 4 244 11 569 4 390 6 731 4 1160 24 1164 2 249 4 575 2 251 6 101 2 736 124 396 8 578 6 1168 150 1021 6 110 2 585 6 405 10 406 4 114 14 588 10 258 8 409 8 590 8 118 112 751 6 894 4 1189 6 1040 12 125 18 898 10 757 8 1197 4 1203 2 432 4 1052 90 283 2 137 4 1059 2 440 88 445 12 621 4 1221 14 448 10 
994 2 229 2 1135 2 451 2 712 2 711 44 1138 2 232 2 1080 2 92 2 169 4 307 2 1146 2 175 2 638 2 378 2 1148 2 462 4 939 2 648 2 465 4 569 2 1092 2 1160 2 1094 44 251 2 101 2 322 2 736 6 1166 2 474 2 1168 46 1170 4 480 4 955 2 403 2 956 2 587 2 1097 2 327 2 405 2 329 2 1178 2 114 2 588 2 409 6 818 2 192 2 590 2 193 2 1185 2 118 20 750 2 751 2 665 2 668 2 503 2 598 2 824 38 1189 4 202 2 511 2 125 2 512 2 1192 2 516 4 898 2 899 2 54 2 55 2 129 2 903 2 525 2 131 2 691 2 692 4 842 2 66 2 983 2 138 2 67 2 440 20 531 2 1062 2 534 2 1217 2 849 2 148 2 75 6 76 2 1221 2 448 2 
451 2 3 2 1076 32 779 4 162 4 632 4 635 2 166 4 1081 4 305 4 637 4 172 8 307 4 175 2 638 10 310 4 643 4 462 10 311 4 939 4 465 10 467 4 1092 29 472 24 1094 70 187 8 322 2 189 2 655 4 956 4 329 27 814 24 817 4 193 2 665 4 824 15 201 2 202 2 512 6 517 16 518 4 351 4 352 8 55 1 973 8 524 4 525 2 838 30 527 4 692 10 65 4 359 8 983 2 360 2 531 2 364 8 536 4 700 4 229 2 712 6 711 103 232 2 552 4 1000 4 92 4 558 4 559 4 240 2 1148 1 1005 4 1150 4 1006 4 1152 8 1018 16 1164 2 249 4 883 2 251 4 101 2 736 24 578 4 1168 78 1021 4 585 4 404 2 405 4 406 4 114 6 588 4 258 4 409 6 412 8 118 44 750 10 751 4 1189 3 125 10 898 4 1197 4 1203 2 129 10 903 10 130 16 432 4 137 2 440 36 445 14 1217 2 1221 6 
994 2 544 2 920 2 229 2 451 2 778 2 711 40 712 2 232 2 781 10 92 4 307 4 175 2 1148 2 638 2 462 6 939 4 244 2 465 6 1092 12 249 2 1094 26 575 2 251 4 101 2 396 2 322 2 736 8 1168 28 475 2 587 2 956 2 405 2 329 12 114 2 588 2 258 4 409 4 193 2 118 14 751 4 665 4 824 14 1189 2 202 2 125 2 512 2 898 2 208 2 525 2 838 6 692 6 283 2 137 2 440 14 531 2 364 6 536 2 1221 2 
102 2 

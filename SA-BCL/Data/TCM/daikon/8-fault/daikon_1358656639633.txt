#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V ERROR utilMDE.Options$ArgException 811 
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.NullPointerException (45,58,103,968,1105) (45,58,103,968,1105) (45,58,103,968,1105) (45,58,103,968,1105) (45,58,103,968,1105) 
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V FAILED junit.framework.AssertionFailedError 631 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V FAILED junit.framework.ComparisonFailure 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 667 624 1133 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V FAILED junit.framework.AssertionFailedError 995 
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_0()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_1()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_2()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_3()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_4()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_5()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_6()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_7()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_8()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_9()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_10()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_11()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_12()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_13()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_14()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_15()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_16()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_17()V PASSED
daikon.test.split.SplitterFactoryTest:testmisc_Fib_main_18()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_19()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_20()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_21()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_22()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_23()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_24()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_25()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_26()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_27()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_28()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_29()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_30()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_31()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_32()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__33()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__34()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__35()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__36()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__37()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__38()V ERROR java.lang.RuntimeException (98,1097) (98,1097) (180,354) (180,354) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__39()V ERROR java.lang.RuntimeException (98,1097) (98,1097) (180,354) (180,354) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__40()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__41()V ERROR java.lang.RuntimeException (98,1097) (98,1097) (180,354) (180,354) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__42()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__43()V ERROR java.lang.RuntimeException (98,1097) (98,1097) (180,354) (180,354) 

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryExpression;)V
daikon.VarInfo:name()Ljava.lang.String;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
utilMDE.MathMDE:mod_positive(II)I
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.visitor.TreeFormatter:space(I)Ljtb.visitor.FormatCommand;
jtb.JavaParser:FormalParameter()Ljtb.syntaxtree.FormalParameter;
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
jtb.syntaxtree.MultiplicativeExpression:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InstanceOfExpression;)V
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
jtb.syntaxtree.Expression:accept(Ljtb.visitor.Visitor;)V
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.Literal;)V
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:union([I[I)[I
jtb.JavaParser:jj_3R_126()Z
daikon.Quant:pairwiseNotEqual([I[I)Z
jtb.syntaxtree.ConditionalExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
jtb.JavaParser:jj_3R_117()Z
daikon.Quant:memberOf(D[F)Z
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.ArraysMDE:concat([I[I)[I
jtb.JavaParser:jj_3R_110()Z
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.PackageDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
utilMDE.ArraysMDE:fn_inverse([II)[I
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V | ASSIGN | 10356 | = null
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameters;)V
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:sameLength([I[I)Z
daikon.ValueTuple:isMissing(I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
jtb.JavaParser:jj_3R_62()Z
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;)V
jtb.Token:newToken(I)Ljtb.Token;
jtb.syntaxtree.ClassOrInterfaceType:accept(Ljtb.visitor.Visitor;)V
daikon.ProglangType:dimensions()I
daikon.tools.jtb.Ast:create(Ljava.lang.String;Ljava.lang.String;)Ljtb.syntaxtree.Node;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
jtb.syntaxtree.VariableDeclaratorId:VariableDeclaratorId(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
jtb.visitor.FormatCommand:FormatCommand(II)V
daikon.tools.jtb.Ast:print(Ljtb.syntaxtree.Node;)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
daikon.VarInfoName:repr()Ljava.lang.String;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.EqualityExpression;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.Type;)V
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ResultType;)V
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
jtb.syntaxtree.UnaryExpression:accept(Ljtb.visitor.Visitor;)V
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.Expression;)V
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_2_36(I)Z
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_25()Z
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;)Z
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
utilMDE.FuzzyFloat:lt(DD)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:jj_3R_148()Z
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
jtb.syntaxtree.MethodDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
jtb.JavaParser:jj_3R_61()Z
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String; | RETURN | 15328 | return null
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Type;)V
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.Quant:pairwiseEqual([I[I)Z
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_104()Z
jtb.JavaCharStream:ReadByte()C
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameters;)V
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljava.lang.String;Ljava.lang.String;Ljava.util.List;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Expression;)V
daikon.Quant:eltwiseNotEqual([I)Z
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Block;)V
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.Literal:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.CompilationUnit;)V
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
jtb.syntaxtree.ReturnStatement:accept(Ljtb.visitor.Visitor;)V
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
utilMDE.ArraysMDE:subarray([JII)[J
jtb.syntaxtree.FormalParameter:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
utilMDE.MathMDE:gcd(II)I
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:getToken(I)Ljtb.Token;
utilMDE.ArraysMDE:indexOf([I[I)I
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.test.TestAst.MethodDeclarationHarvester:visit(Ljtb.syntaxtree.MethodDeclaration;)V
utilMDE.Intern:internStrings([Ljava.lang.String;)V
jtb.visitor.TreeDumper:printToken(Ljava.lang.String;)V
daikon.VarInfoName:isLiteralConstant()Z
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ReturnStatement;)V
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Literal;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ReferenceType;)V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;)V
jtb.syntaxtree.ReferenceType:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_122()Z
jtb.JavaParser:jj_3R_74()Z
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
utilMDE.MathMDE:gcd(JJ)J
daikon.tools.jtb.Ast:typeMatch(Ljava.lang.String;Ljava.lang.String;)Z | OPERATOR | 38856 | == -> >
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
utilMDE.SimpleLog.LongVal:LongVal(J)V
utilMDE.ArraysMDE:noDuplicates([D)Z
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;)V
jtb.syntaxtree.NodeListOptional:elements()Ljava.util.Enumeration;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
jtb.visitor.TreeFormatter:placeToken(Ljtb.syntaxtree.NodeToken;II)V
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
jtb.syntaxtree.CompilationUnit:getParent()Ljtb.syntaxtree.Node;
jtb.syntaxtree.ClassOrInterfaceBody:getParent()Ljtb.syntaxtree.Node;
jtb.JavaParser:jj_3R_125()Z
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.Quant:eq(II)Z
jtb.JavaCharStream:getBeginLine()I
daikon.Quant:eq(FF)Z
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.Quant:eltsLteIndex([I)Z
utilMDE.ArraysMDE:sum([[D)D
jtb.JavaParser:jj_3R_50()Z
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.tools.jtb.Ast:removeWhitespace(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_101()Z
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
jtb.JavaCharStream:BeginToken()C
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.tools.jtb.PptNameMatcher:PptNameMatcher(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
jtb.JavaParser:jj_3R_77()Z
jtb.JavaParser:jj_3R_120()Z
daikon.Quant:lt(II)Z
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_162()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
jtb.JavaParser:jj_2_10(I)Z
jtb.JavaParser:jj_3R_121()Z
daikon.diff.RootNode:RootNode()V
jtb.JavaParser:jj_3_19()Z
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_81()Z
daikon.Quant:pairwiseLT([I[I)Z
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.ArraysMDE:sum([D)D
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:jj_3R_89()Z
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.VarInfoName:toString()Ljava.lang.String;
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.tools.jtb.Ast:getParent(Ljava.lang.Class;Ljtb.syntaxtree.Node;)Ljtb.syntaxtree.Node;
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_55()Z
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eq(JJ)Z
utilMDE.MathMDE:negate(I)I
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.VarInfo:relate_var()V
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.Quant:eltsLtIndex([I)Z
utilMDE.Options.OptionInfo:argument_required()Z
utilMDE.ArraysMDE:indexOf([ZZ)I
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.MethodDeclaration;)V
jtb.JavaParser:jj_3_4()Z
daikon.PptName:PptName(Ljava.lang.String;)V
jtb.JavaParser:jj_3R_72()Z
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
jtb.syntaxtree.ClassOrInterfaceDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclarator;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.PptSlice0:initInvariantsSeen()V
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.tools.jtb.PptNameMatcher:getUngenerifiedType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String; | ASSIGN | 123225 | = null
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
daikon.PptName:getMethodName()Ljava.lang.String;
utilMDE.Intern:internSubsequence([III)[I
jtb.JavaParser:jj_3R_98()Z
jtb.JavaParserTokenManager:MoreLexicalActions()V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;II)V
utilMDE.UtilMDE:splitLines(Ljava.lang.String;)[Ljava.lang.String;
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.Quant:eltsEqual([II)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InclusiveOrExpression;)V
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:lexGT([I[I)Z
jtb.visitor.TreeFormatter:TreeFormatter(II)V
jtb.JavaParser:jj_3_5()Z
utilMDE.Intern:numIntArrays()I
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
utilMDE.SimpleLog:SimpleLog(Z)V
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Intern:intern([J)[J
jtb.JavaParser:jj_3_28()Z
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptName:toString()Ljava.lang.String;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ImportDeclaration;)V
utilMDE.ArraysMDE:sum([[I)I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;Ljava.lang.String;)V
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.TypeDeclaration:TypeDeclaration(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.RelationalExpression;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;)V
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.UtilMDE:removeWhitespaceAfter(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltwiseLT([I)Z
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
jtb.syntaxtree.NodeToken:trimSpecials()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReturnStatement;)V
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ConditionalOrExpression;)V
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.FormalParameter;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.syntaxtree.AndExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V
jtb.syntaxtree.ClassOrInterfaceBody:ClassOrInterfaceBody(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.TypeArguments:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:eltsGT([II)Z
utilMDE.Assert:assertTrue(Z)V
daikon.Quant:lexEqual([I[I)Z
jtb.syntaxtree.TypeDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor.1:visit(Ljtb.syntaxtree.TypeParameter;)V
daikon.Quant:memberOf(J[J)Z
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:jj_3_18()Z
jtb.visitor.TreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
utilMDE.ArraysMDE:indexOf([II)I
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
jtb.syntaxtree.TypeDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat:lte(DD)Z
jtb.visitor.TreeDumper:TreeDumper(Ljava.io.Writer;)V
utilMDE.Options.ArgException:ArgException(Ljava.lang.String;)V
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
utilMDE.OrderedPairIterator:setnext2()V
jtb.syntaxtree.TypeParameters:accept(Ljtb.visitor.Visitor;)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.NodeFinder:inPre()Z
jtb.JavaParser:jj_3R_163()Z
daikon.Quant:gt(II)Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.Statement;)V
jtb.JavaParser:jj_2_21(I)Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
jtb.syntaxtree.TypeArgument:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
jtb.syntaxtree.ConditionalOrExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
daikon.Quant:setDiff([I[I)[I
utilMDE.MathMDE:gcd([I)I
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.PptTopLevel:name()Ljava.lang.String;
jtb.syntaxtree.NodeOptional:NodeOptional()V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;)V
daikon.tools.jtb.Ast:quickFixForInternalComment(Ljava.lang.String;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalExpression;)V
utilMDE.ArraysMDE:fn_compose([I[I)[I
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.PrimaryPrefix;)V
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
jtb.syntaxtree.CompilationUnit:CompilationUnit(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.inv.Invariant:format()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeOptional;)V
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
jtb.JavaParser:jj_3R_103()Z
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:subsetOf([B[I)Z
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.UtilMDE:joinLines([Ljava.lang.Object;)Ljava.lang.String;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.ProglangType:isIntegral()Z
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
jtb.JavaParser:jj_3R_76()Z
jtb.JavaParser:jj_2_5(I)Z
daikon.Quant:eltsLT([II)Z
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
jtb.JavaCharStream:getEndColumn()I
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:subsetOf([D[F)Z
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.BlockStatement;)V
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
jtb.syntaxtree.VariableDeclaratorId:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NullLiteral:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_54()Z
jtb.JavaParser:jj_3_14()Z
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
jtb.visitor.TreeFormatter:processList(Ljtb.syntaxtree.NodeListInterface;Ljtb.visitor.FormatCommand;)V
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
utilMDE.Intern:intern([D)[D
jtb.JavaParser:jj_3_1()Z
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_102()Z
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.Quant:subsetOf([J[J)Z
jtb.JavaParser:jj_3R_210()Z
jtb.JavaParser:jj_3R_53()Z
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.InvMap:InvMap()V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
jtb.syntaxtree.TypeArguments:TypeArguments(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeArgument;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MultiplicativeExpression;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
jtb.JavaCharStream:readChar()C
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryPrefix;)V
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.tools.jtb.Ast:getClassName(Ljtb.syntaxtree.Node;)Ljava.lang.String;
jtb.JavaParser:jj_3_27()Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameter;)V
jtb.JavaParser:jj_3_35()Z
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
jtb.syntaxtree.NodeSequence:elementAt(I)Ljtb.syntaxtree.Node;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
jtb.JavaParser:jj_3_13()Z
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.Quant:memberOf(F[F)Z
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.AndExpression;)V
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.Invariant:logOn()Z
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
jtb.JavaParser:jj_2_12(I)Z
utilMDE.UtilMDE:removeWhitespaceAround(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
jtb.JavaParser:jj_3R_70()Z
daikon.test.TestAst.ClassOrInterfaceDeclarationHarvester:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments;
jtb.JavaParser:jj_3_20()Z
jtb.syntaxtree.ClassOrInterfaceDeclaration:getParent()Ljtb.syntaxtree.Node;
utilMDE.ArraysMDE:min_max([I)[I
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.ValueTuple:size()I
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.ModBitTracker:num_samples()I
jtb.JavaParser:jj_3R_136()Z
daikon.Quant:eltwiseGT([I)Z
utilMDE.WeakHasherMap:size()I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.InstanceOfExpression;)V
jtb.JavaCharStream:FillBuff()V
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
utilMDE.MathMDE:modulus([I)[I
jtb.JavaParser:jj_3R_123()Z | STATEMENT | 191522 | stmt -> ;
jtb.JavaParser:jj_2_13(I)Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
jtb.syntaxtree.BlockStatement:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
jtb.syntaxtree.FormalParameter:FormalParameter(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Type;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.MultiplicativeExpression;)V
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
utilMDE.UtilMDE:removeWhitespaceBefore(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant:getConfidence()D
jtb.syntaxtree.NodeListOptional:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.CompilationUnit:accept(Ljtb.visitor.Visitor;)V
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:jj_3R_119()Z
jtb.JavaParser:jj_3R_164()Z
jtb.JavaParser:jj_2_16(I)Z
jtb.JavaParser:VariableDeclaratorId()Ljtb.syntaxtree.VariableDeclaratorId;
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_51()Z
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PostfixExpression;)V
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
jtb.syntaxtree.ImportDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.tools.jtb.SimpleTreeDumper:printToken(Ljava.lang.String;)V
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:jj_3R_52()Z
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.visitor.FormatCommand:getCommand()I
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:memberOf(S[S)Z
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Name;)V
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
jtb.JavaParser:jj_3R_60()Z
daikon.PptSlice0.ImplicationWrapper:hashCode()I
jtb.JavaParser:jj_3_22()Z
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
jtb.syntaxtree.Type:accept(Ljtb.visitor.Visitor;)V
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.Quant:subsetOf([D[D)Z
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_58()Z
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.test.TestAst:checkMatch(Ljava.lang.String;Ljtb.syntaxtree.MethodDeclaration;Ldaikon.tools.jtb.PptNameMatcher;)V
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
jtb.JavaParser:jj_3_3()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AndExpression;)V
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_96()Z
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ShiftExpression;)V
jtb.syntaxtree.ExclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:copy(Ljava.util.HashMap;)Ljava.util.HashMap;
daikon.Quant:gte(II)Z
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
daikon.Quant:setEqual([I[I)Z
daikon.Quant:lexLTE([I[I)Z
daikon.VarInfo:new_ppt()V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
jtb.syntaxtree.NodeListOptional:getParent()Ljtb.syntaxtree.Node;
jtb.syntaxtree.RelationalExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Statement;)V
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ShiftExpression;)V
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
jtb.visitor.TreeFormatter:space()Ljtb.visitor.FormatCommand;
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.ModBitTracker:ModBitTracker(I)V
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.inv.ValueSet:ValueSet(I)V
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
utilMDE.MathMDE:pow_fast(II)I
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.EqualityExpression;)V
jtb.syntaxtree.NodeListOptional:present()Z
jtb.JavaParser:jj_3R_63()Z
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:min([I)I
jtb.JavaParser:jj_3R_118()Z
jtb.JavaParser:jj_3_21()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
jtb.JavaParser:jj_ntk()I
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameter;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.ProglangType:isScalar()Z
jtb.syntaxtree.Modifiers:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:eltsNotEqual([II)Z
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
jtb.syntaxtree.AdditiveExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
jtb.syntaxtree.TypeDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.JavaParser:jj_3R_68()Z
jtb.syntaxtree.ShiftExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_137()Z
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
jtb.syntaxtree.NodeOptional:present()Z
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
utilMDE.FuzzyFloat:gt(DD)Z
jtb.syntaxtree.ClassOrInterfaceBody:accept(Ljtb.visitor.Visitor;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
jtb.syntaxtree.NodeToken:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
jtb.JavaParser:jj_3R_100()Z
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
jtb.JavaParser:jj_3R_80()Z
jtb.visitor.TreeFormatter:TreeFormatter()V
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
jtb.JavaParser:jj_3R_114()Z
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
utilMDE.MathMDE:nonmodulus_strict([I)[I
jtb.JavaParser:jj_3_12()Z
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ExclusiveOrExpression;)V
jtb.JavaParser:jj_3_17()Z
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:sum([I)I
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:ne(II)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeDeclaration;)V
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.Quant:pairwiseLTE([I[I)Z
jtb.JavaParser:jj_3R_134()Z
jtb.visitor.TreeFormatter:force()Ljtb.visitor.FormatCommand;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
jtb.JavaParser:jj_3R_109()Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
utilMDE.WeakHasherMap:processQueue()V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.MathMDE:bitwiseComplement(I)I
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.ProglangType:baseIsIntegral()Z
daikon.tools.jtb.Ast:create(Ljava.lang.String;[Ljava.lang.Class;[Ljava.lang.Object;Ljava.lang.String;)Ljtb.syntaxtree.Node;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
jtb.JavaParser:jj_3R_87()Z
jtb.syntaxtree.TypeArguments:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_115()Z
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.PptSlice0:arity()I
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
daikon.tools.jtb.PptNameMatcher:extractPptArgs(Ldaikon.PptName;)Ljava.util.List;
daikon.Quant:subsetOf([S[S)Z
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_2_14(I)Z
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.UtilMDE:lineNumberFileReader(Ljava.io.File;)Ljava.io.LineNumberReader;
daikon.tools.jtb.PptNameMatcher:typeMatch(Ljava.lang.String;Ljtb.syntaxtree.FormalParameter;)Z
daikon.inv.OutputFormat:isJavaFamily()Z
jtb.JavaParser:jj_3R_57()Z
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.Block;)V
jtb.JavaParser:jj_3R_99()Z
jtb.JavaParser:jj_3R_48()Z
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String; | CONDITION | 14830 | if (x) -> if (!x)
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:ClassOrInterfaceDeclaration(Ljtb.syntaxtree.NodeChoice;Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ClassOrInterfaceBody;)V
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.ProglangType:baseIsScalar()Z
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.Quant:concat([I[I)[I
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
utilMDE.ArraysMDE:max([I)I
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
jtb.syntaxtree.NodeChoice:getParent()Ljtb.syntaxtree.Node;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
utilMDE.ArraysMDE:subarray([III)[I
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
jtb.syntaxtree.ClassOrInterfaceBody:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:subsetOf([F[F)Z
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
jtb.JavaParser:jj_scan_token(I)Z
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
jtb.JavaParser:jj_3R_85()Z
jtb.JavaParser:jj_3R_88()Z
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.FuzzyFloat:ne(DD)Z
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.Quant:intersection([I[I)[I
daikon.inv.Invariant:prob_and(DDD)D
jtb.JavaParser:jj_3_29()Z
jtb.syntaxtree.Block:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern.SequenceAndIndices:hashCode()I
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
daikon.Debug:logOn()Z
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.UtilMDE:join([Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName:name()Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.UtilMDE:lineNumberFileReader(Ljava.lang.String;)Ljava.io.LineNumberReader;
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.tools.jtb.Ast:getName(Ljtb.syntaxtree.MethodDeclaration;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_2_18(I)Z
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.inv.Invariant:prob_and(DD)D
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
jtb.JavaParser:jj_3R_135()Z
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ResultType;)V
jtb.JavaParser:jj_3R_161()Z
jtb.syntaxtree.NodeChoice:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V | CONDITION | 1380 | if (x) -> if (!x)
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:eq(DD)Z
jtb.JavaParser:jj_2_25(I)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
jtb.JavaCharStream:UpdateLineColumn(C)V
utilMDE.OrderedPairIterator:setnext1()V
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.FormalParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptSlice1:arity()I
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.tools.jtb.Ast:getParameters(Ljtb.syntaxtree.MethodDeclaration;)Ljava.util.List;
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.InstanceOfExpression:accept(Ljtb.visitor.Visitor;)V
daikon.Ppt:Ppt()V
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
jtb.syntaxtree.NodeSequence:elements()Ljava.util.Enumeration;
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.MathMDE:sign(I)I
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_49()Z
jtb.syntaxtree.NodeSequence:getParent()Ljtb.syntaxtree.Node;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArgument;)V
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_2_17(I)Z
jtb.JavaParser:jj_3_16()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
utilMDE.OrderedPairIterator:hasNext()Z
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
jtb.syntaxtree.FormalParameters:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:eltsGteIndex([I)Z
daikon.ModBitTracker:split(I)I
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
jtb.syntaxtree.MethodDeclarator:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_180()Z
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.tools.jtb.Ast:format(Ljtb.syntaxtree.Node;)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Modifiers;)V
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
jtb.JavaParser:jj_3_11()Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
utilMDE.MathMDE:gcd_differences([I)I
daikon.VarInfoName:esc_name()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameters;)V
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ExclusiveOrExpression;)V
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:eltsNotEqualIndex([I)Z
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_105()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeSequence;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarComparabilityImplicit:alwaysComparable()Z
jtb.JavaParser:jj_3R_108()Z
daikon.ProglangType:isPseudoArray()Z
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.Quant:lte(II)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalAndExpression;)V
daikon.Quant:eltwiseLTE([I)Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakIdentityHashMap:indexFor(II)I
jtb.visitor.TreeFormatter:outdent(I)Ljtb.visitor.FormatCommand;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArguments;)V
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.diff.Node:add(Ljava.lang.Object;)V
jtb.JavaParser:jj_3R_56()Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:ungenerify(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.Quant:pairwiseSquare([I[I)Z
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.Quant:memberOf(I[I)Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
jtb.JavaParser:jj_3_10()Z
daikon.inv.Invariant:justified()Z
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
utilMDE.FuzzyFloat:indexOf([DD)I
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:eltwiseGTE([I)Z
jtb.syntaxtree.NodeOptional:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_2_35(I)Z
jtb.syntaxtree.UnaryExpressionNotPlusMinus:accept(Ljtb.visitor.Visitor;)V
daikon.tools.jtb.Ast:getType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
jtb.visitor.TreeFormatter:indent()Ljtb.visitor.FormatCommand;
daikon.PptName:getSignature()Ljava.lang.String;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.diff.Node:Node()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpression;)V
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
jtb.syntaxtree.InclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat; | RETURN | 1511 | return null
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
jtb.JavaParser:jj_3_30()Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:eltsLTE([II)Z
jtb.JavaParser:jj_3R_124()Z
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.VarInfoName.Add:amount()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalOrExpression;)V
daikon.tools.jtb.SimpleTreeDumper:SimpleTreeDumper(Ljava.io.Writer;)V
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.Quant:eltsGtIndex([I)Z
daikon.Quant:slice([III)[I
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ConditionalAndExpression;)V
jtb.syntaxtree.VariableDeclaratorId:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_107()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AdditiveExpression;)V
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
jtb.visitor.FormatCommand:getNumCommands()I
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
jtb.syntaxtree.PrimaryExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.NullLiteral;)V
daikon.PptName:getFullClassName()Ljava.lang.String;
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.ConditionalAndExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_86()Z
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ConditionalExpression;)V
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.TreeFormatter:outdent()Ljtb.visitor.FormatCommand;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.AdditiveExpression;)V
jtb.JavaParser:jj_3R_67()Z
utilMDE.LimitedSizeIntSet:size()I
jtb.JavaParser:jj_3R_47()Z
jtb.JavaParser:jj_3R_73()Z
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.UnaryExpression;)V
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3_36()Z
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
utilMDE.ArraysMDE:fn_is_permutation([I)Z
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
utilMDE.MathMDE:missing_numbers([I)[I
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.visitor.TreeFormatter:force(I)Ljtb.visitor.FormatCommand;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
jtb.JavaParser:jj_2_15(I)Z
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
jtb.syntaxtree.NodeList:NodeList()V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_75()Z
jtb.JavaParser:jj_2_4(I)Z
daikon.ValueTuple:isMissingFlow(I)Z
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;Z)Z
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
jtb.JavaParser:jj_3_15()Z
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
daikon.Quant:pairwiseDivides([I[I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReferenceType;)V
daikon.VarInfoName:hashCode()I
jtb.syntaxtree.MethodDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
jtb.syntaxtree.Name:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeSequence:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.tools.jtb.SimpleTreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_116()Z
daikon.Quant:eltsGTE([II)Z
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_69()Z
jtb.syntaxtree.TypeArgument:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:lexNotEqual([I[I)Z
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.Quant:isReverse([I[I)Z
jtb.JavaParser:jj_3R_169()Z
daikon.Quant:lexLT([I[I)Z
daikon.test.InvariantFormatTester:execute()Z
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
jtb.syntaxtree.ResultType:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.MethodDeclarator;)V
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.Quant:noDups([I)Z
jtb.JavaCharStream:getBeginColumn()I
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.InclusiveOrExpression;)V
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
utilMDE.ArraysMDE:sorted([I)Z
jtb.JavaParser:JavaParser(Ljava.io.Reader;)V
jtb.JavaParser:jj_3R_106()Z
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eq(DD)Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.Quant:memberOf(F[D)Z
daikon.Quant:eltsEqualIndex([I)Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.Quant:pairwiseGT([I[I)Z
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeBound;)V
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
utilMDE.UtilMDE:split(Ljava.lang.String;Ljava.lang.String;)[Ljava.lang.String;
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_2_3(I)Z
daikon.ValueTuple:isMissingNonsensical(I)Z
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.TestQuant:removeAdjacentDups([I)[I
utilMDE.Fmt:i(I)Ljava.lang.Integer;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PackageDeclaration;)V
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.ProglangType:isArray()Z
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.ModBitTracker:num_sets()I
jtb.syntaxtree.EqualityExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
utilMDE.Intern:internSubsequence([JII)[J
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaCharStream:backup(I)V
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:element_range([I)I
jtb.JavaParser:jj_2_1(I)Z
jtb.syntaxtree.PrimaryPrefix:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.PostfixExpression;)V
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.PptSlice2:arity()I
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.Quant:eltwiseEqual([I)Z
daikon.diff.InvMap:toString()Ljava.lang.String;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
utilMDE.MathMDE:pow(II)I
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
utilMDE.FuzzyFloat:FuzzyFloat()V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.inv.Invariant:prob_or(DD)D
daikon.tools.jtb.Ast:getPackage(Ljtb.syntaxtree.CompilationUnit;)Ljava.lang.String;
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Intern:intern([I)[I
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_97()Z
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.visitor.TreeFormatter:indent(I)Ljtb.visitor.FormatCommand;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
jtb.syntaxtree.PostfixExpression:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.FormalParameters;)V
jtb.syntaxtree.Statement:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.TypeBound:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.PrimaryExpression;)V
utilMDE.LimitedSizeIntSet:add(I)V
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljtb.syntaxtree.Node;)Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.Quant:lexGTE([I[I)Z
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
jtb.syntaxtree.TypeParameter:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_149()Z
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
utilMDE.FuzzyFloat:gte(DD)Z
daikon.tools.jtb.Ast.1GetParametersVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
daikon.Quant:subsetOf([I[I)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:subsetOf([F[D)Z
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.ModBitTracker:num_vars()I
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.RelationalExpression;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBody;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NullLiteral;)V
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_133()Z
jtb.syntaxtree.NodeToken:numSpecials()I
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
jtb.JavaCharStream:getEndLine()I
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.Invariants:Invariants()V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.BlockStatement;)V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.visitor.TreeFormatter:add(Ljtb.visitor.FormatCommand;)V
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
1021 2 1135 2 273 2 830 2 1064 4 688 2 44 2 1237 2 387 2 
921 2 169 2 1194 2 1073 2 429 2 158 2 421 6 895 6 1175 2 897 6 83 2 
2 6 964 2 277 2 31 2 1262 2 1049 4 1135 2 244 6 951 6 1243 4 979 6 1093 2 387 2 
1006 10 1123 8 157 29 410 16 159 2 328 2 1084 10 891 10 1218 6 1135 6 772 10 573 2 893 4 978 10 894 26 345 6 387 6 1098 2 936 12 859 8 139 2 1183 2 544 16 147 4 149 2 831 4 360 8 112 4 1003 16 47 8 
769 6 216 4 
39 2 
1080 2 1006 2 1123 2 157 6 410 2 1084 2 891 2 567 2 1218 2 772 2 893 2 1171 2 978 4 894 4 578 2 340 2 936 2 1023 2 1233 2 942 2 544 2 839 2 1003 2 
63 4 936 5 120 6 1006 4 157 15 371 2 410 8 1084 4 891 4 187 6 129 4 544 8 772 4 205 2 894 12 112 2 1003 8 
676 2 1249 4 1121 2 1254 4 441 2 1206 2 156 4 677 2 727 4 559 4 125 2 1129 2 520 2 163 10 734 4 6 14 774 62 575 2 14 8 456 6 744 2 20 4 778 2 293 2 100 2 785 2 1024 2 353 4 1188 4 257 10 616 2 947 4 308 2 911 2 800 4 111 4 511 2 474 2 362 4 1079 2 
562 2 662 2 417 2 307 2 811 2 189 2 39 2 713 2 454 2 343 2 1019 2 
237 2 559 4 885 2 563 2 1135 4 168 2 14 2 1143 2 97 2 749 2 352 2 825 2 585 2 502 2 190 2 1241 2 1076 2 1075 2 670 2 755 2 43 4 267 2 115 2 117 2 365 2 370 2 1258 4 844 2 448 2 692 2 384 2 387 4 1021 2 299 2 301 2 1282 2 1188 2 223 2 308 2 870 2 149 2 402 4 74 2 878 2 
1006 16 120 6 1163 2 369 2 157 54 1123 18 410 32 1084 16 891 16 242 2 1135 4 129 4 1218 4 772 16 893 2 978 6 894 48 852 2 345 4 387 4 63 4 1231 6 936 22 462 6 495 4 139 2 1187 2 945 8 187 6 544 32 912 6 70 2 40 4 360 6 997 6 1032 4 269 4 960 4 1003 32 
677 2 14 2 456 2 
459 2 1251 2 725 2 1044 2 102 2 889 22 415 2 712 2 976 2 996 2 133 2 853 10 674 2 878 2 
479 2 968 2 5 8 165 4 1135 28 170 2 652 2 19 1 819 2 188 1 665 2 669 2 44 2 836 4 45 2 1165 2 521 1 202 5 377 6 687 6 379 1 690 1 58 2 387 26 1178 2 698 2 215 1 704 2 862 2 707 2 1192 2 872 1 1199 2 73 6 230 2 409 2 888 1 731 1 1223 2 1226 2 93 1 905 6 103 2 1072 1 108 2 758 1 916 2 268 1 113 2 923 1 124 2 287 2 601 2 1265 2 131 1 1269 4 781 2 783 2 1275 2 1276 4 298 1 1278 2 1280 1 1104 1 1105 2 302 2 466 2 1110 4 791 1 796 2 473 2 313 2 154 2 318 1 
1215 2 
1135 2 1173 2 
1135 4 856 2 877 2 
0 170 631 2 634 2 3 8 635 8 638 24 8 180 10 10 642 8 640 2 643 10 644 2 645 4 11 6 12 90 649 2 15 10 16 8 18 8 654 4 22 10 655 10 24 2 656 2 25 22 657 44 27 2 29 10 30 52 658 8 32 28 34 2 659 2 660 2 663 10 664 2 38 2 41 4 671 22 673 2 46 2 48 6 49 10 678 2 680 2 679 404 684 2 53 6 54 2 56 2 686 2 693 28 694 2 59 180 60 92 62 26 695 4 64 6 65 18 701 64 703 16 66 6 67 2 708 10 711 160 714 10 72 2 75 6 76 8 717 4 718 24 716 48 77 8 719 10 720 2 78 4 722 256 724 18 723 2 79 8 728 382 726 6 84 10 733 2 86 2 89 2 739 2 740 6 742 2 92 2 94 2 745 40 747 160 748 2 101 2 750 2 751 2 104 26 107 2 109 4 753 2 759 66 761 4 116 28 762 104 121 2 122 396 767 4 768 4 770 2 134 4 777 4 136 2 779 78 784 26 137 8 140 8 786 4 141 2 787 10 143 10 788 2 144 4 789 2 145 2 146 4 793 2 148 2 794 2 795 2 797 2 798 2 153 10 802 44 155 10 805 2 807 4 160 24 808 2 809 2 810 4 167 4 171 2 815 2 175 2 173 42 177 8 816 2 818 6 178 8 182 28 181 60 183 2 822 46 186 2 829 4 191 2 834 2 838 2 192 6 194 286 193 114 840 604 196 24 843 4 845 4 198 2 200 2 846 2 206 4 851 2 207 2 208 2 212 2 211 2 213 2 857 2 858 10 860 2 861 10 219 180 221 94 871 2 224 4 225 2 227 10 873 2 229 2 876 2 880 16 879 4 234 2 235 2 236 2 882 2 883 4 239 180 884 236 887 2 241 2 890 2 245 126 896 344 899 2 250 2 249 2 251 6 252 2 253 28 901 28 902 2 903 2 904 10 256 4 906 4 258 8 259 28 909 2 261 2 907 226 263 2 913 4 914 4 915 24 266 2 270 2 272 62 918 2 920 2 919 4 922 2 924 2 282 2 926 12 284 4 929 2 286 4 931 12 932 2 290 104 291 4 935 10 938 2 296 8 940 10 944 24 305 82 949 14 309 4 952 8 953 2 311 2 954 36 312 2 313 2 314 2 317 4 961 10 962 2 319 10 320 24 323 126 324 2 326 18 965 2 966 226 327 2 329 12 330 6 331 26 970 2 332 10 974 8 335 8 338 6 339 2 341 18 980 2 344 2 346 2 981 24 348 2 984 4 985 18 351 4 989 2 990 4 355 4 356 2 357 2 993 12 358 2 359 2 999 216 1000 2 1002 2 1001 10 363 2 364 8 366 10 1004 2 1005 2 368 2 1008 8 372 10 373 8 1011 10 1012 66 1013 4 375 2 376 2 378 6 380 10 381 10 382 2 383 24 1018 104 387 10 1022 2 389 4 390 28 392 6 397 72 1027 2 1030 8 400 42 399 2 1031 10 404 2 403 2 1035 2 1036 6 1039 8 1038 2 408 18 1045 14 1047 10 413 2 1051 2 1050 364 1052 2 1053 2 416 20 1054 18 1056 10 1057 2 422 14 1058 2 424 2 1059 2 1061 2 1060 146 1062 2 1063 2 427 4 1065 4 430 2 431 2 432 2 1066 2 1068 2 1069 2 434 24 1070 2 1071 2 1077 2 436 10 1078 10 437 2 438 8 444 102 445 2 1082 4 446 10 447 8 1086 10 449 2 451 2 1088 18 453 2 1090 2 1091 2 458 216 1099 12 1100 26 1101 2 1103 2 465 44 464 2 1107 2 469 2 1109 52 1111 10 1113 12 1115 226 1118 32 1119 28 475 6 476 28 477 2 1125 10 1124 80 480 180 1131 2 481 2 1134 2 1135 10 1136 10 1137 2 484 8 483 2 485 8 1140 180 487 26 488 10 1141 2 490 68 489 4 1142 2 492 2 1144 26 1145 2 1146 6 494 2 496 4 499 4 500 2 504 12 505 4 506 2 1154 14 1156 2 509 10 1158 12 510 8 1159 2 1161 2 517 8 516 2 515 396 1166 4 518 2 1169 104 523 52 525 4 526 2 527 4 529 70 528 2 1177 10 535 10 534 180 537 68 536 20 1186 198 1189 4 542 2 1190 10 541 2 1191 2 543 2 1195 2 545 2 1197 2 551 18 552 10 554 2 556 10 1204 2 555 2 557 2 558 4 1209 4 1213 12 1216 4 565 2 1217 2 571 2 570 2 572 104 1222 24 1225 2 576 28 1228 2 1227 10 577 44 579 10 1229 10 582 6 1234 2 584 2 1235 14 1236 2 586 20 1238 2 589 4 588 364 1247 12 592 4 1244 2 1246 22 593 28 594 2 595 4 596 6 1252 2 1253 4 598 4 1256 2 599 2 1266 8 1267 6 1268 8 603 8 1271 4 605 4 606 32 1272 98 1274 180 608 4 610 14 611 2 1277 2 1281 2 615 12 1283 12 617 2 1284 2 619 2 621 36 1289 2 1290 2 629 4 
218 2 28 2 51 2 1212 1 
963 2 218 2 
1164 2 218 2 831 2 14 2 127 2 855 2 991 2 
218 2 650 2 991 2 
1257 2 218 2 991 2 
51 2 1130 2 760 2 
218 2 991 2 
334 2 760 2 
218 2 709 2 
118 2 51 2 760 2 
646 2 264 2 51 2 
428 2 51 2 766 2 
973 2 1152 2 51 2 
217 2 254 2 51 2 
760 2 1202 2 
218 2 138 2 
367 2 646 2 
428 2 975 2 
973 2 566 2 
254 2 998 2 
760 2 1150 2 
254 2 927 2 
973 2 1033 2 
222 2 428 2 
306 2 646 2 
388 2 118 2 51 2 760 2 
388 2 118 2 51 2 1127 2 760 2 
51 2 760 2 1108 2 
51 2 987 2 760 2 
179 2 1261 2 412 2 471 2 
1147 4 1260 2 613 2 1149 2 33 2 220 2 889 6 637 2 539 2 468 2 393 2 503 4 482 2 1074 2 799 2 627 2 837 2 292 2 
42 2 51 2 
37 2 821 2 14 2 127 2 
37 2 26 2 821 2 1164 2 14 2 127 2 
218 2 831 2 14 2 127 2 440 2 991 2 
870 2 1139 2 
831 2 14 2 1034 2 127 2 
973 2 386 2 
254 2 1120 2 
646 2 478 2 
1026 2 428 2 
428 2 254 2 1132 2 
428 2 254 2 651 2 
428 2 254 2 337 2 
428 2 254 2 1242 2 
199 2 127 2 14 2 21 6 294 2 300 2 792 6 1240 2 
760 2 105 2 
230 2 
321 2 633 2 806 2 4 8 5 4 165 4 1135 26 814 2 652 2 19 2 176 2 347 2 819 2 827 2 665 2 669 2 44 2 672 2 1160 2 195 2 514 2 197 2 377 2 687 2 530 2 387 26 698 2 704 2 862 2 864 1 1185 2 863 2 707 6 1192 2 866 8 874 2 73 4 1037 2 409 2 85 2 414 2 1223 2 1224 2 1226 2 741 2 93 2 900 2 746 2 905 6 910 2 108 2 916 2 1255 4 764 2 276 2 126 2 773 2 289 2 1269 4 457 2 781 2 783 6 780 4 1275 2 1096 4 1276 4 1278 2 302 2 614 4 466 2 470 1 1110 4 946 2 618 2 796 2 473 6 313 2 154 2 
321 2 633 2 806 2 479 2 4 8 5 4 165 4 1135 26 814 2 652 2 19 2 176 2 347 2 819 2 827 2 665 2 669 2 44 2 672 2 1160 2 195 2 514 2 842 2 197 2 377 2 687 2 854 2 387 26 698 2 1180 2 704 2 862 2 1185 2 863 2 707 6 1192 2 866 8 874 2 73 6 1037 2 409 2 85 2 414 2 1223 2 1224 2 91 2 1226 2 741 2 93 2 900 2 746 2 905 6 108 2 916 2 1255 4 764 2 276 2 124 2 126 2 773 2 1269 4 457 2 781 2 783 6 780 4 1275 2 1096 4 1276 4 1278 2 302 2 614 2 466 2 1110 4 946 2 618 2 796 2 473 6 313 2 154 2 
411 2 
867 2 214 2 
55 2 135 2 1085 2 
55 2 135 2 1085 2 
4 4 479 2 967 2 5 2 333 4 9 2 165 4 1135 24 169 4 652 2 819 2 982 2 820 4 983 4 349 4 824 2 661 2 665 2 507 4 994 2 669 2 44 2 672 2 675 2 1007 2 1009 2 55 2 203 2 691 2 387 16 1179 2 698 2 700 4 704 2 862 4 1185 4 863 4 391 2 394 2 707 2 866 4 1192 2 1193 2 1194 4 1198 2 547 2 73 6 406 2 550 2 1203 2 409 2 1046 2 85 2 83 4 735 2 568 2 569 2 243 2 420 2 1223 2 1224 4 1226 2 421 12 895 16 247 6 248 2 897 12 900 6 581 2 429 4 905 6 260 2 587 2 108 2 1073 4 265 4 916 2 274 2 119 2 921 4 765 2 443 6 124 2 283 2 1085 6 130 2 773 4 1269 4 135 4 457 4 781 2 783 2 1275 2 1276 4 1278 2 614 2 302 2 466 2 1110 4 1112 2 796 2 473 2 313 2 315 4 154 2 1287 2 
274 2 636 2 862 2 283 2 1025 2 203 2 587 2 1135 4 419 2 1153 2 590 2 796 2 994 2 547 2 214 2 1042 2 387 2 
4 4 479 2 967 4 5 4 333 4 9 2 165 4 1135 24 169 4 812 2 652 2 23 2 819 2 820 4 983 4 349 4 823 2 824 2 661 2 665 2 507 4 669 2 44 2 672 2 675 2 1007 2 1009 2 55 2 203 2 696 2 387 16 698 2 700 4 704 2 862 2 1185 4 863 4 391 2 394 2 707 2 866 4 1192 2 1193 2 1194 4 1198 2 73 6 406 2 550 4 232 2 1203 2 409 2 1046 2 85 2 83 4 568 2 569 2 243 2 420 2 1223 2 1224 4 1226 2 421 12 895 16 247 6 248 2 897 12 900 6 581 2 429 4 905 6 260 2 587 2 108 2 1073 4 265 4 916 2 274 2 119 2 921 4 765 2 443 6 124 2 283 2 1085 6 130 2 773 4 602 2 1269 4 135 4 457 4 781 2 783 2 1275 2 1276 4 1278 2 302 2 466 2 1110 4 1112 2 796 2 473 2 313 2 315 4 154 2 1287 2 
4 4 479 2 967 2 5 2 333 4 9 2 165 4 1135 24 169 4 652 2 819 2 820 4 983 4 349 4 824 2 661 2 665 2 507 4 994 2 669 2 44 2 672 2 675 2 1007 2 1009 2 55 2 203 2 696 2 387 16 698 2 700 4 704 2 862 4 1185 4 863 4 391 2 394 2 707 2 866 4 1192 2 1193 2 1194 4 1198 2 546 2 547 2 73 6 406 2 550 4 1203 2 409 2 1046 2 886 2 85 2 83 4 568 2 569 2 243 2 420 2 1223 2 1224 4 1226 2 421 12 895 16 247 6 248 2 897 12 900 6 581 2 429 4 905 6 260 2 587 2 108 2 1073 4 265 4 916 2 274 2 119 2 921 4 765 2 443 6 124 2 283 2 1085 6 130 2 132 2 773 4 1269 4 135 4 457 4 781 2 783 2 1275 2 1276 4 1278 2 614 1 302 2 466 2 1110 4 1112 2 796 2 473 2 622 2 955 2 313 2 315 4 154 2 1287 2 
409 2 479 2 5 2 85 2 1133 2 164 4 165 4 1135 24 418 2 1223 2 1138 2 336 2 1226 2 652 2 347 2 493 2 900 2 819 2 905 6 108 2 665 2 667 2 669 2 1155 2 44 2 916 2 917 2 925 2 124 2 681 2 374 2 450 2 377 2 687 2 1269 4 1174 2 780 4 783 8 781 2 1020 2 387 18 1275 2 698 2 1276 4 460 2 704 2 862 2 1184 2 1278 2 943 2 302 2 466 2 790 2 707 6 1110 4 1192 2 1028 2 796 2 473 6 405 2 624 2 1286 2 313 2 231 2 73 6 548 2 154 2 
881 2 841 2 803 2 123 4 1081 2 732 1 5 3 1087 2 1135 2 972 3 377 3 687 3 385 2 176 6 347 2 783 2 780 2 1230 2 387 2 937 2 986 2 35 2 707 2 473 2 271 2 
881 2 841 2 803 2 123 4 1081 2 5 2 1087 2 1135 2 972 2 377 2 687 2 385 2 176 6 347 2 783 2 780 2 1230 2 387 2 937 2 986 2 35 2 707 2 473 2 271 2 
881 2 841 2 803 2 123 4 1081 2 5 2 1087 2 1135 2 972 2 377 2 687 2 385 2 176 6 347 2 783 2 780 2 1230 2 387 2 937 2 986 2 35 2 707 2 473 2 271 2 
841 2 1122 2 1006 2 1207 4 157 5 442 4 410 2 1083 2 1084 2 5 3 971 2 201 2 891 2 7 2 1135 10 772 2 687 3 1055 2 1172 2 894 4 1015 6 61 4 580 2 347 2 345 2 783 2 817 2 387 4 295 4 461 2 467 2 68 3 544 2 508 3 754 3 360 4 1200 2 757 4 1117 2 1003 2 
1122 2 157 4 1123 2 1207 4 410 2 971 2 5 2 7 2 891 2 1135 10 1055 2 894 4 345 2 347 2 580 2 817 2 508 2 754 2 360 4 757 4 1003 2 841 2 1006 2 442 4 1083 2 1084 2 201 2 772 2 687 2 1172 2 1015 6 61 4 783 2 387 4 295 4 936 2 461 2 139 2 467 2 68 2 544 2 1200 2 1117 2 
1122 2 157 4 1123 2 1207 4 410 2 971 2 5 2 7 2 891 2 1135 10 1055 2 894 4 345 2 347 2 580 2 817 2 508 2 754 2 360 4 757 4 1003 2 841 2 1006 2 442 4 1083 2 1084 2 201 2 772 2 687 2 1172 2 1015 6 61 4 783 2 387 4 295 4 936 2 461 2 139 2 467 2 68 2 544 2 1200 2 1117 2 
1122 2 157 4 1123 2 1207 4 410 2 971 2 5 2 7 2 891 2 1135 10 1055 2 894 4 345 2 347 2 580 2 817 2 508 2 754 2 360 4 757 4 1003 2 841 2 1006 2 442 4 1083 2 1084 2 201 2 772 2 687 2 1172 2 1015 6 61 4 783 2 387 4 295 4 936 2 461 2 139 2 467 2 68 2 544 2 1200 2 1117 2 
1122 2 157 4 1123 4 1207 4 410 2 971 2 5 2 7 2 891 2 1135 10 1055 2 894 4 345 2 347 2 580 2 817 2 508 2 754 2 360 4 757 4 1003 2 841 2 1006 2 442 4 1083 2 1084 2 201 2 772 2 687 2 1172 2 1015 6 61 4 783 2 387 4 295 4 936 4 461 2 139 4 467 2 68 2 544 2 1200 2 1117 2 
930 2 813 2 1211 2 600 2 185 2 522 2 
806 2 995 2 1211 2 1017 2 114 2 959 2 1288 2 
676 1 1205 2 1162 2 1206 1 1043 2 240 1 561 2 1263 2 1214 2 52 2 928 2 564 2 1135 10 204 2 1092 2 1176 2 387 8 463 2 1148 2 828 2 1239 1 1151 2 665 2 401 1 1245 2 1201 2 
120 4 1006 6 157 15 1123 3 410 6 1210 2 1084 6 891 6 1135 6 771 2 772 6 246 2 894 12 172 2 345 2 387 6 63 2 1231 4 936 4 139 2 502 2 945 2 544 6 70 1 1075 2 950 2 833 2 360 4 756 2 269 2 1003 6 
96 2 295 2 721 2 1181 2 1207 2 969 2 395 2 738 2 835 2 653 2 549 2 61 2 316 2 
96 2 295 2 721 2 1181 6 1207 2 969 2 433 2 395 2 1135 1 738 2 992 2 524 1 835 2 653 2 549 2 61 2 316 4 387 1 
96 4 295 2 721 2 1181 6 1207 2 969 4 433 2 395 2 738 2 992 2 835 4 653 2 549 2 61 2 316 4 
96 8 295 2 721 2 1181 10 1207 2 969 8 433 8 395 2 1135 1 738 2 992 6 524 1 835 8 653 2 549 2 61 2 316 4 387 1 
325 2 632 6 479 58 1126 18 639 4 166 2 1135 150 648 2 977 24 17 2 491 22 819 8 498 2 184 4 826 4 36 4 666 4 668 4 832 4 512 4 513 16 519 4 1010 16 683 10 682 84 1170 24 685 6 1014 24 57 2 689 2 848 4 850 2 209 2 210 10 1016 12 387 134 532 4 697 6 699 2 702 6 1182 6 865 8 538 6 540 24 710 2 866 28 869 8 69 10 1029 8 398 124 1196 4 228 4 73 248 233 2 553 4 1041 92 407 2 238 10 409 14 1208 8 560 2 80 2 730 10 1048 6 82 6 87 8 736 36 1220 16 88 90 737 26 1221 12 1223 14 574 6 743 8 898 4 95 8 425 2 1232 2 426 6 583 16 99 4 106 8 262 4 435 6 110 4 591 42 1248 6 439 26 1250 11 763 6 597 4 275 6 279 2 281 10 124 58 285 6 128 90 1264 10 288 6 1089 17 1269 88 1270 4 933 50 775 6 776 6 934 24 1273 8 607 24 939 1 297 6 1102 6 1279 6 142 2 614 4 303 4 304 8 1110 112 948 34 620 4 310 10 1114 4 623 18 625 2 1116 4 626 6 801 6 152 4 956 42 
630 2 1 2 322 2 238 2 409 2 479 2 560 2 1126 2 730 2 729 2 161 4 162 2 82 2 892 2 1135 46 736 2 1219 2 1220 4 647 4 90 2 648 2 1223 2 977 2 13 2 486 2 342 2 743 2 95 2 819 2 1232 2 583 4 255 2 350 2 1067 2 988 2 498 2 501 2 826 2 908 2 106 2 752 2 1157 2 361 2 1248 2 275 4 1259 2 280 2 1167 2 50 6 281 2 124 2 1010 4 683 2 285 2 1264 2 452 2 1089 2 288 2 849 2 1269 20 1270 2 455 2 209 2 210 2 934 2 1094 2 1095 4 782 2 387 44 699 2 609 2 297 2 1102 2 941 2 612 2 614 2 540 2 396 2 304 2 866 38 1110 20 69 2 1029 6 398 6 310 2 226 4 151 2 73 44 958 2 875 2 1040 2 715 2 
630 10 632 4 479 30 1126 10 1128 32 639 4 641 2 1135 78 648 2 174 4 819 2 350 2 497 16 498 2 666 4 668 4 1157 2 513 8 519 4 1168 8 1010 10 682 24 847 2 685 4 848 4 850 2 209 2 387 70 531 8 532 4 697 4 533 2 702 4 1182 4 705 8 538 4 706 4 866 14 1029 6 398 24 71 2 228 2 73 104 553 4 1041 24 238 4 409 6 1208 4 560 2 80 2 730 6 81 4 1048 4 82 4 736 6 1220 10 1221 14 1223 6 574 4 743 2 898 4 425 2 1232 2 583 10 426 4 99 4 106 2 435 4 110 4 591 16 1248 4 275 2 280 10 278 2 124 28 281 4 285 4 1264 4 1089 10 288 4 1269 36 933 8 776 4 604 8 1273 4 607 8 609 2 297 4 1102 4 1279 4 1106 4 304 2 1110 44 948 30 150 2 472 4 310 4 1114 4 151 10 625 2 1116 4 626 4 801 4 1285 4 957 16 956 8 628 4 
238 2 409 2 1208 4 479 12 560 2 1126 2 730 2 82 4 166 2 1135 28 1220 6 736 2 648 2 1223 2 17 2 743 2 491 10 819 2 1232 2 583 6 99 2 498 2 106 2 512 2 1248 4 513 6 1250 2 275 2 279 2 124 12 281 2 1010 6 285 4 1264 2 1089 2 288 4 689 2 1269 14 209 2 387 26 609 2 699 2 297 4 1102 4 865 2 142 2 614 2 303 2 304 2 866 14 1110 14 948 6 1029 4 398 8 310 2 228 2 1116 2 73 40 958 2 
423 2 
1097 1 868 1 804 1 98 1 180 1 354 1 
1097 1 868 1 804 1 98 1 180 1 354 1 
1097 1 868 1 804 1 98 1 180 1 354 1 
1097 1 868 1 804 1 98 1 180 1 354 1 
1097 1 868 1 804 1 98 1 180 1 354 1 
1097 1 868 1 804 1 98 1 180 1 354 1 
1097 1 868 1 804 1 98 1 180 1 354 1 
1097 1 868 1 804 1 98 1 180 1 354 1 
1097 1 868 1 804 1 98 1 180 1 354 1 
1097 1 868 1 804 1 98 1 180 1 354 1 
1097 1 868 1 804 1 98 1 180 1 354 1 
1097 1 868 1 804 1 98 1 180 1 354 1 
1097 1 868 1 804 1 98 1 180 1 354 1 
1097 1 868 1 804 1 98 1 180 1 354 1 
1097 1 868 1 804 1 98 1 180 1 354 1 
1097 1 868 1 804 1 98 1 180 1 354 1 
1097 1 868 1 804 1 98 1 180 1 354 1 
1097 1 868 1 804 1 98 1 180 1 354 1 
1097 1 868 1 804 1 98 1 180 1 354 1 
1097 1 868 1 804 1 98 1 180 1 354 1 
1097 1 868 1 804 1 98 1 180 1 354 1 
1097 1 868 1 804 1 98 1 180 1 354 1 
1097 1 868 1 804 1 98 1 180 1 354 1 
1097 1 868 1 804 1 98 1 180 1 354 1 
1097 1 868 1 804 1 98 1 180 1 354 1 
1097 1 868 1 804 1 98 1 180 1 354 1 
1097 1 868 1 804 1 98 1 180 1 354 1 
1097 1 868 1 804 1 98 1 180 1 354 1 
1097 1 868 1 804 1 98 1 180 1 354 1 
1097 1 868 1 804 1 98 1 180 1 354 1 
1097 1 868 1 804 1 98 1 180 1 354 1 
1097 1 868 1 804 1 98 1 180 1 354 1 
1097 1 868 1 804 1 98 1 180 1 354 1 
1097 1 868 1 804 1 98 1 180 1 354 1 
1097 1 868 1 804 1 98 1 180 1 354 1 
1097 1 868 1 804 1 98 1 180 1 354 1 
1097 1 868 1 804 1 98 1 180 1 354 1 
1097 1 868 1 804 1 98 1 180 1 354 1 
1097 1 868 1 804 1 98 1 180 1 354 1 
1097 1 868 1 804 1 98 1 180 1 354 1 
1097 1 868 1 804 1 98 1 180 1 354 1 
1097 1 868 1 804 1 98 1 180 1 354 1 
1097 1 868 1 804 1 98 1 180 1 354 1 
1097 1 868 1 804 1 98 1 180 1 354 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V FAILED junit.framework.AssertionFailedError (1184,1547) 
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V PASSED
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V ERROR java.lang.NullPointerException (632,928) (632,928) (632,928) 
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V FAILED junit.framework.AssertionFailedError 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 330 1521 987 
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 330 1521 987 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 330 1521 987 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_0()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_1()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_2()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_3()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_4()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_5()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_6()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_7()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_8()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_9()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_10()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_11()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_12()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_13()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_14()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_15()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_16()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_17()V PASSED
daikon.test.split.SplitterFactoryTest:testmisc_Fib_main_18()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_19()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_20()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_21()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_22()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_23()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_24()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_25()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_26()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_27()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_28()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_29()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_30()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_31()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_32()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__33()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__34()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__35()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__36()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__37()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__38()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__39()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__40()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__41()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__42()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__43()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.VarInfo:isIOASet()Z
utilMDE.MathMDE:sign(I)I
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:dimensions()I
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptTopLevel:getInvariants()Ljava.util.List;
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.inv.unary.stringsequence.EltOneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_116()Z
daikon.inv.binary.sequenceString.SequenceString:seqvar()Ldaikon.VarInfo;
jtb.JavaParser:jj_3R_54()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.inv.binary.sequenceScalar.Member:format_simplify()Ljava.lang.String;
daikon.ModBitTracker:num_sets()I
daikon.Quant:subsetOf([J[J)Z
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:maxsep_point([J[J)[I
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
jtb.visitor.TreeFormatter:space()Ljtb.visitor.FormatCommand;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryExpression;)V
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoSequence.SeqSeqIntEqual:SeqSeqIntEqual(Ldaikon.PptSlice;Z)V
daikon.inv.binary.sequenceString.MemberString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.VarInfo:name()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.Quant:subsetOf([I[I)Z
utilMDE.ArraysMDE:indexOf([II)I
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.tools.jtb.Ast:getClassName(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.Quantify.IOAQuantification:getMembershipRestriction(I)Ljava.lang.String;
jtb.syntaxtree.Expression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoSequence.SubSequence:format_simplify_explicit()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.inv.binary.twoSequence.SubSequence:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:check_modified([JJI)Ldaikon.inv.InvariantStatus;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:isArray()Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.syntaxtree.CompilationUnit:CompilationUnit(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_119()Z
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoSequence.SubSequence:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoString.StringEqual:enabled()Z
utilMDE.Intern:internSubsequence([III)[I
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
jtb.syntaxtree.TypeDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_86()Z
daikon.test.FormatTestCase.SingleOutputTestCase:getDiffString()Ljava.lang.String;
jtb.syntaxtree.ImportDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeSequence:elements()Ljava.util.Enumeration;
daikon.inv.unary.stringsequence.EltOneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.inv.unary.stringsequence.EltOneOfString:add_modified([Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltwiseIntLessThan:enabled()Z
daikon.suppress.NISuppression:NISuppression(Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.inv.binary.sequenceScalar.SequenceScalar:scl_index()I
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltNonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_simplify()Ljava.lang.String;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
utilMDE.ArraysMDE:sum([[D)D
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_114()Z
daikon.Quant:isReverse([I[I)Z
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ImportDeclaration;)V
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.inv.binary.sequenceScalar.SequenceScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceString.MemberString:add_modified([Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.Quant:memberOf(S[S)Z
daikon.Quant:union([I[I)[I
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.inv.binary.sequenceScalar.Member:format_daikon()Ljava.lang.String;
daikon.VarInfo:get_simplify_free_index([Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.ValueTuple:isMissingFlow(I)Z
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
jtb.visitor.FormatCommand:FormatCommand(II)V
daikon.inv.unary.sequence.EltOneOf:subarray_rep()Ljava.lang.String;
daikon.inv.binary.twoSequence.SubSequence:format_ioa()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ExclusiveOrExpression;)V
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quantify.QuantFlags:element_wise()Ljava.util.EnumSet;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat()V
jtb.JavaParser:jj_3_28()Z
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
daikon.suppress.NISuppressor:swap()Ldaikon.suppress.NISuppressor;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeSequence:getParent()Ljtb.syntaxtree.Node;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:eltsLteIndex([I)Z
jtb.JavaParser:jj_3R_106()Z
daikon.inv.binary.twoSequence.TwoSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoSequence.SubSequence:SubSequence(Ldaikon.PptSlice;)V
daikon.diff.InvMap:toString()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.ProglangType:isFloat()Z
jtb.syntaxtree.NodeSequence:elementAt(I)Ljtb.syntaxtree.Node;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Expression;)V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
jtb.syntaxtree.ReferenceType:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReturnStatement;)V
daikon.inv.unary.sequence.EltNonZero:format_simplify()Ljava.lang.String;
daikon.Quant:pairwiseLTE([I[I)Z
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.Reverse:format_daikon()Ljava.lang.String;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.FormalParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
utilMDE.MathMDE:pow_fast(II)I
daikon.Quant:pairwiseDivides([I[I)Z
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.VarInfoName:inOrderTraversal()Ljava.util.Collection;
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3R_163()Z
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:sum([D)D
daikon.Quant:eltwiseGTE([I)Z
daikon.inv.unary.sequence.EltOneOf:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Debug:logDetail()Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
jtb.syntaxtree.TypeArguments:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:is_direct_non_slice_array()Z
jtb.syntaxtree.NodeSequence:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_ioa()Ljava.lang.String;
jtb.syntaxtree.FormalParameter:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.sequenceScalar.Member:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.ValueSet:ValueSet(I)V
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
daikon.VarInfoName.Elements:ioa_name_impl()Ljava.lang.String;
daikon.Quant:memberOf(D[F)Z
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.VariableDeclaratorId:VariableDeclaratorId(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeSequence;)V
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.Quant:slice([III)[I
jtb.JavaParser:jj_3R_73()Z
daikon.inv.unary.sequence.EltUpperBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
jtb.JavaParser:jj_3_19()Z
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.inv.unary.string.OneOfString:sort_rep()V
daikon.Quant:eltsNotEqual([II)Z
utilMDE.FuzzyFloat:eq(DD)Z
jtb.JavaParser:jj_3R_52()Z
daikon.VarInfo:isIOAArray()Z
daikon.inv.unary.UpperBoundCore:calc_modulus()J
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.diff.InvMap:InvMap()V
daikon.inv.Invariant:logDetail()Z
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:SeqIntLessEqual(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_2_12(I)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_simplify(Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.TestAst:checkMatch(Ljava.lang.String;Ljtb.syntaxtree.MethodDeclaration;Ldaikon.tools.jtb.PptNameMatcher;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_daikon()Ljava.lang.String;
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoSequence.SubSequence:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntEqual:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.diff.Node:Node(LutilMDE.Pair;)V
jtb.syntaxtree.PrimaryPrefix:accept(Ljtb.visitor.Visitor;)V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
jtb.JavaParser:jj_2_3(I)Z
daikon.diff.RootNode:RootNode()V
utilMDE.OrderedPairIterator:setnext1()V
utilMDE.FuzzyFloat:lte(DD)Z
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
jtb.syntaxtree.PackageDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_simplify()Ljava.lang.String;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:ioa_name()Ljava.lang.String;
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
daikon.inv.Invariant:is_false()Z
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_esc()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.ternary.threeScalar.ThreeScalar:var1()Ldaikon.VarInfo;
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.sequence.EltUpperBound:format_ioa()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameter;)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.inv.unary.scalar.Positive:enabled()Z
daikon.inv.binary.twoSequence.Reverse:format_simplify_explicit()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_96()Z
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_ioa()Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljava.lang.String;Ljava.lang.String;Ljava.util.List;)Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:justified()Z
jtb.visitor.TreeFormatter:add(Ljtb.visitor.FormatCommand;)V
daikon.VarInfo:domainTypeIOA()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.CompilationUnit:getParent()Ljtb.syntaxtree.Node;
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_esc()Ljava.lang.String;
jtb.JavaParser:jj_3_15()Z
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.sequence.EltUpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.tools.jtb.Ast:getName(Ljtb.syntaxtree.MethodDeclaration;)Ljava.lang.String;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:maxsep_doubles([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)D
jtb.JavaParser:jj_2_15(I)Z
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_87()Z
jtb.JavaParser:jj_3R_67()Z
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.TwoScalar:get_swap()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalAndExpression;)V
daikon.inv.binary.twoSequence.SubSequence:format_simplify()Ljava.lang.String;
jtb.visitor.TreeFormatter:processList(Ljtb.syntaxtree.NodeListInterface;Ljtb.visitor.FormatCommand;)V
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.inv.unary.stringsequence.EltOneOfString:runValue([Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.PptName:isEnterPoint()Z
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.inv.unary.sequence.EltNonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.inv.unary.sequence.EltUpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:SeqIntLessThan(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.inv.ternary.threeScalar.ThreeScalar:var3()Ldaikon.VarInfo;
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:PairwiseIntLessEqual(Ldaikon.PptSlice;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Elements:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.visitor.TreeFormatter:space(I)Ljtb.visitor.FormatCommand;
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:concat([I[I)[I
daikon.ProglangType:baseIsString()Z
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:set_bi_linear(JJJJ)Ldaikon.inv.InvariantStatus;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:check_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_69()Z
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.VarInfo:isPrestate()Z
daikon.Quant:eltsNotEqualIndex([I)Z
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_daikon()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:simplifyNameAndBounds()[Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:size()I
utilMDE.Fmt:i(I)Ljava.lang.Integer;
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_bi_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)V
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
jtb.syntaxtree.ConditionalExpression:accept(Ljtb.visitor.Visitor;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.binary.sequenceString.SequenceString:valid_types([Ldaikon.VarInfo;)Z
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceBody:ClassOrInterfaceBody(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.twoScalar.IntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.PptSlice0:initInvariantsSeen()V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
jtb.Token:newToken(I)Ljtb.Token;
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.NoDuplicates:format_simplify()Ljava.lang.String;
daikon.Quant:eq(II)Z
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptSlice1:arity()I
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.Quant:eltsGtIndex([I)Z
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.UtilMDE:escapeNonASCII(Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.Quant:eltwiseLT([I)Z
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.string.OneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
jtb.JavaParser:jj_3R_110()Z
jtb.syntaxtree.Literal:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.string.SingleString:var()Ldaikon.VarInfo;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_daikon()Ljava.lang.String;
daikon.Quant:intersection([I[I)[I
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_36()Z
jtb.JavaParser:JavaParser(Ljava.io.Reader;)V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.VarInfo:isDerived()Z
daikon.inv.unary.sequence.EltNonZero:format_esc()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.PptSlice1:num_samples()I
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
jtb.syntaxtree.TypeDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_2_17(I)Z
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.Quant:eltwiseLTE([I)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:add_modified(JJI)Ldaikon.inv.InvariantStatus;
daikon.tools.jtb.Ast:removeWhitespace(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_109()Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_daikon()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:enabled()Z
daikon.inv.unary.stringsequence.SingleStringSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.Quant:memberOf(F[D)Z
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern:intern([J)[J
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.Quantify.QuantFlags:include_index()Ljava.util.EnumSet;
jtb.JavaParser:jj_3_1()Z
daikon.inv.binary.sequenceScalar.SeqIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.TypeParameters:accept(Ljtb.visitor.Visitor;)V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.inv.unary.sequence.NoDuplicates:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.TypeArguments:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:subsetOf([S[S)Z
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 3053 | = null
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoSequence.Reverse:Reverse(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:ne(DD)Z
jtb.JavaParser:jj_3R_60()Z
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;)V
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_136()Z
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Name;)V
daikon.inv.binary.sequenceScalar.Member:format_ioa()Ljava.lang.String;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.inv.unary.sequence.EltOneOf:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:format_simplify()Ljava.lang.String;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfo:apply_subscript(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Modifiers;)V
daikon.VarInfoName:name()Ljava.lang.String;
utilMDE.ArraysMDE:min_max([I)[I
daikon.inv.binary.sequenceString.SequenceString:seq_index()I
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.Quant:subsetOf([F[F)Z
daikon.Quant:eltsLTE([II)Z
utilMDE.OrderedPairIterator:setnext2()V
utilMDE.MathMDE:missing_numbers([I)[I
utilMDE.Assert:assertTrue(Z)V
daikon.PptName:getMethodName()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.InorderFlattener:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:noDups([I)Z
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.VarInfoName.InorderFlattener:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:baseIsFloat()Z
daikon.Quant:lexLT([I[I)Z
jtb.JavaParser:jj_3R_88()Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_13()Z
daikon.Quant:lt(II)Z
daikon.VarInfoName:hashCode()I
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.EltOneOf:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant:prob_and(DDD)D
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeListOptional:getParent()Ljtb.syntaxtree.Node;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.inv.binary.sequenceScalar.Member:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_2_16(I)Z
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.Quantify.IOAQuantification:getQuantifierExp()Ljava.lang.String;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_simplify()Ljava.lang.String;
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.inv.unary.string.OneOfString:is_type()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PostfixExpression;)V
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
daikon.inv.binary.sequenceScalar.Member:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
jtb.JavaParser:jj_3_4()Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_esc()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.inv.binary.sequenceScalar.SequenceScalar:sclvar()Ldaikon.VarInfo;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Invariant:isWorthPrinting()Z
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_97()Z
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Type;)V
daikon.inv.binary.sequenceString.MemberString:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:indexOf([ZZ)I
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.inv.binary.sequenceScalar.SequenceScalar:SequenceScalar(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.inv.unary.string.OneOfString:format_daikon()Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.inv.unary.sequence.EltNonZero:format_ioa()Ljava.lang.String;
utilMDE.SimpleLog.LongVal:LongVal(J)V
jtb.JavaParser:FormalParameter()Ljtb.syntaxtree.FormalParameter;
daikon.inv.unary.sequence.EltNonZero:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
jtb.JavaParser:VariableDeclaratorId()Ljtb.syntaxtree.VariableDeclaratorId;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;II)V
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoString.TwoString:var2()Ldaikon.VarInfo;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceString.MemberString:format_daikon()Ljava.lang.String;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.PptName:isCombinedExitPoint()Z
utilMDE.ArraysMDE:subarray([III)[I
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:jj_3R_124()Z
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_esc()Ljava.lang.String;
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.stringsequence.EltOneOfString:get_proto()Ldaikon.inv.Invariant;
daikon.tools.jtb.Ast:format(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_esc()Ljava.lang.String;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArgument;)V
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:enabled()Z
daikon.inv.unary.scalar.NonModulus:enabled()Z
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.unary.sequence.EltOneOf:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:enabled()Z
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
jtb.JavaParser:jj_2_36(I)Z
jtb.visitor.FormatCommand:getNumCommands()I
utilMDE.MathMDE:gcd([I)I
jtb.syntaxtree.VariableDeclaratorId:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.sequenceScalar.Member:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.TypeArguments:TypeArguments(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeArgument;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.RelationalExpression;)V
daikon.Quant:memberOf(J[J)Z
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;Z)Z
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:eltwiseGT([I)Z
daikon.inv.unary.stringsequence.EltOneOfString:sort_rep()V
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarInfo:get_all_simple_names()Ljava.util.List;
daikon.inv.unary.stringsequence.EltOneOfString:format_daikon()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
jtb.syntaxtree.NodeListOptional:present()Z
daikon.inv.binary.twoString.StringEqual:add_modified(Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_esc()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.suppress.NISuppressee:NISuppressee(Ljava.lang.Class;Z)V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.unary.string.OneOfString:runValue(Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.NodeToken:accept(Ljtb.visitor.Visitor;)V
utilMDE.FuzzyFloat:gte(DD)Z
daikon.suppress.NISuppressee:swap()Ldaikon.suppress.NISuppressee;
daikon.inv.binary.twoSequence.Reverse:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.visitor.TreeDumper:TreeDumper(Ljava.io.Writer;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_105()Z
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String; | ASSIGN | 282204 | = null
daikon.inv.binary.twoSequence.Reverse:get_proto()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.inv.unary.stringsequence.EltOneOfString:format_ioa()Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
jtb.syntaxtree.PostfixExpression:accept(Ljtb.visitor.Visitor;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:ungenerify(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z | STATEMENT | 22083 | stmt -> ;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoString.StringEqual:check_modified(Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalOrExpression;)V
daikon.inv.ternary.threeScalar.LinearTernary:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltsGTE([II)Z
jtb.syntaxtree.NodeToken:numSpecials()I
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfo:new_ppt()V
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.Member:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:subsetOf([D[D)Z
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
jtb.JavaParser:jj_3_17()Z
daikon.Ppt:indexOf(Ljava.lang.String;)I
utilMDE.FuzzyFloat:gt(DD)Z
daikon.inv.ternary.threeScalar.LinearTernary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_2_25(I)Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:enabled()Z
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.NodeToken;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
utilMDE.LimitedSizeIntSet:add(I)V
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PackageDeclaration;)V
daikon.inv.unary.sequence.EltUpperBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.VarInfo:relate_var()V
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceBody:getParent()Ljtb.syntaxtree.Node;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.inv.binary.twoSequence.PairwiseIntEqual:get_proto()Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeBound;)V
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_62()Z
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_esc()Ljava.lang.String;
jtb.syntaxtree.Block:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.inv.binary.twoSequence.SubSequence:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.inv.binary.twoSequence.SeqSeqIntEqual:get_proto()Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.Quant:eltwiseNotEqual([I)Z
daikon.inv.unary.string.OneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfo:get_enclosing_var()Ldaikon.VarInfo;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:isPointerFileRep()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.test.FormatTestCase:passes()Z
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_daikon()Ljava.lang.String;
daikon.inv.unary.string.SingleString:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.EltOneOf:format_esc()Ljava.lang.String;
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
daikon.inv.ternary.threeScalar.ThreeScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.test.TestAst.ClassOrInterfaceDeclarationHarvester:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual()V
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
daikon.inv.ternary.threeScalar.LinearTernary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:maxsep_indices()[I
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.suppress.NISuppression:NISuppression([Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:try_points_linear(DDD)Z
utilMDE.Stopwatch:Stopwatch(Z)V
daikon.PptSlice3:PptSlice3(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.sequence.EltUpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:eltsLtIndex([I)Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
jtb.syntaxtree.MethodDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
jtb.syntaxtree.ClassOrInterfaceType:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_63()Z
jtb.JavaParser:jj_3R_103()Z
jtb.JavaParser:jj_3R_126()Z
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
jtb.visitor.TreeFormatter:TreeFormatter()V
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
jtb.JavaParser:jj_3_12()Z
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.JavaCharStream:backup(I)V
daikon.Quant:eltwiseEqual([I)Z
daikon.VarInfoName:ioa_name()Ljava.lang.String;
utilMDE.Options.OptionInfo:argument_required()Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_simplify()Ljava.lang.String;
utilMDE.MathMDE:gcd(II)I
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_ioa()Ljava.lang.String;
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
jtb.JavaCharStream:getEndColumn()I
daikon.VarInfoName.QuantHelper:getFreeIndex([Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.VarInfoName.QuantHelper:simplifyNameAndBounds(Ldaikon.VarInfoName;)[Ljava.lang.String;
jtb.JavaParser:jj_3_20()Z
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.inv.binary.sequenceScalar.SeqIntEqual:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.NoDuplicates:NoDuplicates(Ldaikon.PptSlice;)V
utilMDE.MathMDE:pow(II)I
daikon.tools.jtb.SimpleTreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParser:jj_3R_121()Z
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.tools.jtb.Ast:typeMatch(Ljava.lang.String;Ljava.lang.String;)Z
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
daikon.inv.ternary.threeScalar.LinearTernary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.ReturnStatement:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
daikon.suppress.NISuppressee:NISuppressee(Ljava.lang.Class;I)V
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.JavaParser:jj_3R_148()Z
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.inv.unary.stringsequence.EltOneOfString:EltOneOfString(Ldaikon.PptSlice;)V
daikon.Quant:memberOf(F[F)Z
utilMDE.UtilMDE:lineNumberFileReader(Ljava.io.File;)Ljava.io.LineNumberReader;
jtb.JavaParser:jj_3R_133()Z
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfo:esc_name()Ljava.lang.String;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Statement;)V
daikon.ModBitTracker:num_samples()I
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_simplify()Ljava.lang.String;
daikon.inv.Invariant:prob_and(DD)D
daikon.Quant:memberOf(I[I)Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameters;)V
daikon.inv.unary.sequence.EltLowerBound:format_simplify()Ljava.lang.String;
daikon.inv.filter.InvariantFilters:InvariantFilters()V
jtb.JavaParser:jj_2_21(I)Z
daikon.inv.binary.BinaryInvariant:is_symmetric()Z
daikon.inv.unary.stringsequence.EltOneOfString:subarray_rep()Ljava.lang.String;
jtb.JavaParser:jj_3R_70()Z
daikon.Quant:lexEqual([I[I)Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceString.MemberString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:add_modified(JJJI)Ldaikon.inv.InvariantStatus;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_ioa()Ljava.lang.String;
daikon.ProglangType:base()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments;
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.inv.binary.twoScalar.NumericInt.Divides:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:indexFor(II)I
jtb.syntaxtree.MethodDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_daikon()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.Quant:pairwiseSquare([I[I)Z
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.inv.binary.twoString.StringEqual:get_proto()Ldaikon.inv.binary.twoString.StringEqual;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.ArraysMDE:indexOf([J[J)I
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
jtb.JavaParser:jj_2_10(I)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.UpperBoundCore:wouldChange(J)Z
daikon.inv.unary.sequence.EltOneOf:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:gcd(JJ)J
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.inv.unary.sequence.SeqIndexIntNonEqual:enabled()Z
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.string.OneOfString:enabled()Z
daikon.inv.unary.sequence.EltwiseIntLessThan:format_ioa()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:enabled()Z
jtb.JavaParser:jj_3_30()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeListOptional;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor.1:visit(Ljtb.syntaxtree.TypeParameter;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:maxsep_triples([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)D
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.ValueTuple:isMissing(I)Z
jtb.JavaParser:jj_3_27()Z
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.JavaParser:jj_3R_161()Z
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_2_13(I)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.stringsequence.EltOneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.LinearBinary:add_modified(JJI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.Type:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:SeqIntGreaterThan(Ldaikon.PptSlice;)V
daikon.VarInfo:simplify_name()Ljava.lang.String;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.ValueSet.ValueSetStringArray:ValueSetStringArray(I)V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
jtb.JavaParser:jj_3R_108()Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.binary.sequenceScalar.SeqIntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:pairwiseLT([I[I)Z
jtb.JavaParserTokenManager:jjStopAtPos(II)I
utilMDE.Intern:intern([D)[D
daikon.inv.binary.twoSequence.Reverse:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eltsEqualIndex([I)Z
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:sameLength([I[I)Z
jtb.JavaParser:jj_3R_55()Z
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.PptTopLevel:is_constant(Ldaikon.VarInfo;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;)V
daikon.inv.binary.twoSequence.Reverse:format_ioa()Ljava.lang.String;
jtb.syntaxtree.NodeOptional:present()Z
jtb.syntaxtree.BlockStatement:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_164()Z
jtb.syntaxtree.MethodDeclarator:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.tools.jtb.Ast:create(Ljava.lang.String;[Ljava.lang.Class;[Ljava.lang.Object;Ljava.lang.String;)Ljtb.syntaxtree.Node;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.Quant:lte(II)Z
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
jtb.syntaxtree.TypeDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ResultType;)V
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoSequence.TwoSequence:var2()Ldaikon.VarInfo;
utilMDE.ArraysMDE:concat([I[I)[I
jtb.JavaParser:jj_3R_50()Z
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.VarComparabilityImplicit:alwaysComparable()Z
utilMDE.MathMDE:bitwiseComplement(I)I
utilMDE.UtilMDE:removeWhitespaceAround(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.VarComparabilityNone:comparable(Ldaikon.VarComparabilityNone;Ldaikon.VarComparabilityNone;)Z
daikon.Quantify.IOAQuantification:getFreeVar(I)Ldaikon.Quantify.Term;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.tools.jtb.Ast:print(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.LinearBinaryCore:find_bi_linear(JJJJ[D)Z
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
jtb.syntaxtree.ShiftExpression:accept(Ljtb.visitor.Visitor;)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.PptName:toString()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AdditiveExpression;)V
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.inv.unary.string.OneOfString:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
daikon.Quant:gte(II)Z
daikon.Quantify.IOAQuantification:getClosingExp()Ljava.lang.String;
daikon.inv.Invariants:Invariants()V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName:hasNodeOfType(Ljava.lang.Class;)Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_ioa()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
utilMDE.ArraysMDE:element_range([I)I
utilMDE.FuzzyFloat:lt(DD)Z
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.PptSlice3:arity()I
jtb.visitor.TreeFormatter:TreeFormatter(II)V
daikon.test.TestAst.MethodDeclarationHarvester:visit(Ljtb.syntaxtree.MethodDeclaration;)V
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:hasTypeOf()Z
daikon.inv.binary.twoSequence.SubSequence:enabled()Z
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quantify.IOAQuantification:getFreeVarName(I)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameters;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_ioa()Ljava.lang.String;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.tools.jtb.Ast:quickFixForInternalComment(Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:gcd_differences([I)I
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
daikon.inv.binary.twoSequence.SubSequence:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.SequenceScalar:seq_index()I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameters;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParser:jj_3R_169()Z
jtb.JavaCharStream:GetImage()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_120()Z
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
jtb.JavaParser:jj_3R_122()Z
jtb.syntaxtree.NodeListOptional:elements()Ljava.util.Enumeration;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.VarInfoName.Elements:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_daikon()Ljava.lang.String;
jtb.JavaParser:jj_2_18(I)Z
jtb.JavaParser:jj_3R_89()Z
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.Type;)V
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:indexOf([JJ)I
jtb.syntaxtree.EqualityExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:add_modified([JJI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_77()Z
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.ValueSet.ValueSetString:ValueSetString(I)V
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclarator;)V
daikon.inv.unary.sequence.EltOneOf:format_ioa()Ljava.lang.String;
jtb.JavaParser:jj_3R_98()Z
daikon.inv.unary.sequence.EltUpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.tools.jtb.Ast.1GetParametersVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.inv.unary.string.OneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:sum([I)I
utilMDE.OrderedPairIterator:hasNext()Z
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan()V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.ProglangType:isIntegral()Z
jtb.JavaParser:jj_3_22()Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
jtb.JavaParser:jj_3R_76()Z
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.Member:enabled()Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:PairwiseIntEqual(Ldaikon.PptSlice;)V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.unary.sequence.EltOneOf:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3_14()Z
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.Quant:eq(DD)Z
daikon.inv.Invariant:getConfidence()D
daikon.inv.binary.sequenceString.SequenceString:SequenceString(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:EltwiseIntLessThan(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.InorderFlattener:nodes()Ljava.util.List;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InstanceOfExpression;)V
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
daikon.inv.unary.sequence.EltUpperBound:format_daikon()Ljava.lang.String;
utilMDE.Intern:numIntArrays()I
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalExpression;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceString.SequenceString:sclvar()Ldaikon.VarInfo;
daikon.Quantify.IOAQuantification:getVarIndexedString(I)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceDeclaration:ClassOrInterfaceDeclaration(Ljtb.syntaxtree.NodeChoice;Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ClassOrInterfaceBody;)V
daikon.PptName:PptName(Ljava.lang.String;)V
jtb.JavaCharStream:getBeginColumn()I
daikon.inv.unary.sequence.EltOneOf:is_boolean()Z
jtb.JavaParser:jj_3R_104()Z
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_49()Z
daikon.VarInfo:simplify_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
jtb.JavaParser:jj_3R_58()Z
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.inv.binary.twoSequence.Reverse:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.TwoSequence:TwoSequence(Ldaikon.PptSlice;)V
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpression;)V
daikon.inv.unary.string.OneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:isString()Z
daikon.inv.binary.twoString.StringEqual:StringEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:PairwiseIntLessThan(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_daikon()Ljava.lang.String;
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.inv.unary.scalar.NonModulus:updateResults()V
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
jtb.JavaParser:jj_3R_99()Z
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.ProglangType:elementIsIntegral()Z
jtb.syntaxtree.UnaryExpression:accept(Ljtb.visitor.Visitor;)V
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.stringsequence.EltOneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.diff.Node:Node()V
daikon.inv.unary.sequence.EltUpperBound:enabled()Z
daikon.inv.binary.twoString.TwoString:var1()Ldaikon.VarInfo;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
jtb.syntaxtree.NodeChoice:getParent()Ljtb.syntaxtree.Node;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
jtb.visitor.FormatCommand:getCommand()I
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.VarInfo:simplify_quantify(Ljava.util.EnumSet;[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_simplify()Ljava.lang.String;
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;Ldaikon.VarInfo;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_esc()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_ioa()Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
jtb.syntaxtree.InstanceOfExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_85()Z
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
utilMDE.UtilMDE:escapeNonASCII(C)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.ternary.threeScalar.LinearTernary:add_modified(JJJI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoString.StringEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltNonZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:pairwiseGT([I[I)Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.suppress.NISuppressionSet:NISuppressionSet([Ldaikon.suppress.NISuppression;)V
daikon.ModBitTracker:ModBitTracker(I)V
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.UtilMDE:lineNumberFileReader(Ljava.lang.String;)Ljava.io.LineNumberReader;
jtb.JavaParser:jj_3R_100()Z
jtb.JavaParser:jj_3R_107()Z
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_esc()Ljava.lang.String;
jtb.JavaParser:jj_3R_180()Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.binary.twoSequence.Reverse:format_simplify()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReferenceType;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:PairwiseIntGreaterThan(Ldaikon.PptSlice;)V
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_simplify()Ljava.lang.String;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.inv.unary.stringsequence.EltOneOfString:is_type()Z
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeChoice:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AndExpression;)V
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_simplify()Ljava.lang.String;
jtb.visitor.TreeFormatter:processList(Ljtb.syntaxtree.NodeListInterface;)V
daikon.Quantify.QuantFlags:adjacent()Ljava.util.EnumSet;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Block;)V
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.ConditionalAndExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
daikon.inv.unary.LowerBoundCore:calc_range()J
jtb.JavaParser:jj_ntk()I
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
daikon.Quantify.IOAQuantification:IOAQuantification([Ldaikon.VarInfo;)V
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
jtb.syntaxtree.TypeParameter:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:eltsLT([II)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_daikon()Ljava.lang.String;
jtb.syntaxtree.Name:accept(Ljtb.visitor.Visitor;)V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.inv.unary.sequence.EltUpperBound:format_esc()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.sequenceString.MemberString:enabled()Z
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:gt(II)Z
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.PptMap:asCollection()Ljava.util.Collection;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.inv.unary.sequence.EltOneOf:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.TypeDeclaration:TypeDeclaration(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.MathMDE:mod_positive(JJ)J
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.string.SingleString:SingleString(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:isSubarray([J[JI)Z
jtb.syntaxtree.PrimaryExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernary:enabled()Z
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_ioa()Ljava.lang.String;
jtb.syntaxtree.TypeArgument:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.sequenceScalar.SequenceScalar:seqvar()Ldaikon.VarInfo;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:MoreLexicalActions()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InclusiveOrExpression;)V
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.VarInfo:isDerivedSubSequenceOf()Ldaikon.VarInfo;
daikon.inv.unary.string.OneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant:simplify_format_string(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.inv.ternary.threeScalar.ThreeScalar:var2()Ldaikon.VarInfo;
daikon.inv.ternary.TernaryInvariant:TernaryInvariant(Ldaikon.PptSlice;)V
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ValueTuple:size()I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.Statement:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfo:has_typeof()Z
jtb.JavaParser:jj_3R_72()Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:SeqIntGreaterEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:subsetOf([F[D)Z
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_ioa()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;)Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_2_1(I)Z
jtb.syntaxtree.FormalParameter:FormalParameter(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Type;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.VariableDeclaratorId;)V
utilMDE.UtilMDE:removeWhitespaceBefore(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.tools.jtb.SimpleTreeDumper:SimpleTreeDumper(Ljava.io.Writer;)V
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.inv.unary.sequence.EltNonZero:is_pointer()Z
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernary:LinearTernary(Ldaikon.PptSlice;)V
daikon.Quantify.QuantifyReturn:QuantifyReturn(Ldaikon.VarInfo;)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoString.StringEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 10682 | = null
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.Member:get_proto()Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.Quantify:quantify([Ldaikon.VarInfo;)[Ldaikon.Quantify.QuantifyReturn;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryPrefix;)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_25()Z
daikon.VarInfoName.Elements:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.ConditionalOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_125()Z
daikon.VarInfo:jml_name()Ljava.lang.String;
jtb.JavaCharStream:BeginToken()C
daikon.inv.unary.sequence.EltOneOf:format_simplify()Ljava.lang.String;
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljtb.syntaxtree.Node;)Z
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_210()Z
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarComparabilityNone:elementType()Ldaikon.VarComparability;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.UtilMDE:removeWhitespaceAfter(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.string.OneOfString:format_esc()Ljava.lang.String;
jtb.syntaxtree.CompilationUnit:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_simplify()Ljava.lang.String;
daikon.PptName:getFullClassName()Ljava.lang.String;
daikon.PptName:getSignature()Ljava.lang.String;
daikon.Quant:lexNotEqual([I[I)Z
jtb.visitor.TreeDumper:printToken(Ljava.lang.String;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.RelationalExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
jtb.JavaParser:jj_3R_162()Z
daikon.Debug:logOn()Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.Quantify.QuantFlags:distinct()Ljava.util.EnumSet;
daikon.inv.binary.twoString.StringEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.tools.jtb.Ast:create(Ljava.lang.String;Ljava.lang.String;)Ljtb.syntaxtree.Node;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NullLiteral;)V
jtb.JavaParser:jj_2_14(I)Z
daikon.VarInfoName.InorderFlattener:InorderFlattener(Ldaikon.VarInfoName;)V
jtb.syntaxtree.AndExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaCharStream:getBeginLine()I
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ShiftExpression;)V
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.tools.jtb.PptNameMatcher:getUngenerifiedType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3_3()Z
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:format_daikon()Ljava.lang.String;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.inv.binary.twoScalar.IntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:PairwiseIntGreaterEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:enabled()Z
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_simplify()Ljava.lang.String;
jtb.JavaParser:jj_scan_token(I)Z
daikon.ModBitTracker:num_vars()I
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.tools.jtb.PptNameMatcher:typeMatch(Ljava.lang.String;Ljtb.syntaxtree.FormalParameter;)Z
daikon.inv.binary.twoSequence.Reverse:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.tools.jtb.Ast:getParent(Ljava.lang.Class;Ljtb.syntaxtree.Node;)Ljtb.syntaxtree.Node;
jtb.JavaParser:jj_3R_47()Z
daikon.suppress.NISuppression:NISuppression(Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.tools.jtb.SimpleTreeDumper:printToken(Ljava.lang.String;)V
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ReferenceType;)V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.MathMDE:mod_positive(II)I
jtb.JavaParser:jj_3R_115()Z
daikon.VarInfo:isPointer()Z
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakHasherMap:processQueue()V
daikon.Quantify.FreeVar:name()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:planarIntervention([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaCharStream:getEndLine()I
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
jtb.JavaParser:jj_3_18()Z
jtb.JavaParser:jj_3_35()Z
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.tools.jtb.Ast:getPackage(Ljtb.syntaxtree.CompilationUnit;)Ljava.lang.String;
daikon.tools.jtb.PptNameMatcher:PptNameMatcher(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.Quant:lexGT([I[I)Z
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
utilMDE.LimitedSizeIntSet:size()I
daikon.Quant:pairwiseEqual([I[I)Z
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.unary.sequence.EltNonZero:enabled()Z
daikon.inv.binary.sequenceScalar.SeqIntLessThan:get_proto()Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArguments;)V
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_esc()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_simplify(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String; | RETURN | 41601 | return null
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
jtb.JavaParser:jj_3R_56()Z
utilMDE.UtilMDE:split(Ljava.lang.String;Ljava.lang.String;)[Ljava.lang.String;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameter;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.CompilationUnit;)V
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.PptSlice2:arity()I
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.sequenceScalar.Member:format_esc()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:lexLTE([I[I)Z
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoString.TwoString:valid_types([Ldaikon.VarInfo;)Z
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:indexOf([I[I)I | CONSTANT | 22394 | 0 -> 1
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:enabled()Z
daikon.ProglangType:isScalar()Z
daikon.inv.binary.sequenceString.MemberString:check_modified([Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
daikon.tools.jtb.PptNameMatcher:extractPptArgs(Ldaikon.PptName;)Ljava.util.List;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:enabled()Z
jtb.JavaParser:jj_2_35(I)Z
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_149()Z
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.NumericInt.Divides:Divides(Ldaikon.PptSlice;Z)V
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.inv.unary.string.OneOfString:add_modified(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_ioa()Ljava.lang.String;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
jtb.JavaParser:jj_3R_75()Z
daikon.Ppt:Ppt()V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
jtb.syntaxtree.ClassOrInterfaceBody:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaCharStream:ReadByte()C
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
jtb.JavaParser:jj_3R_117()Z
jtb.syntaxtree.NullLiteral:accept(Ljtb.visitor.Visitor;)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.inv.binary.twoString.TwoString:TwoString(Ldaikon.PptSlice;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:linearIntervention([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)V
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.Invariant:logOn()Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_daikon()Ljava.lang.String;
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_esc()Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | STATEMENT | 2171 | stmt -> ;
jtb.JavaParser:jj_3_10()Z
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
jtb.JavaParser:jj_3R_81()Z
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:subarray([JII)[J
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceString.MemberString:format_esc()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.inv.binary.twoSequence.TwoSequence:var1()Ldaikon.VarInfo;
daikon.inv.binary.sequenceScalar.SeqIntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.inv.unary.stringsequence.SingleStringSequence:var()Ldaikon.VarInfo;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap:size()I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:separation(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)D
daikon.inv.binary.sequenceScalar.SeqIntEqual:enabled()Z
daikon.Quant:eq(FF)Z
jtb.syntaxtree.ExclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.inv.binary.twoScalar.NumericInt.Divides:get_proto(Z)Ldaikon.inv.Invariant;
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.JavaCharStream:readChar()C
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.Quant:eltsEqual([II)Z
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.tools.jtb.Ast:getType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:copy(Ljava.util.HashMap;)Ljava.util.HashMap;
daikon.ValueTuple:tuplemodHasModified(I)Z
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.NodeListOptional:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.inv.unary.sequence.EltwiseIntComparison:EltwiseIntComparison(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3_5()Z
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.EqualityExpression;)V
daikon.VarInfo:apply_subscript(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:enabled()Z
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_daikon()Ljava.lang.String;
jtb.syntaxtree.InclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ResultType:accept(Ljtb.visitor.Visitor;)V
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.Ppt:find_var_by_name(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.unary.sequence.EltOneOf:EltOneOf(Ldaikon.PptSlice;)V
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.BlockStatement;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBody;)V
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_esc()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:enabled()Z
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:setDiff([I[I)[I
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:min([I)I
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
utilMDE.ArraysMDE:sum([[I)I
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SequenceScalar:seq_first()Z
daikon.Quant:setEqual([I[I)Z
jtb.JavaParser:jj_3R_48()Z
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_2_4(I)Z
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_61()Z
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.test.FormatTestCase:getDiffString()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual(Ldaikon.PptSlice;)V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
jtb.syntaxtree.NodeOptional:accept(Ljtb.visitor.Visitor;)V
daikon.suppress.NISuppressionSet:swap()Ldaikon.suppress.NISuppressionSet;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.inv.binary.twoScalar.IntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern:internSubsequence([JII)[J
daikon.inv.binary.twoScalar.NumericInt.Divides:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ProglangType:isPseudoArray()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.inv.binary.twoSequence.SubSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
utilMDE.ArraysMDE:max([I)I
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;)V
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.inv.unary.sequence.EltNonZero:EltNonZero(Ldaikon.PptSlice;)V
jtb.syntaxtree.AdditiveExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
utilMDE.Intern:intern([I)[I
utilMDE.UtilMDE:splitLines(Ljava.lang.String;)[Ljava.lang.String;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
jtb.syntaxtree.TypeArgument:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoSequence.Reverse:enabled()Z
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.UtilMDE.NullableStringComparator:compare(Ljava.lang.String;Ljava.lang.String;)I
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_118()Z
jtb.JavaParser:jj_3R_53()Z
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_123()Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeDeclaration;)V
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
jtb.JavaParser:jj_2_5(I)Z
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
jtb.JavaParser:jj_3R_135()Z
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.string.OneOfString:format_ioa()Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:format_esc()Ljava.lang.String;
daikon.inv.binary.sequenceString.SequenceString:scl_index()I
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceString.MemberString:format_ioa()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Literal;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.test.InvariantFormatTester:execute()Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.sequence.EltUpperBound:format_simplify()Ljava.lang.String;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3_21()Z
jtb.syntaxtree.ClassOrInterfaceDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
jtb.visitor.TreeFormatter:placeToken(Ljtb.syntaxtree.NodeToken;II)V
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
jtb.JavaParser:jj_3R_102()Z
daikon.VarInfoName.QuantHelper:freshDistinctFrom(Ljava.util.Set;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:is_hashcode()Z
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.Quant:eltsGT([II)Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.ProglangType:baseIsIntegral()Z
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.inv.unary.string.OneOfString:OneOfString(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_57()Z
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_esc()Ljava.lang.String;
jtb.JavaParser:jj_3R_137()Z
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.EltOneOf:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_29()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MultiplicativeExpression;)V
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_simplify()Ljava.lang.String;
jtb.syntaxtree.MultiplicativeExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.VariableDeclaratorId:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.tools.jtb.Ast:getParameters(Ljtb.syntaxtree.MethodDeclaration;)Ljava.util.List;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_simplify()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
jtb.JavaParser:jj_3R_80()Z
daikon.ModBitTracker:split(I)I
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
daikon.inv.unary.string.OneOfString:format_simplify()Ljava.lang.String;
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.Invariant:prob_or(DD)D
daikon.inv.unary.stringsequence.SingleStringSequence:SingleStringSequence(Ldaikon.PptSlice;)V
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eq(JJ)Z
daikon.inv.binary.sequenceString.SequenceString:seq_first()Z
daikon.inv.binary.sequenceScalar.SeqIntEqual:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltOneOf:sort_rep()V
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.Quant:eltsGteIndex([I)Z
daikon.ProglangType:baseIsScalar()Z
jtb.JavaParser:jj_3R_51()Z
daikon.inv.binary.sequenceString.MemberString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.Quant:ne(II)Z
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:subsetOf([B[I)Z
daikon.inv.binary.sequenceString.MemberString:MemberString(Ldaikon.PptSlice;)V
jtb.syntaxtree.FormalParameters:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:enabled()Z
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_134()Z
daikon.Quantify.Term:ioa_name()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.stringsequence.EltOneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_daikon()Ljava.lang.String;
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.diff.PrintAllVisitor:bufPrintln()V
jtb.syntaxtree.TypeBound:accept(Ljtb.visitor.Visitor;)V
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.Member:Member(Ldaikon.PptSlice;)V
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
jtb.JavaCharStream:FillBuff()V
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_68()Z
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.ThreeScalar:ThreeScalar(Ldaikon.PptSlice;)V
jtb.visitor.TreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntEqual:SeqIntEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_ioa()Ljava.lang.String;
daikon.Quant:subsetOf([D[F)Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
utilMDE.Intern:internStrings([Ljava.lang.String;)V
jtb.JavaParser:jj_3R_101()Z
daikon.inv.unary.sequence.EltUpperBound:EltUpperBound(Ldaikon.PptSlice;)V
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
jtb.syntaxtree.Modifiers:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
jtb.JavaParser:jj_3_16()Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.PptSlice0:arity()I
daikon.VarComparabilityNone:indexType(I)Ldaikon.VarComparability;
jtb.syntaxtree.ClassOrInterfaceBody:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeList:NodeList()V
daikon.Quant:lexGTE([I[I)Z
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:equals(JJJ)Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_ioa()Ljava.lang.String;
jtb.JavaParser:getToken(I)Ljtb.Token;
utilMDE.MathMDE:negate(I)I
daikon.inv.unary.sequence.NoDuplicates:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:enabled()Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:enabled()Z
jtb.JavaParser:jj_3R_74()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
1163 2 678 2 1225 2 472 2 36 2 455 2 310 2 1473 4 965 2 
560 6 128 2 109 2 470 6 1080 2 800 2 240 6 564 2 1551 2 972 2 1656 2 
1163 2 926 2 472 2 1709 4 967 2 7 4 1810 6 842 6 428 2 1257 6 978 2 351 2 1507 6 
848 2 1453 10 1163 6 1026 4 472 6 882 26 39 4 316 10 291 8 1565 2 1665 2 1533 28 918 10 1038 2 1181 10 1352 16 1597 16 1191 12 422 6 952 4 1522 8 335 10 1798 8 1744 2 1680 6 615 16 562 4 1203 2 66 2 1683 8 
1371 4 1537 6 
958 2 
1184 2 848 2 1639 2 376 2 1641 2 1671 2 169 2 910 2 38 2 660 2 88 2 548 2 533 2 1079 2 1503 2 846 2 1003 2 1159 2 465 4 
1453 15 1163 4 287 2 472 4 342 6 1302 4 1805 6 1169 4 882 47 39 2 1064 2 316 15 1533 52 517 6 918 6 1538 2 1181 15 923 4 709 8 1283 4 1352 32 1597 32 168 2 746 4 1191 22 421 6 927 2 422 4 929 4 365 5 1522 6 335 15 1680 4 615 32 1203 2 1683 19 904 6 502 4 1088 3 
1184 2 276 2 654 2 
1703 2 1546 2 620 2 1547 2 279 2 439 10 241 2 268 2 1376 2 33 2 706 2 1004 2 213 22 672 2 
1453 2 882 4 39 2 1662 2 1426 2 316 2 1533 6 348 2 918 4 1114 2 1181 2 1352 2 1597 2 1191 2 335 2 1471 2 636 2 1680 2 498 2 615 2 537 2 1683 2 1577 2 
1352 8 1597 8 1453 4 1191 4 342 6 952 2 1302 4 882 12 576 2 335 4 316 4 1533 16 615 8 904 6 1181 4 1594 2 1283 4 
1351 2 1184 4 1231 2 641 6 276 2 1028 2 471 2 455 2 1274 2 782 2 1 2 970 2 1858 2 587 2 767 6 161 2 654 2 1449 2 
1833 2 543 2 765 2 1674 2 958 2 563 2 1446 2 1021 2 371 2 1448 2 
1161 2 339 1 1163 34 472 32 129 3 595 2 1422 2 131 2 940 1 1752 32 6 8 479 2 1305 2 242 2 705 2 1532 6 1307 2 349 2 1070 4 1312 2 832 2 486 1 19 2 1314 2 949 32 247 2 21 2 146 2 358 2 492 4 1650 2 364 2 840 4 1554 1 26 1 611 3 1201 2 960 3 496 2 723 16 1084 16 1087 2 34 12 1207 2 263 1 503 2 1324 2 1452 2 1658 2 36 2 727 3 968 2 855 2 513 2 1462 2 863 2 49 3 1567 2 51 16 54 2 55 4 1792 16 1361 1 392 24 866 1 990 8 539 3 1247 1 1248 2 1475 2 995 4 878 3 186 3 189 2 1374 2 1693 6 885 2 549 8 191 2 772 3 192 2 1698 6 776 2 1699 2 553 2 1492 2 1816 2 554 2 1117 2 657 2 1706 2 81 2 899 3 83 2 658 2 1262 2 1121 2 1714 2 300 2 1822 2 1266 1 1267 2 1602 1 1019 2 95 2 1718 2 669 2 1389 2 1269 4 1828 2 1505 2 97 2 1025 2 1606 2 1509 2 1725 5 1030 1 1136 4 912 1 1513 2 1728 1 914 3 1277 2 312 2 1612 3 1732 2 1514 2 682 2 1402 2 683 2 1849 2 1148 1 1519 6 1407 1 456 2 118 2 1625 2 120 2 1524 2 1523 4 1525 2 1155 1 460 2 123 2 462 2 464 12 1635 2 1416 2 1055 24 
1163 2 982 2 
495 2 1163 4 812 2 
1781 2 
936 6 1418 2 472 10 473 2 938 224 939 6 941 192 2 2 942 2 9 376 944 2 481 2 12 30 945 8 14 4 484 2 15 2 1432 566 948 26 1435 2 488 2 489 84 490 60 1436 4 1437 2 1440 4 953 4 25 4 1441 4 24 2 1443 8 1444 4 959 6 29 6 30 132 497 4 1445 30 1447 4 501 4 1450 2 964 4 1457 204 1458 198 507 2 1459 198 971 8 40 4 511 6 42 6 512 4 516 2 518 2 521 2 45 16 980 6 1463 2 48 2 1464 2 53 2 528 2 529 26 985 2 986 6 1466 4 1467 2 531 24 534 4 1470 4 988 2 535 4 60 30 1472 2 61 2 989 6 992 2 544 6 70 2 1482 26 71 2 546 20 73 4 547 6 74 244 1486 92 1487 4 1488 10 1489 4 552 26 1490 4 1491 2 1008 4 1493 2 1009 2 1010 46 1011 46 85 2 87 2 89 4 1500 2 91 2 94 4 1504 64 566 2 1023 8 569 2 1027 8 571 8 105 52 1512 2 1034 14 577 26 1036 2 1037 106 1516 2 1517 4 1039 10 1040 30 1518 14 113 4 581 2 117 6 1045 30 1046 140 586 4 585 2 1051 66 1054 2 588 6 125 2 591 6 590 12 1058 2 1057 2 130 4 596 2 1528 12 133 2 1061 4 1531 2 1065 46 137 290 1534 6 1535 2 1067 6 1539 432 1069 2 140 8 141 6 1541 30 603 60 1542 6 606 82 144 6 607 2 145 4 608 336 147 54 1073 8 1075 14 1553 2 1077 4 1557 12 1558 2 1085 2 151 6 619 386 1559 2 1090 30 1091 2 1562 20 157 2 158 2 624 2 160 28 1099 60 625 2 627 20 631 2 630 2 165 12 166 4 174 4 637 6 177 12 1574 106 638 18 179 244 1576 2 1578 10 1579 2 184 22 1584 6 1108 6 1588 432 1110 22 187 2 1111 28 643 2 1112 2 648 6 653 98 194 2 1592 2 197 2 1593 2 1595 4 200 2 201 6 1116 6 656 2 1598 328 203 244 659 2 1120 2 1121 2 1601 2 1122 198 206 2 1124 2 1603 6 209 2 1126 4 1128 4 670 2 214 4 674 2 1138 6 217 2 676 20 223 20 679 8 1615 2 226 2 1617 6 680 4 1145 10 685 2 1618 6 1147 2 689 14 1149 2 690 2 691 2 1150 2 230 2 1626 6 1151 2 1627 6 1154 6 693 6 1634 2 235 6 1163 10 238 2 1168 24 700 6 1170 4 1171 2 1172 4 1645 4 1646 20 1647 2 244 4 1180 6 1182 4 1187 2 1190 6 712 18 250 2 720 2 252 2 1652 4 721 2 1205 70 256 2 259 132 258 16 1206 2 1211 118 1209 2 1210 2 724 2 1659 204 265 26 1213 2 1220 2 730 182 269 2 733 6 273 4 1224 112 736 2 1226 50 1230 4 739 2 1668 2 747 6 278 4 1235 192 1236 6 748 2 281 14 749 86 753 2 755 2 754 2 1239 8 1241 6 1678 6 283 2 1679 2 757 4 1681 8 1243 6 1244 2 1246 68 760 32 1685 12 762 228 286 2 1250 2 289 12 1253 22 770 198 292 4 1696 30 1697 4 773 2 774 2 293 2 1256 12 1258 112 778 2 1702 30 1705 4 297 6 783 30 1711 2 1263 2 1712 2 1713 4 785 30 1715 4 299 8 787 2 788 2 789 2 1719 2 1271 112 792 6 794 2 1727 6 1279 2 797 28 1735 6 1280 2 1738 2 804 4 1281 2 1739 4 1740 8 807 198 1285 4 809 6 324 2 326 4 327 2 1741 4 1742 20 333 6 1290 6 338 74 814 4 1296 26 817 2 1746 2 1299 6 1300 6 820 2 1754 2 826 28 1756 4 829 2 830 2 1759 2 1310 2 350 4 1764 2 353 2 354 6 1765 6 837 12 360 2 363 2 1768 6 1769 22 1771 2 843 2 367 198 1317 6 1319 2 1327 4 1328 6 1775 2 1329 16 1330 8 851 2 1777 2 1336 2 381 2 856 8 1783 2 1345 2 384 4 386 4 1355 6 1358 2 1793 4 1362 2 867 16 395 2 396 6 869 2 1364 6 873 2 1366 2 1368 198 874 328 401 2 1370 2 402 26 875 6 1803 8 877 2 880 2 881 4 1373 2 1806 4 407 12 410 4 883 2 884 4 886 2 411 2 1377 8 889 46 1812 2 415 8 893 60 416 2 1379 4 894 94 1381 2 1382 2 896 182 1815 14 1820 2 1384 48 901 28 423 88 1821 2 1386 6 425 4 1823 112 1825 26 427 14 1388 4 1826 2 430 2 1831 48 433 26 437 2 1395 26 911 2 1396 6 440 2 913 12 444 6 1840 2 1397 46 1399 6 448 2 450 12 1843 10 1844 6 1400 198 1401 2 922 64 1847 4 1848 18 1851 2 1852 20 1410 6 1857 4 1412 2 931 160 933 4 463 10 1862 2 
932 2 124 1 370 2 373 2 
341 2 370 2 
1801 2 102 2 434 2 1583 2 592 2 420 2 1101 4 1837 2 955 2 667 2 196 2 802 2 1786 2 213 6 1322 2 468 2 18 4 385 2 
932 2 639 2 
1184 2 328 2 963 2 1530 2 
1184 2 1059 2 103 2 328 2 963 2 1530 2 
1184 2 562 2 370 2 1530 2 1636 2 813 2 
594 2 476 2 
1184 2 562 2 1530 2 205 2 
950 2 1750 2 
491 2 652 2 
993 2 1254 2 
469 2 1270 2 
491 2 483 2 1270 2 
491 2 1496 2 1270 2 
1469 2 491 2 1270 2 
491 2 1853 2 1270 2 
1029 2 1661 6 1530 2 1590 2 1184 2 1670 2 928 2 632 4 
1799 2 520 2 
1184 2 1059 2 562 2 370 2 399 2 1530 2 813 2 
1644 2 370 2 813 2 
37 2 370 2 813 2 
92 2 932 2 1799 2 
370 2 813 2 
1591 2 1799 2 
370 2 212 2 
1474 2 932 2 1799 2 
993 2 932 2 921 2 
932 2 1270 2 153 2 
950 2 1197 2 932 2 
932 2 491 2 981 2 
763 2 1799 2 
370 2 701 2 
993 2 387 2 
413 2 1270 2 
950 2 597 2 
491 2 170 2 
925 2 1799 2 
491 2 1791 2 
950 2 380 2 
132 2 1270 2 
993 2 745 2 
1474 2 932 2 1799 2 821 2 
1474 2 1383 2 932 2 1799 2 821 2 
932 2 1799 2 162 2 
849 2 932 2 1799 2 
1832 2 332 2 888 2 668 2 
595 2 
1163 26 472 26 1752 6 6 2 479 2 705 2 1532 6 1070 2 1314 2 949 4 247 2 492 4 362 2 1650 2 364 2 840 4 1201 2 1084 6 1087 2 34 8 503 2 1658 2 36 2 378 2 1334 2 1561 2 732 2 1462 2 163 2 52 2 54 2 1569 2 866 4 1800 2 1686 2 1248 2 995 4 189 2 645 2 1374 2 1693 2 885 2 550 2 192 2 1698 4 1699 2 554 2 897 2 658 2 1121 2 1714 2 1266 2 303 4 1389 2 1718 2 1269 2 1505 4 907 2 1606 2 1509 6 1136 2 1135 2 1513 2 682 2 1402 2 683 2 1849 2 1407 2 1519 2 1624 2 1048 4 1523 4 1525 2 123 2 464 8 1416 2 
1163 26 472 26 1749 2 1752 6 6 2 479 2 705 2 1532 6 1070 2 19 2 1314 2 949 4 247 2 492 4 362 2 1650 2 364 2 840 4 1201 2 1084 6 1087 2 34 8 503 2 1658 2 36 2 378 2 1334 2 732 2 1462 2 163 2 52 2 54 2 1569 2 866 1 1248 2 995 4 189 2 645 2 1374 2 1693 2 885 2 550 2 192 2 1698 6 655 2 551 2 1699 2 1816 2 554 2 897 2 658 2 1121 2 1714 2 1266 2 303 4 1389 2 1718 2 1269 2 1505 4 907 2 1025 2 1606 2 1509 6 1136 2 1135 2 1513 2 682 2 1402 2 683 2 1849 2 1407 2 1519 2 1624 2 1048 4 1523 4 1525 2 123 2 464 8 1416 2 
1360 2 
699 2 1506 2 
697 2 128 2 1163 12 1164 4 182 2 68 2 470 6 995 2 240 6 239 4 472 6 69 2 1109 2 642 2 1425 4 8 2 885 2 825 2 1532 4 138 2 1540 2 247 2 1707 8 1497 2 1121 2 840 2 560 6 1199 2 1201 2 1080 4 304 2 561 2 1083 2 564 4 1653 10 1656 2 725 2 1658 2 1273 2 853 2 1092 2 156 2 509 4 1729 2 219 2 973 2 1563 2 1035 2 1462 2 1845 2 1403 4 1353 2 1849 2 1405 2 1052 2 1797 8 759 2 467 2 233 2 234 4 
697 2 128 2 1163 12 995 2 182 2 68 2 1164 4 470 8 239 4 240 6 472 6 69 2 1109 2 642 2 1425 4 8 2 885 2 825 2 1532 4 138 2 1700 2 1540 2 247 2 1707 8 1497 2 1121 2 1551 2 840 2 560 8 1199 2 1201 2 1080 4 1083 2 1653 10 564 4 1656 2 725 2 1658 2 1273 2 853 2 1092 2 156 2 509 4 1729 2 219 2 973 2 1563 2 1035 2 1462 2 1845 2 452 2 1403 4 1353 2 1849 2 1405 2 1630 4 1052 2 1797 8 759 2 467 2 233 2 234 4 
1403 2 182 2 1164 4 470 2 239 4 240 2 1273 2 1497 2 1092 2 642 2 219 2 1080 2 1083 2 564 2 759 2 1845 2 1540 2 233 2 
697 2 1163 12 1164 4 182 2 68 2 470 6 995 2 240 4 239 4 472 6 69 2 1109 2 642 2 1425 4 8 2 885 2 825 2 1532 4 138 2 1540 2 247 2 1707 4 1497 2 1121 2 1551 2 840 2 560 6 1199 2 1201 2 1080 4 304 2 561 2 1083 2 564 4 1653 6 1656 2 725 2 1658 2 1273 2 853 2 1092 2 156 2 509 4 1729 2 219 2 973 2 1563 2 1035 2 1462 2 1845 2 1403 4 1353 2 1849 2 1405 2 1052 2 1797 4 759 2 467 2 233 2 234 4 
697 2 1163 12 1164 4 182 2 68 2 470 4 995 2 240 6 239 4 472 6 69 2 1109 2 642 2 1425 4 8 2 885 2 825 2 1532 4 138 2 1540 2 247 2 1707 4 1497 2 1121 2 840 2 560 6 1199 2 1201 2 1080 4 304 2 561 2 1083 2 564 4 1653 6 1656 2 725 2 1658 2 1273 2 853 2 1092 2 156 2 509 4 1729 2 219 2 973 2 1563 2 1035 2 109 2 1462 2 1845 2 1403 4 1353 2 1849 2 1405 2 1052 2 1797 4 759 2 467 2 233 2 234 4 
697 2 128 2 1163 12 1164 4 182 2 68 2 470 6 995 2 240 6 239 4 472 6 69 2 1109 2 642 2 1425 4 8 2 885 2 825 2 1532 4 138 2 1540 2 247 2 1707 8 1497 2 1121 2 840 2 560 6 1199 2 1201 2 1080 4 304 2 561 2 1083 2 564 4 1653 6 1656 2 725 2 1658 2 1273 2 853 2 1092 2 156 2 509 4 1729 2 219 2 973 2 1563 2 1035 2 1462 2 1845 2 1403 4 1353 2 1849 2 1405 2 1052 2 1797 4 759 2 467 2 233 2 234 4 
697 2 128 2 1163 12 995 2 1164 4 182 2 68 2 470 6 240 8 239 4 472 6 69 2 1109 2 642 2 1425 4 8 2 885 2 825 2 1532 4 138 2 1540 2 247 2 1707 8 1497 2 1121 2 840 2 560 8 1199 2 1201 2 1080 4 304 2 561 2 1083 2 564 4 1653 10 1656 2 725 2 1658 2 1273 2 853 2 1092 2 156 2 509 4 1729 2 219 2 973 2 1563 2 1035 2 109 2 1462 2 1845 2 1403 4 1353 2 1849 2 1405 2 1052 2 1797 8 759 2 467 2 233 2 234 4 
697 2 128 2 1163 12 1164 4 182 2 68 2 470 6 995 2 240 6 239 4 472 6 69 2 1109 2 642 2 1425 4 8 2 885 2 825 2 1532 4 138 2 1540 2 247 2 1707 8 1497 2 1121 2 840 2 560 6 1199 2 1201 2 1080 4 304 2 561 2 1083 2 564 4 1653 10 1656 2 725 2 1658 2 1273 2 853 2 1092 2 156 2 509 4 1729 2 219 2 973 2 1563 2 1035 2 1462 2 1845 2 1403 4 1353 2 1849 2 1405 2 1052 2 1797 8 759 2 467 2 233 2 234 4 
697 2 1163 46 1164 4 470 4 240 8 239 4 472 24 1425 4 6 2 8 2 479 2 943 2 704 2 705 2 243 6 19 2 949 2 247 2 951 2 1649 2 492 4 1199 2 1198 2 1201 2 1653 2 1656 4 34 4 725 2 1658 2 36 2 509 6 973 4 272 4 514 1 1462 2 982 6 526 2 52 2 54 2 282 6 756 2 1245 6 759 2 1684 1 1248 2 995 4 68 2 1690 2 69 2 1693 2 1001 2 1698 6 1699 2 554 2 1707 2 1708 1 1497 2 560 12 1016 6 304 2 96 2 564 4 1269 2 1025 2 1509 6 1273 2 106 2 1513 2 1729 2 796 2 109 4 1035 2 1737 2 112 2 1284 1 1519 2 812 6 1048 4 1523 4 1525 2 1052 2 123 2 816 1 1752 8 825 2 1532 6 1757 1 138 2 1070 2 1540 2 1543 6 1314 2 836 2 355 2 1548 2 1550 10 838 6 1766 8 840 4 1080 4 845 6 1083 2 1084 6 617 4 1087 2 378 4 853 2 1560 2 1092 2 1334 2 156 2 379 2 1337 7 1780 2 1563 4 1781 6 1344 2 1353 2 1790 6 393 6 172 2 1102 6 175 1 400 2 182 2 1585 2 404 1 1109 2 642 2 189 2 408 6 885 2 198 2 1814 2 897 2 658 2 204 2 1121 2 1389 12 1610 2 436 2 1136 2 1392 1 1838 2 219 2 445 6 220 2 1845 2 683 2 1403 4 1849 2 687 7 1405 2 1406 2 1854 6 464 4 1416 2 467 2 233 2 234 8 
128 4 697 2 1163 48 470 8 1164 4 239 4 240 8 472 26 1752 8 6 2 1425 4 8 2 704 2 943 2 479 2 825 2 705 2 1532 6 138 2 243 6 1070 4 1540 2 1543 6 19 2 949 2 1314 2 836 2 247 2 1548 2 951 2 355 2 838 6 1550 10 1649 2 1766 8 492 4 840 4 1198 2 1199 2 1080 4 1201 2 845 6 1083 2 1653 2 1084 6 617 4 1087 2 34 8 1656 4 725 2 1658 2 36 2 853 2 378 4 1560 2 1334 2 1092 2 379 2 156 2 509 6 973 4 1780 2 272 4 1563 4 1781 6 1344 2 1462 2 982 6 526 2 1353 2 52 2 54 2 1790 6 282 6 393 6 172 2 1102 6 756 2 1245 6 759 2 400 2 1248 2 1690 2 68 2 182 2 995 4 1585 2 69 2 1109 2 189 2 642 2 408 6 1693 2 885 2 1001 2 1698 6 1699 2 198 2 1814 2 554 2 897 2 1707 6 1497 2 658 2 204 2 1121 2 560 12 1016 6 304 2 96 2 1389 12 1269 4 564 4 1505 2 1025 2 1509 6 436 2 1610 2 106 2 1273 2 1136 4 1513 2 1729 2 1838 2 219 2 220 2 445 6 796 2 1035 2 1737 2 1845 2 683 2 112 2 1403 4 1849 2 1405 2 323 2 1519 2 1406 2 1854 6 812 6 1048 4 1523 4 1525 2 1052 2 123 2 464 8 1416 2 467 2 233 2 1160 2 234 8 
128 4 697 2 1163 48 470 8 1164 4 239 4 240 8 472 26 1752 8 6 2 1425 4 8 2 704 2 943 2 479 2 825 2 705 2 1532 6 138 2 243 6 1070 4 1540 2 1543 6 19 2 949 2 1314 2 836 2 247 2 1548 2 951 2 355 2 838 6 1550 10 1649 2 1766 8 492 4 840 4 1198 2 1199 2 1201 2 1080 4 845 6 1083 2 1653 6 1084 6 617 4 1087 2 34 8 1656 4 725 2 1658 2 36 2 853 2 378 4 1560 2 1334 2 1092 2 379 2 156 2 509 6 973 4 1780 2 272 4 1563 4 1781 6 1344 2 1462 2 982 6 526 2 1353 2 52 2 54 2 1790 6 282 6 393 6 172 2 1102 6 756 2 1797 4 1245 6 759 2 400 2 1248 2 1690 2 68 2 182 2 995 4 1585 2 69 2 1109 2 189 2 642 2 408 6 1693 2 885 2 1001 2 1698 6 1699 2 198 2 1814 2 554 2 897 2 1707 6 1497 2 658 2 204 2 1121 2 560 12 1016 6 304 2 96 2 1389 12 1269 4 564 4 1505 2 1025 2 1509 6 436 2 1610 2 106 2 1273 2 1136 4 1513 2 1729 2 1838 2 219 2 220 2 445 6 796 2 1035 2 1737 2 1845 2 683 2 112 2 1403 4 1849 2 1405 2 323 2 1519 2 1406 2 1854 6 812 6 1048 4 1523 4 1525 2 1052 2 123 2 464 8 1416 2 467 2 233 2 1160 2 234 8 
697 2 1163 52 1164 4 470 10 240 10 239 4 472 24 1425 4 6 4 8 2 479 2 943 2 704 2 705 2 243 6 19 2 949 4 1186 2 247 2 951 2 713 2 1649 2 492 4 1199 2 1198 2 1201 2 1653 6 1656 4 34 10 725 2 1658 2 36 2 509 6 1222 6 973 4 272 4 977 2 1462 2 982 12 526 2 52 2 54 2 282 6 756 2 1245 6 538 2 759 2 1248 2 995 4 68 2 1690 2 69 2 1693 4 1001 2 1698 6 1699 2 554 2 1260 6 1707 6 1497 2 1012 6 560 16 1016 6 304 2 93 6 96 2 564 4 1269 4 1505 2 1025 2 1509 8 1273 2 106 2 1513 2 1729 2 796 2 798 2 109 2 1035 2 1737 2 112 2 323 2 1519 4 812 12 1048 6 1523 4 1525 2 1052 2 123 2 128 4 1752 12 825 2 1532 6 138 2 1070 4 1540 2 1543 12 1314 2 835 6 836 2 355 2 1548 2 838 6 1550 8 1551 2 1766 8 840 4 1080 4 845 6 1083 2 1084 8 617 4 1087 2 378 4 853 2 1092 2 1334 2 156 2 379 2 1780 2 1563 4 623 6 1781 12 1344 2 1353 2 1790 12 393 6 172 2 1102 6 1797 4 400 2 182 2 1585 2 1109 2 642 2 189 2 408 12 885 2 198 2 1814 2 897 4 658 2 661 2 1387 6 204 2 1121 2 1824 2 1389 10 1131 6 1610 2 436 2 1136 4 216 6 1838 2 219 2 445 6 220 2 1845 2 683 2 1403 4 1849 2 1405 2 1406 2 1854 6 1413 2 464 10 1416 2 467 2 233 2 1160 2 234 8 
128 2 697 2 1163 4 725 2 68 2 182 2 1164 2 470 6 239 2 240 6 69 2 1109 2 1273 2 1092 2 509 2 642 2 1729 2 1425 2 219 2 8 2 825 2 1845 2 1405 2 1707 6 560 4 1199 2 304 2 1797 4 1052 2 1080 4 1083 2 1653 4 564 4 234 2 1656 2 
128 2 697 2 1298 2 1163 28 470 6 1164 2 240 6 239 2 472 24 595 2 1752 8 1425 2 8 2 479 2 825 2 705 2 1532 6 19 2 1314 2 949 3 247 2 1550 2 492 4 840 4 1199 2 1080 4 1201 2 1083 2 1653 2 1084 6 1087 2 1656 2 725 2 1658 2 36 2 378 2 1560 2 1092 2 1334 2 509 2 1462 2 52 2 54 2 1359 3 1248 2 995 4 182 2 68 2 1109 2 69 2 642 2 189 2 1693 3 885 2 1698 6 1699 2 554 2 898 2 1707 6 658 2 1121 2 560 4 1267 2 304 2 669 2 1389 4 564 4 1025 2 1607 2 1509 6 1273 2 1513 2 1729 2 219 2 1514 2 1142 2 580 2 1845 2 683 2 1849 2 1405 2 1519 3 1048 4 1523 4 1525 2 1052 2 123 2 467 2 234 2 
697 2 557 2 1729 2 
697 2 557 2 1729 2 
697 4 128 4 1163 24 1164 2 470 12 239 2 240 12 472 16 1752 2 1425 2 479 2 136 2 705 2 1532 6 1070 4 1761 2 1540 2 1434 2 19 2 1183 2 1314 2 949 2 247 2 1550 2 1439 2 492 4 714 2 1551 4 840 4 957 2 1199 2 612 2 1201 2 1080 4 1653 6 1084 2 617 2 1087 2 34 4 1656 4 725 2 1658 2 36 2 853 2 378 6 1334 2 1092 2 379 2 509 4 973 2 1563 4 272 2 1344 2 1228 2 1462 2 1353 2 52 2 56 2 866 2 1102 2 1797 4 181 2 1248 2 995 4 1589 4 189 2 642 2 885 2 1698 6 193 2 1699 2 554 2 557 2 1707 6 658 2 784 2 1121 2 560 16 1389 4 1269 4 564 4 1025 2 1272 2 1509 2 1610 2 309 2 1136 4 1513 2 1729 6 219 4 1035 2 109 4 683 2 320 2 1403 4 1849 2 1044 4 1624 4 1523 4 1525 2 1526 2 123 2 464 4 1416 4 233 2 234 4 
1183 2 307 2 236 2 836 2 1163 4 1849 2 699 2 309 2 472 2 1550 2 1439 2 1795 2 272 2 1102 2 1389 2 759 2 1737 2 
697 4 128 4 1163 24 1164 2 470 12 239 2 240 12 472 16 1751 2 1752 2 1425 2 479 2 136 2 705 2 1532 6 138 2 1070 4 1761 2 1540 2 1434 2 19 2 1183 2 1314 2 949 4 247 2 1192 2 1439 2 492 4 714 2 1551 4 716 2 840 4 957 4 1199 2 1201 2 1080 4 1653 6 1084 2 617 2 1087 2 34 4 1656 4 725 2 1658 2 36 2 853 2 378 6 1334 2 1092 2 379 2 509 4 973 4 1563 4 1344 2 1228 2 1462 2 628 2 1353 2 52 2 1102 2 1797 4 181 2 1248 2 995 4 1589 4 189 2 642 2 885 2 1698 6 1699 2 554 2 557 2 1707 6 658 2 1121 2 560 16 1389 2 1269 4 564 4 1025 2 1272 2 1509 2 1610 2 309 2 1136 4 1513 2 1729 6 219 4 1035 2 109 4 683 2 320 2 227 2 1403 4 1849 2 1044 4 1624 4 1523 4 1525 2 1526 2 123 2 464 4 1416 4 233 2 234 4 
697 4 128 4 1163 24 1164 2 470 12 239 2 240 12 472 16 1752 2 1425 2 479 2 136 2 705 2 1532 6 138 2 1070 4 1761 2 1540 2 1434 2 19 2 1183 2 1314 2 949 2 247 2 1550 2 1439 2 492 4 714 2 1551 4 840 4 957 2 1199 2 1201 2 1080 4 1653 6 1084 2 617 2 150 2 1087 2 34 4 1656 4 725 2 1658 2 36 2 853 2 378 6 1334 2 1092 2 379 2 509 4 973 4 1563 4 272 2 1344 2 1228 2 1462 2 1353 2 52 2 173 2 866 1 1102 2 1797 4 181 2 1248 2 995 4 1589 4 1372 2 189 2 642 2 998 2 885 2 1698 6 1699 2 554 2 557 2 1707 6 1819 2 658 2 1121 2 560 16 1389 4 1269 4 564 4 1025 2 1272 2 1509 2 1610 2 309 2 1136 4 1513 2 1729 6 219 4 1035 2 109 4 683 2 320 2 1403 4 1849 2 1044 4 1624 4 1523 4 1525 2 1526 2 123 2 464 4 1416 4 233 2 234 4 
935 2 937 2 0 14 940 1 4 20 3 2 5 2 6 86 10 4 11 2 13 10 946 78 947 2 16 2 19 311 949 110 20 2 22 2 23 2 28 2 960 3 31 1 32 2 961 2 962 66 34 176 35 2 36 8 968 2 41 24 974 4 975 24 44 2 976 2 46 4 47 2 49 2 983 2 50 2 51 98 54 2 55 32 984 2 57 2 59 2 64 4 65 2 990 14 991 2 995 8 994 36 996 4 72 2 999 22 1000 2 1001 2 75 2 1002 80 1006 4 78 2 77 2 1007 2 79 1 80 2 81 2 82 60 83 2 84 2 86 2 1013 3 90 24 1014 22 1015 2 1017 80 1018 44 95 14 96 2 1020 2 98 2 1024 2 99 12 1025 321 100 2 101 2 1030 1 1031 2 1032 2 1033 60 107 2 108 2 1041 2 115 2 1042 76 114 2 1043 78 1048 12 1047 80 118 2 119 10 120 2 121 2 1050 2 122 3 1053 4 123 82 126 3 1055 61 1056 2 127 1 1060 234 129 2 134 14 1063 2 1062 76 135 3 1066 2 1068 2 139 4 142 1 143 124 1071 2 148 2 1072 4 1074 2 1076 2 1078 2 1081 2 1082 1 149 12 1084 32 1087 2 1086 2 152 2 1089 100 155 6 1093 2 1095 2 1096 3 159 2 1098 2 163 2 164 22 1100 156 167 2 171 2 172 22 1103 3 1104 78 178 2 1105 3 1107 24 1106 24 183 2 185 2 186 2 188 2 189 8 191 2 1113 2 1115 106 195 4 198 2 199 2 202 156 1117 2 1118 10 1119 32 204 8 1121 2 1123 8 207 2 208 20 1125 158 1127 22 211 10 1129 2 213 6 1132 2 1133 2 1134 22 215 38 1135 4 1137 2 218 2 1139 4 220 16 221 6 1141 3 1140 2 222 3 224 2 1142 2 1143 3 1144 2 1146 4 229 2 231 3 1153 16 232 2 1152 4 1155 1 1156 2 1157 3 1158 2 1161 2 1163 1174 1162 2 1166 2 1165 2 1167 78 1173 36 1175 2 1174 40 242 2 1176 2 1177 2 1178 2 1179 158 1181 6 245 2 246 2 1185 16 1186 4 1189 2 247 2 1188 2 1191 10 249 76 1193 8 248 2 1195 2 1194 2 1196 2 251 2 1198 8 1200 8 1201 2 1202 2 253 2 254 2 255 4 1203 2 257 2 260 2 261 2 262 2 1207 2 263 15 1212 2 264 2 1214 2 1216 2 1215 78 1217 78 1219 2 1218 6 267 2 1221 2 271 2 270 2 1223 3 274 36 275 2 1227 3 1229 2 277 78 1233 6 1232 2 1234 10 1237 2 280 2 1238 2 1240 2 1242 12 284 2 1248 2 1249 2 288 2 1251 36 1252 34 1255 2 295 8 294 6 296 1 1259 2 1261 38 1262 2 1264 4 298 2 300 2 1266 2 1265 2 301 2 302 18 1268 2 306 2 308 2 1275 2 311 3 1276 2 313 4 312 2 1277 2 1278 6 315 2 316 6 318 38 319 3 1282 80 1283 4 322 558 325 4 1286 6 329 10 1287 2 331 6 1288 3 1289 2 334 2 335 6 336 4 337 2 1292 2 1295 2 1294 36 339 13 1297 60 1298 2 340 36 1301 80 343 2 1303 4 1304 2 344 2 345 80 1305 2 1306 4 346 2 347 2 1307 2 349 14 1308 4 1309 3 1312 2 1314 2 352 2 1315 78 1316 18 356 2 361 2 362 2 365 6 366 2 368 78 369 2 1318 22 1320 3 1321 2 1323 2 1324 2 1326 2 375 2 374 36 1331 158 378 2 1332 8 1333 2 1334 2 1335 80 1340 3 1339 2 1341 36 382 16 1342 2 1343 2 1347 38 1348 38 1349 2 1350 2 1352 12 1354 36 388 2 389 8 1356 2 1357 2 390 2 1359 2 392 15 394 38 1363 4 397 24 398 2 400 2 1367 76 1369 2 405 36 406 2 409 166 1375 4 414 2 1378 2 417 2 1380 2 418 2 419 2 422 4 1385 2 424 4 426 2 1389 10 429 2 431 12 1390 2 432 2 1391 2 1394 2 1393 2 438 3 442 98 441 4 446 2 447 2 1398 24 449 38 451 2 453 2 454 2 1404 2 1407 3 1408 2 1409 2 1413 2 1415 2 458 4 460 2 459 36 462 2 461 6 464 181 1416 20 1417 2 466 10 1419 20 1420 2 472 966 474 2 1421 80 1422 2 475 8 1423 2 477 2 478 24 1427 2 479 2 480 3 1428 3 1429 2 482 4 1430 78 1431 2 485 2 487 34 1438 2 492 480 493 78 494 2 1442 7 499 2 500 4 1451 18 1452 2 504 2 1453 6 1454 104 505 36 506 2 1455 2 1456 38 508 2 510 12 1460 2 1461 2 519 2 1462 2 522 2 523 10 524 60 525 6 527 14 1465 78 530 2 1468 20 532 2 536 18 538 2 540 4 542 2 1475 2 1477 2 1478 2 1479 2 1480 2 545 2 1481 8 1485 2 1483 2 1484 2 549 14 550 88 553 2 1492 2 554 4 556 2 1494 2 1495 2 1498 4 558 3 1499 4 559 4 1501 2 1502 2 1508 2 565 104 567 2 568 2 570 2 1509 18 1511 2 1510 2 574 2 575 2 1513 2 1515 2 579 2 578 38 580 2 1519 16 582 2 583 2 1520 3 1522 6 1523 402 1525 84 589 2 1527 2 1529 2 598 14 1533 24 1532 10 1538 4 599 78 602 2 600 36 601 4 604 2 605 84 1544 3 1545 2 1549 2 1550 2 1552 2 609 2 1555 2 610 2 613 2 614 2 615 12 1556 4 616 2 618 80 621 1 622 6 1564 78 629 2 1566 2 1567 2 1568 2 1569 2 1570 66 633 2 1571 2 1572 3 634 2 635 2 1573 2 1575 20 1580 4 1581 4 640 2 1582 2 1585 2 1586 4 645 2 644 2 647 2 649 2 650 2 651 2 1597 12 657 2 658 2 660 2 1600 3 662 2 1599 2 661 2 663 2 1602 1 1604 36 665 2 666 2 1605 2 671 2 1608 6 673 2 1609 2 675 2 677 24 1612 3 1614 2 1616 2 681 2 683 2 684 2 686 2 1620 2 688 10 1621 3 1622 80 1623 18 692 2 1625 2 1628 4 1629 80 1632 2 1633 2 1635 2 694 3 695 80 1638 2 1637 78 698 2 696 2 1642 2 702 2 703 10 1643 120 705 2 707 4 709 8 708 2 1648 2 713 2 711 18 1649 2 715 2 717 2 718 2 719 2 1651 80 722 4 1654 2 723 14 1655 2 1657 2 1658 2 1660 1 727 2 726 2 728 38 731 1 732 2 729 6 1663 2 734 176 735 78 737 2 738 2 1666 2 740 9 1667 4 741 2 1669 2 742 2 743 2 744 2 746 4 1672 38 1675 40 750 156 1677 3 758 2 1683 6 761 20 1687 2 1689 2 1688 2 764 80 766 2 1691 14 1693 46 768 2 1695 2 771 2 772 2 1698 1109 775 80 1699 2 777 2 1704 2 779 234 780 8 1706 2 781 3 1710 2 1716 2 1717 10 790 4 1720 2 1721 2 1722 2 1724 10 1723 2 793 2 795 12 1726 2 1730 2 1731 8 798 2 799 8 1733 2 801 3 806 32 811 2 1745 2 815 2 1747 2 818 1 1748 8 819 4 1752 126 823 2 1753 2 824 2 1755 3 828 4 827 2 1758 2 831 2 1762 2 833 2 834 52 1763 2 1767 2 839 2 840 8 841 3 1770 2 1772 2 844 2 847 2 1773 2 1774 2 850 2 852 2 1779 20 1778 2 855 2 854 2 1780 4 857 2 1782 3 858 2 1784 2 860 2 859 2 861 6 862 2 1787 20 863 2 1788 2 864 7 1789 10 865 26 1792 52 1794 2 866 3 1796 2 868 2 870 2 871 2 872 2 1802 3 876 2 878 2 1804 2 882 18 1807 104 1809 2 1808 2 885 2 887 2 1811 2 890 2 891 4 1813 38 892 6 895 2 897 46 1817 3 898 2 899 2 900 2 902 3 1822 2 1824 2 903 36 1828 16 1827 80 904 6 1829 2 905 2 1830 3 906 2 907 2 909 2 1834 13 912 1 1835 3 1836 2 914 2 1838 8 1839 2 915 4 916 2 1841 3 917 80 919 4 920 2 1842 2 924 2 1849 2 1850 4 927 2 1855 2 1856 2 930 78 1859 2 1861 2 1860 2 
1509 2 1420 2 1163 2 640 2 472 2 703 2 1752 2 1693 2 1784 2 110 2 862 2 523 4 949 2 897 6 1519 2 54 2 558 2 1409 2 530 2 1265 2 1048 2 1796 2 1717 2 1084 2 
1509 2 1420 2 1163 2 640 2 472 2 703 2 1752 2 1693 2 1784 2 110 2 862 2 523 4 949 2 897 6 1519 2 54 2 558 2 1409 2 530 2 1265 2 1048 2 1796 2 1717 2 1084 2 
1509 2 1420 2 1163 2 640 2 472 2 703 2 1752 2 1693 2 1784 2 110 2 862 2 523 4 949 2 897 6 1519 2 54 2 558 2 1409 2 530 2 1265 2 1048 2 1796 2 1717 2 1084 2 
237 4 1419 4 1453 2 1089 6 1163 10 154 2 573 2 472 4 4 4 882 4 1752 2 1693 3 1613 2 316 2 1533 5 1736 2 1784 2 1181 2 1667 2 949 3 1352 2 1597 2 51 2 54 2 710 2 422 2 1676 2 1792 2 954 2 1468 4 90 3 1522 4 335 2 1631 3 615 2 149 2 761 4 1106 3 791 2 372 2 
237 4 1419 4 1453 2 1089 6 1163 10 154 2 573 2 472 4 4 4 882 4 1752 2 1693 2 1613 2 316 2 1533 4 1736 2 1784 2 1181 2 1667 2 949 2 1352 2 1597 2 51 2 1191 2 54 2 710 2 422 2 1676 2 1792 2 954 2 1468 4 90 2 1522 4 335 2 1631 2 615 2 149 2 1203 2 761 4 1683 2 1106 2 791 2 372 2 
237 4 1419 4 1453 2 1089 6 1163 10 154 2 573 2 472 4 4 4 882 4 1752 2 1693 2 1613 2 316 2 1533 4 1736 2 1784 2 1181 2 1667 2 949 2 1352 2 1597 2 51 2 1191 2 54 2 710 2 422 2 1676 2 1792 2 954 2 1468 4 90 2 1522 4 335 2 1631 2 615 2 149 2 1203 2 761 4 1683 2 1106 2 791 2 372 2 
237 4 1419 4 1453 2 1089 6 1163 10 154 2 573 2 472 4 4 4 882 4 1752 2 1693 2 1613 2 316 2 1533 4 1736 2 1784 2 1181 2 1667 2 949 2 1352 2 1597 2 51 2 1191 2 54 2 710 2 422 2 1676 2 1792 2 954 2 1468 4 90 2 1522 4 335 2 1631 2 615 2 149 2 1203 2 761 4 1683 2 1106 2 791 2 372 2 
237 4 1419 4 1453 2 1089 6 1163 10 154 2 573 2 472 4 4 4 882 4 1752 2 1693 2 1613 2 316 2 1533 4 1736 2 1784 2 1181 2 1667 2 949 2 1352 2 1597 2 51 2 1191 4 54 2 710 2 422 2 1676 2 1792 2 954 2 1468 4 90 2 1522 4 335 2 1631 2 615 2 149 2 1203 4 761 4 1683 4 1106 2 791 2 372 2 
1580 2 1223 2 550 2 1498 2 357 2 892 2 707 2 
1223 2 861 2 23 2 541 2 823 2 1692 2 
67 2 1640 2 1163 10 966 2 1476 1 472 8 879 2 1776 2 822 2 1611 2 161 1 1433 2 111 2 1596 1 1313 2 17 2 1846 2 1543 2 1619 2 810 2 782 1 391 2 1049 2 1201 2 1682 2 1130 1 
1453 6 1163 6 472 6 1479 2 996 2 882 12 1338 2 1839 2 1483 2 316 6 515 2 1533 16 412 2 1181 6 709 2 1283 2 1352 6 1597 6 746 2 1191 4 422 2 365 4 1522 4 335 6 1573 2 615 6 1203 2 180 2 904 4 1683 2 
1419 2 1163 1 403 2 104 4 472 1 1818 2 751 1 969 2 4 2 997 6 58 2 915 2 786 2 1097 2 27 2 176 2 76 2 761 2 
1419 2 403 4 104 4 1818 2 969 4 4 2 997 6 58 2 915 4 786 2 1097 2 27 2 176 2 76 2 761 2 
1419 2 1163 1 403 8 104 4 472 1 1818 6 751 1 969 8 4 2 997 10 58 8 915 8 786 2 1097 2 27 2 176 2 76 2 761 2 
1419 2 403 2 104 2 969 2 4 2 997 2 915 2 786 2 1097 2 27 2 176 2 76 2 761 2 
1163 6 472 6 1698 4 19 2 202 1 554 2 492 2 1022 2 1025 2 435 2 266 1 330 2 1521 2 1523 2 987 2 1525 2 123 2 464 2 
285 2 1163 46 1162 2 472 44 1587 2 190 2 1424 2 646 2 1694 2 1753 2 769 2 290 2 1002 2 946 2 1536 2 1698 44 1179 4 1311 2 1005 2 1760 2 1701 2 605 6 19 2 202 2 554 2 555 2 359 2 492 20 493 2 664 2 841 3 956 2 1651 2 1017 6 1125 4 210 2 305 2 1827 2 1204 2 1022 2 1025 2 908 2 572 2 377 2 1331 4 1215 2 443 2 1094 2 43 2 314 2 1664 2 1734 2 317 2 917 2 383 2 1785 4 626 2 225 2 1842 2 979 2 805 2 525 4 228 4 808 2 322 6 1100 2 277 2 116 2 1622 2 457 2 750 2 330 2 752 2 1411 2 584 4 1521 2 1047 2 1414 2 866 2 1743 2 1523 20 987 2 1525 2 122 1 1291 2 62 2 123 2 63 2 464 37 1293 2 1365 2 1637 2 
554 2 1162 2 1163 10 472 10 330 2 492 4 1521 2 1753 2 1523 4 290 2 987 2 1525 2 123 2 464 4 1698 10 1346 2 1842 2 1022 2 1025 4 19 4 
1163 18 1162 2 435 2 908 2 472 16 1331 2 1215 2 1753 2 290 2 946 2 1698 16 1179 2 1842 2 202 2 19 4 554 2 322 4 1100 2 277 2 750 2 330 2 752 2 492 6 493 2 1521 2 866 2 841 2 1523 6 1525 2 987 2 1125 2 123 2 464 10 1022 2 1637 2 1025 4 
934 2 
1208 1 1325 1 593 1 1673 1 803 1 321 1 
1208 1 1325 1 593 1 1673 1 803 1 321 1 
1208 1 1325 1 593 1 1673 1 803 1 321 1 
1208 1 1325 1 593 1 1673 1 803 1 321 1 
1208 1 1325 1 593 1 1673 1 803 1 321 1 
1208 1 1325 1 593 1 1673 1 803 1 321 1 
1208 1 1325 1 593 1 1673 1 803 1 321 1 
1208 1 1325 1 593 1 1673 1 803 1 321 1 
1208 1 1325 1 593 1 1673 1 803 1 321 1 
1208 1 1325 1 593 1 1673 1 803 1 321 1 
1208 1 1325 1 593 1 1673 1 803 1 321 1 
1208 1 1325 1 593 1 1673 1 803 1 321 1 
1208 1 1325 1 593 1 1673 1 803 1 321 1 
1208 1 1325 1 593 1 1673 1 803 1 321 1 
1208 1 1325 1 593 1 1673 1 803 1 321 1 
1208 1 1325 1 593 1 1673 1 803 1 321 1 
1208 1 1325 1 593 1 1673 1 803 1 321 1 
1208 1 1325 1 593 1 1673 1 803 1 321 1 
1208 1 1325 1 593 1 1673 1 803 1 321 1 
1208 1 1325 1 593 1 1673 1 803 1 321 1 
1208 1 1325 1 593 1 1673 1 803 1 321 1 
1208 1 1325 1 593 1 1673 1 803 1 321 1 
1208 1 1325 1 593 1 1673 1 803 1 321 1 
1208 1 1325 1 593 1 1673 1 803 1 321 1 
1208 1 1325 1 593 1 1673 1 803 1 321 1 
1208 1 1325 1 593 1 1673 1 803 1 321 1 
1208 1 1325 1 593 1 1673 1 803 1 321 1 
1208 1 1325 1 593 1 1673 1 803 1 321 1 
1208 1 1325 1 593 1 1673 1 803 1 321 1 
1208 1 1325 1 593 1 1673 1 803 1 321 1 
1208 1 1325 1 593 1 1673 1 803 1 321 1 
1208 1 1325 1 593 1 1673 1 803 1 321 1 
1208 1 1325 1 593 1 1673 1 803 1 321 1 
1208 1 1325 1 593 1 1673 1 803 1 321 1 
1208 1 1325 1 593 1 1673 1 803 1 321 1 
1208 1 1325 1 593 1 1673 1 803 1 321 1 
1208 1 1325 1 593 1 1673 1 803 1 321 1 
1208 1 1325 1 593 1 1673 1 803 1 321 1 
1208 1 1325 1 593 1 1673 1 803 1 321 1 
1208 1 1325 1 593 1 1673 1 803 1 321 1 
1208 1 1325 1 593 1 1673 1 803 1 321 1 
1208 1 1325 1 593 1 1673 1 803 1 321 1 
1208 1 1325 1 593 1 1673 1 803 1 321 1 
1208 1 1325 1 593 1 1673 1 803 1 321 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V FAILED junit.framework.AssertionFailedError 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V FAILED junit.framework.ComparisonFailure 
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 1157 47 1173 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V ERROR java.lang.NullPointerException 1071 42 220 462 
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V FAILED junit.framework.AssertionFailedError 884 527 
daikon.test.VarInfoNameTest:testSubscript()V FAILED junit.framework.AssertionFailedError 884 527 
daikon.test.VarInfoNameTest:testParse()V FAILED junit.framework.AssertionFailedError 884 527 
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_0()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_1()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_2()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_3()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_4()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_5()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_6()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_7()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_8()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_9()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_10()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_11()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_12()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_13()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_14()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_15()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_16()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_17()V PASSED
daikon.test.split.SplitterFactoryTest:testmisc_Fib_main_18()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_19()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_20()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_21()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_22()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_23()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_24()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_25()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_26()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_27()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_28()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_29()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_30()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_31()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_32()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__33()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__34()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__35()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__36()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__37()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__38()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__39()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__40()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__41()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__42()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__43()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_2_16(I)Z
jtb.JavaParser:jj_3R_57()Z
daikon.VarInfoName.InorderFlattener:InorderFlattener(Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.EltLowerBound:format_simplify()Ljava.lang.String;
jtb.JavaParser:jj_3_14()Z
daikon.ProglangType:isScalar()Z
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
utilMDE.ArraysMDE:noDuplicates([I)Z
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.Quant:noDups([I)Z
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
daikon.Quant:eltsEqual([II)Z
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.inv.unary.scalar.Positive:enabled()Z
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String; | OPERATOR | 57093 | < -> >
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
utilMDE.MathMDE:modulus([I)[I
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quantify.IOAQuantification:getClosingExp()Ljava.lang.String;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
jtb.JavaParser:jj_3R_55()Z
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
utilMDE.ArraysMDE:isSubarray([I[II)Z
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.VarInfo:relate_var()V
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.Quant:memberOf(F[F)Z
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.inv.unary.sequence.EltOneOf:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:size()I
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.Quant:eltwiseGT([I)Z
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.ModBitTracker:ModBitTracker(I)V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
utilMDE.ArraysMDE:max([I)I
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
jtb.ParseException:ParseException(Ljava.lang.String;)V
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfo:name()Ljava.lang.String;
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.inv.unary.scalar.NonModulus:enabled()Z
utilMDE.UtilMDE:lineNumberFileReader(Ljava.lang.String;)Ljava.io.LineNumberReader;
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptName:isEnterPoint()Z
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Ppt:Ppt()V
daikon.Quant:eltwiseLTE([I)Z
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
utilMDE.Assert:assertTrue(Z)V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.Quantify.IOAQuantification:getVarIndexedString(I)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:simplify_name()Ljava.lang.String;
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.Quant:memberOf(J[J)Z
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;)V
daikon.inv.Invariant:logDetail()Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_161()Z
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.Quant:gte(II)Z
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:jj_2_4(I)Z
utilMDE.TestUtilMDE:lsis_test(I)V
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.Quant:pairwiseLTE([I[I)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.VarInfo:get_enclosing_var()Ldaikon.VarInfo;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.LimitedSizeIntSet:add(I)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
utilMDE.WeakHasherMap:processQueue()V
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.VarInfo:esc_name()Ljava.lang.String;
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.VarInfo:isIOAArray()Z
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName.InorderFlattener:nodes()Ljava.util.List;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.MathMDE:gcd(JJ)J
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:isPseudoArray()Z
jtb.JavaParser:jj_3R_48()Z
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.Quant:pairwiseDivides([I[I)Z
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.Quantify.IOAQuantification:IOAQuantification([Ldaikon.VarInfo;)V
utilMDE.UtilMDE:lineNumberFileReader(Ljava.io.File;)Ljava.io.LineNumberReader;
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.Quant:lexLT([I[I)Z
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.OutputFormat:toString()Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
utilMDE.OrderedPairIterator:setnext1()V
utilMDE.ArraysMDE:sorted([I)Z
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
utilMDE.FuzzyFloat:indexOf([D[D)I
jtb.JavaParser:jj_3R_97()Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
utilMDE.ArraysMDE:sum([[D)D
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:jj_2_5(I)Z
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.test.FormatTestCase:getDiffString()Ljava.lang.String;
daikon.Quant:eq(II)Z
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.PptSlice0:arity()I
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ProglangType:baseIsFloat()Z
utilMDE.MathMDE:sign(I)I
utilMDE.ArraysMDE:sum([D)D
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
jtb.JavaParser:jj_3R_117()Z
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.Quant:memberOf(F[D)Z
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.Quant:lt(II)Z
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
jtb.JavaCharStream:getEndColumn()I
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.inv.unary.sequence.EltNonZero:EltNonZero(Ldaikon.PptSlice;)V
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quantify.IOAQuantification:getMembershipRestriction(I)Ljava.lang.String;
daikon.Quant:eltwiseNotEqual([I)Z
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.Quant:pairwiseGT([I[I)Z
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Debug:logDetail()Z
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Quant:lexNotEqual([I[I)Z
jtb.JavaParser:jj_3_5()Z
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:calc_modulus()J
jtb.JavaParser:jj_2_15(I)Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.diff.Node:Node()V
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.PptName:isCombinedExitPoint()Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_119()Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.VarInfoName.Elements:ioa_name_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:lte(DD)Z
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_62()Z
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
utilMDE.FuzzyFloat:lt(DD)Z
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I | STATEMENT | 54139 | stmt -> ;
utilMDE.MathMDE:mod_positive(JJ)J
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.NonZero:is_pointer()Z
jtb.JavaParser:jj_3R_54()Z
utilMDE.ArraysMDE:subarray([III)[I
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([J)Z
utilMDE.Intern:internSubsequence([III)[I
daikon.Quant:lexGTE([I[I)Z
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.diff.RootNode:RootNode()V
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.inv.filter.InvariantFilters:InvariantFilters()V
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
jtb.JavaParser:jj_3R_50()Z
utilMDE.ArraysMDE:fn_is_permutation([I)Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
jtb.JavaParser:jj_3R_116()Z
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
utilMDE.OrderedPairIterator:setnext2()V
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.Quant:isReverse([I[I)Z
daikon.ProglangType:isIntegral()Z
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.inv.unary.sequence.EltNonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaCharStream:BeginToken()C
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:eq(FF)Z
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.diff.Node:add(Ljava.lang.Object;)V
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.Quant:memberOf(I[I)Z
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.Quant:eltsLtIndex([I)Z
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfo:simplify_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Ppt:find_var_by_name(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.PptSlice1:arity()I
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.ProglangType:baseIsScalar()Z
daikon.VarComparabilityImplicit:alwaysComparable()Z
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.Quant:setEqual([I[I)Z
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_148()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.Quant:eltsGteIndex([I)Z
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.Quant:ne(II)Z
utilMDE.MathMDE:gcd_differences([I)I
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.EltNonZero:format_daikon()Ljava.lang.String;
utilMDE.Intern:intern([I)[I
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.Quant:setDiff([I[I)[I
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.NodeToken:trimSpecials()V
jtb.JavaParser:jj_3R_123()Z
daikon.Quant:union([I[I)[I
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quantify:quantify([Ldaikon.VarInfo;)[Ldaikon.Quantify.QuantifyReturn;
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.Quant:subsetOf([I[I)Z
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
jtb.JavaParser:jj_3_12()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
utilMDE.LimitedSizeIntSet:size()I
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType; | STATEMENT | 54792 | stmt -> ;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.Quantify.IOAQuantification:getQuantifierExp()Ljava.lang.String;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltsGtIndex([I)Z
daikon.Quant:eltsGTE([II)Z
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:enabled()Z
jtb.JavaParser:jj_3R_86()Z
daikon.Quant:memberOf(D[F)Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:format_ioa()Ljava.lang.String;
daikon.VarInfo:isPointer()Z
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.EltOneOf:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
utilMDE.MathMDE:pow_fast(II)I
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.ProglangType:isArray()Z
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:intersection([I[I)[I
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltOneOf:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltwiseLT([I)Z
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.inv.unary.sequence.EltOneOf:is_hashcode()Z
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.Quant:subsetOf([D[F)Z
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.InorderFlattener:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:jj_3R_58()Z
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
daikon.Quant:eltsGT([II)Z
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
jtb.JavaCharStream:getBeginLine()I
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;Z)Z
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
utilMDE.ArraysMDE:min([I)I
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
jtb.JavaParser:jj_scan_token(I)Z
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quantify.Term:ioa_name()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.VarInfo:isDerived()Z
jtb.JavaParser:jj_3R_120()Z
jtb.JavaParser:jj_3R_63()Z
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.ArraysMDE:sum([[I)I
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
utilMDE.WeakHasherMap.EntrySet:size()I
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.Intern:numIntArrays()I
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
utilMDE.FuzzyFloat:gt(DD)Z
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.ProglangType:isFloat()Z
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfo:get_all_simple_names()Ljava.util.List;
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.VarInfoName.Elements:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:fn_compose([I[I)[I
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
utilMDE.FuzzyFloat:ne(DD)Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3_1()Z
utilMDE.Intern:intern([J)[J
daikon.Quant:eltsLTE([II)Z
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.VarInfoName.Elements:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.Intern:internSubsequence([JII)[J
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltOneOf:EltOneOf(Ldaikon.PptSlice;)V
jtb.JavaParser:generateParseException()Ljtb.ParseException;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.Quant:subsetOf([B[I)Z
daikon.test.FormatTestCase.SingleOutputTestCase:getDiffString()Ljava.lang.String;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_89()Z
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
jtb.JavaCharStream:backup(I)V
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.VarInfo:isPrestate()Z
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:subsetOf([J[J)Z
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_96()Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:element_range([I)I
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_61()Z
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.diff.Node:children()Ljava.util.Iterator;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.VarInfoName.InorderFlattener:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfo:apply_subscript(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_53()Z
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_60()Z
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.inv.unary.sequence.EltOneOf:runValue([JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:negate(I)I
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.Options.OptionInfo:argument_required()Z
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.VarInfoName:name()Ljava.lang.String;
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
daikon.Quant:subsetOf([F[F)Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.inv.unary.sequence.EltOneOf:format_esc()Ljava.lang.String; | RETURN | 12847 | return null
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.Quant:pairwiseEqual([I[I)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.Quant:eltsLteIndex([I)Z
daikon.Quant:eltsLT([II)Z
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.inv.unary.sequence.EltOneOf:format_daikon()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:gcd([I)I
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.inv.unary.sequence.EltOneOf:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:lexGT([I[I)Z
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:sum([I)I
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3_4()Z
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_2_1(I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.Quant:lte(II)Z
jtb.Token:newToken(I)Ljtb.Token;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.VarInfoName.Elements:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:jj_3_15()Z
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:jj_3R_134()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_135()Z
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.inv.Invariant:prob_and(DDD)D
daikon.ProglangType:isPointerFileRep()Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
jtb.JavaParser:jj_3R_68()Z
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.ProglangType:base()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.inv.unary.sequence.EltOneOf:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
jtb.JavaParser:jj_3R_162()Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.unary.sequence.EltNonZero:format_esc()Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.VarInfoName:repr()Ljava.lang.String;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_122()Z
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:simplify_quantify(Ljava.util.EnumSet;[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_76()Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:is_pointer()Z
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.Quant:pairwiseGTE([I[I)Z
jtb.JavaParser:jj_3R_121()Z
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.EltNonZero:enabled()Z
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltsEqualIndex([I)Z
daikon.Ppt:indexOf(Ljava.lang.String;)I
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltsNotEqual([II)Z
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltNonZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:pairwiseLT([I[I)Z
daikon.inv.Invariant:prob_or(DD)D
daikon.Quant:gt(II)Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.PptSlice1:num_samples()I
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.EltNonZero:format_simplify()Ljava.lang.String;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.inv.unary.sequence.EltOneOf:sort_rep()V
jtb.JavaCharStream:ReadByte()C
jtb.JavaParser:jj_ntk()I
utilMDE.ArraysMDE:subarray([JII)[J
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
utilMDE.MathMDE:mod_positive(II)I
daikon.inv.Invariant:isWorthPrinting()Z
jtb.ParseException:getMessage()Ljava.lang.String;
jtb.JavaParser:jj_3R_56()Z
jtb.JavaParser:jj_3R_69()Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Invariants:Invariants()V
daikon.inv.Invariant:getConfidence()D
jtb.JavaParserTokenManager:MoreLexicalActions()V
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
utilMDE.WeakIdentityHashMap:indexFor(II)I
utilMDE.Intern:intern([D)[D
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.diff.InvMap:InvMap()V
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.Quant:subsetOf([S[S)Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.Quant:lexLTE([I[I)Z
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaCharStream:getBeginColumn()I
jtb.JavaParser:jj_3R_88()Z
daikon.Quant:lexEqual([I[I)Z
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.Quant:eq(DD)Z
daikon.VarInfoName:esc_name()Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:subsetOf([D[D)Z
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParser:jj_3R_85()Z
utilMDE.MathMDE:gcd(II)I
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:min_max([I)[I
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.JavaCharStream:readChar()C
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
jtb.JavaParser:jj_3_16()Z
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
jtb.JavaCharStream:FillBuff()V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:eltwiseEqual([I)Z
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.ProglangType:baseIsIntegral()Z
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.JavaCharStream:UpdateLineColumn(C)V
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.Quant:eltwiseGTE([I)Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.Quant:eq(JJ)Z
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptSlice2:arity()I
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.UpperBoundCore:computeConfidence()D
utilMDE.OrderedPairIterator:hasNext()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.Invariant:prob_is_ge(DD)D
utilMDE.FuzzyFloat:eq(DD)Z
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Invariant:logOn()Z
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:enabled()Z
jtb.JavaParser:jj_3_3()Z
daikon.inv.unary.scalar.UpperBound:enabled()Z
jtb.JavaParser:jj_3R_47()Z
utilMDE.ArraysMDE:concat([I[I)[I
daikon.PptSlice0.ImplicationWrapper:hashCode()I
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.inv.ValueSet:ValueSet(I)V
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:is_boolean()Z
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.PptMap:asCollection()Ljava.util.Collection;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.VarInfo:jml_name()Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_2_14(I)Z
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;)Z
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.Quantify.IOAQuantification:getFreeVarName(I)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ProglangType:dimensions()I
jtb.JavaCharStream:getEndLine()I
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
jtb.JavaParser:jj_2_3(I)Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V | STATEMENT | 9545 | stmt -> ;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:subsetOf([F[D)Z
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.Quantify.FreeVar:name()Ljava.lang.String;
jtb.syntaxtree.NodeOptional:NodeOptional()V
jtb.JavaParser:jj_3R_51()Z
daikon.inv.unary.sequence.EltOneOf:enabled()Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.PptSlice0:initInvariantsSeen()V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.Quant:sameLength([I[I)Z
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Debug:logOn()Z
daikon.Quantify.IOAQuantification:getFreeVar(I)Ldaikon.Quantify.Term;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.Quant:memberOf(S[S)Z
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.VarInfoName:hashCode()I
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.ValueTuple:size()I
utilMDE.MathMDE:pow(II)I
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.Quant:pairwiseSquare([I[I)Z
daikon.inv.unary.sequence.EltNonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:concat([I[I)[I
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
utilMDE.ArraysMDE:indexOf([II)I
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.inv.unary.sequence.EltNonZero:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.Invariant:prob_and(DD)D
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.VarInfo:new_ppt()V
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.VarInfoName:isLiteralConstant()Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.VarInfoName:ioa_name()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | OPERATOR | 4206 | > -> ==
jtb.JavaParser:jj_3R_52()Z
daikon.VarInfo:apply_subscript(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
jtb.JavaParser:jj_3R_163()Z
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.VarInfo:domainTypeIOA()Ljava.lang.String;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
daikon.inv.unary.sequence.EltOneOf:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.VarInfoName:simplify_name()Ljava.lang.String;
jtb.JavaParser:jj_3R_49()Z
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:slice([III)[I
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:gte(DD)Z
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.Invariant:justified()Z
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:is_direct_non_slice_array()Z
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_2_13(I)Z
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
jtb.JavaParser:jj_3R_133()Z
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3_10()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.test.FormatTestCase:passes()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.JavaParser:jj_3_13()Z
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
utilMDE.MathMDE:missing_numbers([I)[I
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
daikon.test.InvariantFormatTester:execute()Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.inv.unary.sequence.EltOneOf:subarray_rep()Ljava.lang.String;
jtb.JavaParser:jj_3R_118()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.Quantify.QuantifyReturn:QuantifyReturn(Ldaikon.VarInfo;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
432 4 50 2 960 2 451 2 1035 2 158 2 139 2 128 2 90 2 
897 2 626 2 962 2 351 6 297 2 693 6 632 2 944 2 189 2 468 2 205 6 
640 4 403 6 880 2 968 2 1035 2 865 6 559 2 792 2 373 6 513 6 1058 2 975 4 90 2 
290 4 331 2 1035 6 409 6 374 8 578 6 1009 26 144 10 649 16 652 12 551 4 90 6 153 2 843 2 1024 16 664 10 1102 8 703 2 1030 10 594 2 323 10 1103 10 669 8 596 2 997 28 327 4 171 8 36 16 922 4 38 2 
40 4 574 6 
329 2 
206 2 532 2 1035 4 899 2 214 2 10 2 545 2 546 2 906 4 684 2 90 4 307 4 387 2 1131 2 239 2 774 2 1139 2 1067 2 1069 2 250 2 636 2 38 2 570 2 711 2 330 2 181 2 572 2 1160 2 110 2 263 2 1083 4 188 2 342 2 267 2 800 2 60 2 805 4 65 2 356 2 72 2 1025 2 960 2 892 2 526 2 
673 4 1035 4 930 4 293 8 409 4 866 4 414 6 496 6 578 4 144 15 1009 47 649 32 614 4 652 22 551 2 17 6 90 4 1127 3 153 2 273 2 1017 2 316 4 1024 32 664 15 438 2 1102 19 1030 15 320 6 396 2 1103 15 323 6 398 4 204 4 669 6 779 6 997 51 36 32 1032 5 39 2 
689 2 1139 2 343 2 
948 22 402 2 209 2 734 2 315 2 899 2 575 10 1135 2 1101 2 561 2 303 2 965 2 34 2 271 2 
254 2 409 2 1007 2 144 2 1009 4 649 2 652 2 550 2 551 2 228 2 57 2 353 2 558 2 1024 2 664 2 1102 2 771 2 1030 2 1103 2 323 4 997 6 486 2 36 2 
1093 2 731 2 290 2 316 4 414 6 1024 8 664 4 1009 12 144 4 1030 4 649 8 652 6 1103 4 398 4 779 6 997 16 36 8 
670 4 287 62 103 4 1004 2 405 4 712 2 494 4 970 4 675 2 186 2 259 2 903 10 547 2 1082 4 651 4 906 4 114 2 147 2 343 2 1168 2 689 6 350 4 846 4 24 2 848 14 238 2 958 4 240 2 1139 8 29 2 1141 4 1182 2 483 2 706 2 892 2 1104 10 920 2 636 4 1072 2 130 2 
329 2 607 2 573 2 679 2 344 2 14 2 586 2 587 2 439 2 1064 2 
1033 2 449 2 1034 2 133 3 135 2 134 3 601 2 1035 34 295 1 898 2 604 24 900 2 1039 2 140 2 8 2 142 2 1043 1 905 24 613 4 754 2 304 2 305 3 152 2 1047 2 1049 6 764 2 1054 4 1056 3 911 2 160 2 476 2 318 4 1059 1 1057 3 477 16 1062 8 1061 2 164 2 778 6 917 2 165 2 168 2 919 3 487 2 637 3 923 3 924 32 784 2 176 2 489 16 1075 2 177 2 492 2 44 2 794 2 50 2 337 2 938 2 338 1 798 1 941 2 656 2 942 2 1084 3 1087 3 56 2 62 4 63 2 1097 2 1096 2 66 2 197 2 1099 2 355 16 957 2 959 2 362 8 74 8 363 2 522 2 815 2 671 2 367 2 368 1 371 3 207 5 208 2 211 1 973 2 677 2 543 1 678 2 823 32 826 2 827 2 219 2 828 2 222 1 224 2 86 6 832 2 229 2 685 8 834 2 1126 1 90 32 556 1 385 16 557 2 93 1 94 2 1129 2 235 2 700 3 392 2 990 2 562 2 991 2 395 2 397 2 855 1 1145 2 996 6 858 4 400 2 568 2 253 2 1003 2 256 2 107 4 870 2 576 2 264 2 266 1 1165 4 270 2 1014 2 431 2 275 2 433 1 121 1 735 8 885 2 1020 2 123 2 1179 2 124 2 740 4 741 1 
1035 2 947 2 
1035 4 1088 2 749 2 
830 2 
288 2 600 2 3 4 4 4 1037 16 7 4 902 4 609 2 611 38 296 2 753 2 752 2 460 2 150 34 466 2 760 4 310 2 154 4 1052 2 910 118 1055 4 317 24 912 4 915 2 1060 22 773 20 627 4 322 2 324 2 631 2 1066 4 326 4 782 2 170 4 35 4 37 2 638 2 927 118 488 4 1073 2 928 44 1076 38 931 2 796 2 340 2 341 4 52 4 501 38 346 2 55 2 1091 2 504 4 946 4 802 2 347 2 659 4 509 4 807 2 808 14 1095 2 510 6 953 2 955 4 196 8 69 2 663 2 71 26 811 2 200 2 360 38 521 38 520 2 202 2 528 102 1110 4 1112 2 210 2 540 2 541 2 1113 4 974 2 212 2 978 24 223 2 225 2 381 2 1123 4 836 2 233 20 841 118 384 24 842 16 692 18 847 20 987 38 1130 38 850 2 851 4 852 6 96 10 1136 2 394 2 241 2 992 10 242 14 993 2 249 38 1149 2 861 2 860 2 1153 4 1155 2 1156 4 714 2 717 14 412 2 718 4 719 6 721 38 577 4 873 2 416 22 111 4 419 2 1162 14 420 2 875 8 727 2 1163 10 1166 4 429 2 430 2 434 8 277 2 435 2 436 2 1177 2 886 38 887 2 279 2 738 4 282 2 1027 12 1028 4 127 2 896 38 742 4 743 2 
484 2 231 2 913 1 1041 2 
255 2 231 2 
358 2 1139 2 497 2 375 2 327 2 1116 2 231 2 
375 2 388 2 231 2 
375 2 231 2 427 2 
404 2 354 2 1041 2 
375 2 231 2 
404 2 16 2 
819 2 231 2 
404 2 694 2 1041 2 
119 2 829 2 1041 2 
132 2 831 2 1041 2 
260 2 720 2 1041 2 
806 2 246 2 1041 2 
404 2 918 2 
258 2 231 2 
119 2 500 2 
831 2 87 2 
61 2 720 2 
929 2 246 2 
816 2 404 2 
246 2 399 2 
443 2 720 2 
831 2 698 2 
119 2 377 2 
888 2 404 2 694 2 1041 2 
888 2 404 2 694 2 276 2 1041 2 
404 2 173 2 1041 2 
404 2 1077 2 1041 2 
187 2 653 2 442 2 1090 2 
1139 2 956 2 1116 2 1079 2 
358 2 1139 2 421 2 956 2 1116 2 1079 2 
1139 2 375 2 411 2 327 2 1116 2 231 2 
12 2 10 2 
1139 2 1128 2 327 2 1116 2 
518 2 720 2 
246 2 444 2 
119 2 699 2 
579 2 831 2 
831 2 246 2 194 2 
879 2 831 2 246 2 
831 2 246 2 709 2 
332 2 831 2 246 2 
932 6 454 2 1116 2 881 2 1139 2 1031 6 247 2 1150 2 
404 2 131 2 
948 6 370 2 1051 2 105 2 1018 2 538 2 605 2 809 2 46 2 933 2 890 4 628 4 243 2 461 2 877 2 894 2 505 2 687 2 
682 2 1041 2 
827 2 
1033 2 1034 2 1035 26 602 4 900 2 140 2 8 6 1043 2 459 2 1047 2 1049 2 1054 4 159 4 911 2 318 2 1059 2 776 4 778 4 165 2 325 4 487 2 924 6 328 2 492 2 643 4 44 2 794 2 50 2 936 2 937 2 1089 2 62 4 63 2 1096 2 1097 4 66 2 197 2 1099 2 355 6 957 2 199 4 959 2 74 8 363 2 523 4 671 2 536 2 677 2 678 2 823 4 222 4 86 6 685 8 834 2 90 26 383 2 982 2 557 4 235 2 991 2 98 2 1145 2 996 2 858 4 1003 2 406 2 107 2 870 2 113 2 264 2 1165 4 1014 2 431 2 735 4 1179 2 740 2 
1033 2 1034 2 1035 26 602 4 900 2 140 2 8 6 1043 2 459 2 1047 2 1049 2 1054 4 159 4 911 2 476 2 318 2 1059 2 25 2 776 4 778 6 165 2 325 4 487 2 924 6 328 2 492 2 643 4 44 2 794 2 50 2 936 2 937 2 62 4 63 2 1096 2 1097 4 66 2 197 2 1099 2 355 6 957 2 199 4 959 2 516 2 74 8 363 2 523 4 671 2 677 2 678 2 823 4 86 6 685 8 834 2 90 26 383 2 982 2 557 4 235 2 562 2 991 2 98 2 1145 2 996 2 400 2 858 4 252 2 1003 2 406 2 107 2 870 2 264 2 1165 4 1014 2 431 2 735 4 1179 2 740 2 
791 2 
30 2 976 2 
967 2 351 2 156 2 334 4 1133 2 872 2 479 2 650 2 297 2 878 2 683 2 584 2 76 2 944 2 285 4 172 2 839 2 205 2 
744 2 967 2 78 2 294 2 1035 12 372 4 901 2 677 2 80 2 9 2 84 2 297 4 548 2 301 2 683 2 86 4 759 2 839 2 468 2 90 6 18 2 156 2 693 6 235 2 1133 2 560 4 626 2 479 2 31 2 999 2 1001 4 172 2 858 2 102 2 492 2 716 2 334 4 45 2 872 2 794 2 650 4 878 2 584 2 425 4 944 4 1165 2 190 2 63 2 431 2 351 6 66 2 1174 2 588 2 198 6 76 2 285 4 597 2 205 4 77 2 529 4 
744 2 967 2 78 2 294 2 1035 12 372 4 901 2 677 2 80 2 9 2 84 2 297 4 548 2 301 2 683 2 86 4 759 2 839 2 468 2 90 6 18 2 156 2 693 6 235 2 1133 2 560 4 479 2 31 2 999 2 1001 4 172 2 858 2 102 2 492 2 716 2 334 4 45 2 872 2 794 2 650 4 878 2 584 2 425 4 944 4 1165 2 190 2 63 2 431 2 351 4 66 2 1174 2 588 2 198 6 962 2 76 2 285 4 597 2 205 6 77 2 529 4 
897 2 744 2 967 2 78 2 294 2 1035 12 372 4 901 2 677 2 80 2 9 2 84 2 297 4 548 2 301 2 683 2 86 4 759 2 839 2 468 2 90 6 18 2 156 2 693 6 235 2 1133 2 560 4 479 2 31 2 999 2 1001 8 172 2 858 2 102 2 492 2 716 2 334 4 45 2 872 2 794 2 650 4 878 2 584 2 425 4 944 4 1165 2 190 2 63 2 431 2 351 6 66 2 1174 2 588 2 198 6 76 2 285 4 597 2 205 6 77 2 529 4 
897 2 744 2 967 2 78 2 294 2 1035 12 372 4 901 2 677 2 80 2 9 2 84 2 297 4 548 2 301 2 683 2 86 4 759 2 839 2 468 2 90 6 18 2 156 2 693 8 235 2 1133 2 560 8 479 2 31 2 999 2 1001 8 172 2 858 2 102 2 492 2 716 2 334 4 45 2 872 2 794 2 650 4 878 2 584 2 425 4 944 4 1165 2 190 2 63 2 431 2 351 6 66 2 1174 2 588 2 198 10 962 2 76 2 285 4 597 2 205 8 77 2 529 4 
897 2 744 2 967 2 78 2 294 2 1035 12 372 4 901 2 677 2 80 2 9 2 84 2 297 4 548 2 301 2 683 2 86 4 759 2 839 2 468 2 90 6 18 2 156 2 693 6 235 2 1133 2 560 8 479 2 31 2 999 2 1001 8 172 2 858 2 102 2 492 2 716 2 334 4 45 2 872 2 794 2 650 4 878 2 584 2 425 4 944 4 1165 2 190 2 63 2 431 2 351 6 66 2 1174 2 588 2 198 10 76 2 285 4 597 2 205 6 77 2 529 4 
2 2 900 2 901 2 8 6 9 2 610 1 297 4 299 2 301 2 306 2 311 6 18 4 23 1 318 2 31 2 924 8 643 2 334 4 44 2 45 2 50 2 937 2 650 4 339 1 944 4 947 6 348 2 62 4 63 2 351 4 950 10 66 2 661 6 355 6 959 2 962 4 74 2 76 2 77 2 671 2 967 2 78 2 372 6 972 4 79 6 677 2 80 2 678 2 84 2 683 2 86 6 685 2 90 24 980 2 383 4 983 7 693 12 985 2 697 2 991 2 996 2 999 2 1001 2 400 2 102 2 1003 2 406 2 1005 6 107 2 410 6 106 2 716 2 109 2 417 8 1011 2 1013 1 112 2 425 8 728 2 730 6 1014 2 431 2 735 2 1022 2 437 1 440 6 740 2 1033 2 744 2 1035 46 138 2 140 2 1044 2 751 2 759 2 468 4 1047 12 1049 2 762 6 156 2 472 2 1054 4 766 2 776 4 479 2 778 6 165 2 172 2 492 2 794 2 1085 1 502 1 1088 6 803 6 190 2 1096 2 1097 2 195 1 198 2 1099 2 1107 2 205 8 529 4 535 2 537 2 821 2 213 6 823 2 548 2 222 1 830 6 1120 7 833 1 555 2 835 6 839 2 844 2 235 2 849 2 1133 2 853 2 562 2 1137 4 1148 2 858 4 859 6 1154 2 870 2 872 2 262 2 878 2 584 2 1165 4 1174 2 588 4 281 6 889 2 592 2 893 2 285 4 597 2 
744 2 897 4 1033 2 2 2 1035 48 900 2 138 2 901 2 140 2 8 6 9 2 1044 2 751 2 299 2 297 4 301 2 306 2 759 2 468 4 1047 12 311 6 18 4 1049 2 762 6 156 2 472 2 766 2 1054 4 318 4 479 2 776 4 31 2 778 6 165 2 172 2 924 8 643 2 492 2 334 4 44 2 45 2 1081 2 794 2 50 2 650 4 937 2 1088 6 944 4 803 6 947 6 348 2 190 2 62 4 63 2 950 10 351 8 1097 2 1096 2 66 2 661 6 198 2 1099 2 355 6 959 2 74 4 76 2 1107 2 529 4 77 2 205 8 671 2 369 2 967 2 535 2 78 2 537 2 372 6 79 6 972 4 821 2 80 2 677 2 213 6 678 2 823 2 84 2 548 2 830 6 683 2 86 6 835 6 685 4 555 2 980 2 839 2 90 26 383 4 844 2 557 2 693 12 985 2 697 2 235 2 849 2 1133 2 853 2 1137 4 991 2 562 2 996 2 999 2 1001 6 1148 2 400 2 858 4 102 2 859 6 1003 2 1154 2 406 2 1005 6 106 2 410 6 107 4 716 2 109 2 870 2 872 2 417 8 1011 2 262 2 112 2 878 2 425 8 584 2 728 2 1165 4 730 6 1014 2 431 2 735 2 1174 2 588 4 1022 2 889 2 281 6 440 6 592 2 893 2 740 4 285 4 597 2 
744 2 897 4 1033 2 2 2 1035 48 900 2 138 2 901 2 8 6 140 2 9 2 1044 2 751 2 299 2 297 4 301 2 306 2 759 2 468 4 1047 12 311 6 18 4 1049 2 762 6 156 2 472 2 766 2 1054 4 318 4 479 2 776 4 31 2 778 6 165 2 172 2 924 8 643 2 492 2 334 4 44 2 45 2 1081 2 794 2 50 2 650 4 937 2 1088 6 944 4 803 6 947 6 348 2 190 2 62 4 63 2 950 10 351 8 1097 2 1096 2 66 2 661 6 198 6 355 6 1099 2 959 2 74 4 76 2 1107 2 529 4 77 2 205 8 671 2 369 2 967 2 535 2 78 2 537 2 372 6 79 6 972 4 821 2 80 2 677 2 213 6 678 2 823 2 84 2 548 2 830 6 683 2 86 6 835 6 685 4 555 2 980 2 839 2 90 26 383 4 844 2 557 2 693 12 985 2 697 2 235 2 849 2 560 4 1133 2 853 2 1137 4 991 2 562 2 996 2 999 2 1001 6 1148 2 400 2 858 4 102 2 859 6 1003 2 1154 2 406 2 1005 6 106 2 410 6 107 4 716 2 109 2 870 2 872 2 417 8 1011 2 262 2 112 2 878 2 425 8 584 2 728 2 1165 4 730 6 1014 2 431 2 735 2 1174 2 588 4 1022 2 889 2 281 6 440 6 592 2 893 2 740 4 285 4 597 2 
897 4 2 2 900 2 901 2 8 8 9 2 297 4 299 2 301 2 306 2 908 6 311 12 18 4 318 4 914 6 626 2 31 2 924 12 643 4 334 4 44 2 45 2 50 2 648 2 937 2 650 4 939 6 943 6 944 4 947 12 348 2 62 4 63 2 351 10 950 8 66 2 68 2 954 2 661 6 355 8 959 2 962 2 74 6 76 2 77 2 671 2 369 2 967 2 78 2 372 6 972 4 79 6 677 2 80 2 678 2 84 2 683 2 86 6 685 6 90 24 980 2 383 4 693 16 985 2 991 2 996 4 999 2 1001 6 400 2 102 2 1003 2 406 2 1005 6 107 4 410 6 106 2 716 2 109 2 417 8 1011 2 112 2 115 2 425 8 728 2 730 6 1014 2 431 2 735 4 1022 2 440 12 740 4 1033 2 744 2 448 6 1035 52 138 2 140 2 1044 2 751 2 1045 6 463 6 759 2 468 4 1047 10 1049 4 762 6 156 2 472 2 1054 4 766 2 776 6 479 2 778 6 165 2 172 2 175 2 492 2 1081 2 794 2 1088 12 803 6 190 2 1096 2 1097 2 198 6 1099 2 1107 2 205 10 529 4 535 2 537 2 821 2 213 6 823 4 548 2 221 6 830 12 555 2 835 12 839 2 844 2 557 2 235 2 849 2 1133 2 560 4 853 2 562 2 1137 4 564 2 1148 2 858 4 859 6 1154 2 870 2 872 2 261 2 262 2 878 2 584 2 1165 4 272 6 883 2 1174 2 588 4 281 6 889 2 592 2 893 2 285 4 597 2 
744 2 897 2 102 2 967 2 78 2 1035 4 372 2 716 2 80 2 334 2 9 2 872 2 84 2 297 4 301 2 878 2 683 2 425 2 584 2 944 4 468 2 190 2 351 6 693 4 198 4 560 4 1133 2 31 2 1001 6 285 2 172 2 597 2 529 2 77 2 205 6 
744 2 897 2 1033 2 135 2 1035 28 900 2 1039 2 140 2 8 6 9 2 297 4 301 2 616 2 759 2 468 2 1047 4 1049 3 1054 4 776 4 31 2 778 6 165 2 172 2 924 8 492 2 334 2 44 2 794 2 50 2 937 2 944 4 190 2 62 4 63 2 351 6 950 2 1096 2 66 2 198 2 1099 2 355 6 959 2 812 2 529 2 205 6 77 2 671 2 967 2 78 2 372 2 677 2 80 2 678 2 81 2 823 3 827 2 84 2 224 2 683 2 86 6 90 24 383 2 693 4 697 2 235 2 1133 2 562 2 991 2 996 3 1001 6 858 4 400 2 102 2 1003 2 406 2 716 2 870 2 1159 3 872 2 1010 2 874 2 878 2 425 2 584 2 1165 4 1014 2 431 2 285 2 597 2 
897 2 744 2 967 2 78 2 294 2 1035 12 372 4 901 2 677 2 80 2 9 2 84 2 297 4 548 2 301 2 683 2 86 4 759 2 839 2 468 2 90 6 18 2 156 2 693 6 235 2 1133 2 560 8 479 2 31 2 999 2 1001 8 172 2 858 2 102 2 492 2 716 2 334 4 45 2 872 2 794 2 650 4 878 2 584 2 425 4 944 4 1165 2 190 2 63 2 431 2 351 6 66 2 1174 2 588 2 198 10 76 2 285 4 597 2 205 6 77 2 529 4 
897 2 744 2 967 2 78 2 1035 12 372 4 901 2 677 2 80 2 9 2 297 4 548 2 301 2 683 2 86 4 759 2 839 2 90 6 468 2 18 2 156 2 693 8 235 2 560 8 1133 2 626 2 479 2 482 2 31 2 999 2 1001 8 172 2 858 2 102 2 492 2 716 2 869 2 334 4 45 2 872 2 794 2 650 4 878 2 584 2 425 4 944 4 1165 2 190 2 63 2 431 2 351 8 66 2 1174 2 588 2 198 10 666 4 76 2 285 4 597 2 77 2 205 6 529 4 
190 2 467 2 597 2 
190 2 467 2 597 2 
1033 2 897 4 744 2 2 2 1035 24 746 2 900 2 140 2 8 2 297 4 301 2 467 2 468 4 309 2 1047 4 18 2 156 2 1054 4 318 4 626 4 321 2 778 6 165 2 924 2 785 2 492 2 790 2 334 2 44 2 45 2 184 2 794 2 50 2 650 4 937 2 945 2 944 4 190 6 62 4 63 2 950 2 351 12 1097 6 1096 2 66 2 198 6 1099 2 355 2 357 4 959 2 962 4 205 12 529 2 671 2 537 2 372 4 972 2 677 2 678 2 823 2 548 2 683 2 86 6 980 2 839 2 90 16 383 8 982 4 693 16 235 2 1133 2 560 4 1137 2 562 2 991 2 994 2 1144 2 1146 2 1001 6 248 2 400 2 858 4 859 2 1003 2 406 2 107 4 1158 2 571 4 872 4 581 6 424 6 425 4 1165 4 1014 2 431 2 1174 2 588 4 1023 2 739 2 125 2 740 4 285 2 597 4 
1047 2 859 2 950 2 64 2 1154 2 1035 4 571 2 235 2 357 2 934 2 1137 2 30 2 479 2 378 2 1146 2 1107 2 90 2 
1033 2 897 4 744 2 2 2 1035 24 1038 2 746 2 900 2 140 2 8 2 297 4 301 2 467 2 468 4 1047 2 18 4 471 2 156 2 1054 4 318 4 162 2 626 4 778 6 165 2 924 2 785 2 492 2 645 2 334 2 44 2 45 2 184 2 794 2 50 2 650 4 937 2 945 4 944 4 190 6 62 4 63 2 351 12 1097 6 1096 2 66 2 198 6 1099 2 355 2 357 4 959 2 962 4 201 2 529 2 205 12 671 2 537 2 372 4 972 2 677 2 678 2 823 4 548 2 683 2 86 6 980 2 839 2 90 16 383 8 982 4 693 16 235 2 1133 2 560 4 562 2 991 2 1144 2 1146 2 999 2 1001 6 248 2 400 2 858 4 859 2 1003 2 406 2 107 4 1158 2 571 4 872 4 581 6 424 6 425 4 1165 4 1014 2 431 2 1174 2 588 4 1023 2 739 2 125 2 740 4 285 2 597 4 
0 2 1033 2 897 4 744 2 2 2 1035 24 746 2 900 2 140 2 8 2 297 4 301 2 467 2 468 4 1047 4 18 4 156 2 1054 4 318 4 625 2 626 4 778 6 165 2 633 2 924 2 785 2 492 2 334 2 44 2 45 2 184 2 794 2 50 2 650 4 937 2 945 2 944 4 190 6 62 4 63 2 950 2 351 12 1097 6 1096 2 66 2 198 6 1099 2 355 2 357 4 959 2 962 4 205 12 529 2 671 2 537 2 372 4 972 2 677 2 678 2 823 2 548 2 683 2 86 6 980 2 839 2 90 16 981 2 383 8 982 4 693 16 235 2 1133 2 560 4 1137 2 562 2 991 2 1144 2 1146 2 999 2 1001 6 248 2 400 2 858 4 859 2 1003 2 406 2 107 4 1158 2 571 4 872 4 581 6 424 6 425 4 1165 4 1014 2 431 2 1174 2 588 4 1023 2 590 2 739 2 125 2 740 4 285 2 597 4 
1 2 599 3 6 2 5 2 603 2 606 2 8 14 608 8 612 1 11 4 13 1 615 6 617 4 15 3 618 2 620 8 21 2 22 2 622 4 623 2 27 1 26 3 28 8 630 2 32 4 33 4 634 4 36 8 639 2 643 46 644 16 44 2 646 2 647 4 47 2 49 2 648 2 50 4 649 8 652 6 654 2 51 2 655 1 53 2 658 4 657 2 58 18 59 2 62 48 63 2 66 2 662 2 664 4 665 2 74 40 668 4 669 6 75 12 671 2 672 2 674 2 677 2 680 2 678 4 81 2 85 2 86 6 88 2 685 43 688 9 90 120 690 2 91 4 92 4 95 16 97 8 98 2 704 2 705 4 99 2 708 2 707 18 100 8 710 8 101 8 103 2 715 2 722 2 723 2 724 2 726 1 115 2 120 16 733 3 735 24 736 2 122 8 126 18 129 2 745 8 136 8 137 2 140 2 141 2 747 8 748 8 143 4 144 4 750 4 146 12 756 4 757 2 148 4 758 2 149 8 159 18 157 2 767 2 768 58 772 2 776 12 775 2 777 2 778 124 165 2 166 16 167 2 169 2 781 16 783 2 174 20 175 2 786 2 787 4 788 1 180 2 182 4 793 2 794 2 795 2 799 8 801 1 804 2 192 1 191 2 193 8 810 2 199 2 812 2 203 4 814 18 817 2 823 25 824 2 217 2 218 8 226 8 230 2 838 2 840 6 846 2 234 4 235 2 236 2 237 4 244 2 245 4 858 4 251 3 863 2 257 2 868 8 870 2 871 9 261 2 874 2 268 18 269 10 273 2 274 16 882 4 883 2 278 8 280 2 891 28 893 2 284 1 895 2 291 2 292 8 900 2 904 1 298 8 907 4 300 2 302 2 306 4 308 12 312 9 313 2 319 6 325 2 924 36 328 2 925 2 926 8 333 25 335 4 936 2 937 2 345 8 349 8 352 2 951 2 952 2 954 2 355 14 959 4 359 2 961 4 361 2 963 8 966 2 366 2 969 16 970 2 971 2 977 2 376 16 379 4 382 2 383 2 385 4 984 6 985 2 986 8 391 16 989 2 991 2 995 4 398 4 996 16 997 13 400 34 1002 2 1003 2 408 2 1006 8 413 8 414 6 1009 12 1010 2 423 4 426 8 428 2 1014 12 431 2 1015 2 1016 1 1019 16 1024 8 438 4 1026 12 1030 4 1029 2 441 4 445 4 1033 12 446 2 447 12 450 8 453 2 1035 154 455 3 1042 10 1043 2 1044 2 456 3 459 2 464 2 465 2 1047 2 1046 2 1048 2 1049 25 470 2 1050 4 1053 36 472 2 1054 56 474 2 473 2 475 4 1059 2 478 2 481 2 1065 4 489 10 1074 2 493 2 492 2 494 2 1078 2 495 4 499 2 1086 2 503 4 506 10 507 2 508 2 1096 2 1097 4 511 2 512 4 1099 2 1102 4 514 2 517 2 519 2 1103 4 1105 20 523 2 525 2 531 2 1111 4 534 12 533 2 535 2 539 4 1114 18 542 2 1115 4 1118 2 549 8 1121 24 1122 20 1124 2 1125 2 553 8 555 2 554 8 562 34 1138 4 1140 4 1141 2 1142 4 1143 2 563 4 564 2 565 8 566 4 567 4 569 2 1151 4 1157 2 1159 2 578 4 580 3 1161 8 582 8 1164 18 1165 4 1167 4 1170 2 1173 2 1176 2 1175 2 589 2 1181 6 1183 4 
1049 2 733 2 643 6 1035 2 180 2 674 2 870 2 8 2 680 2 823 2 355 2 1042 2 776 2 244 2 51 2 630 2 85 2 996 2 1106 2 1125 2 506 4 269 2 90 2 924 2 
1049 2 733 2 643 6 1035 2 180 2 674 2 870 2 8 2 680 2 823 2 355 2 1042 2 776 2 244 2 51 2 630 2 85 2 996 2 1106 2 1125 2 506 4 269 2 90 2 924 2 
1049 2 733 2 643 6 1035 2 180 2 674 2 870 2 8 2 680 2 823 2 355 2 1042 2 776 2 244 2 51 2 630 2 85 2 996 2 1106 2 1125 2 506 4 269 2 90 2 924 2 
926 4 489 2 864 2 1036 2 1035 10 136 4 870 2 823 3 578 2 48 2 144 2 1009 4 458 2 649 2 652 2 1119 3 54 2 688 3 90 4 193 4 1049 3 1094 2 312 3 385 2 1053 6 986 4 624 4 1024 2 664 2 1030 2 515 2 1103 2 630 2 856 2 669 4 997 5 169 2 364 2 36 2 566 2 924 2 
1035 10 1036 2 136 4 823 2 144 2 458 2 1119 2 688 2 90 4 153 2 1049 2 312 2 385 2 1053 6 986 4 624 4 630 2 856 2 169 2 997 4 36 2 566 2 924 2 926 4 489 2 864 2 870 2 578 2 1009 4 48 2 649 2 652 2 54 2 193 4 1094 2 1024 2 664 2 1102 2 515 2 1030 2 1103 2 669 4 364 2 
1035 10 1036 2 136 4 823 2 144 2 458 2 1119 2 688 2 90 4 153 2 1049 2 312 2 385 2 1053 6 986 4 624 4 630 2 856 2 169 2 997 4 36 2 566 2 924 2 926 4 489 2 864 2 870 2 578 2 1009 4 48 2 649 2 652 2 54 2 193 4 1094 2 1024 2 664 2 1102 2 515 2 1030 2 1103 2 669 4 364 2 
1035 10 1036 2 136 4 823 2 144 2 458 2 1119 2 688 2 90 4 153 2 1049 2 312 2 385 2 1053 6 986 4 624 4 630 2 856 2 169 2 997 4 36 2 566 2 924 2 926 4 489 2 864 2 870 2 578 2 1009 4 48 2 649 2 652 2 54 2 193 4 1094 2 1024 2 664 2 1102 2 515 2 1030 2 1103 2 669 4 364 2 
1035 10 1036 2 136 4 823 2 144 2 458 2 1119 2 688 2 90 4 153 4 1049 2 312 2 385 2 1053 6 986 4 624 4 630 2 856 2 169 2 997 4 36 2 566 2 924 2 926 4 489 2 864 2 870 2 578 2 1009 4 48 2 649 2 652 4 54 2 193 4 1094 2 1024 2 664 2 1102 4 515 2 1030 2 1103 2 669 4 364 2 
118 2 845 2 20 2 167 2 769 2 1092 2 
118 2 691 2 159 2 1040 2 1178 2 390 2 729 2 
63 2 642 2 41 1 42 2 1035 4 867 1 916 2 480 1 593 2 220 2 483 1 462 2 998 2 1000 2 1072 1 90 4 1071 2 
1035 6 293 2 930 2 414 3 216 2 578 2 1009 11 144 5 457 2 977 2 649 6 652 6 267 2 800 2 90 6 153 4 91 2 1024 6 438 1 664 5 1102 5 1030 5 665 2 667 2 1103 5 283 2 398 2 669 4 997 13 36 6 1032 4 
926 2 761 2 193 2 1035 1 789 6 386 2 695 2 986 2 676 2 1080 2 1063 2 1180 1 629 2 797 2 876 4 585 2 117 2 90 1 
761 2 926 2 193 2 789 6 386 4 695 2 986 2 676 4 1080 2 1063 2 629 2 797 2 876 4 585 4 117 2 
761 8 926 2 193 2 1035 1 789 10 386 8 695 2 986 2 676 8 1080 2 1063 2 1180 1 629 2 797 2 876 4 585 8 117 6 90 1 
926 2 193 2 789 2 386 2 695 2 986 2 676 2 1080 2 1063 2 629 2 797 2 876 2 585 2 
447 14 1033 6 450 4 745 4 292 4 1035 78 455 4 747 4 608 4 748 6 612 3 904 1 755 4 298 4 13 1 615 7 149 4 909 2 619 2 620 16 765 2 1054 44 621 4 622 4 768 24 161 8 26 3 28 4 1065 4 778 103 485 2 32 4 166 6 634 4 781 10 490 2 641 2 491 4 179 2 43 10 788 3 644 10 793 2 335 4 185 4 498 8 654 1 655 3 345 4 62 36 804 2 349 4 660 16 1100 4 73 2 963 4 527 2 1109 2 530 32 971 2 678 2 544 8 825 16 681 2 218 4 549 4 226 4 553 8 685 15 554 4 90 70 701 2 97 4 562 29 1142 4 705 4 995 4 707 24 857 2 565 4 1147 4 400 27 710 4 101 4 1151 4 401 4 1152 1 1006 4 413 4 871 5 1008 10 582 4 426 4 268 8 1167 4 1169 10 1014 6 274 10 120 10 1171 2 884 2 278 4 1019 11 737 8 1021 2 122 8 891 26 284 1 126 24 
1033 2 533 2 1035 28 971 2 608 4 678 2 748 2 681 2 612 2 218 4 456 1 222 2 1122 2 226 2 615 5 685 14 554 2 837 2 90 26 765 2 1054 14 768 8 27 1 26 4 97 4 562 12 778 40 166 2 857 2 781 2 565 2 400 12 710 2 101 4 641 2 407 2 788 2 333 7 644 6 793 2 871 4 582 4 654 1 655 2 53 1 804 2 62 14 1014 2 949 2 192 1 120 6 274 6 1016 1 884 2 278 4 1019 2 891 6 365 2 527 2 
447 12 1033 14 450 6 745 6 292 6 1035 150 608 6 455 5 747 6 143 2 748 10 904 2 612 4 456 6 298 6 13 4 149 6 615 14 155 26 19 10 620 42 765 2 1054 112 622 4 768 124 770 4 27 2 26 8 28 6 1065 4 778 248 485 2 32 4 166 36 634 4 781 18 780 4 788 6 644 16 333 22 793 8 335 4 935 8 654 4 655 4 53 10 345 6 62 88 804 8 349 6 949 2 192 2 70 90 963 6 365 2 1108 10 527 2 1109 2 533 4 820 26 971 8 678 8 822 24 215 8 218 6 681 2 83 2 1117 90 222 4 549 6 226 10 1122 4 552 4 553 42 685 28 554 10 686 4 89 2 90 134 1134 10 97 6 562 58 1142 4 705 4 854 24 995 4 707 84 100 24 857 2 565 10 400 58 710 10 101 6 1151 4 862 6 713 12 407 2 1006 6 868 24 413 6 871 8 415 4 1161 6 582 6 422 2 583 4 265 4 725 8 726 1 426 6 268 50 1167 4 1014 14 274 16 120 16 1172 4 1016 2 884 2 278 6 1019 16 122 24 891 34 595 24 284 2 126 92 598 4 286 18 
1033 2 289 2 818 4 452 2 1035 46 971 2 608 2 822 2 678 2 748 2 681 2 218 2 145 2 222 2 226 2 380 2 227 2 552 2 151 2 554 2 685 36 837 2 232 2 90 44 469 2 19 2 763 2 765 2 1054 20 314 2 696 2 768 6 389 2 1132 2 988 2 1134 2 97 2 772 4 562 6 393 2 163 4 778 48 854 2 166 2 1068 2 1070 2 781 2 857 2 565 2 635 2 921 2 400 6 710 2 101 2 641 2 104 2 788 2 179 2 43 2 178 2 644 4 793 2 871 6 1008 2 935 2 336 4 1012 2 418 2 582 2 940 2 116 2 1169 2 62 20 804 2 1014 2 732 2 120 4 274 4 67 2 1098 2 884 2 278 2 1019 2 73 2 964 2 595 2 813 2 365 2 1108 2 814 6 527 2 
702 2 
82 1 591 1 979 1 183 1 524 1 108 1 
82 1 591 1 979 1 183 1 524 1 108 1 
82 1 591 1 979 1 183 1 524 1 108 1 
82 1 591 1 979 1 183 1 524 1 108 1 
82 1 591 1 979 1 183 1 524 1 108 1 
82 1 591 1 979 1 183 1 524 1 108 1 
82 1 591 1 979 1 183 1 524 1 108 1 
82 1 591 1 979 1 183 1 524 1 108 1 
82 1 591 1 979 1 183 1 524 1 108 1 
82 1 591 1 979 1 183 1 524 1 108 1 
82 1 591 1 979 1 183 1 524 1 108 1 
82 1 591 1 979 1 183 1 524 1 108 1 
82 1 591 1 979 1 183 1 524 1 108 1 
82 1 591 1 979 1 183 1 524 1 108 1 
82 1 591 1 979 1 183 1 524 1 108 1 
82 1 591 1 979 1 183 1 524 1 108 1 
82 1 591 1 979 1 183 1 524 1 108 1 
82 1 591 1 979 1 183 1 524 1 108 1 
82 1 591 1 979 1 183 1 524 1 108 1 
82 1 591 1 979 1 183 1 524 1 108 1 
82 1 591 1 979 1 183 1 524 1 108 1 
82 1 591 1 979 1 183 1 524 1 108 1 
82 1 591 1 979 1 183 1 524 1 108 1 
82 1 591 1 979 1 183 1 524 1 108 1 
82 1 591 1 979 1 183 1 524 1 108 1 
82 1 591 1 979 1 183 1 524 1 108 1 
82 1 591 1 979 1 183 1 524 1 108 1 
82 1 591 1 979 1 183 1 524 1 108 1 
82 1 591 1 979 1 183 1 524 1 108 1 
82 1 591 1 979 1 183 1 524 1 108 1 
82 1 591 1 979 1 183 1 524 1 108 1 
82 1 591 1 979 1 183 1 524 1 108 1 
82 1 591 1 979 1 183 1 524 1 108 1 
82 1 591 1 979 1 183 1 524 1 108 1 
82 1 591 1 979 1 183 1 524 1 108 1 
82 1 591 1 979 1 183 1 524 1 108 1 
82 1 591 1 979 1 183 1 524 1 108 1 
82 1 591 1 979 1 183 1 524 1 108 1 
82 1 591 1 979 1 183 1 524 1 108 1 
82 1 591 1 979 1 183 1 524 1 108 1 
82 1 591 1 979 1 183 1 524 1 108 1 
82 1 591 1 979 1 183 1 524 1 108 1 
82 1 591 1 979 1 183 1 524 1 108 1 
82 1 591 1 979 1 183 1 524 1 108 1 

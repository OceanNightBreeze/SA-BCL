#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testArraysMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR utilMDE.Assert$AssertionException (237,1119) (237,1119) 225 
daikon.test.TestAst:test_Ast_Ppt_Match()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V FAILED junit.framework.ComparisonFailure 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 632 967 1134 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 992 1007 1098 
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 992 1007 1098 
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_0()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_1()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_2()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_3()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_4()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_5()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_6()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_7()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_8()V FAILED junit.framework.AssertionFailedError (517,946) (517,946) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_9()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_10()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_11()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_12()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_13()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_14()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_15()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_16()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_17()V PASSED
daikon.test.split.SplitterFactoryTest:testmisc_Fib_main_18()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_19()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_20()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_21()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_22()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_23()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_24()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_25()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_26()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_27()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_28()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_29()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_30()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_31()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_32()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__33()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__34()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__35()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__36()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__37()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__38()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__39()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__40()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__41()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__42()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__43()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
jtb.syntaxtree.ExclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
daikon.Quant:subsetOf([I[I)Z
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.FuzzyFloat:lt(DD)Z
jtb.JavaParser:jj_3R_134()Z
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([I[II)Z
jtb.JavaParser:jj_3_12()Z
daikon.Quant:pairwiseLT([I[I)Z
daikon.Quant:isReverse([I[I)Z
daikon.Quant:subsetOf([D[D)Z
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
jtb.syntaxtree.FormalParameter:FormalParameter(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Type;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.VariableDeclaratorId;)V
jtb.JavaParser:jj_3R_120()Z
jtb.syntaxtree.NodeSequence:accept(Ljtb.visitor.Visitor;)V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
jtb.syntaxtree.TypeArgument:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalAndExpression;)V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
jtb.JavaParser:jj_2_3(I)Z
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
daikon.Quant:subsetOf([F[D)Z
daikon.Quant:subsetOf([F[F)Z
utilMDE.LimitedSizeIntSet:add(I)V
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
jtb.JavaParser:jj_2_5(I)Z
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.VarInfo:jml_name()Ljava.lang.String;
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
jtb.syntaxtree.ClassOrInterfaceBody:getParent()Ljtb.syntaxtree.Node;
utilMDE.UtilMDE:removeWhitespaceAround(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.TreeDumper:TreeDumper(Ljava.io.Writer;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameters;)V
jtb.syntaxtree.TypeArguments:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
utilMDE.SimpleLog.LongVal:LongVal(J)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:lexGT([I[I)Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
daikon.ProglangType:baseIsScalar()Z
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3_35()Z
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.TestQuant:assert_arrays_equals([I[I)V
utilMDE.ArraysMDE:sum([I)I
daikon.tools.jtb.Ast:create(Ljava.lang.String;Ljava.lang.String;)Ljtb.syntaxtree.Node;
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_89()Z
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Modifiers;)V
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.NodeListOptional:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE:modulus([I)[I
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.tools.jtb.Ast:getName(Ljtb.syntaxtree.MethodDeclaration;)Ljava.lang.String;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.tools.jtb.Ast:create(Ljava.lang.String;[Ljava.lang.Class;[Ljava.lang.Object;Ljava.lang.String;)Ljtb.syntaxtree.Node;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.Quant:memberOf(I[I)Z
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.Quant:lexLTE([I[I)Z
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_162()Z
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
jtb.JavaCharStream:GetImage()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Type;)V
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
jtb.JavaParser:jj_3R_115()Z
daikon.test.FormatTestCase.SingleOutputTestCase:getDiffString()Ljava.lang.String;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_70()Z
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.Quant:setDiff([I[I)[I
utilMDE.MathMDE:gcd(JJ)J
daikon.Quant:eltsLT([II)Z
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_3_29()Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
jtb.visitor.FormatCommand:getNumCommands()I
jtb.JavaParser:jj_3R_122()Z
daikon.VarInfoName:name()Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
jtb.syntaxtree.Literal:accept(Ljtb.visitor.Visitor;)V
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_2_35(I)Z
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_114()Z
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.UpperBoundCore:computeProbability()D
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryPrefix;)V
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_123()Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_108()Z
daikon.Quant:setEqual([I[I)Z
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
jtb.visitor.TreeFormatter:placeToken(Ljtb.syntaxtree.NodeToken;II)V
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
utilMDE.MathMDE:missing_numbers([I)[I
utilMDE.Intern.SequenceAndIndices:hashCode()I
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.VarInfoName.Elements:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.tools.jtb.PptNameMatcher:typeMatch(Ljava.lang.String;Ljtb.syntaxtree.FormalParameter;)Z
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
jtb.syntaxtree.ResultType:accept(Ljtb.visitor.Visitor;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
jtb.JavaParser:jj_3R_53()Z
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
jtb.syntaxtree.FormalParameters:accept(Ljtb.visitor.Visitor;)V
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
jtb.syntaxtree.NodeToken:trimSpecials()V
jtb.JavaParser:jj_3R_161()Z
jtb.JavaParser:jj_3_19()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalOrExpression;)V
jtb.JavaParser:jj_3R_57()Z
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpression;)V
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
jtb.syntaxtree.NodeSequence:getParent()Ljtb.syntaxtree.Node;
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
jtb.JavaParser:jj_3R_137()Z
utilMDE.MathMDE:gcd([I)I
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.inv.unary.scalar.Positive:enabled()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AdditiveExpression;)V
jtb.JavaParser:jj_2_4(I)Z
jtb.syntaxtree.UnaryExpressionNotPlusMinus:accept(Ljtb.visitor.Visitor;)V
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.VarInfoName:hashCode()I
jtb.JavaCharStream:UpdateLineColumn(C)V
utilMDE.FuzzyFloat:ne(DD)Z
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.Quant:memberOf(S[S)Z
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;Z)Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
jtb.syntaxtree.NodeListOptional:getParent()Ljtb.syntaxtree.Node;
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.PptSlice0:arity()I
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:VariableDeclaratorId()Ljtb.syntaxtree.VariableDeclaratorId;
jtb.syntaxtree.BlockStatement:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameters;)V
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.TypeParameters:accept(Ljtb.visitor.Visitor;)V
utilMDE.FuzzyFloat:gt(DD)Z
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
jtb.visitor.TreeFormatter:TreeFormatter()V
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
utilMDE.Assert:assertTrue(Z)V
daikon.Quant:pairwiseEqual([I[I)Z
jtb.JavaParser:jj_3R_124()Z
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
utilMDE.Intern:intern([J)[J
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.VarInfo:name()Ljava.lang.String;
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljava.lang.String;Ljava.lang.String;Ljava.util.List;)Z
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljtb.syntaxtree.Node;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ExclusiveOrExpression;)V
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.syntaxtree.MethodDeclarator:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
jtb.syntaxtree.TypeArguments:accept(Ljtb.visitor.Visitor;)V
daikon.test.FormatTestCase:getDiffString()Ljava.lang.String;
daikon.PptName:getFullClassName()Ljava.lang.String;
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
jtb.syntaxtree.Type:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
utilMDE.FuzzyFloat:eq(DD)Z
jtb.JavaParser:jj_3R_81()Z
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:eltsLTE([II)Z
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.VarInfo:isPointer()Z
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InstanceOfExpression;)V
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_scan_token(I)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
jtb.JavaParser:jj_3R_125()Z
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.inv.Invariant:logOn()Z
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.ConditionalOrExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_63()Z
utilMDE.UtilMDE:lineNumberFileReader(Ljava.io.File;)Ljava.io.LineNumberReader;
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeDeclaration;)V
jtb.syntaxtree.VariableDeclaratorId:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:JavaParser(Ljava.io.Reader;)V
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
jtb.syntaxtree.TypeParameter:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3_28()Z
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:sum([[D)D | STATEMENT | 9149 | stmt -> ;
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfo:relate_var()V
utilMDE.MathMDE:mod_positive(II)I
daikon.ModBitTracker:num_samples()I
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.Quant:eltsGT([II)Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:ne(II)Z
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.inv.unary.scalar.NonModulus:updateResults()V
jtb.JavaParser:getToken(I)Ljtb.Token;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.ProglangType:baseIsFloat()Z
jtb.JavaParser:jj_2_21(I)Z
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.UpperBoundCore:calc_modulus()J
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V | CONDITION | 1380 | if (x) -> if (!x)
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
jtb.syntaxtree.ClassOrInterfaceBody:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MultiplicativeExpression;)V
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_148()Z
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:jj_ntk()I
jtb.JavaCharStream:ReadByte()C
daikon.PptName:isCombinedExitPoint()Z
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
jtb.JavaParser:jj_3R_100()Z
jtb.JavaParser:jj_3R_96()Z
jtb.syntaxtree.NodeToken:accept(Ljtb.visitor.Visitor;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
jtb.syntaxtree.MethodDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaCharStream:readChar()C
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Literal;)V
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.PptSlice0:initInvariantsSeen()V
jtb.JavaCharStream:getEndLine()I
daikon.tools.jtb.Ast:format(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
jtb.visitor.TreeFormatter:processList(Ljtb.syntaxtree.NodeListInterface;Ljtb.visitor.FormatCommand;)V
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
jtb.JavaCharStream:backup(I)V
daikon.inv.Invariants:Invariants()V
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
jtb.JavaParser:jj_3R_163()Z
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.Debug:logOn()Z
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
jtb.syntaxtree.NodeSequence:elements()Ljava.util.Enumeration;
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltwiseEqual([I)Z
jtb.JavaParser:jj_2_12(I)Z
jtb.syntaxtree.NodeOptional:present()Z
daikon.ModBitTracker:num_vars()I
jtb.JavaParser:jj_3_3()Z
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:lexLT([I[I)Z
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
utilMDE.OrderedPairIterator:setnext2()V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant; | RETURN | 2124 | return null
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ImportDeclaration;)V
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.inv.Invariant:justified()Z
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.VarInfo:ioa_name()Ljava.lang.String;
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
daikon.tools.jtb.Ast:getParent(Ljava.lang.Class;Ljtb.syntaxtree.Node;)Ljtb.syntaxtree.Node;
jtb.JavaParser:jj_3R_48()Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:lexEqual([I[I)Z
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.Quant:pairwiseSquare([I[I)Z
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.syntaxtree.NodeListOptional:present()Z
jtb.JavaParser:jj_3_30()Z
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
jtb.syntaxtree.ClassOrInterfaceBody:ClassOrInterfaceBody(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalExpression;)V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.tools.jtb.Ast:getClassName(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
jtb.JavaParser:jj_3R_102()Z
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:format()Ljava.lang.String;
jtb.syntaxtree.CompilationUnit:getParent()Ljtb.syntaxtree.Node;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.TypeDeclaration:TypeDeclaration(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.ClassOrInterfaceType:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
jtb.JavaParser:jj_3_13()Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.Quant:memberOf(F[D)Z
utilMDE.MathMDE:pow(II)I
jtb.JavaParser:jj_3R_180()Z
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
jtb.JavaParser:jj_3R_109()Z
daikon.Quant:gte(II)Z
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclarator;)V
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.tools.jtb.Ast:typeMatch(Ljava.lang.String;Ljava.lang.String;)Z
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.Quant:pairwiseLTE([I[I)Z
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Quant:concat([I[I)[I
jtb.JavaParser:jj_3R_50()Z
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.LowerBound:enabled()Z
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
utilMDE.MathMDE:gcd(II)I
daikon.Quant:eltsGTE([II)Z
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
utilMDE.MathMDE:sign(I)I
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.inv.Invariant:logDetail()Z
daikon.tools.jtb.SimpleTreeDumper:SimpleTreeDumper(Ljava.io.Writer;)V
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:gte(DD)Z
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.Quant:eltwiseNotEqual([I)Z
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set; | RETURN | 94892 | return null
daikon.Quant:eltsEqual([II)Z
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.inv.filter.InvariantFilter:InvariantFilter()V
jtb.syntaxtree.VariableDeclaratorId:accept(Ljtb.visitor.Visitor;)V
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.PptSlice1:arity()I
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor.1:visit(Ljtb.syntaxtree.TypeParameter;)V
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
jtb.visitor.FormatCommand:FormatCommand(II)V
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_106()Z
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_210()Z
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.ModBitTracker:num_sets()I
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.inv.unary.UpperBoundCore:calc_range()J
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
daikon.PptName:isEnterPoint()Z
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.LowerBoundCore:computeConfidence()D
jtb.visitor.TreeFormatter:TreeFormatter(II)V
jtb.JavaParser:jj_3R_121()Z
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeChoice:getParent()Ljtb.syntaxtree.Node;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_126()Z
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:noDups([I)Z
jtb.JavaParser:jj_3R_80()Z
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
jtb.syntaxtree.VariableDeclaratorId:VariableDeclaratorId(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
jtb.JavaParser:jj_3R_105()Z
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.Invariant:isWorthPrinting()Z
daikon.Quant:intersection([I[I)[I
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.UpperBound:enabled()Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.Quant:eltsEqualIndex([I)Z
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.Type;)V
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.FormatTestCase:passes()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeSequence;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameter;)V
utilMDE.TestUtilMDE:lsis_test(I)V
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
jtb.JavaParser:jj_3R_58()Z
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.Quant:slice([III)[I
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:lexNotEqual([I[I)Z
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
jtb.JavaParser:jj_3R_72()Z
jtb.JavaParser:jj_3R_97()Z
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quant:eq(JJ)Z
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.ShiftExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
jtb.JavaCharStream:getEndColumn()I
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3_1()Z
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3_27()Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameter;)V
jtb.syntaxtree.ImportDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakHasherMap:processQueue()V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
jtb.JavaParser:jj_3_17()Z
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.tools.jtb.Ast:getType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.Quant:eltwiseGTE([I)Z
jtb.JavaParser:jj_2_10(I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeBound;)V
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.Quant:eltwiseGT([I)Z
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
jtb.syntaxtree.TypeArguments:TypeArguments(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeArgument;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.Invariant:prob_or(DD)D
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
jtb.syntaxtree.InstanceOfExpression:accept(Ljtb.visitor.Visitor;)V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
jtb.syntaxtree.PackageDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.TreeFormatter:space()Ljtb.visitor.FormatCommand;
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_15()Z
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
jtb.syntaxtree.MethodDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.test.TestAst.ClassOrInterfaceDeclarationHarvester:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
utilMDE.Intern:internSubsequence([JII)[J
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_101()Z
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.Quant:subsetOf([J[J)Z
daikon.test.TestAst.MethodDeclarationHarvester:visit(Ljtb.syntaxtree.MethodDeclaration;)V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.NullLiteral:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.Quant:subsetOf([S[S)Z
jtb.JavaParser:jj_3R_55()Z
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.Expression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PostfixExpression;)V
jtb.JavaParser:jj_3R_49()Z
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_107()Z
daikon.VarInfoName:repr()Ljava.lang.String;
jtb.visitor.TreeDumper:printToken(Ljava.lang.String;)V
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.Quant:union([I[I)[I
daikon.ProglangType:isFloat()Z
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_103()Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.OrderedPairIterator:hasNext()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArguments;)V
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_67()Z
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.tools.jtb.PptNameMatcher:PptNameMatcher(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.TypeArgument:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:prob_and(DD)D
daikon.inv.Invariant:prob_and(DDD)D
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.LowerBoundCore:computeProbability()D
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.NodeOptional:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
jtb.visitor.TreeFormatter:add(Ljtb.visitor.FormatCommand;)V
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.ValueTuple:size()I
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.BlockStatement;)V
jtb.syntaxtree.TypeBound:accept(Ljtb.visitor.Visitor;)V
daikon.inv.filter.ObviousFilter:ObviousFilter()V
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
daikon.tools.jtb.SimpleTreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Intern:numIntArrays()I
daikon.tools.jtb.Ast:print(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern:intern([D)[D
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArgument;)V
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
jtb.syntaxtree.RelationalExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.OrderedPairIterator:setnext1()V
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3R_47()Z
jtb.JavaParser:jj_3R_116()Z
jtb.JavaParser:jj_3R_117()Z
jtb.JavaParser:jj_3R_69()Z
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.ArraysMDE:element_range([I)I
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.JavaCharStream:getBeginColumn()I
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_169()Z
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.diff.InvMap:toString()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;)V
jtb.JavaParser:jj_3R_61()Z
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_51()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
jtb.JavaCharStream:getBeginLine()I
daikon.Quant:eltsNotEqual([II)Z
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Block;)V
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ResultType;)V
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
jtb.JavaParser:jj_3R_87()Z
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
jtb.syntaxtree.NodeSequence:elementAt(I)Ljtb.syntaxtree.Node;
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.TypeDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:computeConfidence()D
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
jtb.JavaParser:jj_3R_52()Z
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.inv.unary.LowerBoundCore:calc_modulus()J
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
jtb.JavaParser:jj_2_18(I)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
jtb.syntaxtree.AdditiveExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.diff.Node:Node(LutilMDE.Pair;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NullLiteral;)V
utilMDE.ArraysMDE:subarray([III)[I
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eltsLteIndex([I)Z
utilMDE.UtilMDE:removeWhitespaceBefore(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.PptTopLevel.CondIterator:hasNext()Z
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;II)V
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
jtb.Token:newToken(I)Ljtb.Token;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
jtb.JavaParser:jj_3R_85()Z
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.PptTopLevel:getInvariants()Ljava.util.List;
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
utilMDE.SimpleLog:SimpleLog(Z)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.Quant:lt(II)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReturnStatement;)V
utilMDE.Options.OptionInfo:argument_required()Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.Quant:pairwiseGTE([I[I)Z
daikon.tools.jtb.Ast.1GetParametersVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
jtb.JavaParser:jj_2_15(I)Z
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.RootNode:RootNode()V
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
jtb.JavaParser:jj_3R_119()Z
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
jtb.syntaxtree.NodeToken:numSpecials()I
jtb.JavaParser:jj_3_16()Z
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:mod_positive(JJ)J
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_99()Z
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3_10()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Statement;)V
utilMDE.ArraysMDE:sum([[I)I
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_2_1(I)Z
utilMDE.ArraysMDE:concat([I[I)[I
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
jtb.syntaxtree.ClassOrInterfaceBody:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
jtb.JavaParser:jj_3R_76()Z
jtb.JavaParser:jj_3R_68()Z
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3_5()Z
jtb.syntaxtree.Name:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
jtb.JavaCharStream:BeginToken()C
daikon.Quant:memberOf(J[J)Z
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.ValueTuple:isMissing(I)Z
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
jtb.syntaxtree.ClassOrInterfaceDeclaration:ClassOrInterfaceDeclaration(Ljtb.syntaxtree.NodeChoice;Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ClassOrInterfaceBody;)V
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
jtb.JavaParser:jj_3R_62()Z
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
jtb.JavaParser:jj_3R_86()Z
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
jtb.JavaCharStream:FillBuff()V
jtb.JavaParser:jj_3R_118()Z
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.InvMap:InvMap()V
daikon.ValueTuple:isMissingFlow(I)Z
jtb.JavaParser:jj_3_20()Z
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_110()Z
utilMDE.UtilMDE:splitLines(Ljava.lang.String;)[Ljava.lang.String;
daikon.tools.jtb.PptNameMatcher:getUngenerifiedType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.Quant:pairwiseGT([I[I)Z
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:max([I)I
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
jtb.syntaxtree.FormalParameter:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.InclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.tools.jtb.Ast:removeWhitespace(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.FormalParameter:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
jtb.JavaParser:jj_3R_133()Z
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ValueTuple:tuplemodHasModified(I)Z
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.ProglangType:baseIsIntegral()Z
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.tools.jtb.Ast:getParameters(Ljtb.syntaxtree.MethodDeclaration;)Ljava.util.List;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
utilMDE.UtilMDE:lineNumberFileReader(Ljava.lang.String;)Ljava.io.LineNumberReader;
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.Quant:subsetOf([B[I)Z
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:eltsGtIndex([I)Z
jtb.visitor.TreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
utilMDE.MathMDE:pow_fast(II)I
daikon.ProglangType:isPseudoArray()Z
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_74()Z
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.Quant:lexGTE([I[I)Z
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:elements()Ljava.util.Enumeration;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
jtb.JavaParser:jj_2_25(I)Z
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:ioa_name()Ljava.lang.String;
jtb.JavaParser:jj_3_22()Z
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.test.TestAst:checkMatch(Ljava.lang.String;Ljtb.syntaxtree.MethodDeclaration;Ldaikon.tools.jtb.PptNameMatcher;)V
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ModBitTracker:ModBitTracker(I)V
jtb.syntaxtree.ReferenceType:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReferenceType;)V
daikon.ProglangType:isArray()Z
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
jtb.syntaxtree.PrimaryPrefix:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.UnaryExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:subarray([JII)[J
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3_25()Z
utilMDE.MathMDE:negate(I)I
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
jtb.JavaParser:jj_2_13(I)Z
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.Quant:memberOf(D[F)Z
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
daikon.tools.jtb.Ast:quickFixForInternalComment(Ljava.lang.String;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:MoreLexicalActions()V
jtb.syntaxtree.ClassOrInterfaceDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.EqualityExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PackageDeclaration;)V
jtb.syntaxtree.NodeOptional:NodeOptional()V
jtb.syntaxtree.NodeList:NodeList()V
utilMDE.ArraysMDE:sum([D)D
jtb.JavaParser:jj_3R_54()Z
jtb.syntaxtree.CompilationUnit:accept(Ljtb.visitor.Visitor;)V
daikon.inv.Invariant:getConfidence()D
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
jtb.JavaParser:jj_3R_135()Z
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:copy(Ljava.util.HashMap;)Ljava.util.HashMap;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.tools.jtb.PptNameMatcher:extractPptArgs(Ldaikon.PptName;)Ljava.util.List;
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ReferenceType;)V
jtb.syntaxtree.CompilationUnit:CompilationUnit(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameters;)V
daikon.PptName:getSignature()Ljava.lang.String;
jtb.syntaxtree.AndExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.test.InvariantFormatTester:execute()Z
daikon.Quant:sameLength([I[I)Z
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.FuzzyFloat:FuzzyFloat()V
jtb.JavaParser:jj_3R_164()Z
jtb.JavaParser:jj_3R_73()Z
jtb.JavaParser:jj_3R_149()Z
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:min_max([I)[I
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
jtb.JavaParser:jj_3R_60()Z
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:pairwiseDivides([I[I)Z
daikon.Quant:subsetOf([D[F)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_2_17(I)Z
jtb.JavaParser:jj_3R_75()Z
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.ValueSet:ValueSet(I)V
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:getParent()Ljtb.syntaxtree.Node;
utilMDE.FuzzyFloat:lte(DD)Z
jtb.syntaxtree.Block:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryExpression;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.EqualityExpression;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InclusiveOrExpression;)V
utilMDE.WeakHasherMap:size()I
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
jtb.syntaxtree.ConditionalExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
jtb.syntaxtree.TypeDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.PostfixExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Ppt:Ppt()V
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.ProglangType:dimensions()I
jtb.JavaParser:jj_3R_77()Z
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
jtb.JavaParser:FormalParameter()Ljtb.syntaxtree.FormalParameter;
daikon.VarInfo:simplify_name()Ljava.lang.String;
jtb.syntaxtree.PrimaryExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeChoice:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:memberOf(F[F)Z
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AndExpression;)V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
utilMDE.LimitedSizeIntSet:size()I
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
utilMDE.Intern:internSubsequence([III)[I
daikon.Quant:gt(II)Z
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.Quant:eq(II)Z
daikon.tools.jtb.SimpleTreeDumper:printToken(Ljava.lang.String;)V
jtb.JavaParser:jj_3R_88()Z
jtb.syntaxtree.Modifiers:accept(Ljtb.visitor.Visitor;)V
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.ProglangType:isScalar()Z
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_98()Z
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.simplify.LemmaStack:noticeInt(J)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
utilMDE.ArraysMDE:min([I)I
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.ProglangType:isPointerFileRep()Z
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.ProglangType:isIntegral()Z
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.CompilationUnit;)V
jtb.JavaParser:jj_2_36(I)Z
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.MultiplicativeExpression:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Expression;)V
daikon.PptName:toString()Ljava.lang.String;
utilMDE.UtilMDE:removeWhitespaceAfter(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.Debug:logDetail()Z
jtb.JavaParser:jj_2_16(I)Z
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
jtb.visitor.TreeFormatter:space(I)Ljtb.visitor.FormatCommand;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
jtb.JavaParser:jj_3R_136()Z
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:lte(II)Z
daikon.Quant:eltsLtIndex([I)Z
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
jtb.JavaParser:jj_3_21()Z
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:eq(DD)Z
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.OutputFormat:isJavaFamily()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBody;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.ModBitTracker:split(I)I
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ShiftExpression;)V
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeOptional;)V
daikon.PptName:getMethodName()Ljava.lang.String;
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:eltwiseLTE([I)Z
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
jtb.syntaxtree.ReturnStatement:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
jtb.JavaParser:jj_3_14()Z
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.Quant:eltwiseLT([I)Z
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
utilMDE.WeakHasherMap.EntrySet:size()I
jtb.visitor.FormatCommand:getCommand()I
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.visitor.TreeFormatter:processList(Ljtb.syntaxtree.NodeListInterface;)V
jtb.JavaParser:jj_3_4()Z
utilMDE.Intern:intern([I)[I
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:ungenerify(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
jtb.JavaParser:jj_3_36()Z
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I | CONDITION | 19149 | if (x) -> if (!x)
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.Statement:accept(Ljtb.visitor.Visitor;)V
daikon.diff.Node:Node()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
utilMDE.MathMDE:gcd_differences([I)I
jtb.syntaxtree.TypeDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.PptSlice2:arity()I
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.syntaxtree.ConditionalAndExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;)V
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfo:new_ppt()V
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.Quant:eq(FF)Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
jtb.JavaParser:jj_3_18()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.RelationalExpression;)V
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.PptSlice1:num_samples()I
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
utilMDE.UtilMDE:split(Ljava.lang.String;Ljava.lang.String;)[Ljava.lang.String;
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_56()Z
jtb.JavaParser:jj_3R_104()Z
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | ASSIGN | 3479 | = null
daikon.Quant:eltsGteIndex([I)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.tools.jtb.Ast:getPackage(Ljtb.syntaxtree.CompilationUnit;)Ljava.lang.String;
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;)Z
jtb.JavaParser:jj_2_14(I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Name;)V
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
1222 2 1104 2 309 2 1146 2 943 2 383 2 73 2 996 2 
669 15 250 15 1334 6 212 4 287 32 390 53 1136 3 233 4 1119 4 785 2 1266 2 122 15 560 8 1178 4 237 4 88 2 899 15 659 5 1366 19 883 6 198 2 616 32 27 22 791 4 244 4 1153 6 1303 4 663 47 708 4 757 6 1108 2 798 2 116 32 136 6 459 4 1065 6 260 2 409 6 1382 4 
321 2 1331 2 383 2 
739 2 908 2 232 2 1161 2 611 2 10 2 1232 2 202 10 859 2 271 22 530 2 680 2 1364 2 1142 2 
669 2 250 2 608 2 287 2 390 6 122 2 216 2 899 2 787 2 1295 2 1366 2 1166 2 355 2 197 2 616 2 27 2 1330 2 1303 2 663 4 798 2 1110 2 116 2 409 4 
1334 6 250 4 669 4 836 2 287 8 616 8 27 4 390 16 233 4 960 2 122 4 796 2 708 4 663 12 757 6 116 8 899 4 
646 2 965 4 475 2 1069 2 266 4 851 4 190 2 507 10 1036 10 312 14 479 2 416 4 1317 4 537 4 512 2 596 2 483 4 856 2 289 62 85 2 857 2 236 4 514 2 811 4 955 2 146 2 321 2 1146 4 1126 4 383 8 156 2 1152 4 1353 4 1006 2 1331 6 643 2 135 2 1031 2 208 2 887 2 
589 2 510 2 1341 2 978 2 898 2 1080 2 904 2 790 2 1060 2 55 2 
261 4 0 4 322 6 750 2 1119 2 120 2 853 2 125 6 1250 6 843 6 237 2 531 2 1220 2 
250 10 669 10 15 2 287 16 390 30 1119 6 714 2 122 10 237 6 721 8 899 10 723 2 1366 8 616 16 27 12 1203 2 244 6 867 4 94 2 157 8 796 4 1303 6 663 26 798 4 989 4 116 16 136 8 260 2 409 10 1066 2 
1260 6 1290 4 
790 2 
636 2 363 2 562 2 1214 2 385 2 237 2 36 2 1201 4 1119 2 
99 2 591 2 893 2 506 6 164 2 414 6 754 2 314 2 760 2 799 6 745 2 
914 2 1119 2 
763 2 764 2 1119 4 
686 2 
668 2 504 19 852 1 411 5 2 3 1119 32 592 2 415 2 1037 2 513 2 598 2 1294 2 421 1 169 2 170 1 772 1 682 2 603 2 862 1 257 2 177 2 779 25 1044 2 869 2 1205 2 1304 2 1206 2 688 1 433 2 529 1 435 2 12 2 1133 3 607 1 1212 2 191 1 1313 1 348 1 269 2 102 6 877 2 1053 2 1320 2 1057 14 446 1 353 2 1326 2 1227 14 200 4 618 14 1235 2 206 2 1062 3 1063 2 711 6 552 2 1158 2 1075 2 1335 2 370 2 557 3 1338 19 629 2 559 2 371 2 1342 1 631 2 813 4 634 1 128 2 1346 2 219 2 911 2 224 2 385 2 473 2 54 3 824 2 386 2 734 1 915 2 225 2 305 4 1012 2 1013 28 57 2 736 6 920 3 60 1 1262 2 62 14 311 2 392 4 922 2 1360 3 1017 1 66 2 237 30 1018 2 929 2 149 3 1182 6 488 2 398 2 1183 3 324 2 749 2 492 2 1372 2 493 4 1027 2 1376 2 1279 2 1028 1 246 2 947 2 247 2 499 2 
1034 2 672 2 335 2 675 2 3 6 336 6 678 8 6 2 338 4 679 14 1041 140 8 2 1043 28 684 82 683 2 685 12 344 2 1045 2 11 4 345 6 689 2 13 328 691 6 1049 2 16 32 693 4 1051 2 694 4 695 2 22 2 23 6 24 6 25 30 26 244 351 6 1055 4 1054 54 1056 50 699 2 700 14 1059 60 704 2 28 26 356 198 358 28 706 2 29 6 1061 6 31 2 709 2 359 4 710 2 1064 6 360 68 33 2 361 432 1067 2 1068 2 364 2 365 26 1070 2 1073 2 366 386 713 64 1076 10 1077 46 369 6 40 192 715 52 716 2 717 2 41 2 720 2 43 20 44 2 372 432 722 6 47 2 48 8 374 6 1081 4 50 20 1083 132 380 198 51 8 381 8 1085 2 725 4 52 12 1086 8 727 6 384 8 729 6 730 4 731 2 732 2 1088 2 56 2 1089 6 1090 2 735 2 737 48 1092 6 1094 24 61 2 391 228 393 4 1097 2 65 2 395 4 67 4 1100 112 69 2 743 2 1102 106 1101 4 746 26 400 2 1103 20 748 2 401 6 1105 4 1106 4 403 160 402 244 74 26 405 20 759 92 406 224 408 2 1111 4 761 2 78 2 77 2 1113 4 80 10 1115 2 762 12 1119 10 1118 2 84 328 418 4 87 2 767 2 420 2 769 2 771 204 423 4 1121 4 1122 2 89 26 773 2 774 4 1123 4 775 2 426 6 425 4 1124 2 1125 6 430 2 780 6 781 14 431 4 432 4 1130 2 783 2 98 4 436 2 784 30 440 336 441 2 1139 2 442 2 443 182 105 106 444 8 445 2 786 2 1140 2 1141 14 788 6 108 24 1148 2 450 2 111 2 451 6 794 26 453 4 797 6 1154 2 1155 2 114 2 457 2 1156 2 460 70 800 2 801 2 802 4 803 30 804 30 462 4 1159 4 1160 4 805 74 464 2 121 2 124 2 126 4 466 2 465 86 1162 6 1163 6 810 4 1164 6 1165 6 814 198 815 28 816 2 127 30 130 6 468 8 132 2 469 16 1169 6 133 2 819 6 820 4 472 2 823 2 822 4 134 2 825 2 826 4 138 6 1174 2 476 60 828 198 831 6 480 2 1176 4 142 2 482 4 1179 6 144 2 834 2 485 2 148 30 150 2 835 2 838 6 839 2 489 8 490 4 154 20 497 2 844 4 1188 2 158 2 846 8 847 2 1191 6 848 2 160 2 503 4 1193 6 163 6 165 2 1194 192 511 10 854 4 855 2 1196 2 167 4 516 8 861 2 863 6 174 8 1199 6 524 2 866 6 178 10 179 4 527 2 528 66 181 6 180 2 182 4 870 198 872 60 1208 30 184 6 1209 2 186 4 533 2 1210 10 187 2 534 4 189 2 875 20 876 2 194 6 1216 2 1217 14 879 16 195 2 881 2 882 26 196 6 1226 20 199 4 1228 8 1231 2 201 376 1234 2 547 22 203 46 205 12 1236 4 1237 2 207 2 1240 6 888 18 890 198 892 4 553 6 211 84 895 2 1241 6 556 4 554 2 1242 2 558 22 561 2 1243 8 564 2 1245 6 897 2 217 4 900 2 901 112 903 6 1247 4 218 94 907 4 221 2 570 2 909 12 1249 4 572 12 1251 64 1252 2 1253 2 916 30 574 2 918 98 919 4 226 6 227 6 1259 2 230 132 228 14 231 14 576 4 234 4 925 2 577 30 928 2 237 10 1268 6 580 2 239 2 931 2 932 290 582 2 1275 6 583 4 1280 204 1281 2 585 2 940 2 941 12 1282 2 588 20 942 6 944 2 948 4 248 2 1286 6 249 2 950 28 252 2 1289 60 253 6 1291 112 951 2 254 46 594 2 953 30 954 26 597 6 1296 4 599 2 958 2 1297 2 959 12 258 8 1301 8 1302 2 961 198 1305 18 605 2 1307 2 963 2 1309 12 262 26 264 2 265 12 968 2 970 2 972 4 1314 6 1316 2 974 2 267 28 268 12 1318 4 976 112 977 30 1322 6 270 182 1323 2 1324 6 272 2 981 2 273 46 983 2 984 8 985 2 276 2 620 2 279 6 284 16 625 88 626 4 285 6 288 566 290 2 630 2 1343 18 633 244 998 22 635 16 999 6 297 6 1000 8 1001 2 637 2 638 4 298 2 1349 2 1003 2 1004 4 300 2 302 4 1008 118 1355 2 1356 6 303 6 304 26 644 2 1011 2 645 26 306 22 307 2 1357 2 1358 4 650 4 649 2 651 2 310 2 654 6 1016 2 656 198 658 4 1363 10 1367 4 1368 2 1373 4 328 2 1376 2 1025 2 662 2 664 2 1030 48 331 4 665 4 1379 46 1380 12 666 4 
1082 2 648 2 210 2 724 2 1264 4 19 2 1024 2 1151 2 478 2 1329 2 1138 1 1195 2 719 4 5 2 962 2 271 6 34 2 542 2 35 2 
1135 2 1189 2 
1135 2 96 2 1207 2 
652 2 1207 2 
327 2 1375 2 
613 2 72 2 991 2 383 2 1207 2 91 2 867 2 
151 2 1207 2 91 2 
1207 2 91 2 7 2 
1135 2 327 2 18 2 
1207 2 91 2 
327 2 540 2 
829 2 1207 2 
1135 2 238 2 327 2 
1135 2 17 2 486 2 
1204 2 1135 2 500 2 
987 2 1135 2 1254 2 
902 2 906 2 1135 2 
404 2 327 2 
538 2 1207 2 
1293 2 486 2 
1204 2 1283 2 
1254 2 681 2 
902 2 677 2 
624 2 327 2 
902 2 1371 2 
1029 2 1254 2 
1204 2 878 2 
486 2 1255 2 
1135 2 238 2 327 2 434 2 
642 2 1135 2 238 2 327 2 434 2 
1135 2 327 2 1150 2 
438 2 1135 2 327 2 
905 2 590 2 347 2 792 2 
949 2 502 2 72 2 383 2 
949 2 502 2 740 2 72 2 991 2 383 2 
117 2 72 2 383 2 1207 2 91 2 867 2 
376 2 593 2 
72 2 640 2 383 2 867 2 
320 2 1254 2 
902 2 508 2 
119 2 486 2 
1204 2 275 2 
1204 2 902 2 410 2 
1204 2 902 2 93 2 
1204 2 59 2 902 2 
1204 2 902 2 1039 2 
1288 6 389 2 72 2 1149 2 383 2 1328 2 1128 6 1284 2 
915 2 
501 2 1 2 1119 26 1037 2 1038 2 682 2 603 2 257 2 779 4 1044 2 1205 2 688 4 12 2 1131 2 964 2 185 2 607 2 14 2 1212 6 102 2 1053 2 1224 2 1325 2 1326 2 1227 6 200 4 452 2 115 2 886 4 711 2 551 2 461 2 1158 2 627 2 1075 2 39 4 718 4 371 2 631 2 813 4 1079 2 128 8 379 2 1084 2 726 2 1170 2 912 2 224 2 385 2 734 2 225 2 305 4 1013 6 387 2 57 2 736 4 1262 2 311 2 922 2 392 4 1267 2 237 26 579 2 317 2 930 2 744 2 1182 6 488 2 398 2 749 2 1376 2 1279 2 939 2 246 2 586 2 247 8 
501 2 1 2 1119 26 1037 2 1038 2 682 2 603 2 257 2 779 4 1044 2 1205 2 688 2 12 2 1131 2 964 2 185 2 607 2 14 2 1212 6 102 2 1053 2 541 2 353 2 1224 2 1325 2 1326 2 1227 6 200 4 452 2 115 2 886 4 711 2 551 2 461 2 1158 2 627 2 1075 2 39 4 809 2 718 4 371 2 631 2 813 4 128 8 379 2 1084 2 1170 2 912 2 224 2 385 2 734 2 225 2 305 4 1013 6 57 2 736 6 1262 2 311 2 922 2 392 4 1267 2 237 26 1018 2 579 2 317 2 930 2 744 2 1182 6 488 2 398 2 319 2 749 2 1376 2 1279 2 939 2 246 2 586 2 247 8 76 2 
521 2 
1087 2 332 2 
889 2 894 2 367 2 506 6 1075 2 164 4 1119 12 414 6 676 4 4 4 956 2 813 2 173 2 90 4 175 2 604 2 865 4 428 8 913 4 92 8 224 2 95 2 1205 2 474 2 573 2 12 2 1257 2 873 2 1258 2 100 2 1262 2 1211 2 477 2 140 2 1315 4 923 2 392 2 973 2 104 2 484 2 1053 2 237 6 979 2 745 4 1182 4 701 2 837 2 1022 2 543 10 1276 2 1327 2 617 2 1376 2 754 2 587 2 549 2 945 2 760 2 799 6 362 2 
889 2 894 2 367 2 506 8 1075 2 164 4 1119 12 414 8 676 4 4 4 813 2 956 2 173 2 90 4 175 2 604 2 865 4 428 8 92 8 913 4 224 2 95 2 1205 2 474 2 12 2 1257 2 873 2 1258 2 100 2 1262 2 1211 2 477 2 140 2 392 2 923 2 1315 4 63 2 973 2 314 2 104 2 484 2 1053 2 237 6 979 2 880 4 745 4 1182 4 701 2 837 2 1022 2 543 10 1276 2 1327 2 617 2 1376 2 754 2 278 2 587 2 549 2 945 2 760 2 799 6 
837 2 604 2 1276 2 100 2 367 2 477 2 164 2 140 2 1315 4 414 2 913 4 676 2 474 2 587 2 945 2 979 2 745 2 799 2 
889 2 894 2 367 2 506 6 1075 2 164 4 1119 12 414 6 676 4 4 4 956 2 813 2 173 2 90 4 175 2 604 2 865 4 428 4 913 4 92 4 224 2 95 2 1205 2 474 2 573 2 12 2 1257 2 873 2 1258 2 100 2 1262 2 1211 2 477 2 140 2 1315 4 923 2 392 2 973 2 314 2 104 2 484 2 1053 2 237 6 979 2 745 4 1182 4 701 2 837 2 1022 2 543 6 1276 2 1327 2 617 2 1376 2 754 2 587 2 549 2 945 2 799 4 362 2 
889 2 894 2 367 2 506 6 1075 2 164 4 1119 12 414 4 676 4 4 4 956 2 813 2 173 2 90 4 175 2 604 2 865 4 428 4 913 4 92 4 224 2 95 2 1205 2 474 2 573 2 12 2 1257 2 873 2 1258 2 99 2 100 2 1262 2 1211 2 477 2 140 2 1315 4 923 2 392 2 973 2 104 2 484 2 1053 2 237 6 979 2 745 4 1182 4 701 2 837 2 1022 2 543 6 1276 2 1327 2 617 2 1376 2 754 2 587 2 549 2 945 2 799 6 362 2 
889 2 894 2 367 2 506 6 1075 2 164 4 1119 12 414 6 676 4 4 4 956 2 813 2 173 2 90 4 175 2 604 2 865 4 428 4 913 4 92 8 224 2 95 2 1205 2 474 2 573 2 12 2 1257 2 873 2 1258 2 100 2 1262 2 1211 2 477 2 140 2 1315 4 923 2 392 2 973 2 104 2 484 2 1053 2 237 6 979 2 745 4 1182 4 701 2 837 2 1022 2 543 6 1276 2 1327 2 617 2 1376 2 754 2 587 2 549 2 945 2 760 2 799 6 362 2 
889 2 894 2 367 2 506 8 1075 2 164 4 1119 12 414 6 676 4 4 4 956 2 813 2 173 2 90 4 175 2 604 2 865 4 428 8 913 4 92 8 224 2 95 2 1205 2 474 2 573 2 12 2 1257 2 873 2 1258 2 99 2 100 2 1262 2 1211 2 477 2 140 2 392 2 1315 4 923 2 973 2 104 2 484 2 1053 2 237 6 979 2 745 4 1182 4 701 2 837 2 1022 2 543 10 1276 2 1327 2 617 2 1376 2 754 2 587 2 549 2 945 2 760 2 799 8 362 2 
889 2 894 2 367 2 506 6 1075 2 164 4 1119 12 414 6 676 4 4 4 956 2 813 2 173 2 90 4 175 2 604 2 865 4 428 8 913 4 92 8 224 2 95 2 1205 2 474 2 573 2 12 2 1257 2 873 2 1258 2 100 2 1262 2 1211 2 477 2 140 2 1315 4 923 2 392 2 973 2 104 2 484 2 1053 2 237 6 979 2 745 4 1182 4 701 2 837 2 1022 2 543 10 1276 2 1327 2 617 2 1376 2 754 2 587 2 549 2 945 2 760 2 799 6 362 2 
506 12 505 2 164 4 1037 2 676 4 4 6 858 6 515 2 682 2 173 2 864 2 523 2 1197 2 175 2 865 8 9 2 1044 2 686 6 868 6 1205 2 688 1 12 2 873 2 1212 6 1211 4 536 2 21 2 1053 2 352 4 353 2 701 2 1227 6 543 2 200 4 546 7 549 2 711 2 889 2 551 4 894 2 213 1 367 2 1075 2 214 2 39 4 371 2 375 1 1246 2 913 4 224 2 385 2 573 2 914 6 225 2 57 2 388 2 736 6 1257 2 575 6 1258 2 1262 2 392 4 922 2 923 2 1099 6 235 2 237 24 579 2 581 6 744 2 397 1 745 4 398 12 242 6 243 2 749 2 1276 2 71 2 754 4 1278 1 1279 2 584 2 1107 6 587 2 246 2 586 2 945 2 247 4 763 6 1119 46 414 4 81 1 82 6 768 6 956 2 603 2 256 1 90 4 257 2 604 2 1127 2 1299 2 427 4 779 2 92 2 95 2 782 1 1308 2 964 2 606 7 99 4 971 2 100 2 1315 4 973 2 612 2 102 2 103 6 104 2 1321 2 979 2 789 2 1326 2 1147 2 1327 4 617 2 990 6 799 8 461 2 1158 2 993 1 1336 8 813 4 631 2 467 1 292 10 128 4 131 2 474 2 1009 2 305 4 1013 8 827 6 139 2 477 2 1359 6 653 2 311 2 140 2 1015 2 484 2 1018 2 1182 6 1365 2 488 2 660 2 837 2 1022 2 1023 2 1376 2 494 2 
763 6 505 2 506 12 164 4 1119 48 414 8 1037 2 82 6 676 4 4 6 768 6 858 6 515 2 956 2 682 2 603 2 173 2 90 4 257 2 864 2 175 2 1197 2 523 2 604 2 1127 2 865 8 1299 2 9 2 427 4 779 2 1044 2 686 6 92 6 868 6 95 2 1205 2 687 2 1308 2 12 2 964 2 873 2 100 2 971 2 1211 4 1212 6 536 2 1315 4 973 2 612 2 102 2 103 6 21 2 104 2 1053 2 1321 2 979 2 352 4 353 2 789 2 701 2 1326 2 543 2 1227 6 1147 2 1327 4 617 2 200 4 990 6 549 2 711 2 799 8 889 2 551 4 461 2 1158 2 894 2 367 2 1075 2 1336 8 39 4 214 2 718 2 371 4 631 4 813 4 566 2 1246 2 292 10 128 8 131 2 913 4 224 2 385 2 474 2 573 2 914 6 1009 2 225 2 305 4 1013 8 388 2 827 6 57 2 736 6 1257 2 575 6 1258 2 139 2 1262 2 477 2 653 2 1359 6 311 2 140 2 923 2 922 2 392 4 1015 2 1099 6 235 2 484 2 237 26 1018 2 579 2 581 6 744 2 1365 2 745 4 1182 6 660 2 398 12 488 4 242 6 837 2 243 2 1022 2 1276 2 749 2 71 2 1023 2 494 2 1376 2 754 4 1279 2 1107 6 584 2 586 2 246 2 587 2 945 2 247 8 760 4 
763 6 505 2 506 12 164 4 1119 48 414 8 1037 2 82 6 676 4 4 6 768 6 858 6 515 2 956 2 682 2 603 2 173 2 90 4 257 2 864 2 175 2 1197 2 523 2 604 2 1127 2 865 8 1299 2 9 2 427 4 779 2 1044 2 428 4 686 6 92 6 868 6 95 2 1205 2 687 2 1308 2 12 2 964 2 873 2 100 2 971 2 1211 4 1212 6 536 2 1315 4 973 2 612 2 102 2 103 6 21 2 104 2 1053 2 1321 2 979 2 352 4 353 2 789 2 701 2 1326 2 1227 6 543 6 1147 2 1327 4 617 2 200 4 990 6 549 2 711 2 799 8 889 2 551 4 461 2 1158 2 894 2 367 2 1075 2 1336 8 39 4 214 2 718 2 371 4 631 4 813 4 566 2 1246 2 292 10 128 8 131 2 913 4 224 2 385 2 474 2 573 2 914 6 1009 2 225 2 305 4 1013 8 388 2 827 6 57 2 736 6 1257 2 575 6 1258 2 139 2 1262 2 477 2 653 2 1359 6 311 2 140 2 923 2 922 2 392 4 1015 2 1099 6 235 2 484 2 237 26 1018 2 579 2 581 6 744 2 1365 2 745 4 1182 6 660 2 398 12 488 4 242 6 837 2 243 2 1022 2 1276 2 749 2 71 2 1023 2 494 2 1376 2 754 4 1279 2 1107 6 584 2 586 2 587 2 246 2 945 2 247 8 760 4 
850 6 506 16 505 2 164 4 1037 2 676 4 4 6 858 6 515 2 337 6 682 2 519 6 173 2 864 2 175 2 1197 2 523 2 865 8 9 2 1044 2 686 12 868 6 1205 2 526 6 687 2 12 2 873 2 1212 8 1211 4 536 2 21 2 1053 2 352 4 353 2 701 2 543 6 1227 8 200 4 1233 2 549 2 711 4 889 2 551 4 894 2 367 2 1075 2 214 2 39 6 718 2 371 4 566 2 1246 2 569 6 913 4 224 2 385 2 573 2 914 12 225 2 57 2 388 2 736 6 1257 2 575 6 1258 2 1262 2 392 4 922 2 923 2 1265 2 1099 6 235 2 237 24 579 2 581 6 744 2 745 4 398 10 242 12 749 2 1276 2 71 2 754 4 1279 2 756 2 584 2 1107 6 246 2 587 2 586 2 945 2 247 8 760 4 763 12 1119 52 414 10 82 6 1292 2 86 6 768 6 956 2 603 2 90 4 257 2 604 2 1127 2 1299 2 427 4 779 4 428 4 92 6 95 2 1308 2 964 2 99 2 1310 6 971 2 100 2 1315 4 973 2 612 2 102 4 103 6 104 2 1321 2 979 2 789 2 1326 2 615 2 1147 2 1327 4 617 2 990 6 799 10 461 2 1158 2 1336 8 813 4 631 4 292 8 128 8 131 2 1005 6 474 2 1009 2 305 4 137 6 1013 12 827 12 830 2 139 2 477 2 1359 12 653 2 311 2 140 2 1015 2 314 2 657 2 484 2 1018 2 1365 2 1182 6 488 4 660 2 837 2 1370 2 1022 2 1023 2 1376 2 494 2 
889 2 1257 2 1258 2 894 2 100 2 367 2 506 4 164 4 923 2 1315 2 1119 4 414 6 973 2 4 2 104 2 956 2 979 2 745 4 701 2 90 2 837 2 543 4 1022 2 604 2 865 2 428 4 754 2 92 6 913 2 95 2 573 2 587 2 945 2 760 2 799 6 
506 4 164 4 1119 28 414 6 1037 2 4 2 956 2 169 2 682 2 603 2 90 2 257 2 604 2 865 2 779 3 1044 2 92 6 95 2 1205 2 12 2 964 2 1132 3 100 2 1212 6 1315 2 973 2 102 3 104 2 1053 2 979 2 353 2 447 2 701 2 1326 2 1227 6 543 2 617 2 200 4 711 3 799 6 889 2 551 2 1158 2 894 2 367 2 463 2 1075 2 1335 2 39 4 808 2 370 2 813 4 292 2 913 2 224 2 385 2 573 2 915 2 225 2 305 4 1013 8 57 2 736 6 1257 2 1258 2 1262 2 311 2 392 4 922 2 923 2 927 2 237 24 1018 2 744 2 745 4 1182 6 398 4 1272 2 837 2 243 2 1022 2 749 2 1376 2 754 2 1279 2 587 2 246 2 945 2 760 2 
701 2 1258 2 555 2 
701 2 1258 2 555 2 
671 2 506 16 164 4 1119 24 414 12 1037 2 952 2 676 4 4 4 168 2 518 2 957 2 682 2 603 2 173 2 90 2 257 2 175 2 865 4 427 2 779 2 1044 2 428 4 92 6 95 2 1205 2 688 2 1308 2 12 2 964 2 99 4 1211 2 1212 2 1315 2 1053 2 979 4 352 2 353 2 701 6 1326 2 1227 2 543 6 1327 4 200 4 204 2 549 2 799 12 889 2 551 6 891 2 461 4 1158 2 367 2 806 2 1075 2 555 2 371 4 631 4 813 4 292 2 128 4 1347 4 223 2 818 2 1170 4 913 2 224 2 385 2 1352 2 305 4 1013 2 57 2 736 6 1258 4 1262 2 1263 2 477 2 311 2 922 2 392 4 1015 2 314 4 315 2 237 16 1018 2 744 2 1182 6 745 4 488 4 398 4 1273 4 491 2 1276 2 749 2 1023 2 1376 2 754 4 1279 2 938 2 1186 2 1107 2 246 2 587 2 247 4 760 4 1381 2 
398 2 292 2 377 2 692 2 71 2 806 2 536 2 427 2 1119 4 224 2 548 2 1107 2 1087 2 237 2 474 2 204 2 168 2 
671 2 506 16 164 4 1119 24 414 12 1037 2 952 2 676 4 4 4 168 2 518 2 957 2 682 2 603 2 173 2 90 2 257 2 175 2 865 4 779 4 1044 2 428 4 92 6 95 2 1205 2 1308 2 12 2 964 2 99 4 1211 4 1212 2 1315 2 1053 2 979 4 352 2 353 2 701 6 1326 2 1227 2 543 6 1327 4 200 4 1332 2 204 2 549 2 799 12 889 2 623 2 551 6 891 4 461 4 1158 2 367 2 806 2 1075 2 555 2 371 4 631 4 813 4 128 4 220 2 1347 4 223 2 818 2 1170 4 913 2 224 2 385 2 1352 2 305 4 1013 2 57 2 736 6 1258 4 1262 2 477 2 229 2 311 2 922 2 392 4 1015 2 314 4 484 2 237 16 1018 2 1181 2 744 2 1182 6 745 4 488 4 398 2 1273 4 1276 2 749 2 1023 2 1376 2 754 4 1279 2 1186 2 1107 2 246 2 587 2 247 4 760 4 1381 2 
671 2 506 16 164 4 1119 24 414 12 1037 2 952 2 676 4 4 4 168 2 518 2 957 2 682 2 603 2 173 2 90 2 257 2 341 2 175 2 865 4 427 2 779 2 1044 2 428 4 92 6 95 2 1205 2 688 1 1308 2 12 2 964 2 99 4 1211 4 1212 2 1312 2 1315 2 1053 2 979 4 352 2 353 2 701 6 1326 2 1227 2 543 6 1327 4 200 4 204 2 549 2 799 12 889 2 551 6 891 2 461 4 1158 2 367 2 806 2 1075 2 555 2 371 4 631 4 813 4 292 2 128 4 1347 4 223 2 818 2 1170 4 913 2 224 2 385 2 1352 2 305 4 1013 2 57 2 736 6 1258 4 1262 2 477 2 311 2 922 2 392 4 1015 2 314 4 484 2 237 16 1018 2 744 2 1182 6 745 4 488 4 398 4 1273 4 1276 2 749 2 326 2 840 2 1023 2 1376 2 841 2 754 4 1279 2 1186 2 1107 2 246 2 587 2 247 4 760 4 1381 2 
669 4 1192 14 333 2 334 4 1 2 162 2 851 2 505 2 673 2 166 2 1037 4 860 4 682 2 520 2 1040 2 1198 10 176 2 1202 2 9 4 525 2 342 10 1044 2 1205 2 1046 2 1048 12 12 2 183 2 532 2 185 2 188 2 346 24 535 2 1212 14 874 4 20 1 1050 2 1213 1 192 2 537 2 193 2 349 2 1053 2 698 2 539 2 1218 2 1057 4 353 5 1219 10 354 3 1225 4 703 2 1227 14 544 2 27 6 705 2 357 2 200 10 545 1 1230 2 1229 2 1233 2 1238 2 711 16 550 2 551 2 1071 6 1072 2 1074 2 1075 2 368 2 39 12 214 2 896 3 42 2 563 2 45 10 46 2 899 4 565 2 49 2 568 6 222 2 382 2 910 2 912 2 571 14 728 2 224 2 385 4 734 2 225 2 917 2 1091 2 57 4 736 17 1256 2 921 2 1262 2 390 16 62 4 233 4 922 4 392 4 1265 2 924 2 1096 2 64 2 926 6 235 2 741 4 927 2 1267 14 237 38 579 44 70 4 742 10 396 4 1270 4 930 2 398 2 1272 2 747 14 749 2 935 2 751 10 244 4 755 4 937 2 1279 2 245 1 756 2 584 2 1109 2 1108 4 758 2 246 2 586 18 75 2 247 22 1285 2 1112 10 79 2 250 4 1287 2 1116 2 1119 46 1120 2 419 2 602 1 603 2 776 10 257 2 1126 2 779 19 429 12 1306 14 1131 2 964 2 1132 2 1134 2 607 2 263 2 967 2 609 2 101 4 610 10 1137 2 785 2 102 19 975 2 1319 2 106 2 107 10 1326 2 982 2 1145 1 615 2 616 8 110 4 793 3 112 2 1152 2 454 4 988 2 455 2 113 3 1333 2 115 2 456 2 116 8 281 4 458 2 622 2 283 2 1334 6 1157 2 461 4 1158 4 118 2 463 2 287 8 994 2 1337 2 808 2 122 4 1339 12 813 4 632 2 1167 2 128 23 129 4 296 2 1168 2 639 2 1348 14 641 2 1350 2 470 2 471 2 821 4 1353 2 1172 3 1354 10 1009 2 305 8 136 6 1013 28 1014 2 647 4 830 2 311 2 833 4 481 2 657 2 316 1 1018 5 1180 2 147 2 317 2 1182 6 1366 4 660 2 1370 2 152 2 661 2 1377 2 1376 2 329 6 498 2 663 12 330 4 1190 2 159 2 
1157 2 308 2 1212 2 924 2 1119 2 39 2 102 2 237 2 419 2 579 6 107 2 354 2 1227 2 1198 2 935 2 705 2 357 2 779 2 1354 4 225 2 711 2 1013 2 550 2 1014 2 
1157 2 308 2 1212 2 924 2 1119 2 39 2 102 2 237 2 419 2 579 6 107 2 354 2 1227 2 1198 2 935 2 705 2 357 2 779 2 1354 4 225 2 711 2 1013 2 550 2 1014 2 
1157 2 308 2 1212 2 924 2 1119 2 39 2 102 2 237 2 419 2 579 6 107 2 354 2 1227 2 1198 2 935 2 705 2 357 2 779 2 1354 4 225 2 711 2 1013 2 550 2 1014 2 
669 2 250 2 251 2 287 2 390 4 37 3 62 2 874 2 924 2 413 2 1119 10 896 3 122 2 102 3 83 2 1215 2 237 4 899 2 171 4 1057 2 318 4 1248 4 616 2 1184 2 885 2 779 3 244 2 496 4 663 4 329 6 1187 4 113 3 733 2 225 2 116 2 136 4 1032 2 1239 2 871 2 1013 2 
250 2 669 2 251 2 287 2 37 2 1119 10 413 2 896 2 122 2 83 2 899 2 171 4 1248 4 779 2 733 2 225 2 136 4 1013 2 871 2 260 2 390 4 874 2 62 2 924 2 102 2 1215 2 237 4 1057 2 1366 2 318 4 616 2 27 2 1184 2 885 2 244 2 496 4 329 6 663 4 1187 4 113 2 116 2 1032 2 1239 2 
250 2 669 2 251 2 287 2 37 2 1119 10 413 2 896 2 122 2 83 2 899 2 171 4 1248 4 779 2 733 2 225 2 136 4 1013 2 871 2 260 2 390 4 874 2 62 2 924 2 102 2 1215 2 237 4 1057 2 1366 2 318 4 616 2 27 2 1184 2 885 2 244 2 496 4 329 6 663 4 1187 4 113 2 116 2 1032 2 1239 2 
250 2 669 2 251 2 287 2 37 2 1119 10 413 2 896 2 122 2 83 2 899 2 171 4 1248 4 779 2 733 2 225 2 136 4 1013 2 871 2 260 2 390 4 874 2 62 2 924 2 102 2 1215 2 237 4 1057 2 1366 2 318 4 616 2 27 2 1184 2 885 2 244 2 496 4 329 6 663 4 1187 4 113 2 116 2 1032 2 1239 2 
250 2 669 2 251 2 287 2 37 2 1119 10 413 2 896 2 122 2 83 2 899 2 171 4 1248 4 779 2 733 2 225 2 136 4 1013 2 871 2 260 4 390 4 874 2 62 2 924 2 102 2 1215 2 237 4 1057 2 1366 4 318 4 616 2 27 4 1184 2 885 2 244 2 496 4 329 6 663 4 1187 4 113 2 116 2 1032 2 1239 2 
765 2 277 2 118 2 1269 2 1117 2 509 2 
1129 2 495 2 777 2 1267 2 697 2 1269 2 422 2 
966 2 969 2 1119 10 479 1 313 2 237 8 1053 2 980 2 567 2 1271 2 378 1 522 2 702 2 340 2 778 2 323 2 109 2 1200 2 752 2 155 2 884 1 30 2 1010 1 1031 1 407 2 827 2 
532 2 1334 4 250 6 669 6 287 6 390 16 233 2 807 2 1361 2 1119 6 122 6 1177 2 560 2 237 6 899 6 659 4 1366 2 1042 2 616 6 27 5 1298 2 110 2 936 2 244 2 663 12 116 6 136 4 1046 2 260 2 1382 2 
449 1 1144 2 294 2 690 2 670 6 437 2 1261 2 934 2 1119 1 1351 2 986 4 1171 2 496 2 707 2 1187 2 237 1 845 2 171 2 
1144 2 294 4 690 4 670 6 437 2 1261 2 934 4 1351 2 986 4 1171 2 496 2 707 2 1187 2 845 2 171 2 
449 1 1144 6 294 8 690 8 670 10 437 8 1261 2 934 8 1119 1 1351 2 986 4 1171 2 496 2 707 2 1187 2 237 1 845 2 171 2 
294 2 690 2 670 2 1261 2 934 2 1351 2 986 2 1171 2 496 2 707 2 1187 2 845 2 171 2 
162 2 161 1 1119 20 1037 4 860 4 602 1 176 2 1306 2 1311 2 101 4 1050 2 20 1 1213 1 539 2 353 4 1145 2 544 2 200 8 1230 2 1238 2 286 2 992 2 1074 2 1337 2 368 2 123 1 812 2 128 4 129 4 1348 2 222 2 1007 2 305 6 57 4 736 14 647 4 921 2 1095 2 922 4 1098 2 237 20 1018 4 316 2 1369 2 661 2 937 2 245 1 1112 2 
209 2 712 2 161 2 849 2 1035 2 1114 2 992 2 994 4 995 2 38 2 628 2 412 4 1119 46 1037 2 417 2 595 2 1340 2 1078 2 1244 2 997 2 1344 2 770 2 373 2 424 2 600 2 601 2 1345 2 339 2 293 2 128 38 295 2 1300 2 817 2 343 2 1002 4 53 2 301 6 1173 4 259 2 1007 2 688 2 305 20 1047 2 57 2 736 42 97 2 1093 2 738 2 647 6 921 2 1311 2 610 6 922 2 1050 2 832 2 141 2 1098 2 1362 2 143 2 696 2 1052 2 350 4 237 44 145 2 316 4 68 2 240 2 487 2 1143 2 1223 2 448 2 1058 2 1019 4 1021 2 1274 2 1145 2 325 2 1277 4 753 2 274 2 1026 2 200 20 1185 2 795 2 937 2 842 2 619 2 280 2 282 2 667 2 
161 2 286 2 162 2 992 2 1074 2 995 2 412 2 1337 4 368 2 1119 26 1037 2 860 2 255 2 600 2 128 14 129 6 176 2 222 2 1300 2 1173 2 1007 2 305 8 57 2 58 2 736 20 647 6 738 2 921 2 1311 2 101 6 1095 2 1050 2 922 2 1098 2 439 4 237 26 578 2 1018 4 316 2 539 2 353 4 240 2 399 2 1221 4 1223 2 1019 2 933 2 1274 2 661 2 544 2 1374 4 200 10 1230 2 1185 2 937 2 795 2 32 2 1033 2 
161 2 992 2 412 6 1119 28 1037 2 674 2 766 2 291 2 812 2 1344 2 373 4 600 2 172 2 601 2 602 6 128 14 295 2 1348 2 1300 2 301 6 1173 6 1306 10 1007 2 259 4 688 2 305 14 1175 2 57 2 736 38 1093 4 647 8 921 2 1311 2 20 2 1050 2 922 2 1213 2 1098 2 655 4 143 4 237 26 1018 10 316 2 68 2 353 10 614 4 487 2 448 2 1223 2 1019 6 1369 2 241 2 1021 4 153 2 200 14 937 2 795 2 245 2 621 2 280 2 1112 10 667 4 
394 2 
299 1 1378 1 1020 1 215 1 946 1 517 1 
299 1 1378 1 1020 1 215 1 946 1 517 1 
299 1 1378 1 1020 1 215 1 946 1 517 1 
299 1 1378 1 1020 1 215 1 946 1 517 1 
299 1 1378 1 1020 1 215 1 946 1 517 1 
299 1 1378 1 1020 1 215 1 946 1 517 1 
299 1 1378 1 1020 1 215 1 946 1 517 1 
299 1 1378 1 1020 1 215 1 946 1 517 1 
299 1 1378 1 1020 1 215 1 946 1 517 1 
299 1 1378 1 1020 1 215 1 946 1 517 1 
299 1 1378 1 1020 1 215 1 946 1 517 1 
299 1 1378 1 1020 1 215 1 946 1 517 1 
299 1 1378 1 1020 1 215 1 946 1 517 1 
299 1 1378 1 1020 1 215 1 946 1 517 1 
299 1 1378 1 1020 1 215 1 946 1 517 1 
299 1 1378 1 1020 1 215 1 946 1 517 1 
299 1 1378 1 1020 1 215 1 946 1 517 1 
299 1 1378 1 1020 1 215 1 946 1 517 1 
299 1 1378 1 1020 1 215 1 946 1 517 1 
299 1 1378 1 1020 1 215 1 946 1 517 1 
299 1 1378 1 1020 1 215 1 946 1 517 1 
299 1 1378 1 1020 1 215 1 946 1 517 1 
299 1 1378 1 1020 1 215 1 946 1 517 1 
299 1 1378 1 1020 1 215 1 946 1 517 1 
299 1 1378 1 1020 1 215 1 946 1 517 1 
299 1 1378 1 1020 1 215 1 946 1 517 1 
299 1 1378 1 1020 1 215 1 946 1 517 1 
299 1 1378 1 1020 1 215 1 946 1 517 1 
299 1 1378 1 1020 1 215 1 946 1 517 1 
299 1 1378 1 1020 1 215 1 946 1 517 1 
299 1 1378 1 1020 1 215 1 946 1 517 1 
299 1 1378 1 1020 1 215 1 946 1 517 1 
299 1 1378 1 1020 1 215 1 946 1 517 1 
299 1 1378 1 1020 1 215 1 946 1 517 1 
299 1 1378 1 1020 1 215 1 946 1 517 1 
299 1 1378 1 1020 1 215 1 946 1 517 1 
299 1 1378 1 1020 1 215 1 946 1 517 1 
299 1 1378 1 1020 1 215 1 946 1 517 1 
299 1 1378 1 1020 1 215 1 946 1 517 1 
299 1 1378 1 1020 1 215 1 946 1 517 1 
299 1 1378 1 1020 1 215 1 946 1 517 1 
299 1 1378 1 1020 1 215 1 946 1 517 1 
299 1 1378 1 1020 1 215 1 946 1 517 1 
299 1 1378 1 1020 1 215 1 946 1 517 1 

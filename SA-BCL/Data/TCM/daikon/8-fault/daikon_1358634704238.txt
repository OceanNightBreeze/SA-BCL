#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.ArrayIndexOutOfBoundsException 
daikon.test.TestAst:test_Ast_Ppt_Match()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V ERROR java.lang.NullPointerException 1065 
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V ERROR java.lang.NullPointerException (413,1111) (413,1111) 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V ERROR java.lang.ArrayIndexOutOfBoundsException 1020 1020 988 988 
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V ERROR java.lang.ArrayIndexOutOfBoundsException 102 102 373 373 
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V FAILED junit.framework.AssertionFailedError 
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V ERROR java.lang.ArrayIndexOutOfBoundsException 1176 (1133,1259) (642,1210) (642,1210) 
daikon.test.diff.DiffTester:testInvs1Invs1()V ERROR java.lang.ArrayIndexOutOfBoundsException 1176 (1133,1259) (642,1210) (642,1210) 
daikon.test.diff.DiffTester:testInvs1Invs2()V ERROR java.lang.ArrayIndexOutOfBoundsException 1176 (1133,1259) (642,1210) (642,1210) 
daikon.test.diff.DiffTester:testInvs1Invs3()V ERROR java.lang.ArrayIndexOutOfBoundsException 1176 (1133,1259) (642,1210) (642,1210) 
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.ArrayIndexOutOfBoundsException 1176 (1133,1259) 
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.ArrayIndexOutOfBoundsException 1176 (1133,1259) (1133,1259) 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.ArrayIndexOutOfBoundsException 1176 (1133,1259) 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.Error 242 1267 909 422 1117 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V ERROR java.lang.Error 242 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_0()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_1()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_2()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_3()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_4()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_5()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_6()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_7()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_8()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_9()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_10()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_11()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_12()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_13()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_14()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_15()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_16()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_17()V PASSED
daikon.test.split.SplitterFactoryTest:testmisc_Fib_main_18()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_19()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_20()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_21()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_22()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_23()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_24()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_25()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_26()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_27()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_28()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_29()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_30()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_31()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_32()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__33()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__34()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__35()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__36()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__37()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__38()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__39()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__40()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__41()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__42()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__43()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
utilMDE.MathMDE:modulus([I)[I
jtb.JavaParser:jj_3_27()Z
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Expression;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
utilMDE.MathMDE:mod_positive(JJ)J
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.Quant:pairwiseEqual([I[I)Z
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:jj_3_16()Z
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:eq(DD)Z
daikon.test.TestAst:checkMatch(Ljava.lang.String;Ljtb.syntaxtree.MethodDeclaration;Ldaikon.tools.jtb.PptNameMatcher;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.EqualityExpression;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeSequence;)V
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;Z)Z
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.syntaxtree.TypeArguments:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.Quant:eq(II)Z
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameters;)V
utilMDE.ArraysMDE:sum([I)I
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_119()Z
daikon.inv.OutputFormat:isJavaFamily()Z
jtb.JavaParser:jj_3_18()Z
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpression;)V
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_169()Z
jtb.JavaParser:jj_2_14(I)Z
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_123()Z
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
utilMDE.MathMDE:negate(I)I
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.inv.Invariant:logOn()Z
jtb.JavaParser:jj_3_14()Z
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
jtb.syntaxtree.ImportDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.ProglangType:baseIsScalar()Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
jtb.syntaxtree.ClassOrInterfaceType:accept(Ljtb.visitor.Visitor;)V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;)V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant:prob_is_ge(DD)D
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
utilMDE.ArraysMDE:concat([I[I)[I
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.ProglangType:baseIsIntegral()Z
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InstanceOfExpression;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:ungenerify(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:sign(I)I
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaCharStream:ReadByte()C
utilMDE.FuzzyFloat:eq(DD)Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.DetailedStatisticsVisitor:freq(II)D
jtb.syntaxtree.TypeDeclaration:TypeDeclaration(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3R_86()Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Modifiers;)V
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
utilMDE.UtilMDE:splitLines(Ljava.lang.String;)[Ljava.lang.String;
jtb.syntaxtree.Type:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
jtb.JavaParser:jj_3_4()Z
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NullLiteral;)V
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
jtb.syntaxtree.ConditionalAndExpression:accept(Ljtb.visitor.Visitor;)V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.VarInfoName:ioa_name()Ljava.lang.String;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_55()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PackageDeclaration;)V
jtb.JavaParser:jj_2_4(I)Z
utilMDE.ArraysMDE:indexOf([ZZ)I
jtb.syntaxtree.ClassOrInterfaceBody:accept(Ljtb.visitor.Visitor;)V
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
jtb.syntaxtree.NodeChoice:getParent()Ljtb.syntaxtree.Node;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.ModBitTracker:split(I)I
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.Quant:eltsEqualIndex([I)Z
daikon.inv.unary.scalar.NonZero:enabled()Z
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_68()Z
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
jtb.JavaParser:jj_3R_163()Z
daikon.Quant:lexLTE([I[I)Z
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
jtb.syntaxtree.ShiftExpression:accept(Ljtb.visitor.Visitor;)V
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.LimitedSizeIntSet:add(I)V
jtb.JavaParser:jj_3R_89()Z
jtb.syntaxtree.Statement:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBody;)V
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.Quant:pairwiseLTE([I[I)Z
daikon.Quant:sameLength([I[I)Z
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.ProglangType:baseIsFloat()Z
jtb.syntaxtree.PrimaryExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.TypeDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AndExpression;)V
jtb.JavaCharStream:backup(I)V
jtb.syntaxtree.NodeSequence:elementAt(I)Ljtb.syntaxtree.Node;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.Quant:lexGT([I[I)Z
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
jtb.JavaCharStream:BeginToken()C
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
jtb.JavaParser:jj_2_21(I)Z
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.ProglangType:isScalar()Z
jtb.syntaxtree.ExclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:subarray([III)[I
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
jtb.JavaParser:jj_3_12()Z
jtb.JavaCharStream:getEndColumn()I
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
utilMDE.WeakIdentityHashMap:indexFor(II)I
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.JavaParser:jj_3_28()Z
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
jtb.syntaxtree.InstanceOfExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.RelationalExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_2_5(I)Z
jtb.JavaParser:FormalParameter()Ljtb.syntaxtree.FormalParameter;
jtb.visitor.TreeFormatter:placeToken(Ljtb.syntaxtree.NodeToken;II)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.Type;)V
daikon.Quant:subsetOf([F[D)Z
daikon.ProglangType:format()Ljava.lang.String;
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object; | CONSTANT | 17524 | 1 -> -1
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
utilMDE.UtilMDE:removeWhitespaceAfter(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.ValueTuple:size()I
daikon.tools.jtb.SimpleTreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_122()Z
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalAndExpression;)V
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
utilMDE.ArraysMDE:max([I)I
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
daikon.Quant:lte(II)Z
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.ArraysMDE:sorted([I)Z
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.inv.Invariant:justified()Z
daikon.VarInfoName:toString()Ljava.lang.String;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.ModBitTracker:ModBitTracker(I)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eltwiseNotEqual([I)Z
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.Quant:subsetOf([B[I)Z
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
jtb.JavaParser:jj_3R_87()Z
jtb.JavaParser:jj_3R_109()Z
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.ProglangType:isPseudoArray()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PostfixExpression;)V
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.tools.jtb.Ast:create(Ljava.lang.String;[Ljava.lang.Class;[Ljava.lang.Object;Ljava.lang.String;)Ljtb.syntaxtree.Node;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeToken:accept(Ljtb.visitor.Visitor;)V
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.tools.jtb.Ast:getClassName(Ljtb.syntaxtree.Node;)Ljava.lang.String;
jtb.visitor.TreeFormatter:add(Ljtb.visitor.FormatCommand;)V
utilMDE.ArraysMDE:indexOf([II)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Type;)V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.FuzzyFloat:indexOf([D[D)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReturnStatement;)V
daikon.tools.jtb.Ast.1GetParametersVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Literal;)V
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.PptSlice0:initInvariantsSeen()V
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.tools.jtb.Ast:getParent(Ljava.lang.Class;Ljtb.syntaxtree.Node;)Ljtb.syntaxtree.Node;
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
jtb.syntaxtree.TypeDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3_5()Z
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
jtb.JavaParser:jj_3R_149()Z
daikon.tools.jtb.Ast:getName(Ljtb.syntaxtree.MethodDeclaration;)Ljava.lang.String;
jtb.JavaParser:jj_3R_67()Z
utilMDE.UtilMDE:removeWhitespaceBefore(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
utilMDE.MathMDE:mod_positive(II)I
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_2_13(I)Z
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_85()Z
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_2_15(I)Z
daikon.inv.unary.scalar.UpperBound:enabled()Z
jtb.JavaParser:jj_2_12(I)Z
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.MathMDE:gcd([I)I
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_70()Z
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
jtb.JavaParser:jj_3R_124()Z
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.ClassOrInterfaceDeclaration:ClassOrInterfaceDeclaration(Ljtb.syntaxtree.NodeChoice;Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ClassOrInterfaceBody;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
jtb.JavaParser:jj_3R_60()Z
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
jtb.visitor.TreeDumper:TreeDumper(Ljava.io.Writer;)V
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ReferenceType;)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalOrExpression;)V
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
daikon.Quant:eq(JJ)Z
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
jtb.JavaParser:jj_3R_120()Z
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.InvMap:InvMap()V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:element_range([I)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
jtb.JavaParser:jj_3_15()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
utilMDE.MathMDE:nonmodulus_strict([I)[I
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_51()Z
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.VarInfoName:esc_name()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
jtb.JavaParser:jj_3R_52()Z
jtb.JavaParser:jj_3_17()Z
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
jtb.JavaCharStream:getBeginColumn()I
daikon.Quant:pairwiseGT([I[I)Z
daikon.Quant:eltsNotEqualIndex([I)Z
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
jtb.syntaxtree.VariableDeclaratorId:VariableDeclaratorId(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
utilMDE.Intern:intern([I)[I
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
jtb.JavaParser:jj_3R_96()Z
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3_19()Z
daikon.Quant:eltwiseLT([I)Z
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.Quant:concat([I[I)[I
jtb.syntaxtree.AndExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.JavaCharStream:getEndLine()I
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.tools.jtb.Ast:print(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
jtb.JavaParserTokenManager:MoreLexicalActions()V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
utilMDE.MathMDE:gcd_differences([I)I
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.test.TestAst.MethodDeclarationHarvester:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_63()Z
daikon.Quant:intersection([I[I)[I
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.LowerBound:enabled()Z
jtb.JavaParser:jj_3R_99()Z
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:getParent()Ljtb.syntaxtree.Node;
utilMDE.WeakHasherMap.EntrySet:size()I
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Block;)V
jtb.syntaxtree.ReferenceType:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.MethodDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3_20()Z
jtb.syntaxtree.CompilationUnit:getParent()Ljtb.syntaxtree.Node;
jtb.syntaxtree.VariableDeclaratorId:accept(Ljtb.visitor.Visitor;)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.Quant:eq(FF)Z
jtb.JavaParser:jj_3R_114()Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.ModBitTracker:num_samples()I
utilMDE.Intern:numIntArrays()I
jtb.JavaParser:jj_3R_49()Z
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_105()Z
daikon.tools.jtb.Ast:getParameters(Ljtb.syntaxtree.MethodDeclaration;)Ljava.util.List;
daikon.diff.Node:add(Ljava.lang.Object;)V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
utilMDE.ArraysMDE:sum([[D)D
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_164()Z
daikon.ModBitTracker:num_vars()I
jtb.JavaParser:jj_3R_100()Z
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
jtb.JavaParser:jj_3_13()Z
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
jtb.syntaxtree.NodeOptional:NodeOptional()V
jtb.JavaParser:jj_3_30()Z
jtb.JavaCharStream:readChar()C
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.tools.jtb.Ast:getPackage(Ljtb.syntaxtree.CompilationUnit;)Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
daikon.Quant:lexEqual([I[I)Z
jtb.JavaParser:jj_3_29()Z
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ResultType;)V
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.Quant:setEqual([I[I)Z
jtb.syntaxtree.NodeSequence:elements()Ljava.util.Enumeration;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I | CONSTANT | 54150 | 0 -> -1
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
jtb.JavaParser:jj_3_22()Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
jtb.JavaParser:jj_3_1()Z
daikon.Quant:gte(II)Z
jtb.JavaParser:VariableDeclaratorId()Ljtb.syntaxtree.VariableDeclaratorId;
utilMDE.MathMDE:gcd(II)I
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.FormalParameter;)V
jtb.visitor.TreeDumper:printToken(Ljava.lang.String;)V
jtb.JavaParser:jj_3R_74()Z
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeDeclaration;)V
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
utilMDE.ArraysMDE:min_max([I)[I
jtb.syntaxtree.NodeSequence:accept(Ljtb.visitor.Visitor;)V
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.ClassOrInterfaceDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.visitor.FormatCommand:getNumCommands()I
jtb.JavaParser:jj_3R_58()Z
jtb.JavaParser:jj_3R_136()Z
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
jtb.syntaxtree.ClassOrInterfaceBody:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.FuzzyFloat:gt(DD)Z
daikon.Quant:setDiff([I[I)[I
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.VarInfoName:name()Ljava.lang.String;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_107()Z
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
jtb.JavaCharStream:UpdateLineColumn(C)V
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:simplify_name()Ljava.lang.String;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
jtb.JavaCharStream:FillBuff()V
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.Quant:eltwiseEqual([I)Z
utilMDE.ArraysMDE:fn_is_total([I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.CompilationUnit;)V
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.ProglangType:isFloat()Z
jtb.visitor.TreeFormatter:processList(Ljtb.syntaxtree.NodeListInterface;)V
utilMDE.Intern:internSubsequence([JII)[J
utilMDE.Intern:internSubsequence([III)[I
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.PptSlice0:arity()I
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:fn_inverse([II)[I
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Name;)V
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfo:java_name()Ljava.lang.String;
jtb.syntaxtree.MultiplicativeExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_110()Z
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptName:isCombinedExitPoint()Z
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.Quant:eltwiseLTE([I)Z
jtb.syntaxtree.ClassOrInterfaceBody:getParent()Ljtb.syntaxtree.Node;
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
utilMDE.ArraysMDE:sum([[I)I
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.ValueTuple:isMissing(I)Z
jtb.JavaParser:jj_3R_118()Z
daikon.Quant:memberOf(J[J)Z
utilMDE.FuzzyFloat:gte(DD)Z
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:fn_identity(I)[I
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.MethodDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.diff.RootNode:RootNode()V
jtb.JavaParser:jj_3R_53()Z
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
jtb.syntaxtree.TypeParameter:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ImportDeclaration;)V
jtb.syntaxtree.ResultType:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.test.TestAst.ClassOrInterfaceDeclarationHarvester:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:memberOf(F[F)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.BlockStatement;)V
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.Node:Node()V
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
daikon.ProglangType:isPointerFileRep()Z
jtb.visitor.TreeFormatter:TreeFormatter(II)V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
jtb.syntaxtree.TypeArguments:TypeArguments(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeArgument;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3_3()Z
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.tools.jtb.SimpleTreeDumper:printToken(Ljava.lang.String;)V
daikon.VarInfo:isPointer()Z
jtb.JavaParser:jj_3R_72()Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryExpression;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Statement;)V
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.UtilMDE:lineNumberFileReader(Ljava.lang.String;)Ljava.io.LineNumberReader;
daikon.tools.jtb.PptNameMatcher:PptNameMatcher(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
jtb.JavaParser:jj_2_3(I)Z
jtb.JavaParser:jj_3R_117()Z
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
jtb.JavaParser:jj_3R_180()Z
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.UnaryExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.inv.Invariant:prob_and(DDD)D
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.Quant:eltsGTE([II)Z
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MultiplicativeExpression;)V
utilMDE.SimpleLog.LongVal:LongVal(J)V
jtb.JavaParser:jj_3R_81()Z
jtb.JavaParser:jj_3_21()Z
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
jtb.syntaxtree.FormalParameter:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryPrefix;)V
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;)Z
jtb.syntaxtree.ConditionalExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:noDuplicates([D)Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:eltsGtIndex([I)Z
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;)V
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
jtb.syntaxtree.NodeList:NodeList()V
utilMDE.MathMDE:pow_fast(II)I
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
utilMDE.UtilMDE:removeWhitespaceAround(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.Quant:memberOf(D[F)Z
jtb.syntaxtree.NodeSequence:getParent()Ljtb.syntaxtree.Node;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_2_16(I)Z
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
jtb.JavaParser:jj_3R_57()Z
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
jtb.JavaCharStream:GetImage()Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
utilMDE.WeakHasherMap:size()I
jtb.JavaParser:jj_3R_102()Z
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.Quant:subsetOf([J[J)Z
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AdditiveExpression;)V
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
daikon.tools.jtb.Ast:typeMatch(Ljava.lang.String;Ljava.lang.String;)Z
daikon.VarInfoName.NodeFinder:inPre()Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
daikon.Ppt:Ppt()V
daikon.tools.jtb.Ast:format(Ljtb.syntaxtree.Node;)Ljava.lang.String;
jtb.JavaParser:jj_2_25(I)Z
daikon.Quant:eltsLT([II)Z
jtb.JavaParser:jj_3R_47()Z
jtb.syntaxtree.TypeArgument:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_103()Z
jtb.JavaParser:jj_3R_75()Z
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.Intern:intern([D)[D
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
jtb.visitor.FormatCommand:FormatCommand(II)V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
jtb.syntaxtree.PostfixExpression:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quant:pairwiseSquare([I[I)Z
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.inv.Invariant:prob_and(DD)D
jtb.visitor.TreeFormatter:space()Ljtb.visitor.FormatCommand;
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:min([I)I
daikon.PptSlice2:arity()I
daikon.Quant:pairwiseNotEqual([I[I)Z
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.Quant:isReverse([I[I)Z
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.ProglangType:dimensions()I
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor.1:visit(Ljtb.syntaxtree.TypeParameter;)V
daikon.VarInfoName.Add:amount()Ljava.lang.String;
jtb.syntaxtree.BlockStatement:accept(Ljtb.visitor.Visitor;)V
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:jj_3R_80()Z
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
jtb.JavaParser:jj_3_36()Z
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
jtb.JavaParser:jj_3R_98()Z
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.VarInfo:new_ppt()V
utilMDE.OrderedPairIterator:setnext2()V
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.OrderedPairIterator:setnext1()V
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljava.lang.String;Ljava.lang.String;Ljava.util.List;)Z
jtb.JavaParser:jj_3R_121()Z
jtb.JavaParser:jj_2_36(I)Z
jtb.JavaParser:jj_3R_137()Z
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:intern([J)[J
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
utilMDE.LimitedSizeIntSet:size()I
daikon.inv.Invariants:Invariants()V
daikon.VarInfo:jml_name()Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.PptTopLevel:name()Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.Literal:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_104()Z
daikon.Quant:lt(II)Z
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.tools.jtb.PptNameMatcher:getUngenerifiedType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_108()Z
jtb.JavaParser:jj_2_1(I)Z
daikon.Quant:eltwiseGTE([I)Z | CONDITION | 177097 | if (x) -> if (!x)
daikon.Quant:pairwiseDivides([I[I)Z
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.Quant:subsetOf([D[D)Z
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:sum([D)D
jtb.syntaxtree.NodeListOptional:elements()Ljava.util.Enumeration;
jtb.JavaParser:jj_3R_54()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameter;)V
jtb.JavaParser:JavaParser(Ljava.io.Reader;)V
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.RelationalExpression;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
jtb.JavaParser:jj_3R_97()Z
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
jtb.syntaxtree.FormalParameters:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.AdditiveExpression:accept(Ljtb.visitor.Visitor;)V
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
jtb.JavaParser:jj_3R_106()Z
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.PptName:getMethodName()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ShiftExpression;)V
jtb.JavaParser:jj_2_10(I)Z
utilMDE.MathMDE:bitwiseComplement(I)I
utilMDE.FuzzyFloat:lt(DD)Z
jtb.JavaParser:jj_3R_115()Z
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.ClassOrInterfaceBody:ClassOrInterfaceBody(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.ArraysMDE:subarray([JII)[J
daikon.VarInfo:ioa_name()Ljava.lang.String;
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:copy(Ljava.util.HashMap;)Ljava.util.HashMap;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.FormalParameter:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:eltsLteIndex([I)Z
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;)V
jtb.syntaxtree.NullLiteral:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.tools.jtb.Ast:removeWhitespace(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_161()Z
utilMDE.FuzzyFloat:indexOf([DD)I
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
utilMDE.UtilMDE:lineNumberFileReader(Ljava.io.File;)Ljava.io.LineNumberReader;
utilMDE.FuzzyFloat:set_rel_diff(D)V
utilMDE.FuzzyFloat:ne(DD)Z
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameter;)V
jtb.JavaParser:jj_2_17(I)Z
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljtb.syntaxtree.Node;)Z
daikon.Quant:subsetOf([F[F)Z
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
jtb.JavaParser:jj_3_25()Z
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:slice([III)[I
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
jtb.JavaCharStream:getBeginLine()I
jtb.syntaxtree.NodeListOptional:getParent()Ljtb.syntaxtree.Node;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;II)V
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.Quant:lexLT([I[I)Z
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ModBitTracker:num_sets()I
daikon.ValueTuple:tuplemodHasModified(I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InclusiveOrExpression;)V
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.VarInfoName:hashCode()I
jtb.syntaxtree.ClassOrInterfaceDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltsLTE([II)Z
jtb.syntaxtree.MethodDeclarator:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_62()Z
jtb.syntaxtree.PrimaryPrefix:accept(Ljtb.visitor.Visitor;)V
daikon.PptMap:asCollection()Ljava.util.Collection;
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
daikon.Quant:lexGTE([I[I)Z
utilMDE.ArraysMDE:isSubset([D[D)Z
jtb.syntaxtree.TypeBound:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.tools.jtb.Ast:quickFixForInternalComment(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.ProglangType:elementType()Ldaikon.ProglangType;
jtb.syntaxtree.CompilationUnit:accept(Ljtb.visitor.Visitor;)V
daikon.test.TestQuant:removeAdjacentDups([I)[I
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:pairwiseLT([I[I)Z
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_69()Z
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:gt(II)Z
jtb.JavaParser:jj_3R_134()Z
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.Quant:eltsGteIndex([I)Z
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.Positive:enabled()Z
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.Quant:ne(II)Z
daikon.tools.jtb.PptNameMatcher:extractPptArgs(Ldaikon.PptName;)Ljava.util.List;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameters;)V
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.Quant:memberOf(F[D)Z
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_77()Z
daikon.VarInfoName:isLiteralConstant()Z
jtb.visitor.FormatCommand:getCommand()I
daikon.tools.jtb.Ast:getType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
daikon.VarInfo:simplify_name()Ljava.lang.String;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
jtb.syntaxtree.ConditionalOrExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.Block:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object; | ASSIGN | 266434 | = null
jtb.syntaxtree.TypeArguments:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
jtb.syntaxtree.Name:accept(Ljtb.visitor.Visitor;)V
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.NodeToken;)V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
jtb.JavaParser:jj_3R_125()Z
utilMDE.Options.OptionInfo:argument_required()Z
daikon.ProglangType:isArray()Z
daikon.inv.Invariant:getConfidence()D
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
jtb.JavaParser:jj_2_18(I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeBound;)V
utilMDE.FuzzyFloat:lte(DD)Z
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.visitor.TreeFormatter:TreeFormatter()V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_scan_token(I)Z
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
jtb.syntaxtree.NodeListOptional:present()Z
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eltsEqual([II)Z
jtb.syntaxtree.ReturnStatement:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
jtb.syntaxtree.VariableDeclaratorId:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
utilMDE.MathMDE:gcd(JJ)J
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.InclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.PptName:getFullClassName()Ljava.lang.String;
daikon.Quant:eltsLtIndex([I)Z
jtb.syntaxtree.Expression:accept(Ljtb.visitor.Visitor;)V
daikon.Debug:logOn()Z
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I | ASSIGN | 183876 | = null
jtb.visitor.TreeFormatter:processList(Ljtb.syntaxtree.NodeListInterface;Ljtb.visitor.FormatCommand;)V
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
jtb.syntaxtree.NodeToken:numSpecials()I
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.test.InvariantFormatTester:execute()Z
utilMDE.WeakHasherMap:processQueue()V
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.test.FormatTestCase:passes()Z
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:subsetOf([D[F)Z
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.syntaxtree.EqualityExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltsGT([II)Z
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclarator;)V
daikon.ValueTuple:isMissingFlow(I)Z
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.VarInfoName:repr()Ljava.lang.String;
jtb.JavaParser:jj_3R_73()Z
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
jtb.syntaxtree.NodeOptional:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArguments;)V
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_2_35(I)Z
daikon.Quant:pairwiseGTE([I[I)Z
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.tools.jtb.SimpleTreeDumper:SimpleTreeDumper(Ljava.io.Writer;)V
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
daikon.PptSlice1:arity()I
utilMDE.FuzzyFloat:FuzzyFloat(D)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
jtb.visitor.TreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_56()Z
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.Node:getUserRight()Ljava.lang.Object;
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.FormalParameter:FormalParameter(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Type;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_50()Z
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltsNotEqual([II)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ExclusiveOrExpression;)V
jtb.JavaParser:jj_3R_210()Z
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameters;)V
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
jtb.JavaParser:jj_3R_148()Z
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.ProglangType:isIntegral()Z
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.VarInfo:name()Ljava.lang.String;
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
jtb.Token:newToken(I)Ljtb.Token;
daikon.PptName:getSignature()Ljava.lang.String;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_135()Z
jtb.JavaParser:jj_3R_48()Z
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
jtb.JavaParser:getToken(I)Ljtb.Token;
daikon.config.Configuration:apply(Ljava.lang.String;)V
jtb.JavaParser:jj_3_10()Z
daikon.VarInfo:relate_var()V
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
jtb.syntaxtree.PackageDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.TreeFormatter:space(I)Ljtb.visitor.FormatCommand;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.PptName:isEnterPoint()Z
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.simplify.LemmaStack:noticeInt(J)V
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.Quant:noDups([I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalExpression;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.tools.jtb.PptNameMatcher:typeMatch(Ljava.lang.String;Ljtb.syntaxtree.FormalParameter;)Z
daikon.Quant:memberOf(S[S)Z
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_ntk()I
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
jtb.syntaxtree.CompilationUnit:CompilationUnit(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.Quant:memberOf(I[I)Z
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:missing_numbers([I)[I
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.ValueSet:ValueSet(I)V
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
jtb.JavaParser:jj_3R_126()Z
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
jtb.JavaParser:jj_3R_116()Z
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
jtb.JavaParser:jj_3_35()Z
utilMDE.OrderedPairIterator:hasNext()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
jtb.syntaxtree.TypeParameters:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_101()Z
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
jtb.syntaxtree.Modifiers:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE:pow(II)I
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
jtb.JavaParser:jj_3R_88()Z
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_133()Z
daikon.Quant:subsetOf([S[S)Z
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:jj_3R_162()Z
utilMDE.Assert:assertTrue(Z)V
jtb.JavaParser:jj_3R_61()Z
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.Quant:union([I[I)[I
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
jtb.syntaxtree.TypeArgument:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_76()Z
jtb.syntaxtree.TypeDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.PptName:toString()Ljava.lang.String;
daikon.Quant:subsetOf([I[I)Z
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArgument;)V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.VarInfo:esc_name()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReferenceType;)V
utilMDE.UtilMDE:split(Ljava.lang.String;Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:lexNotEqual([I[I)Z
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.tools.jtb.Ast:create(Ljava.lang.String;Ljava.lang.String;)Ljtb.syntaxtree.Node;
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:eltwiseGT([I)Z
jtb.syntaxtree.NodeChoice:accept(Ljtb.visitor.Visitor;)V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.FuzzyFloat:isSubset([D[D)Z
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:prob_or(DD)D
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeOptional:present()Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
1237 2 759 2 1193 2 880 2 1328 4 7 2 426 2 1044 4 778 2 1118 2 112 2 161 2 470 2 492 2 620 2 72 2 549 2 207 2 451 2 954 2 1314 6 1315 2 294 2 
1246 2 1237 5 1278 2 620 4 1333 4 549 4 954 8 1315 8 1314 15 116 4 1044 12 958 6 294 8 487 2 218 6 1118 4 161 4 
1033 4 1074 8 81 6 100 2 757 4 499 10 855 4 216 2 336 14 459 4 3 2 1060 4 733 2 1014 4 64 2 425 4 942 2 1161 4 818 4 1244 2 282 2 547 4 256 2 388 4 1124 2 140 2 347 2 95 2 431 2 1269 2 193 4 228 62 707 2 533 10 913 2 394 2 806 2 1321 2 1253 2 455 4 
1076 2 457 2 719 2 1116 2 631 2 32 2 221 2 1331 2 390 2 712 2 
410 2 717 2 1220 2 169 2 529 2 856 4 213 2 507 2 1283 2 
844 6 527 2 287 2 629 2 1204 2 1261 2 484 2 1287 2 741 6 1186 2 848 6 
44 2 45 2 523 2 595 4 626 2 1214 2 886 2 841 2 724 2 925 2 891 2 140 2 637 2 410 2 983 2 147 2 577 2 1074 2 1238 2 500 2 611 2 300 2 1283 4 815 2 859 2 255 2 507 4 585 2 1120 2 547 4 471 2 388 2 262 2 653 2 1005 2 1087 2 823 2 74 2 751 2 622 2 1127 2 959 2 310 4 871 4 
124 4 793 4 1237 22 854 4 440 2 48 4 357 2 5 2 358 6 1283 4 1328 6 814 6 426 4 1044 48 159 4 1225 4 1118 16 507 4 112 18 218 6 161 16 384 2 725 8 620 16 1333 4 549 16 601 2 451 2 226 6 954 32 574 6 1315 32 1314 53 1129 2 116 4 958 6 294 32 916 2 1132 6 
1074 2 81 2 100 2 
313 2 635 2 951 2 952 10 74 2 764 2 914 2 941 2 1160 2 1320 2 556 2 1082 2 361 2 99 22 
370 2 1302 2 178 2 377 2 666 6 1174 2 1283 2 217 6 578 4 507 2 174 6 1338 6 546 4 
1237 12 1278 4 854 6 921 2 1283 6 1328 10 404 8 66 8 426 6 1044 26 112 8 1118 10 507 6 841 2 161 10 620 10 636 2 590 2 549 10 450 2 601 2 591 2 954 16 451 4 210 4 574 8 1314 28 1315 16 294 16 1032 4 
554 6 992 4 
1331 2 
1330 2 
84 2 507 2 
705 2 809 2 507 4 
918 2 522 2 274 2 664 6 831 2 275 1 441 1 834 2 1093 2 1016 4 761 1 526 1 11 1 88 6 927 3 843 2 1098 1 1181 4 529 2 1187 4 454 1 1110 2 198 2 1283 30 612 1 462 1 107 2 857 4 780 6 304 1 1051 2 208 2 1295 2 1206 2 709 2 117 5 211 1 1208 2 317 2 1209 2 964 2 402 2 628 2 630 1 53 2 1217 2 1140 6 1139 1 489 2 222 5 406 2 728 2 494 2 145 2 411 2 575 1 640 1 641 1 986 11 1324 1 1077 2 1153 4 65 2 1327 2 813 2 816 2 995 2 251 2 996 4 254 2 507 32 1083 6 1086 2 822 2 651 5 906 3 261 1 346 2 908 2 1249 2 1336 1 265 1 593 2 268 2 78 2 1250 2 753 2 756 2 
0 2 1012 2 663 4 356 2 4 2 665 52 359 2 667 2 669 12 8 2 9 2 670 6 10 6 672 2 1023 2 1025 20 1024 182 674 2 676 30 362 2 1026 2 1027 8 364 2 365 20 678 2 680 6 18 4 369 4 1030 4 19 6 681 6 684 2 371 2 1034 2 372 6 687 2 21 10 688 2 376 2 1037 74 1038 20 689 30 378 2 1041 4 24 2 25 6 692 2 27 2 26 244 382 16 383 30 29 290 30 10 1049 2 696 2 699 84 702 2 1050 4 703 6 37 12 38 2 392 14 393 28 711 6 42 8 43 8 713 2 395 2 1054 2 396 4 1055 2 714 2 397 4 398 2 400 192 1058 2 1057 4 49 2 1061 6 50 30 716 2 52 2 1062 6 405 2 1063 64 721 6 54 6 723 6 1066 26 408 4 56 2 726 2 409 2 57 46 58 82 1069 12 732 20 415 198 1073 20 418 2 1075 2 61 30 735 4 421 2 424 6 739 2 740 8 1080 2 1081 14 68 60 743 4 70 2 746 4 748 4 71 64 1085 4 749 2 750 106 75 8 1088 4 76 4 432 26 79 2 1090 566 80 86 436 2 82 6 760 2 1096 2 85 112 443 6 444 2 1097 336 446 2 447 4 448 198 91 6 92 18 1100 6 766 6 1102 6 94 2 452 60 97 2 96 2 1106 6 769 2 98 432 453 6 1107 2 1109 6 456 6 104 2 773 12 105 2 774 182 775 2 1112 8 461 2 463 2 776 2 108 24 1114 98 468 2 779 2 469 2 113 10 781 8 782 2 784 4 1126 112 785 26 115 2 786 2 1128 6 787 2 119 8 475 2 474 2 120 28 123 2 791 4 477 6 478 54 479 2 126 18 1136 8 795 2 481 2 796 4 128 2 482 4 483 22 130 6 486 2 800 6 132 2 133 6 1141 2 490 60 137 4 138 4 139 2 801 18 141 6 144 4 493 4 805 2 496 2 495 2 498 6 149 28 1146 204 153 2 1148 26 1151 2 810 4 502 2 1154 2 1156 8 1158 2 157 26 504 2 160 2 506 60 507 10 1162 48 162 4 821 12 508 106 1163 328 509 2 510 432 1164 4 164 4 166 6 1167 2 512 4 1168 6 826 12 827 6 170 2 172 6 171 6 516 2 1171 4 173 2 518 6 521 244 829 6 1172 2 524 20 832 2 525 2 180 6 181 2 182 4 835 2 837 4 183 6 184 228 185 8 838 14 1177 160 1179 6 1180 2 1182 6 530 4 1183 14 1184 2 532 6 1185 28 194 198 849 2 850 30 851 2 536 4 537 48 852 2 853 2 1192 4 197 2 538 2 199 2 542 4 544 2 861 328 545 4 1196 198 862 6 204 6 863 2 1197 2 1198 6 1200 4 864 4 205 2 1199 2 865 2 548 244 551 4 550 4 1201 4 552 4 553 2 209 6 1205 4 555 2 1207 12 212 4 869 6 870 2 214 32 872 8 873 4 874 2 876 4 875 2 215 198 1209 2 1211 4 1213 4 879 2 561 28 562 2 1218 16 884 2 564 2 1223 6 1224 2 566 2 887 140 888 4 889 16 890 26 220 2 1227 12 569 376 570 4 1228 2 572 2 225 2 893 6 227 2 1231 68 894 10 1232 2 576 112 231 6 232 6 1234 22 895 26 896 2 1236 2 898 6 897 8 236 6 235 2 237 20 238 4 1240 2 900 2 1241 118 241 112 243 2 244 8 246 30 248 30 250 6 904 2 1243 2 586 4 589 8 260 2 907 2 911 6 912 8 594 46 915 2 1251 2 1254 2 1256 2 1257 30 920 2 1260 2 278 2 596 2 597 12 1262 92 1263 14 923 2 1265 2 1266 2 926 4 285 2 929 46 930 2 931 22 1268 10 288 4 289 2 292 6 1271 4 603 6 934 2 604 2 935 6 936 6 605 2 1275 2 1279 4 296 132 939 8 940 4 298 26 1282 4 1283 10 1284 4 613 2 614 2 303 2 1289 12 947 2 305 386 948 4 1290 30 1291 2 308 4 953 4 955 4 309 4 624 2 956 2 957 4 1298 2 1300 2 961 88 1301 26 311 24 314 6 315 4 316 198 318 6 965 2 968 2 1304 204 1306 50 1307 10 969 46 633 30 971 2 974 2 323 4 975 198 976 4 1312 26 326 2 325 4 979 26 638 2 328 14 981 66 639 6 329 2 330 2 1313 2 1318 192 331 16 332 132 644 4 991 6 338 46 1329 94 340 4 997 2 648 22 649 4 343 12 999 8 650 6 1000 2 1001 6 345 20 1334 2 652 2 1003 2 348 198 1006 14 1007 2 655 12 1008 2 656 2 350 2 658 6 1009 2 1337 224 1010 2 353 70 661 2 
210 2 1074 2 464 2 839 1 1031 2 41 2 1242 2 511 2 
520 2 41 2 1242 2 
41 2 1299 2 1242 2 
1048 2 177 2 819 2 
41 2 1242 2 
1048 2 1099 2 
41 2 1178 2 
1048 2 177 2 16 2 
531 2 1035 2 177 2 
1040 2 176 2 177 2 
177 2 259 2 416 2 
177 2 866 2 1152 2 
1048 2 584 2 
41 2 276 2 
531 2 437 2 
1040 2 623 2 
1317 2 259 2 
877 2 
1048 2 151 2 
1043 2 866 2 
259 2 727 2 
1040 2 932 2 
531 2 1108 2 
1048 2 177 2 515 2 16 2 
1048 2 177 2 1308 2 515 2 16 2 
1048 2 878 2 177 2 
1048 2 804 2 177 2 
1065 2 127 2 
1074 2 86 2 442 2 511 2 
1074 2 1286 2 86 2 1031 2 442 2 511 2 
210 2 1074 2 41 2 1242 2 511 2 557 2 
983 2 1222 2 
210 2 1074 2 511 2 972 2 
1131 2 259 2 
708 2 866 2 
531 2 783 2 
1040 2 998 2 
1040 2 982 2 866 2 
1040 2 163 2 866 2 
1040 2 866 2 190 2 
1040 2 866 2 1004 2 
1074 2 1111 6 191 2 511 2 413 2 118 2 
817 2 177 2 41 2 
41 2 417 2 
1048 2 668 2 
634 2 1123 2 239 2 1280 2 846 2 1229 2 966 2 762 4 560 2 279 2 23 4 883 2 379 2 657 2 485 2 742 2 99 6 1053 2 
949 2 177 2 
1217 2 
522 2 274 2 664 2 834 2 1093 2 761 2 277 2 1020 2 88 6 675 2 843 2 1181 4 1028 2 528 2 529 2 93 2 366 2 367 2 1272 4 1187 6 454 2 1189 4 295 2 1110 2 198 2 1283 22 857 4 619 2 780 6 472 2 1051 2 1202 2 208 6 1295 2 709 2 1208 2 317 2 399 2 1209 2 402 2 559 4 51 2 321 2 1140 4 1311 2 145 2 494 2 411 2 985 2 986 4 808 2 152 2 579 2 988 2 1325 2 1153 4 736 2 65 2 1327 2 813 2 339 2 1159 2 993 2 995 2 996 4 507 22 1083 2 747 2 822 2 346 2 1249 2 593 2 1169 2 434 2 1255 2 
522 2 274 2 664 2 834 2 1093 2 761 2 277 2 88 6 675 2 843 2 1181 4 1028 2 528 2 529 2 93 2 366 2 367 2 1272 4 1187 6 454 2 1189 4 295 2 102 2 1110 2 373 2 198 2 1283 22 857 4 619 2 780 6 472 2 1051 2 1202 2 208 6 1295 2 709 2 1208 2 317 2 399 2 1209 2 402 2 628 2 559 4 51 2 321 2 1140 6 1311 2 1070 2 145 2 494 2 411 2 985 1 986 4 152 2 579 2 1325 2 1153 4 736 2 65 2 1327 2 813 2 339 2 1159 2 993 2 995 2 996 4 507 22 1083 2 747 2 1086 2 822 2 346 2 1249 2 593 2 1169 2 434 2 1255 2 
103 2 
381 2 768 2 
1091 2 46 2 175 2 274 2 1209 2 1210 2 402 2 1259 2 629 2 1215 2 881 2 1261 4 1176 2 360 2 12 2 134 2 844 6 407 8 527 2 571 8 287 4 848 6 497 4 333 2 642 2 101 4 938 2 643 4 608 4 62 2 1153 2 155 2 1283 6 738 2 857 2 109 2 860 10 505 2 741 6 618 2 507 12 385 2 780 4 905 2 306 2 822 2 1002 2 206 2 1247 2 346 2 592 2 1166 2 1295 2 1297 2 593 2 269 2 513 2 660 4 517 2 352 4 
1091 2 46 2 175 2 274 2 2 2 1209 2 1210 2 402 2 1259 2 629 2 881 2 1261 4 1176 2 360 2 12 2 134 2 844 8 407 8 527 2 571 8 802 4 287 4 848 6 497 4 333 2 642 2 101 4 938 2 643 4 608 4 1153 2 62 2 155 2 1283 6 738 2 857 2 109 2 860 10 505 2 1287 2 741 8 507 12 385 2 780 4 905 2 306 2 822 2 1002 2 206 2 1247 2 346 2 592 2 1166 2 1295 2 1297 2 593 2 269 2 513 2 660 4 517 2 433 2 352 4 
1091 2 642 2 385 2 844 2 643 4 905 2 1210 2 306 2 1002 2 608 2 206 2 1247 2 1259 2 287 2 1261 2 660 4 360 2 848 2 
1091 2 46 2 175 2 274 2 1209 2 1210 2 402 2 1259 2 1215 2 881 2 1261 4 1176 2 360 2 12 2 134 2 844 6 407 4 527 2 571 4 287 4 848 4 497 4 333 2 642 2 101 4 938 2 643 4 608 4 62 2 1153 2 155 2 1283 6 738 2 857 2 109 2 860 6 505 2 1287 2 741 6 618 2 507 12 385 2 780 4 905 2 306 2 822 2 1002 2 206 2 1247 2 346 2 592 2 1166 2 1295 2 1297 2 593 2 269 2 513 2 660 4 517 2 352 4 
1091 2 46 2 175 2 274 2 1209 2 1210 2 402 2 1259 2 1215 2 881 2 1261 4 1176 2 360 2 12 2 134 2 844 4 407 4 527 2 571 4 287 4 1186 2 848 6 497 4 333 2 642 2 101 4 938 2 643 4 608 4 62 2 1153 2 155 2 1283 6 738 2 857 2 109 2 860 6 505 2 741 6 618 2 507 12 385 2 780 4 905 2 306 2 822 2 1002 2 206 2 1247 2 346 2 592 2 1166 2 1295 2 1297 2 593 2 269 2 513 2 660 4 517 2 352 4 
1091 2 46 2 175 2 274 2 1209 2 1210 2 402 2 1259 2 629 2 1215 2 881 2 1261 4 1176 2 360 2 12 2 134 2 844 6 407 4 527 2 571 8 287 4 848 6 497 4 333 2 642 2 101 4 938 2 643 4 608 4 62 2 1153 2 155 2 1283 6 738 2 857 2 109 2 860 6 505 2 741 6 618 2 507 12 385 2 780 4 905 2 306 2 822 2 1002 2 206 2 1247 2 346 2 592 2 1166 2 1295 2 1297 2 593 2 269 2 513 2 660 4 517 2 352 4 
1091 2 46 2 175 2 274 2 1209 2 1210 2 402 2 1259 2 629 2 1215 2 881 2 1261 4 1176 2 360 2 12 2 134 2 844 6 407 8 527 2 571 8 287 4 1186 2 848 8 497 4 333 2 642 2 101 4 938 2 643 4 608 4 62 2 1153 2 155 2 1283 6 738 2 857 2 109 2 860 10 505 2 741 8 618 2 507 12 385 2 780 4 905 2 306 2 822 2 1002 2 206 2 1247 2 346 2 592 2 1166 2 1295 2 1297 2 593 2 269 2 513 2 660 4 517 2 352 4 
1091 2 46 2 175 2 274 2 1209 2 1210 2 402 2 1259 2 629 2 1215 2 881 2 1261 4 1176 2 360 2 12 2 134 2 844 6 407 8 527 2 571 8 287 4 848 6 497 4 333 2 642 2 101 4 938 2 643 4 608 4 62 2 1153 2 155 2 1283 6 738 2 857 2 109 2 860 10 505 2 741 6 618 2 507 12 385 2 780 4 905 2 306 2 822 2 1002 2 206 2 1247 2 346 2 592 2 1166 2 1295 2 1297 2 593 2 269 2 513 2 660 4 517 2 352 4 
642 2 101 2 46 2 522 2 643 2 1210 2 198 2 62 2 299 2 1259 2 1215 2 1261 2 738 2 1176 2 109 2 505 2 741 4 507 4 12 2 134 2 385 2 844 2 306 2 527 2 571 2 1002 2 1247 2 287 2 592 2 411 2 513 2 1186 2 660 2 848 4 333 2 352 2 
642 2 101 2 46 2 522 2 643 2 1210 2 198 2 62 2 299 2 1259 2 1215 2 629 2 1261 2 738 2 1176 2 109 2 505 2 741 4 507 4 12 2 134 2 385 2 844 4 306 2 527 2 571 6 1002 2 1247 2 287 2 592 2 411 2 513 2 660 2 848 4 333 2 352 2 
642 2 101 2 46 2 522 2 643 2 1210 2 198 2 62 2 299 2 1259 2 1215 2 629 2 1261 2 738 2 1176 2 109 2 860 4 505 2 741 4 507 4 12 2 134 2 385 2 844 4 407 4 306 2 527 2 571 6 1002 2 1247 2 287 2 592 2 411 2 513 2 660 2 848 4 333 2 352 2 
642 2 101 2 46 2 522 2 643 2 1210 2 198 2 62 2 299 2 1259 2 1215 2 629 2 1261 2 738 2 1176 2 109 2 860 4 505 2 741 4 507 4 12 2 134 2 385 2 844 4 407 4 306 2 527 2 571 6 1002 2 1247 2 287 2 592 2 411 2 513 2 660 2 848 4 333 2 352 2 
642 2 101 2 46 2 643 2 1210 2 62 2 1259 2 1215 2 629 2 1261 4 738 2 1176 2 109 2 860 4 505 2 741 4 507 4 12 2 134 2 385 2 844 6 407 4 306 2 527 2 571 6 1002 2 1247 2 287 4 592 2 513 2 660 2 497 2 848 6 333 2 352 2 
274 2 664 3 834 2 1093 2 1259 2 1175 2 1261 4 1176 2 12 2 88 8 675 2 843 2 844 6 1181 4 527 2 529 2 287 4 366 2 1272 4 848 6 1187 6 101 2 1110 4 938 2 1283 24 857 4 109 2 466 3 860 2 780 6 385 2 306 2 867 2 1051 2 208 6 1295 2 709 2 46 2 1208 2 317 2 1209 2 1210 2 402 2 1215 2 629 2 628 2 1217 2 1140 6 567 2 134 2 406 2 571 6 980 2 145 2 494 2 497 2 333 2 986 3 642 2 643 2 1153 4 62 2 1155 2 65 2 1327 2 738 2 813 2 1159 2 995 2 251 2 996 4 505 2 741 4 67 2 254 2 507 28 1083 3 822 2 1086 2 1002 2 1247 2 346 2 592 2 1249 2 593 2 270 2 513 2 660 2 352 2 
134 2 39 2 109 2 
134 2 39 2 109 2 
522 2 274 2 834 2 1093 2 1259 2 1261 2 1176 2 88 2 675 2 843 2 1181 4 844 4 527 2 529 2 189 2 366 2 287 2 1187 2 848 4 20 2 101 2 1110 2 198 2 1283 14 857 4 109 2 860 2 780 6 385 2 307 2 1051 2 208 2 1295 2 1052 2 709 2 1208 2 317 2 1209 2 402 2 628 2 629 2 1140 6 134 2 223 2 407 2 571 6 978 2 327 2 145 2 411 2 986 2 643 2 1153 4 65 2 1327 2 813 2 1159 2 995 2 996 4 741 4 507 18 1086 2 822 2 346 2 1247 2 592 2 1249 2 593 2 660 2 1255 2 352 2 
1110 2 1013 2 1292 2 1078 2 206 2 768 2 902 2 1283 2 266 2 593 2 368 2 473 2 380 2 797 2 847 2 67 2 507 4 
522 2 274 2 834 2 1093 2 1259 2 1261 2 1176 2 88 2 675 2 843 2 1181 4 844 4 527 2 529 2 189 2 366 2 287 2 1187 2 848 4 20 2 101 2 1110 2 198 2 1283 14 857 4 109 2 860 2 1288 2 780 6 385 2 307 2 1051 2 208 2 1295 2 1052 4 709 2 1133 2 1208 2 317 2 1209 2 402 2 628 2 629 2 1140 6 134 2 223 2 407 2 571 6 978 2 327 2 145 2 411 2 986 4 643 2 1153 4 65 2 1327 2 813 2 1159 2 995 2 996 4 741 4 507 18 1086 2 822 2 346 2 1247 2 592 2 1249 2 593 2 660 2 1255 2 352 2 
522 2 274 2 834 2 1093 2 1259 2 1261 2 1176 2 88 2 675 2 843 2 1181 4 844 4 527 2 529 2 189 2 366 2 287 2 1187 2 848 4 20 2 101 2 1110 2 198 2 1283 14 857 4 109 2 860 2 780 6 385 2 307 2 1051 2 208 2 1295 2 1052 2 709 2 1208 2 317 2 1209 2 402 2 628 2 629 2 1140 6 134 2 223 2 407 2 571 6 978 2 327 2 145 2 411 2 986 2 643 2 1153 4 65 2 1327 2 813 2 1159 2 995 2 996 4 741 4 507 18 1086 2 822 2 346 2 1247 2 592 2 1249 2 593 2 660 2 1255 2 352 2 
662 4 1011 2 664 19 354 2 833 2 179 4 834 2 1175 2 836 2 671 2 1018 2 1021 2 1022 1 842 4 843 2 1181 8 677 4 845 12 14 6 528 46 529 4 15 12 366 2 193 2 367 4 195 2 1187 14 535 4 196 2 1189 22 686 2 855 2 539 4 540 2 1036 1 200 1 1039 2 1042 4 1194 2 857 4 858 12 691 2 1044 6 1195 2 1046 2 28 2 34 2 549 2 701 2 1051 2 1202 18 208 14 391 2 706 2 709 2 1208 2 1059 16 1209 2 402 2 51 12 559 22 403 12 1219 10 885 3 218 6 567 2 1067 12 573 16 229 2 731 2 230 2 1233 2 419 2 579 2 233 4 899 2 1237 4 1077 4 734 2 901 2 240 2 422 2 242 2 582 10 65 4 425 2 247 2 428 2 252 1 429 2 1245 10 1083 16 1084 2 747 2 587 2 588 4 258 2 1086 5 909 2 1249 4 1089 4 752 2 77 2 593 2 78 4 1252 12 916 4 271 2 272 2 754 2 83 2 274 2 1093 2 1094 2 761 2 1095 2 922 14 281 2 1264 2 445 2 88 28 924 2 90 2 928 10 1101 2 767 2 600 2 286 4 1267 2 602 12 1104 2 1270 2 1105 2 1272 12 770 4 454 2 294 4 455 2 1276 1 1110 2 458 2 297 3 460 2 106 2 1283 30 1285 3 466 2 111 2 617 2 1117 2 467 2 112 4 1118 2 780 6 1121 2 1122 2 620 2 954 4 1295 2 116 4 1130 2 960 16 122 6 789 2 1134 2 962 2 1135 16 317 2 963 2 1303 12 627 2 967 24 628 5 320 2 798 3 129 4 1140 15 135 14 1311 2 1310 2 1142 2 324 10 142 2 980 2 494 2 145 2 146 2 1315 4 1314 8 984 2 986 19 150 2 1147 3 152 2 987 2 154 2 645 4 501 2 1325 2 1153 4 1155 2 337 4 1327 2 339 2 813 4 1157 2 1159 2 993 2 995 4 996 8 647 2 1161 2 341 2 507 38 161 2 344 2 822 2 346 2 654 2 514 2 
83 2 664 2 460 2 1283 2 582 4 885 2 281 2 507 2 88 2 1245 2 1083 2 1310 2 928 2 1122 2 34 2 765 2 528 6 600 2 208 2 494 2 1272 2 1187 2 271 2 986 2 
83 2 664 2 460 2 1283 2 582 4 885 2 281 2 507 2 88 2 1245 2 1083 2 1310 2 928 2 1122 2 34 2 765 2 528 6 600 2 208 2 494 2 1272 2 1187 2 271 2 986 2 
83 2 664 2 460 2 1283 2 582 4 885 2 281 2 507 2 88 2 1245 2 1083 2 1310 2 928 2 1122 2 34 2 765 2 528 6 600 2 208 2 494 2 1272 2 1187 2 271 2 986 2 
334 6 919 2 1077 2 664 3 854 2 297 3 1017 2 1283 4 1285 3 1113 2 201 2 203 2 1044 4 186 4 281 2 1118 2 507 10 88 2 161 2 1047 3 621 2 620 2 224 2 1029 4 549 2 700 4 954 2 40 4 494 2 291 2 825 4 1314 5 574 4 1315 2 1316 2 78 2 770 2 294 2 121 2 986 3 
334 6 1237 2 919 2 1077 2 664 2 854 2 297 2 1017 2 1283 4 1285 2 1113 2 201 2 203 2 1044 4 186 4 281 2 1118 2 112 2 507 10 88 2 161 2 1047 2 621 2 620 2 224 2 1029 4 549 2 700 4 601 2 954 2 40 4 494 2 291 2 825 4 1314 4 574 4 1315 2 1316 2 78 2 770 2 294 2 121 2 986 2 
334 6 1237 2 919 2 1077 2 664 2 854 2 297 2 1017 2 1283 4 1285 2 1113 2 201 2 203 2 1044 4 186 4 281 2 1118 2 112 2 507 10 88 2 161 2 1047 2 621 2 620 2 224 2 1029 4 549 2 700 4 601 2 954 2 40 4 494 2 291 2 825 4 1314 4 574 4 1315 2 1316 2 78 2 770 2 294 2 121 2 986 2 
334 6 1237 2 919 2 1077 2 664 2 854 2 297 2 1017 2 1283 4 1285 2 1113 2 201 2 203 2 1044 4 186 4 281 2 1118 2 112 2 507 10 88 2 161 2 1047 2 621 2 620 2 224 2 1029 4 549 2 700 4 601 2 954 2 40 4 494 2 291 2 825 4 1314 4 574 4 1315 2 1316 2 78 2 770 2 294 2 121 2 986 2 
334 6 1237 4 919 2 1077 2 664 2 854 2 297 2 1017 2 1283 4 1285 2 1113 2 201 2 203 2 1044 4 186 4 281 2 1118 2 112 4 507 10 88 2 161 2 1047 2 621 2 620 2 224 2 1029 4 549 2 700 4 601 4 954 2 40 4 494 2 291 2 825 4 1314 4 574 4 1315 2 1316 2 78 2 770 2 294 2 121 2 986 2 
1104 2 156 2 69 2 820 2 755 2 977 2 
156 2 792 2 389 2 1335 2 1248 2 63 2 51 2 
606 2 274 2 989 2 758 2 990 1 733 1 1283 8 690 2 245 2 903 2 503 2 994 2 1221 2 1137 2 632 2 507 10 491 2 430 1 386 2 1143 2 1269 1 679 2 824 2 1273 1 148 2 1188 2 
1237 1 620 2 549 2 240 2 106 2 954 2 242 2 1315 2 1314 5 116 2 1044 4 129 2 294 2 1118 2 218 4 744 2 161 2 
31 2 1277 2 558 2 580 2 355 2 700 2 541 2 646 2 825 2 186 2 799 2 89 2 219 2 
31 2 284 2 1277 2 558 6 580 2 355 2 700 2 892 1 1283 1 541 4 646 2 825 2 186 2 799 2 507 1 89 2 219 2 488 2 
31 2 284 2 1277 4 558 6 580 2 355 2 700 2 541 4 646 2 825 2 186 2 799 2 89 4 219 4 488 2 
31 2 284 8 1277 8 558 10 580 2 355 2 700 2 892 1 1283 1 541 4 646 2 825 2 186 2 799 2 507 1 89 8 219 8 488 6 
828 6 1011 2 438 4 439 14 1092 4 1258 4 1015 4 6 6 1019 2 280 4 87 4 1181 36 363 4 449 2 187 4 1103 4 192 4 293 4 534 4 933 1 1274 4 1191 4 771 4 686 2 374 2 609 2 610 4 1281 8 1036 6 22 8 301 6 1283 70 200 8 202 2 615 4 777 4 543 10 110 24 1115 10 302 4 946 2 694 10 695 24 697 4 698 2 35 4 36 16 1294 10 868 2 710 4 788 11 476 4 47 2 1056 4 401 2 1212 2 715 4 319 8 628 26 559 16 403 30 1305 8 882 4 718 16 563 2 320 2 970 4 1138 4 1140 102 1064 4 1226 2 1309 4 322 4 1230 10 143 4 803 24 1144 8 729 4 1071 4 1319 2 985 2 1322 4 807 8 1235 2 1323 2 60 2 1149 4 1239 4 811 32 65 2 812 10 583 8 813 6 158 2 249 4 427 4 995 6 996 44 342 4 507 78 1332 4 257 4 1086 28 73 2 165 2 264 4 168 10 267 4 435 4 273 16 
828 4 1135 10 1011 2 47 2 438 2 480 2 628 12 559 14 403 6 6 2 320 2 563 2 280 2 970 4 1140 40 1022 2 1064 2 136 2 322 2 1181 14 363 4 599 2 143 2 17 2 803 8 573 2 1319 2 985 2 1322 4 1190 2 1323 2 1235 2 1276 2 1191 4 686 2 607 2 609 2 610 2 301 2 1283 26 65 2 200 6 812 6 813 2 427 4 995 2 543 6 996 14 302 4 507 28 1086 12 1125 2 73 2 1294 6 1203 2 264 4 168 2 267 2 788 2 
828 8 917 24 1011 8 438 10 439 12 1092 4 1258 6 6 36 280 10 87 6 1022 8 598 4 13 18 1181 88 363 8 599 2 1103 6 192 4 17 4 290 2 293 6 534 6 1274 6 1190 2 1276 11 1191 6 685 24 937 90 771 4 686 8 607 2 375 4 609 4 610 6 1281 42 1036 5 301 10 1283 134 200 16 202 2 615 4 777 6 543 16 1045 10 110 92 943 26 616 4 944 4 302 6 946 2 695 84 698 2 35 4 36 42 1125 2 1293 4 1203 2 704 10 1294 16 1296 24 788 16 1135 22 790 2 47 2 715 6 628 58 559 28 403 34 1305 24 882 6 563 2 320 8 970 6 1138 4 1140 248 565 4 1064 4 1309 4 136 2 973 2 322 4 568 8 1068 4 143 10 803 124 412 12 573 4 1071 6 1145 4 414 6 1072 24 985 4 1322 6 807 50 1235 2 1323 2 59 26 234 4 60 2 1149 6 335 2 1239 4 1326 90 581 8 423 8 737 10 65 8 812 16 813 14 427 6 249 6 995 14 996 112 253 24 342 4 507 150 1332 6 257 4 1086 58 73 2 165 4 264 6 168 18 349 2 267 10 435 6 519 6 
917 2 312 2 828 6 830 2 125 2 1 2 1011 2 47 2 438 2 480 2 401 2 794 2 1173 2 628 6 559 36 6 2 763 2 1216 2 563 2 320 2 280 2 970 2 720 4 131 2 1140 48 840 2 673 2 136 2 283 2 568 2 1181 20 188 2 55 2 143 2 1230 2 1068 2 1067 6 803 6 229 4 1319 2 682 2 985 2 1322 2 1323 2 1235 2 1191 2 685 2 772 2 686 2 1150 2 374 2 610 2 301 2 1283 44 737 2 65 2 812 4 813 2 465 4 427 2 995 2 543 4 1045 2 1115 2 996 20 253 2 302 2 945 2 693 2 694 2 507 46 1119 2 745 2 1086 6 387 2 114 2 73 2 263 2 910 2 704 2 1165 2 1294 4 264 2 168 2 167 2 267 2 1170 2 351 2 659 2 788 2 625 4 
1079 2 
683 1 420 1 33 1 730 1 950 1 722 1 
683 1 420 1 33 1 730 1 950 1 722 1 
683 1 420 1 33 1 730 1 950 1 722 1 
683 1 420 1 33 1 730 1 950 1 722 1 
683 1 420 1 33 1 730 1 950 1 722 1 
683 1 420 1 33 1 730 1 950 1 722 1 
683 1 420 1 33 1 730 1 950 1 722 1 
683 1 420 1 33 1 730 1 950 1 722 1 
683 1 420 1 33 1 730 1 950 1 722 1 
683 1 420 1 33 1 730 1 950 1 722 1 
683 1 420 1 33 1 730 1 950 1 722 1 
683 1 420 1 33 1 730 1 950 1 722 1 
683 1 420 1 33 1 730 1 950 1 722 1 
683 1 420 1 33 1 730 1 950 1 722 1 
683 1 420 1 33 1 730 1 950 1 722 1 
683 1 420 1 33 1 730 1 950 1 722 1 
683 1 420 1 33 1 730 1 950 1 722 1 
683 1 420 1 33 1 730 1 950 1 722 1 
683 1 420 1 33 1 730 1 950 1 722 1 
683 1 420 1 33 1 730 1 950 1 722 1 
683 1 420 1 33 1 730 1 950 1 722 1 
683 1 420 1 33 1 730 1 950 1 722 1 
683 1 420 1 33 1 730 1 950 1 722 1 
683 1 420 1 33 1 730 1 950 1 722 1 
683 1 420 1 33 1 730 1 950 1 722 1 
683 1 420 1 33 1 730 1 950 1 722 1 
683 1 420 1 33 1 730 1 950 1 722 1 
683 1 420 1 33 1 730 1 950 1 722 1 
683 1 420 1 33 1 730 1 950 1 722 1 
683 1 420 1 33 1 730 1 950 1 722 1 
683 1 420 1 33 1 730 1 950 1 722 1 
683 1 420 1 33 1 730 1 950 1 722 1 
683 1 420 1 33 1 730 1 950 1 722 1 
683 1 420 1 33 1 730 1 950 1 722 1 
683 1 420 1 33 1 730 1 950 1 722 1 
683 1 420 1 33 1 730 1 950 1 722 1 
683 1 420 1 33 1 730 1 950 1 722 1 
683 1 420 1 33 1 730 1 950 1 722 1 
683 1 420 1 33 1 730 1 950 1 722 1 
683 1 420 1 33 1 730 1 950 1 722 1 
683 1 420 1 33 1 730 1 950 1 722 1 
683 1 420 1 33 1 730 1 950 1 722 1 
683 1 420 1 33 1 730 1 950 1 722 1 
683 1 420 1 33 1 730 1 950 1 722 1 

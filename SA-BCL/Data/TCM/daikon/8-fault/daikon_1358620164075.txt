#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.ClassCastException 326 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR utilMDE.Assert$AssertionException (753,1132) 682 198 600 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V FAILED junit.framework.AssertionFailedError 140 
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V ERROR java.lang.NullPointerException 860 1114 476 696 
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_0()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_1()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_2()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_3()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_4()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_5()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_6()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_7()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_8()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_9()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_10()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_11()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_12()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_13()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_14()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_15()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_16()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_17()V PASSED
daikon.test.split.SplitterFactoryTest:testmisc_Fib_main_18()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_19()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_20()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_21()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_22()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_23()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_24()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_25()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_26()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_27()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_28()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_29()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_30()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_31()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_32()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__33()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__34()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__35()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__36()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__37()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__38()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__39()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__40()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__41()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__42()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__43()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AdditiveExpression;)V
jtb.JavaParser:jj_3R_51()Z
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
jtb.JavaCharStream:getEndLine()I
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_69()Z
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:max([I)I
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.PptSlice0:arity()I
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
utilMDE.ArraysMDE:concat([I[I)[I
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.PptSlice1:arity()I
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
jtb.JavaParser:jj_3R_74()Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_133()Z
jtb.JavaParser:jj_3_15()Z
jtb.JavaParser:jj_3R_124()Z
jtb.JavaParser:jj_3R_72()Z
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
jtb.JavaParser:jj_3R_61()Z
jtb.JavaParser:jj_3R_87()Z
daikon.Quant:memberOf(I[I)Z
daikon.Quant:memberOf(J[J)Z
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3_13()Z
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
jtb.JavaParser:jj_3R_104()Z
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.test.TestQuant:removeAdjacentDups([I)[I
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
jtb.JavaParser:jj_3R_134()Z
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Statement;)V
jtb.JavaParser:jj_3R_136()Z
jtb.syntaxtree.VariableDeclaratorId:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_2_16(I)Z
daikon.Quant:eltwiseEqual([I)Z
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
jtb.Token:newToken(I)Ljtb.Token;
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Literal;)V
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:jj_3_18()Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PackageDeclaration;)V
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
jtb.JavaParser:jj_3R_100()Z
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameters;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.syntaxtree.NodeChoice:accept(Ljtb.visitor.Visitor;)V
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Name;)V
jtb.syntaxtree.TypeParameters:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
jtb.syntaxtree.BlockStatement:accept(Ljtb.visitor.Visitor;)V
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V | STATEMENT | 9545 | stmt -> ;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.syntaxtree.FormalParameter:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.Type:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;Ljava.lang.String;)V
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:sum([I)I
jtb.JavaParser:jj_3_21()Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariants:Invariants()V
jtb.JavaParser:jj_3R_121()Z
jtb.JavaParser:jj_3R_123()Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:mod_positive(II)I
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
jtb.JavaParser:jj_scan_token(I)Z
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_12()Z
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE:lsis_test(I)V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_53()Z
utilMDE.Intern:intern([I)[I
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.inv.unary.UpperBoundCore:calc_modulus()J
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
utilMDE.ArraysMDE:noDuplicates([J)Z
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
jtb.syntaxtree.RelationalExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.Quant:memberOf(F[D)Z
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_50()Z
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
jtb.JavaParser:jj_3R_116()Z
jtb.JavaParser:jj_3R_60()Z
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.diff.Node:getUserRight()Ljava.lang.Object;
jtb.JavaParser:jj_3R_119()Z
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
utilMDE.FuzzyFloat:eq(DD)Z
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_161()Z
utilMDE.Intern:intern([D)[D
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.Quant:lexGTE([I[I)Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
jtb.JavaParser:jj_3R_125()Z
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceBody:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.syntaxtree.NodeSequence:accept(Ljtb.visitor.Visitor;)V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:computeConfidence()D
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_149()Z
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object; | RETURN | 20735 | return null
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3_25()Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
jtb.JavaCharStream:ReadByte()C
daikon.PptSlice0:initInvariantsSeen()V
jtb.JavaParser:jj_3_14()Z
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_105()Z
jtb.JavaParser:jj_3R_49()Z
jtb.JavaParser:jj_3R_106()Z
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ShiftExpression;)V
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.Quant:pairwiseSquare([I[I)Z
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.VariableDeclaratorId:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_2_4(I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:eltsNotEqual([II)Z
daikon.inv.Invariant:justified()Z
jtb.JavaParser:jj_2_5(I)Z
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.VarInfo:relate_var()V
daikon.Quant:subsetOf([D[D)Z
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String; | CONSTANT | 15367 | 1 -> 0
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.VarInfoName.Simple:isLiteralConstant()Z
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.FuzzyFloat:lte(DD)Z
daikon.ModBitTracker:ModBitTracker(I)V
jtb.syntaxtree.TypeDeclaration:TypeDeclaration(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3R_120()Z
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.ProglangType:baseIsIntegral()Z
utilMDE.ArraysMDE:sum([[D)D
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.VarInfoName:simplify_name()Ljava.lang.String;
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_ntk()I
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
jtb.JavaParser:jj_3_28()Z
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryPrefix;)V
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.VarComparabilityImplicit:alwaysComparable()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
utilMDE.MathMDE:gcd(II)I
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:calc_modulus()J
jtb.JavaParser:jj_3R_148()Z
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3R_47()Z
daikon.Quant:pairwiseGTE([I[I)Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.Quant:concat([I[I)[I
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3_30()Z
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:internSubsequence([JII)[J
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeToken:trimSpecials()V
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
utilMDE.UtilMDE:lineNumberFileReader(Ljava.io.File;)Ljava.io.LineNumberReader;
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
jtb.JavaParser:jj_3R_99()Z
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName:toString()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NullLiteral;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReturnStatement;)V
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:lt(II)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeSequence;)V
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ExclusiveOrExpression;)V
daikon.VarInfoName.ElementsFinder:inPre()Z
jtb.JavaParser:jj_3R_77()Z
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.tools.jtb.Ast:getClassName(Ljtb.syntaxtree.Node;)Ljava.lang.String;
jtb.JavaParser:jj_3R_70()Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:ClassOrInterfaceDeclaration(Ljtb.syntaxtree.NodeChoice;Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ClassOrInterfaceBody;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.EqualityExpression;)V
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.OrderedPairIterator:setnext1()V
jtb.syntaxtree.UnaryExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
jtb.syntaxtree.NodeSequence:elements()Ljava.util.Enumeration;
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.Quant:eltwiseLT([I)Z
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaCharStream:readChar()C
daikon.Quant:eltsEqualIndex([I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.Quant:memberOf(F[F)Z
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.NodeOptional:accept(Ljtb.visitor.Visitor;)V
daikon.Ppt:Ppt()V
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.Quant:eq(DD)Z
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
utilMDE.Intern:internSubsequence([III)[I
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.Quant:pairwiseLT([I[I)Z
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3_35()Z
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V
daikon.VarInfoName:hashCode()I
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:subsetOf([F[F)Z
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.TypeArguments:TypeArguments(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeArgument;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.PptSlice0.ImplicationWrapper:hashCode()I
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
jtb.JavaParser:jj_3_19()Z
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3_29()Z
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
jtb.JavaParser:jj_3R_103()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
jtb.syntaxtree.MethodDeclarator:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfo:name()Ljava.lang.String;
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:new_ppt()V
jtb.JavaParser:jj_3_17()Z
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaCharStream:FillBuff()V
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.Quant:pairwiseLTE([I[I)Z
jtb.syntaxtree.TypeArgument:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.syntaxtree.NullLiteral:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ConditionalAndExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_2_10(I)Z
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_88()Z
jtb.JavaParser:jj_3R_80()Z
jtb.syntaxtree.ClassOrInterfaceBody:ClassOrInterfaceBody(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.Quant:pairwiseGT([I[I)Z
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
jtb.syntaxtree.AdditiveExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3_20()Z
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
jtb.JavaParser:jj_3R_101()Z
jtb.JavaParser:jj_2_35(I)Z
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.TypeArguments:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
utilMDE.MathMDE:missing_numbers([I)[I
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_96()Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.ConditionalOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
jtb.JavaParser:jj_3R_55()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_85()Z
jtb.JavaParser:jj_3_1()Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
utilMDE.MathMDE:gcd(JJ)J
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
jtb.syntaxtree.NodeList:NodeList()V
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
jtb.syntaxtree.PrimaryPrefix:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:lexEqual([I[I)Z
daikon.Quant:pairwiseDivides([I[I)Z
jtb.JavaParser:jj_3R_57()Z
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
utilMDE.FuzzyFloat:gt(DD)Z
jtb.syntaxtree.NodeListOptional:elements()Ljava.util.Enumeration;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ResultType;)V
daikon.Quant:lexLTE([I[I)Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.Quant:eltsGTE([II)Z
daikon.Quant:union([I[I)[I
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.diff.InvMap:toString()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.RootNode:RootNode()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.RelationalExpression;)V
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ImportDeclaration;)V
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
jtb.JavaParser:jj_3R_115()Z
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
daikon.Quant:lte(II)Z
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.MathMDE:nonmodulus_strict([I)[I
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
jtb.syntaxtree.NodeToken:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Modifiers;)V
daikon.Quant:eltwiseGTE([I)Z
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eltwiseNotEqual([I)Z
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_110()Z
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArgument;)V
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_52()Z
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
daikon.Quant:ne(II)Z
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalOrExpression;)V
daikon.Quant:slice([III)[I
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
jtb.syntaxtree.AndExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ExclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:eltwiseGT([I)Z
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
jtb.JavaParser:jj_3R_122()Z
daikon.diff.Node:Node()V
daikon.ValueTuple:tuplemodHasModified(I)Z
utilMDE.FuzzyFloat:gte(DD)Z
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.PptSlice2:arity()I
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:lexLT([I[I)Z
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
jtb.syntaxtree.FormalParameter:FormalParameter(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Type;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.JavaParser:jj_3R_56()Z
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.inv.unary.scalar.UpperBound:enabled()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalExpression;)V
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
jtb.syntaxtree.Modifiers:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.Quant:sameLength([I[I)Z
jtb.JavaParser:jj_2_14(I)Z
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Type;)V
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.InvariantFormatTester:execute()Z
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.BlockStatement;)V
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.EqualityExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.MathMDE:pow(II)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Block;)V
jtb.JavaParser:jj_2_25(I)Z
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaCharStream:BeginToken()C
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_2_21(I)Z
jtb.syntaxtree.PrimaryExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Expression;)V
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
utilMDE.ArraysMDE:sum([D)D
utilMDE.MathMDE:negate(I)I
jtb.syntaxtree.CompilationUnit:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.Node:add(Ljava.lang.Object;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeBound;)V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.Quant:eq(II)Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
jtb.JavaParser:jj_3R_163()Z
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
jtb.syntaxtree.TypeArgument:setParent(Ljtb.syntaxtree.Node;)V
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
utilMDE.FuzzyFloat:FuzzyFloat()V
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.diff.InvMap:InvMap()V
jtb.syntaxtree.NodeListOptional:present()Z
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakHasherMap:processQueue()V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
utilMDE.UtilMDE:lineNumberFileReader(Ljava.lang.String;)Ljava.io.LineNumberReader;
jtb.JavaParser:jj_3_5()Z
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase; | ASSIGN | 14799 | = null
jtb.JavaCharStream:GetImage()Ljava.lang.String;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_81()Z
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
jtb.JavaParser:jj_3R_67()Z
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.inv.Invariant:isWorthPrinting()Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;)V
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.JavaParser:jj_3R_109()Z
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_75()Z
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:bufPrintln()V
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.Quant:subsetOf([D[F)Z
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PostfixExpression;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeDeclaration;)V
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.ProglangType:dimensions()I
utilMDE.TestUtilMDE.1InternTest:test(Z)V
jtb.JavaParser:jj_3_16()Z
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InstanceOfExpression;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:min_max([I)[I
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
daikon.Quant:eltsLTE([II)Z
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:noDuplicates([I)Z
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_63()Z
daikon.PptName:isCombinedExitPoint()Z
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
jtb.syntaxtree.ResultType:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:noDups([I)Z
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.MultiplicativeExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:sum([[I)I
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_180()Z
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
jtb.JavaCharStream:getEndColumn()I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReferenceType;)V
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
jtb.JavaParser:jj_3R_89()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
jtb.syntaxtree.TypeBound:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:eltsLtIndex([I)Z
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
jtb.JavaParser:jj_3R_54()Z
daikon.Debug:logOn()Z
jtb.JavaParser:jj_2_36(I)Z
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.Quant:memberOf(D[F)Z
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;Z)Z
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.OrderedPairIterator:setnext2()V
jtb.JavaParser:VariableDeclaratorId()Ljtb.syntaxtree.VariableDeclaratorId;
utilMDE.WeakIdentityHashMap:indexFor(II)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryExpression;)V
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_73()Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
utilMDE.MathMDE:gcd([I)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameter;)V
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:jj_2_18(I)Z
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.Quant:lexNotEqual([I[I)Z
jtb.JavaParser:jj_3R_107()Z
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
utilMDE.MathMDE:pow_fast(II)I
daikon.inv.filter.InvariantFilter:InvariantFilter()V
utilMDE.WeakHasherMap:size()I
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptName:PptName(Ljava.lang.String;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpression;)V
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_162()Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:sorted([I)Z
jtb.JavaParser:jj_3R_76()Z
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameters;)V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.ProglangType:isIntegral()Z
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:FormalParameter()Ljtb.syntaxtree.FormalParameter;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.PptTopLevel:name()Ljava.lang.String;
utilMDE.SimpleLog:SimpleLog(Z)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:accept(Ljtb.visitor.Visitor;)V
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:gt(II)Z
jtb.JavaParser:jj_3R_137()Z
daikon.ValueTuple:size()I
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
jtb.JavaParser:jj_3R_98()Z
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.Quant:subsetOf([I[I)Z
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.unary.scalar.NonZero:is_pointer()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.CompilationUnit;)V
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.ProglangType:baseIsScalar()Z
jtb.syntaxtree.ReturnStatement:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.syntaxtree.Statement:accept(Ljtb.visitor.Visitor;)V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.Quant:lexGT([I[I)Z
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
jtb.JavaParser:jj_3R_169()Z
daikon.inv.Invariant:logDetail()Z
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.ArraysMDE:subarray([JII)[J
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.Quant:eltwiseLTE([I)Z
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ProglangType:elementType()Ldaikon.ProglangType;
jtb.syntaxtree.PostfixExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.Quant:pairwiseNotEqual([I[I)Z
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
jtb.syntaxtree.Block:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_117()Z
jtb.JavaParser:jj_3R_102()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
utilMDE.MathMDE:modulus([I)[I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;)V
utilMDE.LimitedSizeIntSet:add(I)V
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName:esc_name()Ljava.lang.String;
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:jj_3R_97()Z
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quant:gte(II)Z
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.Quant:subsetOf([B[I)Z
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:subsetOf([F[D)Z
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
jtb.JavaParser:jj_3R_62()Z
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3_4()Z
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.inv.filter.ParentFilter:ParentFilter()V
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InclusiveOrExpression;)V
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MultiplicativeExpression;)V
utilMDE.FuzzyFloat:ne(DD)Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaCharStream:backup(I)V
jtb.syntaxtree.NodeOptional:present()Z
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AndExpression;)V
daikon.VarInfoName:name()Ljava.lang.String;
jtb.JavaParser:jj_3R_86()Z
jtb.syntaxtree.ImportDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:subsetOf([J[J)Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.Invariant:getConfidence()D
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.inv.filter.InvariantFilters:InvariantFilters()V
utilMDE.FuzzyFloat:set_rel_diff(D)V
utilMDE.ArraysMDE:indexOf([II)I
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.filter.ObviousFilter:ObviousFilter()V
jtb.syntaxtree.ClassOrInterfaceDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:subsetOf([S[S)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.diff.Node:children()Ljava.util.Iterator;
utilMDE.ArraysMDE:fn_is_permutation([I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.inv.Invariant:logOn()Z
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.PptSlice1:num_samples()I
jtb.JavaParser:jj_3R_210()Z
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:eltsGteIndex([I)Z
jtb.syntaxtree.TypeDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
jtb.JavaParser:jj_3R_135()Z
daikon.Quant:intersection([I[I)[I
jtb.JavaParser:jj_2_17(I)Z
jtb.syntaxtree.InstanceOfExpression:accept(Ljtb.visitor.Visitor;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName:repr()Ljava.lang.String;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
jtb.JavaParser:jj_3_27()Z
jtb.syntaxtree.NodeListOptional:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
jtb.JavaParser:jj_3R_48()Z
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3_36()Z
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:prob_or(DD)D
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3_22()Z
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:isScalar()Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
jtb.syntaxtree.VariableDeclaratorId:VariableDeclaratorId(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.inv.Invariant:format()Ljava.lang.String;
utilMDE.Options.OptionInfo:argument_required()Z
utilMDE.FuzzyFloat:lt(DD)Z
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
utilMDE.ArraysMDE:fn_is_total([I)Z
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.Quant:eltsEqual([II)Z
daikon.Quant:memberOf(S[S)Z
jtb.JavaCharStream:getBeginColumn()I
jtb.syntaxtree.ReferenceType:accept(Ljtb.visitor.Visitor;)V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
jtb.syntaxtree.MethodDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.LimitedSizeIntSet:size()I
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;)V
daikon.Quant:setEqual([I[I)Z | CONDITION | 155109 | if (x) -> if (!x)
daikon.PptName:isEnterPoint()Z
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.FormalParameter:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
utilMDE.Intern:intern([J)[J
jtb.syntaxtree.PackageDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;)Z
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.tools.jtb.Ast:getParent(Ljava.lang.Class;Ljtb.syntaxtree.Node;)Ljtb.syntaxtree.Node; | CONDITION | 30878 | if (x) -> if (!x)
jtb.syntaxtree.TypeParameter:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
utilMDE.MathMDE:sign(I)I
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
jtb.syntaxtree.ClassOrInterfaceBody:accept(Ljtb.visitor.Visitor;)V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.Quant:eltsGtIndex([I)Z
daikon.inv.unary.LowerBoundCore:calc_range()J
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_2_15(I)Z
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:subarray([III)[I
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_68()Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.diff.Node:Node(LutilMDE.Pair;)V
jtb.JavaParser:getToken(I)Ljtb.Token;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3_10()Z
daikon.inv.Invariant:prob_and(DDD)D
jtb.JavaParser:jj_2_3(I)Z
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
utilMDE.Assert:assertTrue(Z)V
jtb.syntaxtree.Expression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArguments;)V
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_164()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3_3()Z
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.FormalParameters:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.TypeArguments:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:element_range([I)I
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_126()Z
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
jtb.JavaParser:jj_3R_118()Z
jtb.syntaxtree.Name:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.Quant:eltsLT([II)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
jtb.syntaxtree.TypeDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_108()Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.SimpleLog.LongVal:LongVal(J)V
utilMDE.Intern:numIntArrays()I
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
jtb.JavaParser:jj_3R_114()Z
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:min([I)I
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.Debug:logDetail()Z
daikon.Quant:eltsLteIndex([I)Z
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
jtb.syntaxtree.ConditionalExpression:accept(Ljtb.visitor.Visitor;)V
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
jtb.JavaParser:jj_2_12(I)Z
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
jtb.syntaxtree.ClassOrInterfaceType:accept(Ljtb.visitor.Visitor;)V
daikon.inv.Invariant:prob_and(DD)D
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
utilMDE.MathMDE:gcd_differences([I)I
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclarator;)V
daikon.inv.ValueSet:ValueSet(I)V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
jtb.JavaCharStream:getBeginLine()I
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.config.Configuration:apply(Ljava.lang.String;)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
jtb.syntaxtree.CompilationUnit:CompilationUnit(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName:isLiteralConstant()Z
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.test.TestAst.ClassOrInterfaceDeclarationHarvester:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
jtb.JavaParser:jj_2_13(I)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.syntaxtree.Literal:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.ProglangType:isArray()Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.InclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.Quant:isReverse([I[I)Z
daikon.Quant:eq(FF)Z
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
jtb.syntaxtree.ShiftExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:pairwiseEqual([I[I)Z
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalAndExpression;)V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.ProglangType:isPseudoArray()Z
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.Quant:eq(JJ)Z
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
daikon.Quant:eltsGT([II)Z
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
jtb.JavaParser:jj_3R_58()Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBody;)V
daikon.Quant:setDiff([I[I)[I
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_2_1(I)Z
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
utilMDE.OrderedPairIterator:hasNext()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
25 2 906 2 753 2 1058 2 135 2 812 2 622 2 1068 4 1132 2 
439 6 337 6 651 2 32 2 390 2 793 6 1041 2 85 2 1165 2 1306 2 1186 2 
677 4 829 6 376 2 795 6 1237 4 1132 2 679 6 516 6 422 2 801 2 753 2 89 2 188 2 
236 8 139 6 888 2 1085 2 607 30 304 2 678 10 1146 10 1200 2 1089 8 289 2 1109 4 1297 12 1172 26 1054 8 1235 4 564 4 80 16 1132 6 731 10 366 2 387 10 617 2 753 6 300 16 1067 8 88 4 1082 6 1004 10 1180 16 
1288 6 1239 4 
1126 2 
236 2 139 2 607 6 678 2 1182 2 819 2 1146 4 779 2 707 2 143 2 261 2 1297 2 1172 4 129 2 564 2 80 2 731 2 387 2 733 2 774 2 300 2 1004 2 1180 2 
607 15 678 4 482 2 80 8 731 4 387 4 799 6 121 2 300 8 88 2 1052 4 1004 4 149 4 1297 6 1180 8 1172 12 759 6 
20 6 817 2 474 62 528 2 2 8 142 4 744 4 931 4 145 2 612 2 1123 2 666 2 747 2 935 2 805 2 1154 4 128 14 1231 10 362 2 464 2 1302 4 938 4 269 10 1094 2 589 4 1131 2 697 2 1019 2 632 2 61 2 975 2 903 4 1001 4 738 4 18 4 904 2 136 2 776 4 1215 4 114 2 
1181 2 1126 2 290 2 1050 2 184 2 850 2 943 2 852 2 815 2 1284 2 
948 2 304 2 608 2 2 2 94 2 145 2 1183 2 7 2 765 2 441 2 150 2 1154 2 917 4 14 2 692 2 520 2 616 2 63 2 1193 2 622 2 235 2 166 2 282 2 744 4 119 2 284 2 967 4 1291 2 1047 2 824 4 1125 2 1170 2 245 2 1053 2 830 2 631 2 752 2 1132 4 420 2 84 2 834 2 753 4 978 2 301 2 
489 4 236 16 392 2 139 4 1085 2 607 54 678 16 1146 6 377 6 706 4 491 2 799 6 1124 6 1226 4 863 6 1052 4 1294 2 175 4 1172 48 1297 22 149 4 191 4 564 2 80 32 1132 4 731 16 387 16 634 2 388 2 753 4 300 32 1213 6 1067 6 1082 4 1004 16 1180 32 758 8 759 6 
20 2 2 2 697 2 
948 2 927 2 238 2 715 2 610 2 502 2 966 2 239 2 172 22 942 10 98 2 1051 2 559 2 845 2 
760 2 1070 2 1142 3 0 1 440 2 96 32 1150 2 442 2 189 1 360 6 843 16 1230 2 446 3 11 3 266 2 1234 2 1236 2 694 3 1157 1 449 2 698 2 196 2 450 2 1000 2 199 2 372 2 19 2 929 2 203 2 457 2 1248 2 379 2 458 1 1249 1 1088 2 1252 16 25 2 1253 1 288 2 123 2 383 4 1012 6 30 2 124 4 291 24 127 2 1093 1 463 2 1176 2 211 2 786 2 1016 2 296 2 713 2 542 2 213 8 635 2 1263 6 546 4 1021 6 637 2 302 5 468 2 41 2 641 3 874 16 470 2 48 2 305 4 951 12 221 2 1103 2 1274 2 54 2 394 2 878 2 146 2 1033 2 1278 2 648 2 316 3 1108 2 803 4 560 2 881 8 727 2 958 2 55 2 730 4 810 2 399 2 228 2 883 2 1188 3 961 2 1189 2 568 2 486 2 811 1 159 2 1040 2 1113 2 657 1 162 1 739 2 963 2 740 24 1117 2 1118 1 1289 3 816 2 167 1 333 2 821 2 1119 4 895 2 581 2 663 1 336 1 1201 2 410 12 240 2 494 1 968 2 664 1 74 3 1048 3 746 3 414 2 1049 2 825 2 244 32 1206 2 76 2 970 2 1056 2 971 2 1132 32 592 3 833 2 595 8 1134 4 1135 2 1065 16 753 34 1138 2 508 2 349 2 675 1 
1032 2 
753 2 1203 2 
1210 2 1128 2 753 4 
676 44 350 246 3 246 986 4 681 2 5 2 6 4 359 50 683 52 684 20 687 2 10 94 12 28 690 2 364 2 693 86 992 2 993 2 997 2 699 2 700 4 16 12 701 4 373 2 374 2 1006 22 1007 4 1009 2 704 2 1010 2 705 30 381 2 382 4 711 2 710 2 1013 16 1014 2 384 46 31 2 1015 86 33 12 712 2 35 2 1017 4 36 4 37 6 38 2 39 2 1023 2 1024 2 43 4 42 4 391 2 46 2 47 2 1027 2 49 42 53 22 393 4 1029 2 395 2 1031 2 722 2 726 50 397 2 1036 30 728 2 729 2 56 2 1038 2 400 2 402 2 62 4 734 4 737 2 1042 2 404 2 405 2 67 4 407 2 408 94 69 2 70 2 71 2 409 2 72 4 1046 2 411 4 413 4 415 2 75 94 748 2 417 2 416 2 77 2 418 2 749 4 1055 2 79 2 81 2 1061 94 83 2 1062 12 1064 2 424 6 755 2 426 2 87 2 757 2 428 2 430 12 431 2 761 2 432 4 93 4 434 2 435 2 95 54 436 2 764 2 767 2 768 4 99 2 100 4 444 2 445 2 769 2 101 4 1074 2 103 4 104 2 770 94 447 2 107 2 1077 4 108 6 771 12 452 2 775 2 453 2 1081 4 454 2 1083 2 113 4 1084 74 777 16 116 42 778 2 120 2 782 4 1090 2 1091 6 784 2 1092 96 125 18 462 6 126 18 785 4 787 2 130 358 788 2 132 16 133 2 792 2 1096 2 1098 2 1099 2 467 14 469 2 794 2 138 4 471 4 796 2 473 4 472 12 475 2 1104 2 1106 4 798 2 1105 2 800 2 477 2 480 4 152 2 151 2 806 6 481 4 808 2 155 4 158 2 160 4 164 18 163 36 814 2 165 2 488 4 1116 14 490 8 822 2 170 18 1122 4 493 2 497 4 173 8 174 4 828 56 1127 8 499 2 1129 2 179 2 181 2 1133 2 503 34 832 4 183 56 835 18 505 2 837 90 838 2 1139 6 840 2 1141 2 186 2 1143 2 187 6 1147 2 841 2 1148 4 518 2 519 4 1151 48 1152 44 190 2 193 2 521 2 195 246 849 2 197 22 523 2 525 2 853 2 857 2 1159 2 859 2 204 2 1162 18 205 4 1163 4 529 4 530 96 531 4 206 2 861 2 1167 2 862 6 535 2 208 2 209 8 538 2 539 6 1171 2 1173 2 1174 2 540 6 866 2 867 2 543 4 544 2 869 6 1178 2 214 4 871 2 215 2 216 10 1179 2 548 2 873 4 551 8 218 2 552 2 553 2 875 2 220 4 222 2 877 2 225 2 556 18 1184 94 561 2 880 8 1187 2 565 2 884 2 1191 2 886 4 569 2 573 2 1196 2 577 2 891 2 894 2 896 48 241 2 582 2 242 18 583 4 243 2 1205 2 898 62 900 2 584 2 1207 8 587 2 901 18 588 94 590 4 902 2 594 12 596 6 1209 16 597 2 1211 2 248 2 249 44 1214 94 602 2 251 2 603 2 252 2 905 2 605 2 1217 4 255 2 258 2 909 4 910 14 613 2 260 2 614 2 1229 2 915 2 1232 94 264 50 265 2 268 4 274 16 275 2 618 94 924 2 1240 2 277 2 925 2 926 2 621 62 278 4 928 2 1246 2 625 2 1247 12 624 2 1250 2 933 2 286 2 1254 2 629 2 292 8 293 2 630 62 937 2 297 2 1255 2 1256 2 1258 4 939 2 1260 30 940 2 633 2 941 2 1264 2 636 104 944 2 945 94 946 50 639 4 1269 2 950 2 307 2 952 2 308 2 310 2 644 2 312 2 953 2 1277 42 314 56 646 4 957 74 655 2 321 4 322 2 324 2 326 2 327 2 1286 4 659 4 334 2 662 4 335 2 1293 2 338 2 1298 2 1301 4 1300 2 670 2 973 2 1303 2 341 2 345 56 672 86 979 4 980 2 1305 2 348 2 
650 2 897 2 667 1 593 2 
650 2 998 2 
21 2 1075 2 2 2 283 2 
21 2 1075 2 2 2 283 2 513 2 60 2 
650 2 1299 2 1075 2 2 2 1109 2 44 2 
762 2 752 2 
1075 2 2 2 549 2 1109 2 
1282 2 526 2 
512 2 313 2 
914 2 1166 2 
858 2 750 2 
858 2 313 2 571 2 
858 2 506 2 313 2 
858 2 313 2 882 2 
177 2 858 2 313 2 
406 6 2 2 1295 2 178 2 1075 2 368 2 369 2 1268 6 
545 2 311 2 
650 2 1075 2 1008 2 2 2 60 2 1109 2 44 2 
1072 2 44 2 
650 2 44 2 865 2 
545 2 593 2 1261 2 
650 2 44 2 
545 2 1059 2 
650 2 223 2 
545 2 593 2 1266 2 
914 2 371 2 593 2 
423 2 858 2 593 2 
526 2 443 2 593 2 
313 2 593 2 279 2 
545 2 73 2 
650 2 534 2 
347 2 914 2 
858 2 890 2 
526 2 554 2 
313 2 532 2 
545 2 351 2 
996 2 313 2 
1101 2 526 2 
858 2 1199 2 
783 2 914 2 
545 2 495 2 593 2 1266 2 
545 2 495 2 813 2 593 2 1266 2 
545 2 496 2 593 2 
545 2 210 2 593 2 
578 2 507 2 250 2 669 2 
45 2 353 2 363 4 918 2 157 2 1060 2 959 2 1280 2 385 2 789 2 229 2 974 2 921 2 716 2 1262 2 172 6 954 4 1026 2 
320 2 593 2 
958 2 
760 2 763 2 0 4 96 4 1150 2 442 2 360 6 843 6 1230 2 846 2 106 2 365 2 449 2 698 2 196 2 619 2 620 2 1243 2 372 2 19 2 457 1 24 2 25 2 383 4 1012 5 29 2 30 2 124 4 211 2 786 2 868 2 542 2 213 2 635 1 1263 2 1021 2 1265 2 637 2 470 2 305 2 951 8 221 2 394 2 878 4 555 2 1033 2 725 2 803 4 153 2 55 2 730 4 810 2 228 2 399 2 159 2 1040 6 1118 2 580 2 816 2 1044 4 821 2 333 2 1119 2 336 2 240 2 410 8 414 2 1049 2 244 6 1206 2 500 4 1132 26 1134 2 1135 2 753 26 1138 2 1137 2 508 2 
760 2 763 2 96 4 1150 2 442 2 912 2 360 6 843 6 1230 2 846 2 106 2 365 2 449 2 698 2 196 2 1243 2 372 2 19 2 457 2 24 2 25 2 383 4 1012 6 29 2 30 2 124 4 211 2 786 2 868 2 542 2 1257 2 213 2 635 2 1263 2 1021 2 1265 2 637 2 470 2 305 2 951 8 221 2 394 2 878 4 555 2 1033 2 725 2 803 4 153 2 55 2 730 4 810 2 228 2 399 2 159 2 1040 6 1118 2 892 2 816 2 1044 4 821 2 333 2 1119 2 336 2 240 2 410 8 414 2 1049 2 244 6 1206 2 970 2 500 4 1132 26 1134 2 1135 2 753 26 1138 2 1137 2 508 2 
271 2 
772 2 168 2 
1216 2 1219 2 983 4 985 2 4 2 1222 8 517 4 645 4 439 6 557 4 1073 2 360 4 651 4 919 2 615 8 730 2 810 2 448 2 485 2 1238 2 698 2 367 2 451 2 851 10 487 2 1080 2 233 2 65 2 455 2 19 2 329 2 821 2 333 2 169 2 237 2 23 2 1121 4 745 2 337 6 1168 2 240 2 412 2 969 2 124 2 899 2 32 2 1130 2 501 2 1132 6 85 2 1304 2 465 2 671 2 977 4 753 12 1138 2 793 6 756 2 510 2 1306 4 
1216 2 1219 2 983 4 985 2 4 2 1222 8 517 4 645 4 439 8 557 4 360 4 651 4 227 2 919 2 730 2 615 8 810 2 448 2 485 2 1238 2 698 2 367 2 451 2 851 10 487 2 1080 2 233 2 65 2 1285 2 19 2 455 2 329 2 821 2 333 2 169 2 237 2 23 2 1121 4 1165 2 745 2 1168 2 337 6 240 2 627 4 412 2 969 2 124 2 899 2 32 2 1130 2 501 2 1132 6 85 2 1304 2 465 2 671 2 977 4 753 12 1138 2 793 8 510 2 1306 4 
651 2 1219 2 237 2 501 2 448 2 485 2 517 4 367 2 1304 2 671 2 977 2 337 2 557 4 487 2 793 2 65 2 1306 2 899 2 
1216 2 1219 2 983 4 985 2 4 2 1222 4 517 4 645 4 439 6 557 4 1073 2 360 4 651 4 919 2 615 4 730 2 810 2 448 2 485 2 1238 2 698 2 367 2 451 2 851 6 487 2 1080 2 233 2 65 2 455 2 19 2 329 2 821 2 333 2 169 2 237 2 23 2 1121 4 1165 2 745 2 337 4 1168 2 240 2 412 2 969 2 124 2 899 2 1130 2 501 2 1132 6 85 2 1304 2 465 2 671 2 977 4 753 12 1138 2 793 6 756 2 510 2 1306 4 
1216 2 1219 2 983 4 985 2 4 2 1222 4 517 4 645 4 439 6 557 4 1073 2 1186 2 360 4 651 4 919 2 615 4 730 2 810 2 448 2 485 2 1238 2 698 2 367 2 451 2 851 6 487 2 1080 2 233 2 65 2 455 2 19 2 329 2 821 2 333 2 169 2 237 2 23 2 1121 4 745 2 337 6 1168 2 240 2 412 2 969 2 124 2 899 2 1130 2 501 2 1132 6 85 2 1304 2 465 2 671 2 977 4 753 12 1138 2 793 4 756 2 510 2 1306 4 
1216 2 1219 2 983 4 985 2 4 2 1222 4 517 4 645 4 439 6 557 4 1073 2 360 4 651 4 919 2 615 8 730 2 810 2 448 2 485 2 1238 2 698 2 367 2 451 2 851 6 487 2 1080 2 233 2 65 2 455 2 19 2 329 2 821 2 333 2 169 2 237 2 23 2 1121 4 745 2 337 6 1168 2 240 2 412 2 969 2 124 2 899 2 32 2 1130 2 501 2 1132 6 85 2 1304 2 465 2 671 2 977 4 753 12 1138 2 793 6 756 2 510 2 1306 4 
1216 2 1219 2 983 4 985 2 4 2 1222 8 517 4 645 4 439 8 557 4 1073 2 1186 2 360 4 651 4 919 2 615 8 730 2 810 2 448 2 485 2 1238 2 698 2 367 2 451 2 851 10 487 2 1080 2 233 2 65 2 455 2 19 2 329 2 821 2 333 2 169 2 237 2 23 2 1121 4 745 2 337 8 1168 2 240 2 412 2 969 2 124 2 899 2 32 2 1130 2 501 2 1132 6 85 2 1304 2 465 2 671 2 977 4 753 12 1138 2 793 6 756 2 510 2 1306 4 
1216 2 1219 2 983 4 985 2 4 2 1222 8 517 4 645 4 439 6 557 4 1073 2 360 4 651 4 919 2 615 8 730 2 810 2 448 2 485 2 1238 2 698 2 367 2 451 2 851 10 487 2 1080 2 233 2 65 2 455 2 19 2 329 2 821 2 333 2 169 2 237 2 23 2 1121 4 745 2 337 6 1168 2 240 2 412 2 969 2 124 2 899 2 32 2 1130 2 501 2 1132 6 85 2 1304 2 465 2 671 2 977 4 753 12 1138 2 793 6 756 2 510 2 1306 4 
511 2 982 10 1 2 983 4 985 2 4 2 517 4 990 2 686 2 360 6 843 6 1155 2 689 6 991 6 15 2 695 2 194 2 698 2 367 2 848 2 851 2 19 2 372 2 375 2 23 2 1164 6 207 2 25 2 1168 2 383 4 1012 6 29 4 714 2 213 2 1020 4 1021 2 718 2 221 2 394 2 224 4 1032 6 555 2 557 4 1034 6 1186 4 226 2 55 2 730 4 228 2 59 6 885 2 1040 6 233 2 887 2 65 2 1195 1 237 2 1198 2 745 2 240 2 410 4 1202 6 412 2 1203 6 414 2 1049 2 244 8 1206 2 899 2 585 6 246 2 419 6 85 4 1210 6 753 46 1066 2 1069 6 1216 2 1219 2 1221 2 1223 1 611 2 439 12 96 2 97 2 442 2 1073 2 1228 1 1230 2 1233 2 106 2 919 2 615 2 448 2 1238 2 449 2 273 6 451 2 1080 2 1242 2 1243 2 455 2 457 2 1086 2 780 2 285 2 287 1 124 4 936 1 786 12 635 2 465 2 1263 2 637 2 793 4 1102 6 797 2 305 2 951 4 643 8 645 6 478 2 147 1 803 4 955 2 651 4 810 2 485 2 1112 7 962 6 487 2 329 4 816 2 818 7 821 2 333 2 1119 2 169 4 1121 8 965 1 337 8 969 2 1296 6 340 1 972 1 1130 2 500 4 501 2 1132 24 1304 2 1134 2 671 2 977 4 1135 2 1138 2 508 2 509 2 510 2 1306 4 1140 2 
511 2 1216 2 982 10 1219 2 254 2 1 2 983 4 1221 2 985 2 4 2 611 2 517 4 96 2 439 12 97 2 442 2 1073 2 990 2 686 2 843 6 360 6 1230 2 1155 2 1233 2 689 6 106 2 991 6 919 2 695 2 15 2 615 6 194 2 448 2 449 2 1238 2 273 6 367 2 698 2 848 2 451 2 851 2 1080 2 1242 2 1243 2 455 2 372 2 19 2 375 2 457 2 1086 2 1164 6 23 2 780 2 207 2 25 2 285 2 1168 2 383 4 29 4 1012 6 124 4 786 12 32 4 714 2 213 2 1020 4 465 2 635 2 1263 2 1021 2 793 8 637 2 1102 6 797 2 305 4 718 2 951 8 221 2 394 2 224 4 643 8 645 6 1032 6 878 2 555 2 478 2 557 4 1034 6 955 2 803 4 226 2 651 4 55 2 730 4 810 2 59 6 228 2 485 2 885 2 1040 6 962 6 487 2 233 2 887 2 65 2 329 4 816 2 333 2 821 2 169 4 1119 4 237 2 1121 8 1198 2 745 2 337 8 410 8 240 2 1202 6 1203 6 412 2 969 2 414 2 1049 2 1296 6 244 8 1206 2 899 2 585 6 246 2 419 6 500 4 1130 2 501 2 1132 26 85 4 1134 4 1304 2 671 2 977 4 1135 2 1210 6 753 48 1138 2 1066 2 508 2 509 2 427 2 510 2 1140 2 1306 4 1069 6 
511 2 1216 2 982 10 1219 2 254 2 1 2 983 4 1221 2 985 2 4 2 1222 4 611 2 517 4 96 2 439 12 97 2 442 2 1073 2 990 2 686 2 843 6 360 6 1230 2 1155 2 1233 2 689 6 106 2 991 6 919 2 695 2 15 2 615 6 194 2 448 2 449 2 1238 2 273 6 367 2 698 2 848 2 451 2 851 6 1080 2 1242 2 1243 2 455 2 372 2 19 2 375 2 457 2 1086 2 1164 6 23 2 780 2 207 2 25 2 285 2 1168 2 383 4 29 4 1012 6 124 4 786 12 32 4 714 2 213 2 1020 4 465 2 635 2 1263 2 1021 2 793 8 637 2 1102 6 797 2 305 4 718 2 951 8 221 2 394 2 224 4 643 8 645 6 1032 6 878 2 555 2 478 2 557 4 1034 6 955 2 803 4 226 2 651 4 55 2 730 4 810 2 59 6 228 2 485 2 885 2 1040 6 962 6 487 2 233 2 887 2 65 2 329 4 816 2 333 2 821 2 169 4 1119 4 237 2 1121 8 1198 2 745 2 337 8 240 2 410 8 1202 6 1203 6 412 2 969 2 414 2 1049 2 1296 6 244 8 1206 2 899 2 585 6 246 2 419 6 500 4 1130 2 501 2 1132 26 85 4 1134 4 1304 2 671 2 977 4 1135 2 1210 6 753 48 1138 2 1066 2 508 2 509 2 427 2 510 2 1140 2 1306 4 1069 6 
511 2 982 8 1 2 983 4 514 6 985 2 4 2 1149 2 517 4 990 2 686 2 360 6 843 8 1155 2 689 6 13 2 991 12 15 2 695 2 194 2 522 6 367 2 698 2 848 2 851 6 19 2 372 2 375 2 23 2 1164 6 1165 2 207 2 25 2 1168 2 383 4 1012 6 29 4 32 4 714 2 213 4 1020 4 1021 4 1028 2 221 2 52 2 394 2 224 4 1032 12 878 2 555 4 557 4 1034 6 1186 2 226 2 398 6 55 2 730 4 228 2 59 6 885 2 1040 8 233 2 887 2 65 2 1197 2 237 2 1198 2 745 2 410 10 240 2 1202 6 412 2 1203 12 414 2 1049 2 244 12 1206 2 899 2 585 6 246 2 419 12 586 2 82 6 85 4 1210 12 753 52 1066 2 427 2 1069 6 1216 2 91 6 1219 2 254 2 1221 2 1222 4 1224 6 611 2 439 16 96 4 97 2 442 2 1073 2 1230 2 1233 2 106 2 919 2 615 6 448 2 1238 2 449 2 273 6 451 2 1080 2 1242 2 1243 2 455 2 457 2 1086 2 780 2 285 2 124 4 786 10 131 2 635 2 465 2 1263 4 637 2 793 10 1102 6 797 2 305 4 951 10 144 6 643 8 1107 6 645 6 478 2 803 4 955 2 651 4 810 2 485 2 962 6 487 2 329 4 816 2 333 2 821 2 1119 4 169 4 1121 8 337 10 969 2 827 2 1296 12 1130 2 500 6 501 2 1132 24 1304 2 1134 4 671 2 977 4 1135 2 1138 2 185 6 508 2 509 2 510 2 1306 4 1140 2 
1216 2 1219 2 983 2 1121 2 985 2 1222 4 517 2 745 2 645 2 439 4 1168 2 337 6 557 2 969 2 1073 2 651 4 32 2 919 2 615 6 1130 2 501 2 448 2 85 2 1238 2 367 2 1304 2 671 2 465 2 851 4 753 4 233 2 793 6 65 2 1306 4 455 2 
1216 2 982 2 1219 2 983 2 256 2 985 2 517 2 439 4 96 3 442 2 1073 2 360 6 843 6 1230 2 106 2 919 2 615 6 448 2 1238 2 449 2 698 2 367 2 851 2 199 2 1243 2 19 2 372 2 455 2 457 2 118 2 533 2 25 2 1168 2 383 4 28 2 1012 6 29 2 124 4 32 2 786 4 465 2 635 2 1263 3 1021 3 793 6 637 2 1022 2 718 2 221 2 394 2 645 2 557 2 721 3 803 4 651 4 958 2 55 2 730 4 810 2 228 2 961 2 1040 6 1113 2 233 2 65 2 816 2 333 2 821 2 1121 2 745 2 337 6 240 2 969 2 414 2 244 8 1206 2 500 4 1130 2 501 2 1132 24 85 2 1304 2 671 2 1135 2 753 28 1138 2 508 2 510 2 1306 4 
1097 2 919 2 1238 2 
1097 2 919 2 1238 2 
511 2 1216 2 982 2 0 1 983 2 985 2 4 2 1222 4 515 2 517 2 96 2 439 16 442 2 1153 2 360 6 843 2 1230 2 106 2 1076 2 919 4 615 6 1238 6 698 2 851 6 1080 2 1243 2 372 2 19 2 457 2 780 2 1165 4 25 2 383 4 1012 6 29 6 536 2 124 4 1175 2 786 4 32 4 1020 2 635 2 1097 2 1265 4 637 2 793 12 141 2 1271 2 305 4 951 4 221 2 719 4 394 2 224 2 645 4 557 2 1185 2 803 4 148 2 1186 4 1035 2 651 4 55 2 730 4 810 2 228 2 485 2 230 2 1040 2 962 2 570 2 487 2 64 2 325 4 66 2 329 4 816 2 821 2 333 2 169 2 1119 4 964 2 1121 4 337 12 410 4 240 2 412 2 414 2 1049 4 244 2 1206 2 501 2 1132 16 85 4 1134 4 1304 2 671 4 977 4 1135 2 753 24 1138 2 1066 2 508 2 674 2 839 2 1306 4 
1175 2 982 2 786 2 1076 2 1086 2 237 2 1221 2 1063 2 1132 2 224 2 1030 2 772 2 962 2 753 4 1292 2 674 2 19 2 
511 2 1216 2 983 2 985 2 4 2 1222 4 515 2 517 2 96 4 439 16 442 2 360 6 843 2 1230 2 106 2 1076 2 919 4 615 6 1238 6 698 2 451 2 851 6 1080 2 1243 2 372 2 19 2 457 2 780 2 1165 4 25 2 1011 2 383 4 1012 6 29 6 536 2 124 4 1175 2 786 2 32 4 386 2 1020 2 635 2 1097 2 1265 4 637 2 793 12 141 2 1271 2 305 4 951 4 221 2 719 4 394 2 645 4 557 2 1185 2 803 4 148 2 1186 4 651 4 563 2 55 2 730 4 810 2 228 2 485 2 230 2 1190 2 1040 2 962 2 487 2 325 4 66 2 1287 2 329 4 816 2 821 2 333 2 169 4 1119 4 964 4 1121 4 337 12 410 4 240 2 412 2 414 2 1049 4 244 2 1206 2 501 2 1132 16 85 4 1134 4 1304 2 671 4 977 4 1135 2 753 24 1138 2 1066 2 508 2 674 2 839 2 1306 4 
511 2 1216 2 982 2 0 1 983 2 985 2 4 2 1222 4 515 2 517 2 96 2 439 16 442 2 360 6 843 2 1230 2 106 2 1076 2 919 4 615 6 1238 6 698 2 451 2 851 6 1080 2 1243 2 372 2 19 2 1245 2 457 2 780 2 1165 4 25 2 383 4 1012 6 29 6 536 2 124 4 1175 2 786 4 32 4 1020 2 635 2 1097 2 1265 4 637 2 793 12 141 2 1271 2 305 4 951 4 221 2 719 4 394 2 224 2 645 4 557 2 1185 2 803 4 148 2 1186 4 318 2 651 4 55 2 58 2 730 4 810 2 228 2 485 2 230 2 1040 2 962 2 487 2 325 4 66 2 329 4 816 2 821 2 333 2 169 4 1119 4 964 2 1121 4 337 12 410 4 240 2 412 2 414 2 1049 4 244 2 1206 2 1057 2 751 2 501 2 1132 16 85 4 1134 4 1304 2 671 4 977 4 1135 2 753 24 1138 2 1066 2 508 2 674 2 839 2 1306 4 
221 2 394 2 682 2 442 2 803 4 843 2 360 6 1230 2 55 2 652 2 730 4 810 2 228 2 566 2 567 2 847 2 698 2 1040 2 198 2 1243 2 370 2 372 2 19 2 1244 2 1161 2 816 2 457 2 821 2 333 2 25 2 240 2 383 4 29 2 414 2 1012 6 668 2 864 2 124 4 244 2 1206 2 498 2 786 2 1132 16 635 2 343 2 1135 2 753 22 1138 2 508 2 637 2 600 2 
609 2 1225 2 709 3 781 2 96 3 259 2 555 6 461 2 244 2 843 2 562 2 809 4 500 2 298 2 960 2 1132 2 449 2 1079 2 342 1 134 2 1040 2 1263 3 753 2 1021 3 1115 2 
609 2 1225 2 709 2 781 2 96 2 259 2 555 6 461 2 244 2 843 2 562 2 809 4 500 2 298 2 960 2 1132 2 449 2 1079 2 134 2 1040 2 1263 2 753 2 1021 2 1115 2 
609 2 1225 2 709 2 781 2 96 2 259 2 555 6 461 2 244 2 843 2 562 2 809 4 500 2 298 2 960 2 1132 2 449 2 1079 2 134 2 1040 2 1263 2 753 2 1021 2 1115 2 
253 4 702 2 1270 3 607 4 678 2 893 4 1252 2 1275 2 96 3 26 3 989 2 461 2 244 2 1172 4 212 2 1111 2 1259 4 80 2 1132 4 731 2 109 2 387 2 449 2 732 4 1039 2 922 2 1263 3 735 3 753 10 17 4 300 2 1067 4 111 2 872 2 640 2 1082 2 981 6 1004 2 1180 2 874 2 
236 2 253 4 702 2 1270 2 1085 2 607 4 678 2 893 4 1252 2 1275 2 96 2 26 2 989 2 461 2 244 2 1297 2 1172 4 212 2 1111 2 1259 4 80 2 1132 4 731 2 109 2 387 2 449 2 732 4 1039 2 922 2 1263 2 735 2 753 10 17 4 300 2 1067 4 111 2 872 2 640 2 1082 2 981 6 1004 2 1180 2 874 2 
236 2 253 4 702 2 1270 2 1085 2 607 4 678 2 893 4 1252 2 1275 2 96 2 26 2 989 2 461 2 244 2 1297 2 1172 4 212 2 1111 2 1259 4 80 2 1132 4 731 2 109 2 387 2 449 2 732 4 1039 2 922 2 1263 2 735 2 753 10 17 4 300 2 1067 4 111 2 872 2 640 2 1082 2 981 6 1004 2 1180 2 874 2 
236 2 253 4 702 2 1270 2 1085 2 607 4 678 2 893 4 1252 2 1275 2 96 2 26 2 989 2 461 2 244 2 1297 2 1172 4 212 2 1111 2 1259 4 80 2 1132 4 731 2 109 2 387 2 449 2 732 4 1039 2 922 2 1263 2 735 2 753 10 17 4 300 2 1067 4 111 2 872 2 640 2 1082 2 981 6 1004 2 1180 2 874 2 
236 4 253 4 702 2 1270 2 1085 4 607 4 678 2 893 4 1252 2 1275 2 96 2 26 2 989 2 461 2 244 2 1297 4 1172 4 212 2 1111 2 1259 4 80 2 1132 4 731 2 109 2 387 2 449 2 732 4 1039 2 922 2 1263 2 735 2 753 10 17 4 300 2 1067 4 111 2 872 2 640 2 1082 2 981 6 1004 2 1180 2 874 2 
232 2 140 2 1137 2 34 2 658 2 112 2 201 2 
916 2 352 2 57 2 112 2 483 2 930 2 
717 1 105 2 817 1 860 2 696 2 661 2 1132 4 476 2 612 1 988 2 240 2 1114 2 753 4 558 1 842 2 1279 1 328 2 
236 6 1085 4 607 12 741 2 678 6 331 2 984 2 706 2 799 4 665 2 1172 12 149 2 1297 6 830 2 80 6 1132 6 731 6 634 2 387 6 524 2 753 6 63 2 300 6 1213 4 1067 4 854 2 1082 2 1267 2 1004 6 758 2 1180 6 
176 1 253 2 263 2 606 4 280 2 660 2 703 2 1132 1 504 2 421 2 732 2 753 1 923 2 86 2 17 2 8 6 217 2 90 2 
253 2 263 4 280 2 606 4 660 4 703 2 504 4 421 2 732 2 923 2 86 2 17 2 8 6 217 2 90 2 
176 1 253 2 263 8 280 8 606 4 660 8 703 2 1132 1 504 8 421 2 732 2 753 1 923 2 86 2 17 2 8 10 217 6 90 2 
253 2 263 2 606 2 660 2 703 2 504 2 421 2 732 2 923 2 86 2 17 2 8 2 90 2 
92 8 1218 11 907 2 0 4 354 2 1220 10 433 2 355 6 356 4 357 8 257 8 987 2 438 8 437 10 908 34 766 26 442 8 9 6 913 92 685 6 262 6 844 84 102 4 691 8 192 6 920 2 270 16 1078 8 773 6 999 24 1002 12 855 4 200 24 856 8 372 14 457 58 117 4 380 4 22 8 708 50 932 4 626 18 122 6 1169 2 27 12 934 6 383 112 1012 248 294 10 1177 2 790 2 635 58 299 22 1095 4 547 17 389 2 466 4 638 36 40 10 303 24 1025 6 1100 8 642 6 219 2 51 8 1272 90 951 28 306 10 720 42 876 90 1276 1 479 4 315 18 723 4 802 24 803 88 804 4 956 26 317 4 649 10 1110 10 807 2 154 6 1037 6 156 2 653 6 1281 4 654 4 401 6 1192 6 656 4 161 4 736 6 323 10 234 16 1194 2 574 4 575 6 1043 124 889 2 576 16 68 4 579 2 1290 4 330 6 332 6 742 4 743 6 1045 4 823 16 171 6 339 6 78 24 180 4 182 2 1132 134 247 4 1208 24 976 2 344 2 1136 4 346 6 753 150 598 2 425 42 508 14 673 4 601 2 
947 2 92 2 0 2 1145 2 951 38 306 2 1273 2 1220 2 433 2 357 2 309 2 437 2 438 2 358 2 879 2 442 2 315 2 647 2 803 20 396 2 262 2 649 2 1110 2 688 4 361 2 1037 4 1156 2 267 2 156 2 691 2 192 2 270 4 484 2 994 2 995 2 1192 2 276 2 110 2 403 2 323 2 1283 2 1003 2 572 2 200 2 855 2 575 2 372 2 1043 6 1160 2 623 2 889 2 456 2 576 4 202 4 527 2 281 2 457 2 742 2 820 2 378 2 459 2 460 2 122 2 628 2 823 4 1204 2 383 20 1012 44 826 4 294 2 541 2 1018 2 182 2 1132 44 1208 2 635 2 836 2 344 2 346 2 753 46 547 2 754 2 389 2 1212 4 508 2 638 2 40 2 303 2 429 6 550 2 1100 6 604 2 
92 2 1144 2 354 2 1220 4 433 2 355 4 356 4 438 2 437 4 908 30 911 8 442 2 9 4 1227 2 913 24 685 4 844 24 262 4 102 4 691 2 192 4 270 10 272 2 773 4 999 8 1241 4 1158 4 856 4 1005 4 372 6 1160 2 456 2 281 10 457 30 378 2 22 4 708 8 1251 8 932 4 122 4 1169 2 27 14 383 44 934 4 1012 104 537 16 541 10 790 2 635 28 870 2 547 10 389 2 466 2 638 6 40 4 137 8 1100 6 1025 4 949 2 642 4 50 4 951 14 306 4 720 8 879 10 315 10 723 4 724 8 803 36 804 4 317 4 319 4 1037 2 401 4 231 4 1192 4 656 4 161 4 736 4 323 6 234 8 574 4 575 4 1043 24 889 2 576 10 1290 4 330 4 332 4 743 4 492 2 823 10 171 4 339 4 180 4 182 2 831 32 1132 70 591 4 976 2 344 2 753 78 346 4 425 16 508 6 599 16 673 4 
92 2 1218 2 907 2 0 2 951 14 306 2 1220 2 433 2 257 2 437 2 438 2 908 6 442 2 315 2 803 14 262 4 1037 2 691 2 156 2 192 4 920 2 270 6 1192 4 323 2 234 6 372 2 575 4 1043 8 889 2 576 6 579 2 1290 2 457 12 117 2 378 2 22 4 932 2 122 4 628 2 823 6 383 14 1012 40 1177 2 182 2 1132 26 247 2 635 12 344 2 299 10 346 4 753 28 598 2 389 2 547 2 508 2 466 2 40 2 638 2 1100 4 
1120 2 
295 1 791 1 115 1 1071 1 1087 1 680 1 
295 1 791 1 115 1 1071 1 1087 1 680 1 
295 1 791 1 115 1 1071 1 1087 1 680 1 
295 1 791 1 115 1 1071 1 1087 1 680 1 
295 1 791 1 115 1 1071 1 1087 1 680 1 
295 1 791 1 115 1 1071 1 1087 1 680 1 
295 1 791 1 115 1 1071 1 1087 1 680 1 
295 1 791 1 115 1 1071 1 1087 1 680 1 
295 1 791 1 115 1 1071 1 1087 1 680 1 
295 1 791 1 115 1 1071 1 1087 1 680 1 
295 1 791 1 115 1 1071 1 1087 1 680 1 
295 1 791 1 115 1 1071 1 1087 1 680 1 
295 1 791 1 115 1 1071 1 1087 1 680 1 
295 1 791 1 115 1 1071 1 1087 1 680 1 
295 1 791 1 115 1 1071 1 1087 1 680 1 
295 1 791 1 115 1 1071 1 1087 1 680 1 
295 1 791 1 115 1 1071 1 1087 1 680 1 
295 1 791 1 115 1 1071 1 1087 1 680 1 
295 1 791 1 115 1 1071 1 1087 1 680 1 
295 1 791 1 115 1 1071 1 1087 1 680 1 
295 1 791 1 115 1 1071 1 1087 1 680 1 
295 1 791 1 115 1 1071 1 1087 1 680 1 
295 1 791 1 115 1 1071 1 1087 1 680 1 
295 1 791 1 115 1 1071 1 1087 1 680 1 
295 1 791 1 115 1 1071 1 1087 1 680 1 
295 1 791 1 115 1 1071 1 1087 1 680 1 
295 1 791 1 115 1 1071 1 1087 1 680 1 
295 1 791 1 115 1 1071 1 1087 1 680 1 
295 1 791 1 115 1 1071 1 1087 1 680 1 
295 1 791 1 115 1 1071 1 1087 1 680 1 
295 1 791 1 115 1 1071 1 1087 1 680 1 
295 1 791 1 115 1 1071 1 1087 1 680 1 
295 1 791 1 115 1 1071 1 1087 1 680 1 
295 1 791 1 115 1 1071 1 1087 1 680 1 
295 1 791 1 115 1 1071 1 1087 1 680 1 
295 1 791 1 115 1 1071 1 1087 1 680 1 
295 1 791 1 115 1 1071 1 1087 1 680 1 
295 1 791 1 115 1 1071 1 1087 1 680 1 
295 1 791 1 115 1 1071 1 1087 1 680 1 
295 1 791 1 115 1 1071 1 1087 1 680 1 
295 1 791 1 115 1 1071 1 1087 1 680 1 
295 1 791 1 115 1 1071 1 1087 1 680 1 
295 1 791 1 115 1 1071 1 1087 1 680 1 
295 1 791 1 115 1 1071 1 1087 1 680 1 

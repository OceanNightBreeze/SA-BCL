#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR utilMDE.Assert$AssertionException (270,433) (270,433) (51,122,250,293,731) (51,122,250,293,731) (51,122,250,293,731) 
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException (306,429) 436 (431,776) (306,429) 590 (431,776) 147 
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 354 120 762 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR utilMDE.Assert$AssertionException (270,433) 36 35 743 
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR utilMDE.Assert$AssertionException (270,433) 36 35 743 
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.PptSlice0:initInvariantsSeen()V
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern:intern([J)[J
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.PptName:isEnterPoint()Z
daikon.Quant:pairwiseNotEqual([I[I)Z
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.Quant:subsetOf([F[D)Z
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:pairwiseLT([I[I)Z
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.ProglangType:baseIsScalar()Z
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.Quant:eltwiseEqual([I)Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
utilMDE.Intern:numIntArrays()I
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Ppt:Ppt()V
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.ModBitTracker:ModBitTracker(I)V
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.Quant:eltsNotEqual([II)Z
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.inv.Invariant:getConfidence()D
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V | ASSIGN | 5075 | = null
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
utilMDE.MathMDE:gcd([I)I
utilMDE.ArraysMDE:noDuplicates([J)Z
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:setEqual([I[I)Z
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
jtb.JavaCharStream:BeginToken()C
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaCharStream:getBeginColumn()I
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:lexLT([I[I)Z
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.Quant:union([I[I)[I
daikon.VarInfo:relate_var()V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
utilMDE.LimitedSizeIntSet:size()I
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
utilMDE.ArraysMDE:indexOf([II)I
daikon.PptName:isCombinedExitPoint()Z
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.Quant:eltsGtIndex([I)Z
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.inv.unary.scalar.UpperBound:enabled()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.ProglangType:isScalar()Z
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.ValueSet:ValueSet(I)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.Quant:subsetOf([D[D)Z
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.VarInfoAux:hashCode()I
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.Quant:eltsLT([II)Z
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.Quant:memberOf(F[D)Z
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:element_range([I)I
utilMDE.WeakHasherMap.EntrySet:size()I
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.Quant:eq(JJ)Z
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.inv.Invariant:prob_or(DD)D
daikon.ProglangType:baseIsIntegral()Z
daikon.Quant:eltsLteIndex([I)Z
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.FuzzyFloat:gt(DD)Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
utilMDE.FuzzyFloat:gte(DD)Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
jtb.ParseException:ParseException(Ljava.lang.String;)V
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
utilMDE.FuzzyFloat:eq(DD)Z
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.PptSlice1:num_samples()I
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
jtb.JavaCharStream:getEndColumn()I
daikon.inv.Invariant:logOn()Z
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_scan_token(I)Z
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
utilMDE.ArraysMDE:subarray([JII)[J
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.PptTopLevel:name()Ljava.lang.String;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.Quant:pairwiseDivides([I[I)Z
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.Quant:memberOf(F[F)Z
utilMDE.ArraysMDE:max([I)I
daikon.Quant:eltwiseNotEqual([I)Z
utilMDE.MathMDE:negate(I)I
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I | CONSTANT | 17989 | 115 -> 1
daikon.Quant:gt(II)Z
daikon.PptSlice0:arity()I
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.FuzzyFloat:lt(DD)Z
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
utilMDE.Assert:assertTrue(Z)V
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.inv.filter.ParentFilter:ParentFilter()V
utilMDE.OrderedPairIterator:hasNext()Z
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:jj_3_16()Z
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.ProglangType:isArray()Z
daikon.diff.Node:Node(LutilMDE.Pair;)V
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:sorted([I)Z
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.Quant:ne(II)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.Quant:eltsLTE([II)Z
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.Quant:eltsGT([II)Z
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.Quant:memberOf(I[I)Z
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.LowerBound:enabled()Z
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.Quant:eltsLtIndex([I)Z
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.Intern:internSubsequence([III)[I
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.VarInfo:name()Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.Quant:intersection([I[I)[I
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:subsetOf([I[I)Z
daikon.Debug:logOn()Z
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.Quant:subsetOf([J[J)Z
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.VarInfoName:name()Ljava.lang.String;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
utilMDE.FuzzyFloat:set_rel_diff(D)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.ProglangType:dimensions()I
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.Quant:gte(II)Z
utilMDE.ArraysMDE:sum([I)I
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.Quant:memberOf(S[S)Z
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.VarComparabilityImplicit:alwaysComparable()Z
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:pairwiseEqual([I[I)Z
daikon.Quant:subsetOf([D[F)Z
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.Quant:eltwiseLT([I)Z
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.Quant:pairwiseLTE([I[I)Z
utilMDE.LimitedSizeIntSet:add(I)V
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.Quant:eltwiseLTE([I)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
utilMDE.ArraysMDE:sum([[D)D
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I | STATEMENT | 5655 | stmt -> ;
daikon.inv.OutputFormat:isJavaFamily()Z
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.inv.unary.UpperBoundCore:calc_modulus()J
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.ModBitTracker:num_sets()I
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaCharStream:getBeginLine()I
daikon.VarInfoName:hashCode()I
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:isIntegral()Z
daikon.inv.Invariant:isWorthPrinting()Z
daikon.Quant:memberOf(J[J)Z
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
utilMDE.OrderedPairIterator:setnext1()V
utilMDE.Intern:intern([I)[I
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
utilMDE.MathMDE:modulus([I)[I
daikon.inv.Invariant:logDetail()Z
daikon.inv.unary.LowerBoundCore:calc_modulus()J
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V | CONDITION | 972 | if (x) -> if (!x)
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.Invariants:Invariants()V
jtb.Token:newToken(I)Ljtb.Token;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
utilMDE.MathMDE:sign(I)I
daikon.ValueTuple:size()I
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:generateParseException()Ljtb.ParseException;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.Quant:lexNotEqual([I[I)Z
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.ValueTuple:isMissing(I)Z
daikon.diff.PrintAllVisitor:bufPrintln()V
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.VarInfo:new_ppt()V
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
utilMDE.Options.OptionInfo:argument_required()Z
utilMDE.ArraysMDE:subarray([III)[I
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:pairwiseGT([I[I)Z
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.OrderedPairIterator:setnext2()V
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:computeProbability()D
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ModBitTracker:num_vars()I
daikon.Quant:lexLTE([I[I)Z
utilMDE.MathMDE:gcd(II)I
daikon.ModBitTracker:split(I)I
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.PptTopLevel:getInvariants()Ljava.util.List;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.Quant:eltwiseGT([I)Z
jtb.JavaCharStream:FillBuff()V
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
jtb.JavaCharStream:getEndLine()I
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.Quant:noDups([I)Z
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.MathMDE:pow_fast(II)I
daikon.Quant:lt(II)Z
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.Quant:sameLength([I[I)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
jtb.ParseException:getMessage()Ljava.lang.String;
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.Quant:pairwiseGTE([I[I)Z
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE:missing_numbers([I)[I
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:concat([I[I)[I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
jtb.JavaCharStream:backup(I)V
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakHasherMap:processQueue()V
daikon.PptTopLevel.CondIterator:hasNext()Z
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.Quant:subsetOf([S[S)Z
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
utilMDE.ArraysMDE:min([I)I
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.inv.Invariant:justified()Z
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
utilMDE.Intern:internSubsequence([JII)[J
daikon.Quant:eltsEqualIndex([I)Z
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.Quant:eltwiseGTE([I)Z
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.ProglangType:isPseudoArray()Z
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quant:eq(FF)Z
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
jtb.JavaParser:jj_ntk()I
utilMDE.Intern:intern([D)[D
jtb.JavaCharStream:ReadByte()C
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.Quant:subsetOf([B[I)Z
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.Quant:memberOf(D[F)Z
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.Quant:lexGT([I[I)Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:sum([D)D
utilMDE.ArraysMDE:sum([[I)I
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.diff.Node:Node()V
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.ArraysMDE:min_max([I)[I
daikon.inv.Invariant:prob_and(DD)D
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat; | RETURN | 1924 | return null
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.Debug:logDetail()Z
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptSlice2:arity()I
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.Quant:concat([I[I)[I
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:mod_positive(II)I
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.Quant:slice([III)[I
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.ValueTuple:isMissingFlow(I)Z
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
utilMDE.WeakHasherMap:size()I
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.Quant:isReverse([I[I)Z
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE:pow(II)I
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:eq(DD)Z
daikon.ModBitTracker:num_samples()I
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.MathMDE:gcd_differences([I)I
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.Quant:setDiff([I[I)[I
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.Quant:lexEqual([I[I)Z
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.inv.Invariant:prob_and(DDD)D
jtb.JavaCharStream:readChar()C
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.Quant:lte(II)Z
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.Quant:subsetOf([F[F)Z
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.test.InvariantFormatTester:execute()Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I | CONSTANT | 43224 | 74 -> 75
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.FuzzyFloat:ne(DD)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.FuzzyFloat:lte(DD)Z
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.diff.InvMap:InvMap()V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.diff.RootNode:RootNode()V
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.Quant:eltsGteIndex([I)Z
jtb.JavaParser:jj_2_16(I)Z
daikon.inv.unary.scalar.NonZero:is_pointer()Z
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.Quant:lexGTE([I[I)Z
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn; | OPERATOR | 107346 | <= -> ==
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.Quant:eq(II)Z
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.Quant:eltsGTE([II)Z
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.PptSlice1:arity()I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.Quant:pairwiseSquare([I[I)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
utilMDE.MathMDE:gcd(JJ)J
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.Quant:eltsEqual([II)Z
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
385 2 270 2 738 2 69 2 433 2 97 4 804 2 199 2 571 2 
799 2 109 2 339 2 285 2 374 2 185 6 276 2 256 2 422 6 552 2 469 6 
219 6 327 6 433 2 89 6 541 6 210 4 500 2 502 2 775 2 270 2 749 2 67 4 832 2 
519 10 634 4 316 2 636 8 265 2 550 10 696 16 343 2 91 4 244 30 423 6 113 16 270 6 5 6 702 8 533 8 566 2 728 8 404 16 433 6 17 2 461 4 678 2 513 10 42 26 227 2 150 4 415 12 364 10 688 10 
33 4 12 6 
83 2 
519 2 634 2 550 2 696 2 244 6 773 2 423 2 113 2 562 2 728 2 220 2 404 2 359 2 490 2 42 4 513 4 77 2 153 2 364 2 415 2 687 2 24 2 688 2 
519 4 404 8 763 6 550 4 42 12 696 8 462 6 91 2 650 2 244 14 113 8 686 2 415 5 364 4 485 4 52 4 688 4 
390 2 615 4 264 2 202 2 446 6 618 2 664 2 208 2 476 4 425 2 30 2 700 2 351 4 808 2 66 4 640 62 273 4 483 10 249 2 704 4 812 2 401 10 535 2 434 4 818 4 677 14 407 4 358 4 409 2 732 4 651 8 170 2 514 2 279 2 657 4 152 4 312 2 633 2 53 2 440 2 
806 2 723 2 117 2 167 2 144 2 460 2 729 2 106 2 196 2 83 2 
54 2 367 2 689 2 772 2 418 2 267 2 694 2 479 2 270 4 638 2 428 2 639 2 326 2 537 2 69 2 433 4 709 2 651 2 124 2 748 2 657 4 130 4 391 2 664 2 447 2 343 2 505 2 557 2 349 2 247 2 290 2 451 2 399 2 294 2 455 2 99 4 101 2 821 2 104 2 465 2 195 2 516 4 152 2 154 2 
519 16 55 2 520 4 634 2 550 16 238 2 620 4 696 32 244 54 423 4 289 6 113 32 270 4 115 6 139 4 5 4 533 6 705 6 485 4 760 4 624 2 355 8 728 18 145 4 404 32 433 4 788 2 17 2 763 6 42 48 513 6 462 6 123 6 467 2 364 16 415 22 52 4 25 2 688 16 
202 2 446 2 651 2 
772 2 204 22 627 2 629 2 303 2 357 2 268 2 193 2 680 2 183 2 778 10 757 2 23 2 783 2 
738 2 57 2 3 2 270 20 701 2 65 2 430 2 116 2 538 2 433 22 539 2 118 2 708 2 437 4 652 2 230 2 80 2 338 2 129 2 131 4 26 6 175 2 718 2 803 2 394 2 92 2 722 2 94 2 34 2 671 2 293 2 250 2 457 2 674 6 510 2 192 2 254 2 730 2 406 4 828 2 412 2 51 2 159 4 
174 2 
433 2 710 2 
433 4 658 2 744 2 
635 6 521 2 691 2 211 6 478 6 58 6 64 2 7 6 745 28 68 6 218 2 274 2 376 2 786 2 599 2 223 2 330 6 228 6 171 2 548 6 715 2 438 6 492 2 796 2 282 2 439 4 493 2 798 2 133 2 445 2 751 4 239 2 619 2 621 28 754 2 499 6 288 2 135 6 448 2 805 2 666 2 397 6 558 4 506 6 140 6 564 4 252 2 761 2 299 2 403 2 405 6 408 2 307 2 464 2 573 4 632 2 411 6 767 28 198 2 769 8 108 2 
73 1 811 2 11 2 518 2 
62 2 811 2 
309 2 39 2 461 2 8 2 811 2 331 2 651 2 
309 2 56 2 811 2 
309 2 811 2 337 2 
292 2 690 2 518 2 
309 2 811 2 
292 2 829 2 
811 2 44 2 
378 2 292 2 518 2 
18 2 366 2 518 2 
384 2 253 2 518 2 
750 2 463 2 518 2 
515 2 524 2 518 2 
22 2 292 2 
248 2 811 2 
381 2 366 2 
253 2 388 2 
750 2 491 2 
583 2 515 2 
567 2 292 2 
515 2 795 2 
102 2 750 2 
253 2 176 2 
313 2 366 2 
378 2 292 2 742 2 518 2 
378 2 450 2 292 2 742 2 518 2 
292 2 240 2 518 2 
292 2 820 2 518 2 
90 2 121 2 531 2 625 2 
675 2 8 2 651 2 546 2 
675 2 39 2 93 2 8 2 651 2 546 2 
309 2 739 2 461 2 8 2 811 2 651 2 
418 2 511 2 
461 2 8 2 679 2 651 2 
302 2 750 2 
515 2 814 2 
143 2 366 2 
297 2 253 2 
253 2 515 2 71 2 
253 2 515 2 482 2 
253 2 515 2 628 2 
800 2 253 2 515 2 
523 6 245 6 8 2 377 2 410 2 651 2 653 2 714 2 
292 2 716 2 
626 2 132 2 706 4 379 2 70 2 204 6 341 4 372 2 605 2 148 2 554 2 246 2 623 2 163 2 595 2 758 2 414 2 13 2 
353 2 518 2 
192 2 
201 2 738 2 1 2 320 8 642 2 116 2 538 2 433 26 118 6 540 2 437 4 332 2 333 2 119 3 652 2 230 2 338 2 660 4 131 4 129 2 26 6 442 2 444 2 235 2 663 3 241 2 242 2 553 2 556 2 669 3 34 2 670 2 457 2 674 4 254 2 576 2 363 2 579 2 770 2 159 4 472 2 581 2 369 2 57 2 480 2 270 26 65 2 701 2 272 2 487 2 488 5 598 2 383 2 610 2 80 2 797 2 613 4 496 4 284 2 175 6 394 2 803 2 92 2 722 2 398 2 94 2 186 2 510 2 817 2 406 4 730 2 828 2 412 6 831 2 
201 2 738 2 1 2 320 8 3 2 642 2 116 2 538 2 433 26 118 6 540 2 437 4 332 2 333 2 119 2 652 2 230 2 338 2 660 4 131 4 129 2 26 6 442 2 444 2 235 2 663 2 241 2 242 2 345 2 553 2 669 2 34 2 457 2 674 6 254 2 363 2 579 2 770 2 159 4 472 2 581 2 369 2 57 2 480 2 270 26 65 2 701 2 272 2 782 2 596 2 487 2 488 4 598 2 708 2 383 2 74 2 610 2 80 2 797 2 613 4 496 4 284 2 175 6 394 2 803 2 92 2 722 2 398 2 94 2 186 2 510 2 817 2 406 4 730 2 828 2 412 6 831 2 
616 2 
631 2 614 2 
417 2 276 2 585 2 647 4 256 2 147 2 752 2 498 2 422 2 792 4 776 2 668 2 261 2 759 2 432 2 785 2 469 2 458 2 
317 2 109 2 417 2 585 2 692 2 422 4 57 2 590 2 525 4 112 4 776 2 270 6 374 2 532 2 431 2 432 2 785 2 10 2 746 2 489 2 276 4 433 12 647 4 277 2 437 2 789 2 711 2 792 4 712 2 652 2 127 2 495 2 26 4 287 4 178 2 752 2 237 6 394 2 498 2 622 2 722 2 668 2 185 6 724 2 34 2 507 4 759 2 458 2 100 2 254 2 256 4 147 2 570 2 572 2 766 4 828 2 261 4 200 2 469 6 159 2 
317 2 417 2 585 2 692 2 422 6 57 2 590 2 525 4 112 4 776 2 270 6 374 2 532 2 431 2 432 2 785 2 10 2 746 2 489 2 276 4 433 12 647 4 277 2 437 2 789 2 711 2 792 4 712 2 652 2 127 2 495 2 26 4 339 2 287 4 178 2 752 2 237 6 394 2 498 2 622 2 722 2 668 2 185 6 724 2 34 2 507 4 759 2 458 2 100 2 254 2 256 4 147 2 570 2 572 2 766 4 828 2 261 4 200 2 469 4 159 2 
317 2 417 2 585 2 692 2 422 6 57 2 590 2 525 4 112 4 776 2 270 6 374 2 532 2 431 2 432 2 785 2 10 2 746 2 489 2 276 4 433 12 647 4 277 2 437 2 789 2 711 2 792 4 712 2 652 2 127 2 495 2 26 4 285 2 287 4 178 2 752 2 237 6 394 2 498 2 622 2 722 2 668 2 185 6 724 2 34 2 507 8 759 2 458 2 100 2 254 2 256 4 147 2 570 2 572 2 766 4 828 2 261 4 200 2 469 6 159 2 
317 2 417 2 585 2 692 2 422 8 57 2 590 2 525 4 112 4 776 2 270 6 374 2 532 2 431 2 432 2 785 2 10 2 746 2 489 2 276 4 433 12 647 4 277 2 437 2 789 2 711 2 792 4 712 2 652 2 127 2 495 2 26 4 285 2 339 2 287 4 178 2 752 2 237 10 394 2 498 2 622 2 722 2 668 2 185 8 724 2 34 2 507 8 759 2 458 2 100 2 254 2 256 4 147 2 570 2 572 2 766 8 828 2 261 4 200 2 469 6 159 2 
317 2 417 2 585 2 692 2 422 6 57 2 590 2 525 4 112 4 776 2 270 6 374 2 532 2 431 2 432 2 785 2 10 2 746 2 489 2 276 4 433 12 647 4 277 2 437 2 789 2 711 2 792 4 712 2 652 2 127 2 495 2 26 4 285 2 287 4 178 2 752 2 237 10 394 2 498 2 622 2 722 2 668 2 185 6 724 2 34 2 507 8 759 2 458 2 100 2 254 2 256 4 147 2 570 2 572 2 766 8 828 2 261 4 200 2 469 6 159 2 
201 2 417 2 205 2 206 4 2 6 207 6 422 8 3 2 212 10 426 2 427 6 431 2 643 1 432 2 9 2 10 2 215 2 433 46 647 4 435 6 436 2 437 4 652 2 654 2 655 1 230 2 658 6 26 6 235 2 663 2 237 2 667 2 668 2 669 2 34 2 454 2 457 2 458 2 674 6 673 6 37 2 254 2 256 4 40 1 257 2 468 2 48 6 261 4 49 2 469 4 692 2 57 2 697 2 480 2 59 6 270 24 701 2 65 2 487 2 488 2 275 1 489 2 276 4 277 2 708 2 710 6 711 4 712 2 76 2 80 2 283 2 495 2 86 6 496 4 87 2 287 8 498 2 92 2 722 2 724 2 94 2 726 2 507 2 510 2 301 2 730 2 311 2 317 2 738 2 737 2 320 4 525 6 112 4 323 2 532 4 116 2 536 2 538 2 746 2 118 6 540 2 333 2 338 12 127 2 131 4 129 2 339 4 752 2 559 4 759 2 141 1 142 2 147 2 570 2 572 2 574 2 575 6 363 2 159 4 582 1 771 1 584 6 585 2 369 2 370 6 371 1 589 2 774 2 590 2 776 2 374 4 785 2 165 7 784 7 598 2 603 6 789 2 792 4 387 2 174 6 175 8 178 2 802 6 394 2 803 2 617 1 622 2 182 2 185 12 189 2 191 2 817 4 406 4 826 8 828 2 412 6 830 2 413 2 200 2 
201 2 317 2 737 2 738 2 417 2 205 2 2 6 206 4 207 6 320 8 422 8 212 10 3 2 525 6 112 4 323 2 426 2 427 6 532 4 431 2 116 2 432 2 9 2 10 2 215 2 536 2 538 2 746 2 433 48 647 4 435 6 540 2 118 6 436 2 437 4 333 4 652 2 654 2 230 2 658 6 338 12 127 2 129 2 131 4 26 6 235 2 237 2 663 2 752 2 667 2 668 2 559 4 669 2 34 2 560 2 454 2 759 2 457 2 458 2 142 2 37 2 673 6 674 6 254 2 256 4 147 2 257 2 570 2 572 2 575 6 574 2 577 2 363 2 48 6 468 2 49 2 261 4 469 8 159 4 584 6 369 4 585 2 370 6 692 2 589 2 697 2 57 2 774 2 480 4 590 2 59 6 776 2 270 26 374 4 65 2 701 2 785 2 487 2 488 2 598 2 489 2 276 4 277 2 708 2 789 2 603 6 710 6 711 4 712 2 792 4 76 2 387 2 80 2 283 2 613 2 86 6 495 2 174 6 87 2 496 4 175 8 285 4 287 8 802 6 178 2 803 2 394 2 498 2 92 2 622 2 722 2 182 2 185 12 94 2 724 2 726 2 507 6 189 2 191 2 510 2 817 4 301 2 730 2 406 4 826 8 311 2 828 2 412 6 413 2 830 2 200 2 
201 2 317 2 737 2 738 2 417 2 205 2 2 6 206 4 207 6 320 8 422 8 212 10 3 2 525 6 112 4 323 2 426 2 427 6 532 4 431 2 116 2 432 2 9 2 10 2 215 2 536 2 538 2 746 2 433 48 647 4 435 6 540 2 118 6 436 2 437 4 333 4 652 2 654 2 230 2 658 6 338 12 127 2 129 2 131 4 26 6 235 2 663 2 237 6 752 2 667 2 668 2 559 4 669 2 34 2 560 2 454 2 759 2 457 2 458 2 142 2 37 2 673 6 674 6 254 2 256 4 147 2 257 2 570 2 572 2 575 6 574 2 766 4 577 2 363 2 48 6 468 2 49 2 261 4 469 8 159 4 584 6 369 4 585 2 370 6 692 2 589 2 697 2 57 2 774 2 480 4 590 2 59 6 776 2 270 26 374 4 701 2 65 2 785 2 487 2 488 2 598 2 489 2 276 4 277 2 708 2 789 2 603 6 710 6 711 4 712 2 792 4 76 2 387 2 80 2 283 2 613 2 86 6 495 2 174 6 87 2 496 4 175 8 285 4 287 8 802 6 178 2 803 2 394 2 498 2 92 2 622 2 722 2 182 2 185 12 94 2 724 2 726 2 507 6 189 2 191 2 510 2 817 4 301 2 730 2 406 4 826 8 311 2 828 2 412 6 413 2 830 2 200 2 
201 2 417 2 205 2 206 4 2 6 207 12 422 10 3 2 212 8 424 6 637 2 426 2 427 6 431 2 432 2 9 2 10 2 215 2 644 6 433 52 647 4 435 6 436 2 437 4 652 2 654 2 21 2 230 2 658 12 661 2 26 6 235 4 237 6 663 4 667 2 668 2 669 4 34 2 454 2 457 2 458 2 674 6 673 12 37 2 254 2 256 4 257 2 468 2 48 6 261 4 49 2 469 10 474 2 692 2 475 6 57 2 697 2 480 4 59 12 270 24 65 2 701 2 487 2 488 4 489 2 276 4 277 2 708 2 710 12 711 4 712 2 76 2 280 2 80 2 283 2 495 2 86 6 496 6 87 2 285 4 287 8 498 2 92 2 722 2 724 2 94 2 726 2 507 6 510 2 301 2 730 2 311 2 107 2 315 6 317 2 109 2 738 2 737 2 320 10 525 6 112 4 323 2 532 4 116 2 325 2 536 2 538 2 746 2 118 8 540 2 333 4 338 10 127 2 131 4 129 2 339 2 752 2 756 2 559 4 560 2 759 2 142 2 356 6 147 2 570 2 572 2 574 2 575 6 766 4 577 2 363 4 159 4 584 6 585 2 369 4 370 6 589 2 774 2 590 2 373 6 776 2 374 4 785 2 598 2 789 2 603 6 792 4 608 6 613 2 174 12 175 12 178 2 802 6 394 2 803 2 622 2 182 2 185 16 400 6 189 2 191 2 816 6 817 4 406 4 826 8 828 2 412 8 830 2 413 2 200 2 
285 2 317 2 417 2 287 2 585 2 237 4 752 2 692 2 498 2 422 6 525 2 112 2 622 2 374 2 185 4 724 2 507 6 432 2 785 2 10 2 458 2 489 2 433 4 276 4 277 2 647 2 256 4 570 2 712 2 572 2 792 2 766 4 200 2 469 6 495 2 
201 2 317 2 738 2 417 2 422 6 3 2 212 2 525 2 112 2 116 2 534 2 432 2 10 2 538 2 433 28 647 2 118 6 540 2 437 4 122 2 652 2 229 2 230 2 338 4 131 4 129 2 26 6 663 3 237 2 752 2 669 3 34 2 457 2 458 2 674 6 254 2 256 4 570 2 572 2 262 2 469 6 159 4 585 2 692 2 57 2 270 24 374 2 65 2 701 2 785 2 488 3 598 2 489 2 276 4 277 2 708 2 792 2 712 2 278 2 80 2 387 2 495 2 496 4 285 2 175 8 287 2 178 2 394 2 803 2 498 2 92 2 722 2 622 2 185 4 724 2 94 2 507 6 510 2 192 2 817 2 300 2 730 2 731 2 406 4 105 2 310 3 828 2 412 6 200 2 
317 2 417 2 585 2 692 2 422 6 57 2 590 2 525 4 112 4 776 2 270 6 374 2 532 2 431 2 432 2 785 2 10 2 746 2 489 2 276 4 433 12 647 4 277 2 437 2 789 2 711 2 792 4 712 2 652 2 127 2 495 2 26 4 285 2 287 4 178 2 752 2 237 10 394 2 498 2 622 2 722 2 668 2 185 6 724 2 34 2 507 8 759 2 458 2 100 2 254 2 256 4 147 2 570 2 572 2 766 8 828 2 261 4 200 2 469 6 159 2 
317 2 109 2 417 2 585 2 692 2 422 6 57 2 590 2 525 4 112 4 776 2 270 6 374 2 532 2 431 2 432 2 785 2 746 2 489 2 276 4 433 12 277 2 647 4 437 2 789 2 711 2 712 2 792 4 652 2 125 2 127 2 495 2 26 4 285 2 287 4 178 2 752 2 237 10 394 2 498 2 551 4 622 2 722 2 668 2 185 8 724 2 34 2 507 8 759 2 672 2 458 2 254 2 256 4 147 2 570 2 572 2 766 8 828 2 261 4 200 2 469 8 159 2 
317 2 81 2 200 2 
317 2 81 2 200 2 
201 2 317 4 109 4 738 2 206 2 320 4 422 12 212 2 3 2 525 4 112 2 642 4 532 2 431 2 116 2 15 2 538 2 747 2 433 24 647 2 118 2 540 2 436 2 437 4 333 4 335 2 652 2 547 2 230 2 338 4 131 4 129 2 26 6 339 4 237 6 755 2 559 2 34 2 457 2 458 2 674 6 254 2 256 4 147 2 360 2 570 2 149 2 45 2 766 4 48 2 261 4 580 2 469 12 159 4 369 4 697 2 57 2 480 4 590 2 776 2 270 16 374 4 65 2 701 2 780 2 779 2 785 4 486 4 487 4 488 2 276 4 708 2 789 2 711 4 792 2 606 2 81 2 80 2 175 2 285 4 287 4 394 2 803 2 498 2 503 2 92 2 722 2 396 2 185 16 94 2 724 2 96 4 507 6 510 2 298 2 817 6 406 4 730 2 304 2 828 2 412 2 830 2 200 6 416 2 
298 2 146 2 254 2 433 4 329 2 212 2 149 2 606 2 668 2 630 2 270 2 76 2 559 2 48 2 338 2 215 2 614 2 
201 2 317 4 109 4 738 2 206 2 320 4 422 12 3 2 525 4 112 2 429 2 741 2 642 4 532 4 431 2 116 2 538 2 746 2 433 20 647 2 118 2 540 2 436 2 437 4 333 4 335 2 652 2 547 2 230 2 338 2 131 4 129 2 26 6 339 4 237 4 34 2 457 2 458 2 674 6 254 2 256 4 147 2 360 2 570 2 149 2 45 2 766 4 261 4 469 12 159 4 369 4 697 2 57 2 480 4 590 2 592 2 776 2 270 14 374 4 65 2 701 2 780 2 779 4 785 4 486 2 487 2 488 4 276 4 708 2 789 2 711 4 792 2 80 2 175 2 285 4 287 4 394 2 803 2 498 2 503 2 92 2 722 2 396 2 185 16 94 2 724 2 96 2 507 6 510 2 298 2 817 4 406 4 730 2 306 2 828 2 412 2 830 2 200 4 416 2 
201 2 317 4 109 4 738 2 206 2 320 4 422 12 212 2 3 2 525 4 112 2 642 4 532 4 431 2 116 2 538 2 746 2 433 24 647 2 118 2 540 2 436 2 437 4 333 4 335 2 652 2 547 2 230 2 338 4 131 4 129 2 26 6 339 4 237 6 559 2 34 2 457 2 458 2 674 6 254 2 256 4 147 2 41 2 360 2 570 2 149 2 682 2 45 2 766 4 46 2 48 2 261 4 470 2 469 12 159 4 369 4 697 2 57 2 480 4 590 2 776 2 270 16 374 4 65 2 701 2 780 2 779 2 785 4 486 4 487 4 488 2 276 4 708 2 789 2 711 4 792 2 606 2 81 2 80 2 175 2 285 4 287 4 394 2 803 2 498 2 503 2 92 2 722 2 396 2 185 16 94 2 724 2 96 4 507 6 510 2 298 2 817 6 406 4 730 2 304 2 822 2 828 2 412 2 830 2 200 6 416 2 
738 2 318 2 740 1 538 2 433 24 118 6 540 2 437 4 120 2 19 2 652 2 654 2 656 2 338 2 131 2 129 2 662 2 26 6 663 2 134 2 342 2 555 1 31 2 350 2 669 2 34 2 457 2 251 2 354 2 674 2 254 2 762 2 764 2 765 2 468 2 157 2 159 4 365 2 266 2 57 2 774 2 270 18 63 2 701 2 488 2 598 2 787 2 793 2 80 2 283 2 494 4 82 2 496 4 175 8 801 2 394 2 803 2 92 2 722 2 94 2 510 2 191 2 817 2 406 2 819 2 103 2 311 2 828 2 412 6 
496 2 175 2 235 6 393 1 236 2 663 3 587 3 270 2 114 2 669 3 188 2 166 2 488 3 598 2 380 2 433 2 676 2 118 2 334 2 224 2 151 2 260 2 231 2 232 4 412 2 
496 2 175 2 235 6 236 2 663 2 587 2 270 2 114 2 669 2 188 2 166 2 488 2 598 2 380 2 433 2 676 2 118 2 334 2 224 2 151 2 260 2 231 2 232 4 412 2 
496 2 175 2 235 6 236 2 663 2 587 2 270 2 114 2 669 2 188 2 166 2 488 2 598 2 380 2 433 2 676 2 118 2 334 2 224 2 151 2 260 2 231 2 232 4 412 2 
519 2 175 2 392 6 286 2 550 2 395 2 29 2 588 2 696 2 244 5 346 2 181 2 270 4 113 2 271 2 187 4 291 2 669 3 5 2 533 4 508 3 488 3 14 2 598 2 433 10 404 2 221 2 42 4 334 2 20 2 823 4 361 4 609 4 734 2 827 2 362 3 578 3 364 2 158 4 688 2 
519 2 588 2 696 2 113 2 270 4 271 2 5 2 533 4 488 2 14 2 598 2 433 10 221 2 17 2 20 2 334 2 609 4 175 2 392 6 286 2 29 2 395 2 550 2 244 4 346 2 181 2 291 2 187 4 669 2 508 2 728 2 404 2 42 4 823 4 361 4 362 2 827 2 734 2 578 2 415 2 364 2 158 4 688 2 
519 2 588 2 696 2 113 2 270 4 271 2 5 2 533 4 488 2 14 2 598 2 433 10 221 2 17 2 20 2 334 2 609 4 175 2 392 6 286 2 29 2 395 2 550 2 244 4 346 2 181 2 291 2 187 4 669 2 508 2 728 2 404 2 42 4 823 4 361 4 362 2 827 2 734 2 578 2 415 2 364 2 158 4 688 2 
519 2 588 2 696 2 113 2 270 4 271 2 5 2 533 4 488 2 14 2 598 2 433 10 221 2 17 2 20 2 334 2 609 4 175 2 392 6 286 2 29 2 395 2 550 2 244 4 346 2 181 2 291 2 187 4 669 2 508 2 728 2 404 2 42 4 823 4 361 4 362 2 827 2 734 2 578 2 415 2 364 2 158 4 688 2 
519 2 588 2 696 2 113 2 270 4 271 2 5 2 533 4 488 2 14 2 598 2 433 10 221 2 17 4 20 2 334 2 609 4 175 2 392 6 286 2 29 2 395 2 550 2 244 4 346 2 181 2 291 2 187 4 669 2 508 2 728 4 404 2 42 4 823 4 361 4 362 2 827 2 734 2 578 2 415 4 364 2 158 4 688 2 
825 2 203 2 530 2 452 2 725 2 172 2 
137 2 815 2 398 2 47 2 604 2 172 2 389 2 
441 2 160 2 421 2 665 2 481 2 59 2 324 2 270 8 700 1 807 2 95 1 34 2 98 2 453 2 484 2 456 1 217 2 402 2 433 10 707 2 43 1 514 1 681 2 197 2 233 2 736 2 
519 6 550 6 340 2 267 2 719 2 696 6 244 15 270 6 113 6 32 2 139 2 5 2 533 4 485 2 565 2 296 2 355 2 728 3 433 6 404 6 788 1 763 4 17 2 42 12 194 2 124 2 123 4 364 6 415 4 314 2 688 6 
168 2 38 2 433 1 504 2 591 2 259 2 823 2 161 1 361 2 270 1 184 4 79 7 6 2 813 2 158 2 375 2 216 2 471 2 
168 2 38 2 504 2 259 2 823 2 591 4 361 2 184 4 6 2 79 6 813 2 158 2 375 4 216 4 471 2 
168 6 38 2 433 1 504 2 259 2 823 2 591 8 161 1 361 2 270 1 184 4 6 8 79 10 813 2 158 2 375 8 216 8 471 2 
38 2 504 2 259 2 823 2 591 2 361 2 184 2 79 2 813 2 158 2 375 2 216 2 471 2 
0 2 319 2 111 2 420 2 321 2 322 2 3 2 526 4 527 2 641 2 430 2 213 6 743 2 538 2 645 2 16 2 646 2 433 28 648 6 328 2 542 2 545 2 226 1 336 2 131 8 27 2 443 2 344 2 347 16 35 2 563 2 36 2 674 18 258 2 683 2 368 2 473 2 477 2 60 2 270 26 594 6 708 2 790 2 713 4 169 2 75 2 611 2 78 2 281 2 85 2 720 2 501 4 92 2 809 2 727 2 509 2 190 3 510 2 406 10 512 4 305 4 733 2 
420 2 111 6 522 10 693 2 477 2 322 2 3 8 269 2 61 2 60 2 270 26 162 2 781 2 641 2 164 6 213 8 743 2 214 2 597 2 538 2 600 2 16 2 433 28 601 2 602 4 708 8 791 2 542 2 543 4 544 6 72 2 713 2 607 2 78 2 611 2 131 14 27 6 28 2 177 2 88 4 179 2 243 4 721 2 92 2 347 14 138 2 561 2 810 4 35 2 36 2 674 36 190 2 510 2 568 10 406 14 258 6 308 2 466 4 685 4 517 4 156 2 735 2 
368 2 522 2 321 4 3 4 526 2 61 2 270 20 594 4 781 1 641 2 430 2 213 4 743 2 538 4 16 2 645 2 433 22 648 4 708 4 791 1 542 2 544 1 72 1 713 2 169 2 75 2 78 2 336 2 85 2 131 6 443 2 177 2 179 2 344 2 92 4 347 4 809 2 35 2 563 2 36 2 674 14 510 4 406 8 568 2 683 2 733 2 263 2 
419 2 420 2 111 4 209 2 586 4 477 2 695 4 322 2 698 2 3 6 527 2 60 2 699 2 270 44 593 2 777 2 528 2 529 2 641 2 4 2 703 2 164 6 213 6 214 2 743 2 538 2 600 2 16 2 646 2 433 46 602 2 222 2 708 6 382 2 790 2 649 2 542 2 543 2 545 2 225 2 713 2 794 2 611 2 386 2 612 2 78 2 126 2 173 2 659 2 128 2 234 4 84 2 717 2 131 20 27 4 28 2 549 2 497 2 753 2 243 2 180 6 136 2 721 2 92 2 449 2 348 2 347 36 352 4 138 2 810 2 35 2 727 2 295 2 36 2 190 2 674 48 510 2 459 2 255 2 406 20 569 2 258 4 308 2 466 2 824 2 684 2 155 2 517 2 735 2 50 2 768 2 
110 2 

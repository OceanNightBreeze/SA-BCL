#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR jtb.TokenMgrError 907 58 939 789 514 321 62 569 
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 811 467 607 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V FAILED junit.framework.AssertionFailedError 588 
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.Quant:memberOf(S[S)Z
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.Quant:lte(II)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
utilMDE.SimpleLog:SimpleLog(Z)V
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.ModBitTracker:num_sets()I
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:sum([I)I
utilMDE.LimitedSizeIntSet:add(I)V
daikon.Quant:eltsLteIndex([I)Z
utilMDE.ArraysMDE:max([I)I
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_2()I
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.ArraysMDE:concat([I[I)[I
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String; | RETURN | 14876 | return null
daikon.diff.Node:Node()V
daikon.ProglangType:isArray()Z
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.ModBitTracker:num_vars()I
utilMDE.Intern:internSubsequence([III)[I
jtb.JavaParser:jj_scan_token(I)Z
daikon.Quant:subsetOf([F[F)Z
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.Quant:pairwiseDivides([I[I)Z
daikon.Quant:pairwiseEqual([I[I)Z
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.Quant:memberOf(F[D)Z
daikon.inv.Invariant:logDetail()Z
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.OrderedPairIterator:hasNext()Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
utilMDE.Assert:assertTrue(Z)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.Quant:lt(II)Z
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.Quant:memberOf(D[F)Z
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.Quant:subsetOf([F[D)Z
utilMDE.LimitedSizeIntSet:size()I
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.Quant:eltsLTE([II)Z
utilMDE.Intern:intern([I)[I
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.Quant:eltsGTE([II)Z
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.inv.unary.scalar.NonZero:is_pointer()Z
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
utilMDE.MathMDE:missing_numbers([I)[I
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.inv.unary.scalar.NonZero:enabled()Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.diff.InvMap:InvMap()V
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.Quant:lexLT([I[I)Z
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.VarInfo:name()Ljava.lang.String;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:indexOf([ZZ)I
utilMDE.MathMDE:sign(I)I
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:subsetOf([B[I)Z
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.MathMDE:modulus([I)[I
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
utilMDE.FuzzyFloat:eq(DD)Z
daikon.Ppt:Ppt()V
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:sum([D)D
daikon.inv.filter.ObviousFilter:ObviousFilter()V
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.Quant:eq(FF)Z
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaCharStream:getEndColumn()I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eltsGtIndex([I)Z
utilMDE.WeakHasherMap:processQueue()V
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:slice([III)[I
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
jtb.JavaCharStream:getEndLine()I
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.Quant:eltwiseGT([I)Z
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
jtb.JavaCharStream:GetSuffix(I)[C
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.ArraysMDE:min([I)I
daikon.Quant:concat([I[I)[I
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.Quant:setEqual([I[I)Z
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.config.Configuration:apply(Ljava.lang.String;)V
jtb.Token:newToken(I)Ljtb.Token;
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.Quant:lexGTE([I[I)Z
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:eltwiseLTE([I)Z
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.Quant:eltsLT([II)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfo:new_ppt()V
daikon.Quant:isReverse([I[I)Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
utilMDE.ArraysMDE:fn_compose([I[I)[I
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
utilMDE.MathMDE:pow(II)I
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.ProglangType:baseIsIntegral()Z
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.ValueTuple:isMissingFlow(I)Z
jtb.TokenMgrError:TokenMgrError(Ljava.lang.String;I)V
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
utilMDE.ArraysMDE:indexOf([I[I)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.Quant:sameLength([I[I)Z
daikon.PptName:PptName(Ljava.lang.String;)V
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.Quant:subsetOf([J[J)Z
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.inv.Invariant:prob_and(DD)D
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern:intern([D)[D
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I | CONSTANT | 20467 | 32 -> 1
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
utilMDE.FuzzyFloat:ne(DD)Z
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Quant:intersection([I[I)[I
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
utilMDE.FuzzyFloat:lt(DD)Z
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.Quant:subsetOf([D[D)Z
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Quant:memberOf(I[I)Z
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:ne(II)Z
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String; | RETURN | 10782 | return null
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:esc_name()Ljava.lang.String;
utilMDE.ArraysMDE:sorted([I)Z
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.TokenMgrError:LexicalError(ZIIILjava.lang.String;C)Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.ProglangType:isPseudoArray()Z
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.PptSlice0:arity()I
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
utilMDE.ArraysMDE:sum([[D)D
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:gt(II)Z
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.PptName:isCombinedExitPoint()Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ProglangType:isIntegral()Z
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
utilMDE.MathMDE:negate(I)I
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:lexEqual([I[I)Z
daikon.inv.unary.LowerBoundCore:calc_modulus()J
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.Quant:pairwiseLTE([I[I)Z
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.VarComparabilityImplicit:alwaysComparable()Z
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.Invariant:logOn()Z
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
utilMDE.MathMDE:pow_fast(II)I
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.Quant:eltsGT([II)Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaCharStream:BeginToken()C
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.inv.unary.LowerBoundCore:computeConfidence()D
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:min_max([I)[I
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.ModBitTracker:num_samples()I
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.Quant:eq(JJ)Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.Quant:memberOf(F[F)Z
utilMDE.Intern:intern([J)[J
daikon.ProglangType:dimensions()I
daikon.VarInfoName:name()Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
jtb.JavaParser:jj_ntk()I
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
jtb.JavaCharStream:readChar()C
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
jtb.JavaParser:jj_2_1(I)Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.inv.Invariant:isWorthPrinting()Z
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.WeakHasherMap:size()I
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.Quant:eltwiseGTE([I)Z
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
utilMDE.ArraysMDE:sum([[I)I
daikon.VarInfoName:isLiteralConstant()Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
utilMDE.MathMDE:gcd(II)I
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.Quant:subsetOf([I[I)Z
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
jtb.TokenMgrError:addEscapes(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.ProglangType:baseIsScalar()Z
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
utilMDE.Intern.SequenceAndIndices:hashCode()I
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:subsetOf([S[S)Z
utilMDE.Intern:internSubsequence([JII)[J
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.PptName:isEnterPoint()Z
jtb.JavaCharStream:FillBuff()V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.Quant:gte(II)Z
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.Debug:logDetail()Z
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.Quant:pairwiseGTE([I[I)Z
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.VarInfoName:hashCode()I
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.Quant:eltsNotEqual([II)Z
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.InvariantFormatTester:execute()Z
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_2_16(I)Z
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.ArraysMDE:subarray([III)[I
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.ValueTuple:isMissing(I)Z
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:noDups([I)Z
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.ModBitTracker:split(I)I
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.PptSlice1:arity()I
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.ProglangType:isScalar()Z
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
utilMDE.FuzzyFloat:gt(DD)Z
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfo:relate_var()V
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
jtb.JavaCharStream:backup(I)V
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.inv.unary.LowerBoundCore:calc_range()J
utilMDE.MathMDE:mod_positive(II)I
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.Quant:setDiff([I[I)[I
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.ValueSet:ValueSet(I)V
utilMDE.FuzzyFloat:gte(DD)Z
daikon.Quant:eltwiseEqual([I)Z
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.Quant:memberOf(J[J)Z
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.Invariant:justified()Z
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:pairwiseSquare([I[I)Z
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.Quant:eltsEqual([II)Z
utilMDE.OrderedPairIterator:setnext1()V
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
daikon.Quant:eq(DD)Z
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:computeProbability()D
utilMDE.ArraysMDE:noDuplicates([J)Z
utilMDE.FuzzyFloat:lte(DD)Z
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.MathMDE:gcd(JJ)J
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:subsetOf([D[F)Z
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
utilMDE.MathMDE:gcd_differences([I)I
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.ModBitTracker:ModBitTracker(I)V
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.Invariant:prob_and(DDD)D
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.ValueTuple:size()I
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
jtb.JavaParser:jj_3_16()Z
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.Quant:eltwiseNotEqual([I)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.UpperBoundCore:calc_modulus()J
utilMDE.OrderedPairIterator:setnext2()V
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([II)I
daikon.Quant:eq(II)Z
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.Quant:eltsLtIndex([I)Z
jtb.JavaParser:jj_3_1()Z
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoAux:hashCode()I
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.PptSlice2:arity()I
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
jtb.JavaCharStream:getBeginLine()I
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.Quant:lexGT([I[I)Z
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.PptSlice0:initInvariantsSeen()V
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
utilMDE.ArraysMDE:subarray([JII)[J
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.Quant:eltwiseLT([I)Z
utilMDE.MathMDE:gcd([I)I
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.inv.Invariants:Invariants()V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.diff.PrintAllVisitor:bufPrintln()V
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.Quant:eltsGteIndex([I)Z
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
jtb.JavaCharStream:ReadByte()C
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.PptTopLevel.CondIterator:hasNext()Z
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.Quant:eltsEqualIndex([I)Z
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.inv.Invariant:getConfidence()D
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
jtb.TokenMgrError:TokenMgrError(ZIIILjava.lang.String;CI)V
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:set_rel_diff(D)V
utilMDE.ArraysMDE:element_range([I)I
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.Quant:lexLTE([I[I)Z
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:isSubset([D[D)Z
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.Quant:union([I[I)[I
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
jtb.JavaCharStream:getBeginColumn()I
utilMDE.Options.OptionInfo:argument_required()Z
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.Invariant:prob_or(DD)D
daikon.Debug:logOn()Z
daikon.diff.RootNode:RootNode()V
daikon.Quant:pairwiseGT([I[I)Z
jtb.JavaParser:jj_3R_47()Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.Quant:lexNotEqual([I[I)Z
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.Quant:pairwiseLT([I[I)Z
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.inv.unary.scalar.UpperBound:enabled()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.PptTopLevel:name()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern:numIntArrays()I
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.PptSlice1:num_samples()I
daikon.Quant:pairwiseNotEqual([I[I)Z
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
95 2 554 2 462 2 520 2 905 2 298 2 47 2 932 2 934 2 688 6 14 2 181 2 962 2 883 2 749 2 665 2 387 2 85 2 666 2 415 4 851 4 224 2 123 2 
615 2 95 8 932 4 616 6 934 8 352 6 407 4 688 14 397 2 181 4 861 4 749 4 462 5 387 4 415 12 684 2 298 8 
392 4 829 2 456 4 163 2 133 4 166 2 399 62 922 8 38 4 952 4 6 4 558 4 527 2 494 4 652 2 246 2 562 2 954 4 738 4 143 2 533 2 251 2 536 2 408 2 147 4 382 2 818 2 633 2 635 2 716 6 443 2 668 14 914 4 669 2 824 2 155 2 547 10 156 2 424 4 292 10 
101 2 458 2 172 2 589 2 930 2 909 2 380 2 471 2 21 2 480 2 
363 2 550 2 858 2 268 2 67 4 921 2 922 2 805 4 139 2 141 2 686 2 381 2 505 2 212 2 287 2 881 4 216 2 20 2 390 2 155 2 94 4 28 2 165 2 456 4 31 2 170 2 35 2 901 2 585 2 778 4 653 2 245 2 299 2 712 2 409 2 540 2 602 2 357 2 717 2 914 2 545 2 421 2 316 2 611 2 
484 4 95 32 128 2 723 2 616 6 672 6 368 6 861 4 462 22 771 4 557 6 43 4 528 2 298 32 208 2 932 16 934 32 352 6 407 4 688 53 661 2 181 16 256 4 689 6 881 4 883 18 749 16 664 2 387 16 85 2 751 4 415 48 576 8 154 6 851 6 318 4 579 2 123 4 94 4 
716 2 382 2 922 2 
655 2 199 2 713 2 167 22 81 2 674 2 323 10 259 2 328 2 913 2 340 2 927 2 611 2 915 2 
29 2 901 2 22 2 114 4 832 2 573 2 530 2 881 2 94 2 
109 2 503 2 856 2 80 2 948 2 702 6 413 2 479 2 775 6 870 6 439 2 
802 2 343 2 961 4 766 2 881 2 786 6 34 6 192 6 491 2 837 2 315 4 580 6 94 2 
484 6 550 2 95 16 368 8 462 12 432 8 102 2 812 2 684 4 298 16 957 4 932 10 568 8 934 16 688 28 572 2 181 10 883 8 881 6 749 10 387 10 85 4 415 26 969 2 57 2 851 10 579 2 123 6 614 4 94 6 
763 6 243 4 
909 2 
935 2 
698 2 881 2 
297 2 748 2 881 4 
266 2 722 2 617 1 726 4 860 2 620 2 730 2 731 2 134 24 732 2 271 2 866 2 4 2 868 2 373 2 9 2 12 2 496 2 871 4 626 3 142 2 627 1 740 2 501 2 378 3 279 4 379 2 742 2 876 2 745 1 881 34 289 2 884 2 19 2 886 2 752 2 152 12 637 3 644 2 765 2 517 3 898 16 168 6 899 3 646 2 768 1 36 3 770 1 773 1 405 16 529 2 530 2 173 1 780 6 534 1 301 5 783 2 179 2 49 2 658 2 410 1 660 2 52 16 542 2 785 2 414 2 55 2 912 2 418 4 417 2 419 1 544 2 793 8 794 2 61 2 800 2 801 3 65 2 673 2 804 2 677 32 806 2 73 2 924 2 75 1 206 1 209 2 210 2 565 16 332 2 687 2 936 2 570 8 819 2 442 3 940 1 220 2 222 2 825 2 91 4 447 2 826 2 94 32 454 2 452 2 582 2 703 24 460 2 233 1 833 6 234 2 235 2 237 2 345 2 836 4 586 4 240 2 707 2 103 2 349 4 244 2 590 2 955 2 708 2 108 1 710 2 958 2 351 3 959 2 112 2 842 2 596 2 600 8 714 2 257 32 476 3 477 6 119 1 970 2 261 2 971 3 120 3 362 2 265 2 608 2 482 2 612 2 
62 2 319 4 0 2 721 10 321 2 857 52 427 6 367 4 369 2 728 2 269 2 556 2 488 10 327 2 272 8 869 2 8 12 205 2 437 52 140 8 498 2 929 12 334 2 569 2 285 6 506 4 15 2 632 6 508 52 939 2 575 4 86 2 290 8 389 2 221 12 223 2 757 4 450 14 97 2 947 8 514 2 642 4 457 4 459 4 33 2 648 2 647 2 238 12 835 14 41 2 904 2 587 18 651 10 907 14 532 2 469 18 470 2 178 14 252 10 48 8 110 2 598 10 597 8 843 2 115 2 910 2 663 20 308 4 846 4 965 6 789 2 58 6 193 14 264 2 195 4 796 12 610 4 853 4 125 10 
325 2 629 1 346 2 262 2 779 2 342 2 922 2 614 2 
779 2 342 2 215 2 
553 2 779 2 342 2 
236 2 348 2 270 2 
779 2 342 2 
348 2 701 2 
592 2 779 2 
71 2 348 2 270 2 
946 2 578 2 270 2 
426 2 385 2 270 2 
938 2 18 2 270 2 
584 2 96 2 270 2 
348 2 675 2 
779 2 767 2 
823 2 578 2 
230 2 385 2 
203 2 18 2 
96 2 535 2 
348 2 896 2 
849 2 96 2 
180 2 18 2 
30 2 385 2 
788 2 578 2 
71 2 348 2 411 2 270 2 
71 2 348 2 942 2 411 2 270 2 
70 2 348 2 270 2 
348 2 695 2 270 2 
46 2 497 2 737 2 654 2 
483 2 159 2 77 2 724 2 113 2 167 6 571 2 16 2 288 4 964 2 478 2 2 2 338 2 706 4 59 2 106 2 683 2 175 2 
383 2 270 2 
44 2 262 2 213 2 922 2 
346 2 923 2 44 2 262 2 213 2 922 2 
262 2 779 2 342 2 670 2 922 2 614 2 
287 2 624 2 
188 2 262 2 922 2 614 2 
445 2 18 2 
96 2 131 2 
578 2 232 2 
122 2 385 2 
96 2 150 2 385 2 
96 2 918 2 385 2 
96 2 798 2 385 2 
96 2 227 2 385 2 
129 6 922 2 10 2 377 2 151 6 191 2 262 2 420 2 
160 2 348 2 
968 2 779 2 270 2 
779 2 911 2 
714 2 
617 2 725 2 726 2 860 2 371 2 620 2 732 2 866 2 271 2 373 2 138 2 496 2 12 2 742 2 279 4 379 2 146 2 876 2 634 2 881 26 884 2 752 2 152 8 638 2 643 2 644 6 168 6 776 2 405 6 530 2 780 2 658 2 660 2 306 2 414 2 418 2 546 2 800 2 673 2 920 2 677 4 806 2 74 4 209 2 816 4 936 2 570 2 341 2 577 2 91 4 449 2 94 26 582 2 833 2 235 2 836 4 586 4 240 2 103 2 707 4 349 2 955 2 708 2 108 2 841 2 112 2 596 2 257 6 477 4 358 2 970 2 261 2 362 2 608 2 
722 2 617 2 725 2 726 2 860 2 371 2 620 2 732 2 271 2 866 2 373 2 138 2 496 2 12 2 279 4 379 2 742 2 146 2 876 2 634 2 881 26 884 2 752 2 152 8 638 2 643 2 644 6 168 6 400 2 776 2 405 6 530 2 780 2 658 2 660 2 414 2 187 2 418 2 546 2 800 2 65 2 673 2 920 2 677 4 806 2 74 4 210 2 209 2 564 2 816 4 936 2 570 2 341 2 91 4 94 26 582 2 833 2 235 2 836 4 586 4 240 2 103 2 707 4 349 2 955 2 708 2 108 2 841 2 112 2 596 2 257 6 477 6 358 2 970 2 261 2 362 2 608 2 
567 2 
888 2 344 2 
549 2 202 2 676 2 433 2 866 2 271 2 373 2 329 2 870 6 500 2 742 2 379 2 872 2 283 4 877 2 744 2 80 4 82 8 507 2 17 4 937 4 148 2 881 12 574 2 693 4 23 2 444 2 88 2 89 2 91 2 226 2 94 6 396 2 764 2 948 2 702 6 168 4 295 2 583 2 775 6 42 2 836 2 240 2 523 2 525 2 524 4 465 8 956 10 303 2 595 2 537 2 659 2 539 2 183 2 51 4 413 4 543 2 479 2 309 2 800 2 
549 2 854 2 202 2 676 2 433 2 866 2 271 2 373 2 329 2 870 8 500 2 742 2 379 2 281 2 872 2 283 4 503 2 877 2 744 2 80 4 82 8 507 2 17 4 937 4 148 2 882 4 881 12 693 4 23 2 444 2 88 2 89 2 91 2 94 6 226 2 764 2 948 2 702 6 168 4 295 2 583 2 775 8 836 2 42 2 240 2 523 2 525 2 524 4 465 8 956 10 303 2 595 2 537 2 659 2 539 2 183 2 51 4 543 2 413 4 479 2 309 2 800 2 
283 2 877 2 595 2 744 2 80 2 702 2 202 2 937 4 183 2 148 2 51 4 543 2 413 2 775 2 42 2 523 2 525 2 226 2 
549 2 202 2 676 2 433 2 866 2 271 2 373 2 329 2 870 6 500 2 742 2 379 2 872 2 283 4 503 2 877 2 744 2 80 4 82 4 507 2 17 4 937 4 148 2 881 12 574 2 693 4 23 2 444 2 88 2 89 2 91 2 226 2 94 6 396 2 764 2 702 4 168 4 295 2 583 2 775 6 42 2 836 2 240 2 523 2 525 2 524 4 465 4 956 6 303 2 595 2 537 2 659 2 539 2 183 2 51 4 413 4 543 2 479 2 309 2 800 2 
549 2 856 2 202 2 676 2 433 2 866 2 271 2 373 2 329 2 870 6 500 2 742 2 379 2 872 2 283 4 877 2 744 2 80 4 82 4 507 2 17 4 937 4 148 2 881 12 574 2 693 4 23 2 444 2 88 2 89 2 91 2 226 2 94 6 396 2 764 2 702 6 168 4 295 2 583 2 775 4 42 2 836 2 240 2 523 2 525 2 524 4 465 4 956 6 303 2 595 2 537 2 659 2 539 2 183 2 51 4 413 4 543 2 479 2 309 2 800 2 
549 2 202 2 676 2 433 2 866 2 271 2 373 2 329 2 870 6 500 2 742 2 379 2 872 2 283 4 877 2 744 2 80 4 82 4 507 2 17 4 937 4 148 2 881 12 574 2 693 4 23 2 444 2 88 2 89 2 91 2 226 2 94 6 396 2 764 2 948 2 702 6 168 4 295 2 583 2 775 6 42 2 836 2 240 2 523 2 525 2 524 4 465 8 956 6 303 2 595 2 537 2 659 2 539 2 183 2 51 4 413 4 543 2 479 2 309 2 800 2 
549 2 856 2 202 2 676 2 433 2 866 2 271 2 373 2 329 2 870 8 500 2 742 2 379 2 872 2 283 4 877 2 744 2 80 4 82 8 507 2 17 4 937 4 148 2 881 12 574 2 693 4 23 2 444 2 88 2 89 2 91 2 226 2 94 6 396 2 764 2 948 2 702 8 168 4 295 2 583 2 775 6 836 2 42 2 240 2 523 2 525 2 524 4 465 8 956 10 303 2 595 2 537 2 659 2 539 2 183 2 51 4 413 4 543 2 479 2 309 2 800 2 
549 2 202 2 676 2 433 2 866 2 271 2 373 2 329 2 870 6 500 2 742 2 379 2 872 2 283 4 877 2 744 2 80 4 82 8 507 2 17 4 937 4 148 2 881 12 574 2 693 4 23 2 444 2 88 2 89 2 91 2 226 2 94 6 396 2 764 2 948 2 702 6 168 4 295 2 583 2 775 6 42 2 836 2 240 2 523 2 525 2 524 4 465 8 956 10 303 2 595 2 537 2 659 2 539 2 183 2 51 4 413 4 543 2 479 2 309 2 800 2 
726 2 487 2 732 2 271 2 489 2 734 2 735 2 496 2 12 2 500 2 742 2 279 4 283 4 744 2 507 2 17 8 23 2 511 6 512 2 293 2 764 2 518 2 295 2 519 2 775 4 39 6 42 2 523 2 524 6 525 2 297 6 530 2 780 2 303 2 537 2 304 7 305 6 539 4 51 4 307 2 543 2 309 2 311 2 314 2 546 2 548 2 799 6 800 2 65 2 549 2 551 2 555 1 807 8 329 2 561 7 813 1 816 4 815 2 78 2 80 4 570 2 574 2 339 2 88 2 341 2 89 2 91 4 94 24 581 2 833 2 583 2 836 4 586 4 103 2 349 2 839 1 353 2 595 2 596 2 599 2 845 2 601 1 362 2 608 2 132 1 856 4 860 2 864 2 865 6 866 2 621 2 373 2 870 12 379 2 872 2 873 2 876 2 877 2 878 2 148 2 634 4 881 46 884 2 152 4 891 1 892 2 643 2 644 6 168 6 401 2 171 1 405 6 906 6 658 2 659 2 183 2 412 6 184 2 413 4 414 2 418 2 667 6 423 6 197 2 673 2 202 2 919 2 429 1 677 2 676 2 433 2 681 6 436 10 438 2 210 2 936 12 935 6 937 4 690 4 693 4 941 2 444 4 226 2 453 6 698 6 702 8 235 2 463 2 240 2 465 2 466 4 956 2 468 1 711 6 257 8 477 6 479 4 967 6 261 2 
726 4 860 2 487 2 864 2 865 6 732 2 621 2 489 2 271 2 866 2 373 2 734 2 735 2 870 12 12 2 496 2 144 2 500 2 279 4 379 2 742 2 873 2 872 2 283 4 876 2 878 2 877 2 744 2 507 2 17 8 634 4 148 2 881 48 884 2 152 8 23 2 511 6 512 2 892 2 293 2 643 2 764 2 644 6 518 2 168 6 295 2 519 2 401 2 775 8 39 6 42 2 523 2 297 6 525 2 524 6 405 6 906 6 530 2 780 2 303 2 658 2 537 2 305 6 659 2 539 4 183 2 51 4 412 6 307 2 184 2 543 2 413 4 414 2 309 2 311 2 418 4 667 6 314 2 546 2 548 2 423 6 799 6 800 2 197 2 549 2 65 2 551 2 673 2 919 2 202 2 676 2 677 2 807 8 433 2 681 6 329 2 436 10 438 2 210 2 815 2 816 4 78 2 935 6 936 12 570 2 80 4 937 4 690 4 574 2 693 4 941 2 339 2 444 4 341 2 88 2 89 2 91 4 226 2 94 26 581 2 698 6 453 6 948 4 702 8 833 2 235 2 583 2 463 2 836 4 586 4 240 2 707 2 103 2 465 6 466 4 349 4 956 2 353 2 711 6 595 2 596 2 599 2 845 2 257 8 477 6 479 4 967 6 850 2 261 2 362 2 608 2 
726 4 860 2 487 2 864 2 865 6 732 2 621 2 489 2 271 2 866 2 373 2 734 2 735 2 870 12 12 2 496 2 144 2 500 2 279 4 379 2 742 2 873 2 872 2 283 4 876 2 878 2 877 2 744 2 507 2 17 8 634 4 148 2 881 48 884 2 152 8 23 2 511 6 512 2 892 2 293 2 643 2 764 2 644 6 518 2 168 6 295 2 519 2 401 2 775 8 39 6 42 2 523 2 297 6 525 2 524 6 405 6 906 6 530 2 780 2 303 2 658 2 537 2 305 6 659 2 539 4 183 2 51 4 412 6 307 2 184 2 543 2 413 4 414 2 309 2 311 2 418 4 667 6 314 2 546 2 548 2 423 6 799 6 800 2 197 2 549 2 65 2 551 2 673 2 919 2 202 2 676 2 677 2 807 8 433 2 681 6 329 2 436 10 438 2 210 2 815 2 816 4 78 2 935 6 936 12 570 2 80 4 82 4 937 4 690 4 574 2 693 4 941 2 339 2 444 4 341 2 88 2 89 2 91 4 226 2 94 26 581 2 698 6 453 6 948 4 702 8 833 2 235 2 583 2 463 2 836 4 586 4 240 2 707 2 103 2 465 6 466 4 349 4 956 6 353 2 711 6 595 2 596 2 599 2 845 2 257 8 477 6 479 4 967 6 850 2 261 2 362 2 608 2 
726 4 487 2 732 2 271 2 489 2 734 2 735 2 496 2 12 2 500 2 279 4 742 2 502 2 283 4 503 2 744 2 507 2 17 8 23 2 511 12 291 2 512 2 293 2 764 2 518 2 295 2 519 2 775 10 774 6 39 12 42 2 523 2 524 6 525 2 297 12 530 2 780 4 302 2 303 2 537 2 305 6 539 4 51 4 307 2 543 2 309 2 311 2 314 2 546 4 548 2 799 6 800 2 65 2 549 2 551 2 807 8 329 2 330 6 816 6 815 2 78 2 80 4 570 4 82 4 574 2 339 2 88 2 341 2 89 2 91 4 94 24 581 2 833 4 583 2 836 4 586 4 103 2 349 4 353 2 595 2 596 2 599 2 845 2 847 6 850 2 362 2 608 2 365 2 856 2 860 2 864 2 865 6 866 2 621 2 373 2 870 16 144 2 379 2 872 2 873 2 876 2 875 6 877 2 878 2 148 2 634 4 881 52 884 2 152 10 643 2 644 8 168 6 401 2 405 8 906 6 656 6 658 2 659 2 183 2 412 6 184 2 413 4 414 2 418 4 667 6 423 6 197 2 916 2 917 6 673 2 202 2 919 2 677 4 676 2 433 2 434 6 681 6 436 8 438 2 210 2 936 10 935 12 937 4 690 4 693 4 218 2 941 2 444 4 226 2 453 6 698 12 948 4 702 10 949 2 235 2 463 2 953 2 240 2 707 2 465 6 466 4 956 6 249 6 711 6 474 6 257 12 477 6 479 4 967 12 261 2 
549 2 948 2 702 6 202 2 583 2 775 6 42 2 329 2 523 2 524 2 465 6 870 4 956 4 500 2 872 2 877 2 537 2 659 2 80 4 82 4 507 2 17 2 937 2 148 2 51 2 881 4 574 2 479 2 543 2 413 4 309 2 693 2 23 2 89 2 226 2 
860 2 731 2 732 2 271 2 866 2 373 2 870 4 496 2 500 2 379 2 279 4 742 2 872 2 876 2 877 2 630 2 507 2 17 2 634 2 148 2 881 28 884 2 23 2 892 2 643 2 644 6 897 2 168 6 775 6 42 2 523 2 524 2 405 6 530 2 780 3 174 2 537 2 658 2 659 2 51 2 785 2 413 4 543 2 414 2 309 2 800 2 65 2 549 2 673 2 202 2 69 2 677 3 329 2 436 2 210 2 816 4 936 4 80 4 937 2 574 2 693 2 88 2 341 2 89 2 91 4 92 3 448 2 94 24 226 2 948 2 702 6 460 2 833 3 235 2 583 2 836 4 240 2 586 4 103 2 465 6 956 2 596 2 714 2 257 8 477 6 479 2 261 2 362 2 608 2 
186 2 659 2 89 2 
186 2 659 2 89 2 
130 2 856 4 726 4 860 2 732 2 271 2 866 2 373 2 274 2 870 16 12 4 496 2 279 4 379 2 742 2 743 4 872 2 283 4 876 2 503 4 284 2 17 4 634 6 148 4 881 24 884 2 152 4 760 2 162 2 643 2 644 2 294 2 168 6 295 2 900 2 775 12 523 2 525 2 524 4 405 2 906 2 530 2 657 2 303 2 658 2 659 4 539 2 183 2 51 2 543 2 413 4 186 2 414 2 189 4 418 4 800 2 65 2 673 2 919 2 676 2 677 2 324 2 436 2 928 2 210 2 936 4 440 2 80 4 82 4 937 2 690 2 693 2 941 2 339 2 444 4 341 2 89 6 91 4 94 16 699 2 98 2 831 2 948 4 702 12 231 2 235 2 583 2 836 4 586 4 240 2 103 2 465 6 466 2 349 4 956 6 593 2 596 2 257 2 117 2 477 6 479 4 358 4 362 2 608 2 
379 2 657 2 936 2 130 2 744 2 294 2 487 2 690 2 258 2 881 4 951 2 888 2 436 2 755 2 906 2 438 2 94 2 
130 2 856 4 726 4 860 2 732 2 271 2 866 2 373 2 274 2 276 2 870 16 12 4 496 2 279 4 379 2 742 2 743 4 872 2 283 4 876 2 503 4 284 2 17 4 634 6 148 4 881 24 884 2 152 4 756 2 643 2 644 2 294 2 168 6 295 2 775 12 902 2 523 2 525 2 524 4 405 2 906 2 531 2 530 2 657 2 303 2 658 2 659 4 539 4 183 2 51 2 543 2 413 4 186 2 414 2 189 4 418 4 800 2 65 2 673 2 919 2 676 2 677 4 433 2 435 2 928 2 210 2 936 2 440 2 80 4 82 4 937 2 693 2 941 2 339 2 444 4 341 2 89 6 91 4 94 16 699 2 98 2 831 2 948 4 702 12 231 2 235 2 583 2 836 4 586 4 240 2 103 2 465 6 466 2 349 4 956 6 593 2 596 2 257 2 117 4 477 6 479 4 358 4 362 2 608 2 
130 2 856 4 726 4 860 2 732 2 271 2 866 2 373 2 274 2 870 16 12 4 496 2 279 4 379 2 742 2 743 4 872 2 283 4 876 2 503 4 284 2 17 4 634 6 148 4 881 24 884 2 152 4 893 2 393 2 643 2 644 2 294 2 398 2 168 6 295 2 775 12 523 2 525 2 524 4 405 2 906 2 530 2 657 2 303 2 658 2 659 4 539 4 183 2 51 2 543 2 413 4 186 2 414 2 189 4 418 4 800 2 65 2 673 2 919 2 676 2 677 2 433 2 436 2 928 2 210 2 936 4 440 2 817 2 80 4 82 4 937 2 690 2 693 2 941 2 339 2 444 4 341 2 89 6 91 4 94 16 699 2 98 2 831 2 948 4 702 12 231 2 235 2 583 2 836 4 586 4 240 2 103 2 465 6 466 2 349 4 838 2 956 6 593 2 596 2 257 2 117 2 477 6 479 4 358 4 362 2 608 2 
126 2 197 2 425 2 65 1 673 2 322 2 860 2 677 2 732 2 866 2 271 2 373 2 135 2 137 1 811 2 563 2 210 1 742 2 279 2 379 2 816 4 876 2 878 2 936 2 441 2 634 2 214 2 881 24 341 2 91 4 293 2 94 18 644 6 645 2 168 6 833 2 950 2 235 2 704 2 836 4 586 2 240 2 103 2 405 6 530 2 467 2 780 2 250 2 350 2 658 2 354 2 257 8 477 3 963 1 184 2 416 2 311 2 190 2 605 2 261 2 312 2 314 2 792 2 607 2 362 2 608 2 800 2 
640 2 394 2 619 2 644 2 229 2 833 3 862 3 677 3 623 2 405 2 376 2 780 3 331 2 176 2 816 2 257 2 746 4 881 2 355 2 753 2 261 2 852 2 546 6 513 1 94 2 
640 2 394 2 619 2 644 2 229 2 833 2 862 2 677 2 623 2 405 2 376 2 780 2 331 2 176 2 816 2 257 2 746 4 881 2 355 2 753 2 261 2 852 2 546 6 94 2 
640 2 394 2 619 2 644 2 229 2 833 2 862 2 677 2 623 2 405 2 376 2 780 2 331 2 176 2 816 2 257 2 746 4 881 2 355 2 753 2 261 2 852 2 546 6 94 2 
484 2 485 4 368 4 370 3 372 2 677 3 863 2 559 4 565 2 331 2 932 2 934 2 504 2 933 2 688 5 881 10 749 2 386 4 387 2 225 2 94 4 759 3 26 2 828 3 762 4 95 2 700 2 834 2 903 2 403 2 780 3 298 2 782 2 840 6 181 2 257 2 52 2 415 4 261 2 422 4 
828 2 762 4 484 2 95 2 700 2 485 4 368 4 370 2 372 2 863 2 462 2 834 2 677 2 903 2 403 2 559 4 780 2 298 2 782 2 331 2 565 2 840 6 932 2 933 2 504 2 934 2 688 4 181 2 257 2 52 2 883 2 881 10 386 4 749 2 387 2 415 4 261 2 422 4 225 2 579 2 26 2 759 2 94 4 
828 2 762 4 484 2 95 2 700 2 485 4 368 4 370 2 372 2 863 2 462 2 834 2 677 2 903 2 403 2 559 4 780 2 298 2 782 2 331 2 565 2 840 6 932 2 933 2 504 2 934 2 688 4 181 2 257 2 52 2 883 2 881 10 386 4 749 2 387 2 415 4 261 2 422 4 225 2 579 2 26 2 759 2 94 4 
828 2 762 4 484 2 95 2 700 2 485 4 368 4 370 2 372 2 863 2 462 2 834 2 677 2 903 2 403 2 559 4 780 2 298 2 782 2 331 2 565 2 840 6 932 2 933 2 504 2 934 2 688 4 181 2 257 2 52 2 883 2 881 10 386 4 749 2 387 2 415 4 261 2 422 4 225 2 579 2 26 2 759 2 94 4 
828 2 762 4 484 2 95 2 700 2 485 4 368 4 370 2 372 2 863 2 462 4 834 2 677 2 903 2 403 2 559 4 780 2 298 2 782 2 331 2 565 2 840 6 932 2 933 2 504 2 934 2 688 4 181 2 257 2 52 2 883 4 881 10 386 4 749 2 387 2 415 4 261 2 422 4 225 2 579 4 26 2 759 2 94 4 
719 2 895 2 273 2 682 2 313 2 3 2 
678 2 725 2 50 2 925 2 588 2 662 2 3 2 
451 2 296 2 72 2 374 1 241 2 622 2 464 2 685 2 908 2 628 2 742 2 251 1 709 2 255 1 784 2 881 10 750 2 54 1 443 1 56 2 24 2 263 2 511 2 360 2 94 8 697 2 
484 2 95 6 723 1 616 4 552 2 368 4 462 4 585 2 557 4 809 2 43 2 298 6 280 2 932 6 934 6 407 2 688 15 181 6 286 2 881 6 883 3 749 6 387 6 692 2 787 2 415 12 20 2 576 2 446 2 579 2 94 6 
364 1 485 2 428 2 881 1 431 2 83 2 386 2 649 2 185 2 310 4 5 7 490 2 493 2 926 2 526 2 481 2 422 2 94 1 
485 2 428 2 431 4 83 2 386 2 649 2 185 2 310 4 5 6 490 4 493 2 926 2 526 2 481 4 422 2 
364 1 485 2 428 6 881 1 431 8 83 2 386 2 649 8 185 2 310 4 5 10 490 8 493 2 926 2 526 2 481 8 422 2 94 1 
485 2 431 2 83 2 386 2 185 2 310 2 5 2 490 2 493 2 926 2 526 2 481 2 422 2 
127 6 267 6 1 8 618 6 727 4 486 30 732 8 867 2 136 26 736 8 375 6 11 8 277 4 13 7 625 2 278 6 499 4 741 5 279 88 874 4 145 21 880 7 631 90 747 2 149 24 881 150 636 4 885 4 887 6 509 6 889 4 25 4 754 10 758 6 158 18 27 17 641 4 761 4 395 1 164 10 515 4 516 26 32 10 37 2 769 6 772 4 402 6 521 6 650 2 45 6 406 26 781 6 538 2 182 90 53 4 790 9 791 92 317 12 196 12 60 5 797 9 63 8 198 16 65 58 803 24 66 11 201 6 68 10 430 6 204 2 808 24 679 2 680 84 810 6 76 6 207 6 210 58 814 8 333 8 566 6 79 6 335 2 691 3 87 2 217 18 821 10 219 10 694 8 822 10 943 2 945 36 944 6 90 10 696 4 827 2 94 134 228 3 830 4 455 24 99 50 705 4 239 6 586 112 347 2 242 16 103 14 105 4 107 2 247 2 591 16 472 2 253 6 844 13 473 6 116 24 475 42 715 4 477 248 356 42 848 8 966 2 603 4 604 4 359 4 609 24 608 14 718 42 613 124 
720 2 127 2 803 2 64 2 65 2 198 4 320 2 1 2 618 2 671 2 200 2 859 2 486 38 68 2 732 2 733 2 326 2 679 2 7 2 560 2 495 2 736 2 207 2 210 2 739 2 931 2 279 20 282 2 333 2 879 6 335 2 384 2 149 2 881 46 84 4 337 2 820 4 388 2 821 2 509 2 219 2 822 2 694 4 510 2 639 2 890 2 943 2 754 2 945 2 391 2 90 2 758 2 158 2 27 2 94 44 894 2 161 2 455 2 164 2 169 2 32 2 461 2 40 2 522 2 777 2 650 2 586 20 404 2 45 2 103 2 242 4 104 2 247 2 591 4 248 4 594 2 300 2 960 4 253 2 111 2 254 2 477 44 118 2 848 2 966 2 603 2 194 2 121 2 60 2 608 2 797 6 613 6 
855 2 267 4 618 4 366 2 486 14 729 8 732 2 275 4 492 32 736 2 375 4 13 4 625 2 278 4 741 2 279 36 282 2 874 4 145 8 880 4 881 78 887 4 509 4 889 4 153 2 25 4 754 4 157 4 758 4 158 10 27 10 894 10 761 4 164 4 515 4 169 2 769 4 772 4 402 4 521 4 650 2 45 4 781 4 300 2 177 8 538 2 541 4 790 4 791 24 317 14 795 4 797 6 198 10 65 28 320 10 201 4 430 4 808 8 680 24 76 4 207 4 210 30 333 2 211 8 79 4 335 2 336 16 691 2 821 4 219 6 694 2 943 2 945 6 90 4 93 2 94 70 228 2 830 4 99 8 239 4 586 44 242 10 103 6 247 2 591 10 594 10 253 4 844 4 473 4 475 8 715 4 477 104 356 30 848 2 966 2 604 4 359 4 260 4 606 2 973 4 972 8 974 4 361 16 608 6 718 16 124 2 613 24 
65 12 198 6 66 2 618 4 486 14 732 2 867 2 679 2 736 2 11 2 13 2 207 4 210 12 741 2 279 14 333 2 282 2 145 6 566 2 880 2 335 2 747 2 384 2 881 28 821 2 509 4 219 2 694 2 943 2 754 2 945 2 90 2 696 2 827 2 758 4 94 26 27 2 158 2 641 2 164 2 347 2 650 2 586 14 45 4 103 2 242 6 591 6 247 2 406 10 253 4 844 4 477 40 356 6 848 2 966 2 60 2 608 2 797 4 613 8 
100 2 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V PASSED
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 1176 1154 973 68 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_0()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_1()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_2()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_3()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_4()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_5()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_6()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_7()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_8()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_9()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_10()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_11()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_12()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_13()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_14()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_15()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_16()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_17()V PASSED
daikon.test.split.SplitterFactoryTest:testmisc_Fib_main_18()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_19()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_20()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_21()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_22()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_23()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_24()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_25()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_26()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_27()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_28()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_29()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_30()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_31()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_32()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__33()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__34()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__35()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__36()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__37()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__38()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__39()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__40()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__41()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__42()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__43()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
jtb.syntaxtree.CompilationUnit:accept(Ljtb.visitor.Visitor;)V
daikon.ProglangType:isPseudoArray()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.Quant:subsetOf([D[F)Z
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
utilMDE.OrderedPairIterator:setnext1()V
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.Quant:eq(DD)Z
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_123()Z
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor.1:visit(Ljtb.syntaxtree.TypeParameter;)V
jtb.syntaxtree.NodeChoice:getParent()Ljtb.syntaxtree.Node;
jtb.JavaParser:jj_3R_73()Z
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
jtb.JavaParser:jj_3R_161()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBody;)V
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
jtb.JavaParser:jj_3_10()Z
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ImportDeclaration;)V
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.Quant:pairwiseGTE([I[I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
utilMDE.ArraysMDE:fn_is_permutation([I)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.JavaParser:jj_3_13()Z
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
jtb.syntaxtree.MethodDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.tools.jtb.Ast:getPackage(Ljtb.syntaxtree.CompilationUnit;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.Quant:lexEqual([I[I)Z
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.test.TestAst:checkMatch(Ljava.lang.String;Ljtb.syntaxtree.MethodDeclaration;Ldaikon.tools.jtb.PptNameMatcher;)V
daikon.Quant:memberOf(F[D)Z
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.BlockStatement;)V
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Intern:intern([D)[D
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3_1()Z
daikon.test.InvariantFormatTester:execute()Z
daikon.Quant:isReverse([I[I)Z
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.Quant:subsetOf([J[J)Z
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_108()Z
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptTopLevel:name()Ljava.lang.String;
jtb.JavaParser:jj_3R_117()Z
daikon.ModBitTracker:num_samples()I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameters;)V
jtb.JavaParser:jj_3R_125()Z
daikon.Quant:eltsNotEqual([II)Z
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
utilMDE.ArraysMDE:fn_identity(I)[I
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltwiseGT([I)Z
jtb.JavaParser:jj_2_16(I)Z
jtb.JavaParser:jj_scan_token(I)Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
jtb.JavaParser:jj_ntk()I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.CompilationUnit;)V
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
jtb.JavaParser:jj_2_25(I)Z
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_110()Z
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
jtb.syntaxtree.NullLiteral:accept(Ljtb.visitor.Visitor;)V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
jtb.JavaParser:jj_3R_105()Z
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.RelationalExpression;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.tools.jtb.Ast:create(Ljava.lang.String;Ljava.lang.String;)Ljtb.syntaxtree.Node;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReferenceType;)V
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljava.lang.String;Ljava.lang.String;Ljava.util.List;)Z
jtb.syntaxtree.ImportDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.ClassOrInterfaceDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_48()Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_69()Z
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
jtb.syntaxtree.AdditiveExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_106()Z
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_85()Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
utilMDE.FuzzyFloat:lte(DD)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_126()Z
daikon.Quant:eltsEqualIndex([I)Z
jtb.syntaxtree.ClassOrInterfaceBody:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeListOptional:present()Z
jtb.JavaParser:jj_3R_51()Z
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PackageDeclaration;)V
daikon.Quant:gte(II)Z
jtb.JavaParser:jj_2_15(I)Z
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.Quant:eltsGtIndex([I)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
jtb.JavaParser:jj_3R_77()Z
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
jtb.visitor.TreeDumper:printToken(Ljava.lang.String;)V
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.Quant:eltwiseNotEqual([I)Z
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:accept(Ljtb.visitor.Visitor;)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:numIntArrays()I
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.Quant:eq(JJ)Z
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.ProglangType:baseIsScalar()Z
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_81()Z
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaCharStream:GetImage()Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:accept(Ljtb.visitor.Visitor;)V
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AdditiveExpression;)V
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3_18()Z
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;Ljava.lang.String;)V
daikon.PptName:getSignature()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.FuzzyFloat:ne(DD)Z
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.PptSlice2:arity()I
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
jtb.syntaxtree.ConditionalExpression:accept(Ljtb.visitor.Visitor;)V
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.tools.jtb.Ast:quickFixForInternalComment(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_136()Z
jtb.syntaxtree.ReturnStatement:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_2_13(I)Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
utilMDE.OrderedPairIterator:hasNext()Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.TypeArgument:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:setDiff([I[I)[I
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.inv.Invariant:prob_and(DDD)D
daikon.Quant:subsetOf([D[D)Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
jtb.JavaParser:jj_3_22()Z
daikon.ValueTuple:isMissingFlow(I)Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameter;)V
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.PptSlice1:num_samples()I
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
utilMDE.UtilMDE:lineNumberFileReader(Ljava.io.File;)Ljava.io.LineNumberReader;
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.visitor.FormatCommand:FormatCommand(II)V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
jtb.JavaCharStream:backup(I)V
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
jtb.syntaxtree.NodeSequence:elementAt(I)Ljtb.syntaxtree.Node;
daikon.Quant:ne(II)Z
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
jtb.JavaParser:jj_3R_72()Z
jtb.syntaxtree.TypeArguments:TypeArguments(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeArgument;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.TypeDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_19()Z
jtb.syntaxtree.ConditionalAndExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.Quant:eltsLT([II)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NullLiteral;)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:hashCode()I
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
daikon.Quant:lexLT([I[I)Z
utilMDE.ArraysMDE:sum([[D)D
utilMDE.MathMDE:gcd_differences([I)I
daikon.VarInfoName.NodeFinder:inPre()Z
jtb.visitor.TreeFormatter:add(Ljtb.visitor.FormatCommand;)V
jtb.syntaxtree.TypeBound:accept(Ljtb.visitor.Visitor;)V
utilMDE.Assert:assertTrue(Z)V
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArgument;)V
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.tools.jtb.Ast:getParent(Ljava.lang.Class;Ljtb.syntaxtree.Node;)Ljtb.syntaxtree.Node;
jtb.JavaParser:FormalParameter()Ljtb.syntaxtree.FormalParameter;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.test.TestQuant:removeAdjacentDups([I)[I
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptName:isCombinedExitPoint()Z
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.inv.Invariant:getConfidence()D
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
jtb.syntaxtree.Expression:accept(Ljtb.visitor.Visitor;)V
daikon.tools.jtb.Ast:removeWhitespace(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.tools.jtb.Ast:getClassName(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_96()Z
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
jtb.JavaParser:getToken(I)Ljtb.Token;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
jtb.syntaxtree.TypeDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
daikon.tools.jtb.Ast.1GetParametersVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
jtb.JavaParser:jj_3_28()Z
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
jtb.JavaParser:jj_3R_137()Z
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeOptional;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:eltsGTE([II)Z
utilMDE.FuzzyFloat:eq(DD)Z
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.NodeList:NodeList()V
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.inv.unary.UpperBoundCore:calc_range()J
jtb.JavaParser:jj_3R_121()Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.JavaParser:jj_3R_134()Z
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.visitor.TreeFormatter:placeToken(Ljtb.syntaxtree.NodeToken;II)V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MultiplicativeExpression;)V
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
jtb.syntaxtree.CompilationUnit:getParent()Ljtb.syntaxtree.Node;
jtb.JavaParser:jj_3R_54()Z
jtb.JavaParser:jj_3R_74()Z
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_68()Z
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
jtb.syntaxtree.ExclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.Quant:eltsGteIndex([I)Z
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.ProglangType:baseIsIntegral()Z
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.PptName:getFullClassName()Ljava.lang.String;
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
jtb.JavaParser:jj_2_35(I)Z
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.tools.jtb.PptNameMatcher:extractPptArgs(Ldaikon.PptName;)Ljava.util.List;
jtb.JavaParser:jj_3R_163()Z
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_104()Z
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ExclusiveOrExpression;)V
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
jtb.visitor.TreeFormatter:space(I)Ljtb.visitor.FormatCommand;
daikon.inv.filter.InvariantFilters:InvariantFilters()V
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
jtb.JavaParser:jj_2_36(I)Z
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
jtb.JavaParser:jj_3R_162()Z
utilMDE.ArraysMDE:sorted([I)Z
jtb.JavaParser:jj_3_21()Z
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.Debug:logOn()Z
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
jtb.visitor.TreeDumper:TreeDumper(Ljava.io.Writer;)V
utilMDE.SimpleLog:SimpleLog(Z)V
utilMDE.LimitedSizeIntSet:add(I)V
daikon.tools.jtb.Ast:format(Ljtb.syntaxtree.Node;)Ljava.lang.String;
utilMDE.Intern:intern([J)[J
jtb.syntaxtree.NodeSequence:elements()Ljava.util.Enumeration;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.ModBitTracker:num_sets()I
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.TypeParameters:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameter;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptName:getMethodName()Ljava.lang.String;
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap:size()I
daikon.Quant:pairwiseNotEqual([I[I)Z
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.LowerBoundCore:computeProbability()D
jtb.JavaParser:jj_3R_118()Z
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
jtb.JavaParser:jj_3R_149()Z
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.Quant:memberOf(F[F)Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_180()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryExpression;)V
jtb.JavaParser:jj_2_21(I)Z
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.PptSlice0:arity()I
jtb.syntaxtree.NodeListOptional:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
utilMDE.ArraysMDE:subarray([III)[I
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
jtb.syntaxtree.RelationalExpression:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:lte(II)Z
jtb.JavaParser:jj_3R_133()Z
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;Z)Z
jtb.syntaxtree.ShiftExpression:accept(Ljtb.visitor.Visitor;)V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.Quant:eltsLtIndex([I)Z
jtb.syntaxtree.TypeArguments:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_62()Z
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.Quant:pairwiseLTE([I[I)Z
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
jtb.syntaxtree.InstanceOfExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_70()Z
jtb.JavaParser:jj_3_25()Z
jtb.syntaxtree.ResultType:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryPrefix;)V
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.Quant:concat([I[I)[I
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
jtb.syntaxtree.PrimaryPrefix:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
utilMDE.LimitedSizeIntSet:size()I
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.ValueTuple:size()I
daikon.Quant:lexGT([I[I)Z
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.Statement:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:element_range([I)I
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.inv.Invariant:prob_and(DD)D
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.tools.jtb.PptNameMatcher:typeMatch(Ljava.lang.String;Ljtb.syntaxtree.FormalParameter;)Z
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName:esc_name()Ljava.lang.String;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:ungenerify(Ljtb.syntaxtree.ClassOrInterfaceType;)V
utilMDE.ArraysMDE:subarray([JII)[J
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:calc_modulus()J
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.syntaxtree.TypeArguments:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:noDuplicates([D)Z
jtb.JavaParser:jj_3R_86()Z
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_14()Z
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.Quant:eltwiseGTE([I)Z
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:pairwiseDivides([I[I)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
jtb.syntaxtree.PrimaryExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:max([I)I
jtb.JavaParser:jj_3R_87()Z
jtb.visitor.TreeFormatter:processList(Ljtb.syntaxtree.NodeListInterface;)V
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.NodeSequence:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.Modifiers:accept(Ljtb.visitor.Visitor;)V
daikon.ProglangType:elementType()Ldaikon.ProglangType;
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ResultType;)V
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:MoreLexicalActions()V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
utilMDE.FuzzyFloat:gt(DD)Z
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
daikon.Ppt:Ppt()V
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.tools.jtb.SimpleTreeDumper:SimpleTreeDumper(Ljava.io.Writer;)V
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalAndExpression;)V
jtb.syntaxtree.FormalParameter:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_120()Z
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_29()Z
jtb.syntaxtree.Block:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ClassOrInterfaceBody:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeDeclaration;)V
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.ProglangType:dimensions()I
utilMDE.ArraysMDE:indexOf([II)I
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.Quant:eltsLTE([II)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_3()Z
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameters;)V
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.JavaParser:jj_3R_124()Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.FuzzyFloat:lt(DD)Z
jtb.JavaParser:jj_3R_100()Z
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
jtb.visitor.TreeFormatter:TreeFormatter()V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_98()Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.VarInfo:relate_var()V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.UtilMDE:removeWhitespaceBefore(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern:intern([I)[I
jtb.JavaCharStream:getEndColumn()I
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.Invariant:prob_is_ge(DD)D
utilMDE.ArraysMDE:concat([I[I)[I
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljtb.syntaxtree.Node;)Z
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltwiseEqual([I)Z
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.Quant:sameLength([I[I)Z
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3_30()Z
jtb.JavaParser:jj_3_27()Z
jtb.JavaParser:jj_3R_75()Z
daikon.ProglangType:isArray()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;)V
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.MathMDE:pow(II)I
daikon.VarInfoName:name()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap:processQueue()V
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
jtb.JavaParser:jj_3_16()Z
daikon.diff.Node:Node(LutilMDE.Pair;)V
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
daikon.inv.unary.scalar.NonZero:enabled()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;)V
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.inv.Invariant:format()Ljava.lang.String;
utilMDE.MathMDE:modulus([I)[I
daikon.Quant:intersection([I[I)[I
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:setEqual([I[I)Z
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_114()Z
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.PptSlice1:arity()I
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.ArraysMDE:noDuplicates([J)Z
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
jtb.visitor.TreeFormatter:processList(Ljtb.syntaxtree.NodeListInterface;Ljtb.visitor.FormatCommand;)V
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
jtb.JavaParser:JavaParser(Ljava.io.Reader;)V
daikon.diff.Node:Node()V
utilMDE.Intern:internSubsequence([JII)[J
utilMDE.OrderedPairIterator:setnext2()V
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_164()Z
utilMDE.Intern:internSubsequence([III)[I
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.ReferenceType:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
jtb.JavaParser:jj_3_12()Z
daikon.Quant:eltwiseLT([I)Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_169()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:gcd(II)I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.diff.Node:add(Ljava.lang.Object;)V
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalOrExpression;)V
daikon.Quant:memberOf(D[F)Z
jtb.syntaxtree.ClassOrInterfaceDeclaration:getParent()Ljtb.syntaxtree.Node;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
jtb.syntaxtree.AndExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:ClassOrInterfaceDeclaration(Ljtb.syntaxtree.NodeChoice;Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ClassOrInterfaceBody;)V
jtb.syntaxtree.NodeToken:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:repr()Ljava.lang.String;
jtb.JavaCharStream:readChar()C
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InstanceOfExpression;)V
utilMDE.UtilMDE:splitLines(Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
daikon.tools.jtb.SimpleTreeDumper:printToken(Ljava.lang.String;)V
jtb.JavaCharStream:getBeginLine()I
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
jtb.JavaParser:jj_3R_99()Z
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.ArraysMDE:fn_compose([I[I)[I
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
jtb.visitor.TreeFormatter:TreeFormatter(II)V
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Name;)V
jtb.syntaxtree.VariableDeclaratorId:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaCharStream:ReadByte()C
jtb.JavaParser:jj_3R_109()Z
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.PostfixExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Modifiers;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:copy(Ljava.util.HashMap;)Ljava.util.HashMap;
utilMDE.MathMDE:bitwiseComplement(I)I
jtb.syntaxtree.NodeOptional:present()Z
daikon.test.TestAst.MethodDeclarationHarvester:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
jtb.syntaxtree.ClassOrInterfaceBody:getParent()Ljtb.syntaxtree.Node;
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.InvMap:InvMap()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_210()Z
daikon.tools.jtb.Ast:getParameters(Ljtb.syntaxtree.MethodDeclaration;)Ljava.util.List;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
jtb.syntaxtree.TypeArgument:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Options.OptionInfo:argument_required()Z
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
jtb.JavaParser:jj_2_4(I)Z
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltsEqual([II)Z
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:toString()Ljava.lang.String;
jtb.JavaParser:jj_3R_103()Z
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
jtb.JavaParser:jj_3R_122()Z
utilMDE.UtilMDE:lineNumberFileReader(Ljava.lang.String;)Ljava.io.LineNumberReader;
daikon.Quant:eq(II)Z
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.tools.jtb.PptNameMatcher:getUngenerifiedType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
jtb.visitor.FormatCommand:getCommand()I
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeBound;)V
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
jtb.JavaParser:jj_2_12(I)Z
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PostfixExpression;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Block;)V
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
jtb.syntaxtree.VariableDeclaratorId:accept(Ljtb.visitor.Visitor;)V
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.diff.RootNode:RootNode()V
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
jtb.syntaxtree.ClassOrInterfaceBody:ClassOrInterfaceBody(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.FormalParameter:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:VariableDeclaratorId()Ljtb.syntaxtree.VariableDeclaratorId;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.ArraysMDE:min([I)I
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.FormalParameters:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
jtb.JavaParser:jj_3R_53()Z
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
jtb.JavaParser:jj_3R_57()Z
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;)Z
jtb.syntaxtree.NodeToken:numSpecials()I
jtb.syntaxtree.EqualityExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_107()Z
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
jtb.JavaParser:jj_3R_47()Z
daikon.tools.jtb.Ast:getType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.Quant:pairwiseGT([I[I)Z
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.Quant:memberOf(J[J)Z
daikon.Quant:pairwiseSquare([I[I)Z
jtb.JavaParser:jj_3_20()Z
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.tools.jtb.Ast:getName(Ljtb.syntaxtree.MethodDeclaration;)Ljava.lang.String;
daikon.ProglangType:isIntegral()Z
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.EntrySet:size()I
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.MultiplicativeExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.ValueSet:ValueSet(I)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_2_18(I)Z
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.ModBitTracker:ModBitTracker(I)V
daikon.Quant:eltwiseLTE([I)Z
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
jtb.JavaParser:jj_3R_135()Z
daikon.Quant:eq(FF)Z
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.PptMap:asCollection()Ljava.util.Collection;
jtb.JavaParser:jj_2_10(I)Z
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
utilMDE.MathMDE:pow_fast(II)I
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
jtb.JavaParser:jj_3R_115()Z
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
daikon.ModBitTracker:split(I)I
jtb.syntaxtree.MethodDeclarator:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Literal;)V
utilMDE.ArraysMDE:min_max([I)[I
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
jtb.JavaParser:jj_2_14(I)Z
utilMDE.MathMDE:missing_numbers([I)[I
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.Type;)V
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_102()Z
daikon.Quant:subsetOf([I[I)Z
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
utilMDE.MathMDE:gcd([I)I
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_148()Z
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.Name:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.ProglangType:isScalar()Z
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.Invariant:isWorthPrinting()Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeSequence;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameters;)V
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_61()Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eltsGT([II)Z
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InclusiveOrExpression;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
utilMDE.ArraysMDE:sum([[I)I
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
jtb.syntaxtree.ClassOrInterfaceType:accept(Ljtb.visitor.Visitor;)V
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ReferenceType;)V
daikon.Quant:lexNotEqual([I[I)Z
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.Quant:lexLTE([I[I)Z
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
utilMDE.UtilMDE:removeWhitespaceAfter(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_2_17(I)Z
jtb.JavaParser:jj_3_35()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
jtb.visitor.TreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3_5()Z
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
jtb.syntaxtree.BlockStatement:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:noDuplicates([I)Z
jtb.JavaCharStream:getEndLine()I
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReturnStatement;)V
jtb.JavaParser:jj_3R_89()Z
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:lt(II)Z
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.TypeDeclaration:TypeDeclaration(Ljtb.syntaxtree.NodeChoice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Type;)V
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
utilMDE.FuzzyFloat:gte(DD)Z
utilMDE.ArraysMDE:sum([D)D
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.Quant:slice([III)[I
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
daikon.VarInfo:name()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
jtb.JavaParser:jj_3R_60()Z
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfo:new_ppt()V
jtb.JavaParser:jj_3_15()Z
daikon.tools.jtb.Ast:print(Ljtb.syntaxtree.Node;)Ljava.lang.String;
jtb.JavaParser:jj_3R_52()Z
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.Quant:subsetOf([B[I)Z
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.inv.Invariant:logDetail()Z
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
jtb.JavaParser:jj_3R_76()Z
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_2_3(I)Z
jtb.syntaxtree.NodeSequence:getParent()Ljtb.syntaxtree.Node;
utilMDE.MathMDE:sign(I)I
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
jtb.JavaParser:jj_3R_67()Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ShiftExpression;)V
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_88()Z
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.Quant:gt(II)Z
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
jtb.visitor.FormatCommand:getNumCommands()I
utilMDE.ArraysMDE:sum([I)I
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_80()Z
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.UnaryExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE:gcd(JJ)J
utilMDE.ArraysMDE:isSubarray([I[II)Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.inv.Invariant:justified()Z
utilMDE.FuzzyFloat:FuzzyFloat(D)V
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclarator;)V
daikon.inv.Invariants:Invariants()V
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType; | ASSIGN | 24199 | = null
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.VariableDeclaratorId:VariableDeclaratorId(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.CompilationUnit:CompilationUnit(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_101()Z
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.inv.Invariant:prob_or(DD)D
jtb.JavaParser:jj_3R_56()Z
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.NodeListOptional:getParent()Ljtb.syntaxtree.Node;
jtb.JavaParser:jj_3R_63()Z
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.tools.jtb.PptNameMatcher:PptNameMatcher(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.Quant:union([I[I)[I
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;II)V
daikon.Quant:eltsLteIndex([I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalExpression;)V
daikon.Quant:memberOf(S[S)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AndExpression;)V
daikon.ValueTuple:isMissing(I)Z
jtb.JavaCharStream:FillBuff()V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
jtb.syntaxtree.PackageDeclaration:accept(Ljtb.visitor.Visitor;)V
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_58()Z
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.NodeChoice:accept(Ljtb.visitor.Visitor;)V
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpression;)V
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.tools.jtb.SimpleTreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
jtb.visitor.TreeFormatter:space()Ljtb.visitor.FormatCommand;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
jtb.syntaxtree.MethodDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
jtb.JavaParser:jj_3R_55()Z
daikon.Quant:lexGTE([I[I)Z
jtb.JavaParser:jj_3R_119()Z
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.PrintAllVisitor:bufPrintln()V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
jtb.JavaCharStream:BeginToken()C
jtb.JavaParser:jj_2_5(I)Z
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
jtb.JavaParser:jj_3R_97()Z
jtb.Token:newToken(I)Ljtb.Token;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.Quant:noDups([I)Z
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
utilMDE.MathMDE:mod_positive(II)I
jtb.syntaxtree.TypeParameter:accept(Ljtb.visitor.Visitor;)V
daikon.inv.filter.ParentFilter:ParentFilter()V
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.Quant:pairwiseEqual([I[I)Z
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
jtb.JavaParser:jj_2_1(I)Z
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.ConditionalOrExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
utilMDE.UtilMDE:split(Ljava.lang.String;Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.test.TestAst.ClassOrInterfaceDeclarationHarvester:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.Quant:subsetOf([F[D)Z
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
jtb.JavaCharStream:getBeginColumn()I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArguments;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.inv.Invariant:logOn()Z
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
jtb.syntaxtree.ClassOrInterfaceDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
jtb.syntaxtree.FormalParameter:FormalParameter(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Type;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.VariableDeclaratorId;)V
jtb.JavaParser:jj_3_4()Z
daikon.Quant:subsetOf([F[F)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
jtb.syntaxtree.Literal:accept(Ljtb.visitor.Visitor;)V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.ModBitTracker:num_vars()I
daikon.PptSlice0:initInvariantsSeen()V
jtb.syntaxtree.InclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.UpperBoundCore:computeConfidence()D
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
jtb.syntaxtree.NodeOptional:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.PptName:toString()Ljava.lang.String;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
utilMDE.MathMDE:negate(I)I
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.VarInfoName:isLiteralConstant()Z
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.tools.jtb.Ast:typeMatch(Ljava.lang.String;Ljava.lang.String;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Statement;)V
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3_36()Z
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.Quant:pairwiseLT([I[I)Z
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
jtb.syntaxtree.TypeDeclaration:getParent()Ljtb.syntaxtree.Node;
utilMDE.ArraysMDE:isSubset([D[D)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.EqualityExpression;)V
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_116()Z
jtb.JavaParser:jj_3R_50()Z
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
jtb.JavaParser:jj_3_17()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.UtilMDE:removeWhitespaceAround(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
jtb.syntaxtree.NodeListOptional:elements()Ljava.util.Enumeration;
daikon.Debug:logDetail()Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.PptName:isEnterPoint()Z
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.Type:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
jtb.JavaParser:jj_3R_49()Z
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:memberOf(I[I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Expression;)V
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.tools.jtb.Ast:create(Ljava.lang.String;[Ljava.lang.Class;[Ljava.lang.Object;Ljava.lang.String;)Ljtb.syntaxtree.Node;
daikon.Quant:subsetOf([S[S)Z
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
554 2 308 2 208 2 350 2 446 2 626 2 899 2 528 4 400 2 
725 6 257 2 245 2 1271 6 482 2 1242 2 1129 2 6 6 1103 2 508 2 1167 2 
554 2 325 2 1106 6 408 4 1089 2 177 6 952 2 1212 2 876 4 308 2 146 6 205 6 294 2 
724 2 658 6 26 16 197 10 801 4 115 10 331 16 160 8 684 10 290 12 308 6 550 10 1025 2 747 8 448 6 224 4 730 2 1166 2 1031 16 554 6 431 4 713 10 556 2 496 28 497 4 1380 8 348 2 760 2 862 8 1137 26 
1224 6 284 4 
938 2 
664 2 1160 2 1079 2 1046 2 308 4 1343 2 1345 2 1347 2 784 2 1166 2 55 2 1351 2 276 2 229 2 1214 2 718 2 625 4 538 2 1268 4 236 2 191 2 633 2 240 2 888 2 285 2 199 2 246 4 589 2 979 4 727 2 1142 2 83 2 1188 2 1105 2 554 4 1374 2 434 2 350 2 136 2 1290 2 303 2 563 2 45 2 44 2 
887 4 657 4 658 4 1019 6 441 4 197 15 26 32 327 3 801 2 115 15 331 32 684 15 201 4 308 4 290 22 550 15 1275 2 747 19 448 4 385 6 7 6 84 6 895 6 1031 32 1064 2 554 4 713 6 1148 4 390 8 496 52 64 4 412 5 1056 2 760 2 1244 2 862 6 108 4 1220 2 1137 47 
191 2 545 2 1196 2 
606 2 1104 2 1169 2 811 2 37 2 285 2 1069 2 359 22 41 2 638 2 152 2 1039 2 907 2 226 10 
658 2 215 2 197 2 26 2 801 2 115 2 331 2 465 2 684 2 929 2 290 2 1296 2 550 2 747 2 1031 2 185 2 713 4 1356 2 187 2 496 6 460 2 399 2 1137 4 
897 2 1031 8 431 2 26 8 197 4 115 4 331 8 684 4 201 4 496 16 290 4 550 4 123 2 108 4 84 6 895 6 1137 12 
477 2 191 8 583 4 743 4 702 2 545 6 681 2 3 4 567 2 997 2 804 2 1024 4 979 4 919 62 727 2 753 10 1063 4 1258 14 1189 2 960 2 10 2 1300 2 1237 2 853 2 228 4 1326 2 813 4 985 2 1012 10 651 2 719 2 519 2 1329 2 654 4 538 4 906 4 1136 2 1196 2 304 4 1074 4 
868 2 179 2 445 2 823 2 248 2 644 2 1048 2 790 2 1210 2 938 2 
523 3 263 2 0 1 93 16 174 2 608 6 1198 4 869 1 357 1 1199 2 361 2 612 2 450 2 1207 1 8 2 711 2 787 24 456 2 363 3 11 2 1304 2 1305 2 623 2 458 2 105 2 792 2 1054 1 463 2 628 3 1057 2 1310 2 24 6 799 2 970 2 193 1 194 16 374 2 1315 2 117 3 546 2 635 2 637 2 890 2 1140 2 891 1 120 2 380 3 292 2 31 2 1143 2 1323 1 206 2 554 34 127 2 1233 2 983 2 1147 4 735 2 1066 4 297 1 296 4 899 2 1070 2 1071 2 650 2 557 1 989 2 1240 2 1239 2 561 2 393 2 42 4 396 3 397 1 398 32 479 1 1337 2 216 8 1338 2 996 2 916 6 308 32 669 2 670 2 1081 24 918 2 826 2 749 2 920 2 828 2 1083 3 573 2 754 2 1257 4 1004 2 1005 3 489 5 1007 2 313 2 835 2 491 2 316 3 1357 2 1172 2 1013 2 677 16 153 3 232 2 1174 4 498 2 1175 2 582 2 1363 4 1094 2 326 2 242 2 767 2 927 16 682 12 683 1 768 6 1023 2 423 2 686 2 932 2 509 2 934 2 1030 1 251 2 254 2 86 1 691 2 936 2 774 2 601 3 166 2 775 2 602 32 1112 12 1040 1 943 2 860 8 699 8 1117 2 865 2 438 2 1197 3 701 2 1121 1 
554 2 662 2 
540 2 554 4 255 2 
1182 2 
354 2 353 10 1044 6 1 4 355 2 356 204 705 94 360 376 707 2 362 20 712 2 364 2 714 10 715 192 14 2 17 2 366 30 18 30 1051 86 21 6 22 4 368 2 369 4 720 8 722 26 23 2 373 20 375 6 1058 2 27 4 377 4 28 6 1059 4 378 4 379 2 384 26 32 12 729 2 387 2 35 4 734 54 36 2 1067 8 388 2 39 12 389 6 739 2 1072 2 741 2 43 2 1073 2 742 12 1075 48 744 32 46 60 48 6 401 2 1076 2 50 4 51 2 1077 2 1078 6 402 112 1080 198 403 2 750 2 748 2 752 132 751 18 406 2 1084 4 1087 6 407 4 1088 2 757 6 756 2 58 2 1091 4 59 2 1092 2 62 6 410 2 411 2 759 4 63 4 413 6 67 4 762 6 763 2 415 2 417 4 70 82 416 2 764 386 72 2 1098 118 75 4 419 2 74 2 77 30 766 2 1100 2 79 8 80 2 1101 24 769 432 770 6 771 8 429 2 433 4 436 46 435 2 1110 160 1111 2 778 30 1114 2 779 198 1118 14 1119 6 780 2 1120 4 90 4 91 566 95 68 1125 2 444 20 443 198 782 2 1127 30 97 2 1128 2 783 2 447 8 449 244 1130 84 1131 2 454 14 788 4 455 16 457 2 100 4 103 2 791 8 462 2 793 2 1135 4 1134 2 794 2 795 12 796 6 107 2 464 16 797 432 798 2 109 6 112 2 111 2 800 6 113 4 114 6 802 10 118 60 119 2 803 4 121 26 1141 2 805 224 806 2 125 50 128 2 809 6 129 4 810 2 471 24 1146 2 1149 6 1151 2 814 2 473 30 134 2 135 4 1153 2 474 182 475 14 1155 2 816 328 138 74 817 2 478 2 142 2 818 2 1159 4 1162 2 143 6 821 12 1163 2 827 2 1164 6 148 2 486 2 487 6 832 46 488 2 834 2 492 328 1170 2 1171 2 150 4 151 2 837 2 840 30 1173 8 154 2 156 6 1177 2 1178 6 1179 2 157 336 1180 2 499 6 158 4 1183 4 501 4 161 4 847 2 1186 4 503 6 1185 2 1187 2 506 26 507 2 849 4 163 12 850 106 511 2 852 14 513 6 514 2 1192 2 854 20 855 2 515 2 516 6 517 6 856 6 857 6 171 2 867 22 524 6 175 2 525 4 871 2 1200 26 874 4 1202 6 180 48 1204 6 1206 112 527 2 184 6 529 60 881 2 882 22 1211 4 1213 2 535 6 885 2 537 6 1218 4 886 6 1222 192 196 2 1225 6 543 2 544 2 1227 30 1228 4 892 8 203 106 552 28 204 6 1230 64 896 8 1232 2 554 10 898 4 1234 4 1236 30 555 18 210 2 900 4 211 2 1239 2 559 2 562 12 904 2 909 98 565 20 564 2 910 6 1246 198 911 2 1247 2 213 2 214 6 566 60 914 4 915 2 217 198 219 2 220 112 568 2 1250 26 1251 198 223 2 572 2 1256 2 1259 22 1261 10 924 2 578 18 1265 2 1266 4 234 6 237 8 238 2 239 6 1270 4 584 4 926 2 241 12 243 46 1273 2 588 6 930 66 590 4 1278 6 1277 2 591 8 1279 6 1280 2 1282 10 594 2 593 244 935 6 596 10 252 26 598 2 1284 2 600 6 258 2 1287 2 939 2 1288 28 940 2 603 6 604 182 260 4 261 2 262 2 1292 198 1293 26 607 2 266 2 1294 22 268 2 269 2 611 8 270 6 953 4 273 4 955 46 956 290 613 6 958 8 614 2 615 30 275 228 1301 2 1303 4 964 12 619 2 620 6 621 2 277 8 965 2 622 4 1306 64 1307 6 279 4 969 2 1308 2 280 2 281 12 1311 6 630 2 632 4 1313 2 1316 6 286 2 975 12 287 2 288 2 636 2 289 6 977 8 1318 132 639 2 978 6 1319 204 981 4 293 6 1320 20 1321 6 643 4 1324 2 647 14 984 46 298 2 299 4 1327 2 987 4 1328 2 988 2 301 2 1331 2 656 16 1333 2 1334 6 992 2 993 2 659 198 1336 88 306 4 666 2 667 4 1342 2 307 14 308 10 1346 4 999 28 1348 6 1001 2 312 2 310 26 1002 2 1003 2 314 4 1353 30 1009 2 315 6 673 4 1354 4 1010 2 1011 12 318 2 674 2 675 2 676 2 1014 2 1359 16 678 6 1360 2 1362 8 1018 52 324 4 1366 140 329 6 330 8 1022 4 1021 2 334 4 336 26 687 4 338 4 1369 28 341 4 1373 70 1372 28 1029 244 689 2 343 2 1034 14 344 8 1375 4 694 2 1376 2 345 4 1377 20 1036 4 695 20 1038 4 347 2 697 6 1379 6 1381 26 698 112 700 92 352 2 
461 2 672 2 842 2 785 1 
468 2 842 2 
1378 2 191 2 531 2 497 2 703 2 317 2 842 2 
1378 2 710 2 842 2 
1378 2 994 2 842 2 
69 2 672 2 278 2 
1378 2 842 2 
278 2 829 2 
81 2 842 2 
672 2 278 2 1264 2 
1344 2 672 2 162 2 
1157 2 510 2 672 2 
917 2 672 2 500 2 
672 2 38 2 1093 2 
668 2 278 2 
182 2 842 2 
745 2 162 2 
1157 2 944 2 
500 2 89 2 
571 2 1093 2 
155 2 278 2 
395 2 1093 2 
165 2 500 2 
1201 2 1157 2 
505 2 162 2 
672 2 53 2 278 2 1264 2 
1060 2 672 2 53 2 278 2 1264 2 
672 2 581 2 278 2 
672 2 278 2 923 2 
884 2 1109 2 484 2 212 2 
1122 2 439 2 71 4 256 2 922 2 758 2 13 4 4 2 359 6 60 2 954 2 483 2 1289 2 189 2 1203 2 1382 2 1309 2 92 2 
672 2 1123 2 
191 2 531 2 663 2 521 2 
191 2 531 2 663 2 521 2 1195 2 317 2 
1378 2 191 2 531 2 253 2 497 2 842 2 
1079 2 1255 2 
191 2 531 2 497 2 1107 2 
500 2 1041 2 
1093 2 358 2 
291 2 162 2 
1157 2 627 2 
1157 2 302 2 1093 2 
1157 2 1062 2 1093 2 
1157 2 534 2 1093 2 
1157 2 1235 2 1093 2 
476 2 191 2 1368 2 82 6 531 2 274 6 903 2 866 2 
875 2 278 2 
1199 2 
0 4 948 2 174 2 608 6 1198 2 8 2 1132 2 11 2 716 2 1305 2 717 2 623 2 792 2 1052 2 1310 2 629 2 24 2 799 4 1315 2 546 2 635 2 382 2 31 2 1143 2 206 2 554 26 983 2 1233 2 1147 2 296 4 899 2 650 2 1239 2 561 2 42 4 397 2 398 6 991 2 916 2 308 26 669 2 404 4 147 2 573 2 405 2 1257 4 1004 2 313 2 491 2 1357 2 1013 6 66 2 1174 4 498 2 1363 2 844 2 927 6 682 8 768 4 254 2 690 2 936 2 773 4 774 2 696 2 602 4 169 2 1112 8 1040 2 943 2 860 2 1117 2 865 2 438 2 173 2 701 2 
0 2 948 2 174 2 608 6 1198 2 8 2 1132 2 11 2 716 2 1305 2 717 2 623 2 105 2 792 2 1052 2 282 2 1310 2 629 2 24 2 799 4 374 2 1315 2 546 2 635 2 382 2 31 2 1143 2 206 2 554 26 983 2 1233 2 1147 2 296 4 899 2 650 2 1239 2 561 2 42 4 397 2 398 6 916 2 308 26 669 2 404 4 147 2 573 2 405 2 311 2 1257 4 1004 2 313 2 491 2 1357 2 1013 6 579 2 66 2 1174 4 498 2 1363 2 844 2 927 6 682 8 768 6 509 2 254 2 690 2 936 2 773 4 774 2 696 2 602 4 1112 8 1040 2 943 2 860 2 1117 2 865 2 438 2 701 2 
452 2 
1190 2 159 2 
608 4 951 2 995 2 569 2 570 2 526 2 877 4 878 2 308 6 1254 2 957 2 6 6 1129 4 1047 2 786 2 1167 2 755 4 831 4 1004 2 491 2 836 2 623 2 319 2 321 2 1267 2 539 2 721 2 1174 2 723 4 25 2 1223 2 725 6 420 8 76 10 116 2 29 2 245 4 1271 6 586 2 122 2 894 2 1370 2 31 2 1028 2 688 4 430 2 554 12 983 2 937 2 648 2 1325 2 257 2 349 8 652 2 1239 2 815 2 943 2 42 2 437 4 781 2 
608 4 951 2 995 2 569 2 482 2 570 2 526 2 877 4 308 6 878 2 1254 2 957 2 1129 4 6 6 1047 2 786 2 1167 2 755 4 831 4 1004 2 491 2 836 2 623 2 321 2 1267 2 1174 2 721 2 539 2 723 4 25 2 1223 2 725 8 328 2 420 8 76 10 116 2 29 2 245 4 1271 8 586 2 122 2 339 2 894 2 31 2 1028 2 688 4 430 2 554 12 983 2 692 4 937 2 648 2 1325 2 257 2 349 8 652 2 1239 2 815 2 943 2 42 2 437 4 781 2 
430 2 951 2 725 2 937 2 1325 2 648 2 245 2 526 2 877 4 815 2 122 2 957 2 1129 2 6 2 539 2 437 2 1028 2 723 4 
608 4 951 2 995 2 569 2 482 2 570 2 526 2 877 4 878 2 308 6 1254 2 957 2 6 4 1129 4 1047 2 786 2 1167 2 755 4 831 4 1004 2 491 2 836 2 623 2 319 2 321 2 1267 2 539 2 721 2 1174 2 723 4 25 2 1223 2 725 6 420 4 76 6 116 2 29 2 245 4 1271 6 586 2 122 2 894 2 1370 2 31 2 1028 2 688 4 430 2 554 12 983 2 937 2 648 2 1325 2 349 4 652 2 1239 2 815 2 943 2 42 2 437 4 781 2 
608 4 951 2 995 2 569 2 570 2 526 2 877 4 878 2 308 6 1254 2 957 2 6 6 1129 4 1047 2 786 2 1167 2 755 4 831 4 1004 2 491 2 836 2 623 2 319 2 321 2 1267 2 539 2 721 2 1174 2 723 4 25 2 1223 2 725 4 420 4 76 6 116 2 29 2 245 4 1271 6 586 2 122 2 894 2 1370 2 31 2 508 2 1028 2 688 4 430 2 554 12 983 2 937 2 648 2 1325 2 349 4 652 2 1239 2 815 2 943 2 42 2 437 4 781 2 
608 4 951 2 995 2 569 2 570 2 526 2 877 4 878 2 308 6 1254 2 957 2 6 6 1129 4 1047 2 786 2 1167 2 755 4 831 4 1004 2 491 2 836 2 623 2 319 2 321 2 1267 2 539 2 721 2 1174 2 723 4 25 2 1223 2 725 6 420 4 76 6 116 2 29 2 245 4 1271 6 586 2 122 2 894 2 1370 2 31 2 1028 2 688 4 430 2 554 12 983 2 937 2 648 2 1325 2 257 2 349 8 652 2 1239 2 815 2 943 2 42 2 437 4 781 2 
608 4 951 2 995 2 569 2 570 2 526 2 877 4 878 2 308 6 1254 2 957 2 6 8 1129 4 1047 2 786 2 1167 2 755 4 831 4 1004 2 491 2 836 2 623 2 319 2 321 2 1267 2 1174 2 539 2 721 2 723 4 25 2 1223 2 725 6 420 8 76 10 116 2 29 2 245 4 1271 8 586 2 122 2 894 2 1370 2 31 2 508 2 1028 2 688 4 430 2 554 12 983 2 937 2 648 2 1325 2 257 2 349 8 652 2 1239 2 815 2 943 2 42 2 437 4 781 2 
608 4 951 2 995 2 569 2 570 2 526 2 877 4 878 2 308 6 1254 2 957 2 6 6 1129 4 1047 2 786 2 1167 2 755 4 831 4 1004 2 491 2 836 2 623 2 319 2 321 2 1267 2 539 2 721 2 1174 2 723 4 25 2 1223 2 725 6 420 8 76 10 116 2 29 2 245 4 1271 6 586 2 122 2 894 2 1370 2 31 2 1028 2 688 4 430 2 554 12 983 2 937 2 648 2 1325 2 257 2 349 8 652 2 1239 2 815 2 943 2 42 2 437 4 781 2 
1198 2 1045 2 526 2 877 4 878 2 181 2 6 8 1047 2 8 2 716 4 717 2 1050 6 15 6 1052 2 539 2 721 2 370 6 723 4 540 6 24 2 1221 2 374 2 195 2 25 2 1223 2 725 4 198 4 376 2 889 7 546 2 29 2 894 2 31 2 206 2 554 46 899 2 558 6 1239 2 1241 2 42 4 394 8 398 8 912 1 49 2 916 2 569 2 570 4 221 2 1254 2 404 4 573 2 54 1 1257 4 1085 2 755 6 1260 1 1262 2 61 2 1267 2 1096 2 418 1 76 2 927 6 245 4 1271 12 586 2 768 6 587 7 1102 1 428 6 250 2 430 2 772 2 254 2 937 2 936 2 432 1 602 2 1112 4 943 2 1115 2 1117 2 945 2 437 4 781 2 438 12 1291 6 264 6 949 2 608 6 951 2 1124 2 1297 10 957 2 1129 4 786 2 1132 2 618 2 623 2 104 2 105 2 792 2 968 2 1310 2 116 4 635 2 122 2 641 6 1143 2 645 1 983 2 1147 2 296 4 648 2 1325 2 133 2 650 2 472 6 649 6 652 2 815 2 655 2 662 6 995 2 1339 6 1161 2 308 24 145 2 1167 4 1168 4 1004 2 831 4 491 2 836 2 1357 2 321 2 1013 6 1358 2 1174 4 1363 2 679 2 323 6 680 2 1020 1 1364 6 1367 2 682 4 846 2 1182 6 685 1 1027 2 1370 2 508 4 1028 2 688 8 349 2 860 2 522 2 865 2 701 2 
264 6 949 2 608 6 1045 2 951 2 1198 4 1124 2 526 2 877 4 878 2 181 2 1297 10 957 2 1129 4 6 8 1047 2 786 2 8 2 1132 2 618 2 716 4 717 2 623 2 15 6 1050 6 104 2 105 2 968 2 792 2 1052 2 721 2 539 2 370 6 1310 2 723 4 540 6 24 2 799 2 1221 2 195 2 374 2 1223 2 25 2 198 4 725 8 376 2 116 4 546 2 635 2 29 2 122 2 641 6 894 2 31 2 1143 2 206 2 554 48 983 2 1147 4 296 4 1325 2 648 2 899 2 133 2 649 6 472 6 650 2 558 6 652 2 815 2 1239 2 1241 2 394 8 42 4 655 2 398 8 662 6 49 2 995 2 1339 6 1161 2 916 2 569 2 570 4 221 2 308 26 145 2 1254 2 404 4 573 2 1085 2 1257 4 1167 4 1168 4 755 6 831 4 1004 2 491 2 1262 2 836 2 1357 2 61 2 321 2 1013 6 1267 2 1358 2 1174 4 1363 4 679 2 1096 2 323 6 680 2 1364 6 76 2 1367 2 927 6 1182 6 846 2 682 8 1271 12 245 4 586 2 768 6 337 2 1027 2 1370 2 1028 2 428 6 688 8 250 2 772 2 430 2 254 2 936 2 937 2 1108 2 257 4 602 2 1112 8 349 6 1115 2 943 2 860 2 945 2 1117 2 522 2 437 4 865 2 438 12 781 2 1291 6 701 2 
264 6 949 2 608 6 1045 2 951 2 1198 4 1124 2 526 2 877 4 878 2 181 2 1297 10 957 2 1129 4 6 8 1047 2 786 2 8 2 1132 2 618 2 716 4 717 2 623 2 15 6 1050 6 104 2 105 2 968 2 792 2 1052 2 721 2 539 2 370 6 723 4 1310 2 540 6 24 2 799 2 1221 2 195 2 374 2 1223 2 25 2 198 4 725 8 376 2 116 4 546 2 635 2 29 2 122 2 641 6 894 2 31 2 1143 2 206 2 554 48 983 2 1147 4 296 4 1325 2 648 2 899 2 133 2 649 6 472 6 650 2 558 6 652 2 815 2 1239 2 1241 2 394 8 42 4 655 2 398 8 662 6 49 2 995 2 1339 6 1161 2 916 2 569 2 570 4 221 2 308 26 145 2 1254 2 404 4 573 2 1085 2 1257 4 1167 4 1168 4 755 6 831 4 1004 2 491 2 1262 2 836 2 1357 2 61 2 321 2 1013 6 1267 2 1358 2 1174 4 1363 4 679 2 1096 2 323 6 680 2 1364 6 420 4 1367 2 76 6 927 6 1182 6 846 2 682 8 1271 12 245 4 586 2 768 6 337 2 1027 2 1370 2 1028 2 428 6 688 8 250 2 772 2 430 2 254 2 936 2 937 2 1108 2 257 4 602 2 1112 8 349 6 1115 2 943 2 860 2 945 2 1117 2 522 2 437 4 865 2 438 12 781 2 1291 6 701 2 
1198 4 1045 2 526 2 877 4 878 2 181 2 6 10 1047 2 8 2 365 6 716 4 717 2 1050 12 15 12 1052 2 539 2 721 2 370 6 723 4 540 12 24 4 1221 2 374 2 195 2 25 2 1223 2 725 10 198 4 376 2 546 2 29 2 894 2 31 2 206 2 554 52 899 2 558 6 1239 2 1241 2 42 4 394 8 398 12 1248 2 49 2 916 4 569 2 570 4 221 2 1254 2 404 6 573 2 1257 4 1085 2 755 6 409 6 575 6 1262 2 61 2 577 2 1267 2 1096 2 420 4 76 6 927 8 245 4 1271 16 586 2 768 6 428 6 250 2 430 2 772 2 254 2 85 2 599 2 937 2 936 2 1108 2 257 4 602 4 1112 10 1113 6 943 2 1115 2 1117 2 945 2 947 2 437 4 781 2 438 10 1291 6 264 12 949 2 608 6 951 2 1124 2 610 6 1297 8 957 2 1129 4 786 2 1132 4 616 2 617 2 618 2 623 2 104 2 105 2 1133 2 792 2 968 2 1310 2 799 2 1317 6 116 4 635 2 122 2 641 6 1143 2 983 2 1147 4 296 4 648 2 1325 2 133 2 650 2 472 6 649 6 652 2 815 2 655 2 662 12 995 2 1339 6 482 2 308 24 145 2 1000 6 1167 4 1168 4 1004 2 831 4 491 2 836 2 1357 2 321 2 1013 8 1358 2 1174 4 1363 4 679 2 323 6 680 2 1364 6 1367 2 1181 6 682 10 846 2 1182 12 337 2 1027 2 1370 2 508 2 1028 2 688 8 1191 6 349 6 860 4 522 2 865 2 701 2 
1223 2 25 2 725 6 420 4 995 2 76 4 29 2 1271 4 245 4 526 2 586 2 877 2 878 2 1254 2 957 2 894 2 1129 4 6 6 1370 2 688 2 1167 2 554 4 755 2 831 2 937 2 1325 2 648 2 257 2 321 2 652 2 349 6 815 2 721 2 539 2 723 2 
608 6 1199 2 526 2 877 2 878 2 1297 2 957 2 6 6 1129 4 450 2 8 2 879 2 716 2 717 2 623 2 105 2 792 2 1052 2 539 2 721 2 723 2 1310 2 24 3 374 2 1223 2 25 2 725 6 546 2 635 2 29 2 894 2 31 2 1143 2 1322 3 124 2 206 2 554 28 983 2 130 2 296 4 648 2 1325 2 899 2 650 2 652 2 1239 2 815 2 393 2 42 4 398 8 139 2 1337 2 995 2 1161 2 916 3 308 24 1254 2 404 4 573 2 1257 4 1167 2 755 2 831 2 1004 2 491 2 576 2 1357 2 321 2 1013 6 1174 4 76 2 927 6 1271 4 245 4 586 2 768 6 1370 2 688 2 254 2 936 2 937 2 257 2 602 3 349 6 943 2 1117 2 865 2 781 2 438 4 
532 2 878 2 995 2 
532 2 878 2 995 2 
0 2 949 2 608 6 1198 4 704 2 96 2 706 2 877 2 878 4 1297 2 1129 4 6 12 1047 2 8 2 532 2 961 2 716 6 717 2 1049 2 623 2 16 2 105 2 20 2 968 2 1052 2 539 2 1310 2 723 2 374 2 541 2 198 2 725 12 726 2 116 2 546 2 635 2 548 4 122 2 980 2 31 2 1143 2 206 2 554 24 295 4 983 2 1147 4 132 2 131 2 296 4 648 2 899 2 650 2 652 2 1239 2 815 4 42 4 398 2 995 6 569 2 482 4 570 4 308 16 1254 2 147 4 573 2 1257 4 1167 4 1168 2 755 4 1004 2 831 2 491 2 1357 2 1013 2 1267 2 1174 4 1363 4 323 2 420 4 1365 2 76 6 927 2 682 4 245 4 1271 16 768 6 508 4 1028 2 688 4 254 2 936 2 167 2 257 4 602 2 168 2 1112 4 941 2 349 6 1115 2 943 2 1117 2 437 4 1383 2 865 2 438 4 701 4 
1168 2 554 4 323 2 951 2 812 2 726 2 1006 2 491 2 159 2 1049 2 133 2 221 2 308 2 1297 2 249 2 1383 2 438 2 
949 2 608 6 1198 4 704 2 96 2 706 2 877 2 878 4 99 2 1129 4 6 12 1047 2 8 2 532 2 961 2 716 6 717 2 1049 2 623 2 16 2 105 2 968 2 1052 2 539 2 1310 2 723 2 374 2 541 2 542 2 198 2 725 12 726 2 116 4 546 2 635 2 548 4 122 2 31 2 1143 2 206 2 807 2 554 24 295 4 983 2 1147 4 132 2 296 4 648 2 899 2 650 2 652 2 1239 2 815 4 42 4 398 2 480 2 995 6 569 2 482 4 570 4 308 16 1254 2 147 4 573 2 1257 4 1167 4 755 4 831 2 1004 2 491 2 836 2 1357 2 1013 2 1267 2 1174 4 1363 4 323 2 420 4 1365 4 76 6 927 2 682 4 245 4 1271 16 768 6 508 4 1028 2 688 4 254 2 936 2 167 2 257 4 602 4 168 2 1112 4 349 6 1115 2 943 2 1117 2 946 2 437 4 1383 2 865 2 438 2 701 4 
0 1 949 2 608 6 1198 4 704 2 96 2 706 2 877 2 878 4 1297 2 1129 4 6 12 1047 2 8 2 532 2 961 2 716 6 717 2 1049 2 623 2 16 2 105 2 968 2 1052 2 539 2 1310 2 723 2 372 2 374 2 541 2 198 2 725 12 726 2 116 4 546 2 635 2 548 4 122 2 31 2 1143 2 206 2 554 24 295 4 983 2 1147 4 132 2 296 4 648 2 899 2 901 2 650 2 652 2 1239 2 815 4 42 4 398 2 995 6 569 2 482 4 570 4 308 16 1254 2 147 4 573 2 1257 4 1167 4 1086 2 1168 2 1350 2 755 4 1004 2 831 2 491 2 836 2 1357 2 1013 2 1267 2 1015 2 1174 4 1363 4 323 2 420 4 1365 2 76 6 927 2 682 4 245 4 1271 16 768 6 508 4 1028 2 688 4 254 2 936 2 167 2 257 4 602 2 168 2 1112 4 349 6 1115 2 943 2 1117 2 437 4 1383 2 865 2 438 4 701 4 
68 2 1176 2 820 2 490 2 839 2 1154 2 973 2 235 2 905 2 
605 2 24 3 1017 2 927 2 332 2 916 3 308 2 1229 2 404 2 1082 2 485 2 126 2 9 4 1032 1 554 2 1132 6 33 2 1035 2 602 3 536 2 1013 2 792 2 322 3 88 2 398 2 
605 2 9 4 126 2 24 2 1132 6 554 2 1017 2 33 2 927 2 332 2 1035 2 916 2 602 2 536 2 308 2 1013 2 792 2 322 2 1229 2 1082 2 404 2 88 2 485 2 398 2 
605 2 9 4 126 2 24 2 1132 6 554 2 1017 2 33 2 927 2 332 2 1035 2 916 2 602 2 536 2 308 2 1013 2 792 2 322 2 1229 2 1082 2 404 2 88 2 485 2 398 2 
2 2 1295 2 872 2 1253 4 308 4 746 3 709 2 448 2 102 6 624 4 496 6 459 3 188 2 792 2 677 2 1016 2 1219 2 1137 4 24 3 194 2 26 2 1097 2 197 2 115 2 331 2 928 2 684 2 333 2 1061 4 1274 4 549 2 550 2 1031 2 554 10 597 4 342 3 1035 2 602 3 862 4 398 2 
24 2 194 2 197 2 1097 2 26 2 2 2 115 2 331 2 928 2 1295 2 872 2 684 2 333 2 1253 4 1061 4 1274 4 709 2 290 2 746 2 308 4 549 2 550 2 747 2 448 2 1031 2 597 4 554 10 342 2 102 6 1035 2 602 2 624 4 496 4 188 2 459 2 792 2 677 2 760 2 1016 2 1219 2 862 4 398 2 1137 4 
24 2 194 2 197 2 1097 2 26 2 2 2 115 2 331 2 928 2 1295 2 872 2 684 2 333 2 1253 4 1061 4 1274 4 709 2 290 2 746 2 308 4 549 2 550 2 747 2 448 2 1031 2 597 4 554 10 342 2 102 6 1035 2 602 2 624 4 496 4 188 2 459 2 792 2 677 2 760 2 1016 2 1219 2 862 4 398 2 1137 4 
24 2 194 2 197 2 1097 2 26 2 2 2 115 2 331 2 928 2 1295 2 872 2 684 2 333 2 1253 4 1061 4 1274 4 709 2 290 2 746 2 308 4 549 2 550 2 747 2 448 2 1031 2 597 4 554 10 342 2 102 6 1035 2 602 2 624 4 496 4 188 2 459 2 792 2 677 2 760 2 1016 2 1219 2 862 4 398 2 1137 4 
24 2 194 2 197 2 1097 2 26 2 2 2 115 2 331 2 928 2 1295 2 872 2 684 2 333 2 1253 4 1061 4 1274 4 709 2 290 4 746 2 308 4 549 2 550 2 747 4 448 2 1031 2 597 4 554 10 342 2 102 6 1035 2 602 2 624 4 496 4 188 2 459 2 792 2 677 2 760 4 1016 2 1219 2 862 4 398 2 1137 4 
921 2 653 2 661 2 267 2 340 2 1165 2 
1361 2 106 2 740 2 690 2 661 2 864 2 1269 2 
1312 1 94 2 192 2 913 2 1314 2 681 1 481 1 442 2 78 2 308 8 976 2 425 1 504 2 1205 2 451 2 671 2 960 1 554 10 533 2 34 2 738 2 15 2 902 2 943 2 259 2 283 2 
887 2 26 6 197 6 115 6 331 6 870 2 684 6 200 2 201 2 308 6 290 4 30 2 550 6 747 2 448 2 84 4 1188 2 1031 6 554 6 1374 2 1065 2 390 2 496 16 1238 2 925 2 412 4 760 2 233 2 862 4 1137 12 
554 1 971 2 110 2 421 2 244 6 624 2 1253 2 308 1 424 2 1274 2 1215 2 170 1 367 2 381 2 518 2 1116 2 933 2 1281 4 
971 2 110 2 421 4 244 6 624 2 1253 2 424 2 1274 2 1215 2 518 2 367 2 381 4 1116 4 933 2 1281 4 
554 1 971 2 110 2 421 8 244 10 624 2 1253 2 308 1 424 2 1274 2 1215 2 170 1 518 8 367 6 381 8 1116 8 933 2 1281 4 
624 2 110 2 1253 2 971 2 1215 2 1274 2 424 2 381 2 1116 2 421 2 1281 2 933 2 244 2 
1043 2 0 4 440 4 265 6 176 2 609 26 178 22 1126 16 5 50 708 2 98 36 183 18 8 14 959 4 530 4 1208 4 880 6 789 4 1209 24 962 4 963 24 12 2 883 16 966 18 105 58 19 6 1217 2 371 10 631 12 374 58 634 6 974 2 466 2 547 6 1226 4 202 2 551 34 640 6 383 6 728 4 982 4 386 6 1144 8 206 8 1145 124 1231 4 553 10 554 150 808 6 733 2 732 90 296 112 1068 42 209 17 736 2 986 8 1150 4 391 92 1152 4 560 2 392 8 1245 4 1156 4 1158 6 1335 4 1249 4 141 2 660 4 47 16 305 6 218 8 665 11 819 6 998 6 1341 6 308 134 144 8 1349 6 225 24 1257 88 574 10 830 4 57 12 833 10 1352 6 1008 2 227 4 1355 8 149 24 493 42 1263 8 1357 14 230 26 495 8 580 2 65 10 231 84 414 6 843 24 765 4 845 10 682 28 1184 4 1272 4 585 4 768 248 335 6 1276 1 426 2 931 24 247 10 848 6 1283 6 595 2 1033 4 512 6 87 4 346 6 1037 16 1285 8 1286 2 776 8 777 2 942 2 520 2 859 10 172 90 1042 6 
1332 2 0 2 140 4 47 4 1340 2 1126 4 1252 2 873 2 1341 2 308 44 822 4 98 2 824 2 144 6 825 2 183 2 8 2 1257 20 1298 2 574 2 453 2 1299 2 1209 2 833 2 1008 2 1090 2 227 2 1355 2 149 2 101 2 494 2 967 4 1263 2 1357 2 320 2 105 2 19 2 65 2 1053 2 1055 2 838 2 1217 2 761 2 190 2 371 2 1138 2 374 2 73 2 972 2 1099 6 1139 2 974 2 845 2 682 38 467 2 466 2 422 2 768 44 335 2 931 2 426 2 893 2 247 2 383 4 427 2 1283 2 386 2 1371 2 1144 2 206 2 1145 6 646 2 553 2 207 2 851 2 554 46 731 2 808 2 296 20 209 2 737 2 1037 4 300 4 942 2 858 2 392 2 859 2 1243 2 137 2 861 2 351 2 1156 2 
265 4 950 4 176 2 1126 10 5 8 272 4 98 6 183 10 8 6 959 4 530 4 880 4 789 4 1299 10 962 4 1302 8 963 8 12 2 883 8 186 2 105 28 19 4 1216 8 631 14 374 30 634 4 1139 10 974 2 466 2 547 4 551 30 383 2 982 4 469 32 642 4 1144 2 386 4 206 2 1145 24 553 4 470 2 554 78 808 4 296 44 40 2 1068 8 209 10 736 2 986 4 391 24 1152 4 560 2 1330 4 392 2 137 2 1245 4 1158 4 1249 4 660 4 47 10 305 4 819 4 52 16 998 4 1341 4 308 70 144 6 309 16 1349 4 1257 36 574 6 56 8 833 4 1352 4 1008 2 493 16 1263 2 1357 6 231 24 65 4 414 4 1095 2 682 14 1184 2 585 4 768 104 335 4 1026 8 426 2 848 4 427 2 592 2 1283 4 1033 4 164 4 512 4 693 4 1193 4 87 4 1285 4 1037 10 346 4 942 2 859 4 861 2 1194 2 351 10 
1043 2 0 2 440 2 141 2 47 6 665 2 178 10 1126 6 1252 2 1341 4 308 26 98 2 144 4 183 2 8 2 1257 14 959 2 574 2 962 2 833 2 1008 2 883 6 1263 2 1357 2 495 2 105 12 19 4 65 2 1217 2 374 12 974 2 682 14 466 2 1184 2 1226 2 768 40 335 4 202 2 551 6 426 2 383 2 1283 4 1144 2 386 4 206 2 1145 8 595 2 553 2 554 28 808 4 296 14 209 2 1037 6 986 4 1286 2 942 2 392 2 859 2 137 2 
990 2 
502 1 222 1 841 1 863 1 908 1 271 1 
502 1 222 1 841 1 863 1 908 1 271 1 
502 1 222 1 841 1 863 1 908 1 271 1 
502 1 222 1 841 1 863 1 908 1 271 1 
502 1 222 1 841 1 863 1 908 1 271 1 
502 1 222 1 841 1 863 1 908 1 271 1 
502 1 222 1 841 1 863 1 908 1 271 1 
502 1 222 1 841 1 863 1 908 1 271 1 
502 1 222 1 841 1 863 1 908 1 271 1 
502 1 222 1 841 1 863 1 908 1 271 1 
502 1 222 1 841 1 863 1 908 1 271 1 
502 1 222 1 841 1 863 1 908 1 271 1 
502 1 222 1 841 1 863 1 908 1 271 1 
502 1 222 1 841 1 863 1 908 1 271 1 
502 1 222 1 841 1 863 1 908 1 271 1 
502 1 222 1 841 1 863 1 908 1 271 1 
502 1 222 1 841 1 863 1 908 1 271 1 
502 1 222 1 841 1 863 1 908 1 271 1 
502 1 222 1 841 1 863 1 908 1 271 1 
502 1 222 1 841 1 863 1 908 1 271 1 
502 1 222 1 841 1 863 1 908 1 271 1 
502 1 222 1 841 1 863 1 908 1 271 1 
502 1 222 1 841 1 863 1 908 1 271 1 
502 1 222 1 841 1 863 1 908 1 271 1 
502 1 222 1 841 1 863 1 908 1 271 1 
502 1 222 1 841 1 863 1 908 1 271 1 
502 1 222 1 841 1 863 1 908 1 271 1 
502 1 222 1 841 1 863 1 908 1 271 1 
502 1 222 1 841 1 863 1 908 1 271 1 
502 1 222 1 841 1 863 1 908 1 271 1 
502 1 222 1 841 1 863 1 908 1 271 1 
502 1 222 1 841 1 863 1 908 1 271 1 
502 1 222 1 841 1 863 1 908 1 271 1 
502 1 222 1 841 1 863 1 908 1 271 1 
502 1 222 1 841 1 863 1 908 1 271 1 
502 1 222 1 841 1 863 1 908 1 271 1 
502 1 222 1 841 1 863 1 908 1 271 1 
502 1 222 1 841 1 863 1 908 1 271 1 
502 1 222 1 841 1 863 1 908 1 271 1 
502 1 222 1 841 1 863 1 908 1 271 1 
502 1 222 1 841 1 863 1 908 1 271 1 
502 1 222 1 841 1 863 1 908 1 271 1 
502 1 222 1 841 1 863 1 908 1 271 1 
502 1 222 1 841 1 863 1 908 1 271 1 

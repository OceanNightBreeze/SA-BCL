#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V ERROR java.lang.NullPointerException 244 1572 
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.NullPointerException 298 991 (360,1063) (360,1063) 516 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V ERROR java.lang.NullPointerException 244 479 
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V ERROR java.lang.NullPointerException 244 1569 
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V ERROR java.lang.NullPointerException 244 1454 
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR utilMDE.Assert$AssertionException (933,988) (933,988) 517 1266 1464 1214 1177 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V FAILED junit.framework.AssertionFailedError 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_0()V ERROR java.lang.RuntimeException (961,1267) (961,1267) (313,1314) (313,1314) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_1()V ERROR java.lang.RuntimeException (961,1267) (961,1267) (313,1314) (313,1314) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_2()V ERROR java.lang.RuntimeException (961,1267) (961,1267) (313,1314) (313,1314) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_3()V ERROR java.lang.RuntimeException (961,1267) (961,1267) (313,1314) (313,1314) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_4()V ERROR java.lang.RuntimeException (961,1267) (961,1267) (313,1314) (313,1314) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_5()V ERROR java.lang.RuntimeException (961,1267) (961,1267) (313,1314) (313,1314) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_6()V ERROR java.lang.RuntimeException (961,1267) (961,1267) (313,1314) (313,1314) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_7()V ERROR java.lang.RuntimeException (961,1267) (961,1267) (313,1314) (313,1314) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_8()V ERROR java.lang.RuntimeException (961,1267) (961,1267) (313,1314) (313,1314) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_9()V ERROR java.lang.RuntimeException (961,1267) (961,1267) (313,1314) (313,1314) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_10()V ERROR java.lang.RuntimeException (961,1267) (961,1267) (313,1314) (313,1314) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_11()V ERROR java.lang.RuntimeException (961,1267) (961,1267) (313,1314) (313,1314) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_12()V ERROR java.lang.RuntimeException (961,1267) (961,1267) (313,1314) (313,1314) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_13()V ERROR java.lang.RuntimeException (961,1267) (961,1267) (313,1314) (313,1314) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_14()V ERROR java.lang.RuntimeException (961,1267) (961,1267) (313,1314) (313,1314) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_15()V ERROR java.lang.RuntimeException (961,1267) (961,1267) (313,1314) (313,1314) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_16()V ERROR java.lang.RuntimeException (961,1267) (961,1267) (313,1314) (313,1314) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_17()V ERROR java.lang.RuntimeException (961,1267) (961,1267) (313,1314) (313,1314) 
daikon.test.split.SplitterFactoryTest:testmisc_Fib_main_18()V ERROR java.lang.RuntimeException (961,1267) (961,1267) (313,1314) (313,1314) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_19()V ERROR java.lang.RuntimeException (961,1267) (961,1267) (313,1314) (313,1314) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_20()V ERROR java.lang.RuntimeException (961,1267) (961,1267) (313,1314) (313,1314) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_21()V ERROR java.lang.RuntimeException (961,1267) (961,1267) (313,1314) (313,1314) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_22()V ERROR java.lang.RuntimeException (961,1267) (961,1267) (313,1314) (313,1314) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_23()V ERROR java.lang.RuntimeException (961,1267) (961,1267) (313,1314) (313,1314) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_24()V ERROR java.lang.RuntimeException (961,1267) (961,1267) (313,1314) (313,1314) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_25()V ERROR java.lang.RuntimeException (961,1267) (961,1267) (313,1314) (313,1314) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_26()V ERROR java.lang.RuntimeException (961,1267) (961,1267) (313,1314) (313,1314) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_27()V ERROR java.lang.RuntimeException (961,1267) (961,1267) (313,1314) (313,1314) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_28()V ERROR java.lang.RuntimeException (961,1267) (961,1267) (313,1314) (313,1314) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_29()V ERROR java.lang.RuntimeException (961,1267) (961,1267) (313,1314) (313,1314) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_30()V ERROR java.lang.RuntimeException (961,1267) (961,1267) (313,1314) (313,1314) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_31()V ERROR java.lang.RuntimeException (961,1267) (961,1267) (313,1314) (313,1314) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_32()V ERROR java.lang.RuntimeException (961,1267) (961,1267) (313,1314) (313,1314) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__33()V ERROR java.lang.RuntimeException (961,1267) (961,1267) (313,1314) (313,1314) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__34()V ERROR java.lang.RuntimeException (961,1267) (961,1267) (313,1314) (313,1314) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__35()V ERROR java.lang.RuntimeException (961,1267) (961,1267) (313,1314) (313,1314) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__36()V ERROR java.lang.RuntimeException (961,1267) (961,1267) (313,1314) (313,1314) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__37()V ERROR java.lang.RuntimeException (961,1267) (961,1267) (313,1314) (313,1314) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__38()V ERROR java.lang.RuntimeException (961,1267) (961,1267) (313,1314) (313,1314) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__39()V ERROR java.lang.RuntimeException (961,1267) (961,1267) (313,1314) (313,1314) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__40()V ERROR java.lang.RuntimeException (961,1267) (961,1267) (313,1314) (313,1314) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__41()V ERROR java.lang.RuntimeException (961,1267) (961,1267) (313,1314) (313,1314) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__42()V ERROR java.lang.RuntimeException (961,1267) (961,1267) (313,1314) (313,1314) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__43()V ERROR java.lang.RuntimeException (961,1267) (961,1267) (313,1314) (313,1314) 

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
jtb.syntaxtree.FormalParameter:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.VarInfo:get_enclosing_var()Ldaikon.VarInfo;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
jtb.JavaParser:jj_3R_51()Z
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_2_18(I)Z
utilMDE.MathMDE:mod_positive(JJ)J
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
jtb.syntaxtree.VariableDeclaratorId:VariableDeclaratorId(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
jtb.syntaxtree.TypeArguments:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:fn_is_total([I)Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_163()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AndExpression;)V
jtb.syntaxtree.TypeBound:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_2_5(I)Z
utilMDE.WeakHasherMap:size()I
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.Quant:memberOf(I[I)Z
jtb.syntaxtree.NodeToken:accept(Ljtb.visitor.Visitor;)V
daikon.Quantify.QuantFlags:distinct()Ljava.util.EnumSet;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
jtb.syntaxtree.MultiplicativeExpression:accept(Ljtb.visitor.Visitor;)V
daikon.ProglangType:isPointerFileRep()Z
utilMDE.FuzzyFloat:FuzzyFloat(D)V
jtb.JavaParser:jj_3R_62()Z
jtb.syntaxtree.UnaryExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_22()Z
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfo:isPrestate()Z
daikon.Quant:subsetOf([B[I)Z
daikon.inv.unary.sequence.NoDuplicates:NoDuplicates(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
jtb.JavaParser:jj_3R_117()Z
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltOneOf:enabled()Z
utilMDE.ArraysMDE:noDuplicates([D)Z
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:subsetOf([S[S)Z
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameter;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:jj_2_21(I)Z
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
utilMDE.ArraysMDE:min_max([I)[I
daikon.tools.jtb.Ast:create(Ljava.lang.String;Ljava.lang.String;)Ljtb.syntaxtree.Node;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:noDups([I)Z
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.inv.unary.sequence.EltwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
jtb.JavaParser:jj_3_1()Z
daikon.Quant:memberOf(D[F)Z
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3_35()Z
jtb.JavaParser:jj_3R_100()Z
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:jj_3R_77()Z
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_69()Z
jtb.syntaxtree.TypeDeclaration:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3_12()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.FuzzyFloat:lt(DD)Z
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
jtb.JavaCharStream:getEndColumn()I
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.VarInfoName.Elements:ioa_name_impl()Ljava.lang.String;
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.Quant:lte(II)Z
jtb.JavaParser:jj_3_36()Z
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:indexOf([D[D)I
jtb.JavaParser:jj_3R_86()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.PptName:getFullClassName()Ljava.lang.String;
daikon.inv.OutputFormat:isJavaFamily()Z
jtb.JavaParser:jj_3R_72()Z
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfo:is_direct_non_slice_array()Z
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.Quant:gt(II)Z
daikon.inv.unary.sequence.NoDuplicates:get_proto()Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.inv.unary.sequence.EltUpperBound:EltUpperBound(Ldaikon.PptSlice;)V
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.VarInfo:new_ppt()V
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
jtb.JavaParser:jj_2_16(I)Z
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.Quant:eltwiseNotEqual([I)Z
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.ProglangType:dimensions()I
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.sequence.EltUpperBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.inv.unary.sequence.EltNonZero:enabled()Z
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.Intern:numIntArrays()I
daikon.VarInfo:dbc_name()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.Quant:pairwiseEqual([I[I)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_134()Z
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
jtb.syntaxtree.InstanceOfExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:isWorthPrinting()Z
utilMDE.FuzzyFloat:eq(DD)Z
daikon.inv.unary.sequence.NoDuplicates:format_simplify()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:format_simplify()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.PptSlice1:num_samples()I
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_110()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameter;)V
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.tools.jtb.SimpleTreeDumper:SimpleTreeDumper(Ljava.io.Writer;)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Block;)V
daikon.Quant:eltwiseLT([I)Z
daikon.inv.unary.sequence.EltUpperBound:format_esc()Ljava.lang.String;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.UtilMDE:removeWhitespaceAround(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.UpperBound:enabled()Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
jtb.JavaParser:JavaParser(Ljava.io.Reader;)V
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.VarComparabilityNone:comparable(Ldaikon.VarComparabilityNone;Ldaikon.VarComparabilityNone;)Z
jtb.JavaParser:getToken(I)Ljtb.Token;
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.Quant:pairwiseDivides([I[I)Z
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J | OPERATOR | 17476 | - -> <<
daikon.Quant:eq(DD)Z
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.TypeDeclaration:TypeDeclaration(Ljtb.syntaxtree.NodeChoice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReturnStatement;)V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_103()Z
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.UtilMDE:removeWhitespaceBefore(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:subarray([III)[I | ASSIGN | 29404 | = null
jtb.JavaParser:jj_3R_50()Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.Quantify.IOAQuantification:getFreeVar(I)Ldaikon.Quantify.Term;
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ExclusiveOrExpression;)V
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.diff.Node:Node(LutilMDE.Pair;)V
jtb.JavaParser:jj_2_10(I)Z
jtb.JavaParser:jj_2_1(I)Z
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.ProglangType:isArray()Z
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_125()Z
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.tools.jtb.Ast:removeWhitespace(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:is_boolean()Z
jtb.syntaxtree.Statement:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:eltwiseLTE([I)Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.NoDuplicates:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.Quantify.QuantFlags:adjacent()Ljava.util.EnumSet;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.ProglangType:isPseudoArray()Z
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InstanceOfExpression;)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArgument;)V
daikon.Quant:eltwiseEqual([I)Z
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.ModBitTracker:ModBitTracker(I)V
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_ioa()Ljava.lang.String;
jtb.JavaParser:jj_3_30()Z
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
daikon.tools.jtb.PptNameMatcher:getUngenerifiedType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String; | ASSIGN | 882 | = null
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:memberOf(F[D)Z
daikon.inv.unary.sequence.EltOneOf:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.EltOneOf:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:java_name()Ljava.lang.String;
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AdditiveExpression;)V
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.visitor.TreeDumper:TreeDumper(Ljava.io.Writer;)V
jtb.JavaParser:jj_ntk()I
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
jtb.syntaxtree.Modifiers:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.VarInfoName.InorderFlattener:InorderFlattener(Ldaikon.VarInfoName;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.syntaxtree.NodeSequence:elementAt(I)Ljtb.syntaxtree.Node;
jtb.JavaParser:jj_3R_101()Z
jtb.JavaParser:jj_3_16()Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.syntaxtree.TypeDeclaration:getParent()Ljtb.syntaxtree.Node;
utilMDE.FuzzyFloat:isSubset([D[D)Z
utilMDE.OrderedPairIterator:setnext1()V
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.inv.unary.UpperBoundCore:wouldChange(J)Z
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
daikon.VarInfoName:isLiteralConstant()Z
jtb.syntaxtree.ClassOrInterfaceDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.VarInfoName:hashCode()I
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
jtb.syntaxtree.InclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.EltOneOf:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
jtb.JavaParser:FormalParameter()Ljtb.syntaxtree.FormalParameter;
jtb.syntaxtree.ConditionalOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.Invariant:prob_and(DD)D
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljtb.syntaxtree.Node;)Z
utilMDE.ArraysMDE:max([I)I
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:subsetOf([D[D)Z
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
daikon.Quant:lt(II)Z
jtb.JavaParser:jj_3R_68()Z
daikon.diff.PrintAllVisitor:bufPrintln()V
jtb.syntaxtree.ClassOrInterfaceType:accept(Ljtb.visitor.Visitor;)V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.VarInfoName.Elements:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_56()Z
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Modifiers;)V
daikon.Quantify:quantify([Ldaikon.VarInfo;)[Ldaikon.Quantify.QuantifyReturn;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.inv.unary.sequence.EltNonZero:format_esc()Ljava.lang.String;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
jtb.JavaParser:jj_3R_67()Z
utilMDE.MathMDE:negate(I)I
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:concat([I[I)[I
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.tools.jtb.SimpleTreeDumper:printToken(Ljava.lang.String;)V
jtb.JavaParser:jj_3R_76()Z
utilMDE.UtilMDE:split(Ljava.lang.String;Ljava.lang.String;)[Ljava.lang.String;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:simplify_name()Ljava.lang.String;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:memberOf(J[J)Z
daikon.PptName:toString()Ljava.lang.String;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.ConditionalExpression:accept(Ljtb.visitor.Visitor;)V
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptName:getSignature()Ljava.lang.String;
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.VarInfo:apply_subscript(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeBound;)V
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_74()Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ResultType;)V
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quant:concat([I[I)[I
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.Quant:pairwiseLT([I[I)Z
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.ProglangType:isFloat()Z
daikon.Quant:memberOf(S[S)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PostfixExpression;)V
jtb.syntaxtree.ImportDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:subsetOf([D[F)Z
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
jtb.JavaParser:jj_3R_47()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.inv.Invariant:logDetail()Z
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
jtb.JavaParser:jj_3_20()Z
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParser:jj_3R_107()Z
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:format_ioa()Ljava.lang.String;
jtb.JavaParser:jj_3R_61()Z
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
jtb.syntaxtree.TypeDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quantify.Term:ioa_name()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.tools.jtb.PptNameMatcher:extractPptArgs(Ldaikon.PptName;)Ljava.util.List;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpression;)V
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.ModBitTracker:split(I)I
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.Quant:intersection([I[I)[I
jtb.JavaParser:jj_3R_87()Z
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.OrderedPairIterator:hasNext()Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.inv.Invariant:prob_or(DD)D
daikon.Quant:eltsEqualIndex([I)Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_52()Z
jtb.JavaParser:jj_3R_48()Z
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_98()Z
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
utilMDE.ArraysMDE:sum([[I)I
jtb.JavaParser:jj_3_15()Z
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quantify.QuantFlags:include_index()Ljava.util.EnumSet;
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.VariableDeclaratorId:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
jtb.syntaxtree.CompilationUnit:CompilationUnit(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor.1:visit(Ljtb.syntaxtree.TypeParameter;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
jtb.syntaxtree.NodeListOptional:accept(Ljtb.visitor.Visitor;)V
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.ReturnStatement:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.TestAst:checkMatch(Ljava.lang.String;Ljtb.syntaxtree.MethodDeclaration;Ldaikon.tools.jtb.PptNameMatcher;)V
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfo:relate_var()V
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:domainTypeIOA()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeSequence;)V
daikon.tools.jtb.Ast.1GetParametersVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArguments;)V
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.Quant:subsetOf([F[F)Z
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceDeclaration:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:min([I)I
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.Quant:lexLTE([I[I)Z
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.inv.filter.ParentFilter:ParentFilter()V
jtb.JavaParser:jj_3_10()Z
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.inv.unary.sequence.EltOneOf:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:sum([D)D
utilMDE.UtilMDE:lineNumberFileReader(Ljava.lang.String;)Ljava.io.LineNumberReader;
daikon.VarInfo:apply_subscript(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.Positive:enabled()Z
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.tools.jtb.Ast:getParent(Ljava.lang.Class;Ljtb.syntaxtree.Node;)Ljtb.syntaxtree.Node;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.Quant:eltsLTE([II)Z
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.PptName:isCombinedExitPoint()Z
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.NodeList:NodeList()V
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
utilMDE.ArraysMDE:sum([I)I
daikon.inv.Invariant:prob_and(DDD)D
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalAndExpression;)V
utilMDE.ArraysMDE:fn_identity(I)[I
jtb.JavaParser:jj_3R_55()Z
daikon.PptSlice0:initInvariantsSeen()V
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:ungenerify(Ljtb.syntaxtree.ClassOrInterfaceType;)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:ClassOrInterfaceDeclaration(Ljtb.syntaxtree.NodeChoice;Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ClassOrInterfaceBody;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_esc()Ljava.lang.String;
jtb.JavaParser:jj_3R_57()Z
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_99()Z
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.test.TestAst.MethodDeclarationHarvester:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.inv.Invariant:justified()Z
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_180()Z
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_102()Z
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReferenceType;)V
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
utilMDE.MathMDE:gcd(JJ)J
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.EltUpperBound:format_simplify()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_96()Z
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.VarInfoName:simplify_name()Ljava.lang.String;
jtb.syntaxtree.ShiftExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName.Simple:isLiteralConstant()Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:enabled()Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
jtb.JavaCharStream:getBeginColumn()I
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:baseIsScalar()Z
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.InvMap:InvMap()V
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
jtb.syntaxtree.TypeArgument:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.FormalParameter:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameters;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
jtb.JavaParser:jj_3_13()Z
daikon.tools.jtb.Ast:format(Ljtb.syntaxtree.Node;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryExpression;)V
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.tools.jtb.Ast:print(Ljtb.syntaxtree.Node;)Ljava.lang.String;
jtb.JavaCharStream:getBeginLine()I
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
utilMDE.Options.OptionInfo:argument_required()Z
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_105()Z
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
daikon.inv.unary.sequence.EltNonZero:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ValueTuple:tuplemodHasModified(I)Z
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
jtb.syntaxtree.TypeArguments:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
jtb.JavaParser:jj_3R_149()Z
jtb.JavaParser:jj_3R_75()Z
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.diff.RootNode:RootNode()V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltOneOf:is_hashcode()Z
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfo:isIOASet()Z
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.MathMDE:modulus([I)[I
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan()V
utilMDE.FuzzyFloat:gte(DD)Z
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:gte(II)Z
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
utilMDE.UtilMDE:removeWhitespaceAfter(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
daikon.inv.unary.sequence.EltOneOf:EltOneOf(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_137()Z
jtb.syntaxtree.PackageDeclaration:accept(Ljtb.visitor.Visitor;)V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.TestAst.ClassOrInterfaceDeclarationHarvester:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
jtb.JavaParser:jj_2_25(I)Z
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfo:isDerivedSubSequenceOf()Ldaikon.VarInfo;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
jtb.syntaxtree.MethodDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_2_14(I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeDeclaration;)V
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.Quantify.FreeVar:name()Ljava.lang.String;
daikon.ProglangType:base()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:updateResults()V
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
jtb.JavaParser:jj_3_18()Z
daikon.VarInfoName.Elements:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.VarInfo:ioa_name()Ljava.lang.String;
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.Node:children()Ljava.util.Iterator;
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.sequence.EltUpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.VarInfo:esc_name()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
jtb.JavaParser:jj_3R_60()Z
daikon.PptName:getMethodName()Ljava.lang.String;
utilMDE.FuzzyFloat:lte(DD)Z
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I | ASSIGN | 67827 | = null
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.Node:Node()V
jtb.JavaParser:jj_3R_136()Z
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
jtb.JavaParser:jj_3R_54()Z
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.Quant:eltsGT([II)Z
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.tools.jtb.PptNameMatcher:PptNameMatcher(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltsLteIndex([I)Z
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.tools.jtb.SimpleTreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
jtb.syntaxtree.TypeArguments:TypeArguments(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeArgument;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_2_36(I)Z
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_133()Z
jtb.syntaxtree.TypeArgument:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.InorderFlattener:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:ne(II)Z
jtb.JavaCharStream:readChar()C
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.EltOneOf:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat:gt(DD)Z
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.inv.unary.sequence.EltOneOf:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.inv.filter.InvariantFilters:InvariantFilters()V
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.LimitedSizeIntSet:add(I)V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.Quant:pairwiseLTE([I[I)Z
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.visitor.TreeDumper:printToken(Ljava.lang.String;)V
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
jtb.JavaParser:jj_3R_169()Z
daikon.VarInfoName.Elements:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_2_12(I)Z
daikon.PptSlice0:arity()I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PackageDeclaration;)V
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.VarComparabilityNone:elementType()Ldaikon.VarComparability;
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
daikon.inv.unary.sequence.EltUpperBound:format_daikon()Ljava.lang.String;
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.ClassOrInterfaceBody:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:noDuplicates([I)Z
jtb.syntaxtree.CompilationUnit:getParent()Ljtb.syntaxtree.Node;
daikon.PptTopLevel:name()Ljava.lang.String;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:eltsGtIndex([I)Z
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
daikon.inv.unary.sequence.EltUpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.TypeParameter:accept(Ljtb.visitor.Visitor;)V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.Quant:eltsGteIndex([I)Z
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.PptSlice2:arity()I
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_97()Z
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:MoreLexicalActions()V
utilMDE.ArraysMDE:sorted([I)Z
daikon.Quant:eq(FF)Z
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Debug:logDetail()Z
jtb.syntaxtree.ReferenceType:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
jtb.JavaCharStream:FillBuff()V
daikon.Quantify.IOAQuantification:getFreeVarName(I)Ljava.lang.String;
daikon.Quant:lexEqual([I[I)Z
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.inv.unary.sequence.EltUpperBound:enabled()Z
jtb.JavaParser:jj_3R_115()Z
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.ModBitTracker:num_vars()I
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.CompilationUnit:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalExpression;)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
jtb.syntaxtree.Block:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_2_35(I)Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:enabled()Z
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;)V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
jtb.JavaCharStream:ReadByte()C
daikon.test.FormatTestCase.SingleOutputTestCase:getDiffString()Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
jtb.syntaxtree.NodeChoice:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.inv.unary.UpperBoundCore:calc_range()J
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclarator;)V
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.inv.filter.ObviousFilter:ObviousFilter()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.RelationalExpression;)V
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.sequence.EltOneOf:format_daikon()Ljava.lang.String;
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
jtb.JavaCharStream:BeginToken()C
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
jtb.syntaxtree.ClassOrInterfaceBody:ClassOrInterfaceBody(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.inv.unary.sequence.NoDuplicates:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:eltwiseGTE([I)Z
daikon.Ppt:Ppt()V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_simplify()Ljava.lang.String;
daikon.Quant:pairwiseGT([I[I)Z
utilMDE.Intern:intern([I)[I
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;Z)Z
daikon.ProglangType:baseIsFloat()Z
utilMDE.FuzzyFloat:ne(DD)Z
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.PptTopLevel:getInvariants()Ljava.util.List;
jtb.syntaxtree.NodeSequence:getParent()Ljtb.syntaxtree.Node;
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.ValueTuple:isMissingFlow(I)Z
jtb.syntaxtree.ResultType:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_85()Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeChoice:getParent()Ljtb.syntaxtree.Node;
daikon.VarInfoName.InorderFlattener:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.InorderFlattener:nodes()Ljava.util.List;
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:pairwiseSquare([I[I)Z
jtb.JavaParser:jj_3_14()Z
jtb.syntaxtree.ConditionalAndExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
utilMDE.Assert:assertTrue(Z)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.tools.jtb.PptNameMatcher:typeMatch(Ljava.lang.String;Ljtb.syntaxtree.FormalParameter;)Z
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.inv.unary.sequence.EltUpperBound:format_ioa()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
jtb.JavaParser:jj_scan_token(I)Z
daikon.Quant:eltsLT([II)Z
jtb.syntaxtree.NodeListOptional:present()Z
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant; | RETURN | 2805 | return null
jtb.syntaxtree.Name:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.Quant:lexNotEqual([I[I)Z
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;Ldaikon.VarInfo;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:EltwiseIntLessThan(Ldaikon.PptSlice;)V
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.Quant:memberOf(F[F)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
jtb.syntaxtree.BlockStatement:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ClassOrInterfaceBody:getParent()Ljtb.syntaxtree.Node;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
jtb.syntaxtree.NodeToken:numSpecials()I
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
jtb.JavaParser:jj_2_15(I)Z
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.EltNonZero:format_daikon()Ljava.lang.String;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
jtb.syntaxtree.ClassOrInterfaceBody:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.AndExpression:accept(Ljtb.visitor.Visitor;)V
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.inv.unary.sequence.EltLowerBound:format_simplify()Ljava.lang.String;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.PrimaryExpression:accept(Ljtb.visitor.Visitor;)V
daikon.test.FormatTestCase:passes()Z
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_daikon()Ljava.lang.String;
jtb.syntaxtree.VariableDeclaratorId:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MultiplicativeExpression;)V
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:isReverse([I[I)Z
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.inv.unary.sequence.EltNonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljava.lang.String;Ljava.lang.String;Ljava.util.List;)Z
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.ProglangType:isIntegral()Z
jtb.syntaxtree.NodeSequence:elements()Ljava.util.Enumeration;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.Quantify.QuantifyReturn:QuantifyReturn(Ldaikon.VarInfo;)V
jtb.Token:newToken(I)Ljtb.Token;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
jtb.syntaxtree.TypeParameters:accept(Ljtb.visitor.Visitor;)V
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:lexGT([I[I)Z
jtb.JavaParser:jj_3R_73()Z
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
jtb.JavaParser:jj_2_4(I)Z
daikon.VarInfo:isPointer()Z
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.Debug:logOn()Z
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.sequence.EltOneOf:format_esc()Ljava.lang.String;
jtb.JavaParser:jj_3_19()Z
jtb.syntaxtree.EqualityExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String;
daikon.Quant:subsetOf([I[I)Z
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan(Ldaikon.PptSlice;)V
jtb.syntaxtree.AdditiveExpression:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InclusiveOrExpression;)V
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3_27()Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.Quant:subsetOf([J[J)Z
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:eq(JJ)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltUpperBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.Type:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_164()Z
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
utilMDE.MathMDE:gcd_differences([I)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ShiftExpression;)V
daikon.Quant:sameLength([I[I)Z
jtb.JavaParser:jj_3_3()Z
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
jtb.syntaxtree.NodeOptional:NodeOptional()V
jtb.JavaParser:jj_3R_124()Z
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
utilMDE.MathMDE:pow_fast(II)I
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V
daikon.test.FormatTestCase:getDiffString()Ljava.lang.String;
jtb.JavaParser:jj_2_17(I)Z
utilMDE.UtilMDE:splitLines(Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE:sign(I)I
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
jtb.syntaxtree.NodeListOptional:getParent()Ljtb.syntaxtree.Node;
utilMDE.ArraysMDE:sum([[D)D
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.CompilationUnit;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_esc()Ljava.lang.String;
jtb.JavaCharStream:backup(I)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_88()Z
daikon.VarInfo:simplify_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
jtb.JavaCharStream:getEndLine()I
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.test.InvariantFormatTester:execute()Z
daikon.Quant:eltsNotEqual([II)Z
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltOneOf:format_ioa()Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
jtb.JavaParser:jj_2_13(I)Z
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.tools.jtb.Ast:create(Ljava.lang.String;[Ljava.lang.Class;[Ljava.lang.Object;Ljava.lang.String;)Ljtb.syntaxtree.Node;
utilMDE.WeakHasherMap:processQueue()V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_daikon()Ljava.lang.String;
daikon.Quant:lexGTE([I[I)Z
daikon.VarInfoName:ioa_name()Ljava.lang.String;
utilMDE.UtilMDE:lineNumberFileReader(Ljava.io.File;)Ljava.io.LineNumberReader;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
jtb.JavaParser:jj_3_5()Z
daikon.PptSlice1:arity()I
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.Quantify.IOAQuantification:getClosingExp()Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern:intern([J)[J
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.EltNonZero:format_simplify()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.inv.ValueSet:ValueSet(I)V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Type;)V
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
jtb.JavaParser:jj_3R_104()Z
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.unary.LowerBoundCore:calc_modulus()J
jtb.JavaParser:jj_3_17()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V
daikon.Quant:union([I[I)[I
jtb.syntaxtree.MethodDeclarator:accept(Ljtb.visitor.Visitor;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;II)V
jtb.syntaxtree.NodeSequence:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_80()Z
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_81()Z
daikon.VarInfo:name()Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.NoDuplicates:enabled()Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:get_proto()Ldaikon.inv.Invariant;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
jtb.syntaxtree.FormalParameter:FormalParameter(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Type;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.ModBitTracker:num_samples()I
utilMDE.MathMDE:gcd(II)I
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Statement;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.inv.unary.sequence.EltOneOf:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
jtb.JavaParser:jj_3R_70()Z
daikon.inv.unary.sequence.EltNonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;)Z
daikon.inv.Invariant:getConfidence()D
daikon.ModBitTracker:num_sets()I
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
jtb.syntaxtree.NodeOptional:accept(Ljtb.visitor.Visitor;)V
jtb.JavaCharStream:GetImage()Ljava.lang.String;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.inv.unary.sequence.EltUpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:enabled()Z
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ImportDeclaration;)V
jtb.JavaParser:jj_3_21()Z
utilMDE.ArraysMDE:indexOf([ZZ)I
utilMDE.Intern:intern([D)[D
jtb.JavaParser:jj_3_28()Z
jtb.syntaxtree.ExclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.EltwiseIntComparison:EltwiseIntComparison(Ldaikon.PptSlice;)V
daikon.tools.jtb.Ast:quickFixForInternalComment(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.tools.jtb.Ast:getName(Ljtb.syntaxtree.MethodDeclaration;)Ljava.lang.String;
jtb.JavaParser:jj_3R_123()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.BlockStatement;)V
jtb.syntaxtree.FormalParameters:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE:mod_positive(II)I
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
jtb.syntaxtree.MethodDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltsLtIndex([I)Z
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;)V
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltNonZero:EltNonZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.ValueTuple:size()I
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:copy(Ljava.util.HashMap;)Ljava.util.HashMap;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.VarComparabilityNone:indexType(I)Ldaikon.VarComparability;
daikon.VarInfo:isDerived()Z
daikon.tools.jtb.Ast:getPackage(Ljtb.syntaxtree.CompilationUnit;)Ljava.lang.String;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameters;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:enabled()Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Expression;)V
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual()V
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.inv.Invariant:logOn()Z
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.Quant:lexLT([I[I)Z
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
utilMDE.ArraysMDE:fn_compose([I[I)[I
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_114()Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_89()Z
jtb.syntaxtree.RelationalExpression:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBody;)V
jtb.JavaParser:jj_3R_49()Z
daikon.Quant:subsetOf([F[D)Z
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.tools.jtb.Ast:getParameters(Ljtb.syntaxtree.MethodDeclaration;)Ljava.util.List;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.inv.unary.sequence.NoDuplicates:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.Ppt:indexOf(Ljava.lang.String;)I
daikon.inv.unary.sequence.EltOneOf:subarray_rep()Ljava.lang.String;
jtb.JavaParser:jj_3R_210()Z
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.PptName:isEnterPoint()Z
daikon.ProglangType:baseIsIntegral()Z
daikon.Quant:setEqual([I[I)Z
daikon.PptSlice0.ImplicationWrapper:hashCode()I
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_ioa()Ljava.lang.String;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
jtb.JavaParser:VariableDeclaratorId()Ljtb.syntaxtree.VariableDeclaratorId;
daikon.VarInfo:simplify_quantify(Ljava.util.EnumSet;[Ldaikon.VarInfo;)[Ljava.lang.String;
jtb.syntaxtree.PostfixExpression:accept(Ljtb.visitor.Visitor;)V
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
utilMDE.ArraysMDE:element_range([I)I
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.inv.unary.sequence.EltNonZero:is_pointer()Z
utilMDE.MathMDE:missing_numbers([I)[I
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
jtb.syntaxtree.PrimaryPrefix:accept(Ljtb.visitor.Visitor;)V | STATEMENT | 588 | stmt -> ;
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
jtb.JavaParser:jj_3R_53()Z
jtb.syntaxtree.Expression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_2_3(I)Z
daikon.Quant:eltsEqual([II)Z
jtb.JavaParser:jj_3_29()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
jtb.syntaxtree.NodeOptional:present()Z
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
utilMDE.MathMDE:pow(II)I
daikon.Quantify.IOAQuantification:getQuantifierExp()Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.SimpleLog:SimpleLog(Z)V
jtb.JavaParser:jj_3R_116()Z
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalOrExpression;)V
daikon.Quant:eltwiseGT([I)Z
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_63()Z
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_108()Z
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.tools.jtb.Ast:getClassName(Ljtb.syntaxtree.Node;)Ljava.lang.String;
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.EqualityExpression;)V
daikon.ProglangType:elementType()Ldaikon.ProglangType;
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.inv.Invariants:Invariants()V
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:slice([III)[I
daikon.VarInfo:isIOAArray()Z
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eq(II)Z
jtb.syntaxtree.NodeListOptional:elements()Ljava.util.Enumeration;
utilMDE.OrderedPairIterator:setnext2()V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:computeConfidence()D
jtb.JavaParser:jj_3R_161()Z
jtb.JavaParser:jj_3R_58()Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.Quantify.IOAQuantification:IOAQuantification([Ldaikon.VarInfo;)V
daikon.inv.unary.sequence.NoDuplicates:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_simplify()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_135()Z
jtb.JavaParser:jj_3R_121()Z
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
jtb.JavaParser:jj_3R_109()Z
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.inv.unary.sequence.NoDuplicates:format_ioa()Ljava.lang.String;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Name;)V
jtb.JavaParser:jj_3R_162()Z
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
jtb.visitor.TreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
jtb.JavaParser:jj_3_4()Z
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.VarInfoName:name()Ljava.lang.String;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:sort_rep()V
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ValueTuple:isMissing(I)Z
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:jj_3R_106()Z
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.Quant:pairwiseGTE([I[I)Z
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.Ppt:find_var_by_name(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.Quantify.IOAQuantification:getMembershipRestriction(I)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
utilMDE.LimitedSizeIntSet:size()I
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_122()Z
daikon.inv.unary.sequence.EltwiseIntLessThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:indexOf([II)I
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.JavaParser:jj_3R_118()Z
daikon.Quantify.IOAQuantification:getVarIndexedString(I)Ljava.lang.String;
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:gcd([I)I
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
jtb.JavaParser:jj_3R_119()Z
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.config.Configuration:apply(Ljava.lang.String;)V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_148()Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_120()Z
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3_25()Z
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.VarInfo:get_all_simple_names()Ljava.util.List;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameters;)V
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
daikon.Quant:setDiff([I[I)[I
jtb.JavaParser:jj_3R_126()Z
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
utilMDE.Intern:internSubsequence([III)[I | ASSIGN | 22726 | = null
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.Quant:eltsGTE([II)Z
daikon.ProglangType:isScalar()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
5 2 817 2 421 2 933 2 1465 2 1271 2 1386 2 1524 4 988 2 
1083 2 1460 6 482 2 218 2 1191 6 1108 2 483 2 1480 2 441 2 342 6 1347 2 
1525 6 323 2 1288 6 1361 2 933 2 676 4 215 2 1427 2 471 4 176 2 418 6 1308 6 988 2 
320 4 1124 6 1350 4 499 2 1392 2 1126 2 1377 6 1190 2 933 2 244 2 266 6 1572 2 959 4 1481 2 216 7 1346 2 893 6 211 2 988 2 
628 6 213 4 
950 2 
862 4 561 2 1281 2 276 2 388 2 5 2 874 2 618 2 735 2 66 2 1534 4 931 2 573 2 246 2 578 2 836 2 1400 2 75 4 935 2 22 2 449 2 1103 2 633 2 255 2 411 2 846 2 541 2 1205 2 361 2 494 2 767 2 643 2 1360 2 711 2 551 2 312 2 1164 2 94 2 964 2 381 2 
320 32 1549 6 1371 2 1124 32 1171 4 163 6 1350 22 513 6 1126 16 100 2 1377 32 1010 6 1436 4 326 4 212 2 1282 4 216 53 1335 8 849 2 1208 4 988 4 620 4 42 2 43 4 667 6 1475 2 1262 4 499 2 1190 16 933 4 266 6 959 4 1481 16 404 2 1168 6 379 6 1346 18 893 48 211 16 
1047 2 338 2 381 2 
526 2 239 2 127 2 49 2 692 2 187 22 836 2 838 2 106 2 963 10 341 2 764 2 642 2 808 2 
1274 2 320 2 1124 2 1350 2 1126 2 1377 2 451 2 486 2 31 2 216 6 35 2 499 2 1190 2 709 2 266 4 174 2 959 2 1097 2 1481 2 1346 2 893 4 211 2 1485 2 
320 8 1549 6 1124 8 43 4 1350 4 1392 2 835 2 1377 8 1126 4 1436 4 1190 4 1481 4 216 16 1168 6 893 12 908 2 211 4 
20 4 557 2 1047 2 23 4 1403 2 1050 2 939 4 688 2 1351 2 1249 10 1151 2 143 2 564 4 799 62 354 2 1281 2 1113 4 1258 2 596 4 145 2 61 2 570 2 1442 2 391 2 1418 4 1143 4 1539 2 813 2 1295 14 119 10 1161 2 1541 2 1422 2 75 4 1400 4 1296 4 338 6 158 4 1543 4 381 8 
930 2 653 2 899 2 611 2 627 2 919 2 1425 2 663 2 950 2 1456 2 
181 2 1487 3 1172 3 652 2 778 2 868 2 867 3 976 1 869 8 385 2 979 1 185 2 7 2 1383 32 8 2 1385 2 1387 2 1088 2 9 2 285 2 988 32 1089 2 196 2 1389 2 785 2 10 4 289 2 571 2 200 2 576 2 885 2 886 2 402 2 1399 2 678 1 580 2 791 2 581 2 1503 12 682 24 1301 2 125 1 1106 2 126 6 1011 5 129 2 1513 2 304 2 1409 3 305 2 803 2 693 2 593 2 1015 2 1412 3 32 3 1207 2 1116 2 37 2 41 16 1213 2 225 4 1215 2 1312 1 904 1 602 1 46 2 814 3 1121 2 426 2 1122 2 1319 2 1220 2 713 2 712 1 1428 2 818 6 717 2 511 1 229 2 1125 2 1128 2 1228 2 517 2 231 2 609 1 434 2 725 4 146 2 330 1 522 2 521 2 925 2 1336 2 1533 1 833 2 333 2 527 2 739 4 1043 1 1239 12 154 2 933 34 622 3 742 3 1450 2 1044 2 1452 4 445 2 1542 2 248 1 1244 2 1546 8 750 24 1548 2 632 16 447 2 843 2 1051 32 348 4 1465 2 1253 3 1056 2 637 2 259 3 1470 1 258 2 1255 2 1555 1 1058 1 1256 2 359 2 1066 16 766 4 850 2 1357 2 1068 4 1263 2 265 16 370 3 955 6 855 6 1072 2 1576 2 1075 2 461 8 1484 2 178 2 861 2 
1573 2 933 2 
358 2 574 2 933 4 
484 2 
1 2 2 46 382 10 1173 2 1175 168 1176 4 779 2 1179 2 6 4 389 2 390 2 784 8 1183 6 1184 56 1185 12 1186 2 1187 40 786 2 11 4 1188 40 1189 22 12 2 788 10 790 2 15 2 398 8 400 6 399 24 406 2 794 4 795 10 796 4 797 2 19 2 21 10 1197 2 408 6 410 2 24 82 26 26 27 4 800 2 28 6 29 14 414 14 30 2 1204 2 805 376 33 82 416 2 419 2 39 324 1212 22 420 6 44 2 1217 18 47 6 50 2 816 2 1221 2 1222 2 51 6 822 96 429 10 1227 2 54 2 432 6 56 2 1231 8 827 38 1232 22 433 4 1234 2 1233 188 1235 4 62 24 436 2 830 2 63 2 67 2 832 14 1236 2 71 4 439 332 70 2 834 4 1238 2 72 184 442 4 73 2 443 2 444 2 76 22 1245 2 1247 2 78 2 842 2 448 2 844 2 1252 6 845 6 847 4 84 280 86 4 89 2 455 2 1261 114 90 2 91 4 1264 2 852 2 92 2 853 2 458 162 857 22 93 2 460 2 96 2 98 62 1273 86 1272 184 99 4 463 4 866 20 103 22 467 78 1279 4 872 48 1280 2 468 2 873 6 469 2 1283 2 472 2 107 14 108 2 1284 6 110 10 1286 4 878 42 473 6 112 168 880 12 113 2 114 2 881 92 1291 2 1292 24 1293 6 117 2 1294 8 118 2 1297 2 121 2 891 2 894 4 124 2 480 4 481 4 898 2 1304 2 128 2 488 4 489 4 130 2 491 12 493 16 495 12 496 4 1309 6 902 4 498 2 903 96 132 2 500 12 502 2 1316 2 504 2 1322 4 907 6 507 6 508 6 909 4 509 300 139 152 912 4 1330 4 913 6 140 24 514 6 515 4 516 2 1331 4 1332 6 518 2 916 2 920 6 923 376 523 2 147 4 148 12 149 4 1338 6 152 138 933 8 530 188 934 156 531 2 159 2 534 24 937 8 941 6 942 2 943 2 540 4 945 14 946 168 165 2 1356 2 1355 2 949 2 547 8 1362 2 1364 2 1365 6 1367 4 1366 6 1369 2 1370 2 967 4 968 2 560 4 1374 2 972 62 182 4 973 48 975 6 977 4 184 6 565 36 980 4 1380 2 983 18 567 40 568 14 986 6 985 50 193 2 1388 48 988 8 195 10 194 16 989 2 198 4 991 2 998 480 1394 2 202 6 1396 6 577 6 206 4 579 4 1000 300 582 18 583 2 1004 12 585 4 586 4 1404 2 1405 6 588 2 592 10 1015 2 594 2 217 22 1413 4 1019 2 222 4 598 2 1020 6 1414 6 1415 2 226 2 1021 2 1022 6 1417 2 600 2 1024 46 1026 10 1027 6 1420 196 604 42 1031 6 1426 24 1030 6 1429 6 605 72 1034 24 1432 2 1433 114 1434 2 232 4 233 2 234 6 610 2 612 168 614 20 1040 6 1440 4 617 6 237 2 238 2 1445 6 242 2 1447 2 243 8 1448 6 624 168 245 4 629 168 1046 2 1457 2 1459 108 253 2 1053 6 254 6 1054 2 1469 4 1468 4 638 24 639 14 1063 2 261 4 1062 2 262 4 640 8 641 10 1067 188 644 50 264 2 1476 4 1478 2 1477 24 645 4 646 6 267 2 1071 168 268 2 270 4 650 4 1074 14 1483 2 651 168 1486 2 1076 4 655 2 656 2 659 10 1080 2 272 6 1492 12 660 24 1084 2 661 2 280 2 284 6 664 12 1493 4 665 2 286 24 1090 2 288 2 666 2 1092 2 671 2 1093 6 672 58 292 2 674 2 1496 38 1499 2 293 2 1501 2 679 2 1100 54 681 2 683 96 297 2 298 2 1514 2 1110 6 1111 6 695 2 1115 2 1518 2 701 96 704 4 705 2 707 2 708 4 710 300 1123 2 314 18 315 2 714 2 322 6 718 2 1527 2 324 18 1530 24 325 56 1129 2 327 10 328 14 1130 2 723 6 329 2 726 2 727 2 729 40 730 4 1137 2 736 2 1139 18 1140 2 1537 24 335 6 336 2 1144 6 1146 2 337 4 743 2 746 2 1148 94 1545 24 1149 2 340 4 748 2 347 4 1553 4 1152 2 350 6 1153 10 1554 22 758 152 353 2 760 2 1155 2 1556 24 357 6 761 2 356 2 762 2 1557 2 360 2 763 2 362 2 1156 4 765 2 1563 2 369 2 1567 14 1568 2 770 2 371 2 1570 2 373 20 772 2 773 4 1162 4 1163 4 375 74 1165 4 1167 186 378 4 
690 1 1458 2 781 2 1145 2 
1458 2 133 2 
479 2 244 2 
1458 2 1384 2 38 2 
1458 2 1105 2 38 2 
1057 2 804 2 1145 2 
1458 2 38 2 
804 2 1416 2 
1178 2 1458 2 
180 2 804 2 1145 2 
427 2 1145 2 697 2 
823 2 141 2 1145 2 
123 2 1145 2 958 2 
1517 2 372 2 1145 2 
287 2 804 2 
1458 2 156 2 
697 2 203 2 
141 2 273 2 
123 2 1430 2 
954 2 372 2 
804 2 485 2 
372 2 859 2 
851 2 123 2 
141 2 780 2 
1305 2 697 2 
180 2 804 2 883 2 1145 2 
180 2 1007 2 804 2 883 2 1145 2 
804 2 1145 2 224 2 
804 2 984 2 1145 2 
1025 2 789 2 1437 2 1018 2 
438 2 228 4 69 2 368 2 431 2 1120 4 301 2 1127 2 1218 2 538 2 386 2 59 2 187 6 1368 2 875 2 1016 2 405 2 87 2 
1145 2 1348 2 
394 2 423 2 425 2 381 2 
1516 2 394 2 423 2 425 2 1230 2 381 2 
244 2 1569 2 
80 2 846 2 
1454 2 423 2 244 2 381 2 
123 2 776 2 
1575 2 372 2 
999 2 697 2 
141 2 562 2 
1358 2 141 2 372 2 
141 2 543 2 372 2 
141 2 1079 2 372 2 
1193 2 141 2 372 2 
1049 2 1052 6 1408 2 520 2 283 2 423 2 14 6 381 2 
804 2 220 2 
1244 2 
652 2 979 2 1383 6 1385 2 9 2 988 26 1089 2 196 2 879 4 10 2 289 2 992 2 994 2 200 2 290 2 576 2 885 2 887 2 1399 2 580 2 581 2 1503 8 296 2 1508 2 685 2 1198 2 125 4 126 2 304 4 693 2 1015 2 593 2 131 2 490 4 37 2 1213 2 426 2 134 2 1319 2 818 2 717 2 229 2 517 2 824 2 434 2 725 2 1334 2 146 2 926 2 521 2 1336 2 1439 2 1533 2 833 2 333 2 739 2 933 26 1239 8 1452 4 938 2 1051 4 634 2 348 4 1465 2 1255 2 359 2 1066 6 766 4 1357 2 1068 4 955 6 855 4 1576 6 1075 2 461 2 178 2 
652 2 563 2 979 2 1383 6 8 2 1385 2 9 2 988 26 1089 2 196 2 879 4 10 2 289 2 992 2 994 2 200 2 576 2 885 2 887 2 1399 2 580 2 581 2 1503 8 296 2 1508 2 1198 2 125 2 126 2 304 4 693 2 1015 2 593 2 131 2 490 4 37 2 1213 2 1315 2 426 2 134 2 1319 2 818 2 717 2 229 2 1125 2 517 2 824 2 434 2 725 2 1334 2 146 2 521 2 1336 2 1439 2 1533 2 833 2 333 2 739 2 933 26 1239 8 1452 4 938 2 1051 4 634 2 348 4 1465 2 258 2 1255 2 359 2 1066 6 952 2 766 4 1357 2 1068 4 955 6 855 6 1576 6 1075 2 461 2 178 2 
1032 2 
74 2 960 2 
700 2 559 2 1460 2 670 4 769 4 482 2 740 2 635 2 483 2 170 2 537 2 801 2 401 2 724 2 747 2 342 2 318 2 317 2 
863 2 464 2 559 2 229 2 1489 2 724 2 566 2 921 2 1382 2 1336 2 988 6 1441 2 197 2 833 2 289 2 670 4 116 2 740 2 1191 6 933 12 441 2 1451 2 1452 2 401 2 1147 2 747 4 532 2 342 4 839 2 122 2 752 2 1460 6 1199 4 1463 2 482 4 483 4 635 2 537 2 801 2 260 4 1015 2 848 6 542 2 218 2 947 2 219 4 545 2 167 2 1357 2 1310 4 700 2 769 4 1068 2 1158 4 170 2 955 4 426 2 318 2 317 2 966 2 
863 2 464 2 559 2 229 2 1489 2 724 2 566 2 921 2 1382 2 1336 2 988 6 1441 2 197 2 833 2 289 2 670 4 116 2 740 2 1191 6 933 12 441 2 1451 2 1452 2 401 2 1147 2 747 4 532 2 342 6 839 2 122 2 752 2 1460 4 1199 4 1463 2 482 4 483 4 635 2 537 2 801 2 260 4 1015 2 848 6 542 2 947 2 219 4 545 2 167 2 1357 2 1310 4 700 2 769 4 1068 2 1158 4 170 2 1480 2 955 4 426 2 318 2 317 2 966 2 
863 2 464 2 559 2 229 2 1489 2 724 2 566 2 921 2 1382 2 1336 2 988 6 1441 2 197 2 833 2 289 2 670 4 116 2 740 2 1191 6 933 12 441 2 1451 2 1452 2 401 2 1147 2 747 4 532 2 342 6 839 2 122 2 752 2 1460 6 1199 4 1463 2 482 4 483 4 635 2 1108 2 537 2 801 2 260 4 1015 2 848 6 542 2 947 2 219 8 545 2 167 2 1357 2 1310 4 700 2 769 4 1068 2 1158 4 170 2 955 4 426 2 318 2 317 2 966 2 
863 2 464 2 559 2 229 2 1489 2 724 2 566 2 921 2 1382 2 1336 2 988 6 1441 2 197 2 833 2 289 2 670 4 116 2 740 2 1191 8 933 12 441 2 1452 2 1451 2 401 2 1147 2 747 4 532 2 342 8 839 2 122 2 752 2 1460 6 1199 8 1463 2 482 4 483 4 635 2 1108 2 537 2 801 2 260 4 1015 2 848 10 542 2 947 2 219 8 545 2 167 2 1357 2 1310 4 700 2 769 4 1068 2 1158 4 170 2 1480 2 955 4 426 2 318 2 317 2 966 2 
863 2 464 2 559 2 229 2 1489 2 724 2 566 2 921 2 1382 2 1336 2 988 6 1441 2 197 2 833 2 289 2 670 4 116 2 740 2 1191 6 933 12 441 2 1451 2 1452 2 401 2 1147 2 747 4 532 2 342 6 839 2 122 2 752 2 1460 6 1199 8 1463 2 482 4 483 4 635 2 1108 2 537 2 801 2 260 4 1015 2 848 10 542 2 947 2 219 8 545 2 167 2 1357 2 1310 4 700 2 769 4 1068 2 1158 4 170 2 955 4 426 2 318 2 317 2 966 2 
1170 7 559 2 384 4 186 2 1382 2 1383 8 191 6 9 2 988 24 196 2 1182 2 197 2 10 2 994 2 995 6 200 2 1191 12 576 2 401 2 1399 2 581 2 209 2 1006 1 1198 4 409 2 801 2 1015 2 593 2 595 4 219 2 37 2 1213 2 1216 2 45 2 812 1 426 2 1421 1 603 2 818 2 1226 6 229 2 824 2 1438 2 1441 2 833 2 1239 4 441 4 623 2 1452 4 1451 2 839 2 1048 2 446 2 1460 4 1462 6 1463 2 450 2 1051 2 635 2 1465 2 1254 2 1467 6 258 2 83 6 260 8 848 2 454 1 1066 6 1068 4 1480 4 855 6 1268 6 461 2 863 2 464 4 1489 2 101 6 1082 2 1089 12 877 2 289 2 670 4 1287 6 116 2 1503 4 1504 2 1299 2 122 2 1510 2 482 4 1303 6 483 4 126 2 484 6 1112 1 490 4 309 2 1310 6 700 2 1313 2 503 2 1319 2 506 2 317 2 318 2 716 1 1526 1 1125 2 517 2 724 2 921 2 725 2 146 2 521 2 1336 2 1535 6 738 8 1141 6 332 2 739 2 933 46 740 2 1147 2 744 2 532 2 747 4 533 2 342 8 343 2 1547 7 752 2 938 2 751 2 940 1 348 4 537 2 359 2 358 6 1354 2 1353 10 542 2 947 2 363 6 167 4 545 2 546 1 766 4 1357 2 769 4 1158 4 170 2 1160 2 955 6 956 2 1573 6 374 2 1576 6 965 2 178 2 966 2 
863 2 464 4 559 2 384 4 1489 2 101 6 1082 2 186 2 1383 8 1382 2 191 6 9 2 1089 12 988 26 1182 2 196 2 877 2 197 2 10 4 289 2 1287 6 994 2 670 4 995 6 116 2 200 2 1191 12 576 2 476 2 401 2 1399 2 581 2 1503 8 209 2 1504 2 1299 2 1198 4 122 2 409 2 1510 2 482 4 1303 6 1108 4 483 4 126 2 484 6 801 2 304 2 593 2 1015 2 595 4 490 4 219 6 37 2 309 2 1310 6 1213 2 700 2 1216 2 1313 2 45 2 503 2 426 2 1319 2 603 2 506 2 818 2 318 2 317 2 1226 6 229 2 1125 2 517 2 824 2 724 2 725 4 921 2 146 2 1438 2 521 2 1336 2 1441 2 1535 6 833 2 738 8 332 2 1141 6 739 4 740 2 1239 8 933 48 441 4 623 2 1451 2 1452 4 744 2 1147 2 747 4 532 2 533 2 342 8 839 2 343 2 1048 2 446 2 751 2 938 2 752 2 1462 6 1460 8 1463 2 450 2 1051 2 1465 2 635 2 348 4 1467 6 1254 2 537 2 258 2 83 6 260 8 848 2 358 6 359 2 1353 10 1354 2 542 2 947 2 363 6 545 2 167 4 1066 6 766 4 1357 2 769 4 1068 4 1158 4 1160 2 170 2 956 2 955 6 855 6 1573 6 374 2 1268 6 1482 2 1576 6 965 2 461 2 966 2 178 2 
863 2 464 4 559 2 384 4 1489 2 101 6 1082 2 186 2 1383 8 1382 2 191 6 9 2 1089 12 988 26 1182 2 196 2 877 2 197 2 289 2 10 4 1287 6 994 2 670 4 995 6 116 2 200 2 1191 12 576 2 476 2 401 2 1399 2 581 2 1503 8 209 2 1504 2 1299 2 1198 4 122 2 409 2 1510 2 1199 4 482 4 1303 6 1108 4 483 4 126 2 484 6 801 2 304 2 593 2 1015 2 595 4 490 4 219 6 37 2 309 2 1310 6 1213 2 700 2 1216 2 1313 2 45 2 503 2 426 2 1319 2 603 2 506 2 818 2 318 2 317 2 1226 6 229 2 1125 2 517 2 824 2 724 2 725 4 921 2 146 2 1438 2 521 2 1336 2 1441 2 1535 6 833 2 738 8 332 2 1141 6 739 4 740 2 1239 8 933 48 441 4 623 2 1451 2 1452 4 744 2 1147 2 747 4 532 2 533 2 342 8 839 2 343 2 1048 2 446 2 751 2 938 2 752 2 1462 6 1460 8 1463 2 450 2 1051 2 1465 2 635 2 348 4 1467 6 1254 2 537 2 258 2 83 6 260 8 848 6 358 6 359 2 1353 10 1354 2 542 2 947 2 363 6 545 2 167 4 1066 6 766 4 1357 2 769 4 1068 4 1158 4 1160 2 170 2 956 2 955 6 855 6 1573 6 374 2 1268 6 1482 2 1576 6 965 2 461 2 966 2 178 2 
559 2 384 4 186 2 1382 2 1383 12 191 12 9 2 988 24 196 2 1182 2 197 2 10 4 993 6 994 2 995 6 200 2 1191 16 576 2 401 2 1399 2 581 2 209 2 210 2 1198 4 409 2 1199 4 412 6 801 2 593 2 1015 2 595 4 218 2 219 6 37 2 1213 2 1216 2 45 2 426 2 603 2 818 4 1226 6 229 2 824 4 1438 2 1441 2 833 2 1239 10 441 4 623 2 1452 4 1451 2 839 2 1048 2 446 2 1460 10 1462 12 1463 2 450 2 1051 4 635 2 1465 2 1254 2 1467 6 81 6 258 2 83 6 260 8 848 6 1066 8 457 2 263 2 1068 4 1480 2 855 6 1268 6 1482 2 461 4 863 2 464 4 1489 2 101 6 1082 2 1089 10 877 2 289 2 669 6 670 4 1287 6 1094 6 116 2 476 2 1099 2 1503 10 1504 2 1299 2 122 2 1510 2 482 4 1303 6 483 4 1108 4 126 4 484 12 304 2 490 6 309 2 1310 6 700 2 1519 2 905 2 503 2 1319 2 506 2 1324 6 317 2 318 2 1125 2 517 2 724 2 921 2 725 4 922 6 146 2 521 2 1336 2 927 2 1535 6 738 8 1141 6 332 2 739 4 933 52 740 2 1147 2 744 2 532 2 747 4 533 2 342 10 1349 2 936 6 343 2 752 2 938 2 751 2 348 4 537 2 359 2 358 12 1354 2 1353 8 542 2 947 2 363 12 545 2 167 4 766 4 1357 2 769 4 1158 4 170 2 1160 2 955 6 956 2 1573 12 374 2 1576 8 555 6 965 2 178 2 966 2 
122 2 752 2 1460 6 1199 4 1463 2 482 4 1489 2 1108 2 635 2 483 4 801 2 260 2 724 2 848 4 921 2 542 2 1382 2 219 6 1441 2 1310 2 197 2 700 2 670 2 769 2 1158 2 933 4 1191 4 441 2 170 2 1451 2 401 2 532 2 342 6 317 2 966 2 
1489 2 1382 2 1383 8 9 2 988 24 1089 4 197 2 289 2 990 2 670 2 994 2 200 2 1191 4 576 2 886 2 401 2 1399 2 581 2 1198 2 122 2 896 2 482 4 1108 2 483 4 126 3 801 2 1513 2 593 2 1015 2 490 4 219 6 597 3 37 2 1310 2 700 2 1213 2 1313 2 426 2 1319 2 1428 2 818 3 317 2 229 2 1125 2 517 2 724 2 921 2 146 2 521 2 1336 2 1441 2 525 2 833 2 933 28 441 2 1451 2 1452 4 1147 2 532 2 342 6 1244 2 752 2 938 2 1460 6 1463 2 1051 3 348 4 1465 2 635 2 258 2 260 2 848 2 359 2 1353 2 542 2 1066 6 766 4 1357 2 769 2 1068 4 367 2 1158 2 170 2 955 6 855 6 858 2 1576 6 178 2 966 2 
863 2 464 2 559 2 229 2 1489 2 724 2 566 2 921 2 1382 2 1336 2 988 6 1441 2 197 2 833 2 289 2 670 4 116 2 740 2 1191 6 933 12 441 2 1451 2 1452 2 401 2 1147 2 747 4 532 2 342 6 839 2 122 2 752 2 1460 6 1199 8 1463 2 482 4 483 4 635 2 1108 2 537 2 801 2 260 4 1015 2 848 10 542 2 947 2 219 8 545 2 167 2 1357 2 1310 4 700 2 769 4 1068 2 1158 4 170 2 955 4 426 2 318 2 317 2 966 2 
863 2 464 2 559 2 229 2 1489 2 724 2 921 2 569 2 1336 2 988 6 1441 2 833 2 197 2 289 2 670 4 116 2 740 2 1191 8 933 12 884 4 441 2 1452 2 1451 2 401 2 1147 2 747 4 532 2 342 6 839 2 122 2 752 2 1460 8 1199 8 1463 2 482 4 635 2 483 4 1108 2 537 2 801 2 260 4 1015 2 848 10 542 2 218 2 947 2 219 8 545 2 167 2 1357 2 1310 4 700 2 769 4 1068 2 1158 4 170 2 955 4 426 2 380 2 318 2 317 2 966 2 
197 2 1479 2 1451 2 
197 2 1479 2 1451 2 
863 2 464 2 384 2 1375 2 104 2 782 2 1383 2 190 4 9 2 988 16 1089 4 196 4 197 6 1390 2 10 4 289 2 994 2 670 2 116 2 200 2 1191 16 576 2 1497 2 401 2 1397 2 1398 2 1399 2 581 2 1503 4 1508 4 1198 6 125 2 1199 4 482 4 483 4 1108 4 1015 2 593 2 595 2 1017 2 218 4 219 6 1209 2 37 2 1310 4 1213 2 700 2 426 2 815 2 1319 2 510 2 229 2 1125 2 1529 2 435 4 725 4 146 2 521 2 1336 2 1138 2 833 2 739 4 153 2 740 2 1239 4 933 24 441 4 1452 4 1451 4 747 4 532 2 533 2 342 12 343 2 446 2 938 2 753 2 752 2 1460 12 1051 2 348 4 1465 2 635 4 537 2 258 2 260 4 848 6 359 2 1353 2 85 2 947 2 167 4 1066 2 766 4 1357 2 1562 2 769 2 1068 4 1158 2 1479 2 1480 4 955 6 855 6 1268 2 1576 2 178 2 
1562 2 309 2 833 2 409 2 971 2 1529 2 933 4 74 2 1268 2 595 2 1353 2 77 2 318 2 1089 2 1209 2 1150 2 988 2 
863 2 464 4 384 2 1375 4 104 2 782 2 1383 2 190 4 9 2 988 16 1089 2 392 2 196 4 197 6 1390 2 10 4 289 2 994 2 670 2 116 2 200 2 1191 16 576 2 1497 2 401 2 1397 2 1399 2 581 2 1503 4 1508 4 1198 6 125 1 1199 4 482 4 483 4 1108 4 1015 2 593 2 1017 2 218 4 219 6 417 2 1209 2 37 2 1310 4 1213 2 700 2 426 2 1319 2 319 2 229 2 1125 2 1529 2 435 4 725 4 146 2 521 2 1336 2 833 2 739 4 153 2 740 2 1239 4 933 24 441 4 1343 2 1452 4 1451 4 747 4 532 2 533 2 342 12 343 2 446 2 938 2 753 2 752 2 1460 12 1051 4 348 4 1465 2 635 4 537 2 258 2 260 4 848 6 359 2 85 2 947 2 545 2 167 4 1066 2 766 4 1357 2 1562 2 769 2 1068 4 1158 2 1479 2 1480 4 955 6 855 6 1268 2 459 2 1576 2 178 2 
863 2 464 4 384 2 1375 2 104 2 782 2 1383 2 190 4 9 2 988 16 1089 4 196 4 197 6 1390 2 10 4 289 2 994 2 670 2 116 2 200 2 1191 16 576 2 1497 2 401 2 1397 2 1399 2 581 2 1503 4 407 2 1508 4 1198 6 125 1 1199 4 482 4 483 4 1108 4 1015 2 593 2 595 2 1017 2 218 4 219 6 1209 2 37 2 1310 4 1213 2 700 2 426 2 1319 2 229 2 1125 2 607 2 1529 2 57 2 435 4 725 4 146 2 521 2 1336 2 437 2 833 2 739 4 153 2 740 2 1239 4 933 24 441 4 1452 4 1451 4 747 4 532 2 533 2 342 12 343 2 446 2 938 2 753 2 752 2 1460 12 1051 2 348 4 1465 2 635 4 537 2 258 2 260 4 848 6 359 2 1353 2 85 2 947 2 545 2 167 4 1066 2 766 4 1357 2 1562 2 769 2 1068 4 1158 2 1479 2 1480 4 955 6 855 6 1268 2 1574 2 1576 2 178 2 
0 2 3 2 777 24 1174 8 383 14 1177 2 387 2 1181 2 9 2 393 3 395 24 1190 4 396 6 1192 2 13 2 397 2 16 4 403 14 17 24 1194 30 793 2 1198 2 25 2 798 2 1200 14 1202 2 1201 22 1203 2 413 14 1206 2 807 2 1208 4 809 14 37 4 1210 12 810 2 40 2 1211 2 42 2 1214 2 1213 4 1215 2 424 50 426 2 48 4 1219 48 818 38 819 10 1224 2 820 2 1225 20 428 2 52 24 430 2 55 2 1229 10 58 14 825 2 824 44 60 3 828 2 65 2 68 2 831 2 833 2 440 30 1237 10 1239 66 1240 48 1242 2 837 4 1243 2 840 2 1246 24 841 2 1250 2 450 2 82 2 452 24 1257 2 453 10 1259 2 456 2 1260 2 457 2 1265 2 854 2 855 343 1266 2 856 4 95 2 461 30 1270 170 462 2 1275 2 864 2 466 24 1277 2 1278 2 102 2 871 4 470 48 1285 3 876 10 877 2 1289 24 115 4 1290 24 882 22 475 2 887 2 888 28 890 2 889 4 120 2 893 12 478 14 1298 24 1299 2 1300 6 896 2 125 1 126 16 131 24 490 12 492 2 497 2 1311 10 501 4 905 2 1317 3 134 2 1318 1 1319 2 1320 2 135 4 505 2 136 2 137 2 1326 2 1329 14 1328 4 1327 2 911 24 512 2 142 2 517 2 915 24 914 10 1333 2 144 3 519 4 917 2 1334 2 146 2 924 2 521 2 1336 2 927 2 928 2 151 10 525 2 1337 4 1339 2 528 4 529 14 1340 1 933 380 1341 2 1342 2 158 2 1345 4 1346 4 160 14 161 10 1349 2 938 2 1350 6 163 6 539 2 164 20 944 2 1354 2 948 10 166 2 544 2 951 24 1357 2 168 2 1359 2 548 2 953 2 169 2 171 2 955 6 956 4 172 10 957 2 1363 2 173 2 550 2 553 14 554 2 962 2 175 26 177 4 178 2 556 24 1371 4 179 24 558 2 1372 2 1373 2 1376 2 1377 8 978 22 564 2 1378 2 979 2 1379 2 982 2 981 2 1381 2 188 2 189 2 1383 52 987 5 988 300 196 4 990 2 992 2 1391 2 996 2 997 24 200 2 1393 24 575 10 576 28 1395 14 204 2 205 2 1399 2 581 28 208 5 1002 10 210 2 1003 2 211 4 584 2 1401 14 1402 8 590 2 1013 4 1407 48 1410 2 214 2 1411 10 1014 3 593 2 1015 2 216 16 221 4 597 2 599 3 601 26 1418 2 1023 24 227 2 1419 24 1028 2 603 2 1423 14 1424 2 1033 2 606 2 1035 2 229 2 1036 24 1435 1 1436 4 1037 10 608 2 1039 48 1041 2 616 28 1439 2 619 16 240 24 241 2 1446 20 621 6 623 2 1449 24 1452 4 625 2 1045 2 247 2 249 12 1455 14 631 2 632 12 252 24 1461 4 1051 38 634 2 1464 2 1465 4 1466 2 1055 2 257 38 636 24 258 93 1471 14 1059 2 1060 2 1472 2 1065 20 1473 2 1066 14 1068 4 1070 14 265 28 648 2 1481 4 1073 50 271 8 1077 2 657 2 1490 2 1491 2 1081 2 274 2 275 24 277 2 1085 4 278 2 662 2 1087 24 279 2 281 2 1089 2 1091 2 289 2 291 2 1095 28 673 8 1096 2 1502 2 677 2 1099 4 680 2 1503 69 1505 4 295 3 1506 10 1101 2 296 2 684 24 1102 10 1510 2 300 2 1104 2 302 2 1512 2 303 1 1109 2 691 1 306 2 694 8 696 2 1117 26 699 2 1118 24 1119 2 1519 2 702 2 703 2 706 3 310 2 311 26 1521 2 1522 12 316 56 1523 2 320 8 1124 8 1528 24 1125 93 1126 4 720 2 1531 2 1532 14 722 2 1132 2 1134 1 1136 2 1135 10 732 48 733 16 734 2 1533 2 737 2 331 2 1536 2 1538 12 741 2 1540 2 745 28 339 24 749 2 344 2 751 2 1552 48 754 2 755 2 348 152 349 5 351 2 352 48 756 2 757 12 1154 2 759 5 359 2 1558 2 1561 4 1157 50 766 128 366 24 768 28 1564 22 367 2 1566 14 1571 2 376 2 1166 2 1576 14 377 2 1168 6 1169 2 774 90 
1102 2 512 2 1372 2 1051 2 517 2 1512 2 126 2 824 6 1012 2 490 2 1383 2 948 2 1066 2 988 2 393 2 241 2 933 2 741 2 575 4 173 2 1576 2 818 2 1101 2 1326 2 
1102 2 512 2 1372 2 1051 2 517 2 1512 2 126 2 824 6 1012 2 490 2 1383 2 948 2 1066 2 988 2 393 2 241 2 933 2 741 2 575 4 173 2 1576 2 818 2 1101 2 1326 2 
1102 2 512 2 1372 2 1051 2 517 2 1512 2 126 2 824 6 1012 2 490 2 1383 2 948 2 1066 2 988 2 393 2 241 2 933 2 741 2 575 4 173 2 1576 2 818 2 1101 2 1326 2 
320 2 4 3 632 2 1124 2 163 4 1008 2 465 2 1051 3 1126 2 1009 2 1377 2 978 3 517 2 164 4 802 2 615 4 1131 2 216 5 1383 2 281 2 1065 4 901 2 64 2 1208 2 988 4 1210 2 929 2 1564 3 1446 4 1190 2 933 10 265 2 1481 2 818 3 893 4 1325 2 211 2 1101 2 774 6 1225 4 
320 2 4 2 1124 2 465 2 1377 2 1126 2 517 2 978 2 1131 2 615 4 1383 2 281 2 64 2 988 4 929 2 1190 2 1446 4 933 10 404 2 1346 2 893 4 1101 2 211 2 632 2 163 4 1350 2 1008 2 1051 2 1009 2 164 4 802 2 216 4 1065 4 901 2 1208 2 1210 2 1564 2 265 2 1481 2 818 2 774 6 1325 2 1225 4 
320 2 4 2 1124 2 465 2 1377 2 1126 2 517 2 978 2 1131 2 615 4 1383 2 281 2 64 2 988 4 929 2 1190 2 1446 4 933 10 404 2 1346 2 893 4 1101 2 211 2 632 2 163 4 1350 2 1008 2 1051 2 1009 2 164 4 802 2 216 4 1065 4 901 2 1208 2 1210 2 1564 2 265 2 1481 2 818 2 774 6 1325 2 1225 4 
320 2 4 2 1124 2 465 2 1377 2 1126 2 517 2 978 2 1131 2 615 4 1383 2 281 2 64 2 988 4 929 2 1190 2 1446 4 933 10 404 2 1346 2 893 4 1101 2 211 2 632 2 163 4 1350 2 1008 2 1051 2 1009 2 164 4 802 2 216 4 1065 4 901 2 1208 2 1210 2 1564 2 265 2 1481 2 818 2 774 6 1325 2 1225 4 
320 2 4 2 1124 2 465 2 1377 2 1126 2 517 2 978 2 1131 2 615 4 1383 2 281 2 64 2 988 4 929 2 1190 2 1446 4 933 10 404 4 1346 4 893 4 1101 2 211 2 632 2 163 4 1350 4 1008 2 1051 2 1009 2 164 4 802 2 216 4 1065 4 901 2 1208 2 1210 2 1564 2 265 2 1481 2 818 2 774 6 1325 2 1225 4 
251 2 606 2 235 2 587 2 111 2 1323 2 
686 2 613 2 587 2 131 2 783 2 870 2 775 2 
1509 2 321 2 1248 2 1151 1 974 2 658 1 256 2 1107 2 900 2 355 2 1515 2 731 2 363 2 988 8 289 2 1142 2 1565 1 811 2 549 2 933 10 1321 2 1422 1 477 2 1544 1 1269 2 1196 2 
320 6 1124 6 163 4 1350 5 1377 6 1126 6 1436 2 183 2 216 16 1559 2 1335 2 1208 2 988 2 767 2 643 2 456 2 620 2 667 4 501 2 1190 6 933 2 1453 2 376 2 1481 6 404 2 792 2 1168 4 1346 2 138 2 893 12 211 6 860 2 
1495 2 1461 2 668 2 1444 2 1251 2 933 1 1069 2 906 6 591 2 164 2 626 4 1498 1 829 2 1307 2 1133 2 1065 2 988 1 1225 2 
1495 2 1461 4 668 4 1444 2 1251 4 1069 2 906 6 591 2 164 2 626 4 829 2 1307 2 1133 2 1065 2 1225 2 
1495 6 1461 8 668 8 1444 2 1251 8 933 1 1069 8 906 10 591 2 164 2 626 4 1498 1 829 2 1307 2 1133 2 1065 2 988 1 1225 2 
1461 2 668 2 1444 2 1251 2 906 2 591 2 164 2 626 2 829 2 1307 2 1133 2 1065 2 1225 2 
969 2 179 4 777 4 1077 2 654 4 275 4 1180 8 1087 4 109 2 282 2 988 70 876 4 787 10 199 2 997 4 1289 4 395 4 1393 4 396 5 576 6 675 2 1096 2 207 2 17 4 18 16 581 6 208 4 1503 16 1002 4 294 2 892 8 1298 4 684 4 299 4 1302 8 125 2 689 2 1406 32 589 8 1407 10 487 4 806 2 1114 4 307 16 37 2 1118 4 1311 4 601 6 1023 4 424 24 1419 4 1219 6 1029 10 1320 2 316 30 819 4 910 1 52 6 1327 2 911 4 1036 16 1528 4 1125 28 1435 2 1037 4 915 4 918 2 1039 10 1135 4 1134 4 1042 2 619 8 151 4 1237 4 440 14 240 4 933 78 1240 10 1449 8 1344 4 339 8 161 4 1246 4 1550 2 162 4 252 4 346 4 1552 11 79 2 348 44 1352 10 352 10 756 2 759 4 258 26 452 4 453 4 88 2 1561 2 951 4 1157 8 766 36 366 4 172 4 855 102 269 2 1073 24 97 2 1270 24 556 4 
0 2 1327 2 52 2 969 2 1077 1 1528 4 1125 8 719 2 1435 1 915 4 1038 2 1381 2 1039 2 109 2 616 2 1134 3 1135 4 987 2 988 26 619 6 199 2 240 2 396 1 933 28 576 2 1240 6 1241 2 675 2 1096 1 17 2 581 2 208 2 1503 15 1298 4 1300 2 252 2 125 2 1552 2 348 14 349 2 257 10 352 6 756 2 1407 6 258 8 759 2 452 2 806 2 1561 3 951 4 37 2 766 14 366 4 601 5 1159 2 1419 4 1219 2 1318 2 855 36 1320 2 316 8 97 2 1270 8 
0 2 179 6 777 6 1077 2 466 6 1381 2 275 6 1087 6 109 2 282 2 987 11 988 134 1494 4 876 4 474 6 1289 6 199 2 997 6 572 24 1290 24 395 6 201 24 1393 6 396 6 576 14 675 2 1096 2 17 10 581 14 1503 28 208 4 1002 4 294 2 1298 6 1507 4 1005 8 684 6 1300 7 895 2 125 4 1407 16 1306 90 34 4 806 2 415 4 37 8 698 18 1118 6 1311 4 1520 4 601 8 422 10 1023 6 424 92 1419 6 1219 36 1318 2 1320 8 316 34 819 4 53 12 52 10 1327 8 911 6 1036 42 1528 6 1125 58 1435 4 1037 4 721 2 915 6 1038 2 1532 2 519 2 1039 18 728 4 1134 6 1135 8 616 4 524 10 150 4 619 15 151 4 1237 4 440 12 334 26 1443 26 240 10 933 150 1241 2 1240 16 1449 24 155 24 157 4 339 42 161 4 1246 6 252 10 345 4 1551 10 1552 16 348 112 349 4 636 24 352 16 257 22 756 8 258 58 759 4 452 10 453 4 1560 90 1561 4 1064 8 951 6 1157 50 766 88 366 6 1159 2 172 4 855 248 647 2 649 8 1073 84 97 2 1270 124 556 6 
52 2 1327 2 969 2 1276 2 970 2 230 2 1078 2 865 2 1528 2 719 2 1125 6 1488 2 1038 2 915 2 826 2 1333 4 236 2 1039 2 105 2 1086 2 109 2 1134 2 192 2 524 2 988 44 787 2 199 2 240 2 572 2 932 2 201 2 933 46 576 2 1240 4 155 2 675 2 1500 2 17 2 888 6 1098 2 1001 2 581 2 1503 36 1298 2 250 2 630 2 1550 2 252 2 687 2 125 2 897 2 1552 2 1551 2 535 2 536 2 348 20 1352 2 352 4 756 2 1407 4 258 6 452 2 1061 2 806 2 36 2 308 2 951 2 223 2 364 2 365 2 37 2 766 20 366 2 1474 2 1520 2 422 2 601 6 771 4 1419 2 1219 2 855 48 1029 2 1320 2 649 2 269 2 715 4 1223 2 1431 4 97 2 821 2 1270 6 
1511 2 
552 1 1267 1 313 1 961 1 1314 1 1195 1 
552 1 1267 1 313 1 961 1 1314 1 1195 1 
552 1 1267 1 313 1 961 1 1314 1 1195 1 
552 1 1267 1 313 1 961 1 1314 1 1195 1 
552 1 1267 1 313 1 961 1 1314 1 1195 1 
552 1 1267 1 313 1 961 1 1314 1 1195 1 
552 1 1267 1 313 1 961 1 1314 1 1195 1 
552 1 1267 1 313 1 961 1 1314 1 1195 1 
552 1 1267 1 313 1 961 1 1314 1 1195 1 
552 1 1267 1 313 1 961 1 1314 1 1195 1 
552 1 1267 1 313 1 961 1 1314 1 1195 1 
552 1 1267 1 313 1 961 1 1314 1 1195 1 
552 1 1267 1 313 1 961 1 1314 1 1195 1 
552 1 1267 1 313 1 961 1 1314 1 1195 1 
552 1 1267 1 313 1 961 1 1314 1 1195 1 
552 1 1267 1 313 1 961 1 1314 1 1195 1 
552 1 1267 1 313 1 961 1 1314 1 1195 1 
552 1 1267 1 313 1 961 1 1314 1 1195 1 
552 1 1267 1 313 1 961 1 1314 1 1195 1 
552 1 1267 1 313 1 961 1 1314 1 1195 1 
552 1 1267 1 313 1 961 1 1314 1 1195 1 
552 1 1267 1 313 1 961 1 1314 1 1195 1 
552 1 1267 1 313 1 961 1 1314 1 1195 1 
552 1 1267 1 313 1 961 1 1314 1 1195 1 
552 1 1267 1 313 1 961 1 1314 1 1195 1 
552 1 1267 1 313 1 961 1 1314 1 1195 1 
552 1 1267 1 313 1 961 1 1314 1 1195 1 
552 1 1267 1 313 1 961 1 1314 1 1195 1 
552 1 1267 1 313 1 961 1 1314 1 1195 1 
552 1 1267 1 313 1 961 1 1314 1 1195 1 
552 1 1267 1 313 1 961 1 1314 1 1195 1 
552 1 1267 1 313 1 961 1 1314 1 1195 1 
552 1 1267 1 313 1 961 1 1314 1 1195 1 
552 1 1267 1 313 1 961 1 1314 1 1195 1 
552 1 1267 1 313 1 961 1 1314 1 1195 1 
552 1 1267 1 313 1 961 1 1314 1 1195 1 
552 1 1267 1 313 1 961 1 1314 1 1195 1 
552 1 1267 1 313 1 961 1 1314 1 1195 1 
552 1 1267 1 313 1 961 1 1314 1 1195 1 
552 1 1267 1 313 1 961 1 1314 1 1195 1 
552 1 1267 1 313 1 961 1 1314 1 1195 1 
552 1 1267 1 313 1 961 1 1314 1 1195 1 
552 1 1267 1 313 1 961 1 1314 1 1195 1 
552 1 1267 1 313 1 961 1 1314 1 1195 1 

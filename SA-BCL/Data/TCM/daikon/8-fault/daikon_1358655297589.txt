#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V ERROR java.lang.NullPointerException 
utilMDE.TestUtilMDE:testMathMDE()V ERROR java.lang.Error 
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.ArrayIndexOutOfBoundsException 262 414 
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 446 521 164 293 206 18 407 477 147 339 279 47 297 317 94 424 552 113 450 396 57 158 226 223 400 499 63 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V ERROR java.lang.ArrayIndexOutOfBoundsException 262 414 
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V ERROR java.lang.ArrayIndexOutOfBoundsException 262 414 
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.ArrayIndexOutOfBoundsException 262 414 
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.ArrayIndexOutOfBoundsException 262 414 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.ArrayIndexOutOfBoundsException 262 414 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.ArrayIndexOutOfBoundsException 262 414 53 126 28 
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V FAILED junit.framework.AssertionFailedError 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 288 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 288 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 288 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 288 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.Quant:memberOf(S[S)Z
daikon.Quant:eltsGteIndex([I)Z
jtb.JavaParser:jj_ntk()I
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long; | RETURN | 14632 | return null
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.Invariant:prob_and(DD)D
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
jtb.JavaCharStream:getEndLine()I
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaCharStream:BeginToken()C
daikon.Quant:eltwiseGTE([I)Z | CONDITION | 177097 | if (x) -> if (!x)
daikon.test.InvariantFormatTester:execute()Z
jtb.JavaParser:jj_3R_69()Z
daikon.Quant:union([I[I)[I
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.Quant:eq(DD)Z
jtb.JavaParser:jj_3_12()Z
daikon.Quant:eltsGT([II)Z
daikon.Quant:eltwiseGT([I)Z
daikon.ProglangType:isIntegral()Z
daikon.Quant:pairwiseGT([I[I)Z
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:repr()Ljava.lang.String;
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
utilMDE.FuzzyFloat:gt(DD)Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
utilMDE.Assert:assertTrue(Z)V
jtb.JavaParser:jj_3_25()Z
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
jtb.JavaParser:jj_3_13()Z
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.ProglangType:dimensions()I
utilMDE.ArraysMDE:noDuplicates([I)Z
jtb.JavaParser:jj_2_35(I)Z
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
jtb.JavaParser:jj_3R_49()Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
utilMDE.MathMDE:pow(II)I
daikon.inv.Invariants:Invariants()V
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
jtb.JavaParser:jj_3R_56()Z
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.JavaParser:jj_3R_135()Z
jtb.JavaParser:jj_3R_116()Z
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.ModBitTracker:num_sets()I
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3R_125()Z
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.Quant:subsetOf([S[S)Z
daikon.Quant:lt(II)Z
daikon.Quant:subsetOf([I[I)Z
jtb.JavaParser:jj_3_27()Z
jtb.JavaParser:jj_3R_62()Z
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
daikon.Quant:noDups([I)Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
utilMDE.OrderedPairIterator:setnext1()V
daikon.Quant:eq(II)Z
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
utilMDE.FuzzyFloat:ne(DD)Z
utilMDE.FuzzyFloat:set_rel_diff(D)V
utilMDE.FuzzyFloat:indexOf([DD)I
jtb.JavaParser:jj_3R_148()Z
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
utilMDE.FuzzyFloat:lte(DD)Z
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.ProglangType:isScalar()Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
jtb.JavaParser:jj_2_14(I)Z
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
daikon.Quant:memberOf(I[I)Z
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
utilMDE.ArraysMDE:min_max([I)[I
daikon.ModBitTracker:split(I)I
utilMDE.ArraysMDE:sum([D)D
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
jtb.JavaParser:jj_3R_118()Z
utilMDE.Intern:internSubsequence([III)[I
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
utilMDE.Intern:numIntArrays()I
daikon.Quant:subsetOf([D[F)Z
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
utilMDE.WeakIdentityHashMap:indexFor(II)I
jtb.syntaxtree.NodeToken:trimSpecials()V
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
jtb.JavaParser:jj_3_5()Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:noDuplicates([D)Z
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.Quant:lexNotEqual([I[I)Z
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.ModBitTracker:ModBitTracker(I)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
jtb.JavaParser:jj_3R_88()Z
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.Quant:lexGTE([I[I)Z
daikon.Quant:eq(FF)Z
daikon.Quant:sameLength([I[I)Z
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.Quant:ne(II)Z
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:pairwiseLTE([I[I)Z
daikon.Quant:memberOf(D[F)Z
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
jtb.JavaParser:jj_3R_119()Z
jtb.JavaParser:jj_3R_76()Z
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
jtb.JavaParser:jj_scan_token(I)Z
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
jtb.JavaParser:jj_3R_161()Z
jtb.JavaParser:jj_2_5(I)Z
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.Quant:subsetOf([F[D)Z
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
utilMDE.OrderedPairIterator:hasNext()Z
jtb.JavaParser:jj_3_15()Z
daikon.Quant:gt(II)Z
jtb.JavaParser:jj_3R_81()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.Quant:subsetOf([D[D)Z
utilMDE.MathMDE:missing_numbers([I)[I
jtb.JavaParser:jj_3R_114()Z
daikon.Quant:memberOf(J[J)Z
jtb.JavaParserTokenManager:MoreLexicalActions()V
utilMDE.MathMDE:modulus([I)[I
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.ArraysMDE:subarray([III)[I
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
utilMDE.ArraysMDE:fn_compose([I[I)[I
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
jtb.JavaParser:jj_2_15(I)Z
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_22()Z
jtb.JavaParser:jj_3_21()Z
daikon.ModBitTracker:num_samples()I
jtb.JavaParser:jj_3R_133()Z
daikon.ModBitTracker:num_vars()I
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
jtb.JavaParser:jj_3R_124()Z
daikon.ValueTuple:isMissingNonsensical(I)Z
jtb.JavaParser:jj_3R_58()Z
utilMDE.MathMDE:sign(I)I
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.MathMDE:bitwiseComplement(I)I
jtb.JavaParser:jj_3R_68()Z
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
utilMDE.ArraysMDE:subarray([JII)[J
jtb.JavaParser:jj_2_4(I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
jtb.JavaCharStream:backup(I)V
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.JavaParser:jj_2_21(I)Z
daikon.test.TestQuant:removeAdjacentDups([I)[I
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
jtb.JavaParser:jj_3R_77()Z
jtb.JavaParser:jj_2_36(I)Z
utilMDE.Intern:intern([J)[J
daikon.Quant:gte(II)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.Quant:eltwiseLTE([I)Z
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
jtb.JavaParser:jj_3_14()Z
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.inv.Invariant:prob_or(DD)D
jtb.JavaParser:jj_3_30()Z
daikon.inv.ValueSet:ValueSet(I)V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
utilMDE.ArraysMDE:min([I)I
jtb.JavaParser:jj_3_4()Z
daikon.PptSlice0:arity()I
daikon.Quant:eltwiseNotEqual([I)Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaCharStream:FillBuff()V
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.FuzzyFloat:lt(DD)Z
daikon.inv.OutputFormat:isJavaFamily()Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.Quant:pairwiseNotEqual([I[I)Z
jtb.JavaParser:jj_3R_163()Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.ValueTuple:isMissingFlow(I)Z
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V | CONSTANT | 11643 | 0 -> -1
utilMDE.WeakHasherMap:size()I
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:fn_is_total([I)Z
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
utilMDE.MathMDE:gcd([I)I
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
jtb.JavaParser:jj_3R_67()Z
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
utilMDE.ArraysMDE:sorted([I)Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
jtb.JavaParser:jj_2_16(I)Z
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
jtb.JavaParser:jj_3R_54()Z
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.Token:newToken(I)Ljtb.Token;
jtb.syntaxtree.NodeList:NodeList()V
daikon.Quant:eltsLTE([II)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V | ASSIGN | 1551 | = null
jtb.JavaParser:jj_3_28()Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
utilMDE.ArraysMDE:noDuplicates([J)Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
daikon.inv.Invariant:prob_and(DDD)D
jtb.JavaCharStream:readChar()C
daikon.Quant:setDiff([I[I)[I
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.SimpleLog:SimpleLog(Z)V
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarComparabilityImplicit:alwaysComparable()Z
jtb.JavaParserTokenManager:jjStopAtPos(II)I
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
utilMDE.MathMDE:gcd(II)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_121()Z
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.Quant:isReverse([I[I)Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
jtb.JavaParser:jj_3_35()Z
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
jtb.JavaParser:jj_2_3(I)Z
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
utilMDE.ArraysMDE:sum([I)I
daikon.Quant:memberOf(F[F)Z
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
jtb.JavaParser:jj_3_10()Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
jtb.JavaParser:jj_3R_52()Z
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
utilMDE.Intern:internSubsequence([JII)[J
daikon.Quant:lte(II)Z
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
utilMDE.ArraysMDE:isSubarray([I[II)Z
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.ValueTuple:isMissing(I)Z
utilMDE.Intern.SequenceAndIndices:hashCode()I
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:lexLT([I[I)Z
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.MathMDE:gcd_differences([I)I
jtb.JavaCharStream:getBeginLine()I
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I | RETURN | 12820 | return null
daikon.Quant:intersection([I[I)[I
utilMDE.FuzzyFloat:FuzzyFloat()V
utilMDE.MathMDE:negate(I)I
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
jtb.JavaParser:jj_3R_115()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
utilMDE.ArraysMDE:isSubset([D[D)Z
jtb.JavaParser:jj_3R_53()Z
jtb.JavaCharStream:ReadByte()C
daikon.Quant:eltsEqual([II)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:eltwiseEqual([I)Z
daikon.Quant:eltsGtIndex([I)Z
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_117()Z
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.JavaParser:jj_3_36()Z
jtb.JavaParser:jj_3_16()Z
daikon.Quant:lexEqual([I[I)Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_96()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.Quant:pairwiseLT([I[I)Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.WeakHasherMap:processQueue()V
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
utilMDE.ArraysMDE:concat([I[I)[I
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_120()Z
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.Quant:pairwiseSquare([I[I)Z
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
jtb.JavaParser:jj_3R_85()Z
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
jtb.JavaCharStream:getBeginColumn()I
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
jtb.JavaParser:jj_3R_162()Z
jtb.JavaParser:jj_3R_80()Z
utilMDE.ArraysMDE:sum([[D)D
jtb.JavaParser:jj_3R_122()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_89()Z
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.ProglangType:baseIsIntegral()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.Quant:eltsLteIndex([I)Z
utilMDE.SimpleLog.LongVal:LongVal(J)V
utilMDE.ArraysMDE:indexOf([II)I
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
daikon.Quant:eltsNotEqual([II)Z
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
jtb.JavaCharStream:getEndColumn()I
daikon.Quant:subsetOf([F[F)Z
utilMDE.MathMDE:pow_fast(II)I
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
jtb.JavaParser:jj_3R_48()Z
daikon.Quant:pairwiseDivides([I[I)Z
utilMDE.MathMDE:gcd(JJ)J
jtb.JavaParser:jj_3R_126()Z
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:hashCode()I
daikon.Quant:eq(JJ)Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
daikon.Quant:slice([III)[I
jtb.syntaxtree.NodeOptional:NodeOptional()V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression; | CONDITION | 83870 | if (x) -> if (!x)
jtb.JavaParser:jj_3R_97()Z
utilMDE.ArraysMDE:sum([[I)I
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
jtb.JavaParser:jj_3R_47()Z
utilMDE.Intern:intern([I)[I
utilMDE.FuzzyFloat:eq(DD)Z
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
jtb.JavaParser:jj_2_13(I)Z
jtb.JavaParser:jj_3R_86()Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
jtb.JavaParser:jj_2_25(I)Z
jtb.JavaParser:jj_3R_50()Z
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.Quant:subsetOf([B[I)Z
jtb.JavaParser:jj_2_12(I)Z
daikon.Quant:lexGT([I[I)Z
utilMDE.FuzzyFloat:gte(DD)Z
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.Quant:memberOf(F[D)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
utilMDE.ArraysMDE:max([I)I
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.Quant:eltsGTE([II)Z
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.Quant:pairwiseEqual([I[I)Z
daikon.Ppt:Ppt()V
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_57()Z
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:subsetOf([J[J)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
jtb.JavaParser:jj_3_3()Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
utilMDE.LimitedSizeIntSet:add(I)V
jtb.JavaParser:jj_3R_123()Z
jtb.JavaParser:jj_3R_134()Z
daikon.inv.Invariant:prob_is_ge(DD)D
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:jj_3R_51()Z
daikon.Quant:eltwiseLT([I)Z
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
utilMDE.MathMDE:mod_positive(II)I
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.ArraysMDE:element_range([I)I
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eltsLT([II)Z
daikon.Quant:lexLTE([I[I)Z
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3_29()Z
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.Quant:eltsNotEqualIndex([I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.Quant:setEqual([I[I)Z
jtb.JavaParser:jj_3R_61()Z
jtb.JavaParser:jj_2_10(I)Z
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.Quant:concat([I[I)[I
jtb.JavaParser:jj_3R_75()Z
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.Quant:eltsLtIndex([I)Z
jtb.JavaParser:jj_2_1(I)Z
jtb.JavaParser:jj_3_1()Z
jtb.JavaParser:jj_3R_60()Z
jtb.JavaParser:jj_3R_87()Z
daikon.Quant:pairwiseGTE([I[I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.LimitedSizeIntSet:size()I
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.Options.OptionInfo:argument_required()Z
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.ValueTuple:size()I
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:fn_identity(I)[I
jtb.JavaParser:jj_3R_63()Z
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.OrderedPairIterator:setnext2()V
jtb.JavaParser:jj_3R_55()Z
jtb.JavaCharStream:GetImage()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.Quant:eltsEqualIndex([I)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
51 2 470 2 490 2 167 2 260 2 548 4 108 2 33 2 234 2 
50 2 208 2 2 6 565 6 146 2 97 6 328 2 245 2 255 2 487 2 172 2 
51 2 1 2 390 2 260 2 55 4 370 2 394 4 149 6 525 2 334 6 564 2 385 6 130 6 
215 2 260 6 391 10 329 2 264 8 222 10 187 4 224 10 333 2 124 2 507 4 336 8 229 6 337 16 445 8 48 13 51 6 343 4 482 2 348 2 520 16 277 10 452 6 415 4 559 8 528 16 454 2 457 29 281 10 494 26 
401 6 200 4 
437 2 
391 2 263 2 79 2 290 2 222 2 224 2 546 2 507 2 472 2 402 2 337 2 127 2 48 2 520 2 277 2 452 2 559 2 488 2 528 2 64 2 457 6 281 4 494 4 
345 6 96 4 432 2 536 2 391 4 520 6 277 4 415 2 528 6 222 4 224 4 14 2 457 13 337 6 494 10 48 4 129 4 
256 2 74 2 176 10 285 4 118 2 431 2 466 2 179 2 468 4 502 6 505 2 183 2 267 2 188 2 296 4 440 2 441 58 231 4 366 2 234 2 341 4 240 6 413 4 350 4 418 2 308 2 309 10 204 2 353 2 379 2 66 8 211 2 357 2 568 2 214 2 
495 2 302 2 361 2 78 2 556 2 278 2 437 2 422 2 384 2 512 2 
143 2 362 2 291 2 503 2 505 2 232 2 16 2 234 2 515 2 448 2 303 2 241 2 526 4 376 2 380 2 106 2 316 2 322 2 35 2 36 2 117 2 260 4 118 4 469 2 120 2 265 2 397 2 545 2 333 2 189 2 474 2 271 2 480 2 51 4 411 2 555 4 61 2 562 2 139 2 66 2 358 2 423 4 70 2 426 2 
535 4 260 4 391 6 121 2 222 6 224 6 292 8 14 4 337 12 193 2 48 8 129 4 51 4 345 6 96 6 520 12 277 6 163 2 559 4 528 12 205 6 457 19 494 18 
66 2 240 2 440 2 
72 2 49 2 344 2 465 2 83 2 102 10 453 22 103 2 104 2 107 2 68 2 253 2 70 2 460 2 
75 2 286 2 145 2 5 4 438 4 219 2 295 2 510 2 15 2 161 2 239 2 369 2 243 2 23 2 527 1 247 2 311 1 110 2 33 2 461 2 37 2 260 10 262 2 42 2 471 2 46 5 476 4 478 2 51 10 484 2 414 2 419 2 359 2 
237 2 
260 2 493 2 
260 4 298 2 17 2 
0 36 283 2 287 16 289 2 3 2 8 24 9 2 11 2 293 2 12 2 13 2 297 2 299 146 18 2 20 48 19 2 301 2 21 48 304 20 22 4 305 42 307 22 24 2 25 14 26 48 312 8 29 10 317 2 319 20 320 2 318 2 321 2 32 16 34 14 325 6 327 4 39 6 45 12 47 2 339 2 340 2 342 48 52 2 57 2 58 8 62 2 63 2 355 2 67 4 356 48 73 2 76 4 77 4 363 4 81 4 82 8 364 146 86 2 87 2 88 146 367 16 92 2 93 2 94 2 371 2 372 2 99 2 100 2 373 2 378 8 105 6 381 2 382 4 386 6 112 4 387 2 113 2 115 4 392 2 395 8 396 2 399 2 123 8 400 2 125 14 403 4 406 48 409 4 408 2 407 2 410 2 131 2 132 2 412 8 133 4 134 8 135 2 417 2 138 2 420 10 140 36 424 2 427 2 429 48 147 2 433 4 148 2 436 2 153 36 155 2 442 2 158 2 444 26 446 2 160 8 159 8 447 6 162 190 449 2 450 2 451 4 165 4 164 2 166 2 455 4 170 2 456 2 458 2 459 4 173 2 175 2 463 2 180 2 182 2 185 4 186 2 190 4 477 2 192 2 194 2 195 2 196 2 481 4 198 4 485 2 201 2 203 4 489 48 206 2 492 4 491 8 210 2 212 6 496 4 498 48 216 2 217 28 499 2 218 48 504 2 220 2 223 2 225 4 227 2 226 2 228 2 511 2 513 2 235 8 517 14 238 2 518 2 519 2 521 2 242 2 523 4 524 2 248 2 249 2 250 4 251 4 530 2 252 2 531 2 532 2 533 8 258 4 538 4 266 4 539 4 540 2 541 2 543 24 547 2 269 2 268 2 270 22 549 2 273 2 275 4 551 48 553 48 554 2 552 2 557 14 560 4 279 2 561 20 563 2 280 4 566 4 567 22 282 48 
257 2 98 2 152 2 352 1 
516 2 98 2 
529 2 389 2 66 2 393 2 
221 2 529 2 389 2 66 2 393 2 30 2 
114 2 300 2 187 2 389 2 66 2 98 2 
95 2 61 2 
187 2 389 2 66 2 443 2 
40 2 330 2 
473 2 90 2 
508 2 230 2 
174 2 284 2 
174 2 338 2 90 2 
174 2 509 2 90 2 
174 2 464 2 90 2 
174 2 150 2 90 2 
389 2 500 6 191 2 54 2 276 6 137 2 66 2 213 2 
154 2 31 2 
221 2 114 2 187 2 389 2 66 2 98 2 351 2 
114 2 522 2 98 2 
114 2 91 2 98 2 
154 2 314 2 152 2 
114 2 98 2 
154 2 365 2 
98 2 425 2 
154 2 475 2 152 2 
230 2 152 2 388 2 
174 2 156 2 152 2 
43 2 330 2 152 2 
542 2 90 2 152 2 
154 2 374 2 
244 2 98 2 
497 2 230 2 
174 2 233 2 
330 2 41 2 
27 2 
154 2 570 2 
7 2 90 2 
330 2 375 2 
174 2 421 2 
230 2 537 2 
154 2 475 2 383 2 152 2 
154 2 475 2 383 2 141 2 152 2 
154 2 434 2 152 2 
398 2 154 2 152 2 
326 2 377 2 479 2 550 2 
430 2 178 2 467 2 38 4 483 4 181 2 6 2 151 2 453 6 439 2 168 2 157 2 128 2 272 2 71 2 89 2 323 2 462 2 
354 2 152 2 
171 2 
75 2 286 2 145 2 5 4 438 4 219 2 295 2 510 2 161 2 239 2 369 2 243 2 23 2 247 2 315 2 110 2 33 2 461 2 37 2 260 10 262 2 42 2 471 2 46 4 476 4 478 2 51 10 484 2 414 2 419 2 359 2 
75 2 286 2 145 2 5 4 438 4 219 2 295 2 510 2 161 2 239 2 369 2 243 2 23 2 527 2 247 2 311 2 315 2 110 2 33 2 461 2 37 2 260 10 262 2 42 2 471 2 46 6 476 4 478 2 51 10 484 2 414 2 419 2 359 2 
75 2 286 2 145 2 5 4 438 4 219 2 295 2 510 2 161 2 239 2 369 2 243 2 23 2 247 2 315 2 110 2 33 2 461 2 37 2 260 10 262 2 42 2 471 2 46 4 476 4 478 2 51 10 484 2 414 2 419 2 359 2 
75 2 286 2 145 2 5 4 438 4 219 2 295 2 510 2 161 2 239 2 369 2 243 2 23 2 527 2 247 2 311 2 315 2 110 2 33 2 461 2 37 2 260 10 262 2 42 2 471 2 46 6 476 4 478 2 51 10 484 2 414 2 419 2 359 2 
75 2 286 2 145 2 5 4 438 4 219 2 295 2 510 2 161 2 239 2 369 2 243 2 23 2 527 1 247 2 311 1 315 2 110 2 33 2 461 2 37 2 260 10 262 2 42 2 471 2 46 5 476 4 478 2 51 10 484 2 414 2 419 2 359 2 
144 2 75 2 286 2 145 2 5 4 438 4 219 2 10 2 294 2 295 2 510 2 161 2 239 2 369 2 243 2 23 2 247 2 28 2 169 2 313 2 110 2 33 2 461 2 324 2 37 2 260 14 262 2 42 2 122 2 471 2 46 4 476 4 478 2 126 2 51 10 53 2 347 2 484 2 414 2 419 2 207 2 359 2 
116 2 416 2 184 2 544 2 310 2 254 2 534 2 
44 2 209 2 435 2 405 2 101 2 534 2 
142 1 74 1 259 2 431 1 260 10 145 2 261 2 119 2 84 2 331 2 335 2 404 2 368 2 236 1 274 2 514 2 51 8 197 2 56 2 199 2 558 2 486 2 202 2 65 1 569 2 111 2 
501 2 
346 3 349 2 306 2 4 2 59 2 80 2 60 2 246 2 506 2 85 2 69 2 109 2 428 2 
51 1 177 2 260 1 346 6 349 2 306 2 4 2 59 2 80 2 60 2 246 2 136 2 332 1 506 2 85 2 69 2 109 2 428 4 
177 2 346 6 349 2 306 4 4 2 59 4 80 2 60 2 246 2 136 2 506 4 85 2 69 2 109 2 428 4 
51 1 177 8 260 1 346 10 349 2 306 8 4 2 59 8 80 2 60 2 246 2 136 6 332 1 506 8 85 2 69 2 109 2 428 4 
288 2 
288 2 
288 2 
288 2 
360 2 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.ArrayIndexOutOfBoundsException 197 49 447 417 692 225 651 177 608 983 612 106 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V ERROR java.lang.NullPointerException (521,530) 821 292 (521,530) 101 47 
daikon.test.diff.DiffTester:testConditionalPptsTrue()V ERROR java.lang.NullPointerException (521,530) 821 292 (521,530) 101 47 
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V ERROR java.lang.NullPointerException (521,530) 821 292 (521,530) 101 47 
daikon.test.diff.DiffTester:testPpts1Empty()V ERROR java.lang.NullPointerException (521,530) 821 292 (521,530) 101 47 
daikon.test.diff.DiffTester:testPpts1Ppts1()V ERROR java.lang.NullPointerException (521,530) 821 292 (521,530) 101 47 
daikon.test.diff.DiffTester:testPpts1Ppts2()V ERROR java.lang.NullPointerException (521,530) 821 292 (521,530) 101 47 
daikon.test.diff.DiffTester:testPpts1Ppts3()V ERROR java.lang.NullPointerException (521,530) 821 292 (521,530) 101 47 
daikon.test.diff.DiffTester:testInvs1Empty()V ERROR java.lang.NullPointerException (521,530) 821 292 (521,530) 101 47 
daikon.test.diff.DiffTester:testInvs1Invs1()V ERROR java.lang.NullPointerException (521,530) 821 292 (521,530) 101 47 
daikon.test.diff.DiffTester:testInvs1Invs2()V ERROR java.lang.NullPointerException (521,530) 821 292 (521,530) 101 47 
daikon.test.diff.DiffTester:testInvs1Invs3()V ERROR java.lang.NullPointerException (521,530) 821 292 (521,530) 101 47 
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NullPointerException (521,530) 11 292 (521,530) 101 
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException (521,530) 627 292 (521,530) 101 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NullPointerException (521,530) 537 292 (521,530) 101 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 120 919 216 650 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.InvMap:InvMap()V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.Quant:pairwiseLTE([I[I)Z
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
daikon.Quantify.Term:ioa_name()Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V
daikon.VarInfoName:hashCode()I
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.OrderedPairIterator:setnext1()V
utilMDE.Options.OptionInfo:argument_required()Z
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.Quant:eltsEqual([II)Z
daikon.Quant:eltsGtIndex([I)Z
daikon.Quantify.Constant:name()Ljava.lang.String;
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.PptSlice2:arity()I
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.VarInfo:is_direct_non_slice_array()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:min_max([I)[I
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:subarray([III)[I
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.WeakHasherMap:processQueue()V
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.diff.Node:Node()V
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.EltOneOf:is_hashcode()Z
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
jtb.JavaCharStream:getBeginLine()I
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.inv.unary.sequence.EltLowerBound:format_simplify()Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.VarInfo:esc_name()Ljava.lang.String; | STATEMENT | 100148 | stmt -> ;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.Quant:union([I[I)[I
daikon.Quant:setDiff([I[I)[I
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.sequence.EltOneOf:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.FuzzyFloat:lt(DD)Z
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfo:old_var_names(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.Quantify.SimplifyQuantification:get_closer()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.Quant:subsetOf([I[I)Z
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.Quant:memberOf(S[S)Z
daikon.Quant:subsetOf([D[F)Z
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.VarInfo:get_upper_bound()Ldaikon.Quantify.Term;
daikon.inv.unary.sequence.EltNonZero:is_pointer()Z
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.VarInfo:simplify_name()Ljava.lang.String;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.inv.unary.sequence.EltOneOf:is_boolean()Z
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.VarInfo:simplify_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.ProglangType:isFloat()Z
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfo:esc_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.FuzzyFloat:gte(DD)Z
daikon.inv.Invariant:logOn()Z
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
jtb.JavaCharStream:ReadByte()C
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.ModBitTracker:split(I)I
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.PptName:isEnterPoint()Z
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.Quant:slice([III)[I
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.Quantify.FreeVar:simplify_name()Ljava.lang.String;
daikon.ProglangType:isPseudoArray()Z
daikon.Quant:eq(FF)Z
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
jtb.JavaCharStream:BeginToken()C
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I | CONDITION | 50578 | if (x) -> if (!x)
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.Quantify.Constant:Constant(I)V
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quantify.SimplifyQuantification:SimplifyQuantification(Ljava.util.EnumSet;[Ldaikon.VarInfo;)V
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.Quant:eltwiseNotEqual([I)Z
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.Quant:memberOf(F[D)Z
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
utilMDE.LimitedSizeIntSet:add(I)V
daikon.inv.unary.sequence.EltOneOf:sort_rep()V
jtb.JavaCharStream:getEndColumn()I
utilMDE.MathMDE:gcd(JJ)J
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.Quant:eltsLteIndex([I)Z
jtb.JavaCharStream:readChar()C
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.ProglangType:isArray()Z
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:pairwiseNotEqual([I[I)Z
utilMDE.MathMDE:gcd([I)I
utilMDE.Intern:intern([I)[I
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.Quant:pairwiseSquare([I[I)Z
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.inv.unary.scalar.Positive:enabled()Z
jtb.JavaCharStream:GetImage()Ljava.lang.String;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.Quant:pairwiseGT([I[I)Z
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.Quant:lt(II)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.Quant:pairwiseDivides([I[I)Z
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
utilMDE.OrderedPairIterator:setnext2()V
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.inv.unary.sequence.EltNonZero:format_daikon()Ljava.lang.String;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.VarInfo:isIOAArray()Z
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.ProglangType:dimensions()I
utilMDE.FuzzyFloat:ne(DD)Z
jtb.Token:newToken(I)Ljtb.Token;
daikon.inv.unary.sequence.EltNonZero:EltNonZero(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltOneOf:enabled()Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.Quant:eltsLT([II)Z
daikon.Quant:subsetOf([D[D)Z
daikon.Quant:memberOf(I[I)Z
daikon.test.FormatTestCase:getDiffString()Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.EltOneOf:subarray_rep()Ljava.lang.String;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.Quantify.Length:esc_name()Ljava.lang.String;
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
daikon.Quantify.ESCQuantification:ESCQuantification(Ljava.util.EnumSet;[Ldaikon.VarInfo;)V
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.inv.Invariant:prob_and(DD)D
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ModBitTracker:ModBitTracker(I)V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
utilMDE.Intern:numIntArrays()I
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
utilMDE.MathMDE:modulus([I)[I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.Quant:eltwiseLTE([I)Z
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
utilMDE.WeakHasherMap:size()I
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.Quantify.IOAQuantification:getClosingExp()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltsLtIndex([I)Z
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.Quant:subsetOf([F[D)Z
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
utilMDE.MathMDE:negate(I)I
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.ProglangType:baseIsFloat()Z
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:max([I)I
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.sequence.EltNonZero:enabled()Z
daikon.inv.unary.sequence.EltNonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
daikon.diff.Node:children()Ljava.util.Iterator;
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.Quant:lexLT([I[I)Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.Quant:pairwiseLT([I[I)Z
daikon.inv.unary.sequence.EltOneOf:format_esc()Ljava.lang.String;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.Quantify.ESCQuantification:get_quantification()Ljava.lang.String;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.VarInfo:isDerived()Z
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([I)Z
utilMDE.ArraysMDE:sum([I)I
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
utilMDE.MathMDE:missing_numbers([I)[I
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.inv.Invariant:getConfidence()D
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.Quant:eltsGTE([II)Z
daikon.Quant:eltwiseLT([I)Z
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.Quant:intersection([I[I)[I
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.Ppt:Ppt()V
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quantify.ESCQuantification:get_arr_vars_indexed(I)Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.Quant:eltsGteIndex([I)Z
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.ModBitTracker:num_samples()I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.inv.unary.sequence.EltOneOf:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.ProglangType:isIntegral()Z
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.Quant:eltwiseGTE([I)Z
daikon.Quantify.Length:simplify_name()Ljava.lang.String;
utilMDE.MathMDE:gcd_differences([I)I
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.inv.unary.sequence.EltNonZero:format_ioa()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.unary.sequence.EltOneOf:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.Quant:memberOf(D[F)Z
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:gt(DD)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Invariant:prob_or(DD)D
daikon.Quantify.QuantifyReturn:QuantifyReturn(Ldaikon.VarInfo;)V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
utilMDE.Intern:internSubsequence([III)[I
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaCharStream:getEndLine()I
daikon.ValueTuple:isMissingFlow(I)Z
daikon.PptSlice0.ImplicationWrapper:hashCode()I
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.LimitedSizeIntSet:size()I
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.Quantify:quantify([Ldaikon.VarInfo;)[Ldaikon.Quantify.QuantifyReturn;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.Quant:lexNotEqual([I[I)Z
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.PptSlice0:arity()I
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.inv.unary.scalar.UpperBound:enabled()Z
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltOneOf:EltOneOf(Ldaikon.PptSlice;)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V | ASSIGN | 440 | = null
daikon.VarInfo:get_base_array()Ldaikon.VarInfo;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.PptSlice1:arity()I
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.ProglangType:isPointerFileRep()Z
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.Intern:intern([D)[D
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.Quantify.IOAQuantification:getVarIndexedString(I)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.ValueTuple:size()I
daikon.inv.unary.scalar.NonModulus:updateResults()V | ASSIGN | 3964 | = null
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:min([I)I
daikon.ProglangType:baseIsScalar()Z
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
utilMDE.FuzzyFloat:lte(DD)Z
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.Quantify.Term:name_with_offset(Ljava.lang.String;I)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Quant:lexLTE([I[I)Z
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.inv.Invariants:Invariants()V
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
utilMDE.ArraysMDE:indexOf([II)I
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.Quant:eltwiseGT([I)Z
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
jtb.JavaCharStream:backup(I)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
utilMDE.ArraysMDE:sum([[I)I
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.Quant:eltsNotEqualIndex([I)Z
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:element_range([I)I
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
utilMDE.ArraysMDE:sum([[D)D
daikon.Quant:lte(II)Z
utilMDE.ArraysMDE:fn_compose([I[I)[I
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaCharStream:getBeginColumn()I
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:eltsEqualIndex([I)Z
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.Quantify.IOAQuantification:getMembershipRestriction(I)Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
utilMDE.MathMDE:pow(II)I
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:sign(I)I
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.Ppt:find_var_by_name(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.PptSlice0:initInvariantsSeen()V
utilMDE.MathMDE:gcd(II)I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:base()Ljava.lang.String;
jtb.JavaParser:jj_ntk()I
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.ProglangType:baseIsIntegral()Z
daikon.Quant:subsetOf([J[J)Z
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
utilMDE.MathMDE:pow_fast(II)I
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.Quant:subsetOf([S[S)Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.Quant:pairwiseGTE([I[I)Z
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaCharStream:FillBuff()V
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.Quant:lexEqual([I[I)Z
daikon.VarInfo:apply_subscript(Ljava.lang.String;)Ljava.lang.String;
daikon.Quantify.IOAQuantification:getFreeVar(I)Ldaikon.Quantify.Term;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.VarInfo:jml_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.Quant:gt(II)Z
daikon.test.InvariantFormatTester:execute()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.diff.Node:getUserRight()Ljava.lang.Object;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.Quantify.Term:esc_name()Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.Quantify:get_flags(Z)Ljava.util.EnumSet;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.Quantify.IOAQuantification:IOAQuantification([Ldaikon.VarInfo;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.ModBitTracker:num_vars()I
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
utilMDE.MathMDE:mod_positive(JJ)J
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.Ppt:indexOf(Ljava.lang.String;)I
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.inv.unary.sequence.EltNonZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.inv.ValueSet:ValueSet(I)V
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.Quant:eltwiseEqual([I)Z
utilMDE.OrderedPairIterator:hasNext()Z
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:noDups([I)Z
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfo:get_enclosing_var()Ldaikon.VarInfo;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.inv.unary.sequence.EltOneOf:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | RETURN | 7063 | return null
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.Quant:eq(JJ)Z
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.VarInfo:get_array_var()Ldaikon.VarInfo;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfo:simplify_quantify(Ljava.util.EnumSet;[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:memberOf(F[F)Z
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfo:isPointer()Z
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.Quant:lexGTE([I[I)Z
daikon.ValueTuple:isMissing(I)Z
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.ModBitTracker:num_sets()I
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.VarInfo:get_all_simple_names()Ljava.util.List;
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern:intern([J)[J
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.VarInfo:name()Ljava.lang.String;
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.unary.sequence.EltNonZero:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
utilMDE.Assert:assertTrue(Z)V
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.VarInfo:domainTypeIOA()Ljava.lang.String;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:format_daikon()Ljava.lang.String;
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.inv.unary.sequence.EltNonZero:format_simplify()Ljava.lang.String;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.sequence.EltOneOf:format_ioa()Ljava.lang.String;
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.Quant:eltsNotEqual([II)Z
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ProglangType:isScalar()Z
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.Quantify.FreeVar:name()Ljava.lang.String;
utilMDE.ArraysMDE:sorted([I)Z
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.Quant:sameLength([I[I)Z
daikon.Quant:isReverse([I[I)Z
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.RootNode:RootNode()V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant:prob_and(DDD)D
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName:name()Ljava.lang.String;
daikon.VarInfo:isPrestate()Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quantify.Term:simplify_name()Ljava.lang.String;
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.FuzzyFloat:eq(DD)Z
daikon.Quantify.Length:Length(Ldaikon.VarInfo;I)V
utilMDE.ArraysMDE:sum([D)D
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:getDiffString()Ljava.lang.String;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.Quant:ne(II)Z
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.inv.Invariant:justified()Z
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.Quant:lexGT([I[I)Z
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.VarInfo:get_lower_bound()Ldaikon.Quantify.Term;
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.Quantify.ESCQuantification:bld_quant(Ldaikon.VarInfo;Ldaikon.Quantify.Term;)Ljava.lang.String;
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.Quant:memberOf(J[J)Z
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.Quant:subsetOf([B[I)Z
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quantify.IOAQuantification:getFreeVarName(I)Ljava.lang.String;
daikon.Quant:subsetOf([F[F)Z
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.Quant:setEqual([I[I)Z
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.VarInfoAux:hashCode()I
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.Debug:logOn()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
jtb.JavaParserTokenManager:jjStopAtPos(II)I
utilMDE.ArraysMDE:subarray([JII)[J
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.Quant:concat([I[I)[I
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName:esc_name()Ljava.lang.String;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.PptName:isCombinedExitPoint()Z
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
utilMDE.Intern:internSubsequence([JII)[J
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.Quant:pairwiseEqual([I[I)Z
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.Quant:eq(II)Z
daikon.Quantify.SimplifyQuantification:get_arr_vars_indexed(I)Ljava.lang.String;
daikon.VarInfo:relate_var()V
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.test.FormatTestCase:passes()Z
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
utilMDE.ArraysMDE:concat([I[I)[I
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.Quant:eltsGT([II)Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.VarInfo:get_base_array_hashcode()Ldaikon.VarInfo;
daikon.VarInfoName:isLiteralConstant()Z
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.Quantify.IOAQuantification:getQuantifierExp()Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.Quant:gte(II)Z
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eq(DD)Z
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.sequence.EltOneOf:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:mod_positive(II)I
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.LowerBound:enabled()Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.PptTopLevel.CondIterator:hasNext()Z
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.inv.unary.sequence.EltNonZero:format_esc()Ljava.lang.String;
daikon.Quant:eltsLTE([II)Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.simplify.LemmaStack:noticeInt(J)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.unary.sequence.EltOneOf:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.VarInfo:new_ppt()V
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.Quantify.SimplifyQuantification:get_quantification()Ljava.lang.String;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
754 2 202 2 757 2 190 2 353 2 96 2 262 2 217 2 499 4 
547 2 606 2 118 2 991 2 694 2 283 2 879 6 577 2 269 6 995 2 12 6 
792 6 754 2 607 2 680 2 434 4 186 2 589 6 494 6 973 2 353 2 75 4 523 6 79 2 
179 12 112 10 52 4 740 6 54 10 904 2 122 8 773 10 923 10 353 6 958 8 478 2 997 4 716 2 295 4 754 6 965 30 489 2 890 2 818 4 557 16 334 16 762 2 72 16 395 10 241 6 145 8 214 8 870 2 790 26 
918 6 227 4 
1 2 
179 2 112 2 345 2 711 2 54 2 923 2 773 4 323 2 579 2 130 2 965 6 205 2 818 2 136 2 333 2 334 2 557 2 395 2 72 2 241 2 145 2 312 2 790 4 
179 5 943 4 112 4 965 14 302 2 183 2 54 4 411 4 334 8 557 8 395 4 72 8 923 4 689 6 295 2 790 12 527 6 
500 2 599 2 601 2 981 4 27 4 343 2 605 10 247 6 569 4 29 4 571 2 741 8 799 4 412 2 884 10 843 2 415 2 126 2 260 4 157 2 718 2 584 4 585 62 962 14 811 4 359 2 624 2 452 2 133 2 554 2 138 2 456 4 68 2 240 2 975 4 734 4 978 4 894 4 80 2 314 2 
1 2 705 2 317 2 32 2 319 2 994 2 13 2 390 2 760 2 243 2 
568 4 643 2 252 2 370 2 576 2 843 2 57 2 584 2 586 2 202 2 203 2 330 2 264 2 588 2 726 2 662 2 336 2 22 2 402 2 403 2 870 2 668 2 223 2 29 4 741 2 801 2 743 2 349 2 353 4 543 2 999 2 754 4 300 2 623 2 1001 2 93 2 550 2 303 4 493 2 939 2 173 4 1012 2 892 2 826 2 
179 22 468 4 872 6 943 4 898 4 112 16 739 2 344 6 740 4 437 2 54 16 411 4 538 4 255 2 923 16 773 6 289 2 189 4 353 4 39 6 927 2 90 4 689 6 326 8 754 4 965 54 489 2 818 2 557 32 334 32 308 2 395 16 72 32 241 4 145 18 78 6 214 6 790 48 527 6 
247 2 741 2 138 2 
279 10 435 2 115 2 555 2 726 2 268 2 458 2 155 2 382 2 462 2 824 22 128 2 230 2 466 2 
896 4 3 2 248 2 901 2 902 2 771 2 372 6 906 2 648 6 8 8 907 3 10 4 123 2 124 3 774 2 387 1 263 5 515 2 785 2 517 2 20 2 266 2 786 2 661 2 663 2 270 2 143 2 916 2 789 2 405 1 406 2 921 2 682 1 798 2 684 3 802 2 686 2 687 2 36 2 541 2 161 2 160 2 808 16 159 2 418 2 293 2 544 3 929 2 932 2 933 2 935 2 301 2 41 3 42 2 551 16 45 2 424 4 306 2 817 2 556 2 427 3 307 1 174 2 309 2 430 6 827 2 562 2 565 4 50 4 833 8 184 2 185 2 837 2 440 2 840 2 320 3 442 2 188 1 955 2 959 2 850 1 721 3 200 24 854 2 450 16 204 1 206 2 332 2 859 1 971 2 209 2 591 2 74 8 337 2 731 2 461 3 977 2 465 24 596 3 215 6 600 2 469 4 604 2 985 2 988 1 742 4 992 2 993 2 476 2 883 2 744 12 477 3 746 2 748 2 996 1 353 34 615 32 750 2 481 2 482 32 754 32 887 2 92 2 484 1 622 2 233 3 757 2 1003 2 94 4 234 1 492 2 235 16 360 2 1006 2 361 2 237 2 761 2 363 1 891 2 630 2 632 1 496 2 104 1 1010 1 893 2 245 2 498 2 
470 2 
949 2 353 2 
353 4 815 2 304 2 
315 2 567 2 642 2 219 2 983 2 472 2 84 20 280 2 608 2 254 2 612 2 225 2 574 2 256 2 651 2 653 2 908 2 158 20 417 2 194 2 421 2 753 2 232 20 888 2 196 2 197 2 447 2 889 2 490 2 692 2 590 2 99 2 69 2 49 2 177 2 24 2 106 2 636 2 
239 2 914 2 407 1 806 2 
914 2 578 2 
895 2 934 2 741 2 166 2 
895 2 102 2 934 2 910 2 741 2 166 2 
286 2 914 2 52 2 103 2 741 2 166 2 
697 2 402 2 
187 2 52 2 741 2 166 2 
587 2 936 2 
422 2 259 2 
284 2 954 2 
649 2 980 2 
259 2 649 2 386 2 
259 2 563 2 649 2 
259 2 846 2 649 2 
729 2 259 2 649 2 
534 2 741 2 655 2 354 6 166 2 139 2 401 2 1017 6 
783 2 835 2 
286 2 914 2 52 2 910 2 741 2 166 2 426 2 
286 2 914 2 878 2 
286 2 914 2 127 2 
835 2 806 2 807 2 
286 2 914 2 
15 2 835 2 
914 2 787 2 
912 2 835 2 806 2 
954 2 391 2 806 2 
4 2 806 2 649 2 
257 2 806 2 587 2 
259 2 631 2 806 2 
835 2 693 2 
210 2 914 2 
954 2 423 2 
316 2 649 2 
587 2 572 2 
259 2 454 2 
835 2 593 2 
259 2 443 2 
16 2 587 2 
231 2 649 2 
954 2 347 2 
639 2 912 2 835 2 806 2 
639 2 912 2 835 2 806 2 507 2 
835 2 806 2 261 2 
835 2 806 2 244 2 
829 2 410 2 364 2 909 2 
357 2 131 2 874 2 708 2 132 2 626 2 865 2 285 2 956 4 352 2 824 6 616 4 464 2 752 2 193 2 212 2 869 2 717 2 
575 2 806 2 
746 2 
896 2 111 2 3 4 248 2 251 2 771 2 372 2 906 2 648 4 506 2 377 2 10 4 383 2 785 2 517 2 786 2 270 2 663 2 399 2 916 2 144 4 789 6 533 2 921 2 802 2 686 2 160 2 293 2 932 2 299 2 548 2 42 2 424 4 817 2 556 2 309 2 428 2 430 6 828 2 565 4 831 2 833 2 184 2 185 2 442 2 847 4 324 2 959 2 450 6 451 2 971 2 866 2 215 2 469 2 604 2 742 2 883 2 744 8 748 2 996 2 353 26 615 6 750 2 482 4 754 26 757 2 1003 2 94 4 492 2 625 2 1006 2 237 2 630 2 1010 2 
896 2 111 2 3 4 248 2 771 2 372 2 906 2 648 6 506 2 505 2 377 2 10 4 383 2 515 2 785 2 517 2 786 2 270 2 663 2 399 2 916 2 144 4 789 6 533 2 921 2 796 2 802 2 686 2 541 2 160 2 293 2 932 2 42 2 424 4 817 2 556 2 309 2 428 2 430 6 828 2 565 4 831 2 833 2 836 2 184 2 185 2 442 2 847 4 324 2 959 2 450 6 451 2 971 2 209 2 866 2 215 2 469 2 604 2 742 2 883 2 744 8 748 2 996 2 353 26 615 6 750 2 482 4 754 26 757 2 1003 2 94 4 492 2 625 2 1006 2 237 2 630 2 1010 2 
565 2 2 2 367 2 834 8 900 2 503 2 771 2 573 2 318 2 841 2 258 2 776 4 381 2 12 6 848 2 656 8 58 4 331 2 516 2 785 2 517 2 786 2 141 8 269 6 270 2 521 2 524 2 917 2 666 2 147 2 530 2 606 4 991 2 879 6 995 2 228 4 353 12 292 2 165 2 754 6 810 4 43 2 424 2 937 2 691 2 817 2 694 4 821 2 47 2 309 2 101 2 628 2 175 2 430 4 767 4 366 2 
565 2 2 2 367 2 834 8 503 2 771 2 573 2 318 2 577 2 841 2 258 2 776 4 381 2 12 6 848 2 656 8 778 2 58 4 331 2 516 2 517 2 785 2 786 2 972 4 141 8 269 8 270 2 521 2 524 2 917 2 666 2 147 2 530 2 606 4 991 2 879 8 995 2 228 4 353 12 292 2 165 2 754 6 810 4 43 2 424 2 44 2 937 2 691 2 817 2 694 4 821 2 47 2 309 2 101 2 628 2 430 4 767 4 366 2 
2 2 367 2 810 4 606 2 331 2 43 2 937 2 503 2 694 2 47 2 101 2 258 2 269 2 381 2 521 2 12 2 524 2 58 4 
565 2 2 2 367 2 834 4 900 2 503 2 771 2 573 2 318 2 577 2 841 2 258 2 776 4 381 2 12 4 848 2 656 4 58 4 331 2 516 2 785 2 517 2 786 2 141 4 269 6 270 2 521 2 524 2 917 2 666 2 147 2 530 2 606 4 879 6 995 2 228 4 353 12 292 2 165 2 754 6 810 4 43 2 424 2 937 2 691 2 817 2 694 4 821 2 47 2 309 2 101 2 628 2 175 2 430 4 767 4 366 2 
565 2 2 2 367 2 834 4 900 2 503 2 118 2 771 2 573 2 318 2 841 2 258 2 776 4 381 2 12 6 848 2 656 4 58 4 331 2 516 2 785 2 517 2 786 2 141 4 269 4 270 2 521 2 524 2 917 2 666 2 147 2 530 2 606 4 879 6 995 2 228 4 353 12 292 2 165 2 754 6 810 4 43 2 424 2 937 2 691 2 817 2 694 4 821 2 47 2 309 2 101 2 628 2 175 2 430 4 767 4 366 2 
565 2 2 2 367 2 834 8 900 2 503 2 771 2 573 2 318 2 841 2 258 2 776 4 381 2 12 6 848 2 656 4 58 4 331 2 516 2 785 2 517 2 786 2 141 4 269 6 270 2 521 2 524 2 917 2 666 2 147 2 530 2 606 4 991 2 879 6 995 2 228 4 353 12 292 2 165 2 754 6 810 4 43 2 424 2 937 2 691 2 817 2 694 4 821 2 47 2 309 2 101 2 628 2 175 2 430 4 767 4 366 2 
565 2 2 2 367 2 834 8 900 2 503 2 118 2 771 2 573 2 318 2 841 2 258 2 776 4 381 2 12 8 848 2 656 8 58 4 331 2 516 2 785 2 517 2 786 2 141 8 269 6 270 2 521 2 524 2 917 2 666 2 147 2 530 2 606 4 991 2 879 8 995 2 228 4 353 12 292 2 165 2 754 6 810 4 43 2 424 2 937 2 691 2 817 2 694 4 821 2 47 2 309 2 101 2 628 2 175 2 430 4 767 4 366 2 
565 2 2 2 367 2 834 8 900 2 503 2 771 2 573 2 318 2 841 2 258 2 776 4 381 2 12 6 848 2 656 8 58 4 331 2 516 2 785 2 517 2 786 2 141 8 269 6 270 2 521 2 524 2 917 2 666 2 147 2 530 2 606 4 991 2 879 6 995 2 228 4 353 12 292 2 165 2 754 6 810 4 43 2 424 2 937 2 691 2 817 2 694 4 821 2 47 2 309 2 101 2 628 2 175 2 430 4 767 4 366 2 
108 2 896 2 2 2 111 2 367 2 116 2 118 4 503 2 372 2 771 2 906 2 648 6 258 2 10 4 776 8 381 2 12 8 911 2 515 2 516 2 785 2 517 2 786 2 269 4 663 2 270 2 916 2 521 2 917 2 524 2 666 2 789 6 25 2 147 2 672 2 530 2 533 2 921 2 686 2 156 2 292 2 293 2 165 2 810 4 43 2 424 4 691 2 937 2 817 2 694 4 556 2 821 2 47 2 309 2 175 2 430 6 565 4 834 2 573 2 318 2 841 2 442 2 847 4 848 2 58 4 964 2 450 6 331 2 858 4 971 2 209 2 866 2 215 2 469 2 606 4 742 2 879 12 883 4 744 2 995 4 748 2 228 6 615 8 353 28 750 2 482 2 483 2 754 18 757 2 1003 2 94 4 1006 2 101 2 628 2 630 2 767 4 768 2 366 2 
108 2 896 4 2 2 111 2 367 2 116 2 503 2 372 2 771 2 906 2 648 6 258 2 10 4 776 8 381 2 12 8 911 2 515 2 516 2 785 2 517 2 786 2 269 8 663 2 270 2 916 2 521 2 917 2 524 2 666 2 789 6 25 2 147 2 672 2 530 2 533 2 921 2 686 2 156 2 292 2 293 2 165 2 810 4 43 2 424 4 691 2 937 2 817 2 694 4 556 2 821 2 47 2 309 2 175 2 430 6 565 4 834 6 573 2 318 2 841 2 442 2 847 4 848 2 58 4 964 2 450 6 331 2 858 4 971 2 209 2 866 2 215 2 469 4 606 4 742 4 991 4 879 12 883 4 744 4 995 4 748 2 228 6 615 8 353 28 750 2 482 2 483 2 754 18 757 2 1003 2 94 4 1006 2 101 2 628 2 630 2 767 4 768 2 366 2 
108 2 896 4 2 2 111 2 367 2 116 2 503 2 372 2 771 2 906 2 648 6 258 2 10 4 776 8 381 2 12 8 656 4 911 2 515 2 516 2 785 2 517 2 786 2 141 4 269 8 663 2 270 2 916 2 521 2 917 2 524 2 666 2 789 6 25 2 147 2 672 2 530 2 533 2 921 2 686 2 156 2 292 2 293 2 165 2 810 4 43 2 424 4 691 2 937 2 817 2 556 2 694 4 821 2 47 2 309 2 175 2 430 6 565 4 834 6 573 2 318 2 841 2 442 2 847 4 848 2 58 4 964 2 450 6 331 2 858 4 971 2 209 2 866 2 215 2 469 4 606 4 742 4 991 4 879 12 883 4 744 4 995 4 228 6 748 2 615 8 353 28 750 2 482 2 483 2 754 18 757 2 1003 2 94 4 1006 2 101 2 628 2 630 2 767 4 768 2 366 2 
108 2 896 4 2 2 367 2 111 2 116 2 118 2 503 2 372 4 771 2 906 2 648 6 258 2 10 4 776 8 381 2 512 2 12 10 656 4 911 2 515 2 516 2 785 2 517 2 265 2 786 2 141 4 269 10 663 2 270 2 916 2 521 2 522 2 917 2 524 2 666 2 789 8 147 2 672 2 530 2 533 2 921 2 686 2 292 2 293 2 165 2 810 4 43 2 424 4 691 2 937 2 817 2 556 2 694 4 821 2 47 2 309 2 175 2 430 6 565 4 181 2 834 6 573 2 318 2 577 2 841 2 442 2 847 6 848 2 58 4 964 2 450 8 331 2 858 4 969 2 971 2 209 2 866 2 73 2 215 4 469 4 606 4 742 4 991 4 879 16 883 2 744 4 995 4 228 6 748 2 615 12 353 26 750 2 482 4 483 2 754 16 757 2 1003 2 94 4 1006 2 101 2 628 2 630 2 767 4 768 2 366 2 
2 2 367 2 606 4 834 6 503 2 991 2 573 2 879 4 318 2 841 2 995 2 258 2 228 2 776 2 353 4 12 6 656 4 848 2 165 2 58 2 810 2 516 2 331 2 691 2 937 2 694 4 141 4 175 2 269 6 767 2 917 2 524 2 666 2 366 2 147 2 
2 2 111 2 367 2 369 2 503 2 771 2 372 3 906 2 647 2 648 6 10 4 258 2 776 2 12 6 656 2 515 2 516 2 517 2 785 2 786 2 269 6 663 2 270 2 916 2 917 2 524 2 666 2 789 6 25 2 147 2 533 2 408 2 921 2 798 2 686 2 687 2 156 2 688 2 293 2 165 2 810 2 424 4 45 2 937 2 691 2 817 2 694 4 556 2 309 2 175 2 430 6 565 4 834 6 436 3 573 2 318 2 841 2 442 2 847 4 848 2 58 2 450 6 331 2 971 2 209 2 866 2 211 2 215 3 606 4 991 2 879 4 883 4 995 2 746 2 228 2 748 2 353 28 615 8 750 2 482 3 754 24 757 2 1003 2 94 4 1006 2 628 2 630 2 767 2 366 2 
389 2 691 2 165 2 
389 2 691 2 165 2 
109 2 501 2 896 4 2 4 111 2 118 4 771 2 906 2 648 6 10 4 776 4 11 2 381 2 12 12 656 4 515 2 785 2 517 2 786 2 141 4 269 12 270 2 663 2 916 2 521 2 23 2 524 2 917 2 789 2 676 2 530 2 533 4 921 2 31 2 414 2 686 2 156 2 292 2 165 2 932 2 810 2 170 2 424 4 691 4 937 2 816 2 817 2 556 2 694 4 309 2 430 6 565 4 180 2 182 2 834 6 573 2 577 4 842 2 442 2 58 2 450 2 451 4 858 2 971 2 209 2 866 2 81 2 469 4 606 4 742 4 991 4 879 16 880 2 883 4 744 4 995 4 228 4 748 2 89 2 353 24 615 2 750 2 618 2 482 2 754 16 757 2 1003 2 94 4 1005 2 1006 2 101 2 630 2 1011 2 767 2 
754 2 851 2 517 2 170 2 1005 2 43 2 31 2 759 2 795 2 335 2 883 2 414 2 842 2 353 4 156 2 178 2 942 2 
109 2 501 2 896 4 2 4 111 2 118 4 771 2 906 2 648 6 652 2 10 4 776 4 381 2 12 12 656 4 515 2 659 2 785 2 517 2 786 2 141 4 269 12 270 2 663 2 916 2 521 2 23 2 524 2 917 2 789 2 676 2 530 2 533 4 921 2 31 2 686 2 292 2 165 2 932 2 810 2 170 2 424 4 691 4 937 2 816 2 817 2 556 2 694 4 309 2 430 6 565 4 180 2 182 2 834 6 573 2 577 4 442 2 58 2 195 2 450 2 451 4 858 2 971 2 209 2 866 2 81 2 469 4 606 4 742 4 991 4 879 16 880 2 883 2 744 4 995 4 228 4 748 2 89 2 353 20 615 2 750 2 618 4 482 4 754 14 757 2 1003 2 94 4 758 2 1006 2 627 2 101 2 630 2 1011 2 767 2 
109 2 501 2 896 4 2 4 111 2 118 4 771 2 906 2 648 6 652 2 10 4 776 4 381 2 12 12 656 4 515 2 785 2 517 2 786 2 141 4 269 12 270 2 663 2 916 2 521 2 23 2 524 2 917 2 789 2 676 2 530 2 533 4 921 2 31 2 537 2 414 2 686 2 156 2 292 2 165 2 932 2 810 2 170 2 424 4 691 4 937 2 816 2 817 2 556 2 694 4 309 2 430 6 565 4 180 2 182 2 834 6 573 2 577 4 842 2 442 2 58 2 195 2 450 2 451 4 858 2 971 2 209 2 866 2 81 2 469 4 606 4 742 4 991 4 879 16 880 2 883 4 744 4 995 4 228 4 748 2 89 2 353 24 615 2 750 2 618 2 482 2 754 16 757 2 1003 2 94 4 1005 2 1006 2 101 2 630 2 1011 2 767 2 
246 2 249 4 250 14 253 2 504 10 771 2 7 18 6 3 772 2 506 16 255 4 9 6 10 6 775 2 512 2 511 2 779 2 17 8 515 6 19 2 785 2 517 2 265 2 786 2 270 2 271 2 522 2 789 14 526 3 790 12 791 6 527 6 26 2 275 6 277 14 278 14 531 8 532 2 533 2 281 3 28 2 794 2 282 2 535 4 797 2 33 2 800 26 287 2 803 2 290 2 37 2 38 4 542 4 293 2 546 2 40 3 296 4 298 4 812 4 549 2 551 4 553 2 817 2 820 14 556 2 822 4 557 8 309 2 559 4 825 8 564 10 828 44 565 4 831 2 566 2 832 2 833 22 54 4 55 2 56 2 847 12 324 2 580 3 581 2 60 2 583 2 325 14 853 2 852 4 855 8 328 2 329 2 63 6 860 4 863 2 334 8 866 2 72 8 73 2 76 2 77 4 339 2 867 26 868 18 595 2 597 4 340 2 341 6 873 8 603 2 611 6 86 2 882 10 881 2 883 2 346 2 885 2 886 9 615 36 353 56 617 2 619 2 620 1 356 6 94 6 625 2 97 2 98 2 100 18 630 4 365 2 634 2 638 20 108 2 640 4 641 4 113 2 112 4 369 2 644 72 116 2 120 2 372 16 375 2 647 2 905 2 648 14 121 4 650 2 378 14 377 2 376 2 380 2 125 4 654 8 383 2 911 2 384 2 388 2 658 4 392 2 393 2 134 8 135 8 660 6 394 4 137 22 140 6 395 4 915 4 397 2 664 2 398 2 399 2 916 2 400 34 145 4 665 4 667 2 672 2 919 2 674 2 678 2 679 2 408 2 921 4 409 2 150 4 411 4 152 2 683 2 153 2 154 26 923 4 924 2 686 4 926 2 688 2 163 2 690 2 931 2 932 2 167 2 169 2 424 4 938 2 696 2 940 2 428 2 430 6 699 2 700 2 703 2 179 6 944 2 704 2 945 42 946 8 707 2 181 2 950 6 709 2 436 2 437 2 438 4 952 2 712 8 953 10 714 4 442 2 441 2 191 4 192 2 961 2 724 2 723 4 201 8 199 2 963 2 448 2 964 2 450 14 965 16 966 2 969 2 207 4 455 4 971 4 459 2 209 6 974 2 732 54 463 2 979 2 214 6 215 25 737 10 216 2 982 10 738 2 218 8 471 10 221 2 220 2 986 2 740 4 989 2 224 2 226 2 474 2 475 2 744 64 745 18 747 2 996 2 751 2 479 2 480 2 482 25 998 9 483 4 754 32 1000 2 486 2 487 2 756 6 757 4 1003 2 235 16 1006 2 1007 10 763 2 765 2 1010 2 1014 4 245 2 1016 4 
678 2 372 2 55 2 952 2 882 2 508 2 953 2 747 2 441 2 615 2 353 2 847 2 511 2 580 2 482 2 293 2 690 2 754 2 450 2 789 2 700 2 564 4 215 2 828 6 
678 2 372 2 55 2 952 2 882 2 508 2 953 2 747 2 441 2 615 2 353 2 847 2 511 2 580 2 482 2 293 2 690 2 754 2 450 2 789 2 700 2 564 4 215 2 828 6 
678 2 372 2 55 2 952 2 882 2 508 2 953 2 747 2 441 2 615 2 353 2 847 2 511 2 580 2 482 2 293 2 690 2 754 2 450 2 789 2 700 2 564 4 215 2 828 6 
945 6 277 4 278 4 112 2 250 4 740 2 119 2 54 2 713 2 923 2 747 2 749 4 886 3 615 2 353 10 192 2 998 3 482 3 293 2 385 3 325 4 809 2 754 4 812 2 965 4 551 2 235 2 171 2 334 2 557 2 558 2 560 2 67 2 70 2 395 2 72 2 788 2 214 4 215 3 790 4 
179 2 945 6 112 2 250 4 54 2 119 2 713 2 192 2 385 2 325 4 965 4 334 2 67 2 72 2 395 2 70 2 145 2 788 2 214 4 215 2 790 4 277 4 278 4 740 2 747 2 923 2 886 2 749 4 353 10 615 2 482 2 998 2 293 2 809 2 754 4 812 2 551 2 489 2 235 2 171 2 557 2 558 2 560 2 
179 2 945 6 112 2 250 4 54 2 119 2 713 2 192 2 385 2 325 4 965 4 334 2 67 2 72 2 395 2 70 2 145 2 788 2 214 4 215 2 790 4 277 4 278 4 740 2 747 2 923 2 886 2 749 4 353 10 615 2 482 2 998 2 293 2 809 2 754 4 812 2 551 2 489 2 235 2 171 2 557 2 558 2 560 2 
179 2 945 6 112 2 250 4 54 2 119 2 713 2 192 2 385 2 325 4 965 4 334 2 67 2 72 2 395 2 70 2 145 2 788 2 214 4 215 2 790 4 277 4 278 4 740 2 747 2 923 2 886 2 749 4 353 10 615 2 482 2 998 2 293 2 809 2 754 4 812 2 551 2 489 2 235 2 171 2 557 2 558 2 560 2 
179 4 945 6 112 2 250 4 54 2 119 2 713 2 192 2 385 2 325 4 965 4 334 2 67 2 72 2 395 2 70 2 145 4 788 2 214 4 215 2 790 4 277 4 278 4 740 2 747 2 923 2 886 2 749 4 353 10 615 2 482 2 998 2 293 2 809 2 754 4 812 2 551 2 489 4 235 2 171 2 557 2 558 2 560 2 
725 2 433 2 1004 2 305 2 467 2 267 2 506 2 
48 2 351 2 358 2 220 2 305 2 951 2 
599 1 670 2 669 2 671 2 353 10 35 1 510 2 446 2 545 2 754 8 624 1 491 2 362 2 172 2 309 2 495 2 730 2 338 1 735 2 594 2 272 2 497 2 313 2 701 2 598 1 1018 2 
179 5 872 4 898 2 112 6 740 2 54 6 411 2 805 2 923 6 353 6 57 2 444 2 931 2 326 2 754 6 852 2 93 2 965 15 814 2 489 2 863 2 557 6 334 6 308 1 72 6 395 6 145 3 214 4 432 2 790 12 527 4 
782 2 325 2 754 1 675 4 278 2 899 7 514 2 368 2 250 2 473 2 518 2 88 1 310 2 353 1 445 2 273 2 657 2 780 2 
782 4 325 2 675 4 278 2 899 6 514 2 368 2 250 2 473 4 518 4 310 2 445 2 273 2 657 2 780 2 
782 8 325 2 754 1 675 4 278 2 899 10 514 2 368 2 250 2 473 8 518 8 88 1 310 2 353 1 445 2 273 6 657 8 780 2 
782 2 325 2 675 2 278 2 899 2 514 2 368 2 250 2 473 2 518 2 310 2 445 2 780 2 
0 10 897 34 117 2 502 4 903 4 645 16 770 8 646 24 5 6 374 124 648 248 379 2 10 112 777 2 513 4 515 58 784 10 18 16 913 10 21 2 142 2 525 6 274 6 148 22 673 10 529 6 677 24 532 8 793 24 920 10 149 6 921 8 922 2 681 24 151 24 413 8 685 4 804 2 288 50 539 4 291 36 162 24 419 6 164 90 420 1 294 6 297 8 168 6 552 8 819 28 46 8 698 6 941 4 429 10 561 6 176 4 702 16 830 4 948 10 51 2 570 2 710 6 53 90 439 26 715 6 957 4 56 8 845 2 59 42 849 4 719 6 720 84 960 26 582 17 449 6 62 2 968 6 967 2 64 18 66 4 970 2 453 4 727 4 862 4 861 4 971 14 864 6 728 6 209 58 71 8 213 8 976 92 871 2 82 4 83 12 602 4 222 2 85 4 984 10 987 2 990 2 610 4 87 18 877 6 885 8 613 2 348 4 614 6 353 150 621 4 91 5 754 134 488 16 94 88 95 2 236 6 238 2 1008 4 629 4 1009 42 630 14 242 6 1013 6 633 12 105 11 635 4 769 6 637 4 
0 2 948 2 51 2 710 2 371 2 838 4 645 4 839 2 373 2 374 6 648 44 379 2 10 20 321 2 322 2 56 2 777 2 129 2 14 4 582 2 722 2 781 2 327 2 515 2 784 2 967 2 856 2 857 4 64 2 65 2 970 2 862 2 971 2 864 2 208 2 913 2 457 2 209 2 71 2 460 2 396 2 519 2 733 2 146 2 274 2 342 2 528 2 673 2 276 2 529 2 677 2 532 2 793 2 920 2 984 2 85 2 921 2 609 2 536 2 30 2 877 2 885 2 804 2 350 2 614 2 353 46 925 2 291 2 355 2 162 2 928 2 91 2 754 44 755 2 485 2 813 2 488 4 94 20 425 2 236 4 819 38 695 2 46 6 764 6 311 4 429 2 630 2 431 2 823 2 766 2 1015 2 702 4 
0 4 897 30 110 8 114 2 117 2 770 4 645 10 5 4 374 24 648 104 379 2 10 44 509 4 777 2 513 4 515 28 784 4 18 8 520 8 142 2 404 8 525 4 274 4 529 4 532 2 149 4 920 4 921 2 536 10 151 8 413 4 804 2 288 8 539 4 540 2 34 16 416 8 291 6 419 4 930 2 168 4 819 14 46 6 698 4 561 4 176 4 702 10 830 4 706 2 947 4 948 6 710 4 844 2 322 10 957 4 56 2 845 2 59 8 849 4 719 4 720 24 582 10 61 32 449 4 967 2 968 4 64 10 453 4 970 2 727 4 971 6 208 2 728 4 864 4 209 30 592 2 460 2 736 4 976 24 83 14 984 4 875 4 610 4 876 4 877 4 613 2 885 2 350 2 353 78 229 4 614 4 621 4 754 70 488 10 1002 16 94 36 236 2 1008 4 629 2 1009 16 630 6 242 4 1013 4 635 4 1015 10 769 4 107 4 
0 2 897 8 948 2 51 2 570 2 117 1 710 4 645 6 770 4 374 8 648 36 379 2 10 14 56 2 845 1 777 2 582 2 62 2 327 2 515 8 967 2 784 2 18 6 64 2 970 2 971 2 864 4 209 8 460 2 213 2 871 2 274 4 148 10 602 2 529 4 532 2 222 2 85 1 984 2 920 2 921 2 877 4 413 1 685 2 885 2 804 2 539 2 353 28 614 4 291 2 91 2 754 26 488 6 94 14 236 3 819 15 238 2 46 5 629 3 630 2 176 2 105 2 702 6 
198 2 

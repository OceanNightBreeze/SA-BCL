#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.NullPointerException 212 734 980 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V FAILED junit.framework.AssertionFailedError (130,275) 518 
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 147 469 36 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_0()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_1()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_2()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_3()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_4()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_5()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_6()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_7()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_8()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_9()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_10()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_11()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_12()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_13()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_14()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_15()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_16()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_17()V PASSED
daikon.test.split.SplitterFactoryTest:testmisc_Fib_main_18()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_19()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_20()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_21()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_22()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_23()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_24()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_25()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_26()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_27()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_28()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_29()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_30()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_31()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_32()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__33()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__34()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__35()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__36()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__37()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__38()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__39()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__40()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__41()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__42()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__43()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_daikon()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:find_bi_linear(JJJJ[D)Z
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:eltsLT([II)Z
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.inv.binary.twoScalar.NumericInt.Divides:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:get_proto()Ldaikon.inv.Invariant;
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:PairwiseIntGreaterThan(Ldaikon.PptSlice;)V
daikon.Quantify:quantify([Ldaikon.VarInfo;)[Ldaikon.Quantify.QuantifyReturn;
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.suppress.NISuppression:NISuppression(Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
daikon.inv.Invariant:isWorthPrinting()Z
daikon.Quant:subsetOf([J[J)Z
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eltwiseNotEqual([I)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.test.InvariantFormatTester:execute()Z
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.VarInfo:is_direct_non_slice_array()Z
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.EltUpperBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:name()Ljava.lang.String;
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfo:name()Ljava.lang.String;
daikon.Quant:eltsGTE([II)Z
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.Quant:ne(II)Z
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.inv.Invariant:prob_or(DD)D
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:EltUpperBound(Ldaikon.PptSlice;)V
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.Ppt:find_var_by_name(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quantify.QuantFlags:distinct()Ljava.util.EnumSet;
daikon.inv.binary.twoSequence.TwoSequence:var1()Ldaikon.VarInfo;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | RETURN | 6392 | return null
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I | ASSIGN | 182066 | = null
jtb.JavaCharStream:UpdateLineColumn(C)V
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfo:relate_var()V
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:enabled()Z
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.VarInfo:get_all_simple_names()Ljava.util.List;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.InorderFlattener:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.inv.binary.twoScalar.NumericInt.Divides:Divides(Ldaikon.PptSlice;Z)V
daikon.Quantify.QuantFlags:adjacent()Ljava.util.EnumSet;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:base()Ljava.lang.String;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.suppress.NISuppressee:swap()Ldaikon.suppress.NISuppressee;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:pairwiseLTE([I[I)Z
daikon.Quant:lt(II)Z
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_ioa()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:set_bi_linear(JJJJ)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltsNotEqual([II)Z
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.inv.unary.sequence.EltNonZero:format_daikon()Ljava.lang.String;
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.inv.unary.sequence.EltNonZero:format_ioa()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:PairwiseIntLessThan(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.PptSlice2:arity()I
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.unary.stringsequence.EltOneOfString:sort_rep()V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.inv.unary.string.OneOfString:enabled()Z
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.diff.InvMap:InvMap()V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
jtb.JavaCharStream:BeginToken()C
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.FormatTestCase:passes()Z
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.Quant:eltsLtIndex([I)Z
daikon.inv.unary.sequence.EltwiseIntLessThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_daikon()Ljava.lang.String;
daikon.suppress.NISuppression:NISuppression(Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:add_modified(JJI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltsGT([II)Z
daikon.inv.unary.stringsequence.EltOneOfString:subarray_rep()Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:format_simplify()Ljava.lang.String;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_simplify()Ljava.lang.String;
daikon.Quant:gte(II)Z
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.PptName:isEnterPoint()Z
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:mod_positive(JJ)J
daikon.Quant:sameLength([I[I)Z
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
daikon.inv.unary.string.OneOfString:is_type()Z
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.inv.unary.stringsequence.EltOneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.PptSlice1:arity()I
daikon.inv.binary.twoSequence.PairwiseIntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.inv.unary.sequence.NoDuplicates:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:max([I)I
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.NoDuplicates:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:check_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltOneOf:get_proto()Ldaikon.inv.Invariant;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;Z)Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.Debug:logDetail()Z
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.OrderedPairIterator:hasNext()Z
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken; | ASSIGN | 215280 | = null
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.PptSlice0:arity()I
daikon.VarInfo:simplify_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quantify.IOAQuantification:IOAQuantification([Ldaikon.VarInfo;)V
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
utilMDE.ArraysMDE:sum([[I)I
daikon.inv.unary.sequence.EltOneOf:format_esc()Ljava.lang.String;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:eq(DD)Z
daikon.VarInfoName:hashCode()I
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:min([I)I
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
utilMDE.ArraysMDE:subarray([JII)[J
daikon.inv.unary.string.OneOfString:format_simplify()Ljava.lang.String;
daikon.VarInfoName.InorderFlattener:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.suppress.NISuppressor:swap()Ldaikon.suppress.NISuppressor;
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.inv.unary.sequence.EltUpperBound:enabled()Z
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:format_esc()Ljava.lang.String;
daikon.inv.unary.string.OneOfString:sort_rep()V
daikon.VarInfo:isPointer()Z
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.sequence.EltwiseIntComparison:EltwiseIntComparison(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.ValueTuple:isMissing(I)Z
daikon.inv.binary.BinaryInvariant:is_symmetric()Z
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.inv.unary.sequence.NoDuplicates:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:sum([D)D
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.unary.sequence.NoDuplicates:format_ioa()Ljava.lang.String;
daikon.Quant:pairwiseEqual([I[I)Z
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.binary.twoSequence.TwoSequence:TwoSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.Quant:setEqual([I[I)Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.Positive:enabled()Z
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.inv.unary.string.OneOfString:OneOfString(Ldaikon.PptSlice;)V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltwiseIntLessThan:enabled()Z
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.inv.unary.sequence.EltOneOf:sort_rep()V
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.ProglangType:baseIsFloat()Z
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.Ppt:Ppt()V
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.Quant:pairwiseLT([I[I)Z
daikon.Quant:pairwiseDivides([I[I)Z
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.Quant:subsetOf([D[F)Z
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.suppress.NISuppressionSet:NISuppressionSet([Ldaikon.suppress.NISuppression;)V
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfo:simplify_quantify(Ljava.util.EnumSet;[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.inv.unary.sequence.EltOneOf:is_hashcode()Z
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.inv.Invariant:prob_and(DD)D
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.VarComparabilityNone:indexType(I)Ldaikon.VarComparability;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
jtb.JavaCharStream:FillBuff()V
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE:missing_numbers([I)[I
utilMDE.OrderedPairIterator:setnext1()V
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltUpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
utilMDE.Stopwatch:Stopwatch(Z)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
daikon.ModBitTracker:ModBitTracker(I)V
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.EltUpperBound:format_simplify()Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.Quantify.IOAQuantification:getFreeVarName(I)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.inv.unary.stringsequence.SingleStringSequence:SingleStringSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.inv.unary.stringsequence.EltOneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
utilMDE.FuzzyFloat:gt(DD)Z
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:runValue([JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.ModBitTracker:num_sets()I
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Invariant:getConfidence()D
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.Quantify.QuantFlags:element_wise()Ljava.util.EnumSet;
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_esc()Ljava.lang.String;
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.Quant:intersection([I[I)[I
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
utilMDE.MathMDE:negate(I)I
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan(Ldaikon.PptSlice;)V
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.stringsequence.SingleStringSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.string.SingleString:var()Ldaikon.VarInfo;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.suppress.NISuppressee:NISuppressee(Ljava.lang.Class;I)V
utilMDE.FuzzyFloat:lt(DD)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:memberOf(F[D)Z
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:union([I[I)[I
daikon.inv.binary.twoScalar.LinearBinary:add_modified(JJI)Ldaikon.inv.InvariantStatus;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_ioa()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.FuzzyFloat:lte(DD)Z
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.Quant:pairwiseGT([I[I)Z
daikon.inv.unary.stringsequence.EltOneOfString:format_ioa()Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaCharStream:getEndColumn()I
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.InorderFlattener:nodes()Ljava.util.List;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.Quant:memberOf(S[S)Z
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Invariant:logDetail()Z
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.ValueSet:ValueSet(I)V
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoSequence.TwoSequence:valid_types([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:subarray([III)[I
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;Ldaikon.VarInfo;)V
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.Debug:logOn()Z
utilMDE.UtilMDE:escapeNonASCII(Ljava.lang.String;)Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext2()V
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.string.OneOfString:format_ioa()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:is_type()Z
daikon.Quant:pairwiseSquare([I[I)Z
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.inv.ValueSet.ValueSetString:ValueSetString(I)V
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
utilMDE.ArraysMDE:min_max([I)[I
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.suppress.NISuppression:NISuppression([Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:subsetOf([B[I)Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.Quant:eq(JJ)Z
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ProglangType:isString()Z
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
utilMDE.ArraysMDE:sum([I)I
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Elements:ioa_name_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quantify.QuantFlags:include_index()Ljava.util.EnumSet;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.ArraysMDE:sorted([I)Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
utilMDE.MathMDE:gcd([I)I
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan()V
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.inv.Invariant:prob_and(DDD)D
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.inv.unary.sequence.EltOneOf:EltOneOf(Ldaikon.PptSlice;)V
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quantify.IOAQuantification:getVarIndexedString(I)Ljava.lang.String;
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.inv.unary.stringsequence.EltOneOfString:add_modified([Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.inv.unary.string.OneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:get_proto()Ldaikon.inv.Invariant;
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.Quantify.QuantifyReturn:QuantifyReturn(Ldaikon.VarInfo;)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:enabled()Z
daikon.inv.unary.sequence.EltwiseIntLessThan:format_simplify()Ljava.lang.String;
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.VarInfo:isDerived()Z
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
utilMDE.Intern:intern([J)[J
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.string.OneOfString:format_esc()Ljava.lang.String;
daikon.Quant:eltsGtIndex([I)Z
daikon.inv.unary.sequence.EltwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
utilMDE.MathMDE:mod_positive(II)I
utilMDE.Intern:internSubsequence([III)[I
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.string.OneOfString:runValue(Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
daikon.ProglangType:baseIsScalar()Z
daikon.VarInfo:isIOASet()Z
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.FuzzyFloat:FuzzyFloat(D)V
utilMDE.MathMDE:pow(II)I
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:element_range([I)I
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_daikon()Ljava.lang.String;
daikon.inv.unary.string.OneOfString:add_modified(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.inv.unary.sequence.EltOneOf:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:get_swap()Z
daikon.inv.unary.string.OneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
daikon.suppress.NISuppressionSet:swap()Ldaikon.suppress.NISuppressionSet;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.Quant:subsetOf([D[D)Z
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.inv.unary.sequence.EltOneOf:subarray_rep()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.unary.sequence.EltUpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.inv.unary.sequence.NoDuplicates:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ProglangType:elementIsIntegral()Z
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.inv.Invariants:Invariants()V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
utilMDE.FuzzyFloat:ne(DD)Z
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.VarInfo:apply_subscript(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:slice([III)[I
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltNonZero:is_pointer()Z
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.VarInfoName:isLiteralConstant()Z
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
utilMDE.Intern:internSubsequence([JII)[J
daikon.inv.unary.string.OneOfString:get_proto()Ldaikon.inv.Invariant;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
utilMDE.ArraysMDE:concat([I[I)[I
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.Quant:lexGT([I[I)Z
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.inv.Invariant:logOn()Z
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.inv.unary.string.OneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.ModBitTracker:split(I)I
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.unary.stringsequence.EltOneOfString:enabled()Z
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.VarComparabilityNone:comparable(Ldaikon.VarComparabilityNone;Ldaikon.VarComparabilityNone;)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
jtb.Token:newToken(I)Ljtb.Token;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
daikon.diff.Node:Node()V
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.inv.unary.stringsequence.EltOneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.PptName:isCombinedExitPoint()Z
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.inv.unary.string.SingleString:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.Quant:isReverse([I[I)Z
daikon.inv.unary.sequence.EltOneOf:format_simplify()Ljava.lang.String;
daikon.PptSlice0:initInvariantsSeen()V
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.inv.unary.sequence.NoDuplicates:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
utilMDE.WeakHasherMap:size()I
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quantify.IOAQuantification:getQuantifierExp()Ljava.lang.String;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.inv.binary.twoSequence.TwoSequence:var2()Ldaikon.VarInfo;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
utilMDE.ArraysMDE:fn_identity(I)[I
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.inv.unary.sequence.EltUpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_esc()Ljava.lang.String;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.inv.binary.twoScalar.LinearBinaryCore:maxsep_point([J[J)[I
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.Quant:lexGTE([I[I)Z
daikon.VarInfo:isPrestate()Z
utilMDE.MathMDE:gcd_differences([I)I
daikon.Quant:gt(II)Z
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
utilMDE.ArraysMDE:indexOf([II)I
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern:numIntArrays()I
daikon.inv.unary.sequence.NoDuplicates:enabled()Z
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.ProglangType:isFloat()Z
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.Quant:subsetOf([S[S)Z
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.inv.Invariant:simplify_format_string(Ljava.lang.String;)Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.inv.unary.sequence.EltOneOf:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_esc()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_simplify()Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.Quant:lexLTE([I[I)Z
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.Quant:eltsEqualIndex([I)Z
daikon.inv.unary.sequence.NoDuplicates:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.Ppt:indexOf(Ljava.lang.String;)I
daikon.ProglangType:baseIsString()Z
utilMDE.FuzzyFloat:indexOf([DD)I
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
jtb.JavaCharStream:getBeginLine()I
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.inv.unary.sequence.EltUpperBound:format_ioa()Ljava.lang.String;
utilMDE.LimitedSizeIntSet:add(I)V
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.VarInfo:has_typeof()Z
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.ProglangType:dimensions()I
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.MathMDE:gcd(JJ)J
daikon.inv.unary.sequence.EltwiseIntLessThan:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:get_enclosing_var()Ldaikon.VarInfo;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
jtb.JavaCharStream:getBeginColumn()I
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.suppress.NISuppressee:NISuppressee(Ljava.lang.Class;Z)V
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.inv.Invariant:justified()Z
utilMDE.MathMDE:gcd(II)I
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.Quant:subsetOf([F[D)Z
jtb.JavaCharStream:backup(I)V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.inv.unary.sequence.EltNonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:enabled()Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:enabled()Z
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
utilMDE.UtilMDE:lineNumberFileReader(Ljava.io.File;)Ljava.io.LineNumberReader;
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarInfoName:hasTypeOf()Z
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:ioa_name()Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.inv.unary.sequence.EltNonZero:EltNonZero(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltOneOf:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.string.OneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.inv.unary.sequence.EltOneOf:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:eltwiseLTE([I)Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:lexNotEqual([I[I)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:get_proto()Ldaikon.inv.Invariant;
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.MathMDE:modulus([I)[I
daikon.VarInfo:isDerivedSubSequenceOf()Ldaikon.VarInfo;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.ProglangType:isPseudoArray()Z
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.inv.ValueSet.ValueSetStringArray:ValueSetStringArray(I)V
jtb.JavaCharStream:ReadByte()C
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:memberOf(D[F)Z
daikon.VarInfo:new_ppt()V
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:eq(DD)Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_daikon()Ljava.lang.String;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.ModBitTracker:num_samples()I
daikon.VarInfoName.InorderFlattener:InorderFlattener(Ldaikon.VarInfoName;)V
daikon.diff.RootNode:RootNode()V
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
jtb.JavaCharStream:readChar()C
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.inv.binary.twoScalar.LinearBinaryCore:maxsep_indices()[I
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.Quant:eltsLTE([II)Z
daikon.Quant:eltwiseLT([I)Z
daikon.Quant:memberOf(J[J)Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
daikon.inv.unary.sequence.EltLowerBound:format_simplify()Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
daikon.inv.unary.stringsequence.EltOneOfString:EltOneOfString(Ldaikon.PptSlice;)V
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfo:jml_name()Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.inv.unary.scalar.NonModulus:updateResults()V
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.inv.unary.sequence.EltwiseIntLessThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:isScalar()Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.Quant:noDups([I)Z
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltsGteIndex([I)Z
daikon.VarInfo:apply_subscript(Ljava.lang.String;)Ljava.lang.String;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.unary.sequence.EltwiseIntLessThan:EltwiseIntLessThan(Ldaikon.PptSlice;)V
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.Quantify.IOAQuantification:getFreeVar(I)Ldaikon.Quantify.Term;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.filter.ParentFilter:ParentFilter()V
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
utilMDE.WeakIdentityHashMap:indexFor(II)I
utilMDE.ArraysMDE:sum([[D)D
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.ProglangType:isIntegral()Z
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.Quant:concat([I[I)[I
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quantify.FreeVar:name()Ljava.lang.String;
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:hasNodeOfType(Ljava.lang.Class;)Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE:sign(I)I
daikon.inv.unary.stringsequence.EltOneOfString:format_esc()Ljava.lang.String;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I | ASSIGN | 184981 | = null
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.Divides:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:subsetOf([I[I)Z
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.ValueTuple:size()I
daikon.inv.unary.stringsequence.EltOneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:memberOf(I[I)Z
daikon.inv.unary.sequence.EltwiseIntLessThan:format_ioa()Ljava.lang.String;
daikon.Quant:eltsEqual([II)Z
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:noDuplicates([I)Z
jtb.JavaParser:jj_ntk()I
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
utilMDE.Intern:intern([I)[I
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.VarInfoName:inOrderTraversal()Ljava.util.Collection;
daikon.Quant:eq(II)Z
daikon.inv.unary.UpperBoundCore:wouldChange(J)Z
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.inv.unary.stringsequence.EltOneOfString:format_daikon()Ljava.lang.String;
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.UtilMDE:lineNumberFileReader(Ljava.lang.String;)Ljava.io.LineNumberReader;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.sequence.EltNonZero:format_esc()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltUpperBound:format_daikon()Ljava.lang.String;
daikon.inv.unary.string.OneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.inv.binary.twoScalar.NumericInt.Divides:get_proto(Z)Ldaikon.inv.Invariant;
daikon.Quantify.IOAQuantification:getClosingExp()Ljava.lang.String;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_simplify(Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.VarInfoName.Elements:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.VarInfoName.Elements:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_ioa()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.Quant:setDiff([I[I)[I
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.Quant:memberOf(F[F)Z
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.inv.unary.sequence.EltOneOf:is_boolean()Z
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.inv.unary.sequence.EltwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.ModBitTracker:num_vars()I
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.Quantify.IOAQuantification:getMembershipRestriction(I)Ljava.lang.String;
daikon.VarComparabilityNone:elementType()Ldaikon.VarComparability;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_simplify()Ljava.lang.String;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.inv.unary.string.OneOfString:format_daikon()Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.Quant:eltwiseGT([I)Z
daikon.ProglangType:isArray()Z
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltNonZero:enabled()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:NoDuplicates(Ldaikon.PptSlice;)V
daikon.Quant:eltwiseGTE([I)Z
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
utilMDE.FuzzyFloat:gte(DD)Z
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:enabled()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.inv.unary.scalar.LowerBound:enabled()Z
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.inv.unary.stringsequence.EltOneOfString:runValue([Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.inv.binary.twoSequence.PairwiseIntEqual:PairwiseIntEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_esc()Ljava.lang.String;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.VarInfoName.Elements:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.inv.unary.stringsequence.EltOneOfString:format_simplify()Ljava.lang.String;
daikon.PptSlice1:num_samples()I
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual()V
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.VarInfo:domainTypeIOA()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.Quant:lexLT([I[I)Z
daikon.Quant:lte(II)Z
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltOneOf:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:isIOAArray()Z
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual(Ldaikon.PptSlice;)V
utilMDE.LimitedSizeIntSet:size()I
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
utilMDE.UtilMDE:escapeNonASCII(C)Ljava.lang.String;
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.Quant:lexEqual([I[I)Z
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.inv.unary.sequence.EltUpperBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.ProglangType:isPointerFileRep()Z
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.Quantify.Term:ioa_name()Ljava.lang.String;
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.inv.unary.stringsequence.SingleStringSequence:var()Ldaikon.VarInfo;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Assert:assertTrue(Z)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.Quant:subsetOf([F[F)Z
daikon.diff.Node:children()Ljava.util.Iterator;
jtb.JavaCharStream:getEndLine()I
daikon.ValueTuple:isMissingNonsensical(I)Z
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:baseIsIntegral()Z
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
utilMDE.WeakHasherMap:processQueue()V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
utilMDE.Intern:intern([D)[D
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.ValueTuple:isMissingFlow(I)Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.Quant:eq(FF)Z
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
utilMDE.Options.OptionInfo:argument_required()Z
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.unary.string.SingleString:SingleString(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:FuzzyFloat()V
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.inv.binary.twoScalar.IntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.sequence.EltOneOf:format_ioa()Ljava.lang.String;
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
utilMDE.UtilMDE.NullableStringComparator:compare(Ljava.lang.String;Ljava.lang.String;)I
daikon.Quant:eltsLteIndex([I)Z
utilMDE.MathMDE:pow_fast(II)I
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltOneOf:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltwiseEqual([I)Z
daikon.inv.unary.sequence.NoDuplicates:check_modified([JI)Ldaikon.inv.InvariantStatus;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
953 2 395 2 826 2 862 2 1192 2 1175 2 1137 4 858 2 1153 2 
100 2 31 2 494 6 1051 2 585 2 1181 2 853 6 857 2 347 6 211 2 545 2 
954 6 372 2 127 4 603 2 1175 2 981 6 221 2 1153 2 376 2 648 6 1035 6 698 2 124 4 
470 29 268 26 552 8 424 12 1195 10 766 10 606 2 850 8 1153 6 356 4 560 16 693 2 566 2 814 10 433 10 968 2 283 16 487 4 861 16 1175 6 243 2 983 8 625 8 945 2 590 6 1021 6 655 2 414 4 949 4 914 10 
1075 6 521 4 
88 2 
510 2 470 6 268 4 424 2 766 2 1195 2 812 2 560 2 1157 2 433 2 814 4 785 2 283 2 333 2 861 2 450 2 625 2 800 2 1021 2 414 2 756 2 757 2 914 2 
861 8 268 12 470 15 958 4 424 5 766 4 1195 4 942 4 519 6 356 2 560 8 433 4 1220 2 412 2 231 6 914 4 283 8 
847 10 548 2 1194 2 997 2 1152 2 605 14 1065 2 1235 6 1031 2 130 8 359 4 777 2 1239 2 1241 2 780 4 736 4 368 4 1042 4 137 2 822 4 701 62 393 4 63 2 371 2 895 2 622 2 401 4 624 4 73 2 408 2 1018 4 1132 2 1253 2 654 2 1257 4 947 10 1093 4 505 4 346 2 416 2 
45 2 511 2 844 2 514 2 1231 2 88 2 5 2 854 2 613 2 1133 2 
1192 2 269 2 604 2 275 2 968 2 886 2 532 2 982 2 624 2 195 2 678 2 196 4 990 2 114 2 544 2 685 2 466 2 549 2 1232 2 765 2 1153 4 385 2 130 2 1236 4 133 2 229 2 1164 2 783 4 699 2 63 2 703 2 394 2 238 2 581 2 1175 4 1014 2 1250 2 1187 2 1094 2 505 4 1097 2 657 2 258 2 264 2 
600 2 268 48 470 54 314 2 958 4 552 6 424 22 766 16 1195 16 1109 4 1153 4 519 6 559 6 560 32 1197 4 168 6 433 16 432 4 566 2 814 6 231 6 367 2 283 32 861 32 1008 4 25 4 397 8 1174 2 708 2 1175 4 942 4 625 18 904 6 590 4 113 6 591 2 1021 4 414 2 914 16 
371 2 1235 2 130 2 
160 2 621 2 676 10 426 2 1090 2 768 2 405 2 275 2 522 2 388 2 911 22 821 2 257 2 440 2 
515 3 960 2 353 4 961 2 354 2 166 2 167 1 169 2 1114 24 362 2 524 2 969 2 364 2 365 2 673 1 184 1 20 2 188 3 674 4 370 2 26 8 827 2 29 3 1119 1 374 2 191 2 1121 2 35 2 832 2 377 2 679 2 984 16 985 1 203 2 1134 2 39 2 210 2 1144 8 841 2 1145 2 994 1 44 12 380 2 1149 2 547 2 48 12 996 1 219 2 1153 34 1154 4 852 3 55 1 564 2 228 3 1163 2 1166 2 1168 2 232 1 234 4 858 2 570 2 859 2 571 2 391 2 62 2 240 2 1175 32 866 2 584 5 1016 3 74 1 712 2 598 1 260 2 83 2 265 2 1189 32 724 2 1026 2 89 2 1027 3 427 2 881 4 883 2 94 2 885 1 1202 2 616 16 1204 2 1203 2 1037 3 98 2 1207 3 1045 2 294 2 107 6 109 2 1218 2 626 2 751 2 903 2 456 2 112 4 755 2 457 2 906 2 907 2 299 6 460 6 303 2 306 2 305 2 1224 2 119 1 465 2 1059 6 1229 4 635 2 636 1 132 2 776 2 1237 4 639 2 327 2 641 3 481 2 136 2 1244 2 483 2 1245 8 1080 16 489 16 1246 2 1081 1 1086 3 1247 2 1088 2 645 2 492 2 795 3 798 1 502 32 151 2 653 24 344 2 1095 2 506 1 1099 2 351 2 
56 2 
192 2 1153 2 
554 2 1153 4 332 2 
717 2 1151 2 551 2 689 2 217 2 764 2 921 18 1067 2 611 2 429 2 856 2 889 2 734 2 782 2 737 2 330 2 932 2 529 2 331 2 19 2 823 2 976 2 705 2 980 2 938 2 141 2 142 2 1015 2 538 2 454 2 902 18 340 2 76 18 411 2 1185 2 909 2 682 2 212 2 546 2 840 2 656 2 1101 2 
171 2 1238 1 1024 2 1225 2 
341 2 1024 2 
96 2 1009 2 1024 2 518 2 130 2 487 2 407 2 
1009 2 1024 2 281 2 
1003 2 1009 2 1024 2 
171 2 53 2 749 2 
1009 2 1024 2 
1011 2 53 2 
1024 2 118 2 
171 2 53 2 274 2 
171 2 301 2 163 2 
171 2 781 2 110 2 
171 2 448 2 1126 2 
171 2 446 2 111 2 
1260 2 53 2 
28 2 1024 2 
934 2 163 2 
781 2 882 2 
1126 2 1079 2 
1085 2 111 2 
816 2 53 2 
971 2 111 2 
595 2 1126 2 
1252 2 781 2 
163 2 149 2 
171 2 53 2 274 2 1143 2 
171 2 884 2 53 2 274 2 1143 2 
171 2 302 2 53 2 
171 2 501 2 53 2 
1000 2 
1060 2 935 2 1228 2 513 2 644 2 792 2 516 2 428 2 855 2 905 2 1183 2 304 2 911 6 233 4 507 2 464 2 18 4 139 2 
171 2 556 2 
696 2 53 2 
986 2 697 2 518 2 130 2 
986 2 96 2 434 2 697 2 518 2 130 2 
1009 2 1024 2 518 2 130 2 487 2 1058 2 
1014 2 964 2 
681 2 518 2 130 2 487 2 
1126 2 157 2 
49 2 111 2 
7 2 163 2 
781 2 933 2 
781 2 1125 2 111 2 
781 2 111 2 813 2 
706 2 781 2 111 2 
778 2 781 2 111 2 
1192 2 848 2 518 2 130 2 75 2 
456 2 
809 2 960 6 353 4 961 2 167 4 969 2 364 2 181 2 20 1 975 2 370 2 674 4 374 1 1120 2 1121 2 191 2 35 2 679 2 984 6 1131 2 1134 2 39 2 210 2 1145 2 44 8 380 4 547 2 48 8 219 2 1153 26 234 4 858 2 571 2 391 2 62 2 1175 26 1178 2 879 2 260 2 83 2 265 2 1189 6 1026 2 881 2 94 2 439 4 620 2 1049 2 107 2 1216 2 109 2 751 2 112 2 906 2 299 6 907 2 460 2 303 2 465 2 1059 5 1229 2 919 2 635 2 315 4 1237 4 1073 2 481 2 784 2 1245 2 1081 2 1088 2 492 2 794 2 502 4 344 2 506 2 950 2 153 2 
809 2 960 6 353 4 961 2 167 2 969 2 364 2 181 2 20 2 975 2 674 4 370 2 374 2 1120 2 1121 2 191 2 35 2 679 2 984 6 1131 2 1134 2 39 2 210 2 1145 2 44 8 380 4 547 2 48 8 219 2 1153 26 1163 2 234 4 858 2 571 2 391 2 62 2 1175 26 1178 2 879 2 260 2 83 2 265 2 1189 6 1026 2 881 2 94 2 1040 2 439 4 107 2 1216 2 109 2 751 2 112 2 906 2 299 6 907 2 460 2 303 2 758 2 465 2 1059 6 1229 2 919 2 635 2 315 4 1237 4 1073 2 481 2 1245 2 1081 2 1088 2 492 2 794 2 496 2 502 4 344 2 506 2 950 2 153 2 
1028 2 375 2 
125 2 
718 2 423 2 517 2 165 2 353 2 276 2 1196 4 280 2 1115 2 818 2 739 4 973 2 743 2 100 4 370 2 674 2 373 4 900 2 35 2 1124 2 1051 2 991 2 299 4 300 2 115 2 461 8 205 2 210 2 1142 2 211 4 630 2 1227 8 918 4 999 2 219 2 1153 12 1156 2 853 6 774 2 1159 2 1160 4 1242 2 390 2 484 2 571 2 140 2 1088 2 1175 6 242 2 796 10 494 6 585 2 406 2 1254 2 802 2 1184 4 344 2 255 2 347 6 350 2 
718 2 423 2 517 2 353 2 276 2 1196 4 95 2 280 2 1115 2 818 2 739 4 973 2 100 4 370 2 674 2 373 4 900 2 35 2 1124 2 1051 2 991 2 299 4 300 2 115 2 461 8 205 2 210 2 1142 2 211 4 545 2 630 2 1227 8 918 4 999 2 219 2 1153 12 1156 2 853 8 774 2 1159 2 1160 4 1242 2 390 2 484 2 571 2 860 2 140 2 1088 2 1175 6 242 2 709 4 796 10 494 8 585 2 406 2 1254 2 802 2 1184 4 344 2 255 2 347 6 350 2 
718 2 100 2 140 2 918 4 242 2 517 2 494 2 280 2 991 2 1184 2 300 2 115 2 255 2 205 2 347 2 484 2 211 2 739 4 
718 2 423 2 517 2 165 2 353 2 276 2 1196 4 280 2 1115 2 818 2 739 4 973 2 743 2 100 4 370 2 674 2 373 4 900 2 35 2 1124 2 991 2 299 4 300 2 115 2 461 4 205 2 210 2 1142 2 211 4 545 2 630 2 1227 4 918 4 999 2 219 2 1153 12 1156 2 853 6 774 2 1159 2 1160 4 1242 2 390 2 484 2 571 2 140 2 1088 2 1175 6 242 2 796 6 494 6 585 2 406 2 1254 2 802 2 1184 4 344 2 255 2 347 4 350 2 
718 2 423 2 517 2 165 2 353 2 276 2 1196 4 280 2 1115 2 818 2 739 4 973 2 743 2 100 4 370 2 674 2 373 4 900 2 35 2 1124 2 991 2 299 4 300 2 115 2 461 4 205 2 210 2 1142 2 211 4 630 2 1227 4 918 4 999 2 219 2 1153 12 1156 2 853 6 774 2 1159 2 1160 4 1242 2 857 2 390 2 484 2 571 2 140 2 1088 2 1175 6 242 2 796 6 494 4 585 2 406 2 1254 2 802 2 1184 4 344 2 255 2 347 6 350 2 
718 2 423 2 517 2 165 2 353 2 276 2 1196 4 280 2 1115 2 818 2 739 4 973 2 743 2 100 4 370 2 674 2 373 4 900 2 35 2 1124 2 1051 2 991 2 299 4 300 2 115 2 461 4 205 2 210 2 1142 2 211 4 630 2 1227 8 918 4 999 2 219 2 1153 12 1156 2 853 6 774 2 1159 2 1160 4 1242 2 390 2 484 2 571 2 140 2 1088 2 1175 6 242 2 796 6 494 6 585 2 406 2 1254 2 802 2 1184 4 344 2 255 2 347 6 350 2 
718 2 423 2 517 2 165 2 353 2 276 2 1196 4 280 2 1115 2 818 2 739 4 973 2 743 2 100 4 370 2 674 2 373 4 900 2 35 2 1124 2 1051 2 991 2 299 4 300 2 115 2 461 8 205 2 210 2 1142 2 211 4 630 2 1227 8 918 4 999 2 219 2 1153 12 1156 2 853 8 774 2 1159 2 1160 4 1242 2 857 2 390 2 484 2 571 2 140 2 1088 2 1175 6 242 2 796 10 494 6 585 2 406 2 1254 2 802 2 1184 4 344 2 255 2 347 8 350 2 
718 2 423 2 517 2 165 2 353 2 276 2 1196 4 280 2 1115 2 818 2 739 4 973 2 743 2 100 4 370 2 674 2 373 4 900 2 35 2 1124 2 1051 2 991 2 299 4 300 2 115 2 461 8 205 2 210 2 1142 2 211 4 630 2 1227 8 918 4 999 2 219 2 1153 12 1156 2 853 6 774 2 1159 2 1160 4 1242 2 390 2 484 2 571 2 140 2 1088 2 1175 6 242 2 796 10 494 6 585 2 406 2 1254 2 802 2 1184 4 344 2 255 2 347 6 350 2 
960 6 4 8 353 4 961 2 962 1 967 2 364 2 671 2 17 2 973 2 20 2 370 2 674 4 373 8 979 1 374 2 35 2 984 6 991 2 40 1 39 2 44 4 48 4 999 2 690 2 56 6 695 2 390 4 391 2 69 4 710 10 400 6 406 2 713 6 415 6 83 2 718 2 722 6 423 2 94 2 1032 6 732 6 739 4 740 6 100 4 447 2 745 2 451 7 107 2 112 2 753 2 459 1 460 2 115 2 121 6 465 2 1059 6 471 2 474 2 774 4 1070 2 1073 2 481 2 482 2 484 2 140 2 490 2 1088 2 492 12 796 2 494 4 502 2 802 2 504 1 1096 2 803 1 811 2 517 2 165 2 1111 6 1112 2 174 2 1115 2 818 2 181 4 192 6 194 2 1124 2 1134 2 205 2 209 2 210 2 1139 7 1142 2 211 4 214 2 213 2 1145 2 1146 2 846 4 547 2 219 2 218 2 1153 46 557 6 1156 2 853 12 1159 2 1160 6 857 4 234 4 858 2 571 2 239 2 1175 24 242 2 585 4 588 1 1184 4 255 2 879 2 260 2 1189 8 602 2 881 2 272 2 1196 4 276 2 280 2 900 2 1216 2 906 2 299 6 907 2 300 2 630 2 310 2 1226 2 1227 2 918 4 1229 2 635 2 315 4 929 1 322 2 1237 4 1242 2 329 2 1245 2 332 6 336 6 646 1 338 2 343 2 650 6 1254 2 344 2 347 8 951 6 350 2 
811 2 4 8 960 6 517 2 165 2 353 4 961 2 1111 6 1112 2 967 2 174 2 1115 2 364 2 818 2 671 2 181 4 17 2 973 2 20 2 189 2 674 4 370 2 373 8 374 2 192 6 1122 2 194 2 35 2 1124 2 984 6 991 2 1134 2 39 2 205 2 209 2 210 2 211 4 1142 2 213 2 214 2 1145 2 1146 2 44 8 380 2 846 4 547 2 48 8 999 2 218 2 219 2 690 2 557 6 1153 48 1156 2 853 12 56 6 1159 2 695 2 1160 6 390 4 858 2 234 4 571 2 391 2 239 2 69 4 1175 26 400 6 710 10 242 2 585 4 406 2 713 6 1184 4 255 2 415 6 879 2 83 2 260 2 718 2 722 6 602 2 1189 8 423 2 272 2 881 4 276 2 1196 4 1032 6 94 2 732 6 280 2 739 4 740 6 100 4 447 2 745 2 900 2 107 2 1051 4 1216 2 753 2 112 4 906 2 907 2 299 6 300 2 115 2 460 2 121 6 630 2 310 2 465 2 1226 2 1059 6 1227 6 918 4 1229 4 471 2 315 4 635 2 474 2 322 2 774 4 1070 2 1237 4 1073 2 1242 2 482 2 481 2 329 2 484 2 1245 2 332 6 490 2 140 2 336 6 1088 2 492 12 796 2 494 8 338 2 343 2 502 2 650 6 1254 2 802 2 344 2 1096 2 347 8 951 6 350 2 
811 2 4 8 960 6 517 2 165 2 353 4 961 2 1111 6 1112 2 967 2 174 2 1115 2 364 2 818 2 671 2 181 4 17 2 973 2 20 2 189 2 370 2 674 4 373 8 374 2 192 6 1122 2 194 2 35 2 1124 2 984 6 991 2 1134 2 39 2 205 2 209 2 210 2 211 4 1142 2 213 2 214 2 1145 2 1146 2 44 8 380 2 846 4 547 2 48 8 999 2 218 2 219 2 690 2 557 6 1153 48 1156 2 853 12 56 6 1159 2 695 2 1160 6 390 4 858 2 234 4 571 2 391 2 239 2 69 4 1175 26 400 6 710 10 242 2 585 4 406 2 713 6 1184 4 255 2 415 6 879 2 83 2 260 2 718 2 722 6 602 2 1189 8 423 2 272 2 881 4 276 2 1196 4 1032 6 94 2 732 6 280 2 739 4 740 6 100 4 447 2 745 2 900 2 107 2 1051 4 1216 2 753 2 112 4 906 2 907 2 299 6 300 2 115 2 460 2 461 4 121 6 630 2 310 2 465 2 1226 2 1059 6 1227 6 918 4 1229 4 471 2 315 4 635 2 474 2 322 2 774 4 1070 2 1237 4 1073 2 1242 2 482 2 481 2 329 2 484 2 1245 2 332 6 490 2 140 2 336 6 1088 2 492 12 796 6 494 8 338 2 343 2 502 2 650 6 1254 2 802 2 344 2 1096 2 347 8 951 6 350 2 
960 8 4 8 353 4 961 2 360 2 967 2 364 2 671 2 17 2 973 2 20 2 674 4 370 2 373 8 374 2 35 2 984 8 991 2 37 6 39 2 44 10 380 2 48 10 999 2 382 6 690 2 56 12 695 2 390 4 391 2 69 4 400 6 710 8 406 2 713 6 415 12 83 2 718 2 722 6 423 2 94 2 1032 6 732 12 739 4 740 6 100 4 745 2 107 4 1051 4 455 6 753 2 112 4 461 4 460 4 115 2 121 6 465 2 1059 6 1062 6 471 2 772 2 474 2 774 4 1070 2 1073 2 481 2 482 2 484 2 140 2 490 2 1088 2 492 10 796 6 494 10 502 4 802 2 1096 2 811 2 517 2 165 2 1111 12 1112 2 174 2 1115 2 818 2 181 4 189 2 192 12 1122 2 193 2 194 2 1124 2 198 2 1134 2 543 6 205 2 209 2 210 2 1142 2 211 4 545 2 214 2 213 2 1145 2 1146 2 846 4 547 2 219 2 218 2 1153 52 557 6 1156 2 853 16 1159 2 1160 6 857 2 234 4 858 2 235 2 571 2 239 2 1175 24 242 2 1177 6 585 4 589 6 1184 4 255 2 879 4 260 2 1189 12 602 2 881 4 272 2 1196 4 276 2 280 2 887 6 285 2 900 2 1216 2 906 2 299 6 907 2 300 2 630 2 310 2 1226 2 1227 6 918 4 1229 4 635 2 315 6 316 2 322 2 1237 4 930 6 1242 2 329 2 1245 4 332 12 937 2 336 6 338 2 343 2 650 6 1254 2 344 2 347 10 951 6 350 2 
1227 6 718 2 918 2 423 2 517 2 165 2 1153 4 1156 2 1196 2 853 4 1159 2 1160 2 1115 2 1242 2 818 2 484 2 739 2 100 4 140 2 373 2 796 4 242 2 494 6 1051 2 1124 2 585 2 991 2 802 2 461 4 205 2 347 6 1142 2 211 4 630 2 350 2 
517 2 960 6 165 2 353 4 961 2 1113 2 1115 2 818 2 364 2 181 2 973 2 20 2 674 4 370 2 373 2 827 2 27 2 30 3 374 2 534 2 35 2 1124 2 984 6 1134 2 991 2 39 2 205 2 208 2 210 2 211 4 1142 2 1145 2 1149 2 547 2 219 2 1153 28 1156 2 853 4 564 2 1159 2 1160 2 234 4 858 2 571 2 391 2 1175 24 242 2 710 2 585 2 260 2 83 2 718 2 1189 8 423 2 1196 2 94 2 739 2 100 4 447 2 107 3 1051 2 1216 2 456 2 906 2 299 6 460 3 630 2 465 2 1059 6 1227 6 918 2 635 2 315 4 1237 4 1073 2 1242 2 481 2 484 2 140 2 1088 2 492 4 796 2 494 6 342 2 502 3 802 2 344 2 347 6 350 2 
1242 2 1124 2 148 2 
1242 2 1124 2 148 2 
1108 2 3 2 960 2 517 2 353 4 961 2 665 2 167 2 815 2 818 2 181 6 530 4 185 2 20 2 674 4 370 2 373 4 374 2 35 2 1124 4 984 2 1134 2 39 2 210 2 211 4 545 4 213 2 839 2 1145 2 44 4 846 2 547 2 48 4 999 2 219 2 1153 24 1156 2 853 16 1160 4 857 4 390 4 234 4 858 2 571 2 391 2 69 2 1175 16 710 2 1012 2 400 2 242 2 1178 4 585 4 406 2 868 2 1184 4 255 2 260 2 83 2 1189 2 881 4 1196 2 94 2 280 2 888 2 735 2 436 2 739 2 100 4 897 2 1051 4 1216 2 112 4 906 2 907 4 299 6 1222 2 461 4 1056 2 465 2 1059 6 1227 6 918 2 1229 4 635 2 774 2 1070 2 1237 4 1073 2 1242 6 481 2 485 2 140 4 791 4 1088 2 492 4 796 6 494 12 148 2 338 2 502 2 652 2 1254 2 1256 2 344 2 347 12 
1146 2 846 2 1211 2 219 2 1175 2 492 2 710 2 1012 2 400 2 375 2 1153 4 300 2 478 2 1056 2 875 2 671 2 485 2 
1108 2 3 2 960 2 517 2 353 4 961 2 665 2 818 2 181 6 530 4 185 2 20 2 674 4 370 2 373 4 374 2 35 2 1124 4 984 2 1134 2 39 2 210 2 211 4 545 4 213 2 839 2 1145 2 44 4 547 2 48 4 999 2 219 2 1153 24 1156 2 853 16 1160 4 857 4 390 4 234 4 858 2 571 2 391 2 69 2 1175 16 1012 2 400 2 242 2 1178 4 585 4 406 2 868 4 1184 4 255 2 260 2 83 2 1189 2 881 4 1196 2 94 2 614 2 280 2 888 2 735 2 436 2 739 2 444 2 100 4 897 2 900 2 1051 4 1216 2 112 4 906 2 907 4 299 6 908 2 461 4 1056 2 123 2 465 2 1059 6 1227 6 918 2 1229 4 635 2 774 4 1070 2 1237 4 1073 2 1242 6 481 2 485 2 936 2 140 4 791 4 1088 2 492 2 796 6 494 12 148 2 338 2 502 4 1254 2 344 2 347 12 
1108 2 3 2 960 2 517 2 353 4 961 2 665 2 167 1 818 2 181 6 530 4 185 2 20 2 674 4 370 2 373 4 374 2 35 2 1124 4 984 2 1134 2 39 2 210 2 211 4 545 4 213 2 839 2 1145 2 44 4 846 2 547 2 48 4 999 2 219 2 1153 24 1156 2 853 16 1160 4 857 4 390 4 234 4 858 2 571 2 391 2 576 2 69 2 1175 16 710 2 1012 2 400 2 242 2 1178 4 585 4 406 2 868 2 1184 4 255 2 260 2 83 2 263 2 1189 2 881 4 1196 2 94 2 280 2 888 2 735 2 436 2 739 2 894 2 100 4 897 2 900 2 1051 4 1216 2 112 4 906 2 907 4 299 6 461 4 1056 2 463 2 307 2 465 2 1059 6 1227 6 918 2 1229 4 635 2 774 4 1070 2 1237 4 1073 2 1242 6 481 2 485 2 140 4 791 4 1088 2 492 4 796 6 494 12 148 2 338 2 502 2 1254 2 344 2 347 12 
659 3 660 10 0 2 662 2 663 2 1 2 2 2 664 2 6 36 666 2 667 2 668 2 8 2 9 2 12 1 10 2 669 2 13 20 14 36 673 1 672 3 16 1 20 148 21 6 23 2 674 6 26 14 27 2 29 2 30 2 33 2 34 2 35 2 680 20 36 2 39 2 41 2 683 2 684 8 43 2 44 111 687 24 47 2 48 106 688 67 51 2 52 17 690 2 691 2 54 32 55 4 694 2 57 2 695 2 58 3 59 36 700 8 60 2 61 2 702 20 64 2 65 2 66 14 67 2 70 2 71 2 711 4 712 2 77 2 78 36 79 4 80 16 714 2 83 2 84 50 85 2 715 36 86 2 87 2 716 54 721 2 720 20 723 4 89 2 90 36 727 16 93 2 94 2 729 3 728 4 731 2 97 20 738 20 736 2 98 2 741 4 99 20 744 3 101 3 746 2 102 2 747 3 103 2 104 26 106 1 107 16 105 2 750 2 752 10 754 2 755 2 116 2 117 2 119 1 122 2 759 20 760 2 761 20 762 14 126 2 128 2 763 36 766 6 129 3 772 2 769 2 771 2 770 48 131 2 773 2 132 2 775 2 134 14 776 2 779 20 136 2 786 2 138 2 788 4 787 2 790 2 793 36 143 20 794 2 795 2 146 4 147 2 797 2 798 1 799 2 150 2 151 2 801 4 152 10 153 52 155 1 154 2 156 2 804 2 158 4 805 2 806 2 159 2 807 72 809 2 810 12 811 2 162 2 164 4 167 1 166 2 169 2 170 6 172 2 175 2 173 12 176 2 817 2 178 2 819 2 820 4 179 36 180 2 181 2 182 2 183 2 186 36 187 2 825 2 188 2 190 2 829 3 830 20 828 18 193 2 832 2 197 36 199 4 833 2 198 4 200 4 201 2 203 2 202 2 834 36 204 2 835 4 836 2 837 2 838 2 208 2 209 8 210 2 842 2 841 2 215 2 216 2 219 2 218 4 220 10 222 20 851 36 224 2 227 2 228 3 230 2 232 6 234 224 858 8 859 2 235 2 236 2 861 12 237 2 863 2 239 2 240 2 864 2 244 2 245 8 865 2 246 1 866 2 247 2 248 2 249 92 250 50 870 10 251 2 252 2 253 10 871 72 254 16 872 18 874 50 877 2 876 3 878 2 256 3 879 46 260 2 262 1 880 2 266 2 267 2 268 18 271 36 273 2 883 2 885 1 278 16 277 7 890 4 282 2 283 12 284 2 285 2 892 2 286 2 893 2 288 3 896 4 290 2 291 2 898 4 899 2 901 2 295 10 903 2 297 4 298 18 906 2 907 10 299 8 306 2 305 2 912 2 308 4 913 2 915 16 914 6 917 20 310 2 311 36 312 18 919 2 314 2 315 12 920 2 922 36 316 2 317 2 318 6 923 52 319 20 925 2 927 72 926 16 928 2 323 36 324 2 325 2 326 36 327 2 328 8 931 2 334 2 335 2 337 4 939 2 940 2 941 2 942 4 944 3 342 2 946 48 344 2 948 4 950 2 349 2 351 2 352 4 956 10 957 16 959 2 960 14 353 6 961 2 355 2 357 36 358 1 359 2 360 2 970 16 364 2 972 20 365 2 367 4 369 4 368 2 974 3 975 2 977 16 370 2 374 146 377 2 984 26 987 2 988 16 989 66 378 2 379 36 992 36 994 1 995 18 998 2 381 30 383 3 384 10 1002 2 387 2 391 2 1004 36 392 2 1005 2 1007 2 1008 4 397 8 396 2 1010 2 401 2 1013 2 402 2 404 2 403 2 1016 2 409 16 1017 2 410 2 1019 2 1022 48 1023 18 413 4 417 2 419 2 420 3 421 2 422 24 425 3 424 10 1025 2 1027 2 1030 4 430 36 1033 260 431 2 433 6 1036 2 1037 2 1038 2 435 2 1039 2 438 2 1041 2 1043 4 1044 20 1045 5 445 2 1046 2 1047 2 449 2 1048 3 1052 4 452 4 457 2 1054 4 1053 92 458 20 460 46 1055 2 1057 4 465 2 467 36 1059 516 1061 24 468 32 469 2 470 21 1063 8 1064 2 1066 2 473 2 474 8 1071 16 475 36 477 36 1072 4 1074 2 481 8 1076 4 486 6 1077 80 1078 4 488 4 489 14 1080 56 1081 3 1083 2 1082 2 490 2 1084 3 1086 3 1088 2 493 16 492 4 498 2 499 16 1092 2 500 6 502 68 503 2 1095 5 1093 2 1096 2 506 2 1098 2 509 3 508 52 1102 3 1103 2 1105 4 1104 4 1106 2 515 2 1107 92 1110 2 519 6 520 2 1112 2 1114 22 524 2 1116 1 525 2 526 2 528 2 1118 20 533 72 534 2 535 2 1120 2 1123 3 537 4 1129 2 1130 20 1131 2 1134 40 1136 2 1140 16 1144 14 1145 40 547 2 1148 2 1150 16 550 1 552 6 555 6 553 102 1153 579 1154 14 1155 36 559 6 561 6 560 12 562 36 563 3 1158 66 565 16 566 2 567 16 1162 20 1166 2 1169 2 570 2 571 2 574 4 575 2 572 2 578 20 577 2 1171 6 579 2 580 2 582 36 1175 464 1179 2 1180 16 587 20 590 4 592 36 594 2 597 2 596 2 601 2 1189 86 602 2 1193 52 1191 3 1190 2 1195 6 608 2 609 2 610 2 1198 2 612 2 1200 2 1201 39 616 32 615 4 1203 2 1205 1 1206 72 617 6 618 28 1208 4 1209 2 619 3 623 36 1213 2 1216 2 1218 7 625 6 1221 2 1223 2 627 6 628 2 629 2 1224 2 632 1 631 2 633 2 634 2 1230 16 1233 3 635 4 1234 2 638 1 637 6 1237 188 1240 72 640 16 1243 2 641 2 1244 2 1245 58 643 2 1247 2 645 2 647 2 1249 2 1251 14 649 24 651 14 653 15 1255 7 1259 2 1261 2 658 2 
601 2 1189 2 1191 2 315 2 960 2 1153 2 355 2 384 2 176 2 364 2 1170 2 64 2 1046 2 103 2 1213 2 70 2 1175 2 107 2 984 2 752 2 502 2 460 2 152 4 879 6 
601 2 1189 2 1191 2 315 2 960 2 1153 2 355 2 384 2 176 2 364 2 1170 2 64 2 1046 2 103 2 1213 2 70 2 1175 2 107 2 984 2 752 2 502 2 460 2 152 4 879 6 
601 2 1189 2 1191 2 315 2 960 2 1153 2 355 2 384 2 176 2 364 2 1170 2 64 2 1046 2 103 2 1213 2 70 2 1175 2 107 2 984 2 752 2 502 2 460 2 152 4 879 6 
512 2 720 4 1061 3 1189 2 470 4 268 4 808 2 552 4 810 2 766 2 1195 2 553 6 1153 10 560 2 386 4 433 2 616 2 364 2 366 2 283 2 1080 2 861 2 707 2 830 4 143 4 1213 2 32 2 1175 4 1215 2 898 2 1127 2 502 3 590 2 649 3 593 2 460 3 1258 3 1188 2 914 2 761 4 
512 2 720 4 1189 2 808 2 268 4 810 2 424 2 1195 2 433 2 616 2 364 2 366 2 283 2 830 4 32 2 1213 2 898 2 1215 2 1127 2 625 2 460 2 914 2 761 4 1061 2 470 4 552 4 553 6 766 2 1153 10 560 2 386 4 566 2 1080 2 861 2 707 2 1175 4 143 4 590 2 502 2 649 2 593 2 1258 2 1188 2 
512 2 720 4 1189 2 808 2 268 4 810 2 424 2 1195 2 433 2 616 2 364 2 366 2 283 2 830 4 32 2 1213 2 898 2 1215 2 1127 2 625 2 460 2 914 2 761 4 1061 2 470 4 552 4 553 6 766 2 1153 10 560 2 386 4 566 2 1080 2 861 2 707 2 1175 4 143 4 590 2 502 2 649 2 593 2 1258 2 1188 2 
512 2 720 4 1189 2 808 2 268 4 810 2 424 2 1195 2 433 2 616 2 364 2 366 2 283 2 830 4 32 2 1213 2 898 2 1215 2 1127 2 625 2 460 2 914 2 761 4 1061 2 470 4 552 4 553 6 766 2 1153 10 560 2 386 4 566 2 1080 2 861 2 707 2 1175 4 143 4 590 2 502 2 649 2 593 2 1258 2 1188 2 
512 2 720 4 1189 2 808 2 268 4 810 2 424 4 1195 2 433 2 616 2 364 2 366 2 283 2 830 4 32 2 1213 2 898 2 1215 2 1127 2 625 4 460 2 914 2 761 4 1061 2 470 4 552 4 553 6 766 2 1153 10 560 2 386 4 566 4 1080 2 861 2 707 2 1175 4 143 4 590 2 502 2 649 2 593 2 1258 2 1188 2 
476 2 835 2 68 2 491 2 767 2 1069 2 
476 2 1020 2 1167 2 1138 2 1179 2 153 2 558 2 
1147 1 719 2 1153 10 1068 2 361 1 279 2 732 2 135 1 1006 2 531 2 370 2 1172 2 398 2 622 1 1175 8 1214 2 583 2 1182 2 1219 2 1253 1 38 2 1186 2 207 2 916 2 261 2 418 2 
352 2 1232 2 470 15 268 12 552 4 424 5 1195 6 766 6 1153 6 519 4 924 2 559 4 560 6 433 6 566 2 283 6 861 6 1008 2 397 2 1174 1 1175 6 34 2 831 2 942 2 105 2 678 2 625 3 202 2 410 2 590 2 914 6 
845 2 720 2 1210 2 830 2 289 2 143 2 1176 2 223 2 1217 2 296 2 1199 2 308 2 642 2 
845 2 720 2 1210 2 830 2 289 6 1175 1 143 2 748 2 1176 2 223 2 1153 1 495 2 1217 2 296 4 1199 2 308 2 437 1 642 2 
845 4 720 2 1210 2 830 2 289 6 143 2 748 2 1176 2 223 4 495 2 1217 2 296 4 1199 2 308 4 642 2 
845 8 720 2 1210 2 830 2 289 10 1175 1 143 2 748 6 1176 2 223 8 1153 1 495 8 1217 2 296 4 1199 2 308 8 437 1 642 2 
659 2 956 4 957 4 807 10 1107 30 161 32 963 4 6 4 357 4 167 2 965 2 970 4 14 4 528 2 187 2 186 4 20 28 824 16 675 1 1117 10 533 10 374 26 677 8 197 4 540 2 988 4 1134 6 542 2 379 4 992 4 993 2 42 2 686 4 1145 6 44 16 50 4 555 5 52 8 1153 78 851 4 1155 4 692 8 225 4 562 4 569 2 389 8 234 44 59 4 573 2 1004 4 582 4 1175 70 1180 4 711 4 867 2 249 24 250 14 78 4 592 4 871 6 81 2 597 2 715 16 420 2 90 6 271 4 607 10 92 2 727 4 1033 24 430 4 730 2 278 4 1201 6 1206 10 442 4 287 4 619 4 623 4 1048 2 292 10 293 2 1053 24 627 2 1059 102 311 8 467 4 1230 4 635 2 1064 2 763 8 922 4 926 4 927 10 321 16 323 4 1237 36 477 4 1240 11 640 4 326 4 480 2 1077 8 1078 4 793 4 1248 8 145 4 1089 2 499 4 497 2 
956 4 1193 2 807 6 725 2 1107 6 726 2 90 2 271 2 92 2 6 2 357 4 167 2 1033 8 430 2 965 2 729 2 730 2 1201 4 1206 6 528 2 187 2 186 2 20 12 443 2 744 2 619 2 829 2 533 6 374 12 623 4 197 4 542 2 1134 2 627 2 992 4 1145 2 44 14 1059 40 688 10 1064 2 635 2 52 6 318 2 1153 28 927 2 1237 14 1240 2 234 14 573 2 1004 4 1078 2 1171 2 582 4 1175 26 711 2 1255 2 871 2 81 2 1100 2 
659 4 661 24 955 10 956 8 957 4 807 16 1107 34 357 6 6 10 167 4 523 6 970 4 670 4 527 4 14 6 179 24 528 8 186 10 187 8 20 58 24 10 829 2 533 16 374 58 1123 2 197 6 1128 18 988 4 834 24 1134 14 542 2 379 6 992 6 1141 2 42 2 1145 14 843 26 44 28 46 8 688 22 555 5 52 15 849 90 1153 150 851 6 1155 6 226 4 562 6 568 4 1161 10 234 112 59 6 573 2 1004 6 1171 11 704 24 1173 12 582 6 1175 134 72 4 1180 4 711 4 249 92 250 12 78 6 592 6 871 36 81 2 259 4 715 42 420 2 1193 4 725 2 270 90 271 10 90 10 92 2 91 4 1029 8 727 4 430 10 1033 124 729 2 730 2 278 4 1201 8 1206 16 738 2 443 2 744 2 619 6 623 6 1048 2 1050 2 108 26 1053 84 627 4 1059 248 311 24 467 6 1230 4 635 8 1064 8 763 42 922 6 318 4 927 18 926 4 323 6 1237 88 475 6 477 6 1240 16 640 4 326 6 1077 50 1078 4 1087 2 793 6 144 24 1089 2 943 4 499 4 1091 4 1255 7 1100 2 952 8 
661 2 955 2 807 4 271 2 90 2 726 2 607 2 92 2 6 2 357 2 167 2 430 2 1033 6 965 2 966 2 730 2 177 2 1201 6 363 2 733 2 1206 4 15 2 528 2 891 2 186 2 742 4 441 2 187 2 20 6 22 2 24 2 1117 2 619 2 978 2 533 4 374 6 1212 2 623 2 292 2 293 2 536 2 453 2 452 4 197 2 539 2 541 2 542 2 1134 2 1135 2 910 2 462 2 992 2 120 4 993 2 309 2 1145 2 44 36 1059 48 313 2 635 2 1064 2 1001 2 472 2 923 6 1153 46 927 2 320 2 1237 20 568 2 1161 2 1240 2 479 2 234 20 573 2 1004 2 704 2 789 2 399 2 582 2 1175 44 144 2 586 2 339 4 871 2 345 2 873 2 81 2 348 2 1100 2 599 2 952 2 
241 2 
869 1 11 1 206 1 1165 1 82 1 1034 1 
869 1 11 1 206 1 1165 1 82 1 1034 1 
869 1 11 1 206 1 1165 1 82 1 1034 1 
869 1 11 1 206 1 1165 1 82 1 1034 1 
869 1 11 1 206 1 1165 1 82 1 1034 1 
869 1 11 1 206 1 1165 1 82 1 1034 1 
869 1 11 1 206 1 1165 1 82 1 1034 1 
869 1 11 1 206 1 1165 1 82 1 1034 1 
869 1 11 1 206 1 1165 1 82 1 1034 1 
869 1 11 1 206 1 1165 1 82 1 1034 1 
869 1 11 1 206 1 1165 1 82 1 1034 1 
869 1 11 1 206 1 1165 1 82 1 1034 1 
869 1 11 1 206 1 1165 1 82 1 1034 1 
869 1 11 1 206 1 1165 1 82 1 1034 1 
869 1 11 1 206 1 1165 1 82 1 1034 1 
869 1 11 1 206 1 1165 1 82 1 1034 1 
869 1 11 1 206 1 1165 1 82 1 1034 1 
869 1 11 1 206 1 1165 1 82 1 1034 1 
869 1 11 1 206 1 1165 1 82 1 1034 1 
869 1 11 1 206 1 1165 1 82 1 1034 1 
869 1 11 1 206 1 1165 1 82 1 1034 1 
869 1 11 1 206 1 1165 1 82 1 1034 1 
869 1 11 1 206 1 1165 1 82 1 1034 1 
869 1 11 1 206 1 1165 1 82 1 1034 1 
869 1 11 1 206 1 1165 1 82 1 1034 1 
869 1 11 1 206 1 1165 1 82 1 1034 1 
869 1 11 1 206 1 1165 1 82 1 1034 1 
869 1 11 1 206 1 1165 1 82 1 1034 1 
869 1 11 1 206 1 1165 1 82 1 1034 1 
869 1 11 1 206 1 1165 1 82 1 1034 1 
869 1 11 1 206 1 1165 1 82 1 1034 1 
869 1 11 1 206 1 1165 1 82 1 1034 1 
869 1 11 1 206 1 1165 1 82 1 1034 1 
869 1 11 1 206 1 1165 1 82 1 1034 1 
869 1 11 1 206 1 1165 1 82 1 1034 1 
869 1 11 1 206 1 1165 1 82 1 1034 1 
869 1 11 1 206 1 1165 1 82 1 1034 1 
869 1 11 1 206 1 1165 1 82 1 1034 1 
869 1 11 1 206 1 1165 1 82 1 1034 1 
869 1 11 1 206 1 1165 1 82 1 1034 1 
869 1 11 1 206 1 1165 1 82 1 1034 1 
869 1 11 1 206 1 1165 1 82 1 1034 1 
869 1 11 1 206 1 1165 1 82 1 1034 1 
869 1 11 1 206 1 1165 1 82 1 1034 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 1078 418 432 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 265 520 1142 692 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 265 520 1142 692 
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 265 520 1142 692 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 1026 4 579 520 1142 692 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.JavaParser:jj_3_1()Z | CONDITION | 171435 | if (x) -> if (!x)
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.ProglangType:baseIsFloat()Z
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.Quant:setEqual([I[I)Z
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice1:arity()I
daikon.Quantify:get_flags(Z)Ljava.util.EnumSet;
daikon.diff.Node:Node(LutilMDE.Pair;)V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.Quant:slice([III)[I
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.inv.unary.sequence.EltNonZero:EltNonZero(Ldaikon.PptSlice;)V
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.ValueTuple:isMissingFlow(I)Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:enabled()Z
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;Ldaikon.VarInfo;)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.diff.Node:Node()V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.EltUpperBound:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.Quantify.ESCQuantification:ESCQuantification(Ljava.util.EnumSet;[Ldaikon.VarInfo;)V
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.Quant:eq(II)Z
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
daikon.diff.InvMap:InvMap()V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
utilMDE.ArraysMDE:subarray([JII)[J
daikon.VarInfo:isIOAArray()Z
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfo:get_base_array_hashcode()Ldaikon.VarInfo;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.inv.unary.sequence.EltOneOf:format_daikon()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltsLTE([II)Z
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.Quant:eq(FF)Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.sequence.EltOneOf:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarComparabilityNone:elementType()Ldaikon.VarComparability;
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.inv.unary.sequence.EltNonZero:format_esc()Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.inv.unary.sequence.EltOneOf:is_boolean()Z
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:sum([I)I
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.inv.unary.sequence.EltLowerBound:format_simplify()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarComparabilityImplicit:alwaysComparable()Z
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltsLT([II)Z
daikon.diff.DetailedStatisticsVisitor:freq(II)D
utilMDE.OrderedPairIterator:setnext2()V
daikon.inv.unary.string.OneOfString:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltOneOf:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant:justified()Z
daikon.Ppt:indexOf(Ljava.lang.String;)I
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.Quantify.Term:ioa_name()Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfo:get_all_simple_names()Ljava.util.List;
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
jtb.JavaParser:jj_3R_50()Z
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.unary.stringsequence.EltOneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.Quant:lexLTE([I[I)Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_52()Z
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.VarInfo:jml_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.Quant:eltwiseNotEqual([I)Z
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_2_1(I)Z
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.Quant:eltwiseGTE([I)Z
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.Quantify.IOAQuantification:getQuantifierExp()Ljava.lang.String;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_daikon()Ljava.lang.String;
daikon.inv.unary.string.OneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
utilMDE.ArraysMDE:noDuplicates([I)Z
utilMDE.ArraysMDE:indexOf([ZZ)I
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.PptTopLevel:name()Ljava.lang.String;
jtb.JavaCharStream:UpdateLineColumn(C)V
utilMDE.WeakHasherMap.EntrySet:size()I
jtb.JavaParser:jj_scan_token(I)Z
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.inv.unary.sequence.EltwiseIntLessThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.unary.stringsequence.EltOneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:gt(DD)Z
daikon.VarInfoName:name()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.string.OneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.Quant:intersection([I[I)[I
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.Quant:ne(II)Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.Quantify.IOAQuantification:getVarIndexedString(I)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
utilMDE.ArraysMDE:min_max([I)[I
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.Quant:eltsLtIndex([I)Z
jtb.JavaCharStream:getEndColumn()I
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.inv.unary.string.OneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ValueTuple:size()I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.inv.unary.sequence.EltUpperBound:format_esc()Ljava.lang.String;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.Intern:numIntArrays()I
daikon.inv.unary.sequence.EltwiseIntLessThan:EltwiseIntLessThan(Ldaikon.PptSlice;)V
daikon.Quant:subsetOf([F[D)Z
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltsLteIndex([I)Z
utilMDE.Options.OptionInfo:argument_required()Z
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:subarray([III)[I
daikon.inv.Invariant:prob_and(DDD)D
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.unary.sequence.EltOneOf:subarray_rep()Ljava.lang.String;
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltNonZero:enabled()Z
daikon.Quant:eltsGTE([II)Z
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaCharStream:getEndLine()I
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
utilMDE.MathMDE:mod_positive(JJ)J
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual(Ldaikon.PptSlice;)V
daikon.Quantify.IOAQuantification:getFreeVarName(I)Ljava.lang.String;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.ProglangType:isArray()Z
utilMDE.ArraysMDE:sum([[D)D
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
utilMDE.Intern:intern([I)[I
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
jtb.JavaParser:jj_3R_48()Z
daikon.inv.unary.sequence.EltwiseIntLessThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.string.OneOfString:format_esc()Ljava.lang.String;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfo:isIOASet()Z
daikon.inv.unary.stringsequence.SingleStringSequence:var()Ldaikon.VarInfo;
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName; | ASSIGN | 63682 | = null
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.Quant:subsetOf([J[J)Z
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.VarInfo:isPrestate()Z
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
jtb.JavaCharStream:getBeginColumn()I
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.inv.Invariants:Invariants()V
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.Quant:eltsNotEqual([II)Z
daikon.Quant:memberOf(I[I)Z
daikon.VarInfo:domainTypeIOA()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.stringsequence.SingleStringSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.NoDuplicates:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.LimitedSizeIntSet:size()I
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.Quant:pairwiseEqual([I[I)Z
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.ModBitTracker:num_vars()I
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.inv.unary.string.OneOfString:format_simplify()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
utilMDE.Assert:assertTrue(Z)V
daikon.ProglangType:isIntegral()Z
utilMDE.MathMDE:gcd([I)I
utilMDE.Intern:intern([D)[D
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
utilMDE.MathMDE:modulus([I)[I
daikon.inv.unary.sequence.EltUpperBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.Quantify.Constant:Constant(I)V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.inv.unary.string.OneOfString:add_modified(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.PptSlice0:arity()I
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
jtb.syntaxtree.NodeToken:trimSpecials()V
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.VarInfo:simplify_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.Quantify.IOAQuantification:IOAQuantification([Ldaikon.VarInfo;)V
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_ioa()Ljava.lang.String;
utilMDE.ArraysMDE:sum([[I)I
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan()V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.inv.unary.sequence.EltUpperBound:format_daikon()Ljava.lang.String;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.Quantify.SimplifyQuantification:SimplifyQuantification(Ljava.util.EnumSet;[Ldaikon.VarInfo;)V
daikon.Quant:sameLength([I[I)Z
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.Quantify.SimplifyQuantification:get_quantification()Ljava.lang.String;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.Quant:eltsEqualIndex([I)Z
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.inv.unary.sequence.EltNonZero:format_daikon()Ljava.lang.String;
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
utilMDE.UtilMDE:escapeNonASCII(C)Ljava.lang.String;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ProglangType:baseIsIntegral()Z
utilMDE.OrderedPairIterator:hasNext()Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
utilMDE.Intern:internSubsequence([JII)[J
daikon.ModBitTracker:split(I)I
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_daikon()Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntComparison:EltwiseIntComparison(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.UtilMDE:escapeNonASCII(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.TestQuant:removeAdjacentDups([I)[I
jtb.JavaParser:generateParseException()Ljtb.ParseException;
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.Debug:logOn()Z
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfo:old_var_names(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_simplify()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:format_ioa()Ljava.lang.String;
daikon.VarInfo:is_typeof()Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.VarInfo:relate_var()V
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.test.InvariantFormatTester:execute()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
utilMDE.ArraysMDE:max([I)I
daikon.Quant:eq(DD)Z
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.Quant:concat([I[I)[I
daikon.inv.unary.stringsequence.EltOneOfString:enabled()Z
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quantify.QuantFlags:include_index()Ljava.util.EnumSet;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Ppt:Ppt()V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.string.OneOfString:format_daikon()Ljava.lang.String;
daikon.Quantify.IOAQuantification:getMembershipRestriction(I)Ljava.lang.String;
utilMDE.Intern:intern([J)[J
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_ioa()Ljava.lang.String;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.VarInfoName:simplify_name()Ljava.lang.String;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quantify.ESCQuantification:bld_quant(Ldaikon.VarInfo;Ldaikon.Quantify.Term;)Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:baseIsString()Z
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltNonZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.string.SingleString:valid_types([Ldaikon.VarInfo;)Z
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.Quantify.IOAQuantification:getClosingExp()Ljava.lang.String;
daikon.Quantify.Length:simplify_name()Ljava.lang.String;
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_ioa()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.VarInfo:apply_subscript(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:subsetOf([S[S)Z
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:wouldChange(J)Z
utilMDE.FuzzyFloat:eq(DD)Z
daikon.Quant:subsetOf([F[F)Z
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.inv.OutputFormat:isJavaFamily()Z
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:processQueue()V
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:enabled()Z
daikon.inv.unary.stringsequence.EltOneOfString:sort_rep()V
daikon.Quant:eltsGT([II)Z
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.Quant:lexEqual([I[I)Z
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
utilMDE.ArraysMDE:min([I)I
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.inv.Invariant:logOn()Z
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.ValueSet.ValueSetStringArray:ValueSetStringArray(I)V
daikon.ModBitTracker:ModBitTracker(I)V
daikon.Quant:subsetOf([B[I)Z
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.ProglangType:baseIsScalar()Z
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.inv.unary.string.OneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
jtb.JavaParser:jj_3R_53()Z
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.VarInfoAux:hashCode()I
daikon.Quant:memberOf(S[S)Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual()V
daikon.Debug:logDetail()Z
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:format_simplify()Ljava.lang.String;
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.inv.Invariant:prob_and(DD)D
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.inv.unary.sequence.EltwiseIntLessThan:enabled()Z
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.Quant:noDups([I)Z
utilMDE.ArraysMDE:indexOf([II)I
daikon.Quantify.QuantFlags:distinct()Ljava.util.EnumSet;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.Quantify.Length:esc_name()Ljava.lang.String;
utilMDE.FuzzyFloat:ne(DD)Z
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:pairwiseDivides([I[I)Z
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.string.SingleString:SingleString(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltUpperBound:format_simplify()Ljava.lang.String;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.inv.Invariant:prob_or(DD)D
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.inv.unary.stringsequence.EltOneOfString:add_modified([Ljava.lang.String;I)Ldaikon.inv.InvariantStatus; | RETURN | 14435 | return null
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.Quantify.Constant:name()Ljava.lang.String;
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
jtb.JavaCharStream:readChar()C
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.ParseException:getMessage()Ljava.lang.String;
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.inv.unary.sequence.EltOneOf:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltOneOf:sort_rep()V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.inv.unary.LowerBoundCore:calc_modulus()J
utilMDE.MathMDE:gcd_differences([I)I
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.inv.unary.sequence.EltwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.Quant:memberOf(D[F)Z
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.stringsequence.EltOneOfString:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.string.OneOfString:format_ioa()Ljava.lang.String;
daikon.PptSlice0:initInvariantsSeen()V
daikon.Quant:lexGT([I[I)Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:gt(II)Z
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:lt(DD)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.VarInfo:is_direct_non_slice_array()Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.sequence.NoDuplicates:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaCharStream:ReadByte()C
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.inv.unary.string.OneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.inv.unary.sequence.EltOneOf:format_esc()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.inv.unary.stringsequence.EltOneOfString:subarray_rep()Ljava.lang.String;
daikon.VarInfo:has_typeof()Z
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.Token:newToken(I)Ljtb.Token;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.VarInfo:java_name()Ljava.lang.String;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:sorted([I)Z
daikon.Quantify.SimplifyQuantification:get_closer()Ljava.lang.String;
jtb.JavaParser:jj_3R_49()Z
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.Quant:memberOf(F[F)Z
daikon.inv.unary.scalar.Positive:enabled()Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:mod_positive(II)I
daikon.PptName:isEnterPoint()Z
daikon.inv.unary.sequence.EltOneOf:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
daikon.Quantify.FreeVar:name()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfo:get_array_var()Ldaikon.VarInfo;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.inv.unary.string.OneOfString:is_type()Z
daikon.inv.unary.sequence.NoDuplicates:NoDuplicates(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:InvariantFilters()V
utilMDE.MathMDE:gcd(II)I
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.inv.unary.sequence.EltUpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_esc()Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.VarInfo:get_enclosing_var()Ldaikon.VarInfo;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.inv.unary.string.OneOfString:sort_rep()V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.ProglangType:isString()Z
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:eltwiseEqual([I)Z
daikon.Quant:lte(II)Z
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.inv.unary.string.SingleString:var()Ldaikon.VarInfo;
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan(Ldaikon.PptSlice;)V
daikon.Quant:setDiff([I[I)[I
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.VarInfo:get_base_array()Ldaikon.VarInfo;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
utilMDE.ArraysMDE:concat([I[I)[I
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.ValueSet.ValueSetString:ValueSetString(I)V
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.Quant:eq(JJ)Z
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.Quant:pairwiseLTE([I[I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.ProglangType:isPseudoArray()Z
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:check_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.VarInfo:esc_name(Ljava.lang.String;)Ljava.lang.String;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
utilMDE.FuzzyFloat:gte(DD)Z
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.inv.unary.sequence.NoDuplicates:format_ioa()Ljava.lang.String;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.ProglangType:dimensions()I
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
jtb.ParseException:ParseException(Ljava.lang.String;)V
jtb.JavaCharStream:backup(I)V
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.Quantify.QuantifyReturn:QuantifyReturn(Ldaikon.VarInfo;)V
daikon.VarInfo:jml_name()Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3_16()Z
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.inv.unary.sequence.EltOneOf:is_hashcode()Z
daikon.Quant:subsetOf([D[F)Z
daikon.PptName:isCombinedExitPoint()Z
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
jtb.JavaParser:jj_ntk()I
daikon.ProglangType:isFloat()Z
utilMDE.LimitedSizeIntSet:add(I)V
daikon.Quantify.Term:name_with_offset(Ljava.lang.String;I)Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext1()V
daikon.inv.unary.UpperBoundCore:calc_range()J
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.inv.unary.sequence.EltUpperBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.RootNode:RootNode()V
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
daikon.VarInfo:esc_name()Ljava.lang.String;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.VarInfo:get_lower_bound()Ldaikon.Quantify.Term;
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.Quant:pairwiseSquare([I[I)Z
daikon.VarInfo:isDerivedSubSequenceOf()Ldaikon.VarInfo;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfo:name()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
utilMDE.MathMDE:sign(I)I
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:lt(II)Z
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.inv.unary.sequence.EltUpperBound:format_ioa()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.inv.unary.sequence.EltNonZero:is_pointer()Z
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:union([I[I)[I
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.PptTopLevel.CondIterator:hasNext()Z
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.ModBitTracker:num_sets()I
daikon.Quantify.Term:esc_name()Ljava.lang.String;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.inv.Invariant:prob_is_ge(DD)D
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.Quantify:quantify([Ldaikon.VarInfo;)[Ldaikon.Quantify.QuantifyReturn;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.diff.InvMap:toString()Ljava.lang.String;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfo:get_upper_bound()Ldaikon.Quantify.Term;
daikon.inv.unary.sequence.NoDuplicates:get_proto()Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.inv.unary.sequence.EltOneOf:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.VarInfo:isDerived()Z
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.Quant:eltsGteIndex([I)Z
daikon.Quantify.SimplifyQuantification:get_index(I)Ljava.lang.String;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.Quant:subsetOf([I[I)Z
daikon.Quantify.IOAQuantification:getFreeVar(I)Ldaikon.Quantify.Term;
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
utilMDE.FuzzyFloat:lte(DD)Z
daikon.ModBitTracker:num_samples()I
daikon.inv.unary.string.OneOfString:enabled()Z
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltOneOf:format_simplify()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.Quant:isReverse([I[I)Z
daikon.Quant:lexNotEqual([I[I)Z
utilMDE.ArraysMDE:element_range([I)I
utilMDE.Intern:internSubsequence([III)[I
daikon.Quant:pairwiseGT([I[I)Z
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.Quantify.SimplifyQuantification:get_arr_vars_indexed(I)Ljava.lang.String;
daikon.ProglangType:base()Ljava.lang.String;
jtb.JavaCharStream:FillBuff()V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
utilMDE.MathMDE:missing_numbers([I)[I
daikon.Quant:eltwiseLTE([I)Z
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quantify.ESCQuantification:get_quantification()Ljava.lang.String;
daikon.Quant:eltwiseLT([I)Z
daikon.inv.Invariant:simplify_format_string(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfo:simplify_quantify(Ljava.util.EnumSet;[Ldaikon.VarInfo;)[Ljava.lang.String;
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:format_daikon()Ljava.lang.String;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.Quantify.ESCQuantification:get_arr_vars_indexed(I)Ljava.lang.String;
jtb.JavaParser:jj_3R_51()Z
utilMDE.MathMDE:gcd(JJ)J
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.ProglangType:isPointerFileRep()Z
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.VarComparabilityNone:comparable(Ldaikon.VarComparabilityNone;Ldaikon.VarComparabilityNone;)Z
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.inv.unary.sequence.EltNonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.ValueSet:ValueSet(I)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
jtb.JavaParser:jj_2_16(I)Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
utilMDE.MathMDE:negate(I)I
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:enabled()Z
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_esc()Ljava.lang.String;
daikon.inv.unary.string.OneOfString:OneOfString(Ldaikon.PptSlice;)V
daikon.ValueTuple:isMissing(I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.Quant:lexLT([I[I)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.Quant:pairwiseLT([I[I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:eltwiseGT([I)Z
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
jtb.JavaParser:jj_3R_47()Z
daikon.VarInfo:new_ppt()V
daikon.inv.Invariant:logDetail()Z
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.Quant:memberOf(F[D)Z
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:memberOf(J[J)Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaCharStream:BeginToken()C
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String; | RETURN | 29320 | return null
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.inv.unary.sequence.EltOneOf:format_ioa()Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
utilMDE.WeakHasherMap:size()I
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_esc()Ljava.lang.String;
daikon.VarInfoName:hashCode()I
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.inv.unary.sequence.EltOneOf:EltOneOf(Ldaikon.PptSlice;)V
daikon.Quantify.Term:simplify_name()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.inv.unary.sequence.NoDuplicates:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:sum([D)D
daikon.inv.unary.sequence.SeqIndexIntNonEqual:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltsEqual([II)Z
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_daikon()Ljava.lang.String;
daikon.Ppt:find_var_by_name(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.inv.unary.stringsequence.SingleStringSequence:SingleStringSequence(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.Quant:pairwiseGTE([I[I)Z
daikon.inv.unary.sequence.NoDuplicates:format_simplify()Ljava.lang.String;
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
utilMDE.MathMDE:pow(II)I
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:subsetOf([D[D)Z
daikon.inv.unary.sequence.NoDuplicates:enabled()Z
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.Quant:eltsGtIndex([I)Z
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_simplify()Ljava.lang.String;
daikon.test.FormatTestCase:passes()Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.EltUpperBound:EltUpperBound(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.inv.Invariant:getConfidence()D
daikon.PptSlice1:num_samples()I
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quantify.FreeVar:simplify_name()Ljava.lang.String;
daikon.Quantify.QuantFlags:adjacent()Ljava.util.EnumSet;
daikon.PptSlice2:arity()I
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.Quantify.Length:Length(Ldaikon.VarInfo;I)V
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.VarComparabilityNone:indexType(I)Ldaikon.VarComparability;
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
jtb.JavaCharStream:getBeginLine()I
daikon.Quant:gte(II)Z
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.inv.unary.sequence.EltOneOf:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:enabled()Z
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
utilMDE.Intern:internStrings([Ljava.lang.String;)V
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.Quant:lexGTE([I[I)Z
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.inv.unary.string.OneOfString:runValue(Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltOneOf:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:pow_fast(II)I
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.inv.unary.sequence.NoDuplicates:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.inv.Invariant:isWorthPrinting()Z
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.inv.unary.stringsequence.EltOneOfString:EltOneOfString(Ldaikon.PptSlice;)V
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfo:isPointer()Z
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:isScalar()Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
741 2 297 2 77 2 599 2 528 2 531 2 82 2 16 2 165 2 166 2 85 2 86 2 760 4 91 2 311 2 462 4 1044 2 248 2 318 4 618 2 688 2 183 2 409 2 1052 2 330 2 481 2 1057 2 909 2 488 2 710 2 992 2 208 4 715 2 858 2 724 2 930 2 576 4 434 2 371 2 144 4 1012 2 735 2 591 2 1014 2 
868 6 1087 4 296 2 487 2 912 4 156 32 1093 4 41 18 708 6 1030 6 496 2 232 4 923 2 994 16 676 4 816 2 818 2 1035 2 457 4 854 6 279 32 281 6 792 32 20 4 931 8 23 22 826 48 513 16 321 4 318 4 902 16 436 6 251 4 1145 2 1010 6 144 4 798 55 693 16 771 6 
599 2 610 2 803 2 
192 2 1038 2 443 2 841 2 777 2 896 2 73 2 585 10 16 2 654 2 883 2 500 22 225 2 1036 2 
293 4 710 2 159 2 812 2 389 2 767 2 144 2 510 2 318 2 
32 2 25 2 638 2 104 6 552 2 603 2 401 2 814 6 518 6 597 2 375 2 
627 6 843 2 632 2 318 2 139 2 586 2 144 2 954 6 535 6 865 4 927 2 658 6 88 4 
227 4 910 2 1089 8 156 16 41 8 1030 10 15 8 994 10 816 4 53 2 354 2 457 6 279 16 792 16 314 2 507 4 23 12 826 26 618 2 513 10 318 6 404 2 251 6 902 10 469 4 1145 2 1010 8 798 30 144 6 693 10 
495 4 96 6 
56 2 
1086 2 1023 2 809 2 156 2 41 2 1030 4 994 2 816 2 279 2 792 2 172 2 23 2 826 4 513 2 369 2 902 2 251 2 218 2 798 6 438 2 693 2 1048 2 547 2 
1087 4 279 8 792 8 983 2 23 4 826 12 513 4 494 2 156 8 902 4 436 6 469 2 798 16 994 4 676 4 693 4 771 6 
697 14 837 2 775 2 909 4 1123 2 338 2 631 2 301 2 988 4 634 4 672 2 599 8 636 4 920 62 307 2 352 2 925 2 166 2 208 4 1069 2 719 10 572 2 958 4 683 4 610 2 685 4 212 2 403 2 615 4 246 2 320 2 215 4 970 2 325 2 544 2 862 4 252 4 373 10 1115 4 803 6 
870 2 7 2 339 2 849 2 451 2 56 2 502 2 686 2 108 2 223 2 
867 2 144 2 
571 2 228 2 144 4 
292 4 294 1 1017 2 594 2 150 2 873 2 4 4 1021 2 444 2 1026 4 157 3 1029 2 159 2 447 6 304 8 448 8 163 4 305 1 164 2 452 2 454 2 1037 2 758 2 757 24 759 2 1042 2 318 32 319 16 465 6 175 2 466 2 467 1 176 5 323 1 903 2 324 1 470 2 28 1 772 2 622 4 329 2 332 2 334 2 1056 2 774 2 34 2 37 4 629 3 486 1 630 2 340 3 490 2 917 6 203 1 346 2 350 2 351 2 928 2 646 2 789 2 357 2 59 2 648 2 504 2 508 2 794 3 935 2 1076 2 65 2 942 3 1082 3 662 2 657 2 1084 3 943 6 667 2 807 2 808 2 70 1 521 4 76 3 523 1 229 2 525 2 1098 2 677 1 678 2 392 2 817 2 1101 2 1103 3 819 2 397 2 239 2 540 2 960 2 400 32 823 2 245 2 247 16 969 3 98 2 691 16 1116 2 109 2 832 2 976 2 833 12 835 2 548 16 550 3 258 2 982 3 114 2 261 2 117 2 985 2 1128 2 268 1 120 2 419 1 421 2 561 32 1129 2 711 2 127 2 128 2 851 2 568 2 717 2 1137 8 999 2 278 1 131 2 574 24 280 4 1001 2 430 2 1004 2 286 2 1146 2 144 34 289 1 590 2 1150 2 148 1 593 2 
601 2 
1 2 1088 6 69 8 298 2 152 2 153 2 948 2 810 6 878 14 12 2 600 10 1095 6 81 4 167 4 682 14 961 14 962 4 171 50 240 14 1107 14 21 2 895 8 967 2 316 8 173 18 94 4 616 2 317 2 690 2 766 10 101 2 621 50 253 2 182 18 187 10 829 10 623 2 838 6 981 4 413 4 260 2 553 2 38 2 416 2 986 2 916 2 558 2 991 4 918 2 43 18 123 2 348 2 46 2 641 2 712 8 1068 8 353 2 786 2 852 4 998 2 787 14 720 2 277 14 857 2 211 14 132 14 859 14 1005 8 1008 2 141 2 63 2 1011 14 1080 10 655 2 1149 4 941 2 146 2 147 10 592 6 801 4 661 50 866 2 
599 2 227 2 49 2 1032 2 415 2 284 2 199 2 1141 1 
49 2 6 2 284 2 
891 2 49 2 284 2 
907 2 380 2 201 2 
49 2 284 2 
1046 2 201 2 
49 2 283 2 
380 2 299 2 201 2 
990 2 380 2 1108 2 
380 2 649 2 762 2 
732 2 380 2 911 2 
840 2 380 2 1066 2 
201 2 731 2 
49 2 145 2 
938 2 1108 2 
649 2 926 2 
732 2 995 2 
840 2 154 2 
388 2 201 2 
840 2 888 2 
1075 2 732 2 
649 2 222 2 
210 2 1108 2 
380 2 299 2 201 2 524 2 
380 2 299 2 908 2 201 2 524 2 
380 2 587 2 201 2 
380 2 830 2 201 2 
836 2 1139 2 22 2 1079 2 
49 2 380 2 484 2 
49 2 975 2 
599 2 1032 2 752 2 440 2 
599 2 1032 2 415 2 752 2 850 2 440 2 
599 2 227 2 49 2 1032 2 284 2 743 2 
575 2 165 2 
599 2 227 2 13 2 1032 2 
732 2 517 2 
840 2 236 2 
102 2 1108 2 
649 2 64 2 
840 2 649 2 987 2 
840 2 649 2 134 2 
840 2 647 2 649 2 
840 2 649 2 1117 2 
333 2 336 6 874 2 599 2 635 6 1032 2 885 2 617 2 
241 2 201 2 
501 2 805 2 541 2 1002 2 1071 2 267 4 435 4 1009 2 287 2 497 2 640 2 563 2 751 2 694 2 220 2 500 6 66 2 756 2 
380 2 1130 2 
819 2 
292 2 1017 2 0 2 4 4 1021 2 9 2 1026 4 1029 2 159 2 447 6 163 2 448 2 164 2 452 2 887 2 1037 2 463 4 318 26 319 6 465 2 772 2 622 4 30 4 332 2 774 2 34 2 37 2 1059 2 913 2 39 2 917 2 346 2 350 2 646 2 789 2 357 2 59 2 504 2 506 2 935 2 1076 2 799 2 662 2 943 4 526 2 677 2 392 2 540 2 960 2 399 2 400 6 245 2 971 2 100 2 973 2 410 2 833 8 976 2 114 4 117 2 985 2 989 2 421 2 561 4 1129 2 126 2 128 2 711 2 999 2 280 4 430 2 144 26 1150 6 148 2 
292 2 1017 2 0 2 4 4 1021 2 9 2 1026 4 1029 2 446 2 159 2 447 6 163 2 448 2 164 2 452 2 887 2 1037 2 463 4 318 26 319 6 465 2 772 2 622 4 30 4 332 2 774 2 34 2 37 2 913 2 39 2 917 2 346 2 350 2 646 2 789 2 357 2 59 2 504 2 506 2 935 2 1076 2 799 2 65 2 662 2 943 6 526 2 677 2 957 2 392 2 397 2 540 2 960 2 400 6 245 2 971 2 100 2 973 2 410 2 833 8 976 2 114 4 117 2 985 2 421 2 561 4 1129 2 126 2 128 2 711 2 999 2 1136 2 280 4 1001 2 430 2 144 26 1150 6 148 2 
103 2 
882 2 315 2 
376 2 822 4 378 2 395 2 552 2 401 2 728 2 726 2 578 2 40 4 491 2 341 2 124 2 104 2 748 2 642 2 814 2 51 2 
67 2 376 2 945 4 295 2 1015 2 378 2 806 2 875 2 381 2 1090 2 11 4 162 2 447 4 748 2 675 4 603 2 814 4 822 4 395 2 18 4 398 2 540 2 170 6 1106 4 761 2 401 4 966 2 318 6 765 2 543 2 104 6 622 2 32 2 698 2 774 2 1118 2 552 4 337 2 40 4 491 4 341 2 346 2 422 2 124 2 1129 2 350 2 642 2 51 2 55 2 280 2 59 2 505 2 504 2 728 2 726 2 578 2 144 12 518 6 588 2 1151 2 
67 2 376 2 945 4 295 2 1015 2 378 2 806 2 875 2 381 2 1090 2 11 4 162 2 447 4 748 2 675 4 814 6 822 4 395 2 18 4 398 2 540 2 170 6 1106 4 761 2 401 4 966 2 318 6 765 2 543 2 104 4 622 2 32 2 698 2 774 2 1118 2 552 4 337 2 40 4 491 4 341 2 346 2 422 2 124 2 1129 2 350 2 642 2 51 2 55 2 280 2 59 2 505 2 504 2 728 2 726 2 578 2 144 12 518 6 588 2 1151 2 375 2 
67 2 376 2 945 8 295 2 1015 2 378 2 806 2 875 2 381 2 1090 2 597 2 11 4 162 2 447 4 748 2 675 4 814 6 822 4 395 2 18 4 398 2 540 2 170 6 1106 4 761 2 401 4 966 2 318 6 765 2 543 2 104 6 622 2 32 2 698 2 774 2 1118 2 552 4 337 2 40 4 491 4 341 2 346 2 422 2 124 2 1129 2 350 2 642 2 51 2 55 2 280 2 59 2 505 2 504 2 728 2 726 2 578 2 144 12 518 6 588 2 1151 2 
67 2 376 2 945 8 295 2 1015 2 378 2 806 2 875 2 381 2 1090 2 597 2 11 4 162 2 447 4 748 2 675 4 814 8 822 4 395 2 18 4 398 2 540 2 170 10 1106 8 761 2 401 4 966 2 318 6 765 2 543 2 104 6 622 2 32 2 698 2 774 2 1118 2 552 4 337 2 40 4 491 4 341 2 346 2 422 2 124 2 1129 2 350 2 642 2 51 2 55 2 280 2 59 2 505 2 504 2 728 2 726 2 578 2 144 12 518 8 588 2 1151 2 375 2 
67 2 376 2 945 8 295 2 1015 2 378 2 806 2 875 2 381 2 1090 2 597 2 11 4 162 2 447 4 748 2 675 4 814 6 822 4 395 2 18 4 398 2 540 2 170 10 1106 8 761 2 401 4 966 2 318 6 765 2 543 2 104 6 622 2 32 2 698 2 774 2 1118 2 552 4 337 2 40 4 491 4 341 2 346 2 422 2 124 2 1129 2 350 2 642 2 51 2 55 2 280 2 59 2 505 2 504 2 728 2 726 2 578 2 144 12 518 6 588 2 1151 2 
295 2 292 2 867 6 0 2 872 2 875 2 4 4 9 4 11 8 601 6 602 2 604 7 607 2 608 2 18 6 893 6 318 24 319 6 622 4 30 4 624 1 32 4 332 2 33 2 34 2 37 2 337 2 628 2 40 4 633 6 341 2 917 2 346 2 47 7 350 2 642 2 643 2 51 2 55 2 356 2 357 2 59 2 367 6 65 2 375 4 662 2 943 6 376 2 945 2 67 2 378 2 381 2 670 6 673 2 950 2 387 6 675 4 394 6 87 2 395 2 960 2 398 4 400 8 401 4 964 1 966 2 97 1 100 2 104 4 698 2 113 2 115 4 117 2 421 12 422 2 124 2 128 2 718 1 999 2 1000 2 1001 2 133 2 430 2 726 2 728 2 1006 2 136 2 1007 2 144 46 439 2 1015 2 1021 2 1026 4 1029 2 159 2 447 6 162 2 748 2 163 2 448 2 164 2 1037 2 761 2 170 2 465 2 764 1 765 2 181 2 472 1 772 2 479 2 774 2 197 2 491 4 1062 2 202 2 784 6 789 2 790 4 791 6 504 2 505 4 1074 1 518 12 799 2 1090 2 1091 6 1092 6 1094 2 233 6 533 10 814 8 1099 2 820 2 822 4 540 2 542 6 543 2 1113 8 828 2 833 4 256 1 1118 2 552 4 264 1 1127 2 269 2 561 2 1129 2 564 2 566 2 567 6 571 6 280 4 578 2 588 2 1150 6 1151 2 1152 2 
292 4 1015 2 295 2 867 6 0 2 872 2 875 2 4 4 1021 2 9 4 597 4 1026 4 11 8 1029 2 159 2 601 6 162 2 447 6 448 2 602 2 163 4 748 2 164 2 607 2 608 2 1037 2 18 6 170 2 893 6 761 2 465 2 319 6 318 26 765 2 181 2 772 2 622 4 30 4 32 4 479 2 332 2 774 2 33 2 34 2 197 2 37 4 337 2 628 2 40 4 633 6 491 4 1062 2 917 2 341 2 202 2 346 2 350 2 642 2 784 6 643 2 51 2 55 2 356 2 789 2 790 4 791 6 357 2 59 2 505 4 504 2 367 6 799 2 518 12 65 2 662 2 943 6 67 2 945 6 376 2 378 2 381 2 1090 2 383 2 670 6 1091 6 950 2 673 2 1092 6 387 6 1094 2 233 6 533 10 675 4 814 8 1099 2 394 6 820 2 87 2 822 4 395 2 398 4 960 2 540 2 400 8 401 4 542 6 966 2 100 2 543 2 1113 8 104 8 828 2 833 8 698 2 113 2 1118 2 114 2 115 4 552 4 117 2 1127 2 269 2 560 2 421 12 422 2 561 2 124 2 1129 2 128 2 564 2 566 2 567 6 571 6 999 2 280 4 1000 2 133 2 1001 2 430 2 728 2 726 2 1006 2 578 2 136 2 1007 2 144 48 439 2 588 2 1150 6 1151 2 1152 2 
292 4 1015 2 295 2 867 6 0 2 872 2 875 2 4 4 1021 2 9 4 597 4 1026 4 11 8 1029 2 159 2 601 6 162 2 447 6 448 2 602 2 163 4 748 2 164 2 607 2 608 2 1037 2 18 6 893 6 761 2 170 6 465 2 319 6 318 26 765 2 181 2 772 2 622 4 30 4 32 4 479 2 332 2 774 2 33 2 34 2 197 2 37 4 337 2 628 2 40 4 633 6 491 4 1062 2 917 2 341 2 202 2 346 2 350 2 642 2 784 6 643 2 51 2 55 2 356 2 789 2 790 4 791 6 357 2 59 2 505 4 504 2 367 6 799 2 518 12 65 2 662 2 943 6 67 2 945 6 376 2 378 2 381 2 1090 2 383 2 670 6 1091 6 950 2 673 2 1092 6 387 6 1094 2 233 6 533 10 675 4 814 8 1099 2 394 6 820 2 87 2 822 4 395 2 398 4 960 2 1106 4 540 2 400 8 401 4 542 6 966 2 100 2 543 2 1113 8 104 8 828 2 833 8 698 2 113 2 1118 2 114 2 115 4 552 4 117 2 1127 2 269 2 560 2 421 12 422 2 561 2 124 2 1129 2 128 2 564 2 566 2 567 6 571 6 999 2 280 4 1000 2 133 2 1001 2 430 2 728 2 726 2 1006 2 578 2 136 2 1007 2 144 48 439 2 588 2 1150 6 1151 2 1152 2 
295 2 292 4 867 12 0 2 872 2 875 2 4 4 9 4 597 4 11 8 601 12 602 2 603 2 607 2 608 2 310 2 18 6 893 6 313 2 318 24 319 8 622 4 30 6 32 4 332 2 33 2 34 2 37 4 337 2 628 2 40 4 633 6 341 2 917 4 346 2 350 2 642 2 643 2 51 2 55 2 356 2 357 2 59 2 367 12 65 2 662 2 375 2 943 6 376 2 945 6 67 2 378 2 381 2 383 2 670 6 673 2 950 2 387 6 675 4 955 6 83 6 394 12 87 2 395 2 960 2 398 4 400 12 401 4 966 2 99 2 100 4 104 10 698 2 113 2 114 2 115 4 117 2 421 10 422 2 124 2 128 2 999 2 1000 2 1001 2 133 2 430 2 726 2 728 2 1006 2 136 2 1007 2 734 2 144 52 439 2 1015 2 1021 2 155 6 1026 4 1029 2 159 2 447 6 162 2 748 2 163 4 448 4 164 2 1037 2 170 6 761 2 460 2 465 4 765 2 181 2 474 2 772 2 1053 6 1054 6 479 2 774 2 197 2 776 6 491 4 202 2 206 2 784 6 789 2 790 4 791 6 504 2 505 4 518 16 799 2 1090 2 1091 6 1092 12 1094 2 233 6 533 8 814 10 815 6 1099 2 820 2 538 6 822 4 1106 4 540 2 542 6 543 2 1113 8 828 2 833 10 1118 2 552 4 1124 2 266 6 1127 2 269 2 560 2 561 4 1129 2 564 2 566 2 567 6 571 12 280 4 578 2 588 2 1150 8 1151 2 1152 2 
32 2 1015 2 295 2 945 6 376 2 378 2 698 2 1118 2 552 4 875 2 337 2 40 2 597 2 11 2 341 2 162 2 748 2 675 2 814 6 51 2 55 2 822 2 395 2 18 2 761 2 1106 4 170 4 401 4 578 2 966 2 765 2 104 6 144 4 518 4 588 2 
295 2 1015 2 0 2 875 2 4 4 1021 2 444 2 9 2 597 2 1026 4 11 2 1029 2 159 2 162 2 447 6 748 2 164 2 1037 2 18 2 761 2 170 2 318 24 319 6 465 3 765 2 622 4 772 2 30 4 32 2 332 2 774 2 195 2 337 2 40 2 1061 2 1062 2 917 3 341 2 346 2 350 2 51 2 55 2 789 2 357 2 59 2 793 2 504 2 518 4 799 2 65 2 662 2 943 6 376 2 945 6 378 2 675 2 533 2 814 6 1101 2 819 2 822 2 395 2 237 3 540 2 960 2 400 8 401 4 966 2 543 2 104 6 698 2 1118 2 552 4 261 2 117 2 421 4 561 3 1129 2 128 2 856 2 999 2 280 4 1001 2 430 2 578 2 730 2 144 28 588 2 1150 6 
67 2 376 2 945 8 295 2 1015 2 378 2 806 2 875 2 381 2 1090 2 597 2 11 4 162 2 447 4 748 2 675 4 814 6 822 4 395 2 18 4 398 2 540 2 170 10 1106 8 761 2 401 4 966 2 318 6 765 2 543 2 104 6 622 2 32 2 698 2 774 2 1118 2 552 4 337 2 40 4 491 4 341 2 346 2 422 2 124 2 1129 2 350 2 642 2 51 2 55 2 280 2 59 2 505 2 504 2 728 2 726 2 578 2 144 12 518 6 588 2 1151 2 
67 2 376 2 945 8 295 2 1015 2 378 2 875 2 381 2 1090 2 597 2 11 4 162 2 447 4 749 2 748 2 675 4 603 2 814 6 822 4 395 2 18 4 398 2 540 2 170 10 1106 8 761 2 401 4 966 2 318 6 765 2 543 2 104 8 622 2 32 2 774 2 1118 2 552 4 337 2 40 4 491 4 341 2 346 2 422 2 124 2 1129 2 350 2 349 2 642 2 51 2 853 4 55 2 280 2 59 2 505 2 504 2 728 2 726 2 578 2 144 12 518 8 588 2 1151 2 
765 2 162 2 549 2 
765 2 162 2 549 2 
292 4 0 2 4 4 1021 2 9 6 877 2 597 4 1026 4 11 4 1029 2 879 2 159 2 303 2 162 6 447 6 602 2 163 4 164 2 603 4 608 2 1037 2 609 2 18 4 170 6 761 2 318 16 319 2 765 4 29 4 772 2 622 4 478 4 32 4 332 2 774 2 34 4 37 4 40 2 491 4 342 2 345 2 346 2 350 2 642 2 51 4 55 2 789 2 790 2 59 2 505 2 504 2 360 2 650 2 365 2 651 2 799 2 518 16 65 2 662 2 375 4 943 6 376 2 945 6 378 2 381 2 1090 2 382 2 1091 2 386 2 533 2 675 2 814 12 822 2 398 4 540 2 960 2 1106 4 400 2 401 4 104 12 973 4 833 4 549 2 115 2 552 4 117 2 984 2 557 2 421 4 561 2 1129 2 128 2 423 2 999 2 280 4 1001 2 430 2 433 2 728 2 1140 2 1007 2 144 24 1150 2 1151 2 
721 2 115 2 197 2 932 2 650 2 382 2 726 2 778 2 1091 2 318 2 651 2 421 2 346 2 882 2 533 2 144 4 607 2 
292 4 0 2 4 4 1021 2 9 6 877 2 597 4 1026 4 11 4 1029 2 159 2 303 2 162 6 447 6 602 2 163 4 164 2 603 4 450 2 608 2 1037 2 609 2 18 4 170 6 761 2 318 16 319 2 765 4 29 4 185 2 772 2 622 4 478 4 32 4 332 2 774 2 34 4 37 4 40 2 491 4 342 2 345 2 346 2 350 2 642 2 51 4 55 2 789 2 790 2 59 2 505 4 504 2 360 2 650 2 365 2 62 2 651 2 799 2 518 16 65 2 662 2 375 4 943 6 376 2 945 6 378 2 381 2 1090 2 382 2 1091 2 386 2 390 2 675 2 814 12 822 2 398 4 540 2 960 2 1106 4 400 2 401 4 104 12 973 4 546 2 833 4 549 2 552 4 117 2 557 2 421 2 422 2 561 4 1129 2 128 2 999 2 280 4 1001 2 430 2 433 4 728 2 1007 2 144 24 1150 2 1151 2 
292 4 0 2 4 4 1021 2 9 6 877 2 597 4 1026 4 11 4 1029 2 159 2 303 2 162 6 447 6 602 2 163 4 164 2 603 4 608 2 1037 2 609 2 18 4 170 6 761 2 318 16 319 2 468 2 765 4 26 2 29 4 772 2 622 4 478 4 32 4 332 2 774 2 34 4 37 4 40 2 491 4 342 2 345 2 346 2 350 2 642 2 51 4 55 2 789 2 790 2 59 2 505 4 504 2 360 2 650 2 365 2 651 2 799 2 518 16 65 2 662 2 375 4 943 6 376 2 945 6 378 2 381 2 1090 2 382 2 1091 2 386 2 533 2 675 2 814 12 822 2 398 4 540 2 960 2 1106 4 400 2 401 4 104 12 973 4 833 4 549 2 112 2 115 2 552 4 117 2 557 2 421 4 422 2 561 2 1129 2 128 2 1132 2 999 2 280 4 1001 2 430 2 431 2 433 2 728 2 1007 2 144 24 1150 2 1151 2 
595 3 3 4 4 6 596 2 5 102 8 2 9 2 10 12 605 2 19 3 611 2 612 2 614 2 23 10 615 2 619 28 24 2 620 12 27 2 622 4 30 12 35 2 625 2 34 8 36 4 626 10 39 2 41 6 42 2 44 22 636 2 45 12 637 2 643 4 50 2 644 2 645 2 54 16 57 28 58 2 59 2 60 2 61 2 652 2 653 2 65 6 656 2 659 2 660 4 664 2 663 2 665 4 666 2 68 2 668 2 669 12 71 2 72 4 74 2 75 2 673 2 78 8 79 2 676 4 677 2 679 2 680 32 89 6 684 32 92 2 687 66 99 2 689 16 100 46 105 2 693 6 695 2 696 2 111 2 110 2 699 2 113 2 700 2 701 80 116 2 117 4 118 56 703 28 119 2 705 2 706 2 709 2 121 32 122 2 126 2 129 2 713 12 714 3 716 2 130 2 723 2 722 2 133 2 725 2 727 10 729 2 730 2 138 2 733 2 734 2 142 2 143 142 144 88 736 2 737 24 148 2 740 24 151 8 742 2 745 2 156 12 158 16 159 8 161 4 160 2 750 28 164 2 754 2 168 2 179 2 768 4 180 2 181 2 184 2 769 2 188 2 770 2 190 2 772 2 771 6 773 52 191 2 774 2 195 2 196 2 198 2 779 2 780 22 781 30 200 16 782 2 205 14 783 22 206 2 788 50 789 4 792 12 213 2 793 2 215 2 216 2 796 32 217 2 797 92 798 24 799 2 219 3 800 3 221 2 802 2 804 8 230 4 231 2 811 4 813 12 235 2 821 2 237 2 242 6 824 4 243 2 244 26 247 52 826 18 825 28 250 2 254 2 827 28 255 2 831 4 834 2 833 128 257 2 259 2 839 2 262 4 263 6 845 2 846 2 848 8 272 12 273 68 856 2 275 2 855 2 274 16 279 12 280 4 285 16 861 24 288 2 863 2 864 2 290 2 291 2 868 6 872 2 296 2 871 32 876 2 300 1 881 2 880 28 306 22 884 2 886 116 887 2 309 2 889 4 892 14 310 2 894 4 312 2 313 2 898 2 318 50 319 14 900 2 901 10 899 2 902 6 326 2 327 28 904 2 331 2 332 4 335 2 913 2 914 16 915 20 917 46 343 2 344 2 346 2 921 2 923 4 922 2 350 2 929 4 357 2 931 8 362 8 933 44 364 16 368 2 370 2 934 2 372 1 937 12 374 10 939 2 940 16 944 2 943 14 377 2 379 16 947 12 949 2 384 16 952 2 951 2 953 6 956 4 393 2 396 8 959 2 958 2 960 8 963 4 400 52 402 2 968 2 971 2 972 2 406 2 407 2 408 3 974 2 410 2 411 8 978 2 979 3 414 2 417 2 988 2 418 2 421 2 993 2 994 6 425 2 424 2 426 2 427 2 428 12 999 2 1000 4 1001 6 430 2 432 2 1010 6 437 2 1016 10 1018 2 441 2 442 2 1022 2 445 4 1024 2 1025 2 1026 6 1028 2 1031 2 447 6 449 2 448 40 1034 2 455 4 456 14 1037 2 457 4 1039 2 458 2 1041 16 1040 3 459 24 1043 2 464 12 465 16 1045 2 471 4 473 2 474 4 475 3 476 2 1049 2 1050 2 477 2 1051 6 1055 3 480 3 482 16 483 16 1060 6 489 2 492 18 493 2 1064 12 498 2 1065 10 499 2 1067 2 504 2 506 34 1072 2 512 2 511 2 513 6 514 4 515 2 516 4 1077 2 1078 2 519 2 1083 3 522 2 1093 4 526 2 1096 16 1097 2 534 12 1099 2 1100 2 1102 28 1104 4 1105 4 539 2 540 2 1109 10 1110 2 1111 2 1112 2 1114 2 545 2 548 12 551 2 1119 2 1120 2 1122 2 1121 2 1124 2 1125 4 1126 2 554 2 555 2 559 2 561 46 1129 2 562 2 565 1 1131 3 566 4 1133 6 569 2 570 2 573 2 577 2 580 24 581 2 1143 2 1144 2 583 4 584 12 1145 2 1147 2 1148 2 1150 14 
869 2 1122 2 71 2 917 2 952 2 709 2 561 2 922 2 1065 2 309 2 357 2 400 2 512 2 1109 4 465 2 319 2 318 2 901 2 1144 2 100 6 144 2 800 2 1150 2 30 2 
869 2 1122 2 71 2 917 2 952 2 709 2 561 2 922 2 1065 2 309 2 357 2 400 2 512 2 1109 4 465 2 319 2 318 2 901 2 1144 2 100 6 144 2 800 2 1150 2 30 2 
869 2 1122 2 71 2 917 2 952 2 709 2 561 2 922 2 1065 2 309 2 357 2 400 2 512 2 1109 4 465 2 319 2 318 2 901 2 1144 2 100 6 144 2 800 2 1150 2 30 2 
946 2 740 3 5 6 71 2 780 4 917 3 156 2 44 4 347 2 561 3 532 4 783 4 306 4 994 2 534 2 234 2 537 2 457 2 1135 2 1070 2 279 2 357 2 792 2 459 3 400 2 826 4 247 2 513 2 318 4 902 2 178 2 768 2 1010 4 936 2 798 5 144 10 693 2 186 3 1081 2 548 2 
946 2 740 2 5 6 71 2 156 2 532 4 306 4 534 2 234 2 457 2 537 2 400 2 459 2 23 2 247 2 826 4 318 4 902 2 178 2 768 2 186 2 693 2 548 2 780 4 917 2 41 2 347 2 44 4 561 2 994 2 783 4 1135 2 279 2 1070 2 357 2 792 2 513 2 1145 2 936 2 1010 4 144 10 798 4 1081 2 
946 2 740 2 5 6 71 2 156 2 532 4 306 4 534 2 234 2 457 2 537 2 400 2 459 2 23 2 247 2 826 4 318 4 902 2 178 2 768 2 186 2 693 2 548 2 780 4 917 2 41 2 347 2 44 4 561 2 994 2 783 4 1135 2 279 2 1070 2 357 2 792 2 513 2 1145 2 936 2 1010 4 144 10 798 4 1081 2 
946 2 740 2 5 6 71 2 156 2 532 4 306 4 534 2 234 2 457 2 537 2 400 2 459 2 23 2 247 2 826 4 318 4 902 2 178 2 768 2 186 2 693 2 548 2 780 4 917 2 41 2 347 2 44 4 561 2 994 2 783 4 1135 2 279 2 1070 2 357 2 792 2 513 2 1145 2 936 2 1010 4 144 10 798 4 1081 2 
946 2 740 2 5 6 71 2 156 2 532 4 306 4 534 2 234 2 457 2 537 2 400 2 459 2 23 4 247 2 826 4 318 4 902 2 178 2 768 2 186 2 693 2 548 2 780 4 917 2 41 4 347 2 44 4 561 2 994 2 783 4 1135 2 279 2 1070 2 357 2 792 2 513 2 1145 4 936 2 1010 4 144 10 798 4 1081 2 
177 2 308 2 52 2 949 2 763 2 209 2 
582 2 1027 2 177 2 702 2 328 2 506 2 905 2 
980 2 1123 1 674 1 302 2 847 1 530 2 639 2 14 2 391 2 453 1 1069 1 1134 2 540 2 429 2 860 2 897 2 214 2 135 2 318 8 367 2 249 2 405 2 144 10 107 2 589 2 31 2 
330 2 868 4 1057 2 156 6 1093 2 41 2 994 6 676 2 536 2 355 2 457 2 58 2 279 6 792 6 963 2 931 2 23 4 826 12 318 6 513 6 900 2 902 6 652 2 1145 2 1114 2 1010 4 144 6 798 16 693 6 771 4 
890 2 90 4 1058 2 363 7 780 2 318 1 844 1 95 2 420 2 230 2 125 2 144 1 306 2 783 2 189 2 207 2 224 2 755 2 
890 2 90 4 1058 2 363 6 780 2 95 4 420 2 230 4 125 2 306 2 783 2 189 2 207 2 755 2 224 4 
890 2 90 4 1058 6 363 10 780 2 318 1 844 1 95 8 420 2 230 8 125 2 144 1 306 2 783 2 189 2 207 2 755 8 224 8 
890 2 90 2 363 2 780 2 95 2 420 2 230 2 125 2 306 2 783 2 189 2 207 2 224 2 
739 4 1019 2 2 2 1020 2 4 10 744 2 1026 12 598 2 17 2 753 3 606 4 169 2 613 2 174 4 318 32 322 2 906 2 332 2 193 16 194 2 485 2 1063 2 204 2 924 1 789 4 358 2 503 2 359 4 361 2 509 2 1073 2 795 2 366 2 653 2 65 3 802 2 943 21 226 2 1085 2 520 2 527 2 385 2 529 2 84 2 681 2 93 2 692 2 106 6 412 2 977 2 117 4 704 2 265 2 556 6 707 6 270 2 993 2 271 2 997 2 276 2 1001 3 1003 2 1142 2 137 2 144 34 149 2 738 4 
226 2 193 4 332 2 789 2 1001 4 4 4 117 2 520 2 265 2 1142 2 318 12 1026 4 598 2 919 2 692 2 993 2 653 2 144 12 65 4 802 2 906 2 943 10 
739 2 1085 2 2 2 1020 2 4 8 520 2 744 2 1026 10 746 1 598 2 527 2 80 2 529 2 747 1 84 2 238 2 169 2 965 1 461 2 174 2 318 26 692 2 106 4 193 4 332 4 117 6 265 2 704 2 556 4 707 4 48 2 270 4 993 2 785 2 271 2 997 2 276 2 789 6 1138 2 1001 6 358 2 361 2 1073 2 1142 2 137 2 140 1 653 2 144 28 65 6 802 2 943 18 
412 2 226 2 977 2 332 2 193 5 4 6 117 2 842 2 520 2 671 2 1026 6 707 2 598 2 993 2 1033 2 996 2 276 1 789 2 1001 2 579 2 174 1 318 14 1142 2 322 2 692 2 1047 2 653 2 144 14 65 2 1013 2 906 2 802 2 943 10 
282 2 

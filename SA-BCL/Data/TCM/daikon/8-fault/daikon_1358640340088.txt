#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR jtb.TokenMgrError 348 752 306 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NullPointerException 672 672 241 (493,718) 
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException 672 672 241 (493,718) (493,718) 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NullPointerException 672 672 241 (493,718) 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 700 566 454 561 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 639 124 169 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 639 124 169 
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 639 124 169 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 639 124 169 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:gte(II)Z
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Node:Node()V
daikon.ModBitTracker:num_vars()I
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
utilMDE.MathMDE:gcd_differences([I)I
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.diff.RootNode:RootNode()V
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.Debug:logOn()Z
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.Quant:noDups([I)Z
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.Quant:gt(II)Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.Quant:subsetOf([J[J)Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.ProglangType:baseIsIntegral()Z
utilMDE.Intern:internSubsequence([III)[I
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.ModBitTracker:num_samples()I
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.OrderedPairIterator:setnext1()V
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE:gcd(JJ)J
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.Quant:memberOf(I[I)Z
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.MathMDE:mod_positive(II)I
utilMDE.ArraysMDE:indexOf([II)I
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
utilMDE.Intern:numIntArrays()I
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
utilMDE.MathMDE:pow(II)I
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.Quant:lt(II)Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.PptSlice0:arity()I
utilMDE.SimpleLog.LongVal:LongVal(J)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.Quant:memberOf(F[F)Z
daikon.Quant:eq(DD)Z
utilMDE.TestUtilMDE:lsis_test(I)V
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.ArraysMDE:sorted([I)Z
daikon.Quant:eq(JJ)Z
daikon.VarInfo:new_ppt()V
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Debug:logDetail()Z
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.Quant:subsetOf([D[D)Z
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:sum([I)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.test.TestQuant:removeAdjacentDups([I)[I
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:lexNotEqual([I[I)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.ModBitTracker:ModBitTracker(I)V
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:gt(DD)Z
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.inv.unary.scalar.LowerBound:enabled()Z
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaCharStream:readChar()C
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.MathMDE:sign(I)I
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
jtb.JavaCharStream:getEndLine()I
daikon.PptName:isCombinedExitPoint()Z
daikon.ProglangType:dimensions()I
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
utilMDE.FuzzyFloat:lt(DD)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
utilMDE.MathMDE:pow_fast(II)I
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.Quant:setEqual([I[I)Z
daikon.Quant:eltsGtIndex([I)Z
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
utilMDE.ArraysMDE:min_max([I)[I
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.diff.Node:Node(LutilMDE.Pair;)V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:fn_inverse([II)[I
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.Quant:setDiff([I[I)[I
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat:lte(DD)Z
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.Quant:pairwiseEqual([I[I)Z
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.inv.Invariant:getConfidence()D
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.Quant:eltwiseGT([I)Z
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
utilMDE.ArraysMDE:subarray([III)[I
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
utilMDE.MathMDE:mod_positive(JJ)J
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
utilMDE.WeakHasherMap:processQueue()V
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:intern([I)[I
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.Quant:eltwiseEqual([I)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.Quant:eltsGT([II)Z
daikon.Quant:eq(FF)Z
daikon.Quant:memberOf(S[S)Z
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:slice([III)[I
daikon.config.Configuration:apply(Ljava.lang.String;)V
utilMDE.Assert:assertTrue(Z)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.ProglangType:baseIsScalar()Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.inv.Invariant:logDetail()Z
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.Quant:subsetOf([B[I)Z
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.Quant:subsetOf([F[F)Z
daikon.Quant:lexGT([I[I)Z
daikon.inv.Invariants:Invariants()V
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.Quant:lexGTE([I[I)Z
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.ValueTuple:isMissing(I)Z
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
utilMDE.ArraysMDE:concat([I[I)[I
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoAux:hashCode()I
daikon.ProglangType:isPseudoArray()Z
daikon.Quant:eltsLtIndex([I)Z
daikon.Quant:eltsEqualIndex([I)Z
jtb.JavaCharStream:getEndColumn()I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.VarInfo:dbc_name()Ljava.lang.String;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
utilMDE.Options.OptionInfo:argument_required()Z
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.inv.Invariant:prob_or(DD)D
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.VarInfo:name()Ljava.lang.String;
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern:internStrings([Ljava.lang.String;)V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
jtb.JavaCharStream:ReadByte()C
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | RETURN | 2644 | return null
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token; | CONDITION | 65850 | if (x) -> if (!x)
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.Quant:pairwiseLTE([I[I)Z
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:intersection([I[I)[I
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:indexOf([ZZ)I
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.Quant:memberOf(F[D)Z
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
utilMDE.LimitedSizeIntSet:add(I)V
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Ppt:Ppt()V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
utilMDE.ArraysMDE:sum([[D)D
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.PptSlice1:num_samples()I
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.InvMap:InvMap()V
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:sum([[I)I
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.Quant:eq(II)Z
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.Quant:lexEqual([I[I)Z
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.Quant:subsetOf([F[D)Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.Quant:pairwiseLT([I[I)Z
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.Quant:isReverse([I[I)Z
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
jtb.TokenMgrError:TokenMgrError(ZIIILjava.lang.String;CI)V
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.Quant:pairwiseSquare([I[I)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.FuzzyFloat:eq(DD)Z
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.inv.Invariant:logOn()Z
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
jtb.TokenMgrError:LexicalError(ZIIILjava.lang.String;C)Ljava.lang.String;
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
utilMDE.OrderedPairIterator:setnext2()V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
utilMDE.MathMDE:bitwiseComplement(I)I
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.PptName:isEnterPoint()Z
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.inv.Invariant:prob_and(DD)D
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:sum([D)D
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.VarInfo:java_name()Ljava.lang.String;
utilMDE.MathMDE:gcd([I)I
daikon.Quant:subsetOf([I[I)Z
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.VarInfo:esc_name(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.Quant:ne(II)Z
utilMDE.ArraysMDE:fn_identity(I)[I
utilMDE.ArraysMDE:fn_compose([I[I)[I
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.Quant:eltwiseLT([I)Z
utilMDE.Intern:intern([J)[J
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
utilMDE.OrderedPairIterator:hasNext()Z
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.Quant:eltsEqual([II)Z
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
utilMDE.FuzzyFloat:gte(DD)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:jml_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.Quant:concat([I[I)[I
utilMDE.MathMDE:gcd(II)I
daikon.VarInfoName:name()Ljava.lang.String;
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.ModBitTracker:num_sets()I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | RETURN | 2258 | return null
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
utilMDE.MathMDE:missing_numbers([I)[I
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:eltsLTE([II)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
jtb.JavaCharStream:FillBuff()V
daikon.diff.Node:add(Ljava.lang.Object;)V
jtb.TokenMgrError:TokenMgrError(Ljava.lang.String;I)V
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.simplify.LemmaStack:noticeInt(J)V
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 2268 | = null
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.Quant:pairwiseGT([I[I)Z
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.Quant:eltsGteIndex([I)Z
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.test.InvariantFormatTester:execute()Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
utilMDE.ArraysMDE:min([I)I
daikon.test.FormatTestCase:passes()Z
utilMDE.Intern:internSubsequence([JII)[J
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.Quant:lexLT([I[I)Z
daikon.Quant:eltsNotEqual([II)Z
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakIdentityHashMap:indexFor(II)I
utilMDE.Fmt:i(I)Ljava.lang.Integer;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.ProglangType:isIntegral()Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.Quant:lte(II)Z
jtb.TokenMgrError:addEscapes(Ljava.lang.String;)Ljava.lang.String;
utilMDE.LimitedSizeIntSet:size()I
daikon.inv.unary.scalar.UpperBound:enabled()Z
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.Quant:eltwiseNotEqual([I)Z
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.JavaCharStream:BeginToken()C
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.VarInfo:relate_var()V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.Quant:subsetOf([D[F)Z
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
utilMDE.Intern:intern([D)[D
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.MathMDE:modulus([I)[I
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:lexLTE([I[I)Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
utilMDE.ArraysMDE:subarray([JII)[J
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.ValueTuple:size()I
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.inv.unary.LowerBoundCore:calc_modulus()J
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:union([I[I)[I
daikon.ModBitTracker:split(I)I
daikon.Quant:sameLength([I[I)Z
daikon.Quant:pairwiseDivides([I[I)Z
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.inv.unary.scalar.NonZero:is_pointer()Z
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.ProglangType:isArray()Z
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.inv.unary.scalar.NonZero:enabled()Z
jtb.JavaCharStream:backup(I)V
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.Quant:memberOf(J[J)Z
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.Quant:eltwiseLTE([I)Z
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.PptSlice2:arity()I
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.Quant:eltsGTE([II)Z
daikon.Quant:eltsLT([II)Z
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
utilMDE.ArraysMDE:isSubset([D[D)Z
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.Quant:subsetOf([S[S)Z
daikon.inv.unary.UpperBoundCore:computeProbability()D
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.VarInfoName:hashCode()I
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.inv.Invariant:justified()Z
daikon.VarInfo:old_var_names(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.UpperBoundCore:calc_range()J
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.Quant:eltwiseGTE([I)Z
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.PptSlice1:arity()I
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:size()I
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.inv.Invariant:prob_and(DDD)D
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
utilMDE.ArraysMDE:indexOf([I[I)I
utilMDE.MathMDE:negate(I)I
daikon.ValueTuple:isMissingFlow(I)Z
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.inv.ValueSet:ValueSet(I)V
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.Quant:memberOf(D[F)Z
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.Quant:eltsNotEqualIndex([I)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Invariant:format()Ljava.lang.String;
jtb.JavaParser:jj_ntk()I
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.Quant:eltsLteIndex([I)Z
daikon.PptSlice0:initInvariantsSeen()V
daikon.inv.Invariant:isWorthPrinting()Z
utilMDE.FuzzyFloat:ne(DD)Z
utilMDE.ArraysMDE:max([I)I
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
utilMDE.ArraysMDE:element_range([I)I
daikon.ProglangType:isScalar()Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.diff.Node:children()Ljava.util.Iterator;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
728 2 235 2 588 4 89 2 371 2 283 2 108 2 207 2 14 2 
405 2 672 2 151 2 144 2 444 6 59 6 560 6 581 2 35 2 497 2 261 2 
235 2 577 6 607 2 283 2 19 4 54 4 641 6 55 2 768 6 202 6 247 2 331 2 118 2 
501 2 156 4 235 6 178 2 77 2 283 6 592 16 201 10 509 4 487 8 137 26 266 10 392 30 341 8 715 16 679 8 248 4 490 6 470 8 166 16 684 2 270 6 206 12 630 2 273 10 122 10 582 10 584 4 567 2 51 2 
66 6 447 4 
426 2 
156 2 747 2 592 2 161 2 201 2 711 2 673 2 487 2 137 4 266 2 392 6 715 2 166 2 270 2 206 2 273 2 93 2 122 4 65 2 94 2 582 2 429 2 430 2 
360 4 103 2 361 6 73 6 28 2 166 8 206 5 273 4 582 4 592 8 201 4 509 2 137 12 266 4 392 14 303 4 715 8 
362 2 176 2 363 62 618 2 236 2 238 2 7 4 109 4 590 2 365 2 705 4 643 2 411 8 510 2 646 4 141 2 344 4 446 2 736 2 87 4 542 2 764 4 91 14 167 2 720 2 322 2 147 4 96 4 742 4 192 4 685 2 399 2 97 2 723 4 300 6 745 4 526 10 195 10 693 2 479 2 
591 2 90 2 426 2 766 2 563 2 323 2 398 2 152 2 658 2 102 2 
196 2 235 4 386 2 283 4 112 2 485 2 486 2 57 2 343 2 205 4 683 2 626 2 737 2 207 2 583 2 125 2 501 2 362 2 127 2 552 2 75 2 133 2 411 2 463 2 413 2 597 2 416 2 760 2 558 2 471 2 719 2 654 4 608 2 517 2 474 2 764 2 92 4 47 2 378 2 565 2 192 4 656 2 98 2 524 2 
156 2 360 4 235 4 361 6 73 6 529 2 131 2 178 2 619 6 283 4 222 6 574 8 592 32 201 16 137 48 487 18 266 16 623 4 647 6 392 54 511 2 715 32 603 4 490 4 470 6 166 32 349 2 270 4 63 4 206 22 422 2 273 16 122 6 582 16 95 4 613 4 687 2 359 6 303 4 
685 2 411 2 300 2 
227 2 158 2 43 2 420 22 504 2 119 2 199 2 507 2 230 2 593 2 174 2 759 10 15 2 343 2 
569 2 282 2 283 32 6 2 8 2 665 3 10 4 286 16 391 1 488 2 287 1 114 2 116 2 575 2 14 2 677 2 394 2 289 2 678 2 291 1 204 2 16 1 682 2 491 2 578 2 294 2 17 2 579 4 580 16 495 24 121 32 123 2 298 2 297 4 299 2 402 2 22 3 499 2 689 16 24 2 25 2 27 3 697 4 31 1 308 2 34 1 309 2 134 2 701 1 221 1 409 6 508 1 36 1 596 2 39 2 223 3 139 3 41 2 600 2 512 2 602 2 225 1 226 2 418 2 606 2 716 2 515 2 717 3 516 24 425 2 232 2 149 2 325 2 523 2 722 2 234 2 326 2 724 8 50 32 332 2 155 1 616 1 333 2 157 1 435 2 159 2 528 2 235 34 725 4 617 4 726 3 336 12 531 1 243 2 729 2 443 2 622 2 733 2 534 3 732 6 735 2 251 6 539 2 541 8 252 4 64 2 448 2 632 2 253 2 353 2 256 2 68 2 173 2 452 2 743 2 70 4 358 2 175 3 457 2 751 2 79 1 461 2 264 2 644 2 466 2 465 3 757 2 467 2 370 2 374 2 269 8 375 2 84 2 376 6 187 3 761 2 472 2 653 2 271 5 765 2 189 2 190 2 476 2 477 3 101 2 194 2 660 16 
330 2 
456 2 235 2 
462 2 235 4 714 2 
748 6 587 2 306 2 664 2 752 2 440 2 284 2 707 2 415 2 598 2 185 2 345 6 165 6 538 2 315 2 348 2 321 2 320 2 276 2 67 2 170 2 769 2 547 2 549 2 635 2 692 2 
650 2 388 2 26 1 483 2 
741 2 388 2 
248 2 388 2 411 2 130 2 88 2 356 2 13 2 
388 2 88 2 181 2 
388 2 480 2 88 2 
484 2 650 2 408 2 
388 2 88 2 
484 2 500 2 
388 2 572 2 
484 2 650 2 237 2 
650 2 406 2 1 2 
650 2 33 2 354 2 
650 2 557 2 586 2 
650 2 99 2 83 2 
484 2 275 2 
388 2 595 2 
489 2 1 2 
674 2 33 2 
586 2 244 2 
706 2 99 2 
484 2 314 2 
99 2 559 2 
586 2 182 2 
756 2 33 2 
313 2 1 2 
484 2 650 2 237 2 401 2 
484 2 650 2 237 2 401 2 132 2 
484 2 650 2 651 2 
484 2 650 2 417 2 
317 2 450 2 633 2 670 2 
411 2 307 2 525 2 13 2 
411 2 130 2 307 2 525 2 13 2 648 2 
248 2 388 2 411 2 88 2 13 2 214 2 
75 2 23 2 
248 2 411 2 281 2 13 2 
586 2 277 2 
680 2 99 2 
681 2 1 2 
33 2 544 2 
571 2 99 2 33 2 
620 2 99 2 33 2 
296 2 99 2 33 2 
99 2 33 2 301 2 
104 2 5 6 411 2 13 2 85 6 350 2 655 2 302 2 
484 2 502 2 
420 6 293 2 106 2 107 4 120 2 739 2 262 2 610 2 295 2 634 2 669 2 366 2 40 4 278 2 113 2 690 2 279 2 403 2 
650 2 393 2 
159 2 
663 2 573 2 283 26 8 2 10 2 114 2 575 2 14 2 116 2 289 2 394 2 292 2 17 2 580 6 121 4 123 2 297 4 499 4 24 2 697 4 409 2 709 2 596 2 41 2 602 2 226 2 716 2 229 2 148 2 149 2 521 2 234 2 50 6 328 2 155 2 616 2 333 2 435 2 235 26 725 4 617 4 336 8 243 2 443 2 533 2 732 4 733 2 164 2 735 2 251 2 252 2 353 2 256 2 452 2 355 2 70 2 76 4 751 2 364 4 461 2 466 2 556 2 370 2 757 2 269 2 376 6 653 2 765 6 562 2 190 2 101 2 381 2 657 2 280 2 
663 2 573 2 283 26 8 2 10 2 488 2 114 2 575 2 14 2 116 2 289 2 394 2 292 2 294 2 17 2 580 6 121 4 123 2 297 4 499 4 24 2 697 4 308 2 409 2 709 2 596 2 41 2 602 2 226 2 716 2 229 2 423 2 148 2 149 2 521 2 234 2 50 6 328 2 154 2 155 2 616 2 333 2 435 2 235 26 725 4 617 4 336 8 243 2 443 2 732 6 733 2 164 2 735 2 251 2 252 2 353 2 256 2 452 2 355 2 70 2 76 4 751 2 364 4 461 2 183 2 466 2 370 2 757 2 269 2 376 6 653 2 765 6 562 2 190 2 101 2 381 2 657 2 
604 2 
146 2 668 2 
197 2 384 2 718 2 3 4 219 2 505 2 497 2 9 4 767 2 324 2 151 2 379 2 58 2 59 2 444 2 267 2 184 2 731 2 
334 2 197 2 235 12 384 2 617 2 3 4 198 4 283 6 241 2 9 4 672 2 56 2 58 2 59 4 444 6 731 2 12 2 575 2 535 2 738 2 449 2 497 4 740 6 353 2 171 2 297 2 548 4 695 2 696 2 458 2 129 2 259 4 219 2 505 2 460 2 261 2 754 2 367 4 596 2 267 2 184 2 41 2 468 2 376 4 716 2 718 2 228 4 763 2 560 6 424 2 518 2 149 2 767 4 324 2 151 4 380 2 379 2 100 2 101 2 153 2 
334 2 197 2 235 12 384 2 617 2 3 4 198 4 283 6 241 2 9 4 672 2 56 2 58 2 59 6 444 4 731 2 12 2 575 2 535 2 738 2 449 2 497 4 740 6 353 2 171 2 297 2 548 4 695 2 405 2 696 2 458 2 129 2 259 4 219 2 505 2 460 2 754 2 367 4 596 2 267 2 184 2 41 2 468 2 376 4 716 2 718 2 228 4 763 2 560 6 424 2 518 2 149 2 767 4 324 2 151 4 380 2 379 2 100 2 101 2 153 2 
334 2 197 2 235 12 384 2 617 2 3 4 198 4 283 6 241 2 9 4 672 2 56 2 58 2 59 6 444 6 731 2 12 2 575 2 535 2 738 2 449 2 497 4 740 6 353 2 171 2 297 2 548 4 695 2 696 2 458 2 129 2 259 8 219 2 505 2 460 2 754 2 367 4 596 2 267 2 184 2 41 2 468 2 376 4 716 2 718 2 144 2 228 4 763 2 560 6 424 2 518 2 149 2 767 4 324 2 151 4 380 2 379 2 100 2 101 2 153 2 
334 2 197 2 235 12 384 2 617 2 3 4 198 4 283 6 241 2 9 4 672 2 56 2 58 2 59 8 444 6 731 2 12 2 575 2 535 2 738 2 449 2 497 4 740 10 353 2 297 2 171 2 548 4 695 2 405 2 696 2 458 2 129 2 259 8 219 2 505 2 460 2 754 2 367 8 596 2 267 2 184 2 41 2 468 2 376 4 716 2 718 2 144 2 228 4 763 2 560 8 424 2 518 2 149 2 767 4 324 2 151 4 380 2 379 2 100 2 101 2 153 2 
334 2 197 2 235 12 384 2 617 2 3 4 198 4 283 6 241 2 9 4 672 2 56 2 58 2 59 6 444 6 731 2 12 2 575 2 535 2 738 2 449 2 497 4 740 10 353 2 171 2 297 2 548 4 695 2 696 2 458 2 129 2 259 8 219 2 505 2 460 2 754 2 367 8 596 2 267 2 184 2 41 2 468 2 376 4 716 2 718 2 144 2 228 4 763 2 560 6 424 2 518 2 149 2 767 4 324 2 151 4 380 2 379 2 100 2 101 2 153 2 
197 2 384 2 570 6 3 4 2 2 198 8 387 1 8 2 9 4 10 2 12 2 575 2 14 2 203 1 17 12 580 6 21 2 397 2 400 2 24 2 215 6 405 4 217 2 407 2 219 2 409 2 596 2 414 6 41 2 602 2 228 4 45 2 424 2 48 2 428 2 431 10 50 8 433 2 434 2 435 2 235 46 436 2 617 4 239 6 240 2 241 2 439 8 243 2 443 2 56 2 59 8 444 4 58 2 251 2 252 2 449 2 452 2 257 2 70 2 453 1 456 6 458 2 259 2 260 4 76 4 460 2 642 6 461 2 462 6 645 2 267 2 269 2 468 2 653 2 274 2 100 2 101 2 661 2 283 24 671 1 672 4 114 2 676 2 289 2 117 2 290 2 294 2 496 2 121 2 497 4 297 4 688 2 498 2 695 2 696 2 697 4 698 6 129 4 699 4 308 2 505 2 709 4 708 1 140 2 716 2 718 2 145 6 518 2 148 2 519 2 149 2 324 2 150 6 151 4 327 1 153 2 330 6 334 2 725 4 335 6 160 2 336 4 337 1 532 2 338 7 731 2 732 6 535 2 735 2 347 2 738 4 740 2 168 1 353 2 548 6 744 6 749 6 750 2 751 2 179 2 180 7 754 2 370 2 372 2 184 2 758 2 376 6 560 12 763 2 377 6 188 1 765 6 562 2 190 2 767 4 379 2 380 2 381 2 382 6 
197 2 384 2 570 6 2 2 3 4 198 8 283 26 9 4 8 2 10 4 672 4 114 2 676 2 12 2 14 2 575 2 117 2 289 2 290 2 17 12 294 2 580 6 496 2 121 2 497 4 21 2 397 2 297 4 688 2 498 2 400 2 499 2 215 6 24 2 217 2 695 2 696 2 697 4 698 6 407 2 30 2 699 4 129 4 308 2 505 2 219 2 409 2 709 4 596 2 414 6 41 2 140 2 602 2 716 2 228 4 144 4 718 2 145 6 45 2 424 2 518 2 519 2 148 2 48 2 149 2 324 2 150 6 428 2 151 4 431 10 50 8 433 2 153 2 330 6 434 2 334 2 435 2 235 48 436 2 725 4 335 6 617 4 239 6 160 2 240 2 336 8 241 2 439 8 243 2 532 2 443 2 56 2 162 2 58 2 444 8 59 8 731 2 732 6 535 2 347 2 251 2 735 2 252 4 738 4 449 2 740 2 353 2 452 2 257 2 548 6 744 6 70 4 750 2 456 6 749 6 458 2 259 6 76 4 260 4 751 2 179 2 460 2 642 6 462 6 461 2 754 2 645 2 267 2 758 2 184 2 372 2 370 2 269 2 468 2 376 6 653 2 763 2 560 12 377 6 765 6 562 2 190 2 274 2 767 4 380 2 379 2 100 2 381 2 101 2 382 6 661 2 
197 2 384 2 570 6 2 2 3 4 198 8 283 26 9 4 8 2 10 4 672 4 114 2 676 2 12 2 14 2 575 2 117 2 289 2 290 2 17 12 294 2 580 6 496 2 121 2 497 4 21 2 397 2 297 4 688 2 498 2 400 2 499 2 215 6 24 2 217 2 695 2 696 2 697 4 698 6 407 2 30 2 699 4 129 4 308 2 505 2 219 2 409 2 709 4 596 2 414 6 41 2 140 2 602 2 716 2 228 4 144 4 718 2 145 6 45 2 424 2 518 2 519 2 148 2 48 2 149 2 324 2 150 6 428 2 151 4 431 10 50 8 433 2 153 2 330 6 434 2 334 2 435 2 235 48 436 2 725 4 335 6 617 4 239 6 160 2 240 2 336 8 241 2 439 8 243 2 532 2 443 2 56 2 162 2 58 2 444 8 59 8 731 2 732 6 535 2 347 2 251 2 735 2 252 4 738 4 449 2 740 6 353 2 452 2 257 2 548 6 744 6 70 4 750 2 456 6 749 6 458 2 259 6 76 4 260 4 751 2 179 2 460 2 642 6 462 6 461 2 754 2 367 4 645 2 267 2 758 2 184 2 372 2 370 2 269 2 468 2 376 6 653 2 763 2 560 12 377 6 765 6 562 2 190 2 274 2 767 4 380 2 379 2 100 2 381 2 101 2 382 6 661 2 
197 2 384 2 570 6 3 4 2 2 198 8 8 2 9 4 10 4 12 2 575 2 14 2 17 10 580 8 208 2 21 2 397 2 400 2 24 2 215 6 405 2 217 2 407 2 30 2 219 2 589 2 409 4 596 2 414 6 41 2 602 2 228 4 45 2 424 2 48 2 428 2 431 8 50 12 433 2 434 2 435 2 235 52 436 2 617 4 239 6 240 2 241 2 439 8 243 2 443 2 56 2 59 10 444 10 58 2 249 6 251 4 252 4 449 2 452 2 257 2 70 4 456 12 458 2 259 6 260 4 76 6 460 2 78 2 642 6 261 2 461 2 462 12 645 2 267 2 269 4 468 2 652 6 653 2 274 2 100 2 101 2 661 2 283 24 667 2 672 4 114 2 676 2 289 2 117 2 290 2 294 2 492 2 496 2 121 4 497 4 297 4 688 2 498 2 499 2 691 6 695 2 696 2 697 4 698 6 129 4 699 4 308 2 505 2 704 6 709 4 716 2 718 2 144 4 145 6 518 2 148 4 519 2 149 2 324 2 522 6 150 12 151 4 153 2 329 6 330 12 334 2 725 4 335 6 160 2 336 10 530 2 532 2 162 2 339 2 731 2 732 6 535 2 735 2 347 2 738 4 740 6 353 2 548 6 744 6 750 2 749 6 177 6 751 2 179 2 754 2 755 6 367 4 370 2 372 2 184 2 758 2 376 6 186 2 762 6 763 2 560 16 377 12 765 8 562 2 190 2 767 4 379 2 380 2 381 2 382 12 
695 2 696 2 334 2 235 4 384 2 458 2 259 6 3 2 198 2 460 2 505 2 219 2 241 2 9 2 754 2 367 4 672 2 56 2 59 6 444 6 731 2 535 2 228 2 144 2 718 2 560 4 449 2 424 2 497 4 740 4 324 2 151 4 380 2 379 2 548 2 
383 2 569 2 384 2 3 2 198 2 283 24 9 2 8 2 672 2 114 2 12 2 575 2 14 2 289 2 294 2 17 4 580 6 121 3 497 4 297 4 24 2 695 2 696 2 697 4 308 2 309 2 219 2 505 2 409 3 709 2 596 2 38 2 712 2 41 2 602 2 140 2 716 2 228 2 144 2 718 2 424 2 149 2 324 2 151 4 722 2 431 2 50 8 159 2 435 2 334 2 235 28 725 4 617 4 241 2 243 2 443 2 56 2 444 6 59 6 731 2 732 6 163 2 535 2 624 2 735 2 251 3 449 2 740 2 353 2 452 2 548 2 458 2 259 6 76 4 460 2 754 2 461 2 464 3 370 2 376 6 653 2 560 4 765 6 562 2 190 2 379 2 380 2 101 2 381 2 
334 2 197 2 235 12 384 2 617 2 3 4 198 4 283 6 241 2 9 4 672 2 56 2 58 2 59 6 444 6 731 2 12 2 575 2 535 2 738 2 449 2 497 4 740 10 353 2 171 2 297 2 548 4 695 2 696 2 458 2 129 2 259 8 219 2 505 2 460 2 754 2 367 8 596 2 267 2 184 2 41 2 468 2 376 4 716 2 718 2 144 2 228 4 763 2 560 6 424 2 518 2 149 2 767 4 324 2 151 4 380 2 379 2 100 2 101 2 153 2 
334 2 197 2 235 12 617 2 384 2 3 4 198 4 283 6 241 2 9 4 672 2 56 2 58 2 59 6 444 8 731 2 12 2 575 2 535 2 629 2 738 2 449 2 497 4 740 10 353 2 297 2 548 4 695 2 696 2 459 4 458 2 129 2 259 8 219 2 505 2 261 2 754 2 367 8 412 2 596 2 267 2 184 2 41 2 468 2 376 4 716 2 718 2 144 2 228 4 763 2 560 8 424 2 518 2 149 2 767 4 324 2 151 4 380 2 379 2 100 2 101 2 153 2 
754 2 458 2 713 2 
754 2 458 2 713 2 
384 2 385 2 3 2 573 4 198 4 283 16 8 2 9 2 10 4 672 4 114 2 575 2 14 2 289 2 294 2 17 4 18 2 580 2 121 2 497 4 297 4 686 2 24 2 697 4 699 2 308 2 709 2 596 2 41 2 602 2 716 2 316 2 718 2 144 4 228 2 520 2 149 2 612 2 324 2 151 4 431 2 50 2 435 2 235 24 725 4 617 4 239 2 336 4 241 2 727 2 243 2 443 2 56 2 59 8 444 8 732 6 346 2 735 2 627 2 252 4 631 2 740 2 353 2 548 2 70 4 458 2 259 6 260 2 751 2 461 2 754 2 367 2 370 2 268 2 376 6 653 2 560 8 765 2 562 2 190 2 101 2 381 2 
750 2 197 2 235 4 699 2 17 2 385 2 503 2 239 2 220 2 283 2 631 2 668 2 520 2 431 2 101 2 676 2 694 2 
384 2 385 2 3 2 573 4 198 4 283 14 8 2 9 2 10 4 672 4 114 2 575 2 14 2 289 2 294 2 17 2 18 2 580 2 493 2 121 4 497 4 297 4 686 2 24 2 697 4 308 2 709 2 596 2 41 2 602 2 716 2 316 4 718 2 144 4 228 2 149 2 612 2 324 2 151 4 49 2 50 2 435 2 235 20 725 4 617 4 336 4 241 2 727 2 243 2 443 2 56 2 59 8 444 8 732 6 346 2 735 2 627 2 252 4 631 2 740 2 353 2 548 2 70 4 458 2 259 6 260 2 751 2 754 2 461 2 367 2 370 2 268 2 376 6 653 2 560 8 765 2 562 2 190 2 101 2 381 2 
384 2 385 2 3 2 573 4 198 4 283 16 8 2 9 2 10 4 672 4 114 2 575 2 14 2 289 2 294 2 17 4 18 2 580 2 121 2 497 4 297 4 686 2 24 2 697 4 699 2 308 2 709 2 596 2 41 2 602 2 716 2 316 2 718 2 144 4 228 2 520 2 149 2 612 2 324 2 151 4 431 2 50 2 435 2 235 24 725 4 617 4 239 2 336 4 241 2 727 2 243 2 443 2 56 2 59 8 444 8 732 6 346 2 735 2 627 2 252 4 631 2 740 2 353 2 548 2 70 4 458 2 259 6 260 2 751 2 461 2 754 2 367 2 370 2 268 2 376 6 653 2 560 8 765 2 562 2 190 2 101 2 381 2 
662 2 105 2 2 2 482 2 481 6 283 22 8 2 111 2 201 2 389 2 487 2 115 2 114 2 392 6 288 2 575 2 14 2 576 2 289 2 292 2 294 2 17 2 580 8 206 2 496 2 121 4 20 2 209 2 582 2 396 2 210 2 687 2 297 4 212 2 303 2 24 2 697 2 128 2 700 2 32 1 218 2 308 2 702 2 311 2 409 4 594 2 592 2 410 2 709 2 37 4 596 2 137 4 138 6 599 2 41 2 601 2 715 2 602 2 513 6 142 2 514 2 419 2 143 2 716 2 44 2 421 2 319 2 231 2 611 2 148 4 48 2 149 2 427 2 50 12 434 2 435 2 235 28 725 2 617 4 52 2 437 2 160 2 336 6 441 2 443 2 732 4 250 2 625 2 735 2 251 4 166 2 540 2 61 2 546 2 451 2 353 2 352 2 452 2 257 2 454 2 746 2 72 2 637 2 361 4 551 2 76 6 80 2 461 2 368 2 265 2 266 2 82 2 372 2 269 4 376 6 86 2 272 2 561 2 273 2 765 8 566 2 101 2 381 2 478 2 
235 2 76 2 283 2 703 2 409 3 554 2 442 2 710 2 136 2 605 2 469 2 251 3 62 3 580 2 473 2 121 3 543 2 765 2 148 6 191 2 351 2 452 2 50 2 659 4 
235 2 76 2 283 2 703 2 409 2 554 2 442 2 710 2 136 2 605 2 469 2 251 2 62 2 580 2 473 2 121 2 543 2 765 2 148 6 191 2 351 2 452 2 50 2 659 4 
235 2 76 2 283 2 703 2 409 2 554 2 442 2 710 2 136 2 605 2 469 2 251 2 62 2 580 2 473 2 121 2 543 2 765 2 148 6 191 2 351 2 452 2 50 2 659 4 
235 10 0 2 283 4 201 2 390 2 675 4 286 2 392 5 490 2 60 4 251 3 166 2 494 2 121 3 582 2 351 2 172 4 211 2 452 2 69 3 71 2 357 2 216 2 258 6 404 3 74 3 640 2 312 2 135 2 592 2 137 4 266 2 373 2 715 2 470 4 273 2 475 4 50 2 615 4 660 2 
404 2 258 6 0 2 235 10 74 2 640 2 178 2 283 4 135 2 312 2 592 2 201 2 487 2 137 4 675 4 266 2 390 2 286 2 392 4 373 2 715 2 490 2 60 4 470 4 251 2 166 2 494 2 206 2 273 2 121 2 475 4 582 2 351 2 172 4 211 2 69 2 452 2 50 2 615 4 357 2 71 2 216 2 660 2 
404 2 258 6 0 2 235 10 74 2 640 2 178 2 283 4 135 2 312 2 592 2 201 2 487 2 137 4 675 4 266 2 390 2 286 2 392 4 373 2 715 2 490 2 60 4 470 4 251 2 166 2 494 2 206 2 273 2 121 2 475 4 582 2 351 2 172 4 211 2 69 2 452 2 50 2 615 4 357 2 71 2 216 2 660 2 
404 2 258 6 0 2 235 10 74 2 640 2 178 2 283 4 135 2 312 2 592 2 201 2 487 2 137 4 675 4 266 2 390 2 286 2 392 4 373 2 715 2 490 2 60 4 470 4 251 2 166 2 494 2 206 2 273 2 121 2 475 4 582 2 351 2 172 4 211 2 69 2 452 2 50 2 615 4 357 2 71 2 216 2 660 2 
404 2 258 6 0 2 235 10 74 2 640 2 178 4 283 4 135 2 312 2 592 2 201 2 487 4 137 4 675 4 266 2 390 2 286 2 392 4 373 2 715 2 490 2 60 4 470 4 251 2 166 2 494 2 206 4 273 2 121 2 475 4 582 2 351 2 172 4 211 2 69 2 452 2 50 2 615 4 357 2 71 2 216 2 660 2 
80 2 545 2 81 2 318 2 609 2 46 2 
254 2 292 2 213 2 369 2 318 2 614 2 126 2 
235 10 176 1 305 2 4 2 53 2 283 8 621 2 555 2 11 1 730 1 445 2 537 2 536 2 649 2 42 2 628 1 377 2 395 2 721 2 149 2 97 1 233 2 585 2 550 2 638 2 455 2 
235 6 361 4 52 2 131 1 178 2 283 6 506 2 574 2 592 6 201 6 263 2 137 12 265 2 487 3 266 6 245 2 647 4 392 15 342 2 715 6 603 2 490 2 470 4 471 2 166 6 86 2 206 5 273 6 582 6 98 2 303 2 
235 1 568 1 29 2 283 1 475 2 438 2 753 2 242 2 200 2 255 2 172 2 432 2 340 2 636 2 615 2 224 7 734 2 246 4 
29 2 475 2 438 4 753 2 242 2 200 2 172 2 255 4 432 4 340 2 636 2 615 2 224 6 734 2 246 4 
235 1 568 1 29 8 283 1 475 2 438 8 753 2 242 6 200 2 172 2 255 8 432 8 340 2 636 2 615 2 224 10 734 2 246 4 
475 2 438 2 753 2 200 2 172 2 255 2 432 2 340 2 636 2 615 2 224 2 734 2 246 2 
527 2 435 2 235 6 725 2 283 6 8 2 285 1 732 2 169 2 124 2 24 2 639 2 304 2 697 2 553 2 310 2 564 1 
527 2 435 2 639 2 235 6 725 2 697 2 294 2 308 2 283 6 553 2 310 2 8 2 169 2 124 2 732 4 24 2 
527 2 435 2 639 2 304 1 235 6 725 2 697 2 294 2 308 2 283 6 553 2 8 2 169 2 124 2 193 2 732 4 24 2 
527 2 435 2 639 2 304 2 235 6 725 2 697 2 283 6 553 2 8 2 666 2 169 2 124 2 732 2 24 2 
110 2 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V ERROR java.lang.Error 
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V ERROR utilMDE.Assert$AssertionException (127,472) 840 
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.NullPointerException (3,166,275,342,433,461,475,589,623,633,674,822,925,935,982,999,1205) 658 659 (3,166,275,342,433,461,475,589,623,633,674,822,925,935,982,999,1205) 489 659 (3,166,275,342,433,461,475,589,623,633,674,822,925,935,982,999,1205) 779 (3,166,275,342,433,461,475,589,623,633,674,822,925,935,982,999,1205) 360 (3,166,275,342,433,461,475,589,623,633,674,822,925,935,982,999,1205) 57 278 659 (3,166,275,342,433,461,475,589,623,633,674,822,925,935,982,999,1205) 489 659 (3,166,275,342,433,461,475,589,623,633,674,822,925,935,982,999,1205) 282 (3,166,275,342,433,461,475,589,623,633,674,822,925,935,982,999,1205) 360 (3,166,275,342,433,461,475,589,623,633,674,822,925,935,982,999,1205) 1055 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V ERROR utilMDE.Assert$AssertionException (127,472) 840 477 620 836 29 48 510 1082 (530,606) 902 (187,1106) (530,606) 1144 (187,1106) 375 677 
daikon.test.diff.DiffTester:testInvs1Invs1()V ERROR utilMDE.Assert$AssertionException (127,472) 840 477 620 836 29 48 510 1082 (530,606) 902 (187,1106) (530,606) 1144 (187,1106) 375 677 
daikon.test.diff.DiffTester:testInvs1Invs2()V ERROR utilMDE.Assert$AssertionException (127,472) 840 477 620 836 29 48 510 1082 (530,606) 902 (187,1106) (530,606) 1144 (187,1106) 375 677 
daikon.test.diff.DiffTester:testInvs1Invs3()V ERROR utilMDE.Assert$AssertionException (127,472) 840 477 620 836 29 48 510 1082 (530,606) 902 (187,1106) (530,606) 1144 (187,1106) 375 677 
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 638 702 397 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_0()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_1()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_2()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_3()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_4()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_5()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_6()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_7()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_8()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_9()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_10()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_11()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_12()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_13()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_14()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_15()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_16()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_17()V PASSED
daikon.test.split.SplitterFactoryTest:testmisc_Fib_main_18()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_19()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_20()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_21()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_22()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_23()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_24()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_25()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_26()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_27()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_28()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_29()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_30()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_31()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_32()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__33()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__34()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__35()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__36()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__37()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__38()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__39()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__40()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__41()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__42()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__43()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Modifiers;)V
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.Quant:lexGTE([I[I)Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ModBitTracker:num_samples()I
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:sorted([I)Z
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:memberOf(D[F)Z
jtb.JavaParser:jj_3R_117()Z
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_148()Z
utilMDE.FuzzyFloat:gt(DD)Z
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:gt(II)Z
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:lexNotEqual([I[I)Z
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
jtb.JavaParser:jj_3R_137()Z
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Invariant:getConfidence()D
daikon.VarInfoName:hashCode()I
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.ClassOrInterfaceBody:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.ProglangType:isArray()Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParser:jj_3R_75()Z
jtb.JavaParser:jj_2_14(I)Z
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:pairwiseEqual([I[I)Z
jtb.JavaParser:jj_3R_48()Z
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
utilMDE.MathMDE:negate(I)I
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
jtb.JavaParser:jj_3_17()Z
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.Quant:eltsEqualIndex([I)Z
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.ProglangType:dimensions()I
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
jtb.JavaParser:jj_3R_161()Z
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Invariant:logOn()Z
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.test.TestAst.ClassOrInterfaceDeclarationHarvester:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.Quant:lt(II)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat; | CONDITION | 1730 | if (x) -> if (!x)
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:sum([I)I
daikon.test.TestQuant:assert_arrays_equals([I[I)V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:pairwiseDivides([I[I)Z
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
utilMDE.Assert:assertTrue(Z)V
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_2_35(I)Z
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.diff.Node:Node()V
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.Quant:ne(II)Z
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE:sum([D)D
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.Quant:pairwiseGT([I[I)Z
utilMDE.FuzzyFloat:gte(DD)Z
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
daikon.Quant:subsetOf([B[I)Z
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_169()Z
utilMDE.FuzzyFloat:lte(DD)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.Quant:eq(II)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeBound;)V
utilMDE.ArraysMDE:element_range([I)I
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
jtb.JavaParser:jj_ntk()I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.Quant:intersection([I[I)[I
utilMDE.FuzzyFloat:indexOf([D[D)I
jtb.JavaParser:jj_3_19()Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.ProglangType:isScalar()Z
jtb.JavaParser:jj_3_20()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:memberOf(J[J)Z
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.Quant:memberOf(S[S)Z
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.Quant:pairwiseGTE([I[I)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarComparabilityImplicit:alwaysComparable()Z
jtb.JavaParser:jj_3R_67()Z
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
jtb.syntaxtree.NodeOptional:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.VariableDeclaratorId:VariableDeclaratorId(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.VarInfoName.Simple:isLiteralConstant()Z
jtb.syntaxtree.NodeToken:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:fn_inverse([II)[I
jtb.JavaParser:jj_2_5(I)Z
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.ModBitTracker:split(I)I
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_25()Z
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
utilMDE.LimitedSizeIntSet:add(I)V
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.Quant:noDups([I)Z
daikon.Quant:eltsLtIndex([I)Z
jtb.JavaParser:jj_3R_47()Z
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
utilMDE.OrderedPairIterator:setnext1()V
daikon.VarInfo:new_ppt()V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_76()Z
jtb.JavaParser:jj_2_18(I)Z
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
jtb.JavaParser:jj_3R_55()Z
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_100()Z
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaCharStream:getBeginColumn()I
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.Quant:slice([III)[I
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
utilMDE.FuzzyFloat:FuzzyFloat()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
jtb.syntaxtree.ClassOrInterfaceDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
utilMDE.Intern:internSubsequence([III)[I
jtb.syntaxtree.TypeDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.JavaCharStream:BeginToken()C
daikon.Debug:logOn()Z
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:eq(JJ)Z
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltsGteIndex([I)Z
jtb.JavaParser:jj_3_1()Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eltwiseLT([I)Z
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
jtb.JavaParser:jj_3R_101()Z
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType; | RETURN | 54981 | return null
daikon.Quant:concat([I[I)[I
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.diff.InvMap:InvMap()V
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.Quant:eq(DD)Z
jtb.syntaxtree.ClassOrInterfaceDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_136()Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_scan_token(I)Z
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.Quant:subsetOf([D[D)Z
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
jtb.JavaParser:jj_3R_133()Z
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_119()Z
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.Intern:intern([D)[D
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext2()V
jtb.JavaParser:jj_2_3(I)Z
daikon.Quant:isReverse([I[I)Z
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.DetailedStatisticsVisitor:freq(II)D
jtb.JavaParser:jj_2_4(I)Z
daikon.VarInfo:name()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PackageDeclaration;)V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.Quant:pairwiseLT([I[I)Z
jtb.syntaxtree.TypeBound:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeList:NodeList()V
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_134()Z
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:sum([[D)D
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:lexEqual([I[I)Z
daikon.inv.Invariants:Invariants()V
jtb.syntaxtree.FormalParameter:FormalParameter(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Type;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_88()Z
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.TypeArgument:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.Quant:eltwiseEqual([I)Z
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:name()Ljava.lang.String;
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
jtb.syntaxtree.NodeOptional:present()Z
daikon.test.InvariantFormatTester:execute()Z
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.Quant:pairwiseSquare([I[I)Z
jtb.JavaParser:jj_3R_210()Z
jtb.JavaParser:jj_3R_74()Z
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
jtb.JavaParser:jj_3R_54()Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.JavaParser:jj_3_12()Z
utilMDE.ArraysMDE:subarray([JII)[J
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3_18()Z
daikon.VarInfo:relate_var()V
jtb.JavaParser:VariableDeclaratorId()Ljtb.syntaxtree.VariableDeclaratorId;
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap:processQueue()V
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.CompilationUnit;)V
daikon.inv.Invariant:format()Ljava.lang.String;
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
jtb.JavaParser:jj_2_10(I)Z
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.MathMDE:missing_numbers([I)[I
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_126()Z
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
jtb.JavaParser:jj_3R_162()Z
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
jtb.JavaParser:jj_3R_107()Z
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameter;)V
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.ValueTuple:size()I
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;)Z
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.Quant:setDiff([I[I)[I
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:ClassOrInterfaceDeclaration(Ljtb.syntaxtree.NodeChoice;Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ClassOrInterfaceBody;)V
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.ValueTuple:tuplemodHasModified(I)Z
jtb.syntaxtree.TypeParameters:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeSequence:accept(Ljtb.visitor.Visitor;)V
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.PptName:isEnterPoint()Z
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:eltsLTE([II)Z
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_96()Z
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:subarray([III)[I
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.MathMDE:gcd(JJ)J
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
utilMDE.MathMDE:gcd_differences([I)I
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
utilMDE.MathMDE:pow(II)I
utilMDE.UtilMDE:lineNumberFileReader(Ljava.io.File;)Ljava.io.LineNumberReader;
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
jtb.JavaParser:jj_3R_108()Z
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.syntaxtree.TypeParameter:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_123()Z
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:noDuplicates([D)Z
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
jtb.JavaParser:jj_3R_118()Z
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.Quant:memberOf(F[D)Z
daikon.ProglangType:isIntegral()Z
jtb.JavaParser:jj_3_22()Z
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.Invariant:justified()Z
jtb.JavaParser:jj_3R_125()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:eq(FF)Z
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
utilMDE.FuzzyFloat:eq(DD)Z
jtb.JavaParser:jj_3R_99()Z
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.ModBitTracker:num_vars()I
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
jtb.JavaCharStream:getBeginLine()I
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:enabled()Z
jtb.syntaxtree.VariableDeclaratorId:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeSequence:elements()Ljava.util.Enumeration;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
jtb.JavaParser:jj_3R_80()Z
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.PptSlice0:initInvariantsSeen()V
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeDeclaration;)V
daikon.Quant:memberOf(I[I)Z
jtb.syntaxtree.TypeDeclaration:TypeDeclaration(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.TypeArguments:TypeArguments(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeArgument;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quant:setEqual([I[I)Z
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_149()Z
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_2_36(I)Z
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Quant:eltsLT([II)Z
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_180()Z
jtb.JavaParser:jj_3_36()Z
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.inv.unary.LowerBoundCore:computeProbability()D
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
jtb.JavaParser:jj_3R_122()Z
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.FormatTestCase:passes()Z
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_57()Z
jtb.syntaxtree.FormalParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
utilMDE.MathMDE:gcd([I)I
jtb.JavaParser:jj_3_21()Z
jtb.JavaParser:jj_3_3()Z
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.MethodDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeChoice:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.ArraysMDE:min([I)I
daikon.Quant:lte(II)Z
utilMDE.ArraysMDE:sum([[I)I
utilMDE.Intern:intern([J)[J
jtb.JavaCharStream:getEndColumn()I
daikon.ProglangType:isPseudoArray()Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
jtb.JavaParser:jj_3R_124()Z
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ImportDeclaration;)V
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.Quant:sameLength([I[I)Z
utilMDE.ArraysMDE:indexOf([II)I
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
jtb.JavaParser:jj_3R_53()Z
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.ValueTuple:isMissing(I)Z
utilMDE.MathMDE:mod_positive(II)I
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_164()Z
daikon.Quant:eltsGT([II)Z
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
jtb.JavaParser:jj_3R_116()Z
jtb.JavaParser:jj_3R_105()Z
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3_14()Z
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
jtb.JavaParser:jj_3_29()Z
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.Quant:lexGT([I[I)Z
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
jtb.syntaxtree.ClassOrInterfaceBody:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V | ASSIGN | 25295 | = null
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:jj_3R_63()Z
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_68()Z
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
jtb.JavaParser:jj_3R_98()Z
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
jtb.JavaParser:jj_3R_49()Z
daikon.inv.Invariant:prob_or(DD)D
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.Quant:subsetOf([S[S)Z
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_2_1(I)Z
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
utilMDE.WeakHasherMap:size()I
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
utilMDE.Intern:intern([I)[I
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.diff.Node:getUserRight()Ljava.lang.Object;
utilMDE.Intern.SequenceAndIndices:hashCode()I
jtb.syntaxtree.NodeListOptional:elements()Ljava.util.Enumeration;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.FuzzyFloat:indexOf([DD)I
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.Quant:memberOf(F[F)Z
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
jtb.JavaParser:jj_3R_56()Z
jtb.JavaParser:jj_3R_77()Z
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
utilMDE.OrderedPairIterator:hasNext()Z
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_103()Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.Quant:lexLT([I[I)Z
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.Quant:eltwiseGT([I)Z
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.ProglangType:baseIsScalar()Z
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;)V
daikon.ValueTuple:isMissingNonsensical(I)Z
jtb.JavaParser:jj_3_5()Z
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
jtb.JavaParser:jj_3R_60()Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_104()Z
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
utilMDE.ArraysMDE:indexOf([ZZ)I
jtb.JavaParser:jj_3R_163()Z
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
utilMDE.ArraysMDE:max([I)I
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_58()Z
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Name;)V
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.PptSlice0:arity()I
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltsNotEqual([II)Z
daikon.inv.Invariant:prob_and(DD)D | CONSTANT | 8716 | 1 -> -1
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
utilMDE.FuzzyFloat:ne(DD)Z
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:gcd(II)I
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
jtb.JavaParser:jj_3_27()Z
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_135()Z
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
jtb.JavaParser:jj_2_21(I)Z
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ModBitTracker:num_sets()I
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3_4()Z
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_72()Z
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
utilMDE.MathMDE:modulus([I)[I
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_114()Z
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.NonZero:is_pointer()Z
jtb.syntaxtree.CompilationUnit:CompilationUnit(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.Quant:pairwiseLTE([I[I)Z
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_35()Z
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_97()Z
jtb.syntaxtree.TypeDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.ModBitTracker:ModBitTracker(I)V
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
utilMDE.Intern:numIntArrays()I
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
daikon.Quant:eltwiseLTE([I)Z
jtb.JavaParser:jj_3R_69()Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceBody:ClassOrInterfaceBody(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:subsetOf([D[F)Z
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_2_17(I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.Invariant:prob_is_ge(DD)D
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBody;)V
utilMDE.ArraysMDE:concat([I[I)[I
utilMDE.WeakIdentityHashMap:indexFor(II)I
jtb.JavaParser:jj_3R_102()Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.PptSlice0.ImplicationWrapper:hashCode()I
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_86()Z
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.config.Configuration:apply(Ljava.lang.String;)V
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
jtb.syntaxtree.ImportDeclaration:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.VarInfoName.ElementsFinder:inPre()Z
jtb.JavaParser:FormalParameter()Ljtb.syntaxtree.FormalParameter;
jtb.JavaParser:jj_3R_50()Z
daikon.PptSlice1:num_samples()I
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
utilMDE.FuzzyFloat:lt(DD)Z
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
utilMDE.ArraysMDE:min_max([I)[I
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:eltsGtIndex([I)Z
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
utilMDE.UtilMDE:lineNumberFileReader(Ljava.lang.String;)Ljava.io.LineNumberReader;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
jtb.JavaCharStream:ReadByte()C
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
jtb.JavaParser:jj_3R_62()Z
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
jtb.syntaxtree.TypeArguments:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
daikon.diff.Node:add(Ljava.lang.Object;)V
jtb.syntaxtree.Name:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.inv.OutputFormat:toString()Ljava.lang.String;
jtb.JavaCharStream:readChar()C
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeSequence;)V
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;Ljava.lang.String;)V
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
jtb.JavaParser:jj_3_30()Z
daikon.Quant:eltsEqual([II)Z
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
jtb.JavaParser:getToken(I)Ljtb.Token;
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_51()Z
jtb.JavaParser:jj_3R_81()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:jj_3_28()Z
utilMDE.ArraysMDE:noDuplicates([J)Z
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
jtb.JavaCharStream:backup(I)V
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
jtb.JavaParser:jj_3_13()Z
daikon.PptTopLevel:getInvariants()Ljava.util.List;
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_2_13(I)Z
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I | ASSIGN | 23606 | = null
daikon.Quant:union([I[I)[I
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_121()Z
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.ProglangType:baseIsIntegral()Z
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_115()Z
daikon.Quant:eltsNotEqualIndex([I)Z
jtb.JavaParser:jj_3R_89()Z
jtb.JavaParser:jj_3_10()Z
jtb.syntaxtree.CompilationUnit:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:fn_identity(I)[I
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
jtb.JavaParser:jj_3R_106()Z
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
daikon.Quant:subsetOf([F[D)Z
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
jtb.JavaParser:jj_3R_73()Z
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_2_15(I)Z
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.Quant:eltsLteIndex([I)Z
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_85()Z
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.ValueTuple:isMissingFlow(I)Z
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptName:isCombinedExitPoint()Z
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
utilMDE.Options.OptionInfo:argument_required()Z
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaCharStream:GetImage()Ljava.lang.String;
jtb.syntaxtree.Modifiers:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.Quant:gte(II)Z
jtb.JavaParser:jj_2_16(I)Z
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.Ppt:Ppt()V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.Token:newToken(I)Ljtb.Token;
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:subsetOf([I[I)Z
jtb.JavaParser:jj_3R_109()Z
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3_15()Z
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.inv.ValueSet:ValueSet(I)V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
jtb.JavaParser:jj_2_25(I)Z
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
jtb.syntaxtree.PackageDeclaration:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
utilMDE.Intern:internSubsequence([JII)[J
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.Quant:subsetOf([F[F)Z
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
jtb.JavaParser:jj_3R_52()Z
utilMDE.MathMDE:sign(I)I
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_70()Z
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;Z)Z
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
jtb.JavaParser:jj_3R_120()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaCharStream:FillBuff()V
daikon.PptSlice2:arity()I
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_61()Z
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE:pow_fast(II)I
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.VarInfoName:isLiteralConstant()Z
jtb.JavaParser:jj_3_16()Z
daikon.Quant:eltsGTE([II)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
jtb.JavaCharStream:getEndLine()I
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
utilMDE.LimitedSizeIntSet:size()I
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
jtb.JavaParser:jj_2_12(I)Z
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.RootNode:RootNode()V
daikon.Quant:eltwiseGTE([I)Z
jtb.syntaxtree.NodeListOptional:present()Z
jtb.syntaxtree.ClassOrInterfaceType:accept(Ljtb.visitor.Visitor;)V
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
jtb.JavaParser:jj_3R_110()Z
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.Quant:subsetOf([J[J)Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
jtb.JavaParser:jj_3R_87()Z
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:eltwiseNotEqual([I)Z
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.Quant:lexLTE([I[I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameters;)V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.PptSlice1:arity()I
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
472 2 1141 2 1176 4 127 2 319 2 1133 2 229 2 851 2 120 2 
724 6 8 2 270 2 468 2 770 2 790 2 334 6 821 2 251 6 1103 2 143 2 
1025 6 726 4 937 6 561 2 894 2 472 2 358 4 127 2 743 2 1190 2 928 6 1033 6 144 2 
133 2 627 8 753 8 847 16 281 2 172 28 1132 2 92 10 414 2 218 2 824 10 66 12 574 8 799 16 422 10 505 4 722 2 647 26 765 10 767 16 472 6 160 4 740 2 517 10 127 6 621 8 1125 4 667 6 750 6 911 4 
975 6 1060 4 
492 2 
1130 2 1133 2 1059 2 713 2 97 2 1065 2 16 2 503 2 188 2 857 2 646 2 114 2 33 2 939 2 586 2 809 2 127 4 948 2 361 2 664 2 438 2 666 2 1024 2 277 2 814 2 214 4 218 2 884 2 964 4 607 2 758 2 145 2 539 2 684 2 686 4 469 2 773 2 471 2 472 4 777 2 694 2 479 2 164 4 167 2 
525 6 1 2 133 2 847 32 876 3 332 4 172 52 917 6 92 6 672 6 673 4 824 15 1104 4 66 22 574 6 422 15 799 32 830 2 833 5 1004 4 647 47 540 2 305 8 765 15 767 32 508 2 34 4 942 6 39 6 472 4 691 4 517 15 47 2 127 4 621 19 1125 2 747 4 667 4 750 4 
482 2 694 2 232 2 
28 2 211 2 957 2 958 2 155 2 176 2 565 22 1187 2 796 2 757 2 163 2 758 2 843 10 53 2 
912 2 847 2 172 6 447 2 92 4 824 2 66 2 422 2 799 2 967 2 647 4 765 2 767 2 582 2 352 2 517 2 621 2 1125 2 85 2 812 2 701 2 746 2 750 2 
647 12 6 2 847 8 765 4 767 8 172 16 917 6 672 6 673 4 160 2 824 4 691 4 66 4 517 4 203 2 799 8 422 4 
482 2 245 2 704 4 526 6 1133 2 850 10 1137 2 885 2 964 2 825 2 1034 2 829 2 1108 2 395 4 1008 2 653 2 75 2 1040 4 976 34 232 6 514 2 736 2 515 4 1162 2 1121 2 1207 2 694 8 696 4 520 2 440 2 167 2 521 2 
54 2 0 2 1092 2 492 2 920 2 1066 2 70 2 314 2 745 2 362 2 
168 2 327 3 170 2 486 2 1058 1 490 2 785 16 174 2 918 1 495 2 635 2 636 3 179 2 181 2 640 2 341 12 800 2 644 2 933 2 190 2 346 2 650 2 651 2 1079 6 350 5 940 2 511 6 944 1 945 2 355 2 806 2 46 4 359 2 49 4 663 1 1084 2 1085 2 1088 8 52 2 55 2 56 2 210 1 372 4 1093 2 527 2 954 3 1097 2 955 2 956 2 61 16 62 1 217 2 675 16 219 2 676 1 383 2 384 2 678 4 220 1 533 1 386 2 534 2 1105 6 387 3 71 2 388 2 1109 2 832 2 225 2 393 12 972 4 837 2 1114 3 77 2 978 4 234 2 690 2 842 2 1122 2 547 16 242 2 550 2 697 2 553 2 700 2 244 2 559 32 246 2 563 2 851 2 710 2 419 2 712 4 564 3 250 24 1138 2 252 2 98 2 1142 2 256 2 259 2 423 2 1000 2 105 3 1002 1 577 2 110 3 263 2 723 1 264 1 1152 2 863 2 271 2 1156 2 1016 2 124 2 587 2 127 32 434 2 870 2 1169 1 276 8 751 3 875 3 755 1 879 1 284 2 1027 3 286 2 882 1 600 6 138 2 452 1 293 2 298 2 300 24 1194 2 150 2 764 2 890 2 1043 8 472 34 474 4 318 2 1049 32 1208 3 1050 2 909 2 481 2 
472 2 934 2 
1173 2 472 2 840 2 
738 2 
3 4 626 94 2 2 326 4 628 2 914 2 916 28 331 2 330 18 629 2 630 18 335 2 10 2 633 38 11 2 337 2 639 4 340 2 925 2 927 2 19 2 21 2 342 2 643 36 24 30 23 18 931 2 645 4 932 10 27 16 648 4 347 4 935 2 649 2 349 2 938 2 32 2 654 2 35 12 37 2 351 8 941 2 943 2 655 2 356 4 946 16 656 2 947 2 44 2 657 2 658 2 659 14 660 4 360 18 50 2 950 2 951 4 368 4 57 2 668 94 370 2 58 2 373 2 671 2 376 2 60 44 959 2 960 2 378 2 377 2 674 2 63 2 963 62 64 12 381 4 379 2 69 4 392 2 389 20 970 4 394 2 971 246 680 2 973 2 681 48 974 2 396 16 78 4 977 2 687 2 979 2 400 2 401 2 980 4 83 2 404 8 692 2 982 16 699 4 87 2 90 2 410 4 705 8 986 2 706 2 413 16 708 4 418 2 992 2 994 4 995 6 714 18 715 2 996 2 420 2 998 246 101 4 717 22 421 4 999 14 425 2 106 2 108 48 721 2 720 4 728 2 1011 2 428 2 1013 2 730 2 732 2 731 2 117 2 116 2 733 14 1014 4 1015 4 118 2 121 4 734 74 1018 2 431 62 735 6 737 4 433 2 1019 4 739 4 1020 2 744 4 1021 12 435 4 1023 2 437 4 439 2 129 2 1026 4 444 74 754 16 445 2 446 2 450 4 1032 94 456 2 760 2 1036 22 761 4 762 2 461 4 763 12 462 8 1038 6 766 2 768 62 1039 12 775 2 158 2 1046 2 1045 18 1047 50 473 2 475 2 476 2 162 2 779 2 1051 2 166 2 1053 2 1055 2 1054 8 169 2 488 2 489 14 171 2 173 44 788 2 177 2 792 2 793 4 1063 2 1064 56 500 14 180 2 501 2 798 2 1068 4 1072 2 1073 4 507 2 191 4 802 2 1075 4 509 2 195 2 196 2 198 4 199 16 1080 4 807 2 200 2 201 2 205 38 810 4 207 2 519 22 816 4 817 2 209 2 818 2 1094 2 1096 4 528 2 1095 52 1098 2 215 2 820 8 1100 4 1101 2 822 4 531 4 537 18 1107 94 1110 2 226 2 1113 2 228 2 1116 2 838 42 1117 6 545 94 544 18 548 2 1124 2 1126 2 552 2 1129 2 845 2 846 4 555 2 562 2 249 4 852 2 1135 2 1136 4 566 2 1140 2 1139 90 254 18 571 2 255 2 568 2 573 94 257 4 855 2 260 2 1147 2 261 2 262 94 1148 2 579 2 265 2 580 2 1150 18 861 4 581 14 864 30 1154 2 583 2 1155 2 1159 4 275 18 867 2 868 2 589 2 869 2 1163 42 871 2 1165 4 278 2 591 2 1174 94 279 2 1177 104 592 12 280 2 282 2 878 2 594 4 595 44 283 94 1178 8 285 4 1180 4 287 4 599 6 288 2 883 2 601 2 1186 2 1185 18 290 44 1188 2 292 4 1189 2 887 2 888 8 296 2 1191 42 297 2 299 2 610 94 303 2 613 2 614 2 893 2 1197 94 615 2 1200 4 311 2 313 2 1203 30 315 2 1205 2 904 2 905 2 317 358 622 2 623 2 320 4 322 246 907 14 908 2 910 2 
685 2 274 1 576 2 165 2 
1052 2 165 2 
694 2 115 2 872 2 505 2 590 2 165 2 175 2 
597 2 590 2 165 2 
1112 2 590 2 165 2 
685 2 142 2 336 2 
590 2 165 2 
142 2 1012 2 
839 2 165 2 
685 2 142 2 68 2 
348 2 685 2 1099 2 
901 2 685 2 40 2 
685 2 154 2 665 2 
189 2 685 2 109 2 
142 2 391 2 
165 2 1202 2 
294 2 1099 2 
915 2 40 2 
783 2 665 2 
1184 2 109 2 
142 2 94 2 
291 2 109 2 
966 2 665 2 
1078 2 40 2 
1099 2 248 2 
371 2 685 2 142 2 68 2 
371 2 42 2 685 2 142 2 68 2 
685 2 142 2 119 2 
399 2 685 2 142 2 
1091 2 711 2 137 2 253 2 
304 2 936 2 694 2 115 2 
304 2 936 2 694 2 115 2 872 2 1041 2 
694 2 115 2 505 2 590 2 165 2 470 2 
1130 2 247 2 
269 2 694 2 115 2 505 2 
707 2 665 2 
1166 2 109 2 
603 2 1099 2 
497 2 40 2 
40 2 781 2 109 2 
1204 2 40 2 109 2 
725 2 40 2 109 2 
5 2 40 2 109 2 
1090 2 328 6 107 6 1010 2 1115 2 115 2 38 2 694 2 
859 2 142 2 
542 2 558 2 652 2 1198 4 1134 2 310 4 565 6 289 2 159 2 546 2 742 2 182 2 759 2 22 2 324 2 1069 2 929 2 185 2 
685 2 104 2 
495 2 
170 2 486 1 490 2 491 2 789 2 174 2 179 6 800 2 341 8 933 2 651 2 1079 2 511 5 940 2 46 2 49 4 1085 2 1084 2 52 2 372 4 527 2 219 2 65 2 678 4 533 2 386 2 1105 6 832 2 1109 4 393 8 972 2 837 2 77 1 1119 2 978 2 234 2 689 4 842 2 1122 2 547 6 242 2 695 2 697 2 408 4 559 4 851 2 709 2 710 2 419 2 1138 2 252 2 423 2 1006 2 1007 2 127 26 587 2 434 2 276 2 755 4 284 2 882 2 600 2 602 2 886 2 609 2 1194 2 764 2 890 2 892 2 467 2 897 2 472 26 903 2 474 4 318 2 1049 6 909 2 1210 2 
170 2 486 2 490 2 491 2 174 2 179 6 800 2 341 8 933 2 651 2 1079 2 511 6 940 2 46 2 49 4 1085 2 1084 2 52 2 372 4 527 2 219 2 65 2 678 4 533 2 386 2 1105 6 832 2 1109 4 393 8 972 2 837 2 77 2 1119 2 978 2 234 2 689 4 842 2 1122 2 547 6 242 2 695 2 697 2 408 4 559 4 851 2 709 2 710 2 419 2 1138 2 252 2 423 2 719 2 1006 2 1007 2 1016 2 127 26 587 2 434 2 873 2 276 2 593 2 755 2 284 2 882 2 600 2 602 2 886 2 1194 2 764 2 890 2 892 2 467 2 897 2 472 26 474 4 318 2 1049 6 909 2 1210 2 
339 2 
227 2 1209 2 
415 2 334 6 919 2 710 2 631 2 96 2 494 2 251 6 12 8 993 4 1144 2 17 4 18 8 800 2 1001 2 187 2 858 2 724 6 1009 2 270 2 1153 4 197 2 127 6 518 2 436 2 813 2 130 2 1087 2 752 2 372 2 375 2 821 2 530 2 219 2 1183 4 677 2 139 4 1106 2 1105 4 295 2 72 2 832 2 1037 2 149 2 889 2 73 4 837 2 468 4 307 2 770 4 771 2 1118 2 80 2 472 12 899 2 842 2 619 2 474 2 909 2 1127 10 
415 2 334 8 919 2 710 2 631 2 96 2 12 8 251 6 993 4 1144 2 17 4 18 8 800 2 1001 2 187 2 858 2 724 8 1009 2 270 2 1153 4 197 2 127 6 518 2 436 2 813 2 130 2 752 2 372 2 374 4 375 2 821 2 530 2 219 2 1183 4 677 2 139 4 1103 2 1106 2 1105 4 295 2 72 2 832 2 1037 2 1193 2 889 2 149 2 73 4 837 2 307 2 468 4 770 4 771 2 1118 2 80 2 472 12 899 2 842 2 619 2 474 2 237 2 909 2 1127 10 
889 2 149 2 1009 2 375 2 770 2 307 2 468 2 334 2 80 2 1183 4 251 2 677 2 139 4 17 2 436 2 1001 2 72 2 187 2 
415 2 334 6 919 2 710 2 631 2 96 2 494 2 251 4 12 4 993 4 1144 2 17 4 18 4 800 2 1001 2 187 2 858 2 724 6 1009 2 270 2 1153 4 197 2 127 6 518 2 436 2 813 2 130 2 1087 2 752 2 372 2 375 2 530 2 219 2 1183 4 677 2 139 4 1103 2 1106 2 1105 4 295 2 72 2 832 2 1037 2 149 2 889 2 73 4 837 2 468 4 307 2 770 4 771 2 1118 2 80 2 472 12 899 2 842 2 619 2 474 2 909 2 1127 6 
415 2 334 4 919 2 710 2 631 2 96 2 494 2 251 6 12 4 993 4 1144 2 17 4 18 4 800 2 1001 2 187 2 858 2 724 6 1009 2 270 2 1153 4 197 2 127 6 518 2 436 2 813 2 130 2 1087 2 752 2 372 2 375 2 530 2 219 2 1183 4 677 2 139 4 1106 2 1105 4 143 2 295 2 72 2 832 2 1037 2 149 2 889 2 73 4 837 2 468 4 307 2 770 4 771 2 1118 2 80 2 472 12 899 2 842 2 619 2 474 2 909 2 1127 6 
415 2 334 6 919 2 710 2 631 2 96 2 494 2 251 6 12 4 993 4 1144 2 17 4 18 8 800 2 1001 2 187 2 858 2 724 6 1009 2 270 2 1153 4 197 2 127 6 518 2 436 2 813 2 130 2 1087 2 752 2 372 2 375 2 821 2 530 2 219 2 1183 4 677 2 139 4 1106 2 1105 4 295 2 72 2 832 2 1037 2 149 2 889 2 73 4 837 2 468 4 307 2 770 4 771 2 1118 2 80 2 472 12 899 2 842 2 619 2 474 2 909 2 1127 6 
415 2 334 6 919 2 710 2 631 2 96 2 494 2 251 8 12 8 993 4 1144 2 17 4 18 8 800 2 1001 2 187 2 858 2 724 8 1009 2 270 2 1153 4 197 2 127 6 518 2 436 2 813 2 130 2 1087 2 752 2 372 2 375 2 821 2 530 2 219 2 1183 4 677 2 139 4 1106 2 1105 4 143 2 295 2 72 2 832 2 1037 2 149 2 889 2 73 4 837 2 468 4 307 2 770 4 771 2 1118 2 80 2 472 12 899 2 842 2 619 2 474 2 909 2 1127 10 
415 2 334 6 919 2 710 2 631 2 96 2 494 2 251 6 12 8 993 4 1144 2 17 4 18 8 800 2 1001 2 187 2 858 2 724 6 1009 2 270 2 1153 4 197 2 127 6 518 2 436 2 813 2 130 2 1087 2 752 2 372 2 375 2 821 2 530 2 219 2 1183 4 677 2 139 4 1106 2 1105 4 295 2 72 2 832 2 1037 2 149 2 889 2 73 4 837 2 468 4 307 2 770 4 771 2 1118 2 80 2 472 12 899 2 842 2 619 2 474 2 909 2 1127 10 
170 2 486 2 334 4 174 2 631 2 494 2 179 6 17 4 18 2 341 4 800 2 187 2 26 2 934 2 29 2 1076 2 651 2 1079 2 510 2 511 6 197 2 46 2 1082 2 48 2 811 2 49 4 1084 2 1085 2 813 2 952 2 372 4 527 2 375 2 530 2 219 2 65 2 677 2 678 4 536 2 1106 2 1105 6 968 2 72 2 832 2 393 4 972 2 73 8 836 2 837 2 77 2 1118 2 840 2 978 2 80 2 842 2 1122 2 547 6 695 2 242 2 697 2 844 2 408 4 559 2 849 2 851 2 415 2 710 2 96 2 419 2 993 6 251 8 252 2 1144 2 856 2 103 2 424 2 1001 2 724 12 858 2 266 2 1009 2 268 2 1153 4 270 4 738 2 127 20 434 2 436 2 130 2 276 2 1171 2 1173 2 752 2 135 2 284 4 449 2 451 2 600 2 1183 4 602 2 139 4 455 2 606 2 143 4 295 2 1037 2 459 4 889 2 149 2 1194 2 764 2 890 2 770 4 307 2 468 4 771 2 1042 4 157 2 899 2 472 32 900 2 902 2 619 2 474 4 620 2 1049 8 477 2 1210 2 909 2 
170 2 486 2 334 8 174 2 631 2 494 2 179 6 17 4 18 6 341 6 800 2 187 2 26 2 934 2 29 2 1076 2 651 2 1079 2 510 2 511 6 197 2 46 4 1082 2 48 2 811 2 49 4 1084 2 1085 2 813 2 952 2 372 4 527 2 375 2 821 4 530 2 219 2 65 2 677 2 678 4 536 2 1106 2 1105 6 968 2 72 2 832 2 393 6 972 4 73 8 836 2 837 2 77 2 1118 2 840 2 978 4 80 2 842 2 1122 2 547 6 695 2 242 2 697 2 844 2 408 4 559 2 849 2 851 2 415 2 710 2 96 2 419 2 993 6 251 8 252 2 1144 2 856 2 103 2 424 2 1001 2 724 12 858 2 266 2 1009 2 268 2 1153 4 270 4 738 2 127 20 434 2 436 2 130 2 276 2 1171 2 1173 2 752 2 135 2 284 4 449 2 451 2 600 2 1183 4 602 2 139 4 455 2 606 2 295 2 1037 2 459 4 889 2 149 2 1194 2 764 2 890 2 770 4 307 2 468 4 771 2 1042 4 157 2 899 2 472 32 900 2 902 2 619 2 474 4 620 2 1049 8 477 2 1210 2 909 2 
170 2 486 2 334 8 174 2 631 2 494 2 12 4 179 6 17 4 18 6 341 6 800 2 187 2 26 2 934 2 29 2 1076 2 651 2 1079 2 510 2 511 6 197 2 46 4 1082 2 48 2 811 2 49 4 1084 2 1085 2 813 2 952 2 372 4 527 2 375 2 821 4 530 2 219 2 65 2 677 2 678 4 536 2 1106 2 1105 6 968 2 72 2 832 2 393 6 972 4 73 8 836 2 837 2 77 2 1118 2 840 2 978 4 80 2 842 2 1122 2 547 6 695 2 242 2 697 2 1127 4 844 2 408 4 559 2 849 2 851 2 415 2 710 2 96 2 419 2 993 6 251 8 252 2 1144 2 856 2 103 2 424 2 1001 2 724 12 858 2 266 2 1009 2 268 2 1153 4 270 4 738 2 127 20 434 2 436 2 130 2 276 2 1171 2 1173 2 752 2 135 2 284 4 449 2 451 2 600 2 1183 4 602 2 139 4 455 2 606 2 295 2 1037 2 459 4 889 2 149 2 1194 2 764 2 890 2 770 4 307 2 468 4 771 2 1042 4 157 2 899 2 472 32 900 2 902 2 619 2 474 4 620 2 1049 8 477 2 1210 2 909 2 
170 2 486 2 334 10 174 2 631 2 494 2 12 4 179 8 17 4 18 6 341 6 800 2 187 2 506 2 26 2 934 2 29 2 1076 2 651 2 1079 4 510 2 511 6 197 2 46 4 1082 2 48 2 811 2 49 4 1084 2 1085 2 813 2 952 2 372 4 527 2 375 2 821 4 530 2 219 2 65 2 677 2 1103 2 678 4 385 2 536 2 1106 2 1105 6 968 2 222 2 72 2 832 2 393 6 972 4 73 8 836 2 837 2 77 2 1118 2 840 2 978 4 80 2 842 2 1122 2 547 8 695 2 242 2 697 2 1127 4 844 2 408 6 559 4 849 2 851 2 415 2 710 2 96 2 419 2 853 2 251 10 993 6 252 2 1144 2 856 2 1001 2 724 16 858 2 266 2 1009 2 268 2 1153 4 270 4 738 2 127 18 434 2 436 2 128 2 130 2 276 2 1171 2 1173 2 752 2 135 2 284 2 449 2 1028 2 451 2 600 4 1183 4 602 2 139 4 455 2 606 2 143 2 295 2 1037 2 459 4 889 2 149 2 1194 2 764 2 890 2 770 4 307 2 468 4 771 2 1042 4 157 2 899 2 472 30 900 2 902 2 619 2 474 4 620 2 1049 12 477 2 1210 2 909 2 
415 2 821 2 334 6 631 2 494 2 96 2 1183 2 993 2 12 4 251 6 139 2 18 6 1001 2 72 2 1037 2 724 4 858 2 889 2 149 2 73 2 1009 2 1153 2 270 2 307 2 468 4 770 4 771 2 1118 2 197 2 899 2 472 4 436 2 130 2 1127 4 813 2 
484 3 170 2 486 2 334 6 174 2 631 2 494 2 495 2 498 2 179 6 18 6 800 2 651 2 1079 3 511 6 197 2 49 4 1085 2 1084 2 813 2 372 4 527 2 1093 2 821 2 219 2 678 4 1105 6 832 2 72 2 73 2 837 2 77 2 1118 2 842 2 1122 2 547 6 695 2 242 2 697 2 1127 2 408 4 556 2 559 3 563 2 851 2 415 2 710 2 96 2 419 2 993 2 251 6 252 2 102 2 424 2 103 2 1001 2 578 2 263 2 724 4 858 2 1009 2 1153 2 270 2 127 24 436 2 130 2 284 4 1183 2 600 3 602 2 139 2 295 2 608 2 1037 2 149 2 1194 2 889 2 764 2 890 2 770 4 468 4 307 2 771 2 899 2 472 28 474 4 1049 8 909 2 1210 2 
899 2 7 2 771 2 
899 2 7 2 771 2 
7 2 1057 2 170 2 486 2 174 2 334 12 919 2 634 2 12 4 179 2 17 4 18 6 341 4 800 2 343 2 801 2 25 2 187 2 193 4 651 2 511 6 197 2 46 4 202 2 48 2 49 4 1085 2 51 2 366 2 372 4 527 2 953 2 375 2 821 4 219 2 678 4 1103 4 1106 2 1105 6 968 2 832 2 393 4 972 4 73 4 837 2 77 2 978 4 842 2 1122 2 547 2 242 2 695 2 551 2 697 2 1127 6 844 2 559 2 851 2 710 2 419 2 993 4 251 12 252 2 1144 2 103 2 1001 2 724 16 1007 4 270 4 1153 2 127 16 434 4 130 2 752 2 755 2 284 4 1183 2 1029 2 602 2 139 2 141 2 457 2 143 4 1035 2 459 2 1194 2 149 2 764 2 890 2 1196 4 307 4 468 4 770 4 771 4 772 2 616 2 899 6 472 24 898 2 902 2 619 4 474 4 1048 2 1049 2 909 2 1210 6 
1057 2 152 2 837 2 227 2 284 2 616 2 80 2 472 4 41 2 127 2 48 2 551 2 103 2 343 2 1070 2 88 2 1071 2 
7 2 1057 2 170 2 486 2 174 2 334 12 919 2 634 4 12 4 179 2 17 4 18 6 341 4 800 2 343 2 801 2 187 2 193 4 651 2 511 6 197 2 46 4 48 2 49 4 518 2 1085 2 51 2 366 2 372 4 527 2 375 2 821 4 219 2 678 4 1103 4 1106 2 1105 6 968 2 832 2 393 4 972 4 73 4 837 2 77 2 978 4 842 2 1122 2 239 2 547 2 242 2 695 2 697 2 1127 6 844 2 559 4 411 2 851 2 710 2 419 2 993 4 251 12 252 2 1144 2 1001 2 724 16 1007 4 1153 2 270 4 127 16 434 4 130 2 752 4 284 2 1183 2 1029 2 602 2 139 2 605 2 141 2 457 2 143 4 459 2 1194 2 301 2 149 2 764 2 890 2 1196 4 307 4 468 4 770 4 771 4 772 2 616 2 899 6 472 24 898 2 902 2 619 4 474 4 1048 2 1049 2 624 2 909 2 1210 6 
7 2 1057 2 170 2 486 2 174 2 334 12 919 2 634 2 12 4 179 2 15 2 17 4 18 6 341 4 800 2 343 2 801 2 187 2 193 4 651 2 511 6 197 2 46 4 48 2 49 4 518 2 1085 2 51 2 366 2 372 4 527 2 375 2 821 4 219 2 678 4 1103 4 1106 2 1105 6 968 2 832 2 393 4 972 4 73 4 837 2 77 2 978 4 81 2 842 2 1122 2 547 2 242 2 695 2 551 2 697 2 1127 6 844 2 559 2 851 2 710 2 419 2 993 4 251 12 252 2 1144 2 103 2 1001 2 724 16 1007 4 270 4 1153 2 1161 2 432 2 127 16 434 4 130 2 752 4 755 1 284 4 1183 2 1029 2 602 2 139 2 141 2 457 2 143 4 459 2 1194 2 149 2 764 2 890 2 1196 4 307 4 468 4 770 4 771 4 772 2 895 2 616 2 899 6 472 24 898 2 902 2 619 4 474 4 1048 2 1049 2 909 2 1210 6 
170 2 486 2 333 2 174 2 794 2 179 6 638 2 923 2 341 2 800 2 26 2 1076 2 651 2 1079 2 804 2 511 6 808 2 49 4 1085 2 1084 2 1089 2 372 4 527 2 219 2 65 2 678 4 67 2 826 2 536 2 1105 6 832 2 393 2 837 2 77 2 397 2 841 2 82 2 842 2 403 2 1122 2 547 6 1123 2 242 2 697 2 985 2 702 2 89 2 408 4 559 2 848 4 849 2 851 2 710 2 419 2 252 2 997 4 856 2 268 2 111 2 729 2 588 2 127 18 276 2 748 2 448 2 284 2 600 2 602 2 453 2 302 2 1194 2 764 2 890 2 157 2 472 24 474 4 1049 8 909 2 1210 2 1211 2 480 2 
408 2 557 2 559 3 791 2 598 2 416 2 600 3 65 6 756 2 179 2 827 2 146 2 458 2 1005 1 74 2 1079 3 122 4 472 2 161 2 547 2 127 2 1049 2 406 3 1084 2 323 2 
408 2 557 2 559 2 791 2 598 2 416 2 600 2 65 6 756 2 179 2 827 2 146 2 458 2 74 2 1079 2 122 4 472 2 161 2 547 2 127 2 1049 2 406 2 1084 2 323 2 
408 2 557 2 559 2 791 2 598 2 416 2 600 2 65 6 756 2 179 2 827 2 146 2 458 2 74 2 1079 2 122 4 472 2 161 2 547 2 127 2 1049 2 406 2 1084 2 323 2 
847 2 485 6 559 3 172 6 785 2 95 2 567 4 13 2 99 4 100 2 574 4 799 2 422 2 345 2 647 4 866 2 357 2 45 4 741 4 127 4 517 2 1084 2 667 2 524 3 669 2 61 2 529 3 881 2 600 3 824 2 1030 4 604 2 827 2 765 2 767 2 230 3 231 2 472 10 1049 2 983 2 
847 2 485 6 559 2 172 4 785 2 95 2 567 4 13 2 99 4 100 2 574 4 799 2 422 2 345 2 647 4 866 2 357 2 45 4 741 4 127 4 517 2 1084 2 667 2 524 2 133 2 669 2 61 2 529 2 881 2 600 2 824 2 1030 4 604 2 66 2 827 2 765 2 767 2 230 2 231 2 472 10 1049 2 621 2 983 2 
847 2 485 6 559 2 172 4 785 2 95 2 567 4 13 2 99 4 100 2 574 4 799 2 422 2 345 2 647 4 866 2 357 2 45 4 741 4 127 4 517 2 1084 2 667 2 524 2 133 2 669 2 61 2 529 2 881 2 600 2 824 2 1030 4 604 2 66 2 827 2 765 2 767 2 230 2 231 2 472 10 1049 2 621 2 983 2 
847 2 485 6 559 2 172 4 785 2 95 2 567 4 13 2 99 4 100 2 574 4 799 2 422 2 345 2 647 4 866 2 357 2 45 4 741 4 127 4 517 2 1084 2 667 2 524 2 133 2 669 2 61 2 529 2 881 2 600 2 824 2 1030 4 604 2 66 2 827 2 765 2 767 2 230 2 231 2 472 10 1049 2 621 2 983 2 
847 2 485 6 559 2 172 4 785 2 95 2 567 4 13 2 99 4 100 2 574 4 799 2 422 2 345 2 647 4 866 2 357 2 45 4 741 4 127 4 517 2 1084 2 667 2 524 2 133 4 669 2 61 2 529 2 881 2 600 2 824 2 1030 4 604 2 66 4 827 2 765 2 767 2 230 2 231 2 472 10 1049 2 621 4 983 2 
151 2 572 2 1067 2 1167 2 991 2 513 2 
1151 2 151 2 267 2 412 2 662 2 321 2 709 2 
703 2 874 2 443 2 487 1 134 2 987 2 787 2 178 2 570 2 14 2 20 2 224 2 464 2 1199 2 273 2 472 10 1162 1 900 2 127 8 405 2 1083 2 909 2 131 1 521 1 367 1 1172 2 
133 2 847 6 172 16 917 4 990 2 673 2 713 2 854 2 824 6 66 4 574 4 799 6 422 6 833 4 647 12 305 2 684 2 765 6 767 6 34 2 272 2 353 2 79 2 472 6 123 2 402 2 127 6 517 6 621 2 667 2 
1149 2 325 2 194 2 769 2 306 2 93 2 585 4 543 2 472 1 776 6 1030 2 45 2 238 2 99 2 127 1 797 2 698 1 554 2 
1149 2 325 2 194 4 769 4 306 2 93 2 585 4 543 2 776 6 1030 2 45 2 99 2 238 4 797 2 554 2 
1149 2 325 2 194 8 769 8 306 2 93 2 585 4 543 2 472 1 776 10 1030 2 45 2 99 2 238 8 127 1 797 8 698 1 554 6 
1149 2 325 2 194 2 769 2 306 2 93 2 585 2 543 2 776 2 1030 2 45 2 99 2 238 2 
1056 36 483 2 782 10 913 24 486 58 329 4 9 12 496 2 1061 4 637 4 499 2 795 6 924 6 502 17 504 2 926 6 642 2 344 2 184 6 930 2 186 50 192 4 30 34 31 4 1077 2 651 8 803 90 805 2 512 24 511 248 354 92 1081 8 43 4 516 6 204 16 949 10 49 112 661 90 363 4 365 4 364 26 208 6 815 2 819 42 670 2 213 8 216 2 961 24 823 4 380 4 678 88 679 4 535 42 828 4 831 4 538 6 223 4 834 22 393 28 835 2 682 10 541 2 76 11 77 58 233 2 1120 24 688 6 236 2 84 8 240 6 241 4 242 14 407 18 86 8 984 6 409 6 1131 6 988 4 989 8 417 18 569 6 1145 6 258 10 718 4 575 8 1146 6 426 24 727 16 427 10 112 4 113 8 1157 16 1158 6 1017 12 125 4 127 134 1022 124 1168 6 1175 8 442 4 755 4 880 4 1179 84 596 26 1181 4 1031 16 454 2 1195 10 764 14 612 6 611 6 891 6 153 2 465 4 308 6 774 10 1201 2 309 6 896 24 1044 8 312 10 617 4 472 150 1206 1 618 4 778 8 478 2 780 6 
1056 2 4 2 782 2 913 2 486 2 91 2 784 4 988 2 989 2 493 4 632 2 338 2 1145 2 922 2 924 2 502 2 258 2 926 4 641 2 642 2 575 6 930 2 426 2 860 2 727 4 427 2 862 2 651 2 865 2 584 2 429 2 1157 4 430 2 511 44 1160 2 1081 2 126 2 127 44 949 2 49 20 1022 6 1086 2 132 2 441 2 523 2 369 2 1175 2 212 2 59 2 877 2 755 2 213 2 1182 2 962 2 136 2 382 2 1031 4 678 20 965 2 828 2 538 2 147 2 1111 2 148 4 393 38 835 2 1195 2 682 2 611 2 764 2 463 2 541 2 153 2 77 2 156 2 774 2 312 2 398 2 1120 2 472 46 316 6 235 2 688 2 236 2 981 2 906 2 693 2 242 2 625 4 780 2 407 2 243 2 
1056 6 483 2 782 4 486 30 9 14 632 2 1061 4 795 4 921 16 924 4 502 10 926 2 183 4 184 4 930 2 186 8 30 30 192 4 1074 2 1077 2 651 2 36 4 511 104 354 24 43 4 204 8 949 6 49 44 206 32 1086 2 208 4 369 10 819 16 670 2 213 2 961 8 823 4 1102 16 380 4 678 36 679 4 221 8 532 8 535 8 538 4 390 4 393 14 835 2 683 2 541 2 77 28 236 2 688 4 240 4 241 4 549 8 242 6 86 4 407 10 1128 4 409 4 1131 4 560 2 989 2 569 4 1145 4 716 2 258 4 718 4 575 6 1146 4 727 10 427 4 112 2 113 4 1157 10 1158 4 125 4 126 10 127 70 1164 4 1022 24 1168 4 1170 4 749 2 1175 2 880 4 1179 24 1031 10 140 2 1192 4 147 2 460 8 764 6 612 4 1195 4 611 4 891 4 153 2 308 4 1201 2 309 4 617 4 472 78 618 4 906 10 780 4 
1056 2 782 2 486 12 989 2 496 2 637 2 1145 4 924 4 502 2 258 2 926 2 575 4 642 2 344 2 930 2 727 6 30 6 427 2 112 2 651 2 1157 6 511 40 125 2 127 26 204 6 49 14 1022 8 949 2 363 2 1086 2 815 2 132 2 1175 2 755 2 213 2 823 2 1031 6 678 14 454 2 538 4 834 10 393 14 835 2 764 2 1195 2 611 4 541 2 153 2 76 2 77 12 233 2 1044 2 472 28 688 4 236 2 242 2 780 4 407 2 86 4 
1062 2 
522 1 1143 1 466 1 786 1 969 1 1003 1 
522 1 1143 1 466 1 786 1 969 1 1003 1 
522 1 1143 1 466 1 786 1 969 1 1003 1 
522 1 1143 1 466 1 786 1 969 1 1003 1 
522 1 1143 1 466 1 786 1 969 1 1003 1 
522 1 1143 1 466 1 786 1 969 1 1003 1 
522 1 1143 1 466 1 786 1 969 1 1003 1 
522 1 1143 1 466 1 786 1 969 1 1003 1 
522 1 1143 1 466 1 786 1 969 1 1003 1 
522 1 1143 1 466 1 786 1 969 1 1003 1 
522 1 1143 1 466 1 786 1 969 1 1003 1 
522 1 1143 1 466 1 786 1 969 1 1003 1 
522 1 1143 1 466 1 786 1 969 1 1003 1 
522 1 1143 1 466 1 786 1 969 1 1003 1 
522 1 1143 1 466 1 786 1 969 1 1003 1 
522 1 1143 1 466 1 786 1 969 1 1003 1 
522 1 1143 1 466 1 786 1 969 1 1003 1 
522 1 1143 1 466 1 786 1 969 1 1003 1 
522 1 1143 1 466 1 786 1 969 1 1003 1 
522 1 1143 1 466 1 786 1 969 1 1003 1 
522 1 1143 1 466 1 786 1 969 1 1003 1 
522 1 1143 1 466 1 786 1 969 1 1003 1 
522 1 1143 1 466 1 786 1 969 1 1003 1 
522 1 1143 1 466 1 786 1 969 1 1003 1 
522 1 1143 1 466 1 786 1 969 1 1003 1 
522 1 1143 1 466 1 786 1 969 1 1003 1 
522 1 1143 1 466 1 786 1 969 1 1003 1 
522 1 1143 1 466 1 786 1 969 1 1003 1 
522 1 1143 1 466 1 786 1 969 1 1003 1 
522 1 1143 1 466 1 786 1 969 1 1003 1 
522 1 1143 1 466 1 786 1 969 1 1003 1 
522 1 1143 1 466 1 786 1 969 1 1003 1 
522 1 1143 1 466 1 786 1 969 1 1003 1 
522 1 1143 1 466 1 786 1 969 1 1003 1 
522 1 1143 1 466 1 786 1 969 1 1003 1 
522 1 1143 1 466 1 786 1 969 1 1003 1 
522 1 1143 1 466 1 786 1 969 1 1003 1 
522 1 1143 1 466 1 786 1 969 1 1003 1 
522 1 1143 1 466 1 786 1 969 1 1003 1 
522 1 1143 1 466 1 786 1 969 1 1003 1 
522 1 1143 1 466 1 786 1 969 1 1003 1 
522 1 1143 1 466 1 786 1 969 1 1003 1 
522 1 1143 1 466 1 786 1 969 1 1003 1 
522 1 1143 1 466 1 786 1 969 1 1003 1 

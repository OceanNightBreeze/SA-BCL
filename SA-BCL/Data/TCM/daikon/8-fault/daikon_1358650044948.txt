#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.NullPointerException 434 720 392 977 245 1029 674 86 936 95 1008 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NullPointerException 668 668 579 (344,639) 
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException 668 668 579 (344,639) (344,639) 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NullPointerException 668 668 579 (344,639) 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.StringIndexOutOfBoundsException 186 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_0()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_1()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_2()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_3()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_4()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_5()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_6()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_7()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_8()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_9()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_10()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_11()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_12()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_13()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_14()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_15()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_16()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_17()V PASSED
daikon.test.split.SplitterFactoryTest:testmisc_Fib_main_18()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_19()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_20()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_21()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_22()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_23()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_24()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_25()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_26()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_27()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_28()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_29()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_30()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_31()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_32()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__33()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__34()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__35()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__36()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__37()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__38()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__39()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__40()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__41()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__42()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__43()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
jtb.JavaParser:jj_3R_148()Z
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:lexNotEqual([I[I)Z
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:pairwiseGT([I[I)Z
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
jtb.JavaCharStream:getEndLine()I
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_89()Z
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;)Z
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3_30()Z
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_2_36(I)Z
jtb.JavaParser:jj_3R_69()Z
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_57()Z
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.Quant:eltsLteIndex([I)Z
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.diff.InvMap:InvMap()V
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:subsetOf([I[I)Z
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.Quant:intersection([I[I)[I
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_134()Z
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
utilMDE.SimpleLog.LongVal:LongVal(J)V
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.ModBitTracker:split(I)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
jtb.JavaCharStream:readChar()C
daikon.PptSlice2:arity()I
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.Quant:subsetOf([J[J)Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.Quant:eltwiseLT([I)Z
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern:intern([J)[J
daikon.Quant:eltsEqual([II)Z
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String; | RETURN | 2498 | return null
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_149()Z
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:sum([D)D
daikon.Quant:union([I[I)[I
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:max([I)I
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
utilMDE.MathMDE:mod_positive(II)I
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.inv.Invariant:prob_is_ge(DD)D
utilMDE.UtilMDE:lineNumberFileReader(Ljava.io.File;)Ljava.io.LineNumberReader;
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:format()Ljava.lang.String;
utilMDE.MathMDE:gcd_differences([I)I
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:gt(DD)Z
jtb.JavaParser:jj_3_35()Z
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Assert:assertTrue(Z)V
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.ValueSet:ValueSet(I)V
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
jtb.JavaParser:jj_3_10()Z
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.Quant:subsetOf([F[D)Z
daikon.Quant:lt(II)Z
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_2_3(I)Z
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_123()Z
jtb.JavaParser:jj_3R_122()Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_scan_token(I)Z
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_47()Z
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
utilMDE.ArraysMDE:sorted([I)Z
daikon.test.TestQuant:removeAdjacentDups([I)[I
jtb.JavaParser:jj_3R_105()Z
jtb.JavaParser:jj_2_12(I)Z
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_2_4(I)Z
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.VarInfo:new_ppt()V
daikon.Quant:memberOf(J[J)Z
jtb.JavaParser:jj_3_25()Z
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
jtb.JavaParser:jj_3R_60()Z
daikon.test.InvariantFormatTester:execute()Z | CONSTANT | 5806 | 1 -> 0
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.Quant:eq(JJ)Z
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
jtb.JavaParser:jj_3R_77()Z
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ModBitTracker:num_samples()I
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_109()Z
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
utilMDE.MathMDE:sign(I)I
daikon.PptName:isEnterPoint()Z
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfo:name()Ljava.lang.String;
daikon.Quant:memberOf(F[F)Z
jtb.JavaParser:jj_3_36()Z
daikon.Quant:pairwiseEqual([I[I)Z
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3_22()Z
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.ValueTuple:isMissingFlow(I)Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParser:jj_3R_50()Z
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
utilMDE.MathMDE:pow(II)I
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
jtb.JavaParser:jj_2_17(I)Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltsEqualIndex([I)Z
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_121()Z
utilMDE.UtilMDE:lineNumberFileReader(Ljava.lang.String;)Ljava.io.LineNumberReader;
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
utilMDE.Intern.SequenceAndIndices:hashCode()I
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.Quant:eltsNotEqual([II)Z
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;Z)Z
daikon.inv.Invariant:getConfidence()D
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:memberOf(I[I)Z
jtb.JavaParser:jj_3R_97()Z
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Debug:logDetail()Z
jtb.JavaParser:jj_2_13(I)Z
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
jtb.JavaParserTokenManager:MoreLexicalActions()V
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.Node:Node()V
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.diff.Node:getUserRight()Ljava.lang.Object;
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.Quant:memberOf(S[S)Z
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.VarInfoName:hashCode()I
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.ModBitTracker:ModBitTracker(I)V
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.VarInfoName:name()Ljava.lang.String;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.Quant:eltwiseGT([I)Z
jtb.JavaParser:jj_2_15(I)Z
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_test(I)V
jtb.JavaParser:jj_3_14()Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.Intern:intern([I)[I
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
utilMDE.Options.OptionInfo:argument_required()Z
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ProglangType:baseIsScalar()Z
daikon.Quant:concat([I[I)[I
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.inv.Invariant:logOn()Z
utilMDE.MathMDE:negate(I)I
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.Quant:eltsGT([II)Z
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
utilMDE.ArraysMDE:indexOf([II)I
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
jtb.JavaParser:jj_2_35(I)Z
daikon.VarInfoName:isLiteralConstant()Z
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
utilMDE.LimitedSizeIntSet:size()I
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_161()Z
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.Quant:memberOf(D[F)Z
jtb.JavaParser:jj_3R_124()Z
jtb.JavaParser:jj_3_17()Z
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_119()Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
utilMDE.ArraysMDE:sum([I)I
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:jj_3_1()Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments; | ASSIGN | 49480 | = null
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
jtb.JavaParser:jj_3_28()Z
daikon.Quant:lexLT([I[I)Z
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
jtb.JavaParser:jj_3R_53()Z
daikon.Quant:eltsLTE([II)Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
jtb.JavaParser:jj_2_21(I)Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:noDups([I)Z
daikon.inv.Invariant:prob_or(DD)D
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
jtb.JavaParser:jj_3_3()Z
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:eltsLT([II)Z
daikon.Quant:eq(II)Z
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.MathMDE:modulus([I)[I
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
jtb.JavaParser:jj_3R_85()Z
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_72()Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
jtb.JavaParser:jj_3R_162()Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ProglangType:isIntegral()Z
daikon.ProglangType:isScalar()Z
jtb.JavaParser:jj_3R_55()Z
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_76()Z
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.Quant:ne(II)Z
utilMDE.MathMDE:gcd(II)I
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
jtb.JavaParser:jj_3R_70()Z
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_88()Z
jtb.JavaParser:jj_3R_117()Z
utilMDE.OrderedPairIterator:hasNext()Z
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.inv.Invariant:prob_and(DDD)D
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.Quant:gte(II)Z
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3_4()Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
jtb.JavaParser:jj_3R_107()Z
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.Quant:pairwiseLT([I[I)Z
utilMDE.Intern:internSubsequence([III)[I
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
utilMDE.FuzzyFloat:lte(DD)Z
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.inv.unary.UpperBoundCore:calc_modulus()J
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:jj_3R_63()Z
daikon.ValueTuple:isMissing(I)Z
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_103()Z
jtb.JavaParser:jj_3R_48()Z
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
jtb.JavaParser:jj_3R_54()Z
jtb.JavaParser:jj_2_14(I)Z
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
jtb.JavaParser:jj_3_12()Z
jtb.JavaParser:jj_3_27()Z
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_52()Z
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eltsLtIndex([I)Z
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.diff.Node:add(Ljava.lang.Object;)V
jtb.JavaParser:jj_3R_61()Z
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE:gcd([I)I
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.Quant:eq(FF)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
jtb.JavaCharStream:getBeginColumn()I
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.Quant:pairwiseDivides([I[I)Z
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
jtb.JavaParser:jj_3_16()Z
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.Quant:eltwiseGTE([I)Z
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
daikon.Quant:setEqual([I[I)Z
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_67()Z
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.NodeOptional:NodeOptional()V
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.Quant:slice([III)[I
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
utilMDE.FuzzyFloat:ne(DD)Z
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.diff.RootNode:RootNode()V
daikon.inv.filter.InvariantFilter:InvariantFilter()V
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
utilMDE.LimitedSizeIntSet:add(I)V
jtb.JavaParser:jj_3_18()Z
jtb.JavaParser:jj_3R_73()Z
daikon.Quant:subsetOf([B[I)Z
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.Token:newToken(I)Ljtb.Token;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3_29()Z
daikon.ValueTuple:size()I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.Quant:eltwiseLTE([I)Z
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParser:jj_2_10(I)Z
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.Ppt:Ppt()V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_133()Z
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
jtb.JavaParser:jj_3_20()Z
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_56()Z
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_68()Z
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_62()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
jtb.JavaCharStream:BeginToken()C
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.Quant:eltsGtIndex([I)Z
daikon.PptSlice0.ImplicationWrapper:hashCode()I
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.PptSlice0:initInvariantsSeen()V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.Quant:subsetOf([S[S)Z
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:esc_name()Ljava.lang.String;
jtb.JavaParser:jj_3R_120()Z
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
jtb.JavaCharStream:FillBuff()V
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_2_5(I)Z
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_2_25(I)Z
jtb.JavaParser:jj_3R_116()Z
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:pairwiseGTE([I[I)Z
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:jj_3_13()Z
jtb.JavaParser:getToken(I)Ljtb.Token;
daikon.ProglangType:dimensions()I
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.inv.Invariant:logDetail()Z
utilMDE.Intern:numIntArrays()I
utilMDE.MathMDE:missing_numbers([I)[I
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:isReverse([I[I)Z
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_126()Z
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
utilMDE.WeakHasherMap:size()I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.Quant:lexGTE([I[I)Z
daikon.Quant:eltwiseNotEqual([I)Z
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
jtb.JavaParser:jj_3R_99()Z
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.Quant:subsetOf([D[D)Z
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
jtb.JavaParser:jj_3R_96()Z
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.Quant:sameLength([I[I)Z
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
utilMDE.ArraysMDE:min_max([I)[I
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:concat([I[I)[I
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.inv.Invariant:isWorthPrinting()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.Quant:lexEqual([I[I)Z
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.VarComparabilityImplicit:alwaysComparable()Z
jtb.JavaParserTokenManager:jjStopAtPos(II)I
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:element_range([I)I
daikon.ProglangType:baseIsIntegral()Z
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:sum([[I)I
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_75()Z
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_80()Z
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant:prob_and(DD)D
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
jtb.JavaParser:jj_3R_81()Z
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
jtb.JavaParser:jj_3_19()Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.VarInfo:relate_var()V
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_118()Z
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quant:subsetOf([F[F)Z
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.PptName:isCombinedExitPoint()Z
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptSlice0:arity()I
daikon.PptSlice1:num_samples()I
daikon.PptSlice1:arity()I
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat:gte(DD)Z
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_49()Z
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_108()Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.OrderedPairIterator:setnext1()V
jtb.JavaParser:jj_3R_74()Z
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_ntk()I
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
daikon.inv.unary.scalar.NonModulus:enabled()Z
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.Quant:eltsGTE([II)Z
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:gt(II)Z
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
jtb.JavaCharStream:GetImage()Ljava.lang.String;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.FuzzyFloat:lt(DD)Z
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.Quant:setDiff([I[I)[I
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaCharStream:getBeginLine()I
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
utilMDE.FuzzyFloat:eq(DD)Z
daikon.diff.DetailedStatisticsVisitor:freq(II)D
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
jtb.JavaParser:jj_2_18(I)Z
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
jtb.JavaParser:jj_3_5()Z
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:lte(II)Z
jtb.JavaParser:jj_2_16(I)Z
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.ModBitTracker:num_vars()I
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.config.Configuration:apply(Ljava.lang.String;)V
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
utilMDE.ArraysMDE:sum([[D)D
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.Quant:pairwiseSquare([I[I)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_102()Z
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.PptName:PptName(Ljava.lang.String;)V
jtb.JavaCharStream:backup(I)V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.Debug:logOn()Z
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_86()Z
jtb.JavaParser:jj_3R_115()Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.Quant:memberOf(F[D)Z
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.Quant:pairwiseLTE([I[I)Z
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.VarInfoName:repr()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE:min([I)I
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_125()Z
daikon.inv.unary.scalar.NonZero:enabled()Z
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:isArray()Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
daikon.Quant:subsetOf([D[F)Z
jtb.JavaParser:jj_3R_110()Z
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3_15()Z
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.Quant:eltsGteIndex([I)Z
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.OrderedPairIterator:setnext2()V
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
utilMDE.ArraysMDE:subarray([III)[I
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_51()Z
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
jtb.JavaParser:jj_2_1(I)Z
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_58()Z
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
jtb.JavaParser:jj_3R_101()Z
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
daikon.inv.unary.UpperBoundCore:computeConfidence()D
jtb.JavaParser:jj_3R_163()Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.inv.Invariants:Invariants()V
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.Intern:internSubsequence([JII)[J
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.Quant:eltwiseEqual([I)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([I[II)Z
jtb.JavaCharStream:ReadByte()C
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:noDuplicates([I)Z
jtb.JavaParser:jj_3R_87()Z
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakHasherMap:processQueue()V
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_114()Z
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:eq(DD)Z
jtb.JavaParser:jj_3R_100()Z
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.inv.OutputFormat:isJavaFamily()Z
jtb.JavaParser:jj_3R_210()Z
jtb.JavaParser:jj_3_21()Z
jtb.JavaParser:jj_3R_98()Z
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.ModBitTracker:num_sets()I
utilMDE.MathMDE:gcd(JJ)J
utilMDE.ArraysMDE:noDuplicates([J)Z | ASSIGN | 58337 | = null
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.MathMDE:pow_fast(II)I
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.Quant:lexGT([I[I)Z
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
jtb.JavaParser:jj_3R_135()Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
jtb.JavaCharStream:getEndColumn()I
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.Quant:lexLTE([I[I)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.PptTopLevel:name()Ljava.lang.String;
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_106()Z
utilMDE.Intern:intern([D)[D
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ProglangType:isPseudoArray()Z
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
jtb.JavaParser:jj_3R_104()Z
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
jtb.syntaxtree.NodeList:NodeList()V
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.inv.Invariant:justified()Z
utilMDE.ArraysMDE:subarray([JII)[J
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
592 2 531 2 618 2 144 2 338 2 678 2 779 2 393 4 491 2 
1112 2 808 2 793 2 901 6 503 2 874 6 477 2 261 2 1001 6 668 2 784 2 
956 2 659 2 678 2 70 6 36 2 7 6 648 2 195 6 544 4 144 2 971 2 459 4 656 6 
1005 4 1041 10 1114 4 342 6 343 10 144 6 109 6 1090 10 248 8 152 10 1025 2 252 8 761 29 20 16 516 4 678 6 856 8 257 4 601 12 383 16 522 2 1132 2 1033 2 260 8 526 26 815 2 170 16 528 2 1037 2 611 10 
288 4 229 6 
121 2 
895 2 1041 2 1114 2 342 2 343 4 1090 2 909 2 722 2 152 2 252 2 761 6 20 2 849 2 885 2 51 2 84 2 601 2 383 2 734 2 526 4 170 2 818 2 611 2 
152 4 613 4 516 2 20 8 761 15 961 6 1041 4 601 5 383 8 688 2 1100 4 697 2 526 12 1090 4 170 8 293 6 611 4 
743 4 205 4 572 2 425 2 467 2 499 4 939 2 138 4 627 4 748 62 575 4 43 4 756 4 1089 4 244 2 212 2 723 2 374 2 760 2 725 2 188 4 1124 10 353 2 599 2 256 2 124 2 493 10 450 2 329 2 605 8 259 2 777 4 735 4 128 14 458 4 59 2 1071 2 931 2 202 6 64 2 
897 2 1044 2 367 2 664 2 1057 2 121 2 85 2 969 2 1101 2 738 2 
171 2 1038 2 531 2 937 2 37 2 1047 2 756 4 107 2 985 2 410 2 116 2 803 2 122 2 385 2 1031 2 1033 2 605 2 777 2 1068 2 89 2 972 2 781 2 64 2 
613 4 69 6 823 2 267 2 1041 16 1114 2 342 4 343 6 242 6 271 6 1118 4 144 4 984 2 1090 16 109 4 405 8 152 16 914 2 252 18 20 32 761 54 678 4 961 6 220 4 322 2 856 6 383 32 601 22 732 4 330 4 360 2 1100 4 526 48 421 6 170 32 528 2 234 4 611 16 293 6 
329 2 605 2 202 2 
321 2 898 2 714 2 268 2 979 2 602 10 141 2 196 2 524 2 481 2 816 2 910 22 986 2 843 2 
265 8 266 2 533 24 534 2 712 2 715 2 137 2 140 24 540 2 270 2 10 2 545 16 1015 32 144 32 147 2 1023 4 151 2 280 2 156 2 19 2 417 2 886 2 161 2 558 1 418 2 731 3 28 1 167 3 1035 2 893 2 290 2 422 2 292 2 423 2 741 2 298 2 900 2 179 1 38 2 1045 2 180 2 184 2 433 2 752 2 754 2 311 2 312 3 435 2 436 2 314 3 1051 1 315 6 316 2 317 4 1052 1 758 1 585 2 187 2 915 3 49 2 763 2 191 2 50 3 324 2 52 2 1065 1 328 12 604 2 456 2 778 32 779 2 61 2 63 4 783 2 935 2 203 1 1078 2 790 2 938 2 340 2 943 3 942 2 471 2 472 1 946 2 207 2 794 2 948 2 630 1 1087 1 76 4 348 3 952 2 953 2 955 2 215 12 349 2 1092 4 485 16 486 2 638 2 640 6 807 2 641 2 962 6 645 2 646 4 809 2 359 2 970 6 814 2 361 1 232 2 98 2 1110 8 235 2 1111 8 238 3 365 2 240 4 663 2 830 2 981 16 369 16 837 5 667 2 509 3 247 2 845 1 515 2 375 2 377 3 380 2 678 34 518 1 255 2 123 2 125 2 1130 2 1133 3 699 1 389 2 391 2 1137 2 864 2 867 2 868 4 130 1 530 1 
453 2 
131 2 678 2 
795 2 506 2 678 4 
532 2 1 2 2 2 3 2 4 10 536 2 537 2 541 2 542 2 543 4 875 2 547 4 273 10 548 6 881 30 278 6 882 2 15 2 13 54 16 2 551 10 282 10 884 2 552 2 556 4 557 4 287 26 560 6 24 2 27 2 565 4 566 18 29 2 30 14 568 2 295 2 31 4 569 2 570 2 296 2 32 4 896 26 299 2 300 2 35 2 303 2 304 2 309 4 310 8 576 54 41 2 580 4 906 2 907 54 583 2 912 2 593 4 913 48 594 2 595 2 598 30 597 2 323 2 918 2 921 2 53 32 924 4 326 2 55 2 56 2 331 2 332 2 609 2 608 2 610 2 336 2 615 26 936 2 619 2 620 2 339 12 72 26 623 54 625 2 944 2 345 4 947 54 75 2 79 18 81 4 634 2 350 18 960 2 959 2 642 4 644 2 355 16 356 2 965 54 647 4 649 2 650 2 86 2 653 10 655 2 95 2 658 2 657 2 97 158 975 2 364 2 366 54 977 2 660 54 980 2 670 40 671 4 113 2 674 2 675 6 114 4 118 2 992 2 677 12 679 2 994 2 684 2 996 2 384 2 689 2 693 2 692 4 694 12 696 2 695 2 387 2 702 2 392 4 705 2 1002 40 1003 2 1007 4 710 2 711 2 133 2 1009 4 1008 2 1012 4 1013 2 397 4 716 12 1014 2 717 4 142 2 1017 2 1018 2 720 6 401 2 1019 2 402 2 1021 4 148 2 149 2 724 2 404 26 150 6 406 12 411 2 155 2 1027 2 157 2 159 12 727 2 1029 2 416 158 729 2 160 12 730 2 162 266 419 2 165 4 420 2 1034 158 736 2 737 2 742 2 1039 2 744 2 173 2 745 54 174 4 176 2 428 2 429 48 1043 4 182 2 183 2 431 4 749 10 434 2 1049 2 185 2 437 2 1053 2 1056 2 439 2 1060 2 1061 2 444 4 192 2 1062 4 448 2 767 2 768 2 769 2 772 2 771 24 197 2 198 2 776 2 199 2 457 2 780 2 465 2 786 2 466 2 787 2 789 2 1077 2 1079 2 469 4 470 2 792 2 1083 4 1082 2 474 4 476 2 475 2 478 10 1086 54 210 40 797 2 480 4 798 2 1091 2 217 2 802 2 487 4 488 2 219 2 806 2 490 12 1093 2 223 2 811 12 494 2 495 14 227 2 496 2 231 2 498 2 1109 2 501 2 241 4 1117 2 502 12 836 2 243 56 838 2 245 2 246 2 510 2 512 2 846 4 250 26 1121 52 517 2 253 12 851 2 852 2 1126 2 854 32 1128 4 519 20 1129 2 520 2 258 4 862 2 863 32 865 54 1139 2 
751 2 636 2 682 1 464 2 
126 2 464 2 
77 2 492 2 
1005 2 172 2 272 2 605 2 872 2 73 2 464 2 
272 2 584 2 464 2 
272 2 57 2 464 2 
751 2 728 2 492 2 
272 2 464 2 
492 2 110 2 
464 2 262 2 
751 2 218 2 492 2 
521 2 751 2 508 2 
751 2 968 2 892 2 
751 2 11 2 923 2 
154 2 751 2 709 2 
492 2 1030 2 
740 2 464 2 
508 2 103 2 
628 2 892 2 
335 2 923 2 
154 2 582 2 
251 2 492 2 
154 2 998 2 
662 2 923 2 
44 2 892 2 
508 2 559 2 
751 2 218 2 766 2 492 2 
751 2 218 2 766 2 6 2 492 2 
751 2 578 2 492 2 
751 2 940 2 492 2 
337 2 1084 2 733 2 371 2 
605 2 872 2 370 2 759 2 
172 2 117 2 605 2 872 2 370 2 759 2 
1005 2 272 2 605 2 872 2 905 2 464 2 
1038 2 452 2 
1005 2 605 2 872 2 600 2 
381 2 923 2 
888 2 154 2 
508 2 463 2 
892 2 445 2 
154 2 892 2 438 2 
154 2 892 2 1095 2 
154 2 892 2 1073 2 
154 2 892 2 739 2 
872 2 105 2 904 2 632 2 801 2 920 6 561 6 605 2 
672 2 153 2 319 2 100 4 746 2 190 2 621 2 993 2 963 2 181 2 574 2 813 2 775 2 313 2 400 2 1055 4 910 6 216 2 
751 2 394 2 
955 2 
265 2 266 2 534 2 137 2 540 1 10 2 1015 4 144 26 147 2 1023 4 151 2 14 2 283 2 417 2 164 2 289 2 1035 1 1036 2 298 2 900 2 1045 2 180 2 433 2 752 2 754 2 436 2 315 2 317 4 758 2 757 4 585 2 45 2 187 2 1059 2 324 2 328 8 778 6 779 2 462 2 63 2 783 2 942 2 471 2 946 2 948 4 1087 4 76 4 953 2 215 8 1092 2 485 6 486 6 958 2 640 6 962 2 645 2 646 2 809 2 970 5 87 2 361 2 1106 2 976 2 1115 2 830 2 832 2 663 2 667 2 848 2 678 26 995 2 123 2 997 4 1130 2 389 2 391 2 864 2 868 4 
265 2 266 2 534 2 137 2 540 2 10 2 1015 4 144 26 147 2 1023 4 151 2 14 2 283 2 412 2 417 2 164 2 289 2 1035 2 1036 2 298 2 900 2 1045 2 180 2 433 2 752 2 754 2 436 2 315 2 317 4 758 2 757 4 585 2 45 2 187 2 1059 2 324 2 328 8 778 6 779 2 63 2 783 2 68 2 942 2 471 2 946 2 948 4 1087 2 76 4 953 2 215 8 1092 2 485 6 486 6 958 2 640 6 962 2 645 2 646 2 809 2 970 6 361 2 976 2 1115 2 830 2 832 2 663 2 368 2 667 2 515 2 848 2 678 26 995 2 123 2 997 4 1130 2 389 2 391 2 864 2 868 4 
1135 2 1127 2 
911 2 
534 2 398 4 946 2 344 2 874 6 477 2 399 4 949 4 144 6 878 2 213 2 550 2 633 2 1023 2 279 2 409 2 635 2 640 4 82 2 808 4 889 2 651 2 564 4 1104 2 291 2 821 2 1108 10 822 2 298 2 828 2 305 4 830 2 833 2 901 6 308 2 503 4 752 2 903 2 579 2 1050 2 581 2 372 2 668 2 987 2 46 2 678 12 916 2 681 2 850 8 324 2 449 2 523 2 861 2 606 4 1001 6 460 2 391 2 704 2 1138 8 868 2 
534 2 398 4 946 2 344 2 874 6 477 2 399 4 144 6 949 4 878 2 550 2 633 2 1023 2 279 2 409 2 635 2 640 4 82 2 808 4 889 2 651 2 564 4 1104 2 291 2 294 2 821 2 1108 10 822 2 298 2 305 4 830 2 833 2 901 8 308 2 503 4 752 2 903 2 579 2 1050 2 581 2 372 2 668 2 987 2 588 4 46 2 378 2 678 12 916 2 681 2 850 8 324 2 449 2 523 2 861 2 606 4 1001 8 460 2 391 2 704 2 1138 8 868 2 784 2 
279 2 409 2 681 2 305 4 808 2 833 2 503 2 344 2 874 2 523 2 399 2 581 2 606 4 1001 2 460 2 704 2 987 2 46 2 
534 2 398 4 946 2 344 2 874 4 399 4 949 4 144 6 878 2 213 2 550 2 633 2 1023 2 279 2 409 2 635 2 640 4 82 2 808 4 889 2 651 2 564 4 1104 2 291 2 821 2 1108 6 822 2 298 2 828 2 305 4 830 2 833 2 901 6 308 2 503 4 752 2 903 2 579 2 1050 2 581 2 372 2 668 2 987 2 46 2 678 12 916 2 681 2 850 4 324 2 449 2 523 2 861 2 606 4 1001 6 460 2 391 2 704 2 1138 4 784 2 868 2 
534 2 398 4 946 2 344 2 874 6 399 4 949 4 144 6 878 2 213 2 550 2 633 2 1023 2 279 2 409 2 635 2 640 4 82 2 808 4 889 2 651 2 564 4 1104 2 291 2 821 2 1108 6 822 2 298 2 828 2 305 4 830 2 833 2 901 6 308 2 503 4 752 2 903 2 579 2 1050 2 581 2 372 2 668 2 987 2 46 2 678 12 916 2 681 2 850 4 324 2 449 2 523 2 861 2 261 2 606 4 1001 4 460 2 391 2 704 2 1138 4 868 2 
534 2 398 4 946 2 344 2 874 6 477 2 399 4 949 4 144 6 878 2 213 2 550 2 633 2 1023 2 279 2 409 2 635 2 640 4 82 2 808 4 889 2 651 2 564 4 1104 2 291 2 821 2 1108 6 822 2 298 2 828 2 305 4 830 2 833 2 901 6 308 2 503 4 752 2 903 2 579 2 1050 2 581 2 372 2 668 2 987 2 46 2 678 12 916 2 681 2 850 8 324 2 449 2 523 2 861 2 606 4 1001 6 460 2 391 2 704 2 1138 4 868 2 
534 2 398 4 946 2 344 2 874 8 477 2 399 4 949 4 144 6 878 2 213 2 550 2 633 2 1023 2 279 2 409 2 635 2 640 4 82 2 808 4 889 2 651 2 564 4 1104 2 291 2 821 2 1108 10 822 2 298 2 828 2 305 4 830 2 833 2 901 8 308 2 503 4 752 2 903 2 579 2 1050 2 581 2 372 2 668 2 987 2 46 2 678 12 916 2 681 2 850 8 324 2 449 2 523 2 861 2 261 2 606 4 1001 6 460 2 391 2 704 2 1138 8 868 2 
534 2 398 4 946 2 344 2 874 6 477 2 399 4 949 4 144 6 878 2 213 2 550 2 633 2 1023 2 279 2 409 2 635 2 640 4 82 2 808 4 889 2 651 2 564 4 1104 2 291 2 821 2 1108 10 822 2 298 2 828 2 305 4 830 2 833 2 901 6 308 2 503 4 752 2 903 2 579 2 1050 2 581 2 372 2 668 2 987 2 46 2 678 12 916 2 681 2 850 8 324 2 449 2 523 2 861 2 606 4 1001 6 460 2 391 2 704 2 1138 8 868 2 
264 6 265 2 266 2 871 2 534 2 269 1 8 2 540 2 874 8 9 6 10 2 878 2 550 2 277 2 279 2 18 2 284 2 889 2 564 6 289 2 891 2 291 4 571 2 573 2 298 2 305 4 901 12 308 4 903 2 579 2 581 2 315 2 317 4 585 2 45 2 589 6 46 2 596 2 47 2 916 2 324 2 325 2 919 4 328 4 603 2 926 6 606 4 607 7 63 2 614 6 942 2 946 2 344 2 949 8 76 4 951 2 953 12 633 2 635 2 640 6 82 2 962 2 645 2 646 2 970 6 651 2 652 2 91 6 973 2 982 2 372 2 668 4 983 2 373 10 987 2 678 46 681 2 382 1 123 2 686 6 997 4 700 2 389 2 1001 4 391 2 704 2 131 6 395 6 137 2 398 4 1015 2 144 24 399 4 719 6 146 2 721 2 147 2 1023 4 409 2 163 1 166 2 1035 2 1045 2 180 2 752 2 1050 2 1058 1 762 2 765 2 764 2 449 2 453 6 774 1 454 2 778 8 779 2 201 1 1070 2 460 2 206 2 791 2 471 2 208 1 795 6 213 2 482 8 799 1 215 4 483 6 1092 2 485 6 486 6 808 4 809 2 810 2 1104 2 1103 1 821 2 1108 2 822 2 500 2 1115 2 830 2 832 4 831 6 833 2 503 4 507 7 513 6 850 2 855 2 859 6 1130 2 1131 4 523 2 861 2 261 4 527 2 864 2 868 4 
264 6 265 2 871 2 266 2 131 6 534 2 395 6 137 2 8 2 398 4 540 2 9 6 874 8 10 2 1015 2 719 6 399 4 144 26 878 2 146 2 721 2 147 2 277 2 550 2 1023 4 279 2 409 2 18 2 284 2 889 2 289 2 166 2 564 6 891 2 1035 2 291 4 571 2 573 2 298 2 180 2 1045 2 305 4 901 12 308 4 752 2 903 2 579 2 1050 2 315 2 581 2 317 4 45 2 585 2 589 6 46 2 47 2 596 2 762 2 916 2 764 2 765 2 324 2 325 2 919 4 449 2 603 2 328 8 453 6 926 6 454 2 778 8 779 2 606 4 460 2 1070 2 63 4 614 6 1075 2 206 2 791 2 942 2 471 2 946 2 344 2 477 4 795 6 948 2 949 8 951 2 76 4 953 12 213 2 482 8 215 8 633 2 483 6 1092 4 635 2 485 6 486 6 640 6 82 2 962 2 808 4 645 2 809 2 646 4 810 2 970 6 652 2 651 2 91 6 973 2 1104 2 821 2 1108 2 822 2 500 2 1115 2 831 6 832 4 830 2 833 2 503 4 982 2 841 2 983 2 668 4 372 2 373 10 987 2 513 6 678 48 681 2 850 6 855 2 686 6 123 2 997 4 859 6 1130 2 1131 4 523 2 861 2 700 2 389 2 1001 8 527 2 391 2 704 2 864 2 868 4 
264 6 265 2 871 2 266 2 131 6 534 2 395 6 137 2 8 2 398 4 540 2 9 6 874 8 10 2 1015 2 719 6 399 4 144 26 878 2 146 2 721 2 147 2 277 2 550 2 1023 4 279 2 409 2 18 2 284 2 889 2 289 2 166 2 564 6 891 2 1035 2 291 4 571 2 573 2 298 2 180 2 305 4 1045 2 901 12 308 4 752 2 903 2 579 2 1050 2 315 2 581 2 317 4 45 2 585 2 589 6 46 2 47 2 596 2 762 2 916 2 764 2 765 2 324 2 325 2 919 4 449 2 603 2 328 8 453 6 926 6 454 2 778 8 779 2 606 4 460 2 1070 2 63 4 614 6 1075 2 206 2 791 2 942 2 471 2 946 2 344 2 477 4 795 6 948 2 949 8 951 2 76 4 953 12 213 2 482 8 215 8 633 2 483 6 1092 4 635 2 485 6 486 6 640 6 82 2 962 2 808 4 645 2 809 2 646 4 810 2 970 6 652 2 651 2 91 6 973 2 1104 2 821 2 1108 6 822 2 500 2 1115 2 831 6 832 4 830 2 833 2 503 4 982 2 841 2 983 2 668 4 372 2 373 10 987 2 513 6 678 48 681 2 850 6 855 2 686 6 123 2 997 4 859 6 1130 2 1131 4 523 2 861 2 700 2 389 2 1001 8 527 2 391 2 704 2 864 2 1138 4 868 4 
264 6 265 4 266 2 871 2 534 2 535 6 8 2 540 2 874 10 9 6 10 2 878 2 877 6 550 2 277 2 279 2 18 2 284 2 889 2 564 6 289 4 891 2 291 4 571 2 573 2 298 2 305 4 901 16 307 6 308 4 903 2 579 2 581 2 315 4 317 4 585 2 45 2 587 2 589 6 46 2 596 2 47 2 916 2 324 2 325 2 919 4 328 10 603 2 926 6 606 4 63 4 614 12 942 2 946 2 344 2 948 2 949 8 76 4 951 2 953 10 633 2 635 2 637 6 640 6 82 2 962 4 645 2 646 4 970 6 651 2 88 2 652 2 91 6 973 2 982 2 372 2 668 4 983 2 373 8 987 2 678 52 681 2 123 2 686 6 997 6 700 2 389 2 1001 10 391 2 704 2 706 2 131 12 1010 6 134 6 395 6 137 2 398 4 1015 4 144 24 399 4 719 6 146 2 1020 6 721 2 147 2 1023 4 409 2 1032 2 166 2 1035 2 1045 2 180 2 752 2 1050 2 762 2 764 2 765 2 449 2 453 12 455 6 454 2 778 12 779 2 1070 2 460 2 782 2 784 2 1075 2 206 2 468 2 791 2 471 2 477 4 795 12 213 2 482 8 215 10 483 6 1092 4 485 8 486 8 804 2 808 4 809 2 1099 6 1104 2 821 2 1108 6 822 2 500 2 1115 2 830 2 832 4 831 12 833 2 503 4 841 2 513 6 850 6 855 2 859 12 1130 2 1131 4 523 2 861 2 525 2 261 2 527 2 864 2 1138 4 868 4 
821 2 1108 4 305 2 398 2 901 4 344 2 503 4 477 2 874 6 903 2 949 2 579 2 878 2 1050 2 581 2 213 2 668 2 372 2 550 2 46 2 279 2 409 2 916 2 678 4 850 6 808 4 889 2 523 2 651 2 564 2 606 2 1001 6 460 2 1104 2 1138 4 
266 2 534 2 715 2 398 2 540 2 874 6 10 2 1015 3 144 24 878 2 147 2 550 2 1023 4 279 2 883 2 409 2 889 2 564 2 1035 2 298 2 175 3 305 2 1045 2 180 2 901 4 752 2 903 2 579 2 1050 2 315 3 581 2 317 4 585 2 45 2 46 2 916 2 324 2 778 8 779 2 606 2 460 2 942 2 471 2 946 2 344 2 477 2 949 2 76 4 213 2 953 4 955 2 485 6 486 6 640 6 962 3 964 2 808 4 645 2 809 2 810 2 970 6 651 2 814 2 817 2 1104 2 821 2 1108 2 235 2 822 2 1115 2 830 2 832 2 503 4 106 2 668 2 108 2 372 2 373 2 678 28 850 6 123 2 997 4 1130 2 523 2 389 2 1001 6 391 2 864 2 868 4 
916 2 917 2 550 2 
916 2 917 2 550 2 
264 2 1004 2 266 2 534 2 137 2 398 2 540 2 874 8 1015 2 144 16 879 2 147 2 550 2 1023 4 279 2 553 2 164 4 564 2 1035 2 298 2 1045 2 180 2 305 2 901 8 752 2 579 2 317 4 585 2 45 2 46 2 916 2 324 2 919 2 328 4 778 2 779 2 200 2 606 2 63 4 67 2 617 2 942 2 471 2 946 2 344 2 477 4 949 4 1087 2 76 4 953 4 215 4 1092 4 485 2 486 2 640 6 645 2 808 4 646 4 809 2 1096 2 970 6 94 2 974 2 821 2 1107 2 1108 2 1115 2 830 2 832 2 503 4 668 4 373 2 111 2 249 2 678 24 850 6 123 2 1130 2 1131 2 389 2 1001 8 391 2 864 2 1138 2 868 4 
264 2 617 2 678 4 1127 2 830 2 833 2 1131 2 42 2 144 2 78 2 700 2 200 2 953 2 891 2 390 2 373 2 974 2 
1004 4 266 2 534 2 137 2 398 2 540 2 874 8 1015 4 144 14 879 2 147 2 550 2 1023 4 279 2 553 2 164 4 564 2 1035 2 298 2 1045 2 180 2 305 2 901 8 752 2 579 2 317 4 585 2 45 2 46 2 916 2 324 2 919 2 328 4 778 2 779 2 200 2 606 2 63 4 67 2 941 2 942 2 471 2 946 2 344 2 477 4 949 4 76 4 953 2 215 4 1092 4 485 2 486 2 640 6 639 2 645 2 808 4 646 4 809 2 1096 2 970 6 94 2 974 2 821 2 1107 2 1108 2 1115 2 830 2 832 2 503 4 668 4 111 2 249 2 678 20 850 6 123 2 1130 2 389 2 1001 8 391 2 864 2 1138 2 868 4 
264 2 1004 2 266 2 534 2 137 2 398 2 540 2 874 8 1015 2 144 16 879 2 147 2 550 2 1023 4 279 2 553 2 164 4 564 2 1035 2 298 2 1045 2 180 2 305 2 901 8 752 2 579 2 317 4 585 2 45 2 46 2 916 2 324 2 919 2 328 4 778 2 779 2 200 2 606 2 63 4 67 2 617 2 942 2 471 2 946 2 344 2 477 4 949 4 1087 1 76 4 953 4 215 4 1092 4 485 2 486 2 640 6 645 2 808 4 646 4 809 2 1096 2 970 6 94 2 974 2 821 2 1107 2 1108 2 1115 2 830 2 832 2 503 4 668 4 373 2 111 2 249 2 678 24 850 6 123 2 1130 2 1131 2 389 2 1001 8 391 2 864 2 1138 2 868 4 
186 2 
870 2 788 2 1011 2 302 2 1048 2 10 2 1015 3 143 2 144 2 315 3 954 2 408 1 485 2 486 2 678 2 443 4 962 3 222 2 997 2 447 2 226 2 127 2 778 2 289 6 866 3 
870 2 485 2 486 2 788 2 678 2 302 2 1011 2 443 4 962 2 222 2 447 2 997 2 1048 2 10 2 127 2 143 2 1015 2 226 2 144 2 778 2 289 6 315 2 954 2 866 2 
870 2 485 2 486 2 788 2 678 2 302 2 1011 2 443 4 962 2 222 2 447 2 997 2 1048 2 10 2 127 2 143 2 1015 2 226 2 144 2 778 2 289 6 315 2 954 2 866 2 
1011 2 713 4 5 2 718 4 10 2 1015 3 144 4 479 6 274 2 1090 2 880 3 152 2 20 2 957 2 962 3 25 3 170 2 362 2 497 2 894 4 301 3 824 2 1041 2 178 4 834 4 981 2 369 2 109 2 1120 2 320 2 761 4 678 10 120 2 685 2 857 2 856 4 383 2 778 2 526 4 611 2 
894 4 824 2 301 2 1011 2 713 4 5 2 1041 2 178 4 834 4 981 2 718 4 369 2 10 2 1015 2 144 4 479 6 274 2 1090 2 1120 2 109 2 880 2 152 2 252 2 320 2 761 4 20 2 957 2 678 10 120 2 962 2 685 2 856 4 857 2 601 2 383 2 25 2 778 2 526 4 362 2 170 2 528 2 497 2 611 2 
894 4 824 2 301 2 1011 2 713 4 5 2 1041 2 178 4 834 4 981 2 718 4 369 2 10 2 1015 2 144 4 479 6 274 2 1090 2 1120 2 109 2 880 2 152 2 252 2 320 2 761 4 20 2 957 2 678 10 120 2 962 2 685 2 856 4 857 2 601 2 383 2 25 2 778 2 526 4 362 2 170 2 528 2 497 2 611 2 
894 4 824 2 301 2 1011 2 713 4 5 2 1041 2 178 4 834 4 981 2 718 4 369 2 10 2 1015 2 144 4 479 6 274 2 1090 2 1120 2 109 2 880 2 152 2 252 2 320 2 761 4 20 2 957 2 678 10 120 2 962 2 685 2 856 4 857 2 601 2 383 2 25 2 778 2 526 4 362 2 170 2 528 2 497 2 611 2 
894 4 824 2 301 2 1011 2 713 4 5 2 1041 2 178 4 834 4 981 2 718 4 369 2 10 2 1015 2 144 4 479 6 274 2 1090 2 1120 2 109 2 880 2 152 2 252 4 320 2 761 4 20 2 957 2 678 10 120 2 962 2 685 2 856 4 857 2 601 4 383 2 25 2 778 2 526 4 362 2 170 2 528 4 497 2 611 2 
753 2 990 2 890 2 1067 2 932 2 65 2 
327 2 1059 2 890 2 414 2 93 2 555 2 1097 2 
614 2 236 2 538 2 626 2 1046 2 1085 2 755 1 144 8 244 1 347 2 407 2 281 2 678 10 680 1 853 2 1125 2 324 2 386 1 54 2 194 2 1066 2 927 2 333 2 930 2 1071 1 92 2 
69 4 1080 2 1041 6 144 6 346 2 984 1 1022 2 1090 6 109 2 405 2 152 6 252 3 376 2 761 15 20 6 678 6 961 4 856 4 383 6 687 2 601 4 330 2 26 2 1100 2 526 12 1000 2 228 2 170 6 528 2 233 2 611 6 
612 1 96 2 297 4 678 1 101 6 178 2 1094 2 945 2 432 2 834 2 770 2 718 2 577 2 1016 2 144 1 698 2 511 2 529 2 
96 2 297 4 101 6 178 2 1094 2 945 2 432 2 834 2 770 4 718 2 577 2 1016 2 698 4 511 2 529 4 
612 1 96 2 297 4 678 1 101 10 178 2 1094 2 945 2 432 2 834 2 770 8 718 2 577 8 1016 2 144 1 698 8 511 6 529 8 
96 2 297 2 101 2 178 2 1094 2 945 2 432 2 834 2 770 2 718 2 1016 2 698 2 529 2 
1006 2 869 4 0 4 708 12 135 4 136 4 396 50 873 42 539 24 540 58 144 134 876 8 546 2 12 6 275 124 549 12 276 42 1024 2 158 10 1028 2 413 2 726 16 415 11 285 18 21 2 286 4 22 26 562 4 563 8 1035 58 169 8 168 8 426 24 427 4 1042 4 39 6 306 8 40 4 750 2 317 112 908 6 586 2 318 6 590 1 189 8 440 2 48 22 1063 6 446 4 193 2 1064 6 328 28 451 8 773 4 1069 2 929 16 58 6 461 4 1072 4 933 4 934 6 785 4 66 6 1074 6 616 24 341 36 74 4 1081 8 473 10 629 84 796 6 950 2 1087 4 76 88 1088 6 80 4 805 4 489 6 354 6 221 4 645 14 358 4 966 10 967 16 224 6 225 2 812 26 970 248 1098 6 90 24 654 10 1105 2 230 6 363 2 820 10 819 8 237 2 99 6 1113 24 825 8 239 2 102 6 827 92 829 2 661 17 665 24 835 4 666 6 839 10 840 4 842 4 988 18 844 10 673 90 676 34 989 6 115 6 847 10 379 90 678 150 683 4 858 6 860 2 1130 14 999 2 129 4 389 8 701 16 
1074 2 616 2 204 2 622 2 71 2 341 2 624 6 1081 2 139 2 473 2 540 2 209 2 144 44 876 2 950 2 1087 2 546 2 76 20 275 6 403 2 800 2 484 2 158 2 1028 2 805 2 726 4 83 2 643 4 285 2 645 2 966 2 967 4 970 44 90 2 1035 2 168 2 169 6 654 2 1102 2 424 2 820 2 819 2 33 2 237 2 99 2 1040 2 1113 2 826 2 747 2 177 2 102 2 34 2 899 2 978 2 661 2 104 2 1116 2 902 2 750 2 839 2 505 2 1119 2 317 20 669 4 1054 2 112 2 591 2 844 2 514 2 989 2 440 2 847 2 1122 2 1123 2 441 2 678 46 442 4 1063 4 922 2 1130 2 925 2 328 38 691 4 690 2 1134 2 58 2 389 2 701 4 62 2 1072 2 934 2 707 2 
869 2 708 14 136 4 396 8 873 8 539 8 540 28 144 70 876 2 546 2 145 2 275 24 276 16 1026 2 1028 2 726 10 285 10 887 4 286 4 23 4 562 4 563 4 1035 30 169 6 567 32 33 10 1042 4 39 4 750 2 317 44 908 4 586 2 318 4 591 2 189 4 440 2 1063 2 446 4 193 2 1064 4 328 14 928 2 1069 2 58 4 929 8 60 2 933 4 934 4 66 4 1074 4 1076 8 341 6 74 4 1081 2 473 4 629 24 211 4 631 8 76 36 1088 4 214 2 351 4 484 2 352 8 489 4 83 2 354 4 645 6 357 4 967 10 224 4 970 104 1098 4 654 4 230 4 819 2 820 4 237 2 99 4 827 24 102 4 661 10 835 4 666 4 504 16 839 6 840 4 505 10 842 4 112 10 676 30 991 2 115 4 989 4 847 4 119 16 678 78 683 4 858 4 860 2 1130 6 388 4 129 4 389 2 1136 4 701 10 703 8 
869 2 1074 4 341 2 1081 2 473 2 540 12 876 2 144 26 1087 2 546 2 950 2 76 14 275 8 1024 2 484 2 1028 2 726 6 415 2 285 2 645 2 358 2 21 2 967 6 970 40 562 2 563 4 1035 12 169 4 654 2 1105 2 819 2 820 2 237 2 99 4 239 2 102 4 661 2 750 2 839 2 317 14 676 6 989 4 440 2 847 2 48 10 678 28 683 2 1063 2 1130 2 451 2 328 14 1134 2 999 2 929 6 58 4 389 2 701 6 785 2 934 4 
334 2 
263 1 17 1 132 1 254 1 554 1 430 1 
263 1 17 1 132 1 254 1 554 1 430 1 
263 1 17 1 132 1 254 1 554 1 430 1 
263 1 17 1 132 1 254 1 554 1 430 1 
263 1 17 1 132 1 254 1 554 1 430 1 
263 1 17 1 132 1 254 1 554 1 430 1 
263 1 17 1 132 1 254 1 554 1 430 1 
263 1 17 1 132 1 254 1 554 1 430 1 
263 1 17 1 132 1 254 1 554 1 430 1 
263 1 17 1 132 1 254 1 554 1 430 1 
263 1 17 1 132 1 254 1 554 1 430 1 
263 1 17 1 132 1 254 1 554 1 430 1 
263 1 17 1 132 1 254 1 554 1 430 1 
263 1 17 1 132 1 254 1 554 1 430 1 
263 1 17 1 132 1 254 1 554 1 430 1 
263 1 17 1 132 1 254 1 554 1 430 1 
263 1 17 1 132 1 254 1 554 1 430 1 
263 1 17 1 132 1 254 1 554 1 430 1 
263 1 17 1 132 1 254 1 554 1 430 1 
263 1 17 1 132 1 254 1 554 1 430 1 
263 1 17 1 132 1 254 1 554 1 430 1 
263 1 17 1 132 1 254 1 554 1 430 1 
263 1 17 1 132 1 254 1 554 1 430 1 
263 1 17 1 132 1 254 1 554 1 430 1 
263 1 17 1 132 1 254 1 554 1 430 1 
263 1 17 1 132 1 254 1 554 1 430 1 
263 1 17 1 132 1 254 1 554 1 430 1 
263 1 17 1 132 1 254 1 554 1 430 1 
263 1 17 1 132 1 254 1 554 1 430 1 
263 1 17 1 132 1 254 1 554 1 430 1 
263 1 17 1 132 1 254 1 554 1 430 1 
263 1 17 1 132 1 254 1 554 1 430 1 
263 1 17 1 132 1 254 1 554 1 430 1 
263 1 17 1 132 1 254 1 554 1 430 1 
263 1 17 1 132 1 254 1 554 1 430 1 
263 1 17 1 132 1 254 1 554 1 430 1 
263 1 17 1 132 1 254 1 554 1 430 1 
263 1 17 1 132 1 254 1 554 1 430 1 
263 1 17 1 132 1 254 1 554 1 430 1 
263 1 17 1 132 1 254 1 554 1 430 1 
263 1 17 1 132 1 254 1 554 1 430 1 
263 1 17 1 132 1 254 1 554 1 430 1 
263 1 17 1 132 1 254 1 554 1 430 1 
263 1 17 1 132 1 254 1 554 1 430 1 

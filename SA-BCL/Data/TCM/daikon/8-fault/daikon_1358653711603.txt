#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V ERROR java.lang.ArrayIndexOutOfBoundsException 240 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V PASSED
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 338 1128 1157 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.ArrayIndexOutOfBoundsException 1287 1305 974 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 1199 1282 1172 1287 1305 974 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 1026 1287 1305 974 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.ArrayIndexOutOfBoundsException 1287 1305 974 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String; | RETURN | 48940 | return null
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.Quant:pairwiseGTE([I[I)Z
jtb.JavaParser:jj_3R_73()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_74()Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_15()Z
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:pairwiseDivides([I[I)Z
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.tools.jtb.PptNameMatcher:getUngenerifiedType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
utilMDE.MathMDE:mod_positive(JJ)J
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
jtb.visitor.TreeFormatter:space()Ljtb.visitor.FormatCommand;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:ungenerify(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.FuzzyFloat:lt(DD)Z
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
jtb.JavaParser:jj_3R_72()Z
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
utilMDE.MathMDE:missing_numbers([I)[I
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.syntaxtree.TypeBound:accept(Ljtb.visitor.Visitor;)V
daikon.PptSlice1:arity()I
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.PptTopLevel:name()Ljava.lang.String;
jtb.syntaxtree.FormalParameter:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
jtb.JavaParser:jj_3R_57()Z
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
daikon.PptName:toString()Ljava.lang.String;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
jtb.JavaParser:jj_3R_87()Z
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.Quant:eltwiseGTE([I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
jtb.JavaParser:jj_3R_100()Z
utilMDE.Intern:internStrings([Ljava.lang.String;)V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.JavaParser:jj_2_35(I)Z
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
jtb.JavaParser:jj_3R_81()Z
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_2_36(I)Z
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.Type;)V
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:eltwiseEqual([I)Z
jtb.JavaParser:jj_3R_164()Z
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
jtb.JavaParser:jj_3R_133()Z
jtb.JavaParser:jj_2_3(I)Z
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.MathMDE:mod_positive(II)I
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.Quant:eq(DD)Z
daikon.Debug:logDetail()Z
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.Quant:memberOf(I[I)Z
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
jtb.JavaParser:jj_3R_161()Z
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
jtb.JavaParser:jj_3R_47()Z
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.inv.ValueSet:ValueSet(I)V
utilMDE.MathMDE:bitwiseComplement(I)I
jtb.syntaxtree.NodeChoice:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InstanceOfExpression;)V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.Quant:subsetOf([D[D)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_2_10(I)Z
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.ReturnStatement:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
jtb.JavaParser:jj_3R_169()Z
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.Ppt:Ppt()V
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.PostfixExpression:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:eltsLteIndex([I)Z
jtb.JavaParser:jj_3R_117()Z
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.VarInfo:relate_var()V
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:subarray([JII)[J
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_52()Z
jtb.visitor.TreeFormatter:add(Ljtb.visitor.FormatCommand;)V
daikon.ProglangType:isFloat()Z
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
utilMDE.OrderedPairIterator:setnext1()V
jtb.JavaParser:jj_2_1(I)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceBody:ClassOrInterfaceBody(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.UpperBoundCore:calc_range()J
jtb.JavaParser:jj_3R_122()Z
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.VarInfoName.Add:amount()Ljava.lang.String;
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:sum([D)D
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Type;)V
daikon.PptName:isCombinedExitPoint()Z
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_2_5(I)Z
jtb.JavaParser:jj_3_13()Z
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
jtb.JavaParser:jj_3R_77()Z
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:lexLTE([I[I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
utilMDE.UtilMDE:removeWhitespaceAfter(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
jtb.JavaParser:jj_3R_50()Z
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.tools.jtb.Ast:create(Ljava.lang.String;Ljava.lang.String;)Ljtb.syntaxtree.Node;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
utilMDE.MathMDE:sign(I)I
utilMDE.ArraysMDE:max([I)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.ValueTuple:tuplemodHasModified(I)Z
jtb.JavaParser:jj_3R_119()Z
utilMDE.LimitedSizeIntSet:add(I)V
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.Quant:eltsLT([II)Z
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
jtb.syntaxtree.NodeSequence:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.ProglangType:baseIsIntegral()Z
daikon.ProglangType:isIntegral()Z
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:setDiff([I[I)[I
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.JavaParser:jj_3R_63()Z
daikon.inv.unary.LowerBoundCore:computeConfidence()D
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ExclusiveOrExpression;)V
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
jtb.syntaxtree.ReferenceType:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:toString([I)Ljava.lang.String; | OPERATOR | 49349 | > -> ==
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:eltsLtIndex([I)Z
jtb.syntaxtree.NodeListOptional:getParent()Ljtb.syntaxtree.Node;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.ProglangType:isArray()Z
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalOrExpression;)V
utilMDE.UtilMDE:split(Ljava.lang.String;Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.filter.ObviousFilter:ObviousFilter()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArgument;)V
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
jtb.JavaParser:jj_3R_49()Z
utilMDE.ArraysMDE:noDuplicates([I)Z
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.MathMDE:gcd_differences([I)I
jtb.JavaParser:jj_3R_137()Z
jtb.JavaParser:jj_3R_110()Z
jtb.JavaParser:jj_2_13(I)Z
jtb.syntaxtree.FormalParameters:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ConditionalOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
jtb.JavaParser:jj_3R_75()Z
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Invariant:logDetail()Z
daikon.ModBitTracker:num_sets()I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeDeclaration;)V
daikon.Quant:subsetOf([D[F)Z
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
daikon.tools.jtb.Ast:getParameters(Ljtb.syntaxtree.MethodDeclaration;)Ljava.util.List;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.Quant:memberOf(J[J)Z
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Invariants:Invariants()V
utilMDE.ArraysMDE:indexOf([II)I
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeOptional;)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
jtb.JavaCharStream:BeginToken()C
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeSequence;)V
utilMDE.FuzzyFloat:ne(DD)Z
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ReferenceType;)V
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3_30()Z
daikon.ValueTuple:size()I
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
jtb.JavaCharStream:getBeginColumn()I
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryExpression;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.filter.InvariantFilters:InvariantFilters()V
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_85()Z
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_103()Z
utilMDE.WeakHasherMap:size()I
jtb.syntaxtree.ExclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.JavaParser:jj_3R_149()Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
jtb.syntaxtree.TypeParameters:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.TypeArgument:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:memberOf(D[F)Z
jtb.syntaxtree.TypeArguments:accept(Ljtb.visitor.Visitor;)V
utilMDE.FuzzyFloat:lte(DD)Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.test.FormatTestCase:passes()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
jtb.JavaParser:jj_3R_134()Z
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
jtb.syntaxtree.VariableDeclaratorId:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3_1()Z
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.Quant:intersection([I[I)[I
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.tools.jtb.SimpleTreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
jtb.syntaxtree.NodeSequence:elementAt(I)Ljtb.syntaxtree.Node;
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.Quant:lexEqual([I[I)Z
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.tools.jtb.Ast:getType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.Quant:lte(II)Z
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
jtb.JavaParser:jj_3R_136()Z
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
jtb.JavaParser:jj_3R_107()Z
jtb.syntaxtree.Block:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE:pow(II)I
jtb.syntaxtree.TypeArguments:TypeArguments(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeArgument;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
jtb.syntaxtree.EqualityExpression:accept(Ljtb.visitor.Visitor;)V
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.Quant:setEqual([I[I)Z
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.ModBitTracker:ModBitTracker(I)V
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
jtb.JavaParser:jj_3R_54()Z
daikon.Quant:pairwiseLT([I[I)Z
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:jj_3R_106()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.BlockStatement;)V
jtb.JavaParser:jj_3R_56()Z
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
utilMDE.ArraysMDE:sum([[D)D
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
jtb.JavaParser:FormalParameter()Ljtb.syntaxtree.FormalParameter;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
jtb.JavaParser:jj_3R_120()Z
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.tools.jtb.PptNameMatcher:extractPptArgs(Ldaikon.PptName;)Ljava.util.List;
jtb.JavaParser:jj_3R_109()Z
daikon.ModBitTracker:num_samples()I
utilMDE.MathMDE:gcd(JJ)J
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
jtb.JavaParser:jj_3R_101()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryPrefix;)V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
jtb.syntaxtree.PackageDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
jtb.JavaParser:jj_3R_116()Z
daikon.diff.RootNode:RootNode()V
daikon.test.TestQuant:assert_arrays_equals([I[I)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Expression;)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
jtb.syntaxtree.VariableDeclaratorId:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Options.OptionInfo:argument_required()Z
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfo:jml_name()Ljava.lang.String;
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.Quant:eltwiseGT([I)Z
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
jtb.syntaxtree.ClassOrInterfaceBody:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String; | RETURN | 69186 | return null
jtb.JavaParser:jj_3R_121()Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.Quant:lexGTE([I[I)Z
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
jtb.JavaParser:jj_3R_76()Z
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.Quant:subsetOf([B[I)Z
jtb.JavaParser:jj_3R_99()Z
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
jtb.JavaCharStream:getEndColumn()I
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Block;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Name;)V
daikon.Quant:memberOf(F[D)Z
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:copy(Ljava.util.HashMap;)Ljava.util.HashMap;
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_88()Z
jtb.JavaParser:jj_3R_62()Z
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Debug:logOn()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:subsetOf([I[I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameters;)V
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.test.TestQuant:removeAdjacentDups([I)[I
jtb.JavaParser:jj_3R_125()Z
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
jtb.syntaxtree.Statement:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_98()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.VarInfo:name()Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_scan_token(I)Z
jtb.JavaParser:jj_3R_180()Z
daikon.Quant:eq(FF)Z
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.Quant:subsetOf([F[D)Z
jtb.syntaxtree.NodeOptional:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeOptional:NodeOptional()V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
jtb.JavaParser:jj_3R_67()Z
jtb.syntaxtree.ClassOrInterfaceType:accept(Ljtb.visitor.Visitor;)V
daikon.inv.Invariant:getConfidence()D
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
utilMDE.ArraysMDE:sum([I)I
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfo:ioa_name()Ljava.lang.String;
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.Quant:slice([III)[I
jtb.JavaParser:jj_3R_70()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameter;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:intern([D)[D
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3_19()Z
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.MethodDeclarator:accept(Ljtb.visitor.Visitor;)V
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.PrimaryExpression:accept(Ljtb.visitor.Visitor;)V
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3_16()Z
jtb.syntaxtree.VariableDeclaratorId:VariableDeclaratorId(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
utilMDE.ArraysMDE:min_max([I)[I
daikon.tools.jtb.Ast:getClassName(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.Quant:pairwiseSquare([I[I)Z
daikon.tools.jtb.Ast:removeWhitespace(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
jtb.syntaxtree.TypeArgument:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3_35()Z
jtb.visitor.TreeDumper:TreeDumper(Ljava.io.Writer;)V
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.TypeArguments:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.PptName:isEnterPoint()Z
daikon.Quant:eltwiseLT([I)Z
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.Quant:gte(II)Z
daikon.test.TestAst.MethodDeclarationHarvester:visit(Ljtb.syntaxtree.MethodDeclaration;)V
utilMDE.FuzzyFloat:indexOf([DD)I
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.TypeDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.PptSlice1:num_samples()I
jtb.syntaxtree.RelationalExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_163()Z
jtb.JavaParser:jj_3R_86()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PostfixExpression;)V
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3_27()Z
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.Modifiers:accept(Ljtb.visitor.Visitor;)V
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.PptTopLevel.CondIterator:hasNext()Z
jtb.JavaParser:jj_3R_123()Z
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljtb.syntaxtree.Node;)Z
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
utilMDE.ArraysMDE:element_range([I)I
daikon.Quant:concat([I[I)[I
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
jtb.visitor.TreeFormatter:TreeFormatter(II)V
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.CompilationUnit;)V
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameter;)V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eltwiseLTE([I)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArguments;)V
daikon.Quant:pairwiseGT([I[I)Z
jtb.visitor.TreeFormatter:placeToken(Ljtb.syntaxtree.NodeToken;II)V
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
jtb.syntaxtree.ResultType:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NullLiteral;)V
daikon.inv.unary.UpperBoundCore:calc_modulus()J
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakHasherMap:processQueue()V
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.visitor.FormatCommand:getNumCommands()I
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
jtb.JavaParser:jj_3R_114()Z
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;II)V
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeOptional:present()Z
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_105()Z
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.tools.jtb.Ast:quickFixForInternalComment(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.Intern:internSubsequence([JII)[J
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ImportDeclaration;)V
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern:numIntArrays()I
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3_18()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;)V
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.UtilMDE:removeWhitespaceBefore(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3_5()Z
jtb.syntaxtree.ClassOrInterfaceDeclaration:ClassOrInterfaceDeclaration(Ljtb.syntaxtree.NodeChoice;Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ClassOrInterfaceBody;)V
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.PptSlice0:arity()I
jtb.JavaParser:jj_3R_58()Z
jtb.JavaParser:jj_3_12()Z
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
jtb.JavaParser:jj_2_25(I)Z
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
jtb.syntaxtree.AndExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_115()Z
daikon.Quant:lt(II)Z
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReferenceType;)V
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PackageDeclaration;)V
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.tools.jtb.Ast:getParent(Ljava.lang.Class;Ljtb.syntaxtree.Node;)Ljtb.syntaxtree.Node;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.Quant:eltsGtIndex([I)Z
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
jtb.JavaParser:jj_3R_162()Z
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MultiplicativeExpression;)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_126()Z
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.Quant:memberOf(S[S)Z
daikon.tools.jtb.PptNameMatcher:PptNameMatcher(Ljtb.syntaxtree.Node;)V
daikon.tools.jtb.PptNameMatcher:typeMatch(Ljava.lang.String;Ljtb.syntaxtree.FormalParameter;)Z
jtb.syntaxtree.ImportDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
jtb.syntaxtree.NodeSequence:elements()Ljava.util.Enumeration;
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_2_4(I)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
jtb.syntaxtree.TypeDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeListOptional:present()Z
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
daikon.PptName:PptName(Ljava.lang.String;)V
jtb.syntaxtree.NodeSequence:getParent()Ljtb.syntaxtree.Node;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.InclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.LimitedSizeIntSet:size()I
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.PptName:getMethodName()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
jtb.syntaxtree.NodeToken:trimSpecials()V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.Modulus:enabled()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AdditiveExpression;)V
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor.1:visit(Ljtb.syntaxtree.TypeParameter;)V
daikon.Quant:lexNotEqual([I[I)Z
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_104()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.ProglangType:isPseudoArray()Z
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
daikon.simplify.LemmaStack:noticeInt(J)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclarator;)V
jtb.JavaParser:jj_3_36()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.Quant:ne(II)Z
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
utilMDE.Intern:intern([I)[I
jtb.JavaParser:jj_3R_210()Z
utilMDE.ArraysMDE:subarray([III)[I
daikon.Quant:lexGT([I[I)Z
daikon.inv.unary.LowerBoundCore:calc_range()J
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.Quant:pairwiseEqual([I[I)Z
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.inv.Invariant:prob_or(DD)D
daikon.VarInfoName:ioa_name()Ljava.lang.String;
daikon.test.TestAst:checkMatch(Ljava.lang.String;Ljtb.syntaxtree.MethodDeclaration;Ldaikon.tools.jtb.PptNameMatcher;)V
jtb.JavaParser:jj_3_21()Z
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.Quant:eltsGT([II)Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
utilMDE.MathMDE:nonmodulus_strict([I)[I
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.Invariant:prob_and(DDD)D
jtb.JavaCharStream:getBeginLine()I
daikon.VarInfoName.Simple:isLiteralConstant()Z
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReturnStatement;)V
jtb.syntaxtree.PrimaryPrefix:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_80()Z
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
jtb.JavaCharStream:getEndLine()I
daikon.tools.jtb.Ast:print(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltsEqualIndex([I)Z
jtb.JavaParser:jj_3R_96()Z
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
jtb.JavaParser:jj_3_14()Z
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
jtb.syntaxtree.Literal:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Modifiers;)V
jtb.JavaParser:jj_3_20()Z
jtb.JavaParser:jj_3_22()Z
jtb.syntaxtree.NodeChoice:getParent()Ljtb.syntaxtree.Node;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.ProglangType:baseIsFloat()Z
jtb.syntaxtree.NodeListOptional:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeList:NodeList()V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.FuzzyFloat:gt(DD)Z
daikon.VarInfo:new_ppt()V
daikon.Quant:subsetOf([J[J)Z
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | CONSTANT | 3426 | 0 -> -1
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
jtb.JavaCharStream:UpdateLineColumn(C)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameters;)V
jtb.syntaxtree.CompilationUnit:getParent()Ljtb.syntaxtree.Node;
daikon.Quant:memberOf(F[F)Z
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:pow_fast(II)I
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3_3()Z
jtb.syntaxtree.FormalParameter:FormalParameter(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Type;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.VariableDeclaratorId;)V
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern:internSubsequence([III)[I
jtb.JavaParser:jj_3_17()Z
jtb.JavaParserTokenManager:jjStopAtPos(II)I
jtb.JavaParser:jj_2_15(I)Z
jtb.JavaParser:jj_3R_97()Z
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.Quant:eltsGteIndex([I)Z
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.RelationalExpression;)V
jtb.syntaxtree.Name:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeToken:accept(Ljtb.visitor.Visitor;)V
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.PptSlice2:arity()I
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.visitor.TreeFormatter:TreeFormatter()V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.inv.Invariant:isWorthPrinting()Z
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
jtb.JavaCharStream:backup(I)V
jtb.syntaxtree.ClassOrInterfaceBody:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.Node:Node()V
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Quant:eltsNotEqual([II)Z
daikon.diff.InvMap:InvMap()V
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceBody:getParent()Ljtb.syntaxtree.Node;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Statement;)V
daikon.VarInfoName:toString()Ljava.lang.String;
jtb.syntaxtree.TypeDeclaration:TypeDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
utilMDE.FuzzyFloat:gte(DD)Z
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
jtb.syntaxtree.AdditiveExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
jtb.syntaxtree.Type:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE:negate(I)I
utilMDE.MathMDE:modulus([I)[I
jtb.JavaParser:jj_3R_148()Z
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.ProglangType:isScalar()Z
daikon.tools.jtb.Ast:getPackage(Ljtb.syntaxtree.CompilationUnit;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeBound;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;)V
jtb.visitor.FormatCommand:getCommand()I
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
jtb.syntaxtree.ConditionalAndExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.ModBitTracker:num_vars()I
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments;
daikon.Quant:union([I[I)[I
jtb.JavaParserTokenManager:MoreLexicalActions()V
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
jtb.visitor.TreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.MethodDeclaration:getParent()Ljtb.syntaxtree.Node;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
jtb.syntaxtree.CompilationUnit:CompilationUnit(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_48()Z
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_135()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ShiftExpression;)V
utilMDE.Intern:intern([J)[J
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
jtb.JavaParser:jj_2_16(I)Z
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
jtb.Token:newToken(I)Ljtb.Token;
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_69()Z
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eq(JJ)Z
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_102()Z
daikon.VarInfoName:name()Ljava.lang.String;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
jtb.syntaxtree.ConditionalExpression:accept(Ljtb.visitor.Visitor;)V
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.ProglangType:baseIsScalar()Z
jtb.JavaParser:VariableDeclaratorId()Ljtb.syntaxtree.VariableDeclaratorId;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.ProglangType:dimensions()I
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
utilMDE.OrderedPairIterator:hasNext()Z
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
jtb.JavaCharStream:ReadByte()C
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.UnaryExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_2_18(I)Z
utilMDE.ArraysMDE:indexOf([I[I)I
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.inv.unary.scalar.NonZero:enabled()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalExpression;)V
jtb.JavaParser:jj_3_28()Z
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ValueTuple:isMissing(I)Z
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.tools.jtb.SimpleTreeDumper:SimpleTreeDumper(Ljava.io.Writer;)V
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.FuzzyFloat:eq(DD)Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ResultType;)V
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.PptName:getFullClassName()Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljava.lang.String;Ljava.lang.String;Ljava.util.List;)Z
daikon.test.TestAst.ClassOrInterfaceDeclarationHarvester:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
daikon.ValueTuple:isMissingFlow(I)Z
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.inv.Invariant:prob_and(DD)D
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
jtb.visitor.TreeFormatter:processList(Ljtb.syntaxtree.NodeListInterface;Ljtb.visitor.FormatCommand;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | RETURN | 2678 | return null
jtb.JavaParser:jj_3R_53()Z
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.Quant:eq(II)Z
jtb.JavaParser:jj_3R_51()Z
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.inv.Invariant:justified()Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.tools.jtb.SimpleTreeDumper:printToken(Ljava.lang.String;)V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
jtb.JavaParser:jj_3R_108()Z
utilMDE.ArraysMDE:min([I)I
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
jtb.JavaParser:JavaParser(Ljava.io.Reader;)V
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
jtb.visitor.TreeDumper:printToken(Ljava.lang.String;)V
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
jtb.syntaxtree.TypeDeclaration:getParent()Ljtb.syntaxtree.Node;
utilMDE.OrderedPairIterator:setnext2()V
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
jtb.syntaxtree.TypeParameter:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.inv.Invariant:logOn()Z
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AndExpression;)V
jtb.JavaParser:jj_3R_89()Z
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_2_21(I)Z
jtb.JavaParser:jj_3_29()Z
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.Quant:isReverse([I[I)Z
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Literal;)V
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
jtb.syntaxtree.MultiplicativeExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:gt(II)Z
jtb.visitor.FormatCommand:FormatCommand(II)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
jtb.JavaParser:getToken(I)Ljtb.Token;
jtb.JavaParser:jj_2_17(I)Z
daikon.test.InvariantFormatTester:execute()Z
jtb.JavaParser:jj_2_12(I)Z
jtb.JavaParser:jj_ntk()I
jtb.JavaParser:jj_3R_118()Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.Quant:pairwiseLTE([I[I)Z
daikon.PptSlice0:initInvariantsSeen()V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.tools.jtb.Ast:getName(Ljtb.syntaxtree.MethodDeclaration;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3R_124()Z
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpression;)V
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
jtb.visitor.TreeFormatter:processList(Ljtb.syntaxtree.NodeListInterface;)V
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
jtb.JavaCharStream:readChar()C
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InclusiveOrExpression;)V
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.Quant:subsetOf([F[F)Z
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
jtb.syntaxtree.ClassOrInterfaceDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.VarInfo:dbc_name()Ljava.lang.String;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:lexLT([I[I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:hashCode()I
jtb.JavaParser:jj_3R_55()Z
utilMDE.MathMDE:gcd(II)I
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
jtb.syntaxtree.ClassOrInterfaceDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeToken:numSpecials()I
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.MethodDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
jtb.syntaxtree.Expression:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalAndExpression;)V
jtb.syntaxtree.NodeListOptional:elements()Ljava.util.Enumeration;
jtb.JavaParser:jj_3R_60()Z
daikon.PptName:getSignature()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
utilMDE.Assert:assertTrue(Z)V
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
jtb.JavaParser:jj_2_14(I)Z
utilMDE.MathMDE:gcd([I)I
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
utilMDE.UtilMDE:removeWhitespaceAround(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.visitor.TreeFormatter:space(I)Ljtb.visitor.FormatCommand;
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.Quant:noDups([I)Z
utilMDE.UtilMDE:splitLines(Ljava.lang.String;)[Ljava.lang.String;
jtb.syntaxtree.ShiftExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.Quant:eltsGTE([II)Z
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaCharStream:FillBuff()V
daikon.Quant:sameLength([I[I)Z
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.tools.jtb.Ast:create(Ljava.lang.String;[Ljava.lang.Class;[Ljava.lang.Object;Ljava.lang.String;)Ljtb.syntaxtree.Node;
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:concat([I[I)[I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBody;)V
jtb.JavaParser:jj_3_4()Z
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
jtb.syntaxtree.InstanceOfExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.Quant:eltsEqual([II)Z
utilMDE.FuzzyFloat:set_rel_diff(D)V
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:eltwiseNotEqual([I)Z
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.config.Configuration:apply(Ljava.lang.String;)V
utilMDE.ArraysMDE:sum([[I)I
daikon.ModBitTracker:split(I)I
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.filter.ParentFilter:ParentFilter()V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
jtb.JavaParser:jj_3R_61()Z
utilMDE.ArraysMDE:isSubarray([I[II)Z
jtb.syntaxtree.FormalParameter:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.EqualityExpression;)V
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3_10()Z
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
jtb.syntaxtree.CompilationUnit:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.Quant:eltsLTE([II)Z
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.tools.jtb.Ast.1GetParametersVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameters;)V
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.Quant:subsetOf([S[S)Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName:esc_name()Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
jtb.syntaxtree.BlockStatement:accept(Ljtb.visitor.Visitor;)V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.tools.jtb.Ast:format(Ljtb.syntaxtree.Node;)Ljava.lang.String;
jtb.JavaParser:jj_3R_68()Z
jtb.syntaxtree.NullLiteral:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3_25()Z
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.tools.jtb.Ast:typeMatch(Ljava.lang.String;Ljava.lang.String;)Z
daikon.Quant:eltsNotEqualIndex([I)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
349 2 589 2 240 2 19 2 211 2 951 2 1219 2 801 4 1202 2 
191 6 760 2 1186 2 1053 2 774 2 1124 6 1007 2 601 2 161 6 1045 2 73 2 
110 2 543 2 117 2 119 6 15 2 220 4 180 4 126 6 127 2 310 6 1219 2 1202 2 23 6 
353 8 276 16 198 30 1272 2 1011 6 1012 4 155 2 1194 8 105 12 807 26 1202 6 696 2 1167 2 63 10 451 4 170 8 372 10 704 10 916 2 308 10 708 4 221 16 1174 8 1063 2 417 16 664 10 538 2 831 6 1219 6 833 4 
463 4 876 6 
1094 2 
276 2 318 2 8 2 198 6 283 2 152 2 1194 2 689 2 105 2 807 4 692 2 451 2 63 4 700 2 531 2 372 2 704 2 308 2 221 2 417 2 664 2 345 2 831 2 
712 4 276 8 590 2 799 6 372 4 198 14 704 4 1119 2 308 4 221 8 1012 2 417 8 105 5 807 12 853 6 664 4 694 4 
625 4 758 2 89 14 999 2 44 2 970 2 971 2 1005 2 1224 2 51 4 1047 2 326 2 201 2 901 4 803 2 1277 4 56 4 805 2 642 8 405 2 1201 10 365 2 448 4 406 4 778 6 65 2 909 2 1293 62 861 2 337 4 370 2 258 4 868 4 122 2 219 4 1104 2 576 4 790 4 1068 10 755 2 
511 2 437 2 847 2 24 2 1291 2 257 2 1094 2 738 2 1135 2 741 2 
968 2 1260 2 625 2 1113 2 1265 2 45 2 240 2 1047 2 324 2 1272 2 398 2 537 2 176 2 282 2 202 2 576 4 124 2 642 2 1067 2 967 2 
712 4 353 6 276 32 845 4 799 6 241 6 631 6 198 54 1225 4 552 4 683 4 147 6 1011 4 149 2 284 4 1086 8 1194 18 807 48 105 22 853 6 694 4 1202 4 1167 2 451 2 63 6 1294 6 372 16 704 16 1246 2 308 16 179 2 221 32 266 2 417 32 664 16 923 2 831 4 1219 4 1151 2 
778 2 642 2 755 2 
296 10 208 2 336 2 742 2 898 2 1081 22 382 2 959 2 1255 2 205 2 1014 2 39 2 560 2 600 2 
996 3 1 2 349 2 354 1 1002 2 1003 3 194 2 678 2 1006 2 515 24 519 12 12 2 13 2 520 2 521 1 17 1 360 2 21 2 1163 2 693 2 527 8 1166 2 856 32 27 2 1169 2 863 2 216 2 1026 12 872 2 875 2 377 2 536 2 877 1 709 2 30 2 381 2 1030 2 222 32 1032 3 223 16 35 2 387 2 1035 3 391 2 233 2 1038 16 48 2 396 3 1044 2 550 4 722 1 244 3 245 16 896 2 897 4 1189 2 1191 2 899 2 725 1 558 1 903 2 730 2 561 2 1199 4 1202 34 733 2 563 2 565 2 1058 3 737 3 68 4 70 1 924 2 421 6 1219 32 756 2 429 2 1072 2 1075 24 277 1 1076 8 932 2 434 1 281 4 1082 1 770 2 104 2 286 4 775 2 776 4 777 8 290 2 447 2 1231 2 107 5 948 2 112 2 607 2 781 2 950 2 1235 2 299 1 783 2 1097 1 302 1 304 2 1242 3 120 3 121 2 957 2 785 2 1105 2 961 1 965 2 793 2 469 2 470 6 796 2 1259 2 134 3 1114 2 139 3 140 6 329 2 638 16 975 2 1120 1 330 2 484 2 153 2 156 2 1280 2 1282 4 645 2 489 2 490 2 163 2 983 2 984 1 987 2 661 6 1302 2 183 2 825 2 1149 2 506 2 666 2 508 2 668 2 
849 2 
95 2 1202 2 
1092 2 865 2 1202 4 
674 26 672 92 670 2 3 2 5 2 7 2 676 2 679 4 681 224 685 4 16 2 686 2 18 14 688 2 691 8 698 4 702 2 28 2 703 6 705 16 706 2 707 2 710 4 711 32 31 2 33 2 34 4 36 4 37 18 713 2 42 2 43 2 716 6 46 14 717 2 719 2 720 4 50 2 723 2 52 4 53 2 54 2 727 50 57 4 728 12 731 4 60 18 61 2 735 2 69 2 740 4 74 4 75 2 77 2 78 2 79 4 82 2 83 192 745 4 748 6 85 2 86 4 87 2 757 2 88 2 759 2 761 2 762 2 763 2 765 2 766 2 767 4 771 2 111 4 780 244 114 118 782 2 115 2 118 4 123 192 125 6 789 2 788 336 787 4 128 2 791 2 792 2 130 328 793 2 794 4 132 12 131 8 133 6 798 6 135 2 136 2 142 6 141 28 800 2 144 30 145 94 151 182 804 2 806 10 157 4 158 4 160 2 811 6 162 4 164 2 813 6 166 30 817 2 818 2 820 2 173 60 174 2 175 70 822 8 823 2 824 64 177 24 181 2 182 60 185 2 186 2 832 2 189 290 836 2 839 2 193 8 841 4 197 26 842 132 195 4 851 2 852 2 207 2 210 30 862 132 869 6 866 198 870 6 215 2 871 2 217 244 874 6 873 198 218 84 878 2 224 2 226 46 882 26 228 2 230 198 231 12 886 6 884 60 887 10 888 2 889 2 890 4 235 6 239 4 238 54 894 328 895 20 243 4 246 2 249 10 248 6 251 26 904 376 905 8 906 4 253 16 254 4 908 2 256 2 259 2 913 6 912 2 914 2 260 2 261 46 262 8 263 6 917 2 918 64 919 12 265 2 920 26 921 2 269 4 922 2 271 2 272 2 927 6 928 12 929 386 934 4 935 20 939 2 940 228 285 2 941 6 942 20 287 2 944 2 288 2 289 204 292 2 293 198 295 244 297 4 300 2 952 2 954 6 305 198 306 20 956 2 307 6 963 112 964 4 311 2 966 6 313 4 314 2 315 6 316 4 317 2 969 28 319 6 972 28 321 2 322 2 323 14 327 14 331 112 976 4 332 2 977 14 979 4 978 6 333 12 980 106 335 26 982 6 985 2 339 16 341 4 340 4 342 22 343 4 344 2 989 12 991 6 992 2 994 48 348 30 997 2 998 2 351 8 352 2 1000 2 1001 4 1009 4 358 2 1010 6 1013 4 1015 18 366 2 1016 198 1017 2 368 2 1021 74 369 6 371 12 1022 2 374 6 1025 2 1028 2 1029 4 383 4 385 2 1036 6 1039 6 392 2 393 6 394 4 1042 2 1043 2 1049 2 402 28 404 6 1055 52 407 8 408 30 1059 432 410 2 411 2 416 6 415 2 1064 6 1066 2 420 4 1070 6 425 30 424 66 428 6 1071 2 1074 2 1078 8 1079 46 436 6 1083 6 1085 2 440 4 1087 2 1088 2 442 2 1089 8 445 4 1091 2 449 2 450 8 452 2 1093 82 456 2 1096 8 458 4 459 10 1099 4 461 30 1103 4 464 2 466 2 1110 30 475 4 1112 2 478 30 1116 26 1117 2 1121 48 1122 112 1123 4 485 6 488 2 492 12 491 198 493 6 1130 2 1129 22 494 12 497 4 1133 6 1134 2 498 2 499 2 1138 2 500 2 1139 2 1143 6 1144 6 1146 2 1147 6 504 4 510 14 514 2 1153 4 1155 4 516 6 517 14 518 2 1156 2 523 566 1158 20 1159 68 1160 30 524 2 1164 4 1165 2 529 204 530 106 532 2 1171 88 533 86 1175 2 1176 2 541 2 1178 2 1179 6 1181 8 1182 10 544 2 1183 432 1185 182 1184 2 546 2 547 16 549 2 551 2 1188 6 554 2 555 2 1192 4 556 8 1196 6 559 60 1197 6 1200 4 1202 10 1203 2 1205 2 1204 2 564 4 1206 98 1208 6 567 28 568 2 569 2 570 6 1210 160 572 2 573 4 1213 6 574 6 1214 6 1216 2 1215 140 579 8 577 4 580 2 581 26 1217 2 582 2 583 20 1219 10 585 2 587 12 1223 46 592 2 1226 8 1227 4 599 2 602 46 603 2 604 2 1233 8 605 20 1234 6 608 2 1240 112 1243 26 610 6 611 2 612 4 614 6 613 2 1248 6 1249 2 616 2 1251 6 1252 2 619 10 622 30 1256 2 623 2 628 4 630 4 632 22 1267 6 635 2 1271 4 636 2 1274 6 1273 22 1278 2 1279 12 641 4 644 2 1281 4 1286 4 1288 4 648 2 649 24 653 26 655 20 1296 6 658 6 657 6 660 6 1304 198 1306 8 1307 26 1308 6 1310 2 1312 2 667 4 
1102 2 1289 1 167 2 1241 2 
1102 2 1313 2 
907 2 528 2 334 2 1290 2 495 2 71 2 279 2 1023 2 376 2 93 4 764 2 1190 2 900 4 1081 6 270 2 129 2 525 2 487 2 
768 2 1241 2 
427 2 1247 2 626 2 642 2 
427 2 1247 2 626 2 513 2 642 2 990 2 
1102 2 427 2 101 2 225 2 642 2 833 2 
1232 2 255 2 
427 2 545 2 642 2 833 2 
859 2 362 2 
718 2 1238 2 
598 2 214 2 
1152 2 1284 2 
1152 2 718 2 1195 2 
1152 2 718 2 188 2 
834 2 1152 2 718 2 
472 2 1152 2 718 2 
1111 6 427 2 677 2 892 2 359 2 642 2 855 6 826 2 
827 2 477 2 
1102 2 427 2 101 2 513 2 642 2 346 2 833 2 
1102 2 379 2 101 2 
1102 2 101 2 509 2 
1141 2 827 2 1241 2 
1102 2 101 2 
827 2 1254 2 
1102 2 946 2 
827 2 843 2 1241 2 
598 2 384 2 1241 2 
1152 2 1241 2 1162 2 
654 2 362 2 1241 2 
4 2 718 2 1241 2 
81 2 827 2 
1102 2 1257 2 
595 2 598 2 
1152 2 646 2 
444 2 362 2 
718 2 59 2 
827 2 881 2 
718 2 925 2 
743 2 362 2 
1152 2 143 2 
598 2 242 2 
356 2 827 2 843 2 1241 2 
356 2 814 2 827 2 843 2 1241 2 
827 2 29 2 1241 2 
578 2 827 2 1241 2 
1222 2 1050 2 206 2 829 2 
1280 2 
349 2 1002 2 1006 2 12 2 519 8 1163 2 856 4 858 2 1169 2 864 2 872 2 1026 8 875 2 709 2 877 4 381 2 222 6 223 6 35 2 883 2 233 2 236 2 47 2 48 2 897 2 1189 2 899 2 561 2 1199 4 1198 2 1202 26 68 4 70 2 421 2 924 4 1069 2 1219 26 1072 2 1076 2 281 4 1228 2 286 2 776 2 290 2 1231 2 779 2 113 4 607 2 950 2 783 2 302 2 304 2 1100 2 121 2 1101 2 957 2 1105 2 618 4 965 2 793 2 470 4 1258 2 140 6 975 6 153 2 1282 4 490 2 489 2 1285 2 496 2 1136 2 661 2 1145 2 506 2 666 2 668 2 
349 2 1002 2 1006 2 12 2 519 8 1163 2 856 4 858 2 1169 2 864 2 872 2 1026 8 875 2 709 2 877 2 381 2 222 6 223 6 35 2 883 2 233 2 47 2 48 2 897 2 1189 2 899 2 561 2 1199 4 1198 2 1202 26 252 2 68 4 70 2 750 2 421 2 924 4 1069 2 1219 26 1072 2 1076 2 281 4 1228 2 286 2 776 2 290 2 1231 2 779 2 113 4 607 2 950 2 783 2 302 2 304 2 1100 2 121 2 957 2 1105 2 618 4 965 2 793 2 470 6 140 6 975 6 484 2 153 2 156 2 1282 4 490 2 489 2 1285 2 496 2 1136 2 987 2 1299 2 661 2 1145 2 506 2 666 2 668 2 
930 2 
662 2 566 2 
426 4 191 6 838 2 90 2 431 2 931 2 12 2 1007 2 594 2 97 2 281 2 98 2 937 2 1084 8 100 4 204 2 943 4 601 2 947 2 860 2 872 2 709 2 381 2 1031 2 1250 2 786 4 1253 2 465 2 793 2 233 2 234 2 1264 2 49 10 140 4 1045 4 399 4 150 2 1276 2 1124 6 1053 4 161 6 1054 8 732 2 1202 12 1057 2 981 2 651 2 169 2 68 2 1211 2 986 2 178 2 744 2 418 2 751 4 828 2 1219 6 190 2 668 2 995 2 
426 4 191 8 837 2 838 2 90 2 431 2 760 2 931 2 12 2 1007 2 97 2 281 2 98 2 937 2 1084 8 100 4 204 2 943 4 601 2 947 2 860 2 872 2 709 2 381 2 1031 2 1250 2 786 4 1253 2 465 2 621 4 793 2 233 2 234 2 1264 2 49 10 140 4 1045 4 399 4 150 2 1276 2 1124 8 1053 4 1054 8 161 6 732 2 1202 12 1057 2 981 2 651 2 169 2 68 2 656 2 1211 2 986 2 744 2 418 2 751 4 828 2 1219 6 190 2 668 2 995 2 
947 2 426 4 838 2 860 2 1057 2 431 2 986 2 1211 2 1045 2 1031 2 418 2 751 2 1053 2 943 4 1124 2 161 2 995 2 732 2 
426 4 191 6 838 2 90 2 431 2 760 2 931 2 12 2 1007 2 594 2 97 2 281 2 98 2 937 2 1084 4 100 4 204 2 943 4 947 2 860 2 872 2 709 2 381 2 1031 2 1250 2 786 4 1253 2 465 2 793 2 233 2 234 2 1264 2 49 6 140 4 1045 4 399 4 150 2 1276 2 1124 6 1053 4 161 4 1054 4 732 2 1202 12 1057 2 981 2 651 2 169 2 68 2 1211 2 986 2 178 2 744 2 418 2 751 4 828 2 1219 6 190 2 668 2 995 2 
426 4 191 6 838 2 90 2 431 2 931 2 12 2 1007 2 594 2 97 2 281 2 98 2 937 2 1084 4 100 4 204 2 943 4 947 2 860 2 872 2 709 2 381 2 1031 2 1250 2 786 4 1253 2 465 2 793 2 233 2 234 2 1264 2 1186 2 49 6 140 4 1045 4 399 4 150 2 1276 2 1124 4 1053 4 161 6 1054 4 732 2 1202 12 1057 2 981 2 651 2 169 2 68 2 1211 2 986 2 178 2 744 2 418 2 751 4 828 2 1219 6 190 2 668 2 995 2 
426 4 191 6 838 2 90 2 431 2 931 2 12 2 1007 2 594 2 97 2 281 2 98 2 937 2 1084 8 100 4 204 2 943 4 601 2 947 2 860 2 872 2 709 2 381 2 1031 2 1250 2 786 4 1253 2 465 2 793 2 233 2 234 2 1264 2 49 6 140 4 1045 4 399 4 150 2 1276 2 1124 6 1053 4 161 6 1054 4 732 2 1202 12 1057 2 981 2 651 2 169 2 68 2 1211 2 986 2 178 2 744 2 418 2 751 4 828 2 1219 6 190 2 668 2 995 2 
426 4 191 8 838 2 90 2 431 2 931 2 12 2 1007 2 594 2 97 2 281 2 98 2 937 2 1084 8 100 4 204 2 943 4 601 2 947 2 860 2 872 2 709 2 381 2 1031 2 1250 2 786 4 1253 2 465 2 793 2 233 2 234 2 1264 2 1186 2 49 10 140 4 1045 4 399 4 150 2 1276 2 1124 6 1053 4 161 8 1054 8 732 2 1202 12 1057 2 981 2 651 2 169 2 68 2 1211 2 986 2 178 2 744 2 418 2 751 4 828 2 1219 6 190 2 668 2 995 2 
426 4 191 6 838 2 90 2 431 2 931 2 12 2 1007 2 594 2 97 2 281 2 98 2 937 2 1084 8 100 4 204 2 943 4 601 2 947 2 860 2 872 2 709 2 381 2 1031 2 1250 2 786 4 1253 2 465 2 793 2 233 2 234 2 1264 2 49 10 140 4 1045 4 399 4 150 2 1276 2 1124 6 1053 4 161 6 1054 8 732 2 1202 12 1057 2 981 2 651 2 169 2 68 2 1211 2 986 2 178 2 744 2 418 2 751 4 828 2 1219 6 190 2 668 2 995 2 
349 2 673 2 355 8 12 2 1007 4 687 2 690 1 363 7 695 4 697 2 25 1 26 1 1026 4 1027 2 709 2 381 2 1031 2 35 2 386 2 41 6 47 4 48 2 49 2 1045 4 399 8 400 6 401 2 1052 1 403 2 1053 4 732 2 1056 2 1057 2 68 4 72 2 80 2 744 2 418 2 749 6 751 4 421 2 423 2 754 2 426 4 1072 2 90 4 431 2 1076 2 1077 2 95 6 94 2 97 2 98 2 1084 2 100 6 772 6 776 2 1092 6 113 4 783 2 121 2 786 4 465 2 1107 4 793 2 470 6 476 2 140 6 150 2 484 2 153 2 1124 4 161 8 1131 10 496 2 169 2 1142 1 501 6 184 2 828 2 506 12 190 2 191 12 835 6 192 6 838 2 196 6 844 2 519 4 199 2 849 6 204 2 1161 2 856 2 860 2 864 2 872 2 875 2 534 6 222 8 223 6 229 6 883 2 1180 2 233 2 234 2 1186 4 1189 2 897 2 899 2 557 1 250 1 561 2 1199 4 562 6 1202 46 1209 2 1211 2 267 2 1219 24 588 2 931 2 594 2 281 4 937 4 938 2 286 2 943 4 1231 2 947 2 607 2 950 2 953 2 609 6 303 2 1244 2 957 2 309 1 1250 2 1253 2 965 2 627 2 1264 2 1266 1 633 2 1270 2 975 6 1276 2 643 2 1282 4 981 2 650 6 651 2 986 2 987 2 661 2 665 2 1311 7 668 2 995 2 
835 6 191 12 192 6 673 2 349 2 838 2 196 6 355 8 844 2 519 8 12 2 199 2 1007 4 687 2 849 6 204 2 1161 2 695 4 697 2 856 2 860 2 864 2 1026 8 872 2 1027 2 875 2 534 6 709 2 381 2 1031 2 222 8 223 6 35 2 386 2 229 6 883 2 1180 2 41 6 233 2 234 2 47 4 48 2 49 2 1045 4 897 4 399 8 1189 2 899 2 400 6 401 2 403 2 1053 4 561 2 562 6 1199 4 1202 48 732 2 1056 2 1057 2 68 4 1209 2 72 2 1211 2 1062 2 80 2 267 2 744 2 418 2 749 6 751 4 924 2 421 2 1219 26 754 2 423 2 426 4 1072 2 90 4 588 2 431 2 931 2 1077 2 1076 2 94 2 95 6 594 2 97 2 281 4 98 2 938 2 937 4 100 6 1084 6 772 6 286 4 943 4 776 4 601 4 947 2 1231 2 1092 6 113 4 607 2 950 2 783 2 953 2 303 2 609 6 1244 2 121 2 957 2 786 4 1250 2 1253 2 465 2 1107 4 965 2 793 2 624 2 470 6 627 2 476 2 1264 2 633 2 140 6 1270 2 975 6 150 2 1276 2 153 2 484 2 643 2 1124 8 1282 4 161 8 1131 10 981 2 650 6 651 2 169 2 496 2 986 2 987 2 661 2 501 6 184 2 665 2 506 12 828 2 190 2 668 2 995 2 
835 6 191 12 192 6 673 2 349 2 838 2 196 6 355 8 844 2 519 8 12 2 199 2 1007 4 687 2 849 6 204 2 1161 2 695 4 697 2 856 2 860 2 864 2 1026 8 872 2 1027 2 875 2 534 6 709 2 381 2 1031 2 222 8 223 6 35 2 386 2 229 6 883 2 1180 2 41 6 233 2 234 2 47 4 48 2 49 6 1045 4 897 4 399 8 1189 2 899 2 400 6 401 2 403 2 1053 4 561 2 562 6 1199 4 1054 4 1202 48 732 2 1056 2 1057 2 68 4 1209 2 72 2 1211 2 1062 2 80 2 267 2 744 2 418 2 749 6 751 4 924 2 421 2 1219 26 754 2 423 2 426 4 1072 2 90 4 588 2 431 2 931 2 1077 2 1076 2 94 2 95 6 594 2 97 2 281 4 98 2 938 2 937 4 100 6 1084 6 772 6 286 4 943 4 776 4 601 4 947 2 1231 2 1092 6 113 4 607 2 950 2 783 2 953 2 303 2 609 6 1244 2 121 2 957 2 786 4 1250 2 1253 2 465 2 1107 4 965 2 793 2 624 2 470 6 627 2 476 2 1264 2 633 2 140 6 1270 2 975 6 150 2 1276 2 153 2 484 2 643 2 1124 8 1282 4 161 8 1131 10 981 2 650 6 651 2 169 2 496 2 986 2 987 2 661 2 501 6 184 2 665 2 506 12 828 2 190 2 668 2 995 2 
349 2 673 2 1004 6 355 8 10 6 12 2 1007 4 687 2 695 4 697 2 1026 10 1027 2 709 2 381 2 1031 2 35 2 386 2 41 6 714 6 47 4 48 2 49 6 1045 4 399 8 726 2 400 12 401 2 403 2 1053 4 1054 4 732 2 1056 2 64 2 1057 2 67 2 68 4 736 6 739 6 1060 2 72 2 1062 2 80 2 744 2 418 2 749 12 751 4 421 4 423 2 754 2 426 4 1072 2 90 4 760 2 431 2 1076 4 1077 2 92 2 95 12 94 2 97 2 98 2 100 6 1084 6 772 6 443 6 776 4 1092 12 113 6 783 2 121 2 786 4 465 2 1107 4 793 2 470 6 476 2 140 6 150 2 483 6 484 2 153 2 1124 10 161 10 165 6 1131 8 496 2 169 2 501 6 184 2 828 2 506 10 190 2 191 16 835 6 192 6 838 2 196 6 844 2 519 10 199 2 848 2 849 12 204 2 1161 2 856 4 860 2 864 2 872 2 875 2 534 6 535 2 222 12 223 8 229 6 883 4 1180 2 233 2 234 2 1186 2 1189 2 897 4 899 2 561 2 1199 4 562 6 1202 52 1209 2 1211 2 267 2 924 2 1219 24 931 2 594 2 281 4 937 4 938 2 286 4 943 4 601 4 1231 2 947 2 607 2 950 2 1239 2 953 2 609 12 303 2 1244 2 957 2 1250 2 1253 2 965 2 624 2 627 2 1264 2 633 2 1270 2 975 8 1276 2 643 2 1282 4 981 2 650 6 651 2 986 2 659 6 987 2 661 4 665 2 668 2 995 2 
191 4 426 2 838 2 1264 2 931 2 49 4 1007 2 594 2 1045 4 399 2 100 2 1084 6 1276 2 204 2 943 2 1124 6 1053 4 601 2 1054 4 161 6 1202 4 732 2 947 2 1057 2 651 2 986 2 1211 2 744 2 786 2 1250 2 418 2 1253 2 465 2 828 2 190 2 
191 4 838 2 349 2 12 2 1007 2 1008 2 204 2 856 3 1019 2 864 2 872 2 875 2 709 2 381 2 222 8 223 6 35 2 539 2 233 2 391 2 47 2 48 2 49 2 1045 4 399 2 1189 2 899 2 724 3 1053 4 561 2 730 2 1199 4 1202 28 732 2 1057 2 68 4 1211 2 744 2 418 2 421 3 753 2 1219 24 426 2 1072 2 588 2 931 2 594 2 281 4 100 2 1084 6 943 2 601 2 447 2 1231 2 947 2 113 4 607 2 950 2 783 2 121 2 786 2 1250 2 1253 2 465 2 965 2 793 2 470 6 1264 2 140 6 975 6 1276 2 484 2 153 2 1124 6 1280 2 1282 4 161 6 1126 2 981 2 1131 2 651 2 496 2 986 2 987 2 661 3 828 2 506 4 668 2 190 2 
55 2 744 2 828 2 
55 2 744 2 828 2 
191 16 349 2 838 2 844 2 519 4 12 2 682 2 1007 4 695 2 856 2 857 2 860 2 1168 2 864 2 1026 4 872 2 1027 2 875 2 534 2 877 2 709 2 381 2 222 2 223 2 35 2 1034 2 233 2 234 2 47 6 48 2 1186 4 49 6 1045 4 897 4 1189 2 399 4 899 2 55 2 1053 4 561 2 1199 4 1054 4 1202 24 68 4 1211 2 744 6 751 4 1218 2 1219 16 422 4 426 2 274 2 90 2 431 2 760 4 435 2 97 2 281 4 937 4 100 4 1084 6 103 2 286 4 106 2 943 2 945 2 776 4 601 4 1231 2 947 4 607 2 950 2 783 2 1100 4 121 2 957 4 786 2 467 2 1106 2 465 2 468 2 1107 2 965 2 793 2 470 6 627 2 480 2 320 2 140 6 975 2 148 2 1276 2 484 2 153 2 1124 12 1282 4 161 12 647 2 1131 2 169 2 496 2 987 2 505 4 506 4 828 4 668 2 
1037 2 1131 2 476 2 1041 2 320 2 303 2 1297 2 534 2 709 2 662 2 1107 2 106 2 1218 2 506 2 1219 2 995 2 1202 4 
191 16 349 2 838 2 844 2 519 4 12 2 682 2 1007 4 695 2 856 4 857 2 860 2 1168 2 864 2 1026 4 872 2 1027 2 875 2 534 2 709 2 381 2 222 2 223 2 35 2 1034 2 233 2 234 2 47 6 48 2 1186 4 49 6 548 2 1045 4 897 4 399 4 1189 2 899 2 55 2 1053 4 561 2 1199 4 1054 4 1202 24 68 4 1211 2 744 6 751 4 1218 2 1219 16 422 4 426 2 90 4 431 2 760 4 433 2 435 2 97 2 281 4 937 4 100 4 1084 6 103 4 286 4 773 2 106 2 943 2 776 4 601 4 1231 2 947 4 607 2 950 2 783 2 1100 4 121 2 957 4 958 2 786 2 467 2 1106 2 465 2 965 2 793 2 470 6 474 2 627 2 320 2 140 6 975 2 150 2 148 2 1276 2 484 2 153 2 1124 12 1282 4 161 12 647 2 169 2 496 2 987 2 505 4 506 2 828 4 668 2 
191 16 349 2 838 2 844 2 519 4 12 2 682 2 1007 4 695 2 1018 2 856 2 857 2 860 2 1168 2 864 2 1026 4 872 2 1027 2 875 2 534 2 877 1 709 2 381 2 222 2 223 2 879 2 35 2 1034 2 1177 2 233 2 234 2 47 6 48 2 1186 4 49 6 1045 4 897 4 1189 2 399 4 899 2 55 2 1053 4 561 2 1199 4 1054 4 1202 24 68 4 1211 2 744 6 751 4 1218 2 1219 16 422 4 426 2 90 4 431 2 760 4 435 2 97 2 281 4 937 4 100 4 1084 6 103 2 286 4 106 2 943 2 776 4 601 4 1231 2 947 4 607 2 950 2 783 2 457 2 1100 4 121 2 957 4 786 2 467 2 1106 2 465 2 1107 2 965 2 793 2 1108 2 470 6 627 2 320 2 140 6 975 2 150 2 148 2 1276 2 484 2 153 2 1124 12 1282 4 161 12 647 2 1131 2 169 2 496 2 987 2 505 4 506 4 828 4 668 2 
349 2 350 2 675 2 519 6 198 6 12 2 1157 2 357 2 850 2 697 2 367 2 858 4 856 4 1170 2 212 2 372 2 867 2 704 2 1026 6 872 2 875 2 709 2 221 2 381 2 222 12 223 8 32 2 35 2 227 2 40 2 540 2 883 4 388 2 712 2 390 2 233 2 542 2 715 2 47 2 48 2 893 2 395 2 1187 2 1189 2 899 2 1193 2 1194 2 403 2 561 2 729 2 1199 4 1202 28 1056 2 66 2 68 4 1209 2 915 4 413 2 80 2 414 2 417 2 419 2 421 4 1219 22 926 2 1220 2 1072 2 276 2 1076 4 591 2 280 2 593 1 281 4 439 2 769 2 102 2 1229 2 105 2 291 2 1230 2 1231 2 113 6 607 2 298 2 950 2 783 2 1095 2 1098 2 953 2 1244 2 1245 2 121 2 1246 2 784 2 308 2 962 2 965 2 793 2 470 6 471 2 473 2 1262 2 1263 2 799 4 140 6 634 2 973 2 325 4 1118 2 975 8 639 2 640 4 484 2 153 2 486 1 807 4 159 2 1282 4 810 2 1128 2 1292 2 821 2 496 2 338 2 1140 2 987 2 1298 6 661 4 1300 2 1303 2 502 2 664 2 830 2 506 2 668 2 347 2 
797 2 1072 2 275 3 680 2 1269 2 637 4 975 2 1202 2 856 3 699 2 113 2 378 2 661 3 615 2 222 2 1301 2 223 2 663 2 503 2 421 3 752 2 312 2 1219 2 883 6 
797 2 1072 2 275 2 680 2 1269 2 637 4 975 2 1202 2 856 2 699 2 113 2 378 2 661 2 615 2 222 2 1301 2 223 2 663 2 503 2 421 2 752 2 312 2 1219 2 883 6 
797 2 1072 2 275 2 680 2 1269 2 637 4 975 2 1202 2 856 2 699 2 113 2 378 2 661 2 615 2 222 2 1301 2 223 2 663 2 503 2 421 2 752 2 312 2 1219 2 883 6 
1072 2 353 4 276 2 198 5 96 6 1011 2 441 3 856 3 372 2 213 4 704 2 308 2 221 2 462 3 222 2 880 2 38 2 1109 4 1038 2 1115 2 479 2 138 2 245 2 1048 4 247 2 58 3 807 4 1202 10 1132 2 652 2 819 2 409 2 417 2 746 4 663 2 1065 2 664 2 421 3 1219 4 993 4 
353 4 1038 2 1072 2 276 2 1115 2 138 2 479 2 198 4 245 2 96 6 1048 4 1011 2 441 2 247 2 1194 2 58 2 105 2 807 4 1202 10 1167 2 856 2 1132 2 652 2 819 2 213 4 372 2 409 2 704 2 308 2 462 2 221 2 222 2 746 4 417 2 663 2 664 2 1065 2 880 2 38 2 421 2 1219 4 993 4 1109 4 
353 4 1038 2 1072 2 276 2 1115 2 138 2 479 2 198 4 245 2 96 6 1048 4 1011 2 441 2 247 2 1194 2 58 2 105 2 807 4 1202 10 1167 2 856 2 1132 2 652 2 819 2 213 4 372 2 409 2 704 2 308 2 462 2 221 2 222 2 746 4 417 2 663 2 664 2 1065 2 880 2 38 2 421 2 1219 4 993 4 1109 4 
353 4 1038 2 1072 2 276 2 1115 2 138 2 479 2 198 4 245 2 96 6 1048 4 1011 2 441 2 247 2 1194 2 58 2 105 2 807 4 1202 10 1167 2 856 2 1132 2 652 2 819 2 213 4 372 2 409 2 704 2 308 2 462 2 221 2 222 2 746 4 417 2 663 2 664 2 1065 2 880 2 38 2 421 2 1219 4 993 4 1109 4 
353 4 1038 2 1072 2 276 2 1115 2 138 2 479 2 198 4 245 2 96 6 1048 4 1011 2 441 2 247 2 1194 4 58 2 105 4 807 4 1202 10 1167 4 856 2 1132 2 652 2 819 2 213 4 372 2 409 2 704 2 308 2 462 2 221 2 222 2 746 4 417 2 663 2 664 2 1065 2 880 2 38 2 421 2 1219 4 993 4 1109 4 
0 2 858 2 1020 2 6 2 203 2 1154 2 507 2 
413 2 669 2 575 2 264 2 1236 2 1154 2 
389 2 1073 2 1261 2 91 2 200 1 146 1 1275 2 808 2 1090 2 22 2 1202 10 812 2 909 1 209 1 370 1 168 2 455 2 301 2 375 2 412 2 381 2 268 2 749 2 620 2 988 2 1219 8 
712 2 353 4 276 6 1040 2 799 4 591 2 721 2 198 15 683 2 1011 2 1086 2 1194 3 807 12 105 5 1202 6 62 2 1167 2 66 2 949 2 1294 4 372 6 171 2 704 6 308 6 221 6 266 1 417 6 1303 2 84 2 664 6 1219 6 
815 2 1237 2 213 2 373 4 846 2 936 2 802 7 1061 2 1212 1 397 2 1048 2 960 2 1033 2 1148 2 1219 1 364 2 1202 1 1109 2 
815 2 1237 2 213 2 373 4 936 2 846 2 802 6 1061 2 397 2 1048 2 960 4 1033 2 1148 4 364 4 1109 2 
815 2 1237 2 213 2 373 4 936 8 846 2 802 10 1061 2 1212 1 397 2 1048 2 960 8 1033 6 1148 8 1219 1 364 8 1202 1 1109 2 
815 2 1237 2 213 2 373 2 846 2 802 2 1061 2 397 2 1048 2 960 2 1148 2 364 2 1109 2 
586 2 446 1 950 2 1026 2 875 2 965 2 795 1 470 4 974 2 484 2 902 2 486 1 1282 2 1199 2 1127 2 1202 8 1287 2 1292 2 987 2 1305 2 1219 8 
2 2 586 2 584 2 430 2 840 4 512 2 278 2 432 2 9 2 11 2 280 2 1080 2 684 2 597 4 596 2 20 2 361 2 526 2 294 2 108 2 109 2 701 2 453 2 454 2 606 2 298 2 950 2 116 2 1024 2 1026 20 1172 2 875 2 877 2 1173 2 617 2 965 2 470 28 232 2 237 2 629 2 137 2 1268 2 974 2 1046 2 328 2 481 2 482 2 484 2 1051 2 1282 14 1199 14 1283 2 1202 30 1287 2 1207 2 816 2 910 4 911 2 1295 2 76 2 987 2 747 2 1305 2 1219 30 
273 2 586 2 512 2 891 2 278 2 974 2 328 2 482 4 484 4 596 2 154 2 361 2 1282 6 1125 2 1199 6 446 2 809 2 1202 14 1287 2 950 2 911 2 1024 2 571 2 1026 6 875 2 987 4 460 2 1305 2 965 2 187 2 1219 14 470 16 
586 2 273 2 584 2 1221 2 512 4 278 4 933 2 1080 3 522 2 14 2 438 2 99 2 596 2 361 4 854 2 446 2 109 2 950 2 116 2 1024 2 867 2 955 2 1026 13 875 2 380 2 877 2 617 1 965 2 470 23 885 2 891 2 974 2 553 2 328 2 482 6 484 3 902 2 486 2 1282 10 1199 10 1125 2 1127 2 1202 24 1287 2 1292 10 734 2 911 2 172 4 1137 2 987 3 1305 2 1309 2 1150 2 1219 22 
671 2 
